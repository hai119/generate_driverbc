; ModuleID = '../bcout/drivers/scsi/ips.llvm.bc'
source_filename = "drivers/scsi/ips.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_ips_module_init6:\09\09\09"
module asm ".long\09ips_module_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.69, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.68, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.68 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.66, %struct.list_head, %struct.list_head, %union.anon.67 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.64 }
%union.anon.64 = type { %struct.anon.65 }
%struct.anon.65 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.56, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.56 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.57, i32 }
%union.anon.57 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.34, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.34 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.71, %union.anon.72, %union.anon.73, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.76, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.70, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.70 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.71 = type { %struct.hlist_node }
%union.anon.72 = type { %struct.rb_node }
%union.anon.73 = type { %struct.anon.75 }
%struct.anon.75 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.76 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.77, void (i8*)*, i8* }
%union.anon.77 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.78, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.78 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.35, %union.anon.36, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.35 = type { %struct.list_head }
%union.anon.36 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.49, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.48, i32, [12 x i8] }
%union.anon.48 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.49 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.50, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.53 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i64, i64 }
%union.anon.53 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.66 = type { %struct.list_head }
%union.anon.67 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.58, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.59, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.60, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.63, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.58 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.59 = type { %struct.callback_head }
%union.anon.60 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.63 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.61 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.61 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.69 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.IPS_OPTION = type { i8*, i32*, i32 }
%struct.ips_ha = type { [5 x i8], [4 x i32], i32, i8, i8, i8, i16, i16, i32, i32, i32, %struct.ips_stat, %struct.ips_scb*, %struct.ips_scb*, %struct.ips_wait_queue, %struct.ips_copp_queue, %struct.ips_scb_queue, %struct.IPS_IO_CMD*, %struct.IPS_ADAPTER*, %struct.IPS_LD_INFO*, i64, %struct.IPS_ENQ*, %struct.IPS_CONF*, %struct.IPS_NVRAM_P5*, %struct._IPS_SUBSYS*, i8*, i32, i32, i32, i8, i8, i32, i16, i64, i8, i32, i64, [8 x i8], i32, i32, i32, i8*, i8*, %struct.ips_hw_func_t, %struct.pci_dev*, i8*, i32, i32, i64, i64, i8 }
%struct.ips_stat = type { i32, i8*, [4 x i8] }
%struct.ips_scb = type { %union.IPS_HOST_COMMAND, %struct.IPS_DCDB_TABLE, i8, i8, i8, [12 x i8], i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, %union.IPS_SG_LIST, %struct.scsi_cmnd*, %struct.ips_scb*, void (%struct.ips_ha*, %struct.ips_scb*)*, i32, i32, i64 }
%union.IPS_HOST_COMMAND = type { %struct.IPS_IO_CMD }
%struct.IPS_IO_CMD = type { i8, i8, i8, i8, i32, i32, i16, i8, i8, i32, i32 }
%struct.IPS_DCDB_TABLE = type { i8, i8, i16, i32, i8, i8, i8, i8, [12 x i8], [64 x i8], i8, [3 x i8] }
%union.IPS_SG_LIST = type { i8* }
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.ips_wait_queue = type { %struct.scsi_cmnd*, %struct.scsi_cmnd*, i32 }
%struct.ips_copp_queue = type { %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item*, i32 }
%struct.ips_copp_wait_item = type { %struct.scsi_cmnd*, %struct.ips_copp_wait_item* }
%struct.ips_scb_queue = type { %struct.ips_scb*, %struct.ips_scb*, i32 }
%struct.IPS_ADAPTER = type { [129 x %union.IPS_STATUS], %union.IPS_STATUS*, %union.IPS_STATUS*, %union.IPS_STATUS*, i32, i32 }
%union.IPS_STATUS = type { i32 }
%struct.IPS_LD_INFO = type { i8, [3 x i8], [8 x %struct.IPS_DRIVE_INFO] }
%struct.IPS_DRIVE_INFO = type { i8, i8, i8, i8, i32 }
%struct.IPS_ENQ = type { i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], [8 x i32], i8, i8, i16, i8, i8, i8, i8, i16, i8, i8, [64 x i16] }
%struct.IPS_CONF = type { i8, i8, i8, i8, [4 x i8], [12 x i8], [8 x i8], i32, i16, i8, i8, %struct.IPS_HARDWARE, [8 x %struct.IPS_LD], [4 x [16 x %struct.IPS_DEVSTATE]], [512 x i8] }
%struct.IPS_HARDWARE = type { [8 x i8], [8 x i8], i8, i8, i8, i8, i32 }
%struct.IPS_LD = type { i16, i8, i8, i8, i8, i8, i8, i32, [16 x %struct.IPS_CHUNK] }
%struct.IPS_CHUNK = type { i8, i8, i16, i32, i32 }
%struct.IPS_DEVSTATE = type { i8, i8, i8, i8, i32, [28 x i8] }
%struct.IPS_NVRAM_P5 = type { i32, i8, i8, i16, [8 x i8], i8, i8, i8, i8, [4 x i8], [4 x i8], [8 x i8], [8 x i8], [4 x i8], [4 x i8], [16 x i8], [60 x i8] }
%struct._IPS_SUBSYS = type { [128 x i32] }
%struct.ips_hw_func_t = type { i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*, %struct.ips_scb*)*, i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*, i8*, i32, i32)*, i32 (%struct.ips_ha*, i8*, i32, i32)*, {}*, i32 (%struct.ips_ha*)*, {}*, i32 (%struct.ips_ha*)* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.anon.80 = type { i8, i8, i8, i8 }
%struct.IPS_FC_CMD = type { i8, i8, i8, i8, i32, i32, i32, i32, i32 }
%struct.IPS_DCDB_TABLE_TAPE = type { i8, i8, i8, i8, i32, i32, i16, i8, i8, i32, [16 x i8], [56 x i8] }
%struct.IPS_SCSI_INQ_DATA = type { i8, i8, i8, i8, i8, i8, [2 x i8], [8 x i8], [16 x i8], [4 x i8], i8 }
%struct.IPS_LD_CMD = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.IPS_DCDB_CMD = type { i8, i8, i16, i32, i32, i16, i8, i8, i32, i32 }
%struct.IPS_SCSI_REQSEN = type { i8, i8, i8, [4 x i8], i8, [4 x i8], i8, i8, i8, [3 x i8] }
%struct.IPS_SCSI_MODE_PAGE_DATA = type { %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_BLKDESC, %union.anon.81 }
%struct.IPS_SCSI_MODE_PAGE_HEADER = type { i8, i8, i8, i8 }
%struct.IPS_SCSI_MODE_PAGE_BLKDESC = type { i32, i8, i16, i8 }
%union.anon.81 = type { %struct.IPS_SCSI_MODE_PAGE4 }
%struct.IPS_SCSI_MODE_PAGE4 = type { i8, i8, i16, i8, i8, i16, i8, i16, i8, i16, i16, i8, i8, i8, i8, i16, [2 x i8] }
%struct.IPS_SCSI_MODE_PAGE3 = type { i8, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, [3 x i8] }
%struct.IPS_SCSI_MODE_PAGE8 = type { i8, i8, i8, i8, i16, i16, i16, i16 }
%struct.IPS_SCSI_CAPACITY = type { i32, i32 }
%struct.ips_enh_sglist = type { i32, i32, i32, i32 }
%struct.ips_sglist = type { i32, i32 }
%struct.IPS_FFDC_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8 }
%struct.ips_passthru_t = type { [4 x i8], i32, i32, i8*, i32, %struct.ips_scb_pt, i32, i8, i8, i8, i8 }
%struct.ips_scb_pt = type { %union.IPS_HOST_COMMAND, %struct.IPS_DCDB_TABLE, i8, i8, i8, [12 x i8], i32, i32, i32, i8, i8, i16, i32, i32, i32, i32, %union.IPS_SG_LIST*, %struct.scsi_cmnd*, %struct.ips_scb*, void (%struct.ips_ha*, %struct.ips_scb*)* }
%struct.IPS_FLASHFW_CMD = type { i8, i8, i8, i8, i32, i32, i8, i8, i16 }
%struct.tm = type { i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.IPS_CS_CMD = type { i8, i8, i8, i8, i32, i32, i32, i32, i32 }
%struct.IPS_US_CMD = type { i8, i8, i8, i8, i32, i32, i32, i32, i32 }
%struct.IPS_NVRAM_CMD = type { i8, i8, i8, i8, i32, i32, i32, i32, i32 }
%struct.IPS_RESET_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }

@__setup_str_ips_setup = internal constant [5 x i8] c"ips=\00", section ".init.rodata", align 1, !dbg !0
@__setup_ips_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__setup_str_ips_setup, i32 0, i32 0), i32 (i8*)* @ips_setup, i32 0 }, section ".init.setup", align 8, !dbg !6154
@ips_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ips_hot_plug_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([4 x %struct.pci_device_id], [4 x %struct.pci_device_id]* @ips_pci_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @ips_insert_device, void (%struct.pci_dev*)* @ips_remove_device, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !6253
@ips_notifier = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @ips_halt, %struct.notifier_block* null, i32 0 }, align 8, !dbg !6313
@__UNIQUE_ID___addressable_ips_module_init302 = internal global i8* bitcast (i32 ()* @ips_module_init to i8*), section ".discard.addressable", align 8, !dbg !6165
@__exitcall_ips_module_exit = internal global void ()* @ips_module_exit, section ".exitcall.exit", align 8, !dbg !6167
@__UNIQUE_ID_file303 = internal constant [26 x i8] c"ips.file=drivers/scsi/ips\00", section ".modinfo", align 1, !dbg !6171
@__UNIQUE_ID_license304 = internal constant [16 x i8] c"ips.license=GPL\00", section ".modinfo", align 1, !dbg !6176
@__UNIQUE_ID_description305 = internal constant [53 x i8] c"ips.description=IBM ServeRAID Adapter Driver 7.12.05\00", section ".modinfo", align 1, !dbg !6179
@__UNIQUE_ID_version306 = internal constant [20 x i8] c"ips.version=7.12.05\00", section ".modinfo", align 1, !dbg !6184
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0) }, align 8, !dbg !6326
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !6187
@ips_setup.options = internal constant [5 x %struct.IPS_OPTION] [%struct.IPS_OPTION { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32* @ips_force_i2o, i32 0 }, %struct.IPS_OPTION { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32* @ips_force_memio, i32 0 }, %struct.IPS_OPTION { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32* @ips_ioctlsize, i32 8192 }, %struct.IPS_OPTION { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i32* @ips_cd_boot, i32 0 }, %struct.IPS_OPTION { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32* @MaxLiteCmds, i32 32 }], align 16, !dbg !6232
@.str = private unnamed_addr constant [6 x i8] c"noi2o\00", align 1
@ips_force_i2o = internal global i32 1, align 4, !dbg !6243
@.str.1 = private unnamed_addr constant [7 x i8] c"nommap\00", align 1
@ips_force_memio = internal global i32 1, align 4, !dbg !6245
@.str.2 = private unnamed_addr constant [10 x i8] c"ioctlsize\00", align 1
@ips_ioctlsize = internal global i32 8192, align 4, !dbg !6247
@.str.3 = private unnamed_addr constant [7 x i8] c"cdboot\00", align 1
@ips_cd_boot = internal global i32 0, align 4, !dbg !6249
@.str.4 = private unnamed_addr constant [8 x i8] c"maxcmds\00", align 1
@MaxLiteCmds = internal global i32 32, align 4, !dbg !6251
@.str.5 = private unnamed_addr constant [3 x i8] c",.\00", align 1
@ips_hot_plug_name = internal global [4 x i8] c"ips\00", align 1, !dbg !6255
@ips_pci_table = internal global [4 x %struct.pci_device_id] [%struct.pci_device_id { i32 4116, i32 46, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4116, i32 445, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 36869, i32 592, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !6258
@.str.6 = private unnamed_addr constant [4 x i8] c"ips\00", align 1
@ips_hotplug = internal global i32 0, align 4, !dbg !6285
@ips_ha = internal global [16 x %struct.ips_ha*] zeroinitializer, align 16, !dbg !6301
@ips_num_controllers = internal global i32 0, align 4, !dbg !6304
@ips_next_controller = internal global i32 0, align 4, !dbg !6306
@ips_sh = internal global [16 x %struct.Scsi_Host*] zeroinitializer, align 16, !dbg !6308
@.str.7 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.8 = private unnamed_addr constant [40 x i8] c"Unable to allocate temporary ha struct\0A\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"\014Unable to set DMA Mask\0A\00", align 1
@ips_FlashData = internal global i8* null, align 8, !dbg !6261
@ips_flashbusaddr = internal global i64 0, align 8, !dbg !6263
@.str.10 = private unnamed_addr constant [43 x i8] c"Unable to allocate host inquiry structure\0A\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"Unable to allocate host adapt & dummy structures\0A\00", align 1
@.str.12 = private unnamed_addr constant [49 x i8] c"Unable to allocate logical drive info structure\0A\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"Unable to allocate host conf structure\0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"Unable to allocate host NVRAM structure\0A\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"Unable to allocate host subsystem structure\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"Unable to allocate IOCTL data\0A\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Unable to initialize controller\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.18 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@ips_cmd_timeout = internal global i32 60, align 4, !dbg !6265
@.str.19 = private unnamed_addr constant [9 x i8] c"IBM     \00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"SERVERAID       \00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"1.00\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@vmemmap_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.22 = private unnamed_addr constant [27 x i8] c"timeout waiting for post.\0A\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"Flashing Battery PIC, Please wait ...\0A\00", align 1
@.str.24 = private unnamed_addr constant [39 x i8] c"timeout waiting for Battery PIC Flash\0A\00", align 1
@.str.25 = private unnamed_addr constant [42 x i8] c"reset controller fails (post status %x).\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"timeout waiting for config.\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"Spurious interrupt; no ccb.\0A\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"reset controller fails (post status %x %x).\0A\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"ips_issue val [0x%x].\0A\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"ips_issue semaphore chk timeout.\0A\00", align 1
@ips_name = internal constant [4 x i8] c"ips\00", align 1, !dbg !6280
@.str.31 = private unnamed_addr constant [37 x i8] c"Unable to install interrupt handler\0A\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"Unable to allocate a CCB\0A\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"Unable to allocate CCBs\0A\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"drivers/scsi/ips.c\00", align 1
@ips_FlashDataInUse = internal global i64 0, align 8, !dbg !6267
@.str.35 = private unnamed_addr constant [37 x i8] c"\014Unable to allocate a flash buffer\0A\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"failed size sanity check\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !6269
@.str.37 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@phys_base = external dso_local global i64, align 8
@.str.39 = private unnamed_addr constant [31 x i8] c"Spurious interrupt; scb NULL.\0A\00", align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"Spurious interrupt; scsi_cmd not set.\0A\00", align 1
@ips_command_direction = internal global <{ [235 x i8], [20 x i8] }> <{ [235 x i8] cx i8] zeroinitializer }>, align 16, !dbg !6275
@.str.42 = private unnamed_addr constant [40 x i8] c"unable to read config from controller.\0A\00", align 1
@.str.43 = private unnamed_addr constant [35 x i8] c"unable to read controller status.\0A\00", align 1
@.str.44 = private unnamed_addr constant [38 x i8] c"unable to read subsystem parameters.\0A\00", align 1
@.str.45 = private unnamed_addr constant [44 x i8] c"unable to write driver info to controller.\0A\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"unable to read NVRAM page 5.\0A\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"7.12\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c".05 \00", align 1
@.str.49 = private unnamed_addr constant [31 x i8] c"unable to write NVRAM page 5.\0A\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"       ?\00", align 1
@hex_asc_upper = external dso_local constant [0 x i8], align 1
@ips_reset_timeout = internal global i32 300, align 4, !dbg !6283
@ips_driver_template = internal global %struct.scsi_host_template { %struct.module* null, i8* null, i8* (%struct.Scsi_Host*)* @ips_info, i32 (%struct.scsi_device*, i32, i8*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @ips_queue, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* @ips_eh_abort, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* @ips_eh_reset, i32 (%struct.scsi_device*)* null, i32 (%struct.scsi_device*)* @ips_slave_configure, void (%struct.scsi_device*)* null, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* null, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* @ips_biosparam, void (%struct.scsi_device*)* null, i32 (%struct.seq_file*, %struct.Scsi_Host*)* @ips_show_info, i32 (%struct.Scsi_Host*, i8*, i32)* @ips_write_info, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), %struct.proc_dir_entry* null, i32 0, i32 -1, i16 17, i16 0, i32 0, i32 0, i64 0, i64 0, i16 3, i8 0, i32 0, i8 64, i32 0, %struct.device_attribute** null, %struct.device_attribute** null, %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !6287
@.str.51 = private unnamed_addr constant [51 x i8] c"Unable to register controller with SCSI subsystem\0A\00", align 1
@ips_info.buffer = internal global [256 x i8] zeroinitializer, align 16, !dbg !6289
@.str.52 = private unnamed_addr constant [16 x i8] c"%s%s%s Build %d\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"IBM PCI ServeRAID \00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c" <\00", align 1
@ips_adapter_name = internal global [18 x [30 x i8]] [[30 x i8] c"ServeRAID\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID II\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID on motherboard\00\00\00\00\00\00", [30 x i8] c"ServeRAID on motherboard\00\00\00\00\00\00", [30 x i8] c"ServeRAID 3H\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 3L\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 4H\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 4M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 4L\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 4Mx\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 4Lx\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 5i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 5i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 6M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 6i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 7t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 7k\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"ServeRAID 7M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16, !dbg !6295
@.str.55 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.57 = private unnamed_addr constant [31 x i8] c"Reset Request - Flushed Cache\0A\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"Resetting controller.\0A\00", align 1
@.str.59 = private unnamed_addr constant [51 x i8] c"Controller reset failed - controller now offline.\0A\00", align 1
@.str.60 = private unnamed_addr constant [38 x i8] c"\0AIBM ServeRAID General Information:\0A\0A\00", align 1
@.str.61 = private unnamed_addr constant [41 x i8] c"\09Controller Type                   : %s\0A\00", align 1
@.str.62 = private unnamed_addr constant [46 x i8] c"\09Controller Type                   : Unknown\0A\00", align 1
@.str.63 = private unnamed_addr constant [54 x i8] c"\09IO region                         : 0x%x (%d bytes)\0A\00", align 1
@.str.64 = private unnamed_addr constant [54 x i8] c"\09Memory region                     : 0x%x (%d bytes)\0A\00", align 1
@.str.65 = private unnamed_addr constant [44 x i8] c"\09Shared memory address             : 0x%lx\0A\00", align 1
@.str.66 = private unnamed_addr constant [41 x i8] c"\09IRQ number                        : %d\0A\00", align 1
@.str.67 = private unnamed_addr constant [53 x i8] c"\09BIOS Version                      : %c%c%c%c%c%c%c\0A\00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"\09BIOS Version                      : %c%c%c%c%c%c%c%c\0A\00", align 1
@.str.69 = private unnamed_addr constant [53 x i8] c"\09Firmware Version                  : %c%c%c%c%c%c%c\0A\00", align 1
@.str.70 = private unnamed_addr constant [55 x i8] c"\09Firmware Version                  : %c%c%c%c%c%c%c%c\0A\00", align 1
@.str.71 = private unnamed_addr constant [53 x i8] c"\09Boot Block Version                : %c%c%c%c%c%c%c\0A\00", align 1
@.str.72 = private unnamed_addr constant [55 x i8] c"\09Boot Block Version                : %c%c%c%c%c%c%c%c\0A\00", align 1
@.str.73 = private unnamed_addr constant [43 x i8] c"\09Driver Version                    : %s%s\0A\00", align 1
@.str.74 = private unnamed_addr constant [41 x i8] c"\09Driver Build                      : %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [41 x i8] c"\09Max Physical Devices              : %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"\09Max Active Commands               : %d\0A\00", align 1
@.str.77 = private unnamed_addr constant [41 x i8] c"\09Current Queued Commands           : %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [41 x i8] c"\09Current Active Commands           : %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [41 x i8] c"\09Current Queued PT Commands        : %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [41 x i8] c"\09Current Active PT Commands        : %d\0A\00", align 1
@.str.81 = private unnamed_addr constant [44 x i8] c"\014(%s) release, invalid Scsi_Host pointer.\0A\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"Flushing Cache.\0A\00", align 1
@.str.83 = private unnamed_addr constant [19 x i8] c"Incomplete Flush.\0A\00", align 1
@.str.84 = private unnamed_addr constant [20 x i8] c"Flushing Complete.\0A\00", align 1
@ips_released_controllers = internal global i32 0, align 4, !dbg !6311
@.str.85 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"7.12.05\00", align 1
@llvm.used = appending global [9 x i8*] [i8* bitcast (%struct.obs_kernel_param* @__setup_ips_setup to i8*), i8* bitcast (void ()* @ips_module_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_ips_module_init302 to i8*), i8* bitcast (void ()** @__exitcall_ips_module_exit to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_file303, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__UNIQUE_ID_license304, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__UNIQUE_ID_description305, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_version306, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_setup(i8* %ips_str) #0 !dbg !6234 {
entry:
  %ips_str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %key = alloca i8*, align 8
  %value = alloca i8*, align 8
  store i8* %ips_str, i8** %ips_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ips_str.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6337, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.declare(metadata i8** %key, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata i8** %value, metadata !6341, metadata !DIExpression()), !dbg !6342
  br label %while.cond, !dbg !6343

while.cond:                                       ; preds = %for.end, %if.then, %entry
  %call = call i8* @strsep(i8** %ips_str.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !6344
  store i8* %call, i8** %key, align 8, !dbg !6345
  %tobool = icmp ne i8* %call, null, !dbg !6343
  br i1 %tobool, label %while.body, label %while.end, !dbg !6343

while.body:                                       ; preds = %while.cond
  %0 = load i8*, i8** %key, align 8, !dbg !6346
  %1 = load i8, i8* %0, align 1, !dbg !6349
  %tobool1 = icmp ne i8 %1, 0, !dbg !6349
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6350

if.then:                                          ; preds = %while.body
  br label %while.cond, !dbg !6351, !llvm.loop !6352

if.end:                                           ; preds = %while.body
  %2 = load i8*, i8** %key, align 8, !dbg !6354
  %call2 = call i8* @strchr(i8* %2, i32 58) #11, !dbg !6355
  store i8* %call2, i8** %value, align 8, !dbg !6356
  %3 = load i8*, i8** %value, align 8, !dbg !6357
  %tobool3 = icmp ne i8* %3, null, !dbg !6357
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6359

if.then4:                                         ; preds = %if.end
  %4 = load i8*, i8** %value, align 8, !dbg !6360
  %incdec.ptr = getelementptr i8, i8* %4, i32 1, !dbg !6360
  store i8* %incdec.ptr, i8** %value, align 8, !dbg !6360
  store i8 0, i8* %4, align 1, !dbg !6361
  br label %if.end5, !dbg !6362

if.end5:                                          ; preds = %if.then4, %if.end
  store i32 0, i32* %i, align 4, !dbg !6363
  br label %for.cond, !dbg !6365

for.cond:                                         ; preds = %for.inc, %if.end5
  %5 = load i32, i32* %i, align 4, !dbg !6366
  %conv = sext i32 %5 to i64, !dbg !6366
  %cmp = icmp ult i64 %conv, 5, !dbg !6368
  br i1 %cmp, label %for.body, label %for.end, !dbg !6369

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %key, align 8, !dbg !6370
  %7 = load i32, i32* %i, align 4, !dbg !6373
  %idxprom = sext i32 %7 to i64, !dbg !6374
  %arrayidx = getelementptr [5 x %struct.IPS_OPTION], [5 x %struct.IPS_OPTION]* @ips_setup.options, i64 0, i64 %idxprom, !dbg !6374
  %option_name = getelementptr inbounds %struct.IPS_OPTION, %struct.IPS_OPTION* %arrayidx, i32 0, i32 0, !dbg !6375
  %8 = load i8*, i8** %option_name, align 8, !dbg !6375
  %9 = load i32, i32* %i, align 4, !dbg !6376
  %idxprom7 = sext i32 %9 to i64, !dbg !6377
  %arrayidx8 = getelementptr [5 x %struct.IPS_OPTION], [5 x %struct.IPS_OPTION]* @ips_setup.options, i64 0, i64 %idxprom7, !dbg !6377
  %option_name9 = getelementptr inbounds %struct.IPS_OPTION, %struct.IPS_OPTION* %arrayidx8, i32 0, i32 0, !dbg !6378
  %10 = load i8*, i8** %option_name9, align 8, !dbg !6378
  %call10 = call i64 @strlen(i8* %10) #11, !dbg !6379
  %call11 = call i32 @strncasecmp(i8* %6, i8* %8, i64 %call10) #11, !dbg !6380
  %cmp12 = icmp eq i32 %call11, 0, !dbg !6381
  br i1 %cmp12, label %if.then14, label %if.end27, !dbg !6382

if.then14:                                        ; preds = %for.body
  %11 = load i8*, i8** %value, align 8, !dbg !6383
  %tobool15 = icmp ne i8* %11, null, !dbg !6383
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !6386

if.then16:                                        ; preds = %if.then14
  %12 = load i8*, i8** %value, align 8, !dbg !6387
  %call17 = call i64 @simple_strtoul(i8* %12, i8** null, i32 0) #11, !dbg !6388
  %conv18 = trunc i64 %call17 to i32, !dbg !6388
  %13 = load i32, i32* %i, align 4, !dbg !6389
  %idxprom19 = sext i32 %13 to i64, !dbg !6390
  %arrayidx20 = getelementptr [5 x %struct.IPS_OPTION], [5 x %struct.IPS_OPTION]* @ips_setup.options, i64 0, i64 %idxprom19, !dbg !6390
  %option_flag = getelementptr inbounds %struct.IPS_OPTION, %struct.IPS_OPTION* %arrayidx20, i32 0, i32 1, !dbg !6391
  %14 = load i32*, i32** %option_flag, align 8, !dbg !6391
  store i32 %conv18, i32* %14, align 4, !dbg !6392
  br label %if.end26, !dbg !6393

if.else:                                          ; preds = %if.then14
  %15 = load i32, i32* %i, align 4, !dbg !6394
  %idxprom21 = sext i32 %15 to i64, !dbg !6395
  %arrayidx22 = getelementptr [5 x %struct.IPS_OPTION], [5 x %struct.IPS_OPTION]* @ips_setup.options, i64 0, i64 %idxprom21, !dbg !6395
  %option_value = getelementptr inbounds %struct.IPS_OPTION, %struct.IPS_OPTION* %arrayidx22, i32 0, i32 2, !dbg !6396
  %16 = load i32, i32* %option_value, align 8, !dbg !6396
  %17 = load i32, i32* %i, align 4, !dbg !6397
  %idxprom23 = sext i32 %17 to i64, !dbg !6398
  %arrayidx24 = getelementptr [5 x %struct.IPS_OPTION], [5 x %struct.IPS_OPTION]* @ips_setup.options, i64 0, i64 %idxprom23, !dbg !6398
  %option_flag25 = getelementptr inbounds %struct.IPS_OPTION, %struct.IPS_OPTION* %arrayidx24, i32 0, i32 1, !dbg !6399
  %18 = load i32*, i32** %option_flag25, align 8, !dbg !6399
  store i32 %16, i32* %18, align 4, !dbg !6400
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then16
  br label %for.end, !dbg !6401

if.end27:                                         ; preds = %for.body
  br label %for.inc, !dbg !6402

for.inc:                                          ; preds = %if.end27
  %19 = load i32, i32* %i, align 4, !dbg !6403
  %inc = add i32 %19, 1, !dbg !6403
  store i32 %inc, i32* %i, align 4, !dbg !6403
  br label %for.cond, !dbg !6404, !llvm.loop !6405

for.end:                                          ; preds = %if.end26, %for.cond
  br label %while.cond, !dbg !6343, !llvm.loop !6352

while.end:                                        ; preds = %while.cond
  ret i32 1, !dbg !6407
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @ips_module_exit() #1 section ".exit.text" !dbg !6408 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @ips_pci_driver) #11, !dbg !6409
  %call = call i32 @unregister_reboot_notifier(%struct.notifier_block* @ips_notifier) #11, !dbg !6410
  ret void, !dbg !6411
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @unregister_reboot_notifier(%struct.notifier_block*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_module_init() #1 section ".init.text" !dbg !6412 {
entry:
  %retval = alloca i32, align 4
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @ips_pci_driver, %struct.module* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !6415
  %cmp = icmp slt i32 %call, 0, !dbg !6417
  br i1 %cmp, label %if.then, label %if.end, !dbg !6418

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !6419
  br label %return, !dbg !6419

if.end:                                           ; preds = %entry
  store %struct.module* null, %struct.module** getelementptr inbounds (%struct.scsi_host_template, %struct.scsi_host_template* @ips_driver_template, i32 0, i32 0), align 8, !dbg !6420
  call void @ips_order_controllers() #11, !dbg !6421
  %call1 = call i32 @ips_detect(%struct.scsi_host_template* @ips_driver_template) #11, !dbg !6422
  %tobool = icmp ne i32 %call1, 0, !dbg !6422
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !6424

if.then2:                                         ; preds = %if.end
  call void @pci_unregister_driver(%struct.pci_driver* @ips_pci_driver) #11, !dbg !6425
  store i32 -19, i32* %retval, align 4, !dbg !6427
  br label %return, !dbg !6427

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @register_reboot_notifier(%struct.notifier_block* @ips_notifier) #11, !dbg !6428
  store i32 0, i32* %retval, align 4, !dbg !6429
  br label %return, !dbg !6429

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %0 = load i32, i32* %retval, align 4, !dbg !6430
  ret i32 %0, !dbg !6430
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i8* @strsep(i8**, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_insert_device(%struct.pci_dev* %pci_dev, %struct.pci_device_id* %ent) #0 !dbg !6431 {
entry:
  %retval = alloca i32, align 4
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %index = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !6432, metadata !DIExpression()), !dbg !6433
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6436, metadata !DIExpression()), !dbg !6437
  store i32 -1, i32* %index, align 4, !dbg !6437
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6438, metadata !DIExpression()), !dbg !6439
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6440
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #11, !dbg !6441
  store i32 %call, i32* %rc, align 4, !dbg !6442
  %1 = load i32, i32* %rc, align 4, !dbg !6443
  %tobool = icmp ne i32 %1, 0, !dbg !6443
  br i1 %tobool, label %if.then, label %if.end, !dbg !6445

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !6446
  store i32 %2, i32* %retval, align 4, !dbg !6447
  br label %return, !dbg !6447

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6448
  %call1 = call i32 @pci_request_regions(%struct.pci_dev* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !6449
  store i32 %call1, i32* %rc, align 4, !dbg !6450
  %4 = load i32, i32* %rc, align 4, !dbg !6451
  %tobool2 = icmp ne i32 %4, 0, !dbg !6451
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6453

if.then3:                                         ; preds = %if.end
  br label %err_out, !dbg !6454

if.end4:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6455
  %call5 = call i32 @ips_init_phase1(%struct.pci_dev* %5, i32* %index) #11, !dbg !6456
  store i32 %call5, i32* %rc, align 4, !dbg !6457
  %6 = load i32, i32* %rc, align 4, !dbg !6458
  %cmp = icmp eq i32 %6, 8194, !dbg !6460
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !6461

if.then6:                                         ; preds = %if.end4
  %7 = load i32, i32* %index, align 4, !dbg !6462
  %call7 = call i32 @ips_init_phase2(i32 %7) #11, !dbg !6463
  store i32 %call7, i32* %rc, align 4, !dbg !6464
  br label %if.end8, !dbg !6465

if.end8:                                          ; preds = %if.then6, %if.end4
  %8 = load i32, i32* @ips_hotplug, align 4, !dbg !6466
  %tobool9 = icmp ne i32 %8, 0, !dbg !6466
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !6468

if.then10:                                        ; preds = %if.end8
  %9 = load i32, i32* %index, align 4, !dbg !6469
  %call11 = call i32 @ips_register_scsi(i32 %9) #11, !dbg !6471
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6471
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6472

if.then13:                                        ; preds = %if.then10
  %10 = load i32, i32* %index, align 4, !dbg !6473
  %idxprom = sext i32 %10 to i64, !dbg !6475
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !6475
  %11 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !6475
  call void @ips_free(%struct.ips_ha* %11) #11, !dbg !6476
  store i32 -1, i32* %rc, align 4, !dbg !6477
  br label %if.end14, !dbg !6478

if.end14:                                         ; preds = %if.then13, %if.then10
  br label %if.end15, !dbg !6479

if.end15:                                         ; preds = %if.end14, %if.end8
  %12 = load i32, i32* %rc, align 4, !dbg !6480
  %cmp16 = icmp eq i32 %12, 8194, !dbg !6482
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6483

if.then17:                                        ; preds = %if.end15
  %13 = load i32, i32* @ips_num_controllers, align 4, !dbg !6484
  %inc = add i32 %13, 1, !dbg !6484
  store i32 %inc, i32* @ips_num_controllers, align 4, !dbg !6484
  br label %if.end18, !dbg !6485

if.end18:                                         ; preds = %if.then17, %if.end15
  %14 = load i32, i32* @ips_num_controllers, align 4, !dbg !6486
  store i32 %14, i32* @ips_next_controller, align 4, !dbg !6487
  %15 = load i32, i32* %rc, align 4, !dbg !6488
  %cmp19 = icmp slt i32 %15, 0, !dbg !6490
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !6491

if.then20:                                        ; preds = %if.end18
  store i32 -19, i32* %rc, align 4, !dbg !6492
  br label %err_out_regions, !dbg !6494

if.end21:                                         ; preds = %if.end18
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6495
  %17 = load i32, i32* %index, align 4, !dbg !6496
  %idxprom22 = sext i32 %17 to i64, !dbg !6497
  %arrayidx23 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom22, !dbg !6497
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx23, align 8, !dbg !6497
  %19 = bitcast %struct.Scsi_Host* %18 to i8*, !dbg !6497
  call void @pci_set_drvdata(%struct.pci_dev* %16, i8* %19) #11, !dbg !6498
  store i32 0, i32* %retval, align 4, !dbg !6499
  br label %return, !dbg !6499

err_out_regions:                                  ; preds = %if.then20
  call void @llvm.dbg.label(metadata !6500), !dbg !6501
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6502
  call void @pci_release_regions(%struct.pci_dev* %20) #11, !dbg !6503
  br label %err_out, !dbg !6503

err_out:                                          ; preds = %err_out_regions, %if.then3
  call void @llvm.dbg.label(metadata !6504), !dbg !6505
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6506
  call void @pci_disable_device(%struct.pci_dev* %21) #11, !dbg !6507
  %22 = load i32, i32* %rc, align 4, !dbg !6508
  store i32 %22, i32* %retval, align 4, !dbg !6509
  br label %return, !dbg !6509

return:                                           ; preds = %err_out, %if.end21, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !6510
  ret i32 %23, !dbg !6510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_remove_device(%struct.pci_dev* %pci_dev) #0 !dbg !6511 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %sh = alloca %struct.Scsi_Host*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !6512, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %sh, metadata !6514, metadata !DIExpression()), !dbg !6515
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6516
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !6517
  %1 = bitcast i8* %call to %struct.Scsi_Host*, !dbg !6517
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %sh, align 8, !dbg !6515
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6518
  call void @pci_set_drvdata(%struct.pci_dev* %2, i8* null) #11, !dbg !6519
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !6520
  %call1 = call i32 @ips_release(%struct.Scsi_Host* %3) #11, !dbg !6521
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6522
  call void @pci_release_regions(%struct.pci_dev* %4) #11, !dbg !6523
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6524
  call void @pci_disable_device(%struct.pci_dev* %5) #11, !dbg !6525
  ret void, !dbg !6526
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_init_phase1(%struct.pci_dev* %pci_dev, i32* %indexPtr) #0 !dbg !6527 {
entry:
  %s.addr.i.i390 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i390, metadata !6530, metadata !DIExpression()), !dbg !6534
  %flags.addr.i17.i391 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i391, metadata !6542, metadata !DIExpression()), !dbg !6543
  %size.addr.i18.i392 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i392, metadata !6544, metadata !DIExpression()), !dbg !6545
  %ret.i.i393 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i393, metadata !6546, metadata !DIExpression()), !dbg !6547
  %retval.i12.i394 = alloca i32, align 4
  %flags.addr.i13.i395 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i395, metadata !6548, metadata !DIExpression()), !dbg !6552
  %retval.i.i396 = alloca i32, align 4
  %size.addr.i11.i397 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i397, metadata !6554, metadata !DIExpression()), !dbg !6558
  %size.addr.i.i.i398 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i398, metadata !6560, metadata !DIExpression()), !dbg !6564
  %flags.addr.i.i.i399 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i399, metadata !6569, metadata !DIExpression()), !dbg !6570
  %order.addr.i.i.i400 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i400, metadata !6571, metadata !DIExpression()), !dbg !6572
  %size.addr.i.i401 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i401, metadata !6573, metadata !DIExpression()), !dbg !6574
  %flags.addr.i.i402 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i402, metadata !6575, metadata !DIExpression()), !dbg !6576
  %order.i.i403 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i403, metadata !6577, metadata !DIExpression()), !dbg !6578
  %retval.i404 = alloca i8*, align 8
  %size.addr.i405 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i405, metadata !6579, metadata !DIExpression()), !dbg !6580
  %flags.addr.i406 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i406, metadata !6581, metadata !DIExpression()), !dbg !6582
  %index.i407 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i407, metadata !6583, metadata !DIExpression()), !dbg !6584
  %s.addr.i.i245 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i245, metadata !6530, metadata !DIExpression()), !dbg !6585
  %flags.addr.i17.i246 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i246, metadata !6542, metadata !DIExpression()), !dbg !6588
  %size.addr.i18.i247 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i247, metadata !6544, metadata !DIExpression()), !dbg !6589
  %ret.i.i248 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i248, metadata !6546, metadata !DIExpression()), !dbg !6590
  %retval.i12.i249 = alloca i32, align 4
  %flags.addr.i13.i250 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i250, metadata !6548, metadata !DIExpression()), !dbg !6591
  %retval.i.i251 = alloca i32, align 4
  %size.addr.i11.i252 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i252, metadata !6554, metadata !DIExpression()), !dbg !6593
  %size.addr.i.i.i253 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i253, metadata !6560, metadata !DIExpression()), !dbg !6595
  %flags.addr.i.i.i254 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i254, metadata !6569, metadata !DIExpression()), !dbg !6598
  %order.addr.i.i.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i255, metadata !6571, metadata !DIExpression()), !dbg !6599
  %size.addr.i.i256 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i256, metadata !6573, metadata !DIExpression()), !dbg !6600
  %flags.addr.i.i257 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i257, metadata !6575, metadata !DIExpression()), !dbg !6601
  %order.i.i258 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i258, metadata !6577, metadata !DIExpression()), !dbg !6602
  %retval.i259 = alloca i8*, align 8
  %size.addr.i260 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i260, metadata !6579, metadata !DIExpression()), !dbg !6603
  %flags.addr.i261 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i261, metadata !6581, metadata !DIExpression()), !dbg !6604
  %index.i262 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i262, metadata !6583, metadata !DIExpression()), !dbg !6605
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6530, metadata !DIExpression()), !dbg !6606
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6542, metadata !DIExpression()), !dbg !6609
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6544, metadata !DIExpression()), !dbg !6610
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6546, metadata !DIExpression()), !dbg !6611
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6548, metadata !DIExpression()), !dbg !6612
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6554, metadata !DIExpression()), !dbg !6614
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6560, metadata !DIExpression()), !dbg !6616
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6569, metadata !DIExpression()), !dbg !6619
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6571, metadata !DIExpression()), !dbg !6620
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6573, metadata !DIExpression()), !dbg !6621
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6575, metadata !DIExpression()), !dbg !6622
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6577, metadata !DIExpression()), !dbg !6623
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6579, metadata !DIExpression()), !dbg !6624
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6581, metadata !DIExpression()), !dbg !6625
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6583, metadata !DIExpression()), !dbg !6626
  %retval = alloca i32, align 4
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %indexPtr.addr = alloca i32*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %io_addr = alloca i32, align 4
  %mem_addr = alloca i32, align 4
  %io_len = alloca i32, align 4
  %mem_len = alloca i32, align 4
  %j = alloca i32, align 4
  %index = alloca i32, align 4
  %dma_address = alloca i64, align 8
  %ioremap_ptr = alloca i8*, align 8
  %mem_ptr = alloca i8*, align 8
  %IsDead = alloca i32, align 4
  %base = alloca i32, align 4
  %offs = alloca i32, align 4
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !6627, metadata !DIExpression()), !dbg !6628
  store i32* %indexPtr, i32** %indexPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %indexPtr.addr, metadata !6629, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !6631, metadata !DIExpression()), !dbg !6632
  call void @llvm.dbg.declare(metadata i32* %io_addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %mem_addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata i32* %io_len, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %mem_len, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.declare(metadata i64* %dma_address, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata i8** %ioremap_ptr, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata i8** %mem_ptr, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata i32* %IsDead, metadata !6651, metadata !DIExpression()), !dbg !6652
  store i32 16, i32* %index, align 4, !dbg !6653
  store i32 0, i32* %j, align 4, !dbg !6654
  br label %for.cond, !dbg !6656

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !6657
  %cmp = icmp slt i32 %0, 16, !dbg !6659
  br i1 %cmp, label %for.body, label %for.end, !dbg !6660

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !6661
  %idxprom = sext i32 %1 to i64, !dbg !6664
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !6664
  %2 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !6664
  %cmp1 = icmp eq %struct.ips_ha* %2, null, !dbg !6665
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6666

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %j, align 4, !dbg !6667
  store i32 %3, i32* %index, align 4, !dbg !6669
  br label %for.end, !dbg !6670

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6671

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %j, align 4, !dbg !6672
  %inc = add i32 %4, 1, !dbg !6672
  store i32 %inc, i32* %j, align 4, !dbg !6672
  br label %for.cond, !dbg !6673, !llvm.loop !6674

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %index, align 4, !dbg !6676
  %cmp2 = icmp sge i32 %5, 16, !dbg !6678
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6679

if.then3:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !6680
  br label %return, !dbg !6680

if.end4:                                          ; preds = %for.end
  store i32 0, i32* %mem_addr, align 4, !dbg !6681
  store i32 0, i32* %io_addr, align 4, !dbg !6682
  store i32 0, i32* %mem_len, align 4, !dbg !6683
  store i32 0, i32* %io_len, align 4, !dbg !6684
  store i32 0, i32* %j, align 4, !dbg !6685
  br label %for.cond5, !dbg !6687

for.cond5:                                        ; preds = %for.inc83, %if.end4
  %6 = load i32, i32* %j, align 4, !dbg !6688
  %cmp6 = icmp slt i32 %6, 2, !dbg !6690
  br i1 %cmp6, label %for.body7, label %for.end85, !dbg !6691

for.body7:                                        ; preds = %for.cond5
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6692
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !6692
  %8 = load i32, i32* %j, align 4, !dbg !6692
  %idxprom8 = sext i32 %8 to i64, !dbg !6692
  %arrayidx9 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom8, !dbg !6692
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx9, i32 0, i32 0, !dbg !6692
  %9 = load i64, i64* %start, align 8, !dbg !6692
  %tobool = icmp ne i64 %9, 0, !dbg !6692
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !6695

if.then10:                                        ; preds = %for.body7
  br label %for.end85, !dbg !6696

if.end11:                                         ; preds = %for.body7
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6697
  %resource12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !6697
  %11 = load i32, i32* %j, align 4, !dbg !6697
  %idxprom13 = sext i32 %11 to i64, !dbg !6697
  %arrayidx14 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource12, i64 0, i64 %idxprom13, !dbg !6697
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx14, i32 0, i32 3, !dbg !6697
  %12 = load i64, i64* %flags, align 8, !dbg !6697
  %and = and i64 %12, 256, !dbg !6699
  %tobool15 = icmp ne i64 %and, 0, !dbg !6699
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !6700

if.then16:                                        ; preds = %if.end11
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6701
  %resource17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 44, !dbg !6701
  %14 = load i32, i32* %j, align 4, !dbg !6701
  %idxprom18 = sext i32 %14 to i64, !dbg !6701
  %arrayidx19 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource17, i64 0, i64 %idxprom18, !dbg !6701
  %start20 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx19, i32 0, i32 0, !dbg !6701
  %15 = load i64, i64* %start20, align 8, !dbg !6701
  %conv = trunc i64 %15 to i32, !dbg !6701
  store i32 %conv, i32* %io_addr, align 4, !dbg !6703
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6704
  %resource21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !6704
  %17 = load i32, i32* %j, align 4, !dbg !6704
  %idxprom22 = sext i32 %17 to i64, !dbg !6704
  %arrayidx23 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource21, i64 0, i64 %idxprom22, !dbg !6704
  %start24 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx23, i32 0, i32 0, !dbg !6704
  %18 = load i64, i64* %start24, align 8, !dbg !6704
  %cmp25 = icmp eq i64 %18, 0, !dbg !6704
  br i1 %cmp25, label %land.lhs.true, label %cond.false, !dbg !6704

land.lhs.true:                                    ; preds = %if.then16
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6704
  %resource27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 44, !dbg !6704
  %20 = load i32, i32* %j, align 4, !dbg !6704
  %idxprom28 = sext i32 %20 to i64, !dbg !6704
  %arrayidx29 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource27, i64 0, i64 %idxprom28, !dbg !6704
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx29, i32 0, i32 1, !dbg !6704
  %21 = load i64, i64* %end, align 8, !dbg !6704
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6704
  %resource30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 44, !dbg !6704
  %23 = load i32, i32* %j, align 4, !dbg !6704
  %idxprom31 = sext i32 %23 to i64, !dbg !6704
  %arrayidx32 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource30, i64 0, i64 %idxprom31, !dbg !6704
  %start33 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx32, i32 0, i32 0, !dbg !6704
  %24 = load i64, i64* %start33, align 8, !dbg !6704
  %cmp34 = icmp eq i64 %21, %24, !dbg !6704
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !6704

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !6704

cond.false:                                       ; preds = %land.lhs.true, %if.then16
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6704
  %resource36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 44, !dbg !6704
  %26 = load i32, i32* %j, align 4, !dbg !6704
  %idxprom37 = sext i32 %26 to i64, !dbg !6704
  %arrayidx38 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource36, i64 0, i64 %idxprom37, !dbg !6704
  %end39 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx38, i32 0, i32 1, !dbg !6704
  %27 = load i64, i64* %end39, align 8, !dbg !6704
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6704
  %resource40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 44, !dbg !6704
  %29 = load i32, i32* %j, align 4, !dbg !6704
  %idxprom41 = sext i32 %29 to i64, !dbg !6704
  %arrayidx42 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource40, i64 0, i64 %idxprom41, !dbg !6704
  %start43 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx42, i32 0, i32 0, !dbg !6704
  %30 = load i64, i64* %start43, align 8, !dbg !6704
  %sub = sub i64 %27, %30, !dbg !6704
  %add = add i64 %sub, 1, !dbg !6704
  br label %cond.end, !dbg !6704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !6704
  %conv44 = trunc i64 %cond to i32, !dbg !6704
  store i32 %conv44, i32* %io_len, align 4, !dbg !6705
  br label %if.end82, !dbg !6706

if.else:                                          ; preds = %if.end11
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6707
  %resource45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 44, !dbg !6707
  %32 = load i32, i32* %j, align 4, !dbg !6707
  %idxprom46 = sext i32 %32 to i64, !dbg !6707
  %arrayidx47 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource45, i64 0, i64 %idxprom46, !dbg !6707
  %start48 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx47, i32 0, i32 0, !dbg !6707
  %33 = load i64, i64* %start48, align 8, !dbg !6707
  %conv49 = trunc i64 %33 to i32, !dbg !6707
  store i32 %conv49, i32* %mem_addr, align 4, !dbg !6709
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6710
  %resource50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 44, !dbg !6710
  %35 = load i32, i32* %j, align 4, !dbg !6710
  %idxprom51 = sext i32 %35 to i64, !dbg !6710
  %arrayidx52 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource50, i64 0, i64 %idxprom51, !dbg !6710
  %start53 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx52, i32 0, i32 0, !dbg !6710
  %36 = load i64, i64* %start53, align 8, !dbg !6710
  %cmp54 = icmp eq i64 %36, 0, !dbg !6710
  br i1 %cmp54, label %land.lhs.true56, label %cond.false68, !dbg !6710

land.lhs.true56:                                  ; preds = %if.else
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6710
  %resource57 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !6710
  %38 = load i32, i32* %j, align 4, !dbg !6710
  %idxprom58 = sext i32 %38 to i64, !dbg !6710
  %arrayidx59 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource57, i64 0, i64 %idxprom58, !dbg !6710
  %end60 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx59, i32 0, i32 1, !dbg !6710
  %39 = load i64, i64* %end60, align 8, !dbg !6710
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6710
  %resource61 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 44, !dbg !6710
  %41 = load i32, i32* %j, align 4, !dbg !6710
  %idxprom62 = sext i32 %41 to i64, !dbg !6710
  %arrayidx63 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource61, i64 0, i64 %idxprom62, !dbg !6710
  %start64 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx63, i32 0, i32 0, !dbg !6710
  %42 = load i64, i64* %start64, align 8, !dbg !6710
  %cmp65 = icmp eq i64 %39, %42, !dbg !6710
  br i1 %cmp65, label %cond.true67, label %cond.false68, !dbg !6710

cond.true67:                                      ; preds = %land.lhs.true56
  br label %cond.end79, !dbg !6710

cond.false68:                                     ; preds = %land.lhs.true56, %if.else
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6710
  %resource69 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 44, !dbg !6710
  %44 = load i32, i32* %j, align 4, !dbg !6710
  %idxprom70 = sext i32 %44 to i64, !dbg !6710
  %arrayidx71 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource69, i64 0, i64 %idxprom70, !dbg !6710
  %end72 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx71, i32 0, i32 1, !dbg !6710
  %45 = load i64, i64* %end72, align 8, !dbg !6710
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6710
  %resource73 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 44, !dbg !6710
  %47 = load i32, i32* %j, align 4, !dbg !6710
  %idxprom74 = sext i32 %47 to i64, !dbg !6710
  %arrayidx75 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource73, i64 0, i64 %idxprom74, !dbg !6710
  %start76 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx75, i32 0, i32 0, !dbg !6710
  %48 = load i64, i64* %start76, align 8, !dbg !6710
  %sub77 = sub i64 %45, %48, !dbg !6710
  %add78 = add i64 %sub77, 1, !dbg !6710
  br label %cond.end79, !dbg !6710

cond.end79:                                       ; preds = %cond.false68, %cond.true67
  %cond80 = phi i64 [ 0, %cond.true67 ], [ %add78, %cond.false68 ], !dbg !6710
  %conv81 = trunc i64 %cond80 to i32, !dbg !6710
  store i32 %conv81, i32* %mem_len, align 4, !dbg !6711
  br label %if.end82

if.end82:                                         ; preds = %cond.end79, %cond.end
  br label %for.inc83, !dbg !6712

for.inc83:                                        ; preds = %if.end82
  %49 = load i32, i32* %j, align 4, !dbg !6713
  %inc84 = add i32 %49, 1, !dbg !6713
  store i32 %inc84, i32* %j, align 4, !dbg !6713
  br label %for.cond5, !dbg !6714, !llvm.loop !6715

for.end85:                                        ; preds = %if.then10, %for.cond5
  %50 = load i32, i32* %mem_addr, align 4, !dbg !6717
  %tobool86 = icmp ne i32 %50, 0, !dbg !6717
  br i1 %tobool86, label %if.then87, label %if.else96, !dbg !6719

if.then87:                                        ; preds = %for.end85
  call void @llvm.dbg.declare(metadata i32* %base, metadata !6720, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !6723, metadata !DIExpression()), !dbg !6724
  %51 = load i32, i32* %mem_addr, align 4, !dbg !6725
  %conv88 = zext i32 %51 to i64, !dbg !6725
  %and89 = and i64 %conv88, -4096, !dbg !6726
  %conv90 = trunc i64 %and89 to i32, !dbg !6725
  store i32 %conv90, i32* %base, align 4, !dbg !6727
  %52 = load i32, i32* %mem_addr, align 4, !dbg !6728
  %53 = load i32, i32* %base, align 4, !dbg !6729
  %sub91 = sub i32 %52, %53, !dbg !6730
  store i32 %sub91, i32* %offs, align 4, !dbg !6731
  %54 = load i32, i32* %base, align 4, !dbg !6732
  %conv92 = zext i32 %54 to i64, !dbg !6732
  %call = call i8* @ioremap(i64 %conv92, i64 4096) #11, !dbg !6733
  store i8* %call, i8** %ioremap_ptr, align 8, !dbg !6734
  %55 = load i8*, i8** %ioremap_ptr, align 8, !dbg !6735
  %tobool93 = icmp ne i8* %55, null, !dbg !6735
  br i1 %tobool93, label %if.end95, label %if.then94, !dbg !6737

if.then94:                                        ; preds = %if.then87
  store i32 -1, i32* %retval, align 4, !dbg !6738
  br label %return, !dbg !6738

if.end95:                                         ; preds = %if.then87
  %56 = load i8*, i8** %ioremap_ptr, align 8, !dbg !6739
  %57 = load i32, i32* %offs, align 4, !dbg !6740
  %idx.ext = zext i32 %57 to i64, !dbg !6741
  %add.ptr = getelementptr i8, i8* %56, i64 %idx.ext, !dbg !6741
  store i8* %add.ptr, i8** %mem_ptr, align 8, !dbg !6742
  br label %if.end97, !dbg !6743

if.else96:                                        ; preds = %for.end85
  store i8* null, i8** %ioremap_ptr, align 8, !dbg !6744
  store i8* null, i8** %mem_ptr, align 8, !dbg !6746
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.end95
  %call98 = call i8* @kzalloc(i64 464, i32 3264) #11, !dbg !6747
  %58 = bitcast i8* %call98 to %struct.ips_ha*, !dbg !6747
  store %struct.ips_ha* %58, %struct.ips_ha** %ha, align 8, !dbg !6748
  %59 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6749
  %cmp99 = icmp eq %struct.ips_ha* %59, null, !dbg !6751
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !6752

if.then101:                                       ; preds = %if.end97
  %60 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6753
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %60, i32 0, i32 41, !dbg !6753
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !6753
  store i32 -1, i32* %retval, align 4, !dbg !6755
  br label %return, !dbg !6755

if.end102:                                        ; preds = %if.end97
  %61 = load i32, i32* %index, align 4, !dbg !6756
  %idxprom103 = sext i32 %61 to i64, !dbg !6757
  %arrayidx104 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom103, !dbg !6757
  store %struct.Scsi_Host* null, %struct.Scsi_Host** %arrayidx104, align 8, !dbg !6758
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6759
  %63 = load i32, i32* %index, align 4, !dbg !6760
  %idxprom105 = sext i32 %63 to i64, !dbg !6761
  %arrayidx106 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom105, !dbg !6761
  store %struct.ips_ha* %62, %struct.ips_ha** %arrayidx106, align 8, !dbg !6762
  %64 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6763
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %64, i32 0, i32 30, !dbg !6764
  store i8 1, i8* %active, align 1, !dbg !6765
  %65 = load i32, i32* %io_addr, align 4, !dbg !6766
  %66 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6767
  %io_addr107 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %66, i32 0, i32 2, !dbg !6768
  store i32 %65, i32* %io_addr107, align 8, !dbg !6769
  %67 = load i32, i32* %io_len, align 4, !dbg !6770
  %68 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6771
  %io_len108 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %68, i32 0, i32 39, !dbg !6772
  store i32 %67, i32* %io_len108, align 4, !dbg !6773
  %69 = load i32, i32* %mem_addr, align 4, !dbg !6774
  %70 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6775
  %mem_addr109 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %70, i32 0, i32 38, !dbg !6776
  store i32 %69, i32* %mem_addr109, align 8, !dbg !6777
  %71 = load i32, i32* %mem_len, align 4, !dbg !6778
  %72 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6779
  %mem_len110 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %72, i32 0, i32 40, !dbg !6780
  store i32 %71, i32* %mem_len110, align 8, !dbg !6781
  %73 = load i8*, i8** %mem_ptr, align 8, !dbg !6782
  %74 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6783
  %mem_ptr111 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %74, i32 0, i32 41, !dbg !6784
  store i8* %73, i8** %mem_ptr111, align 8, !dbg !6785
  %75 = load i8*, i8** %ioremap_ptr, align 8, !dbg !6786
  %76 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6787
  %ioremap_ptr112 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %76, i32 0, i32 42, !dbg !6788
  store i8* %75, i8** %ioremap_ptr112, align 8, !dbg !6789
  %77 = load i32, i32* %index, align 4, !dbg !6790
  %conv113 = trunc i32 %77 to i16, !dbg !6791
  %78 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6792
  %host_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %78, i32 0, i32 7, !dbg !6793
  store i16 %conv113, i16* %host_num, align 2, !dbg !6794
  %79 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6795
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %79, i32 0, i32 6, !dbg !6795
  %80 = load i32, i32* %devfn, align 8, !dbg !6795
  %shr = lshr i32 %80, 3, !dbg !6795
  %and114 = and i32 %shr, 31, !dbg !6795
  %conv115 = trunc i32 %and114 to i8, !dbg !6795
  %81 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6796
  %slot_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %81, i32 0, i32 34, !dbg !6797
  store i8 %conv115, i8* %slot_num, align 8, !dbg !6798
  %82 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6799
  %83 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6800
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %83, i32 0, i32 44, !dbg !6801
  store %struct.pci_dev* %82, %struct.pci_dev** %pcidev, align 8, !dbg !6802
  %84 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6803
  %pcidev116 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %84, i32 0, i32 44, !dbg !6803
  %85 = load %struct.pci_dev*, %struct.pci_dev** %pcidev116, align 8, !dbg !6803
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 8, !dbg !6803
  %86 = load i16, i16* %device, align 2, !dbg !6803
  %conv117 = zext i16 %86 to i32, !dbg !6803
  %cmp118 = icmp eq i32 %conv117, 445, !dbg !6803
  br i1 %cmp118, label %land.lhs.true125, label %lor.lhs.false, !dbg !6803

lor.lhs.false:                                    ; preds = %if.end102
  %87 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6803
  %pcidev120 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %87, i32 0, i32 44, !dbg !6803
  %88 = load %struct.pci_dev*, %struct.pci_dev** %pcidev120, align 8, !dbg !6803
  %device121 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %88, i32 0, i32 8, !dbg !6803
  %89 = load i16, i16* %device121, align 2, !dbg !6803
  %conv122 = zext i16 %89 to i32, !dbg !6803
  %cmp123 = icmp eq i32 %conv122, 592, !dbg !6803
  br i1 %cmp123, label %land.lhs.true125, label %if.else132, !dbg !6805

land.lhs.true125:                                 ; preds = %lor.lhs.false, %if.end102
  %90 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6806
  %pcidev126 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %90, i32 0, i32 44, !dbg !6807
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pcidev126, align 8, !dbg !6807
  %dev127 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %91, i32 0, i32 41, !dbg !6808
  %call128 = call i32 @dma_set_mask(%struct.device* %dev127, i64 -1) #11, !dbg !6809
  %tobool129 = icmp ne i32 %call128, 0, !dbg !6809
  br i1 %tobool129, label %if.else132, label %if.then130, !dbg !6810

if.then130:                                       ; preds = %land.lhs.true125
  %92 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6811
  %flags131 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %92, i32 0, i32 28, !dbg !6813
  %93 = load i32, i32* %flags131, align 8, !dbg !6814
  %or = or i32 %93, 1, !dbg !6814
  store i32 %or, i32* %flags131, align 8, !dbg !6814
  br label %if.end142, !dbg !6815

if.else132:                                       ; preds = %land.lhs.true125, %lor.lhs.false
  %94 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6816
  %pcidev133 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %94, i32 0, i32 44, !dbg !6819
  %95 = load %struct.pci_dev*, %struct.pci_dev** %pcidev133, align 8, !dbg !6819
  %dev134 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %95, i32 0, i32 41, !dbg !6820
  %call135 = call i32 @dma_set_mask(%struct.device* %dev134, i64 4294967295) #11, !dbg !6821
  %cmp136 = icmp ne i32 %call135, 0, !dbg !6822
  br i1 %cmp136, label %if.then138, label %if.end141, !dbg !6823

if.then138:                                       ; preds = %if.else132
  %call139 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !6824
  %96 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6826
  %97 = load i32, i32* %index, align 4, !dbg !6827
  %call140 = call i32 @ips_abort_init(%struct.ips_ha* %96, i32 %97) #11, !dbg !6828
  store i32 %call140, i32* %retval, align 4, !dbg !6829
  br label %return, !dbg !6829

if.end141:                                        ; preds = %if.else132
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then130
  %98 = load i32, i32* @ips_cd_boot, align 4, !dbg !6830
  %tobool143 = icmp ne i32 %98, 0, !dbg !6830
  br i1 %tobool143, label %land.lhs.true144, label %if.end149, !dbg !6832

land.lhs.true144:                                 ; preds = %if.end142
  %99 = load i8*, i8** @ips_FlashData, align 8, !dbg !6833
  %tobool145 = icmp ne i8* %99, null, !dbg !6833
  br i1 %tobool145, label %if.end149, label %if.then146, !dbg !6834

if.then146:                                       ; preds = %land.lhs.true144
  %100 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6835
  %dev147 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %100, i32 0, i32 41, !dbg !6837
  %call148 = call i8* @dma_alloc_coherent(%struct.device* %dev147, i64 524288, i64* @ips_flashbusaddr, i32 3264) #11, !dbg !6838
  store i8* %call148, i8** @ips_FlashData, align 8, !dbg !6839
  br label %if.end149, !dbg !6840

if.end149:                                        ; preds = %if.then146, %land.lhs.true144, %if.end142
  %101 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6841
  %dev150 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %101, i32 0, i32 41, !dbg !6842
  %102 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6843
  %enq_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %102, i32 0, i32 49, !dbg !6844
  %call151 = call i8* @dma_alloc_coherent(%struct.device* %dev150, i64 196, i64* %enq_busaddr, i32 3264) #11, !dbg !6845
  %103 = bitcast i8* %call151 to %struct.IPS_ENQ*, !dbg !6845
  %104 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6846
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %104, i32 0, i32 21, !dbg !6847
  store %struct.IPS_ENQ* %103, %struct.IPS_ENQ** %enq, align 8, !dbg !6848
  %105 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6849
  %enq152 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %105, i32 0, i32 21, !dbg !6851
  %106 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq152, align 8, !dbg !6851
  %tobool153 = icmp ne %struct.IPS_ENQ* %106, null, !dbg !6849
  br i1 %tobool153, label %if.end157, label %if.then154, !dbg !6852

if.then154:                                       ; preds = %if.end149
  %107 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6853
  %dev155 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 41, !dbg !6853
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev155, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !6853
  %108 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6855
  %109 = load i32, i32* %index, align 4, !dbg !6856
  %call156 = call i32 @ips_abort_init(%struct.ips_ha* %108, i32 %109) #11, !dbg !6857
  store i32 %call156, i32* %retval, align 4, !dbg !6858
  br label %return, !dbg !6858

if.end157:                                        ; preds = %if.end149
  %110 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6859
  %dev158 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %110, i32 0, i32 41, !dbg !6860
  %call159 = call i8* @dma_alloc_coherent(%struct.device* %dev158, i64 576, i64* %dma_address, i32 3264) #11, !dbg !6861
  %111 = bitcast i8* %call159 to %struct.IPS_ADAPTER*, !dbg !6861
  %112 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6862
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %112, i32 0, i32 18, !dbg !6863
  store %struct.IPS_ADAPTER* %111, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !6864
  %113 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6865
  %adapt160 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %113, i32 0, i32 18, !dbg !6867
  %114 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt160, align 8, !dbg !6867
  %tobool161 = icmp ne %struct.IPS_ADAPTER* %114, null, !dbg !6865
  br i1 %tobool161, label %if.end165, label %if.then162, !dbg !6868

if.then162:                                       ; preds = %if.end157
  %115 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6869
  %dev163 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %115, i32 0, i32 41, !dbg !6869
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev163, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !6869
  %116 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6871
  %117 = load i32, i32* %index, align 4, !dbg !6872
  %call164 = call i32 @ips_abort_init(%struct.ips_ha* %116, i32 %117) #11, !dbg !6873
  store i32 %call164, i32* %retval, align 4, !dbg !6874
  br label %return, !dbg !6874

if.end165:                                        ; preds = %if.end157
  %118 = load i64, i64* %dma_address, align 8, !dbg !6875
  %conv166 = trunc i64 %118 to i32, !dbg !6875
  %119 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6876
  %adapt167 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %119, i32 0, i32 18, !dbg !6877
  %120 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt167, align 8, !dbg !6877
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %120, i32 0, i32 4, !dbg !6878
  store volatile i32 %conv166, i32* %hw_status_start, align 8, !dbg !6879
  %121 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6880
  %adapt168 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %121, i32 0, i32 18, !dbg !6881
  %122 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt168, align 8, !dbg !6881
  %add.ptr169 = getelementptr %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %122, i64 1, !dbg !6882
  %123 = bitcast %struct.IPS_ADAPTER* %add.ptr169 to i8*, !dbg !6883
  %124 = bitcast i8* %123 to %struct.IPS_IO_CMD*, !dbg !6883
  %125 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6884
  %dummy = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %125, i32 0, i32 17, !dbg !6885
  store %struct.IPS_IO_CMD* %124, %struct.IPS_IO_CMD** %dummy, align 8, !dbg !6886
  %126 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6887
  %dev170 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %126, i32 0, i32 41, !dbg !6888
  %call171 = call i8* @dma_alloc_coherent(%struct.device* %dev170, i64 68, i64* %dma_address, i32 3264) #11, !dbg !6889
  %127 = bitcast i8* %call171 to %struct.IPS_LD_INFO*, !dbg !6889
  %128 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6890
  %logical_drive_info = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %128, i32 0, i32 19, !dbg !6891
  store %struct.IPS_LD_INFO* %127, %struct.IPS_LD_INFO** %logical_drive_info, align 8, !dbg !6892
  %129 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6893
  %logical_drive_info172 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %129, i32 0, i32 19, !dbg !6895
  %130 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info172, align 8, !dbg !6895
  %tobool173 = icmp ne %struct.IPS_LD_INFO* %130, null, !dbg !6893
  br i1 %tobool173, label %if.end177, label %if.then174, !dbg !6896

if.then174:                                       ; preds = %if.end165
  %131 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6897
  %dev175 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %131, i32 0, i32 41, !dbg !6897
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev175, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !6897
  %132 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6899
  %133 = load i32, i32* %index, align 4, !dbg !6900
  %call176 = call i32 @ips_abort_init(%struct.ips_ha* %132, i32 %133) #11, !dbg !6901
  store i32 %call176, i32* %retval, align 4, !dbg !6902
  br label %return, !dbg !6902

if.end177:                                        ; preds = %if.end165
  %134 = load i64, i64* %dma_address, align 8, !dbg !6903
  %135 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !6904
  %logical_drive_info_dma_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %135, i32 0, i32 20, !dbg !6905
  store i64 %134, i64* %logical_drive_info_dma_addr, align 8, !dbg !6906
  store i64 4508, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %136 = load i64, i64* %size.addr.i, align 8, !dbg !6907
  %137 = call i1 @llvm.is.constant.i64(i64 %136) #10, !dbg !6908
  br i1 %137, label %if.then.i, label %if.end9.i, !dbg !6909

if.then.i:                                        ; preds = %if.end177
  %138 = load i64, i64* %size.addr.i, align 8, !dbg !6910
  %cmp.i = icmp ugt i64 %138, 8192, !dbg !6911
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6912

if.then1.i:                                       ; preds = %if.then.i
  %139 = load i64, i64* %size.addr.i, align 8, !dbg !6913
  %140 = load i32, i32* %flags.addr.i, align 4, !dbg !6914
  store i64 %139, i64* %size.addr.i.i, align 8
  store i32 %140, i32* %flags.addr.i.i, align 4
  %141 = load i64, i64* %size.addr.i.i, align 8, !dbg !6915
  %call.i.i = call i32 @get_order(i64 %141) #13, !dbg !6916
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6623
  %142 = load i64, i64* %size.addr.i.i, align 8, !dbg !6917
  %143 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6918
  %144 = load i32, i32* %order.i.i, align 4, !dbg !6919
  store i64 %142, i64* %size.addr.i.i.i, align 8
  store i32 %143, i32* %flags.addr.i.i.i, align 4
  store i32 %144, i32* %order.addr.i.i.i, align 4
  %145 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6920
  %146 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6921
  %147 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6922
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %145, i32 %146, i32 %147) #14, !dbg !6923
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6923
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6923
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6923
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !6923
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6924
  br label %kmalloc.exit, !dbg !6924

if.end.i:                                         ; preds = %if.then.i
  %148 = load i64, i64* %size.addr.i, align 8, !dbg !6925
  store i64 %148, i64* %size.addr.i11.i, align 8
  %149 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6926
  %tobool.i.i = icmp ne i64 %149, 0, !dbg !6926
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6928

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6929
  br label %kmalloc_index.exit.i, !dbg !6929

if.end.i.i:                                       ; preds = %if.end.i
  %150 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6930
  %cmp.i.i = icmp ule i64 %150, 8, !dbg !6932
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6933

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6934
  br label %kmalloc_index.exit.i, !dbg !6934

if.end2.i.i:                                      ; preds = %if.end.i.i
  %151 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6935
  %cmp3.i.i = icmp ugt i64 %151, 64, !dbg !6937
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6938

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %152 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6939
  %cmp4.i.i = icmp ule i64 %152, 96, !dbg !6940
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6941

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6942
  br label %kmalloc_index.exit.i, !dbg !6942

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %153 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6943
  %cmp7.i.i = icmp ugt i64 %153, 128, !dbg !6945
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6946

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %154 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6947
  %cmp9.i.i = icmp ule i64 %154, 192, !dbg !6948
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6949

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6950
  br label %kmalloc_index.exit.i, !dbg !6950

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %155 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6951
  %cmp12.i.i = icmp ule i64 %155, 8, !dbg !6953
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6954

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6955
  br label %kmalloc_index.exit.i, !dbg !6955

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %156 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6956
  %cmp15.i.i = icmp ule i64 %156, 16, !dbg !6958
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6959

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6960
  br label %kmalloc_index.exit.i, !dbg !6960

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %157 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6961
  %cmp18.i.i = icmp ule i64 %157, 32, !dbg !6963
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6964

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6965
  br label %kmalloc_index.exit.i, !dbg !6965

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %158 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6966
  %cmp21.i.i = icmp ule i64 %158, 64, !dbg !6968
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6969

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6970
  br label %kmalloc_index.exit.i, !dbg !6970

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %159 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6971
  %cmp24.i.i = icmp ule i64 %159, 128, !dbg !6973
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6974

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6975
  br label %kmalloc_index.exit.i, !dbg !6975

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %160 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6976
  %cmp27.i.i = icmp ule i64 %160, 256, !dbg !6978
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6979

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6980
  br label %kmalloc_index.exit.i, !dbg !6980

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %161 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6981
  %cmp30.i.i = icmp ule i64 %161, 512, !dbg !6983
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6984

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6985
  br label %kmalloc_index.exit.i, !dbg !6985

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %162 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6986
  %cmp33.i.i = icmp ule i64 %162, 1024, !dbg !6988
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6989

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6990
  br label %kmalloc_index.exit.i, !dbg !6990

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %163 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6991
  %cmp36.i.i = icmp ule i64 %163, 2048, !dbg !6993
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6994

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6995
  br label %kmalloc_index.exit.i, !dbg !6995

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %164 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6996
  %cmp39.i.i = icmp ule i64 %164, 4096, !dbg !6998
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6999

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7000
  br label %kmalloc_index.exit.i, !dbg !7000

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %165 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7001
  %cmp42.i.i = icmp ule i64 %165, 8192, !dbg !7003
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7004

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7005
  br label %kmalloc_index.exit.i, !dbg !7005

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %166 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7006
  %cmp45.i.i = icmp ule i64 %166, 16384, !dbg !7008
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7009

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7010
  br label %kmalloc_index.exit.i, !dbg !7010

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %167 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7011
  %cmp48.i.i = icmp ule i64 %167, 32768, !dbg !7013
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7014

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7015
  br label %kmalloc_index.exit.i, !dbg !7015

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %168 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7016
  %cmp51.i.i = icmp ule i64 %168, 65536, !dbg !7018
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7019

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7020
  br label %kmalloc_index.exit.i, !dbg !7020

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %169 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7021
  %cmp54.i.i = icmp ule i64 %169, 131072, !dbg !7023
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7024

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7025
  br label %kmalloc_index.exit.i, !dbg !7025

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %170 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7026
  %cmp57.i.i = icmp ule i64 %170, 262144, !dbg !7028
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7029

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7030
  br label %kmalloc_index.exit.i, !dbg !7030

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %171 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7031
  %cmp60.i.i = icmp ule i64 %171, 524288, !dbg !7033
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7034

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7035
  br label %kmalloc_index.exit.i, !dbg !7035

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %172 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7036
  %cmp63.i.i = icmp ule i64 %172, 1048576, !dbg !7038
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7039

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7040
  br label %kmalloc_index.exit.i, !dbg !7040

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %173 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7041
  %cmp66.i.i = icmp ule i64 %173, 2097152, !dbg !7043
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7044

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7045
  br label %kmalloc_index.exit.i, !dbg !7045

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %174 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7046
  %cmp69.i.i = icmp ule i64 %174, 4194304, !dbg !7048
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7049

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7050
  br label %kmalloc_index.exit.i, !dbg !7050

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %175 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7051
  %cmp72.i.i = icmp ule i64 %175, 8388608, !dbg !7053
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7054

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7055
  br label %kmalloc_index.exit.i, !dbg !7055

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %176 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7056
  %cmp75.i.i = icmp ule i64 %176, 16777216, !dbg !7058
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7059

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7060
  br label %kmalloc_index.exit.i, !dbg !7060

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %177 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7061
  %cmp78.i.i = icmp ule i64 %177, 33554432, !dbg !7063
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7064

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7065
  br label %kmalloc_index.exit.i, !dbg !7065

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %178 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7066
  %cmp81.i.i = icmp ule i64 %178, 67108864, !dbg !7068
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7069

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7070
  br label %kmalloc_index.exit.i, !dbg !7070

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7071, !srcloc !7074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !7075, !srcloc !7078
  unreachable, !dbg !7079

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %179 = load i32, i32* %retval.i.i, align 4, !dbg !7080
  store i32 %179, i32* %index.i, align 4, !dbg !7081
  %180 = load i32, i32* %index.i, align 4, !dbg !7082
  %tobool.i = icmp ne i32 %180, 0, !dbg !7082
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7084

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7085
  br label %kmalloc.exit, !dbg !7085

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %181 = load i32, i32* %flags.addr.i, align 4, !dbg !7086
  store i32 %181, i32* %flags.addr.i13.i, align 4
  %182 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7087
  %and.i.i = and i32 %182, 17, !dbg !7087
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7087
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7087
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7087
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7087
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7089

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7090
  br label %kmalloc_type.exit.i, !dbg !7090

if.end.i16.i:                                     ; preds = %if.end4.i
  %183 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7091
  %and2.i.i = and i32 %183, 1, !dbg !7092
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7091
  %184 = zext i1 %tobool3.i.i to i64, !dbg !7091
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7091
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7093
  br label %kmalloc_type.exit.i, !dbg !7093

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %185 = load i32, i32* %retval.i12.i, align 4, !dbg !7094
  %idxprom.i = zext i32 %185 to i64, !dbg !7095
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7095
  %186 = load i32, i32* %index.i, align 4, !dbg !7096
  %idxprom6.i = zext i32 %186 to i64, !dbg !7095
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7095
  %187 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7095
  %188 = load i32, i32* %flags.addr.i, align 4, !dbg !7097
  %189 = load i64, i64* %size.addr.i, align 8, !dbg !7098
  store %struct.kmem_cache* %187, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %188, i32* %flags.addr.i17.i, align 4
  store i64 %189, i64* %size.addr.i18.i, align 8
  %190 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7099
  %191 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7100
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %190, i32 %191) #14, !dbg !7101
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7101
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7101
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7101
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !7101
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6611
  %192 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7102
  %193 = load i8*, i8** %ret.i.i, align 8, !dbg !7103
  %194 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7104
  %195 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7105
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %192, i8* %193, i64 %194, i32 %195) #14, !dbg !7106
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7107
  %196 = load i8*, i8** %ret.i.i, align 8, !dbg !7108
  store i8* %196, i8** %retval.i, align 8, !dbg !7109
  br label %kmalloc.exit, !dbg !7109

if.end9.i:                                        ; preds = %if.end177
  %197 = load i64, i64* %size.addr.i, align 8, !dbg !7110
  %198 = load i32, i32* %flags.addr.i, align 4, !dbg !7111
  %call10.i = call noalias i8* @__kmalloc(i64 %197, i32 %198) #14, !dbg !7112
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7112
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7112
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7112
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !7112
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7113
  br label %kmalloc.exit, !dbg !7113

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %199 = load i8*, i8** %retval.i, align 8, !dbg !7114
  %200 = bitcast i8* %199 to %struct.IPS_CONF*, !dbg !7115
  %201 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7116
  %conf = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %201, i32 0, i32 22, !dbg !7117
  store %struct.IPS_CONF* %200, %struct.IPS_CONF** %conf, align 8, !dbg !7118
  %202 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7119
  %conf179 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %202, i32 0, i32 22, !dbg !7121
  %203 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf179, align 8, !dbg !7121
  %tobool180 = icmp ne %struct.IPS_CONF* %203, null, !dbg !7119
  br i1 %tobool180, label %if.end184, label %if.then181, !dbg !7122

if.then181:                                       ; preds = %kmalloc.exit
  %204 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7123
  %dev182 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %204, i32 0, i32 41, !dbg !7123
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev182, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !7123
  %205 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7125
  %206 = load i32, i32* %index, align 4, !dbg !7126
  %call183 = call i32 @ips_abort_init(%struct.ips_ha* %205, i32 %206) #11, !dbg !7127
  store i32 %call183, i32* %retval, align 4, !dbg !7128
  br label %return, !dbg !7128

if.end184:                                        ; preds = %kmalloc.exit
  store i64 128, i64* %size.addr.i260, align 8
  store i32 3264, i32* %flags.addr.i261, align 4
  %207 = load i64, i64* %size.addr.i260, align 8, !dbg !7129
  %208 = call i1 @llvm.is.constant.i64(i64 %207) #10, !dbg !7130
  br i1 %208, label %if.then.i264, label %if.end9.i388, !dbg !7131

if.then.i264:                                     ; preds = %if.end184
  %209 = load i64, i64* %size.addr.i260, align 8, !dbg !7132
  %cmp.i263 = icmp ugt i64 %209, 8192, !dbg !7133
  br i1 %cmp.i263, label %if.then1.i270, label %if.end.i272, !dbg !7134

if.then1.i270:                                    ; preds = %if.then.i264
  %210 = load i64, i64* %size.addr.i260, align 8, !dbg !7135
  %211 = load i32, i32* %flags.addr.i261, align 4, !dbg !7136
  store i64 %210, i64* %size.addr.i.i256, align 8
  store i32 %211, i32* %flags.addr.i.i257, align 4
  %212 = load i64, i64* %size.addr.i.i256, align 8, !dbg !7137
  %call.i.i265 = call i32 @get_order(i64 %212) #13, !dbg !7138
  store i32 %call.i.i265, i32* %order.i.i258, align 4, !dbg !6602
  %213 = load i64, i64* %size.addr.i.i256, align 8, !dbg !7139
  %214 = load i32, i32* %flags.addr.i.i257, align 4, !dbg !7140
  %215 = load i32, i32* %order.i.i258, align 4, !dbg !7141
  store i64 %213, i64* %size.addr.i.i.i253, align 8
  store i32 %214, i32* %flags.addr.i.i.i254, align 4
  store i32 %215, i32* %order.addr.i.i.i255, align 4
  %216 = load i64, i64* %size.addr.i.i.i253, align 8, !dbg !7142
  %217 = load i32, i32* %flags.addr.i.i.i254, align 4, !dbg !7143
  %218 = load i32, i32* %order.addr.i.i.i255, align 4, !dbg !7144
  %call.i.i.i266 = call noalias i8* @kmalloc_order(i64 %216, i32 %217, i32 %218) #14, !dbg !7145
  %ptrint.i.i.i267 = ptrtoint i8* %call.i.i.i266 to i64, !dbg !7145
  %maskedptr.i.i.i268 = and i64 %ptrint.i.i.i267, 4095, !dbg !7145
  %maskcond.i.i.i269 = icmp eq i64 %maskedptr.i.i.i268, 0, !dbg !7145
  call void @llvm.assume(i1 %maskcond.i.i.i269) #10, !dbg !7145
  store i8* %call.i.i.i266, i8** %retval.i259, align 8, !dbg !7146
  br label %kmalloc.exit389, !dbg !7146

if.end.i272:                                      ; preds = %if.then.i264
  %219 = load i64, i64* %size.addr.i260, align 8, !dbg !7147
  store i64 %219, i64* %size.addr.i11.i252, align 8
  %220 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7148
  %tobool.i.i271 = icmp ne i64 %220, 0, !dbg !7148
  br i1 %tobool.i.i271, label %if.end.i.i275, label %if.then.i.i273, !dbg !7149

if.then.i.i273:                                   ; preds = %if.end.i272
  store i32 0, i32* %retval.i.i251, align 4, !dbg !7150
  br label %kmalloc_index.exit.i361, !dbg !7150

if.end.i.i275:                                    ; preds = %if.end.i272
  %221 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7151
  %cmp.i.i274 = icmp ule i64 %221, 8, !dbg !7152
  br i1 %cmp.i.i274, label %if.then1.i.i276, label %if.end2.i.i278, !dbg !7153

if.then1.i.i276:                                  ; preds = %if.end.i.i275
  store i32 3, i32* %retval.i.i251, align 4, !dbg !7154
  br label %kmalloc_index.exit.i361, !dbg !7154

if.end2.i.i278:                                   ; preds = %if.end.i.i275
  %222 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7155
  %cmp3.i.i277 = icmp ugt i64 %222, 64, !dbg !7156
  br i1 %cmp3.i.i277, label %land.lhs.true.i.i280, label %if.end6.i.i283, !dbg !7157

land.lhs.true.i.i280:                             ; preds = %if.end2.i.i278
  %223 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7158
  %cmp4.i.i279 = icmp ule i64 %223, 96, !dbg !7159
  br i1 %cmp4.i.i279, label %if.then5.i.i281, label %if.end6.i.i283, !dbg !7160

if.then5.i.i281:                                  ; preds = %land.lhs.true.i.i280
  store i32 1, i32* %retval.i.i251, align 4, !dbg !7161
  br label %kmalloc_index.exit.i361, !dbg !7161

if.end6.i.i283:                                   ; preds = %land.lhs.true.i.i280, %if.end2.i.i278
  %224 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7162
  %cmp7.i.i282 = icmp ugt i64 %224, 128, !dbg !7163
  br i1 %cmp7.i.i282, label %land.lhs.true8.i.i285, label %if.end11.i.i288, !dbg !7164

land.lhs.true8.i.i285:                            ; preds = %if.end6.i.i283
  %225 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7165
  %cmp9.i.i284 = icmp ule i64 %225, 192, !dbg !7166
  br i1 %cmp9.i.i284, label %if.then10.i.i286, label %if.end11.i.i288, !dbg !7167

if.then10.i.i286:                                 ; preds = %land.lhs.true8.i.i285
  store i32 2, i32* %retval.i.i251, align 4, !dbg !7168
  br label %kmalloc_index.exit.i361, !dbg !7168

if.end11.i.i288:                                  ; preds = %land.lhs.true8.i.i285, %if.end6.i.i283
  %226 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7169
  %cmp12.i.i287 = icmp ule i64 %226, 8, !dbg !7170
  br i1 %cmp12.i.i287, label %if.then13.i.i289, label %if.end14.i.i291, !dbg !7171

if.then13.i.i289:                                 ; preds = %if.end11.i.i288
  store i32 3, i32* %retval.i.i251, align 4, !dbg !7172
  br label %kmalloc_index.exit.i361, !dbg !7172

if.end14.i.i291:                                  ; preds = %if.end11.i.i288
  %227 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7173
  %cmp15.i.i290 = icmp ule i64 %227, 16, !dbg !7174
  br i1 %cmp15.i.i290, label %if.then16.i.i292, label %if.end17.i.i294, !dbg !7175

if.then16.i.i292:                                 ; preds = %if.end14.i.i291
  store i32 4, i32* %retval.i.i251, align 4, !dbg !7176
  br label %kmalloc_index.exit.i361, !dbg !7176

if.end17.i.i294:                                  ; preds = %if.end14.i.i291
  %228 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7177
  %cmp18.i.i293 = icmp ule i64 %228, 32, !dbg !7178
  br i1 %cmp18.i.i293, label %if.then19.i.i295, label %if.end20.i.i297, !dbg !7179

if.then19.i.i295:                                 ; preds = %if.end17.i.i294
  store i32 5, i32* %retval.i.i251, align 4, !dbg !7180
  br label %kmalloc_index.exit.i361, !dbg !7180

if.end20.i.i297:                                  ; preds = %if.end17.i.i294
  %229 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7181
  %cmp21.i.i296 = icmp ule i64 %229, 64, !dbg !7182
  br i1 %cmp21.i.i296, label %if.then22.i.i298, label %if.end23.i.i300, !dbg !7183

if.then22.i.i298:                                 ; preds = %if.end20.i.i297
  store i32 6, i32* %retval.i.i251, align 4, !dbg !7184
  br label %kmalloc_index.exit.i361, !dbg !7184

if.end23.i.i300:                                  ; preds = %if.end20.i.i297
  %230 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7185
  %cmp24.i.i299 = icmp ule i64 %230, 128, !dbg !7186
  br i1 %cmp24.i.i299, label %if.then25.i.i301, label %if.end26.i.i303, !dbg !7187

if.then25.i.i301:                                 ; preds = %if.end23.i.i300
  store i32 7, i32* %retval.i.i251, align 4, !dbg !7188
  br label %kmalloc_index.exit.i361, !dbg !7188

if.end26.i.i303:                                  ; preds = %if.end23.i.i300
  %231 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7189
  %cmp27.i.i302 = icmp ule i64 %231, 256, !dbg !7190
  br i1 %cmp27.i.i302, label %if.then28.i.i304, label %if.end29.i.i306, !dbg !7191

if.then28.i.i304:                                 ; preds = %if.end26.i.i303
  store i32 8, i32* %retval.i.i251, align 4, !dbg !7192
  br label %kmalloc_index.exit.i361, !dbg !7192

if.end29.i.i306:                                  ; preds = %if.end26.i.i303
  %232 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7193
  %cmp30.i.i305 = icmp ule i64 %232, 512, !dbg !7194
  br i1 %cmp30.i.i305, label %if.then31.i.i307, label %if.end32.i.i309, !dbg !7195

if.then31.i.i307:                                 ; preds = %if.end29.i.i306
  store i32 9, i32* %retval.i.i251, align 4, !dbg !7196
  br label %kmalloc_index.exit.i361, !dbg !7196

if.end32.i.i309:                                  ; preds = %if.end29.i.i306
  %233 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7197
  %cmp33.i.i308 = icmp ule i64 %233, 1024, !dbg !7198
  br i1 %cmp33.i.i308, label %if.then34.i.i310, label %if.end35.i.i312, !dbg !7199

if.then34.i.i310:                                 ; preds = %if.end32.i.i309
  store i32 10, i32* %retval.i.i251, align 4, !dbg !7200
  br label %kmalloc_index.exit.i361, !dbg !7200

if.end35.i.i312:                                  ; preds = %if.end32.i.i309
  %234 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7201
  %cmp36.i.i311 = icmp ule i64 %234, 2048, !dbg !7202
  br i1 %cmp36.i.i311, label %if.then37.i.i313, label %if.end38.i.i315, !dbg !7203

if.then37.i.i313:                                 ; preds = %if.end35.i.i312
  store i32 11, i32* %retval.i.i251, align 4, !dbg !7204
  br label %kmalloc_index.exit.i361, !dbg !7204

if.end38.i.i315:                                  ; preds = %if.end35.i.i312
  %235 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7205
  %cmp39.i.i314 = icmp ule i64 %235, 4096, !dbg !7206
  br i1 %cmp39.i.i314, label %if.then40.i.i316, label %if.end41.i.i318, !dbg !7207

if.then40.i.i316:                                 ; preds = %if.end38.i.i315
  store i32 12, i32* %retval.i.i251, align 4, !dbg !7208
  br label %kmalloc_index.exit.i361, !dbg !7208

if.end41.i.i318:                                  ; preds = %if.end38.i.i315
  %236 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7209
  %cmp42.i.i317 = icmp ule i64 %236, 8192, !dbg !7210
  br i1 %cmp42.i.i317, label %if.then43.i.i319, label %if.end44.i.i321, !dbg !7211

if.then43.i.i319:                                 ; preds = %if.end41.i.i318
  store i32 13, i32* %retval.i.i251, align 4, !dbg !7212
  br label %kmalloc_index.exit.i361, !dbg !7212

if.end44.i.i321:                                  ; preds = %if.end41.i.i318
  %237 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7213
  %cmp45.i.i320 = icmp ule i64 %237, 16384, !dbg !7214
  br i1 %cmp45.i.i320, label %if.then46.i.i322, label %if.end47.i.i324, !dbg !7215

if.then46.i.i322:                                 ; preds = %if.end44.i.i321
  store i32 14, i32* %retval.i.i251, align 4, !dbg !7216
  br label %kmalloc_index.exit.i361, !dbg !7216

if.end47.i.i324:                                  ; preds = %if.end44.i.i321
  %238 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7217
  %cmp48.i.i323 = icmp ule i64 %238, 32768, !dbg !7218
  br i1 %cmp48.i.i323, label %if.then49.i.i325, label %if.end50.i.i327, !dbg !7219

if.then49.i.i325:                                 ; preds = %if.end47.i.i324
  store i32 15, i32* %retval.i.i251, align 4, !dbg !7220
  br label %kmalloc_index.exit.i361, !dbg !7220

if.end50.i.i327:                                  ; preds = %if.end47.i.i324
  %239 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7221
  %cmp51.i.i326 = icmp ule i64 %239, 65536, !dbg !7222
  br i1 %cmp51.i.i326, label %if.then52.i.i328, label %if.end53.i.i330, !dbg !7223

if.then52.i.i328:                                 ; preds = %if.end50.i.i327
  store i32 16, i32* %retval.i.i251, align 4, !dbg !7224
  br label %kmalloc_index.exit.i361, !dbg !7224

if.end53.i.i330:                                  ; preds = %if.end50.i.i327
  %240 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7225
  %cmp54.i.i329 = icmp ule i64 %240, 131072, !dbg !7226
  br i1 %cmp54.i.i329, label %if.then55.i.i331, label %if.end56.i.i333, !dbg !7227

if.then55.i.i331:                                 ; preds = %if.end53.i.i330
  store i32 17, i32* %retval.i.i251, align 4, !dbg !7228
  br label %kmalloc_index.exit.i361, !dbg !7228

if.end56.i.i333:                                  ; preds = %if.end53.i.i330
  %241 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7229
  %cmp57.i.i332 = icmp ule i64 %241, 262144, !dbg !7230
  br i1 %cmp57.i.i332, label %if.then58.i.i334, label %if.end59.i.i336, !dbg !7231

if.then58.i.i334:                                 ; preds = %if.end56.i.i333
  store i32 18, i32* %retval.i.i251, align 4, !dbg !7232
  br label %kmalloc_index.exit.i361, !dbg !7232

if.end59.i.i336:                                  ; preds = %if.end56.i.i333
  %242 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7233
  %cmp60.i.i335 = icmp ule i64 %242, 524288, !dbg !7234
  br i1 %cmp60.i.i335, label %if.then61.i.i337, label %if.end62.i.i339, !dbg !7235

if.then61.i.i337:                                 ; preds = %if.end59.i.i336
  store i32 19, i32* %retval.i.i251, align 4, !dbg !7236
  br label %kmalloc_index.exit.i361, !dbg !7236

if.end62.i.i339:                                  ; preds = %if.end59.i.i336
  %243 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7237
  %cmp63.i.i338 = icmp ule i64 %243, 1048576, !dbg !7238
  br i1 %cmp63.i.i338, label %if.then64.i.i340, label %if.end65.i.i342, !dbg !7239

if.then64.i.i340:                                 ; preds = %if.end62.i.i339
  store i32 20, i32* %retval.i.i251, align 4, !dbg !7240
  br label %kmalloc_index.exit.i361, !dbg !7240

if.end65.i.i342:                                  ; preds = %if.end62.i.i339
  %244 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7241
  %cmp66.i.i341 = icmp ule i64 %244, 2097152, !dbg !7242
  br i1 %cmp66.i.i341, label %if.then67.i.i343, label %if.end68.i.i345, !dbg !7243

if.then67.i.i343:                                 ; preds = %if.end65.i.i342
  store i32 21, i32* %retval.i.i251, align 4, !dbg !7244
  br label %kmalloc_index.exit.i361, !dbg !7244

if.end68.i.i345:                                  ; preds = %if.end65.i.i342
  %245 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7245
  %cmp69.i.i344 = icmp ule i64 %245, 4194304, !dbg !7246
  br i1 %cmp69.i.i344, label %if.then70.i.i346, label %if.end71.i.i348, !dbg !7247

if.then70.i.i346:                                 ; preds = %if.end68.i.i345
  store i32 22, i32* %retval.i.i251, align 4, !dbg !7248
  br label %kmalloc_index.exit.i361, !dbg !7248

if.end71.i.i348:                                  ; preds = %if.end68.i.i345
  %246 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7249
  %cmp72.i.i347 = icmp ule i64 %246, 8388608, !dbg !7250
  br i1 %cmp72.i.i347, label %if.then73.i.i349, label %if.end74.i.i351, !dbg !7251

if.then73.i.i349:                                 ; preds = %if.end71.i.i348
  store i32 23, i32* %retval.i.i251, align 4, !dbg !7252
  br label %kmalloc_index.exit.i361, !dbg !7252

if.end74.i.i351:                                  ; preds = %if.end71.i.i348
  %247 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7253
  %cmp75.i.i350 = icmp ule i64 %247, 16777216, !dbg !7254
  br i1 %cmp75.i.i350, label %if.then76.i.i352, label %if.end77.i.i354, !dbg !7255

if.then76.i.i352:                                 ; preds = %if.end74.i.i351
  store i32 24, i32* %retval.i.i251, align 4, !dbg !7256
  br label %kmalloc_index.exit.i361, !dbg !7256

if.end77.i.i354:                                  ; preds = %if.end74.i.i351
  %248 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7257
  %cmp78.i.i353 = icmp ule i64 %248, 33554432, !dbg !7258
  br i1 %cmp78.i.i353, label %if.then79.i.i355, label %if.end80.i.i357, !dbg !7259

if.then79.i.i355:                                 ; preds = %if.end77.i.i354
  store i32 25, i32* %retval.i.i251, align 4, !dbg !7260
  br label %kmalloc_index.exit.i361, !dbg !7260

if.end80.i.i357:                                  ; preds = %if.end77.i.i354
  %249 = load i64, i64* %size.addr.i11.i252, align 8, !dbg !7261
  %cmp81.i.i356 = icmp ule i64 %249, 67108864, !dbg !7262
  br i1 %cmp81.i.i356, label %if.then82.i.i358, label %if.end83.i.i359, !dbg !7263

if.then82.i.i358:                                 ; preds = %if.end80.i.i357
  store i32 26, i32* %retval.i.i251, align 4, !dbg !7264
  br label %kmalloc_index.exit.i361, !dbg !7264

if.end83.i.i359:                                  ; preds = %if.end80.i.i357
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7265, !srcloc !7074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !7266, !srcloc !7078
  unreachable, !dbg !7267

kmalloc_index.exit.i361:                          ; preds = %if.then82.i.i358, %if.then79.i.i355, %if.then76.i.i352, %if.then73.i.i349, %if.then70.i.i346, %if.then67.i.i343, %if.then64.i.i340, %if.then61.i.i337, %if.then58.i.i334, %if.then55.i.i331, %if.then52.i.i328, %if.then49.i.i325, %if.then46.i.i322, %if.then43.i.i319, %if.then40.i.i316, %if.then37.i.i313, %if.then34.i.i310, %if.then31.i.i307, %if.then28.i.i304, %if.then25.i.i301, %if.then22.i.i298, %if.then19.i.i295, %if.then16.i.i292, %if.then13.i.i289, %if.then10.i.i286, %if.then5.i.i281, %if.then1.i.i276, %if.then.i.i273
  %250 = load i32, i32* %retval.i.i251, align 4, !dbg !7268
  store i32 %250, i32* %index.i262, align 4, !dbg !7269
  %251 = load i32, i32* %index.i262, align 4, !dbg !7270
  %tobool.i360 = icmp ne i32 %251, 0, !dbg !7270
  br i1 %tobool.i360, label %if.end4.i368, label %if.then3.i362, !dbg !7271

if.then3.i362:                                    ; preds = %kmalloc_index.exit.i361
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i259, align 8, !dbg !7272
  br label %kmalloc.exit389, !dbg !7272

if.end4.i368:                                     ; preds = %kmalloc_index.exit.i361
  %252 = load i32, i32* %flags.addr.i261, align 4, !dbg !7273
  store i32 %252, i32* %flags.addr.i13.i250, align 4
  %253 = load i32, i32* %flags.addr.i13.i250, align 4, !dbg !7274
  %and.i.i363 = and i32 %253, 17, !dbg !7274
  %cmp.i14.i364 = icmp eq i32 %and.i.i363, 0, !dbg !7274
  %lnot.i.i365 = xor i1 %cmp.i14.i364, true, !dbg !7274
  %lnot.ext.i.i366 = zext i1 %cmp.i14.i364 to i32, !dbg !7274
  %conv.i.i367 = sext i32 %lnot.ext.i.i366 to i64, !dbg !7274
  br i1 %cmp.i14.i364, label %if.then.i15.i369, label %if.end.i16.i373, !dbg !7275

if.then.i15.i369:                                 ; preds = %if.end4.i368
  store i32 0, i32* %retval.i12.i249, align 4, !dbg !7276
  br label %kmalloc_type.exit.i383, !dbg !7276

if.end.i16.i373:                                  ; preds = %if.end4.i368
  %254 = load i32, i32* %flags.addr.i13.i250, align 4, !dbg !7277
  %and2.i.i370 = and i32 %254, 1, !dbg !7278
  %tobool3.i.i371 = icmp ne i32 %and2.i.i370, 0, !dbg !7277
  %255 = zext i1 %tobool3.i.i371 to i64, !dbg !7277
  %cond.i.i372 = select i1 %tobool3.i.i371, i32 2, i32 1, !dbg !7277
  store i32 %cond.i.i372, i32* %retval.i12.i249, align 4, !dbg !7279
  br label %kmalloc_type.exit.i383, !dbg !7279

kmalloc_type.exit.i383:                           ; preds = %if.end.i16.i373, %if.then.i15.i369
  %256 = load i32, i32* %retval.i12.i249, align 4, !dbg !7280
  %idxprom.i374 = zext i32 %256 to i64, !dbg !7281
  %arrayidx.i375 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i374, !dbg !7281
  %257 = load i32, i32* %index.i262, align 4, !dbg !7282
  %idxprom6.i376 = zext i32 %257 to i64, !dbg !7281
  %arrayidx7.i377 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i375, i64 0, i64 %idxprom6.i376, !dbg !7281
  %258 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i377, align 8, !dbg !7281
  %259 = load i32, i32* %flags.addr.i261, align 4, !dbg !7283
  %260 = load i64, i64* %size.addr.i260, align 8, !dbg !7284
  store %struct.kmem_cache* %258, %struct.kmem_cache** %s.addr.i.i245, align 8
  store i32 %259, i32* %flags.addr.i17.i246, align 4
  store i64 %260, i64* %size.addr.i18.i247, align 8
  %261 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i245, align 8, !dbg !7285
  %262 = load i32, i32* %flags.addr.i17.i246, align 4, !dbg !7286
  %call.i19.i378 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %261, i32 %262) #14, !dbg !7287
  %ptrint.i.i379 = ptrtoint i8* %call.i19.i378 to i64, !dbg !7287
  %maskedptr.i.i380 = and i64 %ptrint.i.i379, 7, !dbg !7287
  %maskcond.i.i381 = icmp eq i64 %maskedptr.i.i380, 0, !dbg !7287
  call void @llvm.assume(i1 %maskcond.i.i381) #10, !dbg !7287
  store i8* %call.i19.i378, i8** %ret.i.i248, align 8, !dbg !6590
  %263 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i245, align 8, !dbg !7288
  %264 = load i8*, i8** %ret.i.i248, align 8, !dbg !7289
  %265 = load i64, i64* %size.addr.i18.i247, align 8, !dbg !7290
  %266 = load i32, i32* %flags.addr.i17.i246, align 4, !dbg !7291
  %call1.i.i382 = call i8* @kasan_kmalloc(%struct.kmem_cache* %263, i8* %264, i64 %265, i32 %266) #14, !dbg !7292
  store i8* %call1.i.i382, i8** %ret.i.i248, align 8, !dbg !7293
  %267 = load i8*, i8** %ret.i.i248, align 8, !dbg !7294
  store i8* %267, i8** %retval.i259, align 8, !dbg !7295
  br label %kmalloc.exit389, !dbg !7295

if.end9.i388:                                     ; preds = %if.end184
  %268 = load i64, i64* %size.addr.i260, align 8, !dbg !7296
  %269 = load i32, i32* %flags.addr.i261, align 4, !dbg !7297
  %call10.i384 = call noalias i8* @__kmalloc(i64 %268, i32 %269) #14, !dbg !7298
  %ptrint.i385 = ptrtoint i8* %call10.i384 to i64, !dbg !7298
  %maskedptr.i386 = and i64 %ptrint.i385, 7, !dbg !7298
  %maskcond.i387 = icmp eq i64 %maskedptr.i386, 0, !dbg !7298
  call void @llvm.assume(i1 %maskcond.i387) #10, !dbg !7298
  store i8* %call10.i384, i8** %retval.i259, align 8, !dbg !7299
  br label %kmalloc.exit389, !dbg !7299

kmalloc.exit389:                                  ; preds = %if.then1.i270, %if.then3.i362, %kmalloc_type.exit.i383, %if.end9.i388
  %270 = load i8*, i8** %retval.i259, align 8, !dbg !7300
  %271 = bitcast i8* %270 to %struct.IPS_NVRAM_P5*, !dbg !7301
  %272 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7302
  %nvram = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %272, i32 0, i32 23, !dbg !7303
  store %struct.IPS_NVRAM_P5* %271, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !7304
  %273 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7305
  %nvram186 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %273, i32 0, i32 23, !dbg !7307
  %274 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram186, align 8, !dbg !7307
  %tobool187 = icmp ne %struct.IPS_NVRAM_P5* %274, null, !dbg !7305
  br i1 %tobool187, label %if.end191, label %if.then188, !dbg !7308

if.then188:                                       ; preds = %kmalloc.exit389
  %275 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7309
  %dev189 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %275, i32 0, i32 41, !dbg !7309
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev189, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !7309
  %276 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7311
  %277 = load i32, i32* %index, align 4, !dbg !7312
  %call190 = call i32 @ips_abort_init(%struct.ips_ha* %276, i32 %277) #11, !dbg !7313
  store i32 %call190, i32* %retval, align 4, !dbg !7314
  br label %return, !dbg !7314

if.end191:                                        ; preds = %kmalloc.exit389
  store i64 512, i64* %size.addr.i405, align 8
  store i32 3264, i32* %flags.addr.i406, align 4
  %278 = load i64, i64* %size.addr.i405, align 8, !dbg !7315
  %279 = call i1 @llvm.is.constant.i64(i64 %278) #10, !dbg !7316
  br i1 %279, label %if.then.i409, label %if.end9.i533, !dbg !7317

if.then.i409:                                     ; preds = %if.end191
  %280 = load i64, i64* %size.addr.i405, align 8, !dbg !7318
  %cmp.i408 = icmp ugt i64 %280, 8192, !dbg !7319
  br i1 %cmp.i408, label %if.then1.i415, label %if.end.i417, !dbg !7320

if.then1.i415:                                    ; preds = %if.then.i409
  %281 = load i64, i64* %size.addr.i405, align 8, !dbg !7321
  %282 = load i32, i32* %flags.addr.i406, align 4, !dbg !7322
  store i64 %281, i64* %size.addr.i.i401, align 8
  store i32 %282, i32* %flags.addr.i.i402, align 4
  %283 = load i64, i64* %size.addr.i.i401, align 8, !dbg !7323
  %call.i.i410 = call i32 @get_order(i64 %283) #13, !dbg !7324
  store i32 %call.i.i410, i32* %order.i.i403, align 4, !dbg !6578
  %284 = load i64, i64* %size.addr.i.i401, align 8, !dbg !7325
  %285 = load i32, i32* %flags.addr.i.i402, align 4, !dbg !7326
  %286 = load i32, i32* %order.i.i403, align 4, !dbg !7327
  store i64 %284, i64* %size.addr.i.i.i398, align 8
  store i32 %285, i32* %flags.addr.i.i.i399, align 4
  store i32 %286, i32* %order.addr.i.i.i400, align 4
  %287 = load i64, i64* %size.addr.i.i.i398, align 8, !dbg !7328
  %288 = load i32, i32* %flags.addr.i.i.i399, align 4, !dbg !7329
  %289 = load i32, i32* %order.addr.i.i.i400, align 4, !dbg !7330
  %call.i.i.i411 = call noalias i8* @kmalloc_order(i64 %287, i32 %288, i32 %289) #14, !dbg !7331
  %ptrint.i.i.i412 = ptrtoint i8* %call.i.i.i411 to i64, !dbg !7331
  %maskedptr.i.i.i413 = and i64 %ptrint.i.i.i412, 4095, !dbg !7331
  %maskcond.i.i.i414 = icmp eq i64 %maskedptr.i.i.i413, 0, !dbg !7331
  call void @llvm.assume(i1 %maskcond.i.i.i414) #10, !dbg !7331
  store i8* %call.i.i.i411, i8** %retval.i404, align 8, !dbg !7332
  br label %kmalloc.exit534, !dbg !7332

if.end.i417:                                      ; preds = %if.then.i409
  %290 = load i64, i64* %size.addr.i405, align 8, !dbg !7333
  store i64 %290, i64* %size.addr.i11.i397, align 8
  %291 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7334
  %tobool.i.i416 = icmp ne i64 %291, 0, !dbg !7334
  br i1 %tobool.i.i416, label %if.end.i.i420, label %if.then.i.i418, !dbg !7335

if.then.i.i418:                                   ; preds = %if.end.i417
  store i32 0, i32* %retval.i.i396, align 4, !dbg !7336
  br label %kmalloc_index.exit.i506, !dbg !7336

if.end.i.i420:                                    ; preds = %if.end.i417
  %292 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7337
  %cmp.i.i419 = icmp ule i64 %292, 8, !dbg !7338
  br i1 %cmp.i.i419, label %if.then1.i.i421, label %if.end2.i.i423, !dbg !7339

if.then1.i.i421:                                  ; preds = %if.end.i.i420
  store i32 3, i32* %retval.i.i396, align 4, !dbg !7340
  br label %kmalloc_index.exit.i506, !dbg !7340

if.end2.i.i423:                                   ; preds = %if.end.i.i420
  %293 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7341
  %cmp3.i.i422 = icmp ugt i64 %293, 64, !dbg !7342
  br i1 %cmp3.i.i422, label %land.lhs.true.i.i425, label %if.end6.i.i428, !dbg !7343

land.lhs.true.i.i425:                             ; preds = %if.end2.i.i423
  %294 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7344
  %cmp4.i.i424 = icmp ule i64 %294, 96, !dbg !7345
  br i1 %cmp4.i.i424, label %if.then5.i.i426, label %if.end6.i.i428, !dbg !7346

if.then5.i.i426:                                  ; preds = %land.lhs.true.i.i425
  store i32 1, i32* %retval.i.i396, align 4, !dbg !7347
  br label %kmalloc_index.exit.i506, !dbg !7347

if.end6.i.i428:                                   ; preds = %land.lhs.true.i.i425, %if.end2.i.i423
  %295 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7348
  %cmp7.i.i427 = icmp ugt i64 %295, 128, !dbg !7349
  br i1 %cmp7.i.i427, label %land.lhs.true8.i.i430, label %if.end11.i.i433, !dbg !7350

land.lhs.true8.i.i430:                            ; preds = %if.end6.i.i428
  %296 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7351
  %cmp9.i.i429 = icmp ule i64 %296, 192, !dbg !7352
  br i1 %cmp9.i.i429, label %if.then10.i.i431, label %if.end11.i.i433, !dbg !7353

if.then10.i.i431:                                 ; preds = %land.lhs.true8.i.i430
  store i32 2, i32* %retval.i.i396, align 4, !dbg !7354
  br label %kmalloc_index.exit.i506, !dbg !7354

if.end11.i.i433:                                  ; preds = %land.lhs.true8.i.i430, %if.end6.i.i428
  %297 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7355
  %cmp12.i.i432 = icmp ule i64 %297, 8, !dbg !7356
  br i1 %cmp12.i.i432, label %if.then13.i.i434, label %if.end14.i.i436, !dbg !7357

if.then13.i.i434:                                 ; preds = %if.end11.i.i433
  store i32 3, i32* %retval.i.i396, align 4, !dbg !7358
  br label %kmalloc_index.exit.i506, !dbg !7358

if.end14.i.i436:                                  ; preds = %if.end11.i.i433
  %298 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7359
  %cmp15.i.i435 = icmp ule i64 %298, 16, !dbg !7360
  br i1 %cmp15.i.i435, label %if.then16.i.i437, label %if.end17.i.i439, !dbg !7361

if.then16.i.i437:                                 ; preds = %if.end14.i.i436
  store i32 4, i32* %retval.i.i396, align 4, !dbg !7362
  br label %kmalloc_index.exit.i506, !dbg !7362

if.end17.i.i439:                                  ; preds = %if.end14.i.i436
  %299 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7363
  %cmp18.i.i438 = icmp ule i64 %299, 32, !dbg !7364
  br i1 %cmp18.i.i438, label %if.then19.i.i440, label %if.end20.i.i442, !dbg !7365

if.then19.i.i440:                                 ; preds = %if.end17.i.i439
  store i32 5, i32* %retval.i.i396, align 4, !dbg !7366
  br label %kmalloc_index.exit.i506, !dbg !7366

if.end20.i.i442:                                  ; preds = %if.end17.i.i439
  %300 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7367
  %cmp21.i.i441 = icmp ule i64 %300, 64, !dbg !7368
  br i1 %cmp21.i.i441, label %if.then22.i.i443, label %if.end23.i.i445, !dbg !7369

if.then22.i.i443:                                 ; preds = %if.end20.i.i442
  store i32 6, i32* %retval.i.i396, align 4, !dbg !7370
  br label %kmalloc_index.exit.i506, !dbg !7370

if.end23.i.i445:                                  ; preds = %if.end20.i.i442
  %301 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7371
  %cmp24.i.i444 = icmp ule i64 %301, 128, !dbg !7372
  br i1 %cmp24.i.i444, label %if.then25.i.i446, label %if.end26.i.i448, !dbg !7373

if.then25.i.i446:                                 ; preds = %if.end23.i.i445
  store i32 7, i32* %retval.i.i396, align 4, !dbg !7374
  br label %kmalloc_index.exit.i506, !dbg !7374

if.end26.i.i448:                                  ; preds = %if.end23.i.i445
  %302 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7375
  %cmp27.i.i447 = icmp ule i64 %302, 256, !dbg !7376
  br i1 %cmp27.i.i447, label %if.then28.i.i449, label %if.end29.i.i451, !dbg !7377

if.then28.i.i449:                                 ; preds = %if.end26.i.i448
  store i32 8, i32* %retval.i.i396, align 4, !dbg !7378
  br label %kmalloc_index.exit.i506, !dbg !7378

if.end29.i.i451:                                  ; preds = %if.end26.i.i448
  %303 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7379
  %cmp30.i.i450 = icmp ule i64 %303, 512, !dbg !7380
  br i1 %cmp30.i.i450, label %if.then31.i.i452, label %if.end32.i.i454, !dbg !7381

if.then31.i.i452:                                 ; preds = %if.end29.i.i451
  store i32 9, i32* %retval.i.i396, align 4, !dbg !7382
  br label %kmalloc_index.exit.i506, !dbg !7382

if.end32.i.i454:                                  ; preds = %if.end29.i.i451
  %304 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7383
  %cmp33.i.i453 = icmp ule i64 %304, 1024, !dbg !7384
  br i1 %cmp33.i.i453, label %if.then34.i.i455, label %if.end35.i.i457, !dbg !7385

if.then34.i.i455:                                 ; preds = %if.end32.i.i454
  store i32 10, i32* %retval.i.i396, align 4, !dbg !7386
  br label %kmalloc_index.exit.i506, !dbg !7386

if.end35.i.i457:                                  ; preds = %if.end32.i.i454
  %305 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7387
  %cmp36.i.i456 = icmp ule i64 %305, 2048, !dbg !7388
  br i1 %cmp36.i.i456, label %if.then37.i.i458, label %if.end38.i.i460, !dbg !7389

if.then37.i.i458:                                 ; preds = %if.end35.i.i457
  store i32 11, i32* %retval.i.i396, align 4, !dbg !7390
  br label %kmalloc_index.exit.i506, !dbg !7390

if.end38.i.i460:                                  ; preds = %if.end35.i.i457
  %306 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7391
  %cmp39.i.i459 = icmp ule i64 %306, 4096, !dbg !7392
  br i1 %cmp39.i.i459, label %if.then40.i.i461, label %if.end41.i.i463, !dbg !7393

if.then40.i.i461:                                 ; preds = %if.end38.i.i460
  store i32 12, i32* %retval.i.i396, align 4, !dbg !7394
  br label %kmalloc_index.exit.i506, !dbg !7394

if.end41.i.i463:                                  ; preds = %if.end38.i.i460
  %307 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7395
  %cmp42.i.i462 = icmp ule i64 %307, 8192, !dbg !7396
  br i1 %cmp42.i.i462, label %if.then43.i.i464, label %if.end44.i.i466, !dbg !7397

if.then43.i.i464:                                 ; preds = %if.end41.i.i463
  store i32 13, i32* %retval.i.i396, align 4, !dbg !7398
  br label %kmalloc_index.exit.i506, !dbg !7398

if.end44.i.i466:                                  ; preds = %if.end41.i.i463
  %308 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7399
  %cmp45.i.i465 = icmp ule i64 %308, 16384, !dbg !7400
  br i1 %cmp45.i.i465, label %if.then46.i.i467, label %if.end47.i.i469, !dbg !7401

if.then46.i.i467:                                 ; preds = %if.end44.i.i466
  store i32 14, i32* %retval.i.i396, align 4, !dbg !7402
  br label %kmalloc_index.exit.i506, !dbg !7402

if.end47.i.i469:                                  ; preds = %if.end44.i.i466
  %309 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7403
  %cmp48.i.i468 = icmp ule i64 %309, 32768, !dbg !7404
  br i1 %cmp48.i.i468, label %if.then49.i.i470, label %if.end50.i.i472, !dbg !7405

if.then49.i.i470:                                 ; preds = %if.end47.i.i469
  store i32 15, i32* %retval.i.i396, align 4, !dbg !7406
  br label %kmalloc_index.exit.i506, !dbg !7406

if.end50.i.i472:                                  ; preds = %if.end47.i.i469
  %310 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7407
  %cmp51.i.i471 = icmp ule i64 %310, 65536, !dbg !7408
  br i1 %cmp51.i.i471, label %if.then52.i.i473, label %if.end53.i.i475, !dbg !7409

if.then52.i.i473:                                 ; preds = %if.end50.i.i472
  store i32 16, i32* %retval.i.i396, align 4, !dbg !7410
  br label %kmalloc_index.exit.i506, !dbg !7410

if.end53.i.i475:                                  ; preds = %if.end50.i.i472
  %311 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7411
  %cmp54.i.i474 = icmp ule i64 %311, 131072, !dbg !7412
  br i1 %cmp54.i.i474, label %if.then55.i.i476, label %if.end56.i.i478, !dbg !7413

if.then55.i.i476:                                 ; preds = %if.end53.i.i475
  store i32 17, i32* %retval.i.i396, align 4, !dbg !7414
  br label %kmalloc_index.exit.i506, !dbg !7414

if.end56.i.i478:                                  ; preds = %if.end53.i.i475
  %312 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7415
  %cmp57.i.i477 = icmp ule i64 %312, 262144, !dbg !7416
  br i1 %cmp57.i.i477, label %if.then58.i.i479, label %if.end59.i.i481, !dbg !7417

if.then58.i.i479:                                 ; preds = %if.end56.i.i478
  store i32 18, i32* %retval.i.i396, align 4, !dbg !7418
  br label %kmalloc_index.exit.i506, !dbg !7418

if.end59.i.i481:                                  ; preds = %if.end56.i.i478
  %313 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7419
  %cmp60.i.i480 = icmp ule i64 %313, 524288, !dbg !7420
  br i1 %cmp60.i.i480, label %if.then61.i.i482, label %if.end62.i.i484, !dbg !7421

if.then61.i.i482:                                 ; preds = %if.end59.i.i481
  store i32 19, i32* %retval.i.i396, align 4, !dbg !7422
  br label %kmalloc_index.exit.i506, !dbg !7422

if.end62.i.i484:                                  ; preds = %if.end59.i.i481
  %314 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7423
  %cmp63.i.i483 = icmp ule i64 %314, 1048576, !dbg !7424
  br i1 %cmp63.i.i483, label %if.then64.i.i485, label %if.end65.i.i487, !dbg !7425

if.then64.i.i485:                                 ; preds = %if.end62.i.i484
  store i32 20, i32* %retval.i.i396, align 4, !dbg !7426
  br label %kmalloc_index.exit.i506, !dbg !7426

if.end65.i.i487:                                  ; preds = %if.end62.i.i484
  %315 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7427
  %cmp66.i.i486 = icmp ule i64 %315, 2097152, !dbg !7428
  br i1 %cmp66.i.i486, label %if.then67.i.i488, label %if.end68.i.i490, !dbg !7429

if.then67.i.i488:                                 ; preds = %if.end65.i.i487
  store i32 21, i32* %retval.i.i396, align 4, !dbg !7430
  br label %kmalloc_index.exit.i506, !dbg !7430

if.end68.i.i490:                                  ; preds = %if.end65.i.i487
  %316 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7431
  %cmp69.i.i489 = icmp ule i64 %316, 4194304, !dbg !7432
  br i1 %cmp69.i.i489, label %if.then70.i.i491, label %if.end71.i.i493, !dbg !7433

if.then70.i.i491:                                 ; preds = %if.end68.i.i490
  store i32 22, i32* %retval.i.i396, align 4, !dbg !7434
  br label %kmalloc_index.exit.i506, !dbg !7434

if.end71.i.i493:                                  ; preds = %if.end68.i.i490
  %317 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7435
  %cmp72.i.i492 = icmp ule i64 %317, 8388608, !dbg !7436
  br i1 %cmp72.i.i492, label %if.then73.i.i494, label %if.end74.i.i496, !dbg !7437

if.then73.i.i494:                                 ; preds = %if.end71.i.i493
  store i32 23, i32* %retval.i.i396, align 4, !dbg !7438
  br label %kmalloc_index.exit.i506, !dbg !7438

if.end74.i.i496:                                  ; preds = %if.end71.i.i493
  %318 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7439
  %cmp75.i.i495 = icmp ule i64 %318, 16777216, !dbg !7440
  br i1 %cmp75.i.i495, label %if.then76.i.i497, label %if.end77.i.i499, !dbg !7441

if.then76.i.i497:                                 ; preds = %if.end74.i.i496
  store i32 24, i32* %retval.i.i396, align 4, !dbg !7442
  br label %kmalloc_index.exit.i506, !dbg !7442

if.end77.i.i499:                                  ; preds = %if.end74.i.i496
  %319 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7443
  %cmp78.i.i498 = icmp ule i64 %319, 33554432, !dbg !7444
  br i1 %cmp78.i.i498, label %if.then79.i.i500, label %if.end80.i.i502, !dbg !7445

if.then79.i.i500:                                 ; preds = %if.end77.i.i499
  store i32 25, i32* %retval.i.i396, align 4, !dbg !7446
  br label %kmalloc_index.exit.i506, !dbg !7446

if.end80.i.i502:                                  ; preds = %if.end77.i.i499
  %320 = load i64, i64* %size.addr.i11.i397, align 8, !dbg !7447
  %cmp81.i.i501 = icmp ule i64 %320, 67108864, !dbg !7448
  br i1 %cmp81.i.i501, label %if.then82.i.i503, label %if.end83.i.i504, !dbg !7449

if.then82.i.i503:                                 ; preds = %if.end80.i.i502
  store i32 26, i32* %retval.i.i396, align 4, !dbg !7450
  br label %kmalloc_index.exit.i506, !dbg !7450

if.end83.i.i504:                                  ; preds = %if.end80.i.i502
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7451, !srcloc !7074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !7452, !srcloc !7078
  unreachable, !dbg !7453

kmalloc_index.exit.i506:                          ; preds = %if.then82.i.i503, %if.then79.i.i500, %if.then76.i.i497, %if.then73.i.i494, %if.then70.i.i491, %if.then67.i.i488, %if.then64.i.i485, %if.then61.i.i482, %if.then58.i.i479, %if.then55.i.i476, %if.then52.i.i473, %if.then49.i.i470, %if.then46.i.i467, %if.then43.i.i464, %if.then40.i.i461, %if.then37.i.i458, %if.then34.i.i455, %if.then31.i.i452, %if.then28.i.i449, %if.then25.i.i446, %if.then22.i.i443, %if.then19.i.i440, %if.then16.i.i437, %if.then13.i.i434, %if.then10.i.i431, %if.then5.i.i426, %if.then1.i.i421, %if.then.i.i418
  %321 = load i32, i32* %retval.i.i396, align 4, !dbg !7454
  store i32 %321, i32* %index.i407, align 4, !dbg !7455
  %322 = load i32, i32* %index.i407, align 4, !dbg !7456
  %tobool.i505 = icmp ne i32 %322, 0, !dbg !7456
  br i1 %tobool.i505, label %if.end4.i513, label %if.then3.i507, !dbg !7457

if.then3.i507:                                    ; preds = %kmalloc_index.exit.i506
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i404, align 8, !dbg !7458
  br label %kmalloc.exit534, !dbg !7458

if.end4.i513:                                     ; preds = %kmalloc_index.exit.i506
  %323 = load i32, i32* %flags.addr.i406, align 4, !dbg !7459
  store i32 %323, i32* %flags.addr.i13.i395, align 4
  %324 = load i32, i32* %flags.addr.i13.i395, align 4, !dbg !7460
  %and.i.i508 = and i32 %324, 17, !dbg !7460
  %cmp.i14.i509 = icmp eq i32 %and.i.i508, 0, !dbg !7460
  %lnot.i.i510 = xor i1 %cmp.i14.i509, true, !dbg !7460
  %lnot.ext.i.i511 = zext i1 %cmp.i14.i509 to i32, !dbg !7460
  %conv.i.i512 = sext i32 %lnot.ext.i.i511 to i64, !dbg !7460
  br i1 %cmp.i14.i509, label %if.then.i15.i514, label %if.end.i16.i518, !dbg !7461

if.then.i15.i514:                                 ; preds = %if.end4.i513
  store i32 0, i32* %retval.i12.i394, align 4, !dbg !7462
  br label %kmalloc_type.exit.i528, !dbg !7462

if.end.i16.i518:                                  ; preds = %if.end4.i513
  %325 = load i32, i32* %flags.addr.i13.i395, align 4, !dbg !7463
  %and2.i.i515 = and i32 %325, 1, !dbg !7464
  %tobool3.i.i516 = icmp ne i32 %and2.i.i515, 0, !dbg !7463
  %326 = zext i1 %tobool3.i.i516 to i64, !dbg !7463
  %cond.i.i517 = select i1 %tobool3.i.i516, i32 2, i32 1, !dbg !7463
  store i32 %cond.i.i517, i32* %retval.i12.i394, align 4, !dbg !7465
  br label %kmalloc_type.exit.i528, !dbg !7465

kmalloc_type.exit.i528:                           ; preds = %if.end.i16.i518, %if.then.i15.i514
  %327 = load i32, i32* %retval.i12.i394, align 4, !dbg !7466
  %idxprom.i519 = zext i32 %327 to i64, !dbg !7467
  %arrayidx.i520 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i519, !dbg !7467
  %328 = load i32, i32* %index.i407, align 4, !dbg !7468
  %idxprom6.i521 = zext i32 %328 to i64, !dbg !7467
  %arrayidx7.i522 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i520, i64 0, i64 %idxprom6.i521, !dbg !7467
  %329 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i522, align 8, !dbg !7467
  %330 = load i32, i32* %flags.addr.i406, align 4, !dbg !7469
  %331 = load i64, i64* %size.addr.i405, align 8, !dbg !7470
  store %struct.kmem_cache* %329, %struct.kmem_cache** %s.addr.i.i390, align 8
  store i32 %330, i32* %flags.addr.i17.i391, align 4
  store i64 %331, i64* %size.addr.i18.i392, align 8
  %332 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i390, align 8, !dbg !7471
  %333 = load i32, i32* %flags.addr.i17.i391, align 4, !dbg !7472
  %call.i19.i523 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %332, i32 %333) #14, !dbg !7473
  %ptrint.i.i524 = ptrtoint i8* %call.i19.i523 to i64, !dbg !7473
  %maskedptr.i.i525 = and i64 %ptrint.i.i524, 7, !dbg !7473
  %maskcond.i.i526 = icmp eq i64 %maskedptr.i.i525, 0, !dbg !7473
  call void @llvm.assume(i1 %maskcond.i.i526) #10, !dbg !7473
  store i8* %call.i19.i523, i8** %ret.i.i393, align 8, !dbg !6547
  %334 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i390, align 8, !dbg !7474
  %335 = load i8*, i8** %ret.i.i393, align 8, !dbg !7475
  %336 = load i64, i64* %size.addr.i18.i392, align 8, !dbg !7476
  %337 = load i32, i32* %flags.addr.i17.i391, align 4, !dbg !7477
  %call1.i.i527 = call i8* @kasan_kmalloc(%struct.kmem_cache* %334, i8* %335, i64 %336, i32 %337) #14, !dbg !7478
  store i8* %call1.i.i527, i8** %ret.i.i393, align 8, !dbg !7479
  %338 = load i8*, i8** %ret.i.i393, align 8, !dbg !7480
  store i8* %338, i8** %retval.i404, align 8, !dbg !7481
  br label %kmalloc.exit534, !dbg !7481

if.end9.i533:                                     ; preds = %if.end191
  %339 = load i64, i64* %size.addr.i405, align 8, !dbg !7482
  %340 = load i32, i32* %flags.addr.i406, align 4, !dbg !7483
  %call10.i529 = call noalias i8* @__kmalloc(i64 %339, i32 %340) #14, !dbg !7484
  %ptrint.i530 = ptrtoint i8* %call10.i529 to i64, !dbg !7484
  %maskedptr.i531 = and i64 %ptrint.i530, 7, !dbg !7484
  %maskcond.i532 = icmp eq i64 %maskedptr.i531, 0, !dbg !7484
  call void @llvm.assume(i1 %maskcond.i532) #10, !dbg !7484
  store i8* %call10.i529, i8** %retval.i404, align 8, !dbg !7485
  br label %kmalloc.exit534, !dbg !7485

kmalloc.exit534:                                  ; preds = %if.then1.i415, %if.then3.i507, %kmalloc_type.exit.i528, %if.end9.i533
  %341 = load i8*, i8** %retval.i404, align 8, !dbg !7486
  %342 = bitcast i8* %341 to %struct._IPS_SUBSYS*, !dbg !7487
  %343 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7488
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %343, i32 0, i32 24, !dbg !7489
  store %struct._IPS_SUBSYS* %342, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !7490
  %344 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7491
  %subsys193 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %344, i32 0, i32 24, !dbg !7493
  %345 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys193, align 8, !dbg !7493
  %tobool194 = icmp ne %struct._IPS_SUBSYS* %345, null, !dbg !7491
  br i1 %tobool194, label %if.end198, label %if.then195, !dbg !7494

if.then195:                                       ; preds = %kmalloc.exit534
  %346 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7495
  %dev196 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %346, i32 0, i32 41, !dbg !7495
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev196, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !7495
  %347 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7497
  %348 = load i32, i32* %index, align 4, !dbg !7498
  %call197 = call i32 @ips_abort_init(%struct.ips_ha* %347, i32 %348) #11, !dbg !7499
  store i32 %call197, i32* %retval, align 4, !dbg !7500
  br label %return, !dbg !7500

if.end198:                                        ; preds = %kmalloc.exit534
  %349 = load i32, i32* @ips_ioctlsize, align 4, !dbg !7501
  %conv199 = sext i32 %349 to i64, !dbg !7501
  %cmp200 = icmp ult i64 %conv199, 4096, !dbg !7503
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !7504

if.then202:                                       ; preds = %if.end198
  store i32 4096, i32* @ips_ioctlsize, align 4, !dbg !7505
  br label %if.end203, !dbg !7506

if.end203:                                        ; preds = %if.then202, %if.end198
  %350 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7507
  %dev204 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %350, i32 0, i32 41, !dbg !7508
  %351 = load i32, i32* @ips_ioctlsize, align 4, !dbg !7509
  %conv205 = sext i32 %351 to i64, !dbg !7509
  %352 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7510
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %352, i32 0, i32 36, !dbg !7511
  %call206 = call i8* @dma_alloc_coherent(%struct.device* %dev204, i64 %conv205, i64* %ioctl_busaddr, i32 3264) #11, !dbg !7512
  %353 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7513
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %353, i32 0, i32 25, !dbg !7514
  store i8* %call206, i8** %ioctl_data, align 8, !dbg !7515
  %354 = load i32, i32* @ips_ioctlsize, align 4, !dbg !7516
  %355 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7517
  %ioctl_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %355, i32 0, i32 35, !dbg !7518
  store i32 %354, i32* %ioctl_len, align 4, !dbg !7519
  %356 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7520
  %ioctl_data207 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %356, i32 0, i32 25, !dbg !7522
  %357 = load i8*, i8** %ioctl_data207, align 8, !dbg !7522
  %tobool208 = icmp ne i8* %357, null, !dbg !7520
  br i1 %tobool208, label %if.end212, label %if.then209, !dbg !7523

if.then209:                                       ; preds = %if.end203
  %358 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7524
  %dev210 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %358, i32 0, i32 41, !dbg !7524
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev210, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !7524
  %359 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7526
  %360 = load i32, i32* %index, align 4, !dbg !7527
  %call211 = call i32 @ips_abort_init(%struct.ips_ha* %359, i32 %360) #11, !dbg !7528
  store i32 %call211, i32* %retval, align 4, !dbg !7529
  br label %return, !dbg !7529

if.end212:                                        ; preds = %if.end203
  %361 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7530
  call void @ips_setup_funclist(%struct.ips_ha* %361) #11, !dbg !7531
  %362 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7532
  %pcidev213 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %362, i32 0, i32 44, !dbg !7532
  %363 = load %struct.pci_dev*, %struct.pci_dev** %pcidev213, align 8, !dbg !7532
  %device214 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %363, i32 0, i32 8, !dbg !7532
  %364 = load i16, i16* %device214, align 2, !dbg !7532
  %conv215 = zext i16 %364 to i32, !dbg !7532
  %cmp216 = icmp eq i32 %conv215, 445, !dbg !7532
  br i1 %cmp216, label %if.then224, label %lor.lhs.false218, !dbg !7534

lor.lhs.false218:                                 ; preds = %if.end212
  %365 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7535
  %pcidev219 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %365, i32 0, i32 44, !dbg !7535
  %366 = load %struct.pci_dev*, %struct.pci_dev** %pcidev219, align 8, !dbg !7535
  %device220 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %366, i32 0, i32 8, !dbg !7535
  %367 = load i16, i16* %device220, align 2, !dbg !7535
  %conv221 = zext i16 %367 to i32, !dbg !7535
  %cmp222 = icmp eq i32 %conv221, 592, !dbg !7535
  br i1 %cmp222, label %if.then224, label %if.end233, !dbg !7536

if.then224:                                       ; preds = %lor.lhs.false218, %if.end212
  %368 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7537
  %mem_ptr225 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %368, i32 0, i32 41, !dbg !7539
  %369 = load i8*, i8** %mem_ptr225, align 8, !dbg !7539
  %add.ptr226 = getelementptr i8, i8* %369, i64 28, !dbg !7540
  %call227 = call i32 @readl(i8* %add.ptr226) #11, !dbg !7541
  store i32 %call227, i32* %IsDead, align 4, !dbg !7542
  %370 = load i32, i32* %IsDead, align 4, !dbg !7543
  %cmp228 = icmp eq i32 %370, -559038737, !dbg !7545
  br i1 %cmp228, label %if.then230, label %if.end232, !dbg !7546

if.then230:                                       ; preds = %if.then224
  %371 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7547
  %call231 = call i32 @ips_reset_morpheus(%struct.ips_ha* %371) #11, !dbg !7549
  br label %if.end232, !dbg !7550

if.end232:                                        ; preds = %if.then230, %if.then224
  br label %if.end233, !dbg !7551

if.end233:                                        ; preds = %if.end232, %lor.lhs.false218
  %372 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7552
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %372, i32 0, i32 43, !dbg !7554
  %isinit = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 2, !dbg !7555
  %373 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %isinit, align 8, !dbg !7555
  %374 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7556
  %call234 = call i32 %373(%struct.ips_ha* %374) #11, !dbg !7557
  %tobool235 = icmp ne i32 %call234, 0, !dbg !7557
  br i1 %tobool235, label %if.end244, label %if.then236, !dbg !7558

if.then236:                                       ; preds = %if.end233
  %375 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7559
  %func237 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %375, i32 0, i32 43, !dbg !7562
  %init = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func237, i32 0, i32 4, !dbg !7563
  %376 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %init, align 8, !dbg !7563
  %377 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7564
  %call238 = call i32 %376(%struct.ips_ha* %377) #11, !dbg !7565
  %tobool239 = icmp ne i32 %call238, 0, !dbg !7565
  br i1 %tobool239, label %if.end243, label %if.then240, !dbg !7566

if.then240:                                       ; preds = %if.then236
  %378 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7567
  %dev241 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %378, i32 0, i32 41, !dbg !7567
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev241, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !7567
  %379 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7569
  %380 = load i32, i32* %index, align 4, !dbg !7570
  %call242 = call i32 @ips_abort_init(%struct.ips_ha* %379, i32 %380) #11, !dbg !7571
  store i32 %call242, i32* %retval, align 4, !dbg !7572
  br label %return, !dbg !7572

if.end243:                                        ; preds = %if.then236
  br label %if.end244, !dbg !7573

if.end244:                                        ; preds = %if.end243, %if.end233
  %381 = load i32, i32* %index, align 4, !dbg !7574
  %382 = load i32*, i32** %indexPtr.addr, align 8, !dbg !7575
  store i32 %381, i32* %382, align 4, !dbg !7576
  store i32 8194, i32* %retval, align 4, !dbg !7577
  br label %return, !dbg !7577

return:                                           ; preds = %if.end244, %if.then240, %if.then209, %if.then195, %if.then188, %if.then181, %if.then174, %if.then162, %if.then154, %if.then138, %if.then101, %if.then94, %if.then3
  %383 = load i32, i32* %retval, align 4, !dbg !7578
  ret i32 %383, !dbg !7578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_init_phase2(i32 %index) #0 !dbg !7579 {
entry:
  %retval = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %ha = alloca %struct.ips_ha*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !7582, metadata !DIExpression()), !dbg !7583
  %0 = load i32, i32* %index.addr, align 4, !dbg !7584
  %idxprom = sext i32 %0 to i64, !dbg !7585
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !7585
  %1 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !7585
  store %struct.ips_ha* %1, %struct.ips_ha** %ha, align 8, !dbg !7586
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7587
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 30, !dbg !7589
  %3 = load i8, i8* %active, align 1, !dbg !7589
  %tobool = icmp ne i8 %3, 0, !dbg !7587
  br i1 %tobool, label %if.end, label %if.then, !dbg !7590

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !7591
  %idxprom1 = sext i32 %4 to i64, !dbg !7593
  %arrayidx2 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom1, !dbg !7593
  store %struct.ips_ha* null, %struct.ips_ha** %arrayidx2, align 8, !dbg !7594
  store i32 -1, i32* %retval, align 4, !dbg !7595
  br label %return, !dbg !7595

if.end:                                           ; preds = %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7596
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 44, !dbg !7598
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !7598
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 43, !dbg !7599
  %7 = load i32, i32* %irq, align 4, !dbg !7599
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7600
  %9 = bitcast %struct.ips_ha* %8 to i8*, !dbg !7600
  %call = call i32 @request_irq(i32 %7, i32 (i32, i8*)* @do_ipsintr, i64 128, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ips_name, i64 0, i64 0), i8* %9) #11, !dbg !7601
  %tobool3 = icmp ne i32 %call, 0, !dbg !7601
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !7602

if.then4:                                         ; preds = %if.end
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7603
  %pcidev5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 44, !dbg !7603
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pcidev5, align 8, !dbg !7603
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !7603
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !7603
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7605
  %13 = load i32, i32* %index.addr, align 4, !dbg !7606
  %call6 = call i32 @ips_abort_init(%struct.ips_ha* %12, i32 %13) #11, !dbg !7607
  store i32 %call6, i32* %retval, align 4, !dbg !7608
  br label %return, !dbg !7608

if.end7:                                          ; preds = %if.end
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7609
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 9, !dbg !7610
  store i32 1, i32* %max_cmds, align 8, !dbg !7611
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7612
  %call8 = call i32 @ips_allocatescbs(%struct.ips_ha* %15) #11, !dbg !7614
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7614
  br i1 %tobool9, label %if.end17, label %if.then10, !dbg !7615

if.then10:                                        ; preds = %if.end7
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7616
  %pcidev11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 44, !dbg !7616
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev11, align 8, !dbg !7616
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !7616
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !7616
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7618
  %pcidev13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 44, !dbg !7619
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pcidev13, align 8, !dbg !7619
  %irq14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 43, !dbg !7620
  %20 = load i32, i32* %irq14, align 4, !dbg !7620
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7621
  %22 = bitcast %struct.ips_ha* %21 to i8*, !dbg !7621
  %call15 = call i8* @free_irq(i32 %20, i8* %22) #11, !dbg !7622
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7623
  %24 = load i32, i32* %index.addr, align 4, !dbg !7624
  %call16 = call i32 @ips_abort_init(%struct.ips_ha* %23, i32 %24) #11, !dbg !7625
  store i32 %call16, i32* %retval, align 4, !dbg !7626
  br label %return, !dbg !7626

if.end17:                                         ; preds = %if.end7
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7627
  %call18 = call i32 @ips_hainit(%struct.ips_ha* %25) #11, !dbg !7629
  %tobool19 = icmp ne i32 %call18, 0, !dbg !7629
  br i1 %tobool19, label %if.end27, label %if.then20, !dbg !7630

if.then20:                                        ; preds = %if.end17
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7631
  %pcidev21 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 44, !dbg !7631
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pcidev21, align 8, !dbg !7631
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !7631
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !7631
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7633
  %pcidev23 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 44, !dbg !7634
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pcidev23, align 8, !dbg !7634
  %irq24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 43, !dbg !7635
  %30 = load i32, i32* %irq24, align 4, !dbg !7635
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7636
  %32 = bitcast %struct.ips_ha* %31 to i8*, !dbg !7636
  %call25 = call i8* @free_irq(i32 %30, i8* %32) #11, !dbg !7637
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7638
  %34 = load i32, i32* %index.addr, align 4, !dbg !7639
  %call26 = call i32 @ips_abort_init(%struct.ips_ha* %33, i32 %34) #11, !dbg !7640
  store i32 %call26, i32* %retval, align 4, !dbg !7641
  br label %return, !dbg !7641

if.end27:                                         ; preds = %if.end17
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7642
  %call28 = call i32 @ips_deallocatescbs(%struct.ips_ha* %35, i32 1) #11, !dbg !7643
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7644
  %call29 = call i32 @ips_allocatescbs(%struct.ips_ha* %36) #11, !dbg !7646
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7646
  br i1 %tobool30, label %if.end38, label %if.then31, !dbg !7647

if.then31:                                        ; preds = %if.end27
  %37 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7648
  %pcidev32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %37, i32 0, i32 44, !dbg !7648
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pcidev32, align 8, !dbg !7648
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !7648
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev33, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !7648
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7650
  %pcidev34 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %39, i32 0, i32 44, !dbg !7651
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pcidev34, align 8, !dbg !7651
  %irq35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 43, !dbg !7652
  %41 = load i32, i32* %irq35, align 4, !dbg !7652
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7653
  %43 = bitcast %struct.ips_ha* %42 to i8*, !dbg !7653
  %call36 = call i8* @free_irq(i32 %41, i8* %43) #11, !dbg !7654
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7655
  %45 = load i32, i32* %index.addr, align 4, !dbg !7656
  %call37 = call i32 @ips_abort_init(%struct.ips_ha* %44, i32 %45) #11, !dbg !7657
  store i32 %call37, i32* %retval, align 4, !dbg !7658
  br label %return, !dbg !7658

if.end38:                                         ; preds = %if.end27
  store i32 8194, i32* %retval, align 4, !dbg !7659
  br label %return, !dbg !7659

return:                                           ; preds = %if.end38, %if.then31, %if.then20, %if.then10, %if.then4, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !7660
  ret i32 %46, !dbg !7660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_register_scsi(i32 %index) #0 !dbg !7661 {
entry:
  %retval = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %sh = alloca %struct.Scsi_Host*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %oldha = alloca %struct.ips_ha*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %sh, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %oldha, metadata !7668, metadata !DIExpression()), !dbg !7669
  %0 = load i32, i32* %index.addr, align 4, !dbg !7670
  %idxprom = sext i32 %0 to i64, !dbg !7671
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !7671
  %1 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !7671
  store %struct.ips_ha* %1, %struct.ips_ha** %oldha, align 8, !dbg !7669
  %call = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @ips_driver_template, i32 464) #11, !dbg !7672
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %sh, align 8, !dbg !7673
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7674
  %tobool = icmp ne %struct.Scsi_Host* %2, null, !dbg !7674
  br i1 %tobool, label %if.end, label %if.then, !dbg !7676

if.then:                                          ; preds = %entry
  %3 = load %struct.ips_ha*, %struct.ips_ha** %oldha, align 8, !dbg !7677
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 44, !dbg !7677
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !7677
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7677
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !7677
  store i32 -1, i32* %retval, align 4, !dbg !7679
  br label %return, !dbg !7679

if.end:                                           ; preds = %entry
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7680
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 51, !dbg !7680
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !7680
  %6 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !7680
  store %struct.ips_ha* %6, %struct.ips_ha** %ha, align 8, !dbg !7681
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7682
  %8 = bitcast %struct.ips_ha* %7 to i8*, !dbg !7683
  %9 = load %struct.ips_ha*, %struct.ips_ha** %oldha, align 8, !dbg !7684
  %10 = bitcast %struct.ips_ha* %9 to i8*, !dbg !7683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %10, i64 464, i1 false), !dbg !7683
  %11 = load %struct.ips_ha*, %struct.ips_ha** %oldha, align 8, !dbg !7685
  %pcidev1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 44, !dbg !7686
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pcidev1, align 8, !dbg !7686
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 43, !dbg !7687
  %13 = load i32, i32* %irq, align 4, !dbg !7687
  %14 = load %struct.ips_ha*, %struct.ips_ha** %oldha, align 8, !dbg !7688
  %15 = bitcast %struct.ips_ha* %14 to i8*, !dbg !7688
  %call2 = call i8* @free_irq(i32 %13, i8* %15) #11, !dbg !7689
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7690
  %pcidev3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 44, !dbg !7692
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev3, align 8, !dbg !7692
  %irq4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 43, !dbg !7693
  %18 = load i32, i32* %irq4, align 4, !dbg !7693
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7694
  %20 = bitcast %struct.ips_ha* %19 to i8*, !dbg !7694
  %call5 = call i32 @request_irq(i32 %18, i32 (i32, i8*)* @do_ipsintr, i64 128, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ips_name, i64 0, i64 0), i8* %20) #11, !dbg !7695
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7695
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !7696

if.then7:                                         ; preds = %if.end
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7697
  %pcidev8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %21, i32 0, i32 44, !dbg !7697
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pcidev8, align 8, !dbg !7697
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !7697
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !7697
  br label %err_out_sh, !dbg !7699

if.end10:                                         ; preds = %if.end
  %23 = load %struct.ips_ha*, %struct.ips_ha** %oldha, align 8, !dbg !7700
  %24 = bitcast %struct.ips_ha* %23 to i8*, !dbg !7700
  call void @kfree(i8* %24) #11, !dbg !7701
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7702
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 2, !dbg !7703
  %26 = load i32, i32* %io_addr, align 8, !dbg !7703
  %tobool11 = icmp ne i32 %26, 0, !dbg !7704
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !7704

cond.true:                                        ; preds = %if.end10
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7705
  %io_addr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 2, !dbg !7706
  %28 = load i32, i32* %io_addr12, align 8, !dbg !7706
  br label %cond.end, !dbg !7704

cond.false:                                       ; preds = %if.end10
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7707
  %mem_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %29, i32 0, i32 38, !dbg !7708
  %30 = load i32, i32* %mem_addr, align 8, !dbg !7708
  br label %cond.end, !dbg !7704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ %30, %cond.false ], !dbg !7704
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7709
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %31, i32 0, i32 22, !dbg !7710
  store i32 %cond, i32* %unique_id, align 8, !dbg !7711
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7712
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 10, !dbg !7713
  %33 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !7713
  %sg_tablesize = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %33, i32 0, i32 33, !dbg !7714
  %34 = load i16, i16* %sg_tablesize, align 8, !dbg !7714
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7715
  %sg_tablesize13 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 27, !dbg !7716
  store i16 %34, i16* %sg_tablesize13, align 2, !dbg !7717
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7718
  %hostt14 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %36, i32 0, i32 10, !dbg !7719
  %37 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt14, align 8, !dbg !7719
  %can_queue = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %37, i32 0, i32 31, !dbg !7720
  %38 = load i32, i32* %can_queue, align 8, !dbg !7720
  %39 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7721
  %can_queue15 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %39, i32 0, i32 25, !dbg !7722
  store i32 %38, i32* %can_queue15, align 4, !dbg !7723
  %40 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7724
  %hostt16 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %40, i32 0, i32 10, !dbg !7725
  %41 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt16, align 8, !dbg !7725
  %cmd_per_lun = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %41, i32 0, i32 39, !dbg !7726
  %42 = load i16, i16* %cmd_per_lun, align 8, !dbg !7726
  %43 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7727
  %cmd_per_lun17 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %43, i32 0, i32 26, !dbg !7728
  store i16 %42, i16* %cmd_per_lun17, align 8, !dbg !7729
  %44 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7730
  %max_sectors = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %44, i32 0, i32 29, !dbg !7731
  store i32 128, i32* %max_sectors, align 8, !dbg !7732
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7733
  %ntargets = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 3, !dbg !7734
  %46 = load i8, i8* %ntargets, align 4, !dbg !7734
  %conv = zext i8 %46 to i32, !dbg !7733
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7735
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 20, !dbg !7736
  store i32 %conv, i32* %max_id, align 4, !dbg !7737
  %48 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7738
  %nlun = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %48, i32 0, i32 5, !dbg !7739
  %49 = load i8, i8* %nlun, align 2, !dbg !7739
  %conv18 = zext i8 %49 to i64, !dbg !7738
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7740
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %50, i32 0, i32 21, !dbg !7741
  store i64 %conv18, i64* %max_lun, align 8, !dbg !7742
  %51 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7743
  %nbus = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %51, i32 0, i32 4, !dbg !7744
  %52 = load i8, i8* %nbus, align 1, !dbg !7744
  %conv19 = zext i8 %52 to i32, !dbg !7743
  %sub = sub i32 %conv19, 1, !dbg !7745
  %53 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7746
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %53, i32 0, i32 19, !dbg !7747
  store i32 %sub, i32* %max_channel, align 8, !dbg !7748
  %54 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7749
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %54, i32 0, i32 9, !dbg !7750
  %55 = load i32, i32* %max_cmds, align 8, !dbg !7750
  %sub20 = sub i32 %55, 1, !dbg !7751
  %56 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7752
  %can_queue21 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %56, i32 0, i32 25, !dbg !7753
  store i32 %sub20, i32* %can_queue21, align 4, !dbg !7754
  %57 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7755
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7757
  %pcidev22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 44, !dbg !7758
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pcidev22, align 8, !dbg !7758
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 41, !dbg !7759
  %call24 = call i32 @scsi_add_host(%struct.Scsi_Host* %57, %struct.device* %dev23) #11, !dbg !7760
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7760
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !7761

if.then26:                                        ; preds = %cond.end
  br label %err_out, !dbg !7762

if.end27:                                         ; preds = %cond.end
  %60 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7763
  %61 = load i32, i32* %index.addr, align 4, !dbg !7764
  %idxprom28 = sext i32 %61 to i64, !dbg !7765
  %arrayidx29 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom28, !dbg !7765
  store %struct.Scsi_Host* %60, %struct.Scsi_Host** %arrayidx29, align 8, !dbg !7766
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7767
  %63 = load i32, i32* %index.addr, align 4, !dbg !7768
  %idxprom30 = sext i32 %63 to i64, !dbg !7769
  %arrayidx31 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom30, !dbg !7769
  store %struct.ips_ha* %62, %struct.ips_ha** %arrayidx31, align 8, !dbg !7770
  %64 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7771
  call void @scsi_scan_host(%struct.Scsi_Host* %64) #11, !dbg !7772
  store i32 0, i32* %retval, align 4, !dbg !7773
  br label %return, !dbg !7773

err_out:                                          ; preds = %if.then26
  call void @llvm.dbg.label(metadata !7774), !dbg !7775
  %65 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7776
  %pcidev32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %65, i32 0, i32 44, !dbg !7777
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pcidev32, align 8, !dbg !7777
  %irq33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 43, !dbg !7778
  %67 = load i32, i32* %irq33, align 4, !dbg !7778
  %68 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !7779
  %69 = bitcast %struct.ips_ha* %68 to i8*, !dbg !7779
  %call34 = call i8* @free_irq(i32 %67, i8* %69) #11, !dbg !7780
  br label %err_out_sh, !dbg !7780

err_out_sh:                                       ; preds = %err_out, %if.then7
  call void @llvm.dbg.label(metadata !7781), !dbg !7782
  %70 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh, align 8, !dbg !7783
  call void @scsi_host_put(%struct.Scsi_Host* %70) #11, !dbg !7784
  store i32 -1, i32* %retval, align 4, !dbg !7785
  br label %return, !dbg !7785

return:                                           ; preds = %err_out_sh, %if.end27, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !7786
  ret i32 %71, !dbg !7786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_free(%struct.ips_ha* %ha) #0 !dbg !7787 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !7790, metadata !DIExpression()), !dbg !7791
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7792
  %tobool = icmp ne %struct.ips_ha* %0, null, !dbg !7792
  br i1 %tobool, label %if.then, label %if.end37, !dbg !7794

if.then:                                          ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7795
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 21, !dbg !7798
  %2 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !7798
  %tobool1 = icmp ne %struct.IPS_ENQ* %2, null, !dbg !7795
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7799

if.then2:                                         ; preds = %if.then
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7800
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 44, !dbg !7802
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !7802
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7803
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7804
  %enq3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 21, !dbg !7805
  %6 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq3, align 8, !dbg !7805
  %7 = bitcast %struct.IPS_ENQ* %6 to i8*, !dbg !7804
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7806
  %enq_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 49, !dbg !7807
  %9 = load i64, i64* %enq_busaddr, align 8, !dbg !7807
  call void @dma_free_coherent(%struct.device* %dev, i64 196, i8* %7, i64 %9) #11, !dbg !7808
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7809
  %enq4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 21, !dbg !7810
  store %struct.IPS_ENQ* null, %struct.IPS_ENQ** %enq4, align 8, !dbg !7811
  br label %if.end, !dbg !7812

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7813
  %conf = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 22, !dbg !7814
  %12 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf, align 8, !dbg !7814
  %13 = bitcast %struct.IPS_CONF* %12 to i8*, !dbg !7813
  call void @kfree(i8* %13) #11, !dbg !7815
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7816
  %conf5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 22, !dbg !7817
  store %struct.IPS_CONF* null, %struct.IPS_CONF** %conf5, align 8, !dbg !7818
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7819
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 18, !dbg !7821
  %16 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !7821
  %tobool6 = icmp ne %struct.IPS_ADAPTER* %16, null, !dbg !7819
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !7822

if.then7:                                         ; preds = %if.end
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7823
  %pcidev8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 44, !dbg !7825
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pcidev8, align 8, !dbg !7825
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !7826
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7827
  %adapt10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 18, !dbg !7828
  %20 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt10, align 8, !dbg !7828
  %21 = bitcast %struct.IPS_ADAPTER* %20 to i8*, !dbg !7827
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7829
  %adapt11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 18, !dbg !7830
  %23 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt11, align 8, !dbg !7830
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %23, i32 0, i32 4, !dbg !7831
  %24 = load volatile i32, i32* %hw_status_start, align 8, !dbg !7831
  %conv = zext i32 %24 to i64, !dbg !7829
  call void @dma_free_coherent(%struct.device* %dev9, i64 576, i8* %21, i64 %conv) #11, !dbg !7832
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7833
  %adapt12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 18, !dbg !7834
  store %struct.IPS_ADAPTER* null, %struct.IPS_ADAPTER** %adapt12, align 8, !dbg !7835
  br label %if.end13, !dbg !7836

if.end13:                                         ; preds = %if.then7, %if.end
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7837
  %logical_drive_info = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 19, !dbg !7839
  %27 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info, align 8, !dbg !7839
  %tobool14 = icmp ne %struct.IPS_LD_INFO* %27, null, !dbg !7837
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !7840

if.then15:                                        ; preds = %if.end13
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7841
  %pcidev16 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 44, !dbg !7843
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pcidev16, align 8, !dbg !7843
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !7844
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7845
  %logical_drive_info18 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 19, !dbg !7846
  %31 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info18, align 8, !dbg !7846
  %32 = bitcast %struct.IPS_LD_INFO* %31 to i8*, !dbg !7845
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7847
  %logical_drive_info_dma_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 20, !dbg !7848
  %34 = load i64, i64* %logical_drive_info_dma_addr, align 8, !dbg !7848
  call void @dma_free_coherent(%struct.device* %dev17, i64 68, i8* %32, i64 %34) #11, !dbg !7849
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7850
  %logical_drive_info19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 19, !dbg !7851
  store %struct.IPS_LD_INFO* null, %struct.IPS_LD_INFO** %logical_drive_info19, align 8, !dbg !7852
  br label %if.end20, !dbg !7853

if.end20:                                         ; preds = %if.then15, %if.end13
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7854
  %nvram = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 23, !dbg !7855
  %37 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !7855
  %38 = bitcast %struct.IPS_NVRAM_P5* %37 to i8*, !dbg !7854
  call void @kfree(i8* %38) #11, !dbg !7856
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7857
  %nvram21 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %39, i32 0, i32 23, !dbg !7858
  store %struct.IPS_NVRAM_P5* null, %struct.IPS_NVRAM_P5** %nvram21, align 8, !dbg !7859
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7860
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 24, !dbg !7861
  %41 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !7861
  %42 = bitcast %struct._IPS_SUBSYS* %41 to i8*, !dbg !7860
  call void @kfree(i8* %42) #11, !dbg !7862
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7863
  %subsys22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 24, !dbg !7864
  store %struct._IPS_SUBSYS* null, %struct._IPS_SUBSYS** %subsys22, align 8, !dbg !7865
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7866
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 25, !dbg !7868
  %45 = load i8*, i8** %ioctl_data, align 8, !dbg !7868
  %tobool23 = icmp ne i8* %45, null, !dbg !7866
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !7869

if.then24:                                        ; preds = %if.end20
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7870
  %pcidev25 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 44, !dbg !7872
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pcidev25, align 8, !dbg !7872
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 41, !dbg !7873
  %48 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7874
  %ioctl_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %48, i32 0, i32 35, !dbg !7875
  %49 = load i32, i32* %ioctl_len, align 4, !dbg !7875
  %conv27 = sext i32 %49 to i64, !dbg !7874
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7876
  %ioctl_data28 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 25, !dbg !7877
  %51 = load i8*, i8** %ioctl_data28, align 8, !dbg !7877
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7878
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 36, !dbg !7879
  %53 = load i64, i64* %ioctl_busaddr, align 8, !dbg !7879
  call void @dma_free_coherent(%struct.device* %dev26, i64 %conv27, i8* %51, i64 %53) #11, !dbg !7880
  %54 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7881
  %ioctl_data29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %54, i32 0, i32 25, !dbg !7882
  store i8* null, i8** %ioctl_data29, align 8, !dbg !7883
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7884
  %ioctl_datasize = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 26, !dbg !7885
  store i32 0, i32* %ioctl_datasize, align 8, !dbg !7886
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7887
  %ioctl_len30 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 35, !dbg !7888
  store i32 0, i32* %ioctl_len30, align 4, !dbg !7889
  br label %if.end31, !dbg !7890

if.end31:                                         ; preds = %if.then24, %if.end20
  %57 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7891
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7892
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 9, !dbg !7893
  %59 = load i32, i32* %max_cmds, align 8, !dbg !7893
  %call = call i32 @ips_deallocatescbs(%struct.ips_ha* %57, i32 %59) #11, !dbg !7894
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7895
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 41, !dbg !7897
  %61 = load i8*, i8** %mem_ptr, align 8, !dbg !7897
  %tobool32 = icmp ne i8* %61, null, !dbg !7895
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !7898

if.then33:                                        ; preds = %if.end31
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7899
  %ioremap_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %62, i32 0, i32 42, !dbg !7901
  %63 = load i8*, i8** %ioremap_ptr, align 8, !dbg !7901
  call void @iounmap(i8* %63) #11, !dbg !7902
  %64 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7903
  %ioremap_ptr34 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %64, i32 0, i32 42, !dbg !7904
  store i8* null, i8** %ioremap_ptr34, align 8, !dbg !7905
  %65 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7906
  %mem_ptr35 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %65, i32 0, i32 41, !dbg !7907
  store i8* null, i8** %mem_ptr35, align 8, !dbg !7908
  br label %if.end36, !dbg !7909

if.end36:                                         ; preds = %if.then33, %if.end31
  %66 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !7910
  %mem_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %66, i32 0, i32 38, !dbg !7911
  store i32 0, i32* %mem_addr, align 8, !dbg !7912
  br label %if.end37, !dbg !7913

if.end37:                                         ; preds = %if.end36, %entry
  ret void, !dbg !7914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #0 !dbg !7915 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7922
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7923
  %1 = load i8*, i8** %data.addr, align 8, !dbg !7924
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !7925
  ret void, !dbg !7926
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7927 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6530, metadata !DIExpression()), !dbg !7928
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6542, metadata !DIExpression()), !dbg !7931
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6544, metadata !DIExpression()), !dbg !7932
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6546, metadata !DIExpression()), !dbg !7933
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6548, metadata !DIExpression()), !dbg !7934
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6554, metadata !DIExpression()), !dbg !7936
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6560, metadata !DIExpression()), !dbg !7938
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6569, metadata !DIExpression()), !dbg !7941
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6571, metadata !DIExpression()), !dbg !7942
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6573, metadata !DIExpression()), !dbg !7943
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6575, metadata !DIExpression()), !dbg !7944
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6577, metadata !DIExpression()), !dbg !7945
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6579, metadata !DIExpression()), !dbg !7946
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6581, metadata !DIExpression()), !dbg !7947
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6583, metadata !DIExpression()), !dbg !7948
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7949, metadata !DIExpression()), !dbg !7950
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7951, metadata !DIExpression()), !dbg !7952
  %0 = load i64, i64* %size.addr, align 8, !dbg !7953
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7954
  %or = or i32 %1, 256, !dbg !7955
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7956
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !7957
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7958

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7959
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7960
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7961

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7962
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7963
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7964
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !7965
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7945
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7966
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7967
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7968
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7969
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7970
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7971
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !7972
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7972
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7972
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7972
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !7972
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7973
  br label %kmalloc.exit, !dbg !7973

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7974
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7975
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7975
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7976

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7977
  br label %kmalloc_index.exit.i, !dbg !7977

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7978
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7979
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7980

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7981
  br label %kmalloc_index.exit.i, !dbg !7981

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7982
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7983
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7984

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7985
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7986
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7987

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7988
  br label %kmalloc_index.exit.i, !dbg !7988

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7989
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7990
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7991

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7992
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7993
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7994

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7995
  br label %kmalloc_index.exit.i, !dbg !7995

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7996
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7997
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7998

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7999
  br label %kmalloc_index.exit.i, !dbg !7999

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8000
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8001
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8002

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8003
  br label %kmalloc_index.exit.i, !dbg !8003

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8004
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8005
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8006

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8007
  br label %kmalloc_index.exit.i, !dbg !8007

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8008
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8009
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8010

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8011
  br label %kmalloc_index.exit.i, !dbg !8011

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8012
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8013
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8014

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8015
  br label %kmalloc_index.exit.i, !dbg !8015

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8016
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8017
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8018

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8019
  br label %kmalloc_index.exit.i, !dbg !8019

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8020
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8021
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8022

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8023
  br label %kmalloc_index.exit.i, !dbg !8023

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8024
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8025
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8026

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8027
  br label %kmalloc_index.exit.i, !dbg !8027

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8028
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8029
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8030

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8031
  br label %kmalloc_index.exit.i, !dbg !8031

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8032
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8033
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8034

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8035
  br label %kmalloc_index.exit.i, !dbg !8035

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8036
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8037
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8038

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8039
  br label %kmalloc_index.exit.i, !dbg !8039

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8040
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8041
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8042

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8043
  br label %kmalloc_index.exit.i, !dbg !8043

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8044
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8045
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8046

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8047
  br label %kmalloc_index.exit.i, !dbg !8047

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8048
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8049
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8050

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8051
  br label %kmalloc_index.exit.i, !dbg !8051

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8052
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8053
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8054

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8055
  br label %kmalloc_index.exit.i, !dbg !8055

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8056
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8057
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8058

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8059
  br label %kmalloc_index.exit.i, !dbg !8059

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8060
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8061
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8062

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8063
  br label %kmalloc_index.exit.i, !dbg !8063

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8064
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8065
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8066

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8067
  br label %kmalloc_index.exit.i, !dbg !8067

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8068
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8069
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8070

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8071
  br label %kmalloc_index.exit.i, !dbg !8071

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8072
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8073
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8074

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8075
  br label %kmalloc_index.exit.i, !dbg !8075

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8076
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8077
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8078

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8079
  br label %kmalloc_index.exit.i, !dbg !8079

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8080
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8081
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8082

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8083
  br label %kmalloc_index.exit.i, !dbg !8083

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8084
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8085
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8086

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8087
  br label %kmalloc_index.exit.i, !dbg !8087

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8088
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8089
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8090

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8091
  br label %kmalloc_index.exit.i, !dbg !8091

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !8092, !srcloc !7074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !8093, !srcloc !7078
  unreachable, !dbg !8094

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8095
  store i32 %45, i32* %index.i, align 4, !dbg !8096
  %46 = load i32, i32* %index.i, align 4, !dbg !8097
  %tobool.i = icmp ne i32 %46, 0, !dbg !8097
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8098

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8099
  br label %kmalloc.exit, !dbg !8099

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8100
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8101
  %and.i.i = and i32 %48, 17, !dbg !8101
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8101
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8101
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8101
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8101
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8102

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8103
  br label %kmalloc_type.exit.i, !dbg !8103

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8104
  %and2.i.i = and i32 %49, 1, !dbg !8105
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8104
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8104
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8104
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8106
  br label %kmalloc_type.exit.i, !dbg !8106

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8107
  %idxprom.i = zext i32 %51 to i64, !dbg !8108
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8108
  %52 = load i32, i32* %index.i, align 4, !dbg !8109
  %idxprom6.i = zext i32 %52 to i64, !dbg !8108
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8108
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8108
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8110
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8111
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8112
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8113
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !8114
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8114
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8114
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8114
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !8114
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7933
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8115
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8116
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8117
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8118
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !8119
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8120
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8121
  store i8* %62, i8** %retval.i, align 8, !dbg !8122
  br label %kmalloc.exit, !dbg !8122

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8123
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8124
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !8125
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8125
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8125
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8125
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !8125
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8126
  br label %kmalloc.exit, !dbg !8126

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8127
  ret i8* %65, !dbg !8128
}

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_abort_init(%struct.ips_ha* %ha, i32 %index) #0 !dbg !8129 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %index.addr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8136
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 30, !dbg !8137
  store i8 0, i8* %active, align 1, !dbg !8138
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8139
  call void @ips_free(%struct.ips_ha* %1) #11, !dbg !8140
  %2 = load i32, i32* %index.addr, align 4, !dbg !8141
  %idxprom = sext i32 %2 to i64, !dbg !8142
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !8142
  store %struct.ips_ha* null, %struct.ips_ha** %arrayidx, align 8, !dbg !8143
  %3 = load i32, i32* %index.addr, align 4, !dbg !8144
  %idxprom1 = sext i32 %3 to i64, !dbg !8145
  %arrayidx2 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom1, !dbg !8145
  store %struct.Scsi_Host* null, %struct.Scsi_Host** %arrayidx2, align 8, !dbg !8146
  ret i32 -1, !dbg !8147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #0 !dbg !8148 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8160
  %1 = load i64, i64* %size.addr, align 8, !dbg !8161
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !8162
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !8163
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !8164
  %and = and i32 %4, 8192, !dbg !8165
  %tobool = icmp ne i32 %and, 0, !dbg !8166
  %5 = zext i1 %tobool to i64, !dbg !8166
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !8166
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !8167
  ret i8* %call, !dbg !8168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_setup_funclist(%struct.ips_ha* %ha) #0 !dbg !8169 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8172
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 44, !dbg !8172
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !8172
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 8, !dbg !8172
  %2 = load i16, i16* %device, align 2, !dbg !8172
  %conv = zext i16 %2 to i32, !dbg !8172
  %cmp = icmp eq i32 %conv, 445, !dbg !8172
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8174

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8175
  %pcidev2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 44, !dbg !8175
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pcidev2, align 8, !dbg !8175
  %device3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 8, !dbg !8175
  %5 = load i16, i16* %device3, align 2, !dbg !8175
  %conv4 = zext i16 %5 to i32, !dbg !8175
  %cmp5 = icmp eq i32 %conv4, 592, !dbg !8175
  br i1 %cmp5, label %if.then, label %if.else, !dbg !8176

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8177
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 43, !dbg !8179
  %isintr = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 3, !dbg !8180
  store i32 (%struct.ips_ha*)* @ips_isintr_morpheus, i32 (%struct.ips_ha*)** %isintr, align 8, !dbg !8181
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8182
  %func7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 43, !dbg !8183
  %isinit = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func7, i32 0, i32 2, !dbg !8184
  store i32 (%struct.ips_ha*)* @ips_isinit_morpheus, i32 (%struct.ips_ha*)** %isinit, align 8, !dbg !8185
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8186
  %func8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !8187
  %issue = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func8, i32 0, i32 1, !dbg !8188
  store i32 (%struct.ips_ha*, %struct.ips_scb*)* @ips_issue_i2o_memio, i32 (%struct.ips_ha*, %struct.ips_scb*)** %issue, align 8, !dbg !8189
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8190
  %func9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 43, !dbg !8191
  %init = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func9, i32 0, i32 4, !dbg !8192
  store i32 (%struct.ips_ha*)* @ips_init_morpheus, i32 (%struct.ips_ha*)** %init, align 8, !dbg !8193
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8194
  %func10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 43, !dbg !8195
  %statupd = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func10, i32 0, i32 11, !dbg !8196
  store i32 (%struct.ips_ha*)* @ips_statupd_morpheus, i32 (%struct.ips_ha*)** %statupd, align 8, !dbg !8197
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8198
  %func11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 43, !dbg !8199
  %reset = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func11, i32 0, i32 0, !dbg !8200
  store i32 (%struct.ips_ha*)* @ips_reset_morpheus, i32 (%struct.ips_ha*)** %reset, align 8, !dbg !8201
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8202
  %func12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 43, !dbg !8203
  %intr = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func12, i32 0, i32 9, !dbg !8204
  store i32 (%struct.ips_ha*)* @ips_intr_morpheus, i32 (%struct.ips_ha*)** %intr, align 8, !dbg !8205
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8206
  %func13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 43, !dbg !8207
  %enableint = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func13, i32 0, i32 10, !dbg !8208
  %enableint14 = bitcast {}** %enableint to void (%struct.ips_ha*)**, !dbg !8208
  store void (%struct.ips_ha*)* @ips_enable_int_morpheus, void (%struct.ips_ha*)** %enableint14, align 8, !dbg !8209
  br label %if.end177, !dbg !8210

if.else:                                          ; preds = %lor.lhs.false
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 44, !dbg !8211
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pcidev15, align 8, !dbg !8211
  %device16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 8, !dbg !8211
  %16 = load i16, i16* %device16, align 2, !dbg !8211
  %conv17 = zext i16 %16 to i32, !dbg !8211
  %cmp18 = icmp eq i32 %conv17, 445, !dbg !8211
  br i1 %cmp18, label %cond.true57, label %lor.lhs.false20, !dbg !8211

lor.lhs.false20:                                  ; preds = %if.else
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev21 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 44, !dbg !8211
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pcidev21, align 8, !dbg !8211
  %device22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 8, !dbg !8211
  %19 = load i16, i16* %device22, align 2, !dbg !8211
  %conv23 = zext i16 %19 to i32, !dbg !8211
  %cmp24 = icmp eq i32 %conv23, 46, !dbg !8211
  br i1 %cmp24, label %land.lhs.true, label %cond.false, !dbg !8211

land.lhs.true:                                    ; preds = %lor.lhs.false20
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev26 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 44, !dbg !8211
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pcidev26, align 8, !dbg !8211
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 12, !dbg !8211
  %22 = load i8, i8* %revision, align 8, !dbg !8211
  %conv27 = zext i8 %22 to i32, !dbg !8211
  %cmp28 = icmp sge i32 %conv27, 15, !dbg !8211
  br i1 %cmp28, label %land.lhs.true30, label %cond.false, !dbg !8211

land.lhs.true30:                                  ; preds = %land.lhs.true
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev31 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 44, !dbg !8211
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pcidev31, align 8, !dbg !8211
  %revision32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 12, !dbg !8211
  %25 = load i8, i8* %revision32, align 8, !dbg !8211
  %conv33 = zext i8 %25 to i32, !dbg !8211
  %cmp34 = icmp sle i32 %conv33, 16, !dbg !8211
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !8211

cond.true:                                        ; preds = %land.lhs.true30
  br i1 true, label %land.lhs.true56, label %lor.lhs.false36, !dbg !8211

cond.false:                                       ; preds = %land.lhs.true30, %land.lhs.true, %lor.lhs.false20
  br i1 false, label %land.lhs.true56, label %lor.lhs.false36, !dbg !8211

lor.lhs.false36:                                  ; preds = %cond.false, %cond.true
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev37 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 44, !dbg !8211
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pcidev37, align 8, !dbg !8211
  %device38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 8, !dbg !8211
  %28 = load i16, i16* %device38, align 2, !dbg !8211
  %conv39 = zext i16 %28 to i32, !dbg !8211
  %cmp40 = icmp eq i32 %conv39, 46, !dbg !8211
  br i1 %cmp40, label %land.lhs.true42, label %cond.false55, !dbg !8211

land.lhs.true42:                                  ; preds = %lor.lhs.false36
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev43 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %29, i32 0, i32 44, !dbg !8211
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pcidev43, align 8, !dbg !8211
  %revision44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 12, !dbg !8211
  %31 = load i8, i8* %revision44, align 8, !dbg !8211
  %conv45 = zext i8 %31 to i32, !dbg !8211
  %cmp46 = icmp sge i32 %conv45, 5, !dbg !8211
  br i1 %cmp46, label %land.lhs.true48, label %cond.false55, !dbg !8211

land.lhs.true48:                                  ; preds = %land.lhs.true42
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8211
  %pcidev49 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 44, !dbg !8211
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pcidev49, align 8, !dbg !8211
  %revision50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 12, !dbg !8211
  %34 = load i8, i8* %revision50, align 8, !dbg !8211
  %conv51 = zext i8 %34 to i32, !dbg !8211
  %cmp52 = icmp sle i32 %conv51, 13, !dbg !8211
  br i1 %cmp52, label %cond.true54, label %cond.false55, !dbg !8211

cond.true54:                                      ; preds = %land.lhs.true48
  br i1 true, label %land.lhs.true56, label %cond.false58, !dbg !8211

cond.false55:                                     ; preds = %land.lhs.true48, %land.lhs.true42, %lor.lhs.false36
  br i1 false, label %land.lhs.true56, label %cond.false58, !dbg !8211

land.lhs.true56:                                  ; preds = %cond.false55, %cond.true54, %cond.false, %cond.true
  %35 = load i32, i32* @ips_force_memio, align 4, !dbg !8211
  %tobool = icmp ne i32 %35, 0, !dbg !8211
  br i1 %tobool, label %cond.true57, label %cond.false58, !dbg !8213

cond.true57:                                      ; preds = %land.lhs.true56, %if.else
  br i1 true, label %if.then59, label %if.else115, !dbg !8211

cond.false58:                                     ; preds = %land.lhs.true56, %cond.false55, %cond.true54
  br i1 false, label %if.then59, label %if.else115, !dbg !8213

if.then59:                                        ; preds = %cond.false58, %cond.true57
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8214
  %func60 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 43, !dbg !8216
  %isintr61 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func60, i32 0, i32 3, !dbg !8217
  store i32 (%struct.ips_ha*)* @ips_isintr_copperhead_memio, i32 (%struct.ips_ha*)** %isintr61, align 8, !dbg !8218
  %37 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8219
  %func62 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %37, i32 0, i32 43, !dbg !8220
  %isinit63 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func62, i32 0, i32 2, !dbg !8221
  store i32 (%struct.ips_ha*)* @ips_isinit_copperhead_memio, i32 (%struct.ips_ha*)** %isinit63, align 8, !dbg !8222
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8223
  %func64 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 43, !dbg !8224
  %init65 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func64, i32 0, i32 4, !dbg !8225
  store i32 (%struct.ips_ha*)* @ips_init_copperhead_memio, i32 (%struct.ips_ha*)** %init65, align 8, !dbg !8226
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8227
  %func66 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %39, i32 0, i32 43, !dbg !8228
  %statupd67 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func66, i32 0, i32 11, !dbg !8229
  store i32 (%struct.ips_ha*)* @ips_statupd_copperhead_memio, i32 (%struct.ips_ha*)** %statupd67, align 8, !dbg !8230
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8231
  %func68 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 43, !dbg !8232
  %statinit = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func68, i32 0, i32 8, !dbg !8233
  %statinit69 = bitcast {}** %statinit to void (%struct.ips_ha*)**, !dbg !8233
  store void (%struct.ips_ha*)* @ips_statinit_memio, void (%struct.ips_ha*)** %statinit69, align 8, !dbg !8234
  %41 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8235
  %func70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %41, i32 0, i32 43, !dbg !8236
  %reset71 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func70, i32 0, i32 0, !dbg !8237
  store i32 (%struct.ips_ha*)* @ips_reset_copperhead_memio, i32 (%struct.ips_ha*)** %reset71, align 8, !dbg !8238
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8239
  %func72 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 43, !dbg !8240
  %intr73 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func72, i32 0, i32 9, !dbg !8241
  store i32 (%struct.ips_ha*)* @ips_intr_copperhead, i32 (%struct.ips_ha*)** %intr73, align 8, !dbg !8242
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8243
  %func74 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 43, !dbg !8244
  %erasebios = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func74, i32 0, i32 5, !dbg !8245
  store i32 (%struct.ips_ha*)* @ips_erase_bios_memio, i32 (%struct.ips_ha*)** %erasebios, align 8, !dbg !8246
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8247
  %func75 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 43, !dbg !8248
  %programbios = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func75, i32 0, i32 6, !dbg !8249
  store i32 (%struct.ips_ha*, i8*, i32, i32)* @ips_program_bios_memio, i32 (%struct.ips_ha*, i8*, i32, i32)** %programbios, align 8, !dbg !8250
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8251
  %func76 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 43, !dbg !8252
  %verifybios = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func76, i32 0, i32 7, !dbg !8253
  store i32 (%struct.ips_ha*, i8*, i32, i32)* @ips_verify_bios_memio, i32 (%struct.ips_ha*, i8*, i32, i32)** %verifybios, align 8, !dbg !8254
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8255
  %func77 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 43, !dbg !8256
  %enableint78 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func77, i32 0, i32 10, !dbg !8257
  %enableint79 = bitcast {}** %enableint78 to void (%struct.ips_ha*)**, !dbg !8257
  store void (%struct.ips_ha*)* @ips_enable_int_copperhead_memio, void (%struct.ips_ha*)** %enableint79, align 8, !dbg !8258
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8259
  %pcidev80 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 44, !dbg !8259
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pcidev80, align 8, !dbg !8259
  %device81 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 8, !dbg !8259
  %49 = load i16, i16* %device81, align 2, !dbg !8259
  %conv82 = zext i16 %49 to i32, !dbg !8259
  %cmp83 = icmp eq i32 %conv82, 445, !dbg !8259
  br i1 %cmp83, label %cond.true107, label %lor.lhs.false85, !dbg !8259

lor.lhs.false85:                                  ; preds = %if.then59
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8259
  %pcidev86 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 44, !dbg !8259
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pcidev86, align 8, !dbg !8259
  %device87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 8, !dbg !8259
  %52 = load i16, i16* %device87, align 2, !dbg !8259
  %conv88 = zext i16 %52 to i32, !dbg !8259
  %cmp89 = icmp eq i32 %conv88, 46, !dbg !8259
  br i1 %cmp89, label %land.lhs.true91, label %cond.false104, !dbg !8259

land.lhs.true91:                                  ; preds = %lor.lhs.false85
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8259
  %pcidev92 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 44, !dbg !8259
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pcidev92, align 8, !dbg !8259
  %revision93 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 12, !dbg !8259
  %55 = load i8, i8* %revision93, align 8, !dbg !8259
  %conv94 = zext i8 %55 to i32, !dbg !8259
  %cmp95 = icmp sge i32 %conv94, 15, !dbg !8259
  br i1 %cmp95, label %land.lhs.true97, label %cond.false104, !dbg !8259

land.lhs.true97:                                  ; preds = %land.lhs.true91
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8259
  %pcidev98 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 44, !dbg !8259
  %57 = load %struct.pci_dev*, %struct.pci_dev** %pcidev98, align 8, !dbg !8259
  %revision99 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %57, i32 0, i32 12, !dbg !8259
  %58 = load i8, i8* %revision99, align 8, !dbg !8259
  %conv100 = zext i8 %58 to i32, !dbg !8259
  %cmp101 = icmp sle i32 %conv100, 16, !dbg !8259
  br i1 %cmp101, label %cond.true103, label %cond.false104, !dbg !8259

cond.true103:                                     ; preds = %land.lhs.true97
  br i1 true, label %land.lhs.true105, label %cond.false108, !dbg !8259

cond.false104:                                    ; preds = %land.lhs.true97, %land.lhs.true91, %lor.lhs.false85
  br i1 false, label %land.lhs.true105, label %cond.false108, !dbg !8259

land.lhs.true105:                                 ; preds = %cond.false104, %cond.true103
  %59 = load i32, i32* @ips_force_i2o, align 4, !dbg !8259
  %tobool106 = icmp ne i32 %59, 0, !dbg !8259
  br i1 %tobool106, label %cond.true107, label %cond.false108, !dbg !8261

cond.true107:                                     ; preds = %land.lhs.true105, %if.then59
  br i1 true, label %if.then109, label %if.else112, !dbg !8259

cond.false108:                                    ; preds = %land.lhs.true105, %cond.false104, %cond.true103
  br i1 false, label %if.then109, label %if.else112, !dbg !8261

if.then109:                                       ; preds = %cond.false108, %cond.true107
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8262
  %func110 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 43, !dbg !8263
  %issue111 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func110, i32 0, i32 1, !dbg !8264
  store i32 (%struct.ips_ha*, %struct.ips_scb*)* @ips_issue_i2o_memio, i32 (%struct.ips_ha*, %struct.ips_scb*)** %issue111, align 8, !dbg !8265
  br label %if.end, !dbg !8262

if.else112:                                       ; preds = %cond.false108, %cond.true107
  %61 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8266
  %func113 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %61, i32 0, i32 43, !dbg !8267
  %issue114 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func113, i32 0, i32 1, !dbg !8268
  store i32 (%struct.ips_ha*, %struct.ips_scb*)* @ips_issue_copperhead_memio, i32 (%struct.ips_ha*, %struct.ips_scb*)** %issue114, align 8, !dbg !8269
  br label %if.end

if.end:                                           ; preds = %if.else112, %if.then109
  br label %if.end176, !dbg !8270

if.else115:                                       ; preds = %cond.false58, %cond.true57
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8271
  %func116 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %62, i32 0, i32 43, !dbg !8273
  %isintr117 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func116, i32 0, i32 3, !dbg !8274
  store i32 (%struct.ips_ha*)* @ips_isintr_copperhead, i32 (%struct.ips_ha*)** %isintr117, align 8, !dbg !8275
  %63 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8276
  %func118 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %63, i32 0, i32 43, !dbg !8277
  %isinit119 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func118, i32 0, i32 2, !dbg !8278
  store i32 (%struct.ips_ha*)* @ips_isinit_copperhead, i32 (%struct.ips_ha*)** %isinit119, align 8, !dbg !8279
  %64 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8280
  %func120 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %64, i32 0, i32 43, !dbg !8281
  %init121 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func120, i32 0, i32 4, !dbg !8282
  store i32 (%struct.ips_ha*)* @ips_init_copperhead, i32 (%struct.ips_ha*)** %init121, align 8, !dbg !8283
  %65 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8284
  %func122 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %65, i32 0, i32 43, !dbg !8285
  %statupd123 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func122, i32 0, i32 11, !dbg !8286
  store i32 (%struct.ips_ha*)* @ips_statupd_copperhead, i32 (%struct.ips_ha*)** %statupd123, align 8, !dbg !8287
  %66 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8288
  %func124 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %66, i32 0, i32 43, !dbg !8289
  %statinit125 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func124, i32 0, i32 8, !dbg !8290
  %statinit126 = bitcast {}** %statinit125 to void (%struct.ips_ha*)**, !dbg !8290
  store void (%struct.ips_ha*)* @ips_statinit, void (%struct.ips_ha*)** %statinit126, align 8, !dbg !8291
  %67 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8292
  %func127 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %67, i32 0, i32 43, !dbg !8293
  %reset128 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func127, i32 0, i32 0, !dbg !8294
  store i32 (%struct.ips_ha*)* @ips_reset_copperhead, i32 (%struct.ips_ha*)** %reset128, align 8, !dbg !8295
  %68 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8296
  %func129 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %68, i32 0, i32 43, !dbg !8297
  %intr130 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func129, i32 0, i32 9, !dbg !8298
  store i32 (%struct.ips_ha*)* @ips_intr_copperhead, i32 (%struct.ips_ha*)** %intr130, align 8, !dbg !8299
  %69 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8300
  %func131 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %69, i32 0, i32 43, !dbg !8301
  %erasebios132 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func131, i32 0, i32 5, !dbg !8302
  store i32 (%struct.ips_ha*)* @ips_erase_bios, i32 (%struct.ips_ha*)** %erasebios132, align 8, !dbg !8303
  %70 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8304
  %func133 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %70, i32 0, i32 43, !dbg !8305
  %programbios134 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func133, i32 0, i32 6, !dbg !8306
  store i32 (%struct.ips_ha*, i8*, i32, i32)* @ips_program_bios, i32 (%struct.ips_ha*, i8*, i32, i32)** %programbios134, align 8, !dbg !8307
  %71 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8308
  %func135 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %71, i32 0, i32 43, !dbg !8309
  %verifybios136 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func135, i32 0, i32 7, !dbg !8310
  store i32 (%struct.ips_ha*, i8*, i32, i32)* @ips_verify_bios, i32 (%struct.ips_ha*, i8*, i32, i32)** %verifybios136, align 8, !dbg !8311
  %72 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8312
  %func137 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %72, i32 0, i32 43, !dbg !8313
  %enableint138 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func137, i32 0, i32 10, !dbg !8314
  %enableint139 = bitcast {}** %enableint138 to void (%struct.ips_ha*)**, !dbg !8314
  store void (%struct.ips_ha*)* @ips_enable_int_copperhead, void (%struct.ips_ha*)** %enableint139, align 8, !dbg !8315
  %73 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8316
  %pcidev140 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %73, i32 0, i32 44, !dbg !8316
  %74 = load %struct.pci_dev*, %struct.pci_dev** %pcidev140, align 8, !dbg !8316
  %device141 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %74, i32 0, i32 8, !dbg !8316
  %75 = load i16, i16* %device141, align 2, !dbg !8316
  %conv142 = zext i16 %75 to i32, !dbg !8316
  %cmp143 = icmp eq i32 %conv142, 445, !dbg !8316
  br i1 %cmp143, label %cond.true167, label %lor.lhs.false145, !dbg !8316

lor.lhs.false145:                                 ; preds = %if.else115
  %76 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8316
  %pcidev146 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %76, i32 0, i32 44, !dbg !8316
  %77 = load %struct.pci_dev*, %struct.pci_dev** %pcidev146, align 8, !dbg !8316
  %device147 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %77, i32 0, i32 8, !dbg !8316
  %78 = load i16, i16* %device147, align 2, !dbg !8316
  %conv148 = zext i16 %78 to i32, !dbg !8316
  %cmp149 = icmp eq i32 %conv148, 46, !dbg !8316
  br i1 %cmp149, label %land.lhs.true151, label %cond.false164, !dbg !8316

land.lhs.true151:                                 ; preds = %lor.lhs.false145
  %79 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8316
  %pcidev152 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %79, i32 0, i32 44, !dbg !8316
  %80 = load %struct.pci_dev*, %struct.pci_dev** %pcidev152, align 8, !dbg !8316
  %revision153 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %80, i32 0, i32 12, !dbg !8316
  %81 = load i8, i8* %revision153, align 8, !dbg !8316
  %conv154 = zext i8 %81 to i32, !dbg !8316
  %cmp155 = icmp sge i32 %conv154, 15, !dbg !8316
  br i1 %cmp155, label %land.lhs.true157, label %cond.false164, !dbg !8316

land.lhs.true157:                                 ; preds = %land.lhs.true151
  %82 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8316
  %pcidev158 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %82, i32 0, i32 44, !dbg !8316
  %83 = load %struct.pci_dev*, %struct.pci_dev** %pcidev158, align 8, !dbg !8316
  %revision159 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %83, i32 0, i32 12, !dbg !8316
  %84 = load i8, i8* %revision159, align 8, !dbg !8316
  %conv160 = zext i8 %84 to i32, !dbg !8316
  %cmp161 = icmp sle i32 %conv160, 16, !dbg !8316
  br i1 %cmp161, label %cond.true163, label %cond.false164, !dbg !8316

cond.true163:                                     ; preds = %land.lhs.true157
  br i1 true, label %land.lhs.true165, label %cond.false168, !dbg !8316

cond.false164:                                    ; preds = %land.lhs.true157, %land.lhs.true151, %lor.lhs.false145
  br i1 false, label %land.lhs.true165, label %cond.false168, !dbg !8316

land.lhs.true165:                                 ; preds = %cond.false164, %cond.true163
  %85 = load i32, i32* @ips_force_i2o, align 4, !dbg !8316
  %tobool166 = icmp ne i32 %85, 0, !dbg !8316
  br i1 %tobool166, label %cond.true167, label %cond.false168, !dbg !8318

cond.true167:                                     ; preds = %land.lhs.true165, %if.else115
  br i1 true, label %if.then169, label %if.else172, !dbg !8316

cond.false168:                                    ; preds = %land.lhs.true165, %cond.false164, %cond.true163
  br i1 false, label %if.then169, label %if.else172, !dbg !8318

if.then169:                                       ; preds = %cond.false168, %cond.true167
  %86 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8319
  %func170 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %86, i32 0, i32 43, !dbg !8320
  %issue171 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func170, i32 0, i32 1, !dbg !8321
  store i32 (%struct.ips_ha*, %struct.ips_scb*)* @ips_issue_i2o, i32 (%struct.ips_ha*, %struct.ips_scb*)** %issue171, align 8, !dbg !8322
  br label %if.end175, !dbg !8319

if.else172:                                       ; preds = %cond.false168, %cond.true167
  %87 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8323
  %func173 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %87, i32 0, i32 43, !dbg !8324
  %issue174 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func173, i32 0, i32 1, !dbg !8325
  store i32 (%struct.ips_ha*, %struct.ips_scb*)* @ips_issue_copperhead, i32 (%struct.ips_ha*, %struct.ips_scb*)** %issue174, align 8, !dbg !8326
  br label %if.end175

if.end175:                                        ; preds = %if.else172, %if.then169
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.end
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then
  ret void, !dbg !8327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !8328 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8335, metadata !DIExpression()), !dbg !8336
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8337, metadata !DIExpression()), !dbg !8336
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8336
  %1 = bitcast i8* %0 to i32*, !dbg !8336
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !8336, !srcloc !8338
  store i32 %2, i32* %ret, align 4, !dbg !8336
  %3 = load i32, i32* %ret, align 4, !dbg !8336
  ret i32 %3, !dbg !8336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_reset_morpheus(%struct.ips_ha* %ha) #0 !dbg !8339 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %reset_counter = alloca i32, align 4
  %junk = alloca i8, align 1
  %__ms = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.declare(metadata i32* %reset_counter, metadata !8344, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.declare(metadata i8* %junk, metadata !8346, metadata !DIExpression()), !dbg !8347
  store i32 0, i32* %reset_counter, align 4, !dbg !8348
  br label %while.cond, !dbg !8349

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load i32, i32* %reset_counter, align 4, !dbg !8350
  %cmp = icmp slt i32 %0, 2, !dbg !8351
  br i1 %cmp, label %while.body, label %while.end8, !dbg !8349

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %reset_counter, align 4, !dbg !8352
  %inc = add i32 %1, 1, !dbg !8352
  store i32 %inc, i32* %reset_counter, align 4, !dbg !8352
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8354
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !8355
  %3 = load i8*, i8** %mem_ptr, align 8, !dbg !8355
  %add.ptr = getelementptr i8, i8* %3, i64 32, !dbg !8356
  call void @writel(i32 -2147483648, i8* %add.ptr) #11, !dbg !8357
  br label %do.body, !dbg !8358

do.body:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !8359, metadata !DIExpression()), !dbg !8362
  store i64 5000, i64* %__ms, align 8, !dbg !8362
  br label %while.cond1, !dbg !8362

while.cond1:                                      ; preds = %while.body2, %do.body
  %4 = load i64, i64* %__ms, align 8, !dbg !8362
  %dec = add i64 %4, -1, !dbg !8362
  store i64 %dec, i64* %__ms, align 8, !dbg !8362
  %tobool = icmp ne i64 %4, 0, !dbg !8362
  br i1 %tobool, label %while.body2, label %while.end, !dbg !8362

while.body2:                                      ; preds = %while.cond1
  call void @__const_udelay(i64 4295000) #11, !dbg !8363
  br label %while.cond1, !dbg !8362, !llvm.loop !8368

while.end:                                        ; preds = %while.cond1
  call void @touch_nmi_watchdog() #11, !dbg !8369
  br label %do.end, !dbg !8369

do.end:                                           ; preds = %while.end
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8370
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 44, !dbg !8371
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !8371
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %6, i32 4, i8* %junk) #11, !dbg !8372
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8373
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 43, !dbg !8375
  %init = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 4, !dbg !8376
  %8 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %init, align 8, !dbg !8376
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8377
  %call3 = call i32 %8(%struct.ips_ha* %9) #11, !dbg !8378
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8378
  br i1 %tobool4, label %if.then, label %if.else, !dbg !8379

if.then:                                          ; preds = %do.end
  br label %while.end8, !dbg !8380

if.else:                                          ; preds = %do.end
  %10 = load i32, i32* %reset_counter, align 4, !dbg !8381
  %cmp5 = icmp sge i32 %10, 2, !dbg !8383
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8384

if.then6:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !8385
  br label %return, !dbg !8385

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %while.cond, !dbg !8349, !llvm.loop !8387

while.end8:                                       ; preds = %if.then, %while.cond
  store i32 1, i32* %retval, align 4, !dbg !8389
  br label %return, !dbg !8389

return:                                           ; preds = %while.end8, %if.then6
  %11 = load i32, i32* %retval, align 4, !dbg !8390
  ret i32 %11, !dbg !8390
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !8391 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8395, metadata !DIExpression()), !dbg !8400
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8402, metadata !DIExpression()), !dbg !8403
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8404, metadata !DIExpression()), !dbg !8405
  %0 = load i64, i64* %size.addr, align 8, !dbg !8406
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8408
  br i1 %1, label %if.then, label %if.end447, !dbg !8409

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8410
  %tobool = icmp ne i64 %2, 0, !dbg !8410
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8413

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8414
  br label %return, !dbg !8414

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8415
  %cmp = icmp ult i64 %3, 4096, !dbg !8417
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8418

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8419
  br label %return, !dbg !8419

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub = sub i64 %4, 1, !dbg !8420
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8420
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8420

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub4 = sub i64 %6, 1, !dbg !8420
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8420
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8420

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub6 = sub i64 %8, 1, !dbg !8420
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8420
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8420

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8420

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub9 = sub i64 %9, 1, !dbg !8420
  %and = and i64 %sub9, -9223372036854775808, !dbg !8420
  %tobool10 = icmp ne i64 %and, 0, !dbg !8420
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8420

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8420

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub13 = sub i64 %10, 1, !dbg !8420
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8420
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8420
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8420

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8420

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub18 = sub i64 %11, 1, !dbg !8420
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8420
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8420
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8420

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8420

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub23 = sub i64 %12, 1, !dbg !8420
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8420
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8420
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8420

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8420

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub28 = sub i64 %13, 1, !dbg !8420
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8420
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8420
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8420

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8420

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub33 = sub i64 %14, 1, !dbg !8420
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8420
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8420
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8420

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8420

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub38 = sub i64 %15, 1, !dbg !8420
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8420
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8420
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8420

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8420

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub43 = sub i64 %16, 1, !dbg !8420
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8420
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8420
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8420

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8420

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub48 = sub i64 %17, 1, !dbg !8420
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8420
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8420
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8420

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8420

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub53 = sub i64 %18, 1, !dbg !8420
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8420
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8420
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8420

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8420

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub58 = sub i64 %19, 1, !dbg !8420
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8420
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8420
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8420

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8420

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub63 = sub i64 %20, 1, !dbg !8420
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8420
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8420
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8420

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8420

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub68 = sub i64 %21, 1, !dbg !8420
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8420
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8420
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8420

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8420

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub73 = sub i64 %22, 1, !dbg !8420
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8420
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8420
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8420

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8420

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub78 = sub i64 %23, 1, !dbg !8420
  %and79 = and i64 %sub78, 562949953421312, !dbg !8420
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8420
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8420

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8420

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub83 = sub i64 %24, 1, !dbg !8420
  %and84 = and i64 %sub83, 281474976710656, !dbg !8420
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8420
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8420

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8420

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub88 = sub i64 %25, 1, !dbg !8420
  %and89 = and i64 %sub88, 140737488355328, !dbg !8420
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8420
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8420

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8420

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub93 = sub i64 %26, 1, !dbg !8420
  %and94 = and i64 %sub93, 70368744177664, !dbg !8420
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8420
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8420

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8420

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub98 = sub i64 %27, 1, !dbg !8420
  %and99 = and i64 %sub98, 35184372088832, !dbg !8420
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8420
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8420

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8420

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub103 = sub i64 %28, 1, !dbg !8420
  %and104 = and i64 %sub103, 17592186044416, !dbg !8420
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8420
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8420

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8420

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub108 = sub i64 %29, 1, !dbg !8420
  %and109 = and i64 %sub108, 8796093022208, !dbg !8420
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8420
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8420

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8420

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub113 = sub i64 %30, 1, !dbg !8420
  %and114 = and i64 %sub113, 4398046511104, !dbg !8420
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8420
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8420

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8420

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub118 = sub i64 %31, 1, !dbg !8420
  %and119 = and i64 %sub118, 2199023255552, !dbg !8420
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8420
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8420

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8420

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub123 = sub i64 %32, 1, !dbg !8420
  %and124 = and i64 %sub123, 1099511627776, !dbg !8420
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8420
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8420

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8420

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub128 = sub i64 %33, 1, !dbg !8420
  %and129 = and i64 %sub128, 549755813888, !dbg !8420
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8420
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8420

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8420

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub133 = sub i64 %34, 1, !dbg !8420
  %and134 = and i64 %sub133, 274877906944, !dbg !8420
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8420
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8420

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8420

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub138 = sub i64 %35, 1, !dbg !8420
  %and139 = and i64 %sub138, 137438953472, !dbg !8420
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8420
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8420

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8420

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub143 = sub i64 %36, 1, !dbg !8420
  %and144 = and i64 %sub143, 68719476736, !dbg !8420
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8420
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8420

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8420

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub148 = sub i64 %37, 1, !dbg !8420
  %and149 = and i64 %sub148, 34359738368, !dbg !8420
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8420
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8420

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8420

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub153 = sub i64 %38, 1, !dbg !8420
  %and154 = and i64 %sub153, 17179869184, !dbg !8420
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8420
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8420

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8420

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub158 = sub i64 %39, 1, !dbg !8420
  %and159 = and i64 %sub158, 8589934592, !dbg !8420
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8420
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8420

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8420

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub163 = sub i64 %40, 1, !dbg !8420
  %and164 = and i64 %sub163, 4294967296, !dbg !8420
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8420
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8420

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8420

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub168 = sub i64 %41, 1, !dbg !8420
  %and169 = and i64 %sub168, 2147483648, !dbg !8420
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8420
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8420

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8420

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub173 = sub i64 %42, 1, !dbg !8420
  %and174 = and i64 %sub173, 1073741824, !dbg !8420
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8420
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8420

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8420

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub178 = sub i64 %43, 1, !dbg !8420
  %and179 = and i64 %sub178, 536870912, !dbg !8420
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8420
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8420

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8420

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub183 = sub i64 %44, 1, !dbg !8420
  %and184 = and i64 %sub183, 268435456, !dbg !8420
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8420
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8420

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8420

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub188 = sub i64 %45, 1, !dbg !8420
  %and189 = and i64 %sub188, 134217728, !dbg !8420
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8420
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8420

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8420

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub193 = sub i64 %46, 1, !dbg !8420
  %and194 = and i64 %sub193, 67108864, !dbg !8420
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8420
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8420

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8420

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub198 = sub i64 %47, 1, !dbg !8420
  %and199 = and i64 %sub198, 33554432, !dbg !8420
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8420
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8420

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8420

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub203 = sub i64 %48, 1, !dbg !8420
  %and204 = and i64 %sub203, 16777216, !dbg !8420
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8420
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8420

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8420

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub208 = sub i64 %49, 1, !dbg !8420
  %and209 = and i64 %sub208, 8388608, !dbg !8420
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8420
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8420

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8420

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub213 = sub i64 %50, 1, !dbg !8420
  %and214 = and i64 %sub213, 4194304, !dbg !8420
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8420
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8420

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8420

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub218 = sub i64 %51, 1, !dbg !8420
  %and219 = and i64 %sub218, 2097152, !dbg !8420
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8420
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8420

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8420

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub223 = sub i64 %52, 1, !dbg !8420
  %and224 = and i64 %sub223, 1048576, !dbg !8420
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8420
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8420

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8420

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub228 = sub i64 %53, 1, !dbg !8420
  %and229 = and i64 %sub228, 524288, !dbg !8420
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8420
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8420

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8420

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub233 = sub i64 %54, 1, !dbg !8420
  %and234 = and i64 %sub233, 262144, !dbg !8420
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8420
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8420

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8420

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub238 = sub i64 %55, 1, !dbg !8420
  %and239 = and i64 %sub238, 131072, !dbg !8420
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8420
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8420

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8420

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub243 = sub i64 %56, 1, !dbg !8420
  %and244 = and i64 %sub243, 65536, !dbg !8420
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8420
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8420

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8420

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub248 = sub i64 %57, 1, !dbg !8420
  %and249 = and i64 %sub248, 32768, !dbg !8420
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8420
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8420

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8420

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub253 = sub i64 %58, 1, !dbg !8420
  %and254 = and i64 %sub253, 16384, !dbg !8420
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8420
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8420

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8420

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub258 = sub i64 %59, 1, !dbg !8420
  %and259 = and i64 %sub258, 8192, !dbg !8420
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8420
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8420

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8420

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub263 = sub i64 %60, 1, !dbg !8420
  %and264 = and i64 %sub263, 4096, !dbg !8420
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8420
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8420

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8420

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub268 = sub i64 %61, 1, !dbg !8420
  %and269 = and i64 %sub268, 2048, !dbg !8420
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8420
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8420

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8420

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub273 = sub i64 %62, 1, !dbg !8420
  %and274 = and i64 %sub273, 1024, !dbg !8420
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8420
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8420

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8420

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub278 = sub i64 %63, 1, !dbg !8420
  %and279 = and i64 %sub278, 512, !dbg !8420
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8420
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8420

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8420

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub283 = sub i64 %64, 1, !dbg !8420
  %and284 = and i64 %sub283, 256, !dbg !8420
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8420
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8420

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8420

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub288 = sub i64 %65, 1, !dbg !8420
  %and289 = and i64 %sub288, 128, !dbg !8420
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8420
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8420

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8420

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub293 = sub i64 %66, 1, !dbg !8420
  %and294 = and i64 %sub293, 64, !dbg !8420
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8420
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8420

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8420

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub298 = sub i64 %67, 1, !dbg !8420
  %and299 = and i64 %sub298, 32, !dbg !8420
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8420
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8420

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8420

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub303 = sub i64 %68, 1, !dbg !8420
  %and304 = and i64 %sub303, 16, !dbg !8420
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8420
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8420

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8420

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub308 = sub i64 %69, 1, !dbg !8420
  %and309 = and i64 %sub308, 8, !dbg !8420
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8420
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8420

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8420

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub313 = sub i64 %70, 1, !dbg !8420
  %and314 = and i64 %sub313, 4, !dbg !8420
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8420
  %71 = zext i1 %tobool315 to i64, !dbg !8420
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8420
  br label %cond.end, !dbg !8420

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8420
  br label %cond.end317, !dbg !8420

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8420
  br label %cond.end319, !dbg !8420

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8420
  br label %cond.end321, !dbg !8420

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8420
  br label %cond.end323, !dbg !8420

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8420
  br label %cond.end325, !dbg !8420

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8420
  br label %cond.end327, !dbg !8420

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8420
  br label %cond.end329, !dbg !8420

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8420
  br label %cond.end331, !dbg !8420

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8420
  br label %cond.end333, !dbg !8420

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8420
  br label %cond.end335, !dbg !8420

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8420
  br label %cond.end337, !dbg !8420

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8420
  br label %cond.end339, !dbg !8420

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8420
  br label %cond.end341, !dbg !8420

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8420
  br label %cond.end343, !dbg !8420

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8420
  br label %cond.end345, !dbg !8420

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8420
  br label %cond.end347, !dbg !8420

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8420
  br label %cond.end349, !dbg !8420

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8420
  br label %cond.end351, !dbg !8420

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8420
  br label %cond.end353, !dbg !8420

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8420
  br label %cond.end355, !dbg !8420

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8420
  br label %cond.end357, !dbg !8420

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8420
  br label %cond.end359, !dbg !8420

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8420
  br label %cond.end361, !dbg !8420

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8420
  br label %cond.end363, !dbg !8420

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8420
  br label %cond.end365, !dbg !8420

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8420
  br label %cond.end367, !dbg !8420

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8420
  br label %cond.end369, !dbg !8420

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8420
  br label %cond.end371, !dbg !8420

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8420
  br label %cond.end373, !dbg !8420

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8420
  br label %cond.end375, !dbg !8420

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8420
  br label %cond.end377, !dbg !8420

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8420
  br label %cond.end379, !dbg !8420

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8420
  br label %cond.end381, !dbg !8420

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8420
  br label %cond.end383, !dbg !8420

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8420
  br label %cond.end385, !dbg !8420

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8420
  br label %cond.end387, !dbg !8420

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8420
  br label %cond.end389, !dbg !8420

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8420
  br label %cond.end391, !dbg !8420

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8420
  br label %cond.end393, !dbg !8420

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8420
  br label %cond.end395, !dbg !8420

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8420
  br label %cond.end397, !dbg !8420

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8420
  br label %cond.end399, !dbg !8420

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8420
  br label %cond.end401, !dbg !8420

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8420
  br label %cond.end403, !dbg !8420

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8420
  br label %cond.end405, !dbg !8420

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8420
  br label %cond.end407, !dbg !8420

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8420
  br label %cond.end409, !dbg !8420

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8420
  br label %cond.end411, !dbg !8420

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8420
  br label %cond.end413, !dbg !8420

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8420
  br label %cond.end415, !dbg !8420

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8420
  br label %cond.end417, !dbg !8420

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8420
  br label %cond.end419, !dbg !8420

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8420
  br label %cond.end421, !dbg !8420

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8420
  br label %cond.end423, !dbg !8420

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8420
  br label %cond.end425, !dbg !8420

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8420
  br label %cond.end427, !dbg !8420

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8420
  br label %cond.end429, !dbg !8420

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8420
  br label %cond.end431, !dbg !8420

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8420
  br label %cond.end433, !dbg !8420

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8420
  br label %cond.end435, !dbg !8420

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8420
  br label %cond.end437, !dbg !8420

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8420
  br label %cond.end440, !dbg !8420

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8420

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8420
  br label %cond.end444, !dbg !8420

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8420
  %sub443 = sub i64 %72, 1, !dbg !8420
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !8420
  br label %cond.end444, !dbg !8420

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8420
  %sub446 = sub i32 %cond445, 12, !dbg !8421
  %add = add i32 %sub446, 1, !dbg !8422
  store i32 %add, i32* %retval, align 4, !dbg !8423
  br label %return, !dbg !8423

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8424
  %dec = add i64 %73, -1, !dbg !8424
  store i64 %dec, i64* %size.addr, align 8, !dbg !8424
  %74 = load i64, i64* %size.addr, align 8, !dbg !8425
  %shr = lshr i64 %74, 12, !dbg !8425
  store i64 %shr, i64* %size.addr, align 8, !dbg !8425
  %75 = load i64, i64* %size.addr, align 8, !dbg !8426
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8403
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8427
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8428
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !8427, !srcloc !8429
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8427
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8430
  %add.i = add i32 %79, 1, !dbg !8431
  store i32 %add.i, i32* %retval, align 4, !dbg !8432
  br label %return, !dbg !8432

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8433
  ret i32 %80, !dbg !8433
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !8434 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8395, metadata !DIExpression()), !dbg !8438
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8402, metadata !DIExpression()), !dbg !8440
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8441, metadata !DIExpression()), !dbg !8442
  %0 = load i64, i64* %n.addr, align 8, !dbg !8443
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8440
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8444
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8445
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !8444, !srcloc !8429
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8444
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8446
  %add.i = add i32 %4, 1, !dbg !8447
  %sub = sub i32 %add.i, 1, !dbg !8448
  ret i32 %sub, !dbg !8449
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8450 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8454, metadata !DIExpression()), !dbg !8455
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8456, metadata !DIExpression()), !dbg !8457
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8462
  ret i8* %0, !dbg !8463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_isintr_morpheus(%struct.ips_ha* %ha) #0 !dbg !8464 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Isr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.declare(metadata i32* %Isr, metadata !8467, metadata !DIExpression()), !dbg !8468
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8469
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !8470
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !8470
  %add.ptr = getelementptr i8, i8* %1, i64 48, !dbg !8471
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8472
  store i32 %call, i32* %Isr, align 4, !dbg !8473
  %2 = load i32, i32* %Isr, align 4, !dbg !8474
  %and = and i32 %2, 8, !dbg !8476
  %tobool = icmp ne i32 %and, 0, !dbg !8476
  br i1 %tobool, label %if.then, label %if.else, !dbg !8477

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8478
  br label %return, !dbg !8478

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8479
  br label %return, !dbg !8479

return:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !8480
  ret i32 %3, !dbg !8480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_isinit_morpheus(%struct.ips_ha* %ha) #0 !dbg !8481 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %post = alloca i32, align 4
  %bits = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.declare(metadata i32* %post, metadata !8484, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !8486, metadata !DIExpression()), !dbg !8487
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8488
  %call = call i32 @ips_isintr_morpheus(%struct.ips_ha* %0) #11, !dbg !8490
  %tobool = icmp ne i32 %call, 0, !dbg !8490
  br i1 %tobool, label %if.then, label %if.end, !dbg !8491

if.then:                                          ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8492
  call void @ips_flush_and_reset(%struct.ips_ha* %1) #11, !dbg !8493
  br label %if.end, !dbg !8493

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8494
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !8495
  %3 = load i8*, i8** %mem_ptr, align 8, !dbg !8495
  %add.ptr = getelementptr i8, i8* %3, i64 24, !dbg !8496
  %call1 = call i32 @readl(i8* %add.ptr) #11, !dbg !8497
  store i32 %call1, i32* %post, align 4, !dbg !8498
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8499
  %mem_ptr2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 41, !dbg !8500
  %5 = load i8*, i8** %mem_ptr2, align 8, !dbg !8500
  %add.ptr3 = getelementptr i8, i8* %5, i64 48, !dbg !8501
  %call4 = call i32 @readl(i8* %add.ptr3) #11, !dbg !8502
  store i32 %call4, i32* %bits, align 4, !dbg !8503
  %6 = load i32, i32* %post, align 4, !dbg !8504
  %cmp = icmp eq i32 %6, 0, !dbg !8506
  br i1 %cmp, label %if.then5, label %if.else, !dbg !8507

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8508
  br label %return, !dbg !8508

if.else:                                          ; preds = %if.end
  %7 = load i32, i32* %bits, align 4, !dbg !8509
  %and = and i32 %7, 3, !dbg !8511
  %tobool6 = icmp ne i32 %and, 0, !dbg !8511
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !8512

if.then7:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !8513
  br label %return, !dbg !8513

if.else8:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !8514
  br label %return, !dbg !8514

return:                                           ; preds = %if.else8, %if.then7, %if.then5
  %8 = load i32, i32* %retval, align 4, !dbg !8515
  ret i32 %8, !dbg !8515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_issue_i2o_memio(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !8516 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !8523
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 18, !dbg !8525
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !8525
  %tobool = icmp ne %struct.scsi_cmnd* %1, null, !dbg !8523
  br i1 %tobool, label %if.then, label %if.else, !dbg !8526

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !8527

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !8529
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 6, !dbg !8530
  %3 = load i32, i32* %scb_busaddr, align 4, !dbg !8530
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8531
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 41, !dbg !8532
  %5 = load i8*, i8** %mem_ptr, align 8, !dbg !8532
  %add.ptr = getelementptr i8, i8* %5, i64 64, !dbg !8533
  call void @writel(i32 %3, i8* %add.ptr) #11, !dbg !8534
  ret i32 1, !dbg !8535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_init_morpheus(%struct.ips_ha* %ha) #0 !dbg !8536 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Post = alloca i32, align 4
  %Config = alloca i32, align 4
  %Isr = alloca i32, align 4
  %Oimr = alloca i32, align 4
  %i = alloca i32, align 4
  %__ms = alloca i64, align 8
  %__ms24 = alloca i64, align 8
  %__ms58 = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8537, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.declare(metadata i32* %Post, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %Config, metadata !8541, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.declare(metadata i32* %Isr, metadata !8543, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.declare(metadata i32* %Oimr, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8547, metadata !DIExpression()), !dbg !8548
  store i32 0, i32* %i, align 4, !dbg !8549
  br label %for.cond, !dbg !8551

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8552
  %cmp = icmp slt i32 %0, 45, !dbg !8554
  br i1 %cmp, label %for.body, label %for.end, !dbg !8555

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8556
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 41, !dbg !8558
  %2 = load i8*, i8** %mem_ptr, align 8, !dbg !8558
  %add.ptr = getelementptr i8, i8* %2, i64 48, !dbg !8559
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8560
  store i32 %call, i32* %Isr, align 4, !dbg !8561
  %3 = load i32, i32* %Isr, align 4, !dbg !8562
  %and = and i32 %3, 1, !dbg !8564
  %tobool = icmp ne i32 %and, 0, !dbg !8564
  br i1 %tobool, label %if.then, label %if.end, !dbg !8565

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8566

if.end:                                           ; preds = %for.body
  br label %do.body, !dbg !8567

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !8568, metadata !DIExpression()), !dbg !8571
  store i64 1000, i64* %__ms, align 8, !dbg !8571
  br label %while.cond, !dbg !8571

while.cond:                                       ; preds = %while.body, %do.body
  %4 = load i64, i64* %__ms, align 8, !dbg !8571
  %dec = add i64 %4, -1, !dbg !8571
  store i64 %dec, i64* %__ms, align 8, !dbg !8571
  %tobool1 = icmp ne i64 %4, 0, !dbg !8571
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8571

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !8572
  br label %while.cond, !dbg !8571, !llvm.loop !8577

while.end:                                        ; preds = %while.cond
  call void @touch_nmi_watchdog() #11, !dbg !8578
  br label %do.end, !dbg !8578

do.end:                                           ; preds = %while.end
  br label %for.inc, !dbg !8579

for.inc:                                          ; preds = %do.end
  %5 = load i32, i32* %i, align 4, !dbg !8580
  %inc = add i32 %5, 1, !dbg !8580
  store i32 %inc, i32* %i, align 4, !dbg !8580
  br label %for.cond, !dbg !8581, !llvm.loop !8582

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !8584
  %cmp2 = icmp sge i32 %6, 45, !dbg !8586
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8587

if.then3:                                         ; preds = %for.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8588
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 44, !dbg !8588
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !8588
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !8588
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !8588
  store i32 0, i32* %retval, align 4, !dbg !8590
  br label %return, !dbg !8590

if.end4:                                          ; preds = %for.end
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8591
  %mem_ptr5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 41, !dbg !8592
  %10 = load i8*, i8** %mem_ptr5, align 8, !dbg !8592
  %add.ptr6 = getelementptr i8, i8* %10, i64 24, !dbg !8593
  %call7 = call i32 @readl(i8* %add.ptr6) #11, !dbg !8594
  store i32 %call7, i32* %Post, align 4, !dbg !8595
  %11 = load i32, i32* %Post, align 4, !dbg !8596
  %cmp8 = icmp eq i32 %11, 20224, !dbg !8598
  br i1 %cmp8, label %if.then9, label %if.end39, !dbg !8599

if.then9:                                         ; preds = %if.end4
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8600
  %pcidev10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 44, !dbg !8600
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pcidev10, align 8, !dbg !8600
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !8600
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !8600
  store i32 1, i32* %Isr, align 4, !dbg !8602
  %14 = load i32, i32* %Isr, align 4, !dbg !8603
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8604
  %mem_ptr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 41, !dbg !8605
  %16 = load i8*, i8** %mem_ptr12, align 8, !dbg !8605
  %add.ptr13 = getelementptr i8, i8* %16, i64 48, !dbg !8606
  call void @writel(i32 %14, i8* %add.ptr13) #11, !dbg !8607
  store i32 0, i32* %i, align 4, !dbg !8608
  br label %for.cond14, !dbg !8610

for.cond14:                                       ; preds = %for.inc31, %if.then9
  %17 = load i32, i32* %i, align 4, !dbg !8611
  %cmp15 = icmp slt i32 %17, 120, !dbg !8613
  br i1 %cmp15, label %for.body16, label %for.end33, !dbg !8614

for.body16:                                       ; preds = %for.cond14
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8615
  %mem_ptr17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 41, !dbg !8617
  %19 = load i8*, i8** %mem_ptr17, align 8, !dbg !8617
  %add.ptr18 = getelementptr i8, i8* %19, i64 24, !dbg !8618
  %call19 = call i32 @readl(i8* %add.ptr18) #11, !dbg !8619
  store i32 %call19, i32* %Post, align 4, !dbg !8620
  %20 = load i32, i32* %Post, align 4, !dbg !8621
  %cmp20 = icmp ne i32 %20, 20224, !dbg !8623
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !8624

if.then21:                                        ; preds = %for.body16
  br label %for.end33, !dbg !8625

if.end22:                                         ; preds = %for.body16
  br label %do.body23, !dbg !8626

do.body23:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i64* %__ms24, metadata !8627, metadata !DIExpression()), !dbg !8630
  store i64 1000, i64* %__ms24, align 8, !dbg !8630
  br label %while.cond25, !dbg !8630

while.cond25:                                     ; preds = %while.body28, %do.body23
  %21 = load i64, i64* %__ms24, align 8, !dbg !8630
  %dec26 = add i64 %21, -1, !dbg !8630
  store i64 %dec26, i64* %__ms24, align 8, !dbg !8630
  %tobool27 = icmp ne i64 %21, 0, !dbg !8630
  br i1 %tobool27, label %while.body28, label %while.end29, !dbg !8630

while.body28:                                     ; preds = %while.cond25
  call void @__const_udelay(i64 4295000) #11, !dbg !8631
  br label %while.cond25, !dbg !8630, !llvm.loop !8636

while.end29:                                      ; preds = %while.cond25
  call void @touch_nmi_watchdog() #11, !dbg !8637
  br label %do.end30, !dbg !8637

do.end30:                                         ; preds = %while.end29
  br label %for.inc31, !dbg !8638

for.inc31:                                        ; preds = %do.end30
  %22 = load i32, i32* %i, align 4, !dbg !8639
  %inc32 = add i32 %22, 1, !dbg !8639
  store i32 %inc32, i32* %i, align 4, !dbg !8639
  br label %for.cond14, !dbg !8640, !llvm.loop !8641

for.end33:                                        ; preds = %if.then21, %for.cond14
  %23 = load i32, i32* %i, align 4, !dbg !8643
  %cmp34 = icmp sge i32 %23, 120, !dbg !8645
  br i1 %cmp34, label %if.then35, label %if.end38, !dbg !8646

if.then35:                                        ; preds = %for.end33
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8647
  %pcidev36 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 44, !dbg !8647
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pcidev36, align 8, !dbg !8647
  %dev37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !8647
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev37, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !8647
  store i32 0, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

if.end38:                                         ; preds = %for.end33
  br label %if.end39, !dbg !8650

if.end39:                                         ; preds = %if.end38, %if.end4
  store i32 1, i32* %Isr, align 4, !dbg !8651
  %26 = load i32, i32* %Isr, align 4, !dbg !8652
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8653
  %mem_ptr40 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 41, !dbg !8654
  %28 = load i8*, i8** %mem_ptr40, align 8, !dbg !8654
  %add.ptr41 = getelementptr i8, i8* %28, i64 48, !dbg !8655
  call void @writel(i32 %26, i8* %add.ptr41) #11, !dbg !8656
  %29 = load i32, i32* %Post, align 4, !dbg !8657
  %cmp42 = icmp ult i32 %29, 32768, !dbg !8659
  br i1 %cmp42, label %if.then43, label %if.end46, !dbg !8660

if.then43:                                        ; preds = %if.end39
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8661
  %pcidev44 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 44, !dbg !8661
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pcidev44, align 8, !dbg !8661
  %dev45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !8661
  %32 = load i32, i32* %Post, align 4, !dbg !8661
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25, i64 0, i64 0), i32 %32) #12, !dbg !8661
  store i32 0, i32* %retval, align 4, !dbg !8663
  br label %return, !dbg !8663

if.end46:                                         ; preds = %if.end39
  store i32 0, i32* %i, align 4, !dbg !8664
  br label %for.cond47, !dbg !8666

for.cond47:                                       ; preds = %for.inc65, %if.end46
  %33 = load i32, i32* %i, align 4, !dbg !8667
  %cmp48 = icmp slt i32 %33, 240, !dbg !8669
  br i1 %cmp48, label %for.body49, label %for.end67, !dbg !8670

for.body49:                                       ; preds = %for.cond47
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8671
  %mem_ptr50 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %34, i32 0, i32 41, !dbg !8673
  %35 = load i8*, i8** %mem_ptr50, align 8, !dbg !8673
  %add.ptr51 = getelementptr i8, i8* %35, i64 48, !dbg !8674
  %call52 = call i32 @readl(i8* %add.ptr51) #11, !dbg !8675
  store i32 %call52, i32* %Isr, align 4, !dbg !8676
  %36 = load i32, i32* %Isr, align 4, !dbg !8677
  %and53 = and i32 %36, 2, !dbg !8679
  %tobool54 = icmp ne i32 %and53, 0, !dbg !8679
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !8680

if.then55:                                        ; preds = %for.body49
  br label %for.end67, !dbg !8681

if.end56:                                         ; preds = %for.body49
  br label %do.body57, !dbg !8682

do.body57:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i64* %__ms58, metadata !8683, metadata !DIExpression()), !dbg !8686
  store i64 1000, i64* %__ms58, align 8, !dbg !8686
  br label %while.cond59, !dbg !8686

while.cond59:                                     ; preds = %while.body62, %do.body57
  %37 = load i64, i64* %__ms58, align 8, !dbg !8686
  %dec60 = add i64 %37, -1, !dbg !8686
  store i64 %dec60, i64* %__ms58, align 8, !dbg !8686
  %tobool61 = icmp ne i64 %37, 0, !dbg !8686
  br i1 %tobool61, label %while.body62, label %while.end63, !dbg !8686

while.body62:                                     ; preds = %while.cond59
  call void @__const_udelay(i64 4295000) #11, !dbg !8687
  br label %while.cond59, !dbg !8686, !llvm.loop !8692

while.end63:                                      ; preds = %while.cond59
  call void @touch_nmi_watchdog() #11, !dbg !8693
  br label %do.end64, !dbg !8693

do.end64:                                         ; preds = %while.end63
  br label %for.inc65, !dbg !8694

for.inc65:                                        ; preds = %do.end64
  %38 = load i32, i32* %i, align 4, !dbg !8695
  %inc66 = add i32 %38, 1, !dbg !8695
  store i32 %inc66, i32* %i, align 4, !dbg !8695
  br label %for.cond47, !dbg !8696, !llvm.loop !8697

for.end67:                                        ; preds = %if.then55, %for.cond47
  %39 = load i32, i32* %i, align 4, !dbg !8699
  %cmp68 = icmp sge i32 %39, 240, !dbg !8701
  br i1 %cmp68, label %if.then69, label %if.end72, !dbg !8702

if.then69:                                        ; preds = %for.end67
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8703
  %pcidev70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 44, !dbg !8703
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pcidev70, align 8, !dbg !8703
  %dev71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 41, !dbg !8703
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev71, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !8703
  store i32 0, i32* %retval, align 4, !dbg !8705
  br label %return, !dbg !8705

if.end72:                                         ; preds = %for.end67
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8706
  %mem_ptr73 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 41, !dbg !8707
  %43 = load i8*, i8** %mem_ptr73, align 8, !dbg !8707
  %add.ptr74 = getelementptr i8, i8* %43, i64 28, !dbg !8708
  %call75 = call i32 @readl(i8* %add.ptr74) #11, !dbg !8709
  store i32 %call75, i32* %Config, align 4, !dbg !8710
  store i32 2, i32* %Isr, align 4, !dbg !8711
  %44 = load i32, i32* %Isr, align 4, !dbg !8712
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8713
  %mem_ptr76 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 41, !dbg !8714
  %46 = load i8*, i8** %mem_ptr76, align 8, !dbg !8714
  %add.ptr77 = getelementptr i8, i8* %46, i64 48, !dbg !8715
  call void @writel(i32 %44, i8* %add.ptr77) #11, !dbg !8716
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8717
  %mem_ptr78 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 41, !dbg !8718
  %48 = load i8*, i8** %mem_ptr78, align 8, !dbg !8718
  %add.ptr79 = getelementptr i8, i8* %48, i64 52, !dbg !8719
  %call80 = call i32 @readl(i8* %add.ptr79) #11, !dbg !8720
  store i32 %call80, i32* %Oimr, align 4, !dbg !8721
  %49 = load i32, i32* %Oimr, align 4, !dbg !8722
  %and81 = and i32 %49, -9, !dbg !8722
  store i32 %and81, i32* %Oimr, align 4, !dbg !8722
  %50 = load i32, i32* %Oimr, align 4, !dbg !8723
  %51 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8724
  %mem_ptr82 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %51, i32 0, i32 41, !dbg !8725
  %52 = load i8*, i8** %mem_ptr82, align 8, !dbg !8725
  %add.ptr83 = getelementptr i8, i8* %52, i64 52, !dbg !8726
  call void @writel(i32 %50, i8* %add.ptr83) #11, !dbg !8727
  %53 = load i32, i32* %Post, align 4, !dbg !8728
  %cmp84 = icmp eq i32 %53, 61200, !dbg !8730
  br i1 %cmp84, label %if.then85, label %if.end90, !dbg !8731

if.then85:                                        ; preds = %if.end72
  %54 = load i32, i32* %Config, align 4, !dbg !8732
  %cmp86 = icmp eq i32 %54, 15, !dbg !8735
  br i1 %cmp86, label %if.then88, label %lor.lhs.false, !dbg !8736

lor.lhs.false:                                    ; preds = %if.then85
  %55 = load i32, i32* %Config, align 4, !dbg !8737
  %cmp87 = icmp eq i32 %55, 9, !dbg !8738
  br i1 %cmp87, label %if.then88, label %if.end89, !dbg !8739

if.then88:                                        ; preds = %lor.lhs.false, %if.then85
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8740
  %requires_esl = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 50, !dbg !8741
  store i8 1, i8* %requires_esl, align 8, !dbg !8742
  br label %if.end89, !dbg !8740

if.end89:                                         ; preds = %if.then88, %lor.lhs.false
  br label %if.end90, !dbg !8743

if.end90:                                         ; preds = %if.end89, %if.end72
  store i32 1, i32* %retval, align 4, !dbg !8744
  br label %return, !dbg !8744

return:                                           ; preds = %if.end90, %if.then69, %if.then43, %if.then35, %if.then3
  %57 = load i32, i32* %retval, align 4, !dbg !8745
  ret i32 %57, !dbg !8745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_statupd_morpheus(%struct.ips_ha* %ha) #0 !dbg !8746 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %val = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8751, metadata !DIExpression()), !dbg !8752
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8753
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !8754
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !8754
  %add.ptr = getelementptr i8, i8* %1, i64 68, !dbg !8755
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8756
  store i32 %call, i32* %val, align 4, !dbg !8757
  %2 = load i32, i32* %val, align 4, !dbg !8758
  ret i32 %2, !dbg !8759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_intr_morpheus(%struct.ips_ha* %ha) #0 !dbg !8760 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %sp = alloca %struct.ips_stat*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %cstatus = alloca %union.IPS_STATUS, align 4
  %intrstatus = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8761, metadata !DIExpression()), !dbg !8762
  call void @llvm.dbg.declare(metadata %struct.ips_stat** %sp, metadata !8763, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata %union.IPS_STATUS* %cstatus, metadata !8768, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.declare(metadata i32* %intrstatus, metadata !8770, metadata !DIExpression()), !dbg !8771
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8772
  %tobool = icmp ne %struct.ips_ha* %0, null, !dbg !8772
  br i1 %tobool, label %if.end, label %if.then, !dbg !8774

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8775
  br label %return, !dbg !8775

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8776
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 30, !dbg !8778
  %2 = load i8, i8* %active, align 1, !dbg !8778
  %tobool1 = icmp ne i8 %2, 0, !dbg !8776
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8779

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8780
  br label %return, !dbg !8780

if.end3:                                          ; preds = %if.end
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8781
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 43, !dbg !8782
  %isintr = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 3, !dbg !8783
  %4 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %isintr, align 8, !dbg !8783
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8784
  %call = call i32 %4(%struct.ips_ha* %5) #11, !dbg !8785
  store i32 %call, i32* %intrstatus, align 4, !dbg !8786
  %6 = load i32, i32* %intrstatus, align 4, !dbg !8787
  %tobool4 = icmp ne i32 %6, 0, !dbg !8787
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8789

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !8790
  br label %return, !dbg !8790

if.end6:                                          ; preds = %if.end3
  br label %while.body, !dbg !8792

while.body:                                       ; preds = %if.end6, %if.then21, %if.end22
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8793
  %sp7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 11, !dbg !8795
  store %struct.ips_stat* %sp7, %struct.ips_stat** %sp, align 8, !dbg !8796
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8797
  %func8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !8798
  %isintr9 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func8, i32 0, i32 3, !dbg !8799
  %9 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %isintr9, align 8, !dbg !8799
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8800
  %call10 = call i32 %9(%struct.ips_ha* %10) #11, !dbg !8801
  store i32 %call10, i32* %intrstatus, align 4, !dbg !8802
  %11 = load i32, i32* %intrstatus, align 4, !dbg !8803
  %tobool11 = icmp ne i32 %11, 0, !dbg !8803
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !8805

if.then12:                                        ; preds = %while.body
  br label %while.end, !dbg !8806

if.else:                                          ; preds = %while.body
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8807
  %func13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 43, !dbg !8808
  %statupd = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func13, i32 0, i32 11, !dbg !8809
  %13 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %statupd, align 8, !dbg !8809
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8810
  %call14 = call i32 %13(%struct.ips_ha* %14) #11, !dbg !8811
  %value = bitcast %union.IPS_STATUS* %cstatus to i32*, !dbg !8812
  store volatile i32 %call14, i32* %value, align 4, !dbg !8813
  br label %if.end15

if.end15:                                         ; preds = %if.else
  %value16 = bitcast %union.IPS_STATUS* %cstatus to i32*, !dbg !8814
  %15 = load volatile i32, i32* %value16, align 4, !dbg !8814
  %cmp = icmp eq i32 %15, -1, !dbg !8816
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !8817

if.then17:                                        ; preds = %if.end15
  br label %while.end, !dbg !8818

if.end18:                                         ; preds = %if.end15
  %fields = bitcast %union.IPS_STATUS* %cstatus to %struct.anon.80*, !dbg !8819
  %command_id = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fields, i32 0, i32 1, !dbg !8821
  %16 = load volatile i8, i8* %command_id, align 1, !dbg !8821
  %conv = zext i8 %16 to i32, !dbg !8822
  %cmp19 = icmp sgt i32 %conv, 127, !dbg !8823
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !8824

if.then21:                                        ; preds = %if.end18
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8825
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 44, !dbg !8825
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !8825
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !8825
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !8825
  br label %while.body, !dbg !8827, !llvm.loop !8828

if.end22:                                         ; preds = %if.end18
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8830
  call void @ips_chkstatus(%struct.ips_ha* %19, %union.IPS_STATUS* %cstatus) #11, !dbg !8831
  %20 = load %struct.ips_stat*, %struct.ips_stat** %sp, align 8, !dbg !8832
  %scb_addr = getelementptr inbounds %struct.ips_stat, %struct.ips_stat* %20, i32 0, i32 1, !dbg !8833
  %21 = load i8*, i8** %scb_addr, align 8, !dbg !8833
  %22 = bitcast i8* %21 to %struct.ips_scb*, !dbg !8834
  store %struct.ips_scb* %22, %struct.ips_scb** %scb, align 8, !dbg !8835
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !8836
  %callback = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %23, i32 0, i32 20, !dbg !8837
  %24 = load void (%struct.ips_ha*, %struct.ips_scb*)*, void (%struct.ips_ha*, %struct.ips_scb*)** %callback, align 8, !dbg !8837
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8838
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !8839
  call void %24(%struct.ips_ha* %25, %struct.ips_scb* %26) #11, !dbg !8840
  br label %while.body, !dbg !8792, !llvm.loop !8828

while.end:                                        ; preds = %if.then17, %if.then12
  store i32 1, i32* %retval, align 4, !dbg !8841
  br label %return, !dbg !8841

return:                                           ; preds = %while.end, %if.then5, %if.then2, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8842
  ret i32 %27, !dbg !8842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_enable_int_morpheus(%struct.ips_ha* %ha) #0 !dbg !8843 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Oimr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %Oimr, metadata !8846, metadata !DIExpression()), !dbg !8847
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8848
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !8849
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !8849
  %add.ptr = getelementptr i8, i8* %1, i64 52, !dbg !8850
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8851
  store i32 %call, i32* %Oimr, align 4, !dbg !8852
  %2 = load i32, i32* %Oimr, align 4, !dbg !8853
  %and = and i32 %2, -9, !dbg !8853
  store i32 %and, i32* %Oimr, align 4, !dbg !8853
  %3 = load i32, i32* %Oimr, align 4, !dbg !8854
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8855
  %mem_ptr1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 41, !dbg !8856
  %5 = load i8*, i8** %mem_ptr1, align 8, !dbg !8856
  %add.ptr2 = getelementptr i8, i8* %5, i64 52, !dbg !8857
  call void @writel(i32 %3, i8* %add.ptr2) #11, !dbg !8858
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8859
  %mem_ptr3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 41, !dbg !8860
  %7 = load i8*, i8** %mem_ptr3, align 8, !dbg !8860
  %add.ptr4 = getelementptr i8, i8* %7, i64 52, !dbg !8861
  %call5 = call i32 @readl(i8* %add.ptr4) #11, !dbg !8862
  ret void, !dbg !8863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_isintr_copperhead_memio(%struct.ips_ha* %ha) #0 !dbg !8864 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Isr = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata i8* %Isr, metadata !8867, metadata !DIExpression()), !dbg !8868
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8869
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !8870
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !8870
  %add.ptr = getelementptr i8, i8* %1, i64 8, !dbg !8871
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8872
  store i8 %call, i8* %Isr, align 1, !dbg !8873
  %2 = load i8, i8* %Isr, align 1, !dbg !8874
  %conv = zext i8 %2 to i32, !dbg !8874
  %cmp = icmp eq i32 %conv, 255, !dbg !8876
  br i1 %cmp, label %if.then, label %if.end, !dbg !8877

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8878
  br label %return, !dbg !8878

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %Isr, align 1, !dbg !8879
  %conv2 = zext i8 %3 to i32, !dbg !8879
  %and = and i32 %conv2, 1, !dbg !8881
  %tobool = icmp ne i32 %and, 0, !dbg !8881
  br i1 %tobool, label %if.then3, label %if.else, !dbg !8882

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !8883
  br label %return, !dbg !8883

if.else:                                          ; preds = %if.end
  %4 = load i8, i8* %Isr, align 1, !dbg !8884
  %conv4 = zext i8 %4 to i32, !dbg !8884
  %and5 = and i32 %conv4, 6, !dbg !8886
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8886
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !8887

if.then7:                                         ; preds = %if.else
  %5 = load i8, i8* %Isr, align 1, !dbg !8888
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8890
  %mem_ptr8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 41, !dbg !8891
  %7 = load i8*, i8** %mem_ptr8, align 8, !dbg !8891
  %add.ptr9 = getelementptr i8, i8* %7, i64 8, !dbg !8892
  call void @writeb(i8 zeroext %5, i8* %add.ptr9) #11, !dbg !8893
  br label %if.end10, !dbg !8894

if.end10:                                         ; preds = %if.then7, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !8895
  br label %return, !dbg !8895

return:                                           ; preds = %if.end11, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8896
  ret i32 %8, !dbg !8896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_isinit_copperhead_memio(%struct.ips_ha* %ha) #0 !dbg !8897 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %isr = alloca i8, align 1
  %scpr = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  call void @llvm.dbg.declare(metadata i8* %isr, metadata !8900, metadata !DIExpression()), !dbg !8901
  store i8 0, i8* %isr, align 1, !dbg !8901
  call void @llvm.dbg.declare(metadata i8* %scpr, metadata !8902, metadata !DIExpression()), !dbg !8903
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8904
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !8905
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !8905
  %add.ptr = getelementptr i8, i8* %1, i64 8, !dbg !8906
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8907
  store i8 %call, i8* %isr, align 1, !dbg !8908
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8909
  %mem_ptr1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !8910
  %3 = load i8*, i8** %mem_ptr1, align 8, !dbg !8910
  %add.ptr2 = getelementptr i8, i8* %3, i64 5, !dbg !8911
  %call3 = call zeroext i8 @readb(i8* %add.ptr2) #11, !dbg !8912
  store i8 %call3, i8* %scpr, align 1, !dbg !8913
  %4 = load i8, i8* %isr, align 1, !dbg !8914
  %conv = zext i8 %4 to i32, !dbg !8914
  %and = and i32 %conv, 128, !dbg !8916
  %cmp = icmp eq i32 %and, 0, !dbg !8917
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8918

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %scpr, align 1, !dbg !8919
  %conv5 = zext i8 %5 to i32, !dbg !8919
  %and6 = and i32 %conv5, 2, !dbg !8920
  %cmp7 = icmp eq i32 %and6, 0, !dbg !8921
  br i1 %cmp7, label %if.then, label %if.else, !dbg !8922

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8923
  br label %return, !dbg !8923

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !8924
  br label %return, !dbg !8924

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8925
  ret i32 %6, !dbg !8925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_init_copperhead_memio(%struct.ips_ha* %ha) #0 !dbg !8926 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Isr = alloca i8, align 1
  %Cbsp = alloca i8, align 1
  %PostByte = alloca [2 x i8], align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %__ms = alloca i64, align 8
  %__ms44 = alloca i64, align 8
  %__ms80 = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.declare(metadata i8* %Isr, metadata !8929, metadata !DIExpression()), !dbg !8930
  store i8 0, i8* %Isr, align 1, !dbg !8930
  call void @llvm.dbg.declare(metadata i8* %Cbsp, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.declare(metadata [2 x i8]* %PostByte, metadata !8933, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8936, metadata !DIExpression()), !dbg !8937
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i32 0, i32* %i, align 4, !dbg !8940
  br label %for.cond, !dbg !8942

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8943
  %cmp = icmp slt i32 %0, 2, !dbg !8945
  br i1 %cmp, label %for.body, label %for.end16, !dbg !8946

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8947
  br label %for.cond1, !dbg !8950

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4, !dbg !8951
  %cmp2 = icmp slt i32 %1, 45, !dbg !8953
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8954

for.body3:                                        ; preds = %for.cond1
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8955
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !8957
  %3 = load i8*, i8** %mem_ptr, align 8, !dbg !8957
  %add.ptr = getelementptr i8, i8* %3, i64 8, !dbg !8958
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8959
  store i8 %call, i8* %Isr, align 1, !dbg !8960
  %4 = load i8, i8* %Isr, align 1, !dbg !8961
  %conv = zext i8 %4 to i32, !dbg !8961
  %and = and i32 %conv, 4, !dbg !8963
  %tobool = icmp ne i32 %and, 0, !dbg !8963
  br i1 %tobool, label %if.then, label %if.end, !dbg !8964

if.then:                                          ; preds = %for.body3
  br label %for.end, !dbg !8965

if.end:                                           ; preds = %for.body3
  br label %do.body, !dbg !8966

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !8967, metadata !DIExpression()), !dbg !8970
  store i64 1000, i64* %__ms, align 8, !dbg !8970
  br label %while.cond, !dbg !8970

while.cond:                                       ; preds = %while.body, %do.body
  %5 = load i64, i64* %__ms, align 8, !dbg !8970
  %dec = add i64 %5, -1, !dbg !8970
  store i64 %dec, i64* %__ms, align 8, !dbg !8970
  %tobool4 = icmp ne i64 %5, 0, !dbg !8970
  br i1 %tobool4, label %while.body, label %while.end, !dbg !8970

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !8971
  br label %while.cond, !dbg !8970, !llvm.loop !8976

while.end:                                        ; preds = %while.cond
  call void @touch_nmi_watchdog() #11, !dbg !8977
  br label %do.end, !dbg !8977

do.end:                                           ; preds = %while.end
  br label %for.inc, !dbg !8978

for.inc:                                          ; preds = %do.end
  %6 = load i32, i32* %j, align 4, !dbg !8979
  %inc = add i32 %6, 1, !dbg !8979
  store i32 %inc, i32* %j, align 4, !dbg !8979
  br label %for.cond1, !dbg !8980, !llvm.loop !8981

for.end:                                          ; preds = %if.then, %for.cond1
  %7 = load i32, i32* %j, align 4, !dbg !8983
  %cmp5 = icmp sge i32 %7, 45, !dbg !8985
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !8986

if.then7:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !8987
  br label %return, !dbg !8987

if.end8:                                          ; preds = %for.end
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8988
  %mem_ptr9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 41, !dbg !8989
  %9 = load i8*, i8** %mem_ptr9, align 8, !dbg !8989
  %add.ptr10 = getelementptr i8, i8* %9, i64 6, !dbg !8990
  %call11 = call zeroext i8 @readb(i8* %add.ptr10) #11, !dbg !8991
  %10 = load i32, i32* %i, align 4, !dbg !8992
  %idxprom = sext i32 %10 to i64, !dbg !8993
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 %idxprom, !dbg !8993
  store i8 %call11, i8* %arrayidx, align 1, !dbg !8994
  %11 = load i8, i8* %Isr, align 1, !dbg !8995
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !8996
  %mem_ptr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 41, !dbg !8997
  %13 = load i8*, i8** %mem_ptr12, align 8, !dbg !8997
  %add.ptr13 = getelementptr i8, i8* %13, i64 8, !dbg !8998
  call void @writeb(i8 zeroext %11, i8* %add.ptr13) #11, !dbg !8999
  br label %for.inc14, !dbg !9000

for.inc14:                                        ; preds = %if.end8
  %14 = load i32, i32* %i, align 4, !dbg !9001
  %inc15 = add i32 %14, 1, !dbg !9001
  store i32 %inc15, i32* %i, align 4, !dbg !9001
  br label %for.cond, !dbg !9002, !llvm.loop !9003

for.end16:                                        ; preds = %for.cond
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 0, !dbg !9005
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !9005
  %conv18 = zext i8 %15 to i32, !dbg !9005
  %cmp19 = icmp slt i32 %conv18, 128, !dbg !9007
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !9008

if.then21:                                        ; preds = %for.end16
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9009
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 44, !dbg !9009
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !9009
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !9009
  %arrayidx22 = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 0, !dbg !9009
  %18 = load i8, i8* %arrayidx22, align 1, !dbg !9009
  %conv23 = zext i8 %18 to i32, !dbg !9009
  %arrayidx24 = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 1, !dbg !9009
  %19 = load i8, i8* %arrayidx24, align 1, !dbg !9009
  %conv25 = zext i8 %19 to i32, !dbg !9009
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i32 %conv23, i32 %conv25) #12, !dbg !9009
  store i32 0, i32* %retval, align 4, !dbg !9011
  br label %return, !dbg !9011

if.end26:                                         ; preds = %for.end16
  store i32 0, i32* %i, align 4, !dbg !9012
  br label %for.cond27, !dbg !9014

for.cond27:                                       ; preds = %for.inc63, %if.end26
  %20 = load i32, i32* %i, align 4, !dbg !9015
  %cmp28 = icmp slt i32 %20, 2, !dbg !9017
  br i1 %cmp28, label %for.body30, label %for.end65, !dbg !9018

for.body30:                                       ; preds = %for.cond27
  store i32 0, i32* %j, align 4, !dbg !9019
  br label %for.cond31, !dbg !9022

for.cond31:                                       ; preds = %for.inc51, %for.body30
  %21 = load i32, i32* %j, align 4, !dbg !9023
  %cmp32 = icmp slt i32 %21, 240, !dbg !9025
  br i1 %cmp32, label %for.body34, label %for.end53, !dbg !9026

for.body34:                                       ; preds = %for.cond31
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9027
  %mem_ptr35 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 41, !dbg !9029
  %23 = load i8*, i8** %mem_ptr35, align 8, !dbg !9029
  %add.ptr36 = getelementptr i8, i8* %23, i64 8, !dbg !9030
  %call37 = call zeroext i8 @readb(i8* %add.ptr36) #11, !dbg !9031
  store i8 %call37, i8* %Isr, align 1, !dbg !9032
  %24 = load i8, i8* %Isr, align 1, !dbg !9033
  %conv38 = zext i8 %24 to i32, !dbg !9033
  %and39 = and i32 %conv38, 4, !dbg !9035
  %tobool40 = icmp ne i32 %and39, 0, !dbg !9035
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !9036

if.then41:                                        ; preds = %for.body34
  br label %for.end53, !dbg !9037

if.end42:                                         ; preds = %for.body34
  br label %do.body43, !dbg !9038

do.body43:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i64* %__ms44, metadata !9039, metadata !DIExpression()), !dbg !9042
  store i64 1000, i64* %__ms44, align 8, !dbg !9042
  br label %while.cond45, !dbg !9042

while.cond45:                                     ; preds = %while.body48, %do.body43
  %25 = load i64, i64* %__ms44, align 8, !dbg !9042
  %dec46 = add i64 %25, -1, !dbg !9042
  store i64 %dec46, i64* %__ms44, align 8, !dbg !9042
  %tobool47 = icmp ne i64 %25, 0, !dbg !9042
  br i1 %tobool47, label %while.body48, label %while.end49, !dbg !9042

while.body48:                                     ; preds = %while.cond45
  call void @__const_udelay(i64 4295000) #11, !dbg !9043
  br label %while.cond45, !dbg !9042, !llvm.loop !9048

while.end49:                                      ; preds = %while.cond45
  call void @touch_nmi_watchdog() #11, !dbg !9049
  br label %do.end50, !dbg !9049

do.end50:                                         ; preds = %while.end49
  br label %for.inc51, !dbg !9050

for.inc51:                                        ; preds = %do.end50
  %26 = load i32, i32* %j, align 4, !dbg !9051
  %inc52 = add i32 %26, 1, !dbg !9051
  store i32 %inc52, i32* %j, align 4, !dbg !9051
  br label %for.cond31, !dbg !9052, !llvm.loop !9053

for.end53:                                        ; preds = %if.then41, %for.cond31
  %27 = load i32, i32* %j, align 4, !dbg !9055
  %cmp54 = icmp sge i32 %27, 240, !dbg !9057
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !9058

if.then56:                                        ; preds = %for.end53
  store i32 0, i32* %retval, align 4, !dbg !9059
  br label %return, !dbg !9059

if.end57:                                         ; preds = %for.end53
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9060
  %mem_ptr58 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 41, !dbg !9061
  %29 = load i8*, i8** %mem_ptr58, align 8, !dbg !9061
  %add.ptr59 = getelementptr i8, i8* %29, i64 6, !dbg !9062
  %call60 = call zeroext i8 @readb(i8* %add.ptr59) #11, !dbg !9063
  %30 = load i8, i8* %Isr, align 1, !dbg !9064
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9065
  %mem_ptr61 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 41, !dbg !9066
  %32 = load i8*, i8** %mem_ptr61, align 8, !dbg !9066
  %add.ptr62 = getelementptr i8, i8* %32, i64 8, !dbg !9067
  call void @writeb(i8 zeroext %30, i8* %add.ptr62) #11, !dbg !9068
  br label %for.inc63, !dbg !9069

for.inc63:                                        ; preds = %if.end57
  %33 = load i32, i32* %i, align 4, !dbg !9070
  %inc64 = add i32 %33, 1, !dbg !9070
  store i32 %inc64, i32* %i, align 4, !dbg !9070
  br label %for.cond27, !dbg !9071, !llvm.loop !9072

for.end65:                                        ; preds = %for.cond27
  store i32 0, i32* %i, align 4, !dbg !9074
  br label %for.cond66, !dbg !9076

for.cond66:                                       ; preds = %for.inc87, %for.end65
  %34 = load i32, i32* %i, align 4, !dbg !9077
  %cmp67 = icmp slt i32 %34, 240, !dbg !9079
  br i1 %cmp67, label %for.body69, label %for.end89, !dbg !9080

for.body69:                                       ; preds = %for.cond66
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9081
  %mem_ptr70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 41, !dbg !9083
  %36 = load i8*, i8** %mem_ptr70, align 8, !dbg !9083
  %add.ptr71 = getelementptr i8, i8* %36, i64 7, !dbg !9084
  %call72 = call zeroext i8 @readb(i8* %add.ptr71) #11, !dbg !9085
  store i8 %call72, i8* %Cbsp, align 1, !dbg !9086
  %37 = load i8, i8* %Cbsp, align 1, !dbg !9087
  %conv73 = zext i8 %37 to i32, !dbg !9087
  %and74 = and i32 %conv73, 1, !dbg !9089
  %cmp75 = icmp eq i32 %and74, 0, !dbg !9090
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !9091

if.then77:                                        ; preds = %for.body69
  br label %for.end89, !dbg !9092

if.end78:                                         ; preds = %for.body69
  br label %do.body79, !dbg !9093

do.body79:                                        ; preds = %if.end78
  call void @llvm.dbg.declare(metadata i64* %__ms80, metadata !9094, metadata !DIExpression()), !dbg !9097
  store i64 1000, i64* %__ms80, align 8, !dbg !9097
  br label %while.cond81, !dbg !9097

while.cond81:                                     ; preds = %while.body84, %do.body79
  %38 = load i64, i64* %__ms80, align 8, !dbg !9097
  %dec82 = add i64 %38, -1, !dbg !9097
  store i64 %dec82, i64* %__ms80, align 8, !dbg !9097
  %tobool83 = icmp ne i64 %38, 0, !dbg !9097
  br i1 %tobool83, label %while.body84, label %while.end85, !dbg !9097

while.body84:                                     ; preds = %while.cond81
  call void @__const_udelay(i64 4295000) #11, !dbg !9098
  br label %while.cond81, !dbg !9097, !llvm.loop !9103

while.end85:                                      ; preds = %while.cond81
  call void @touch_nmi_watchdog() #11, !dbg !9104
  br label %do.end86, !dbg !9104

do.end86:                                         ; preds = %while.end85
  br label %for.inc87, !dbg !9105

for.inc87:                                        ; preds = %do.end86
  %39 = load i32, i32* %i, align 4, !dbg !9106
  %inc88 = add i32 %39, 1, !dbg !9106
  store i32 %inc88, i32* %i, align 4, !dbg !9106
  br label %for.cond66, !dbg !9107, !llvm.loop !9108

for.end89:                                        ; preds = %if.then77, %for.cond66
  %40 = load i32, i32* %i, align 4, !dbg !9110
  %cmp90 = icmp sge i32 %40, 240, !dbg !9112
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !9113

if.then92:                                        ; preds = %for.end89
  store i32 0, i32* %retval, align 4, !dbg !9114
  br label %return, !dbg !9114

if.end93:                                         ; preds = %for.end89
  %41 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9115
  %mem_ptr94 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %41, i32 0, i32 41, !dbg !9116
  %42 = load i8*, i8** %mem_ptr94, align 8, !dbg !9116
  %add.ptr95 = getelementptr i8, i8* %42, i64 20, !dbg !9117
  call void @writel(i32 4112, i8* %add.ptr95) #11, !dbg !9118
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9119
  %mem_ptr96 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 41, !dbg !9120
  %44 = load i8*, i8** %mem_ptr96, align 8, !dbg !9120
  %add.ptr97 = getelementptr i8, i8* %44, i64 5, !dbg !9121
  call void @writeb(i8 zeroext 2, i8* %add.ptr97) #11, !dbg !9122
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9123
  %pcidev98 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 44, !dbg !9125
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pcidev98, align 8, !dbg !9125
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 12, !dbg !9126
  %47 = load i8, i8* %revision, align 8, !dbg !9126
  %conv99 = zext i8 %47 to i32, !dbg !9123
  %cmp100 = icmp eq i32 %conv99, 16, !dbg !9127
  br i1 %cmp100, label %if.then102, label %if.end105, !dbg !9128

if.then102:                                       ; preds = %if.end93
  %48 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9129
  %mem_ptr103 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %48, i32 0, i32 41, !dbg !9130
  %49 = load i8*, i8** %mem_ptr103, align 8, !dbg !9130
  %add.ptr104 = getelementptr i8, i8* %49, i64 56, !dbg !9131
  call void @writel(i32 0, i8* %add.ptr104) #11, !dbg !9132
  br label %if.end105, !dbg !9132

if.end105:                                        ; preds = %if.then102, %if.end93
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9133
  %mem_ptr106 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 41, !dbg !9134
  %51 = load i8*, i8** %mem_ptr106, align 8, !dbg !9134
  %add.ptr107 = getelementptr i8, i8* %51, i64 8, !dbg !9135
  call void @writeb(i8 zeroext -128, i8* %add.ptr107) #11, !dbg !9136
  store i32 1, i32* %retval, align 4, !dbg !9137
  br label %return, !dbg !9137

return:                                           ; preds = %if.end105, %if.then92, %if.then56, %if.then21, %if.then7
  %52 = load i32, i32* %retval, align 4, !dbg !9138
  ret i32 %52, !dbg !9138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_statupd_copperhead_memio(%struct.ips_ha* %ha) #0 !dbg !9139 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9142
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 18, !dbg !9144
  %1 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !9144
  %p_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %1, i32 0, i32 3, !dbg !9145
  %2 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_tail, align 8, !dbg !9145
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9146
  %adapt1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 18, !dbg !9147
  %4 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt1, align 8, !dbg !9147
  %p_status_end = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %4, i32 0, i32 2, !dbg !9148
  %5 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_end, align 8, !dbg !9148
  %cmp = icmp ne %union.IPS_STATUS* %2, %5, !dbg !9149
  br i1 %cmp, label %if.then, label %if.else, !dbg !9150

if.then:                                          ; preds = %entry
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9151
  %adapt2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 18, !dbg !9153
  %7 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt2, align 8, !dbg !9153
  %p_status_tail3 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %7, i32 0, i32 3, !dbg !9154
  %8 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_tail3, align 8, !dbg !9155
  %incdec.ptr = getelementptr %union.IPS_STATUS, %union.IPS_STATUS* %8, i32 1, !dbg !9155
  store volatile %union.IPS_STATUS* %incdec.ptr, %union.IPS_STATUS** %p_status_tail3, align 8, !dbg !9155
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9156
  %adapt4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 18, !dbg !9157
  %10 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt4, align 8, !dbg !9157
  %hw_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %10, i32 0, i32 5, !dbg !9158
  %11 = load volatile i32, i32* %hw_status_tail, align 4, !dbg !9159
  %conv = zext i32 %11 to i64, !dbg !9159
  %add = add i64 %conv, 4, !dbg !9159
  %conv5 = trunc i64 %add to i32, !dbg !9159
  store volatile i32 %conv5, i32* %hw_status_tail, align 4, !dbg !9159
  br label %if.end, !dbg !9160

if.else:                                          ; preds = %entry
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9161
  %adapt6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 18, !dbg !9163
  %13 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt6, align 8, !dbg !9163
  %p_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %13, i32 0, i32 1, !dbg !9164
  %14 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_start, align 8, !dbg !9164
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9165
  %adapt7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 18, !dbg !9166
  %16 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt7, align 8, !dbg !9166
  %p_status_tail8 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %16, i32 0, i32 3, !dbg !9167
  store volatile %union.IPS_STATUS* %14, %union.IPS_STATUS** %p_status_tail8, align 8, !dbg !9168
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9169
  %adapt9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 18, !dbg !9170
  %18 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt9, align 8, !dbg !9170
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %18, i32 0, i32 4, !dbg !9171
  %19 = load volatile i32, i32* %hw_status_start, align 8, !dbg !9171
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9172
  %adapt10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 18, !dbg !9173
  %21 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt10, align 8, !dbg !9173
  %hw_status_tail11 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %21, i32 0, i32 5, !dbg !9174
  store volatile i32 %19, i32* %hw_status_tail11, align 4, !dbg !9175
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9176
  %adapt12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 18, !dbg !9177
  %23 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt12, align 8, !dbg !9177
  %hw_status_tail13 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %23, i32 0, i32 5, !dbg !9178
  %24 = load volatile i32, i32* %hw_status_tail13, align 4, !dbg !9178
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9179
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 41, !dbg !9180
  %26 = load i8*, i8** %mem_ptr, align 8, !dbg !9180
  %add.ptr = getelementptr i8, i8* %26, i64 36, !dbg !9181
  call void @writel(i32 %24, i8* %add.ptr) #11, !dbg !9182
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9183
  %adapt14 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 18, !dbg !9184
  %28 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt14, align 8, !dbg !9184
  %p_status_tail15 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %28, i32 0, i32 3, !dbg !9185
  %29 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_tail15, align 8, !dbg !9185
  %value = bitcast %union.IPS_STATUS* %29 to i32*, !dbg !9186
  %30 = load volatile i32, i32* %value, align 4, !dbg !9186
  ret i32 %30, !dbg !9187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_statinit_memio(%struct.ips_ha* %ha) #0 !dbg !9188 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %phys_status_start = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9189, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.declare(metadata i32* %phys_status_start, metadata !9191, metadata !DIExpression()), !dbg !9192
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9193
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 18, !dbg !9194
  %1 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !9194
  %status = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %1, i32 0, i32 0, !dbg !9195
  %arraydecay = getelementptr inbounds [129 x %union.IPS_STATUS], [129 x %union.IPS_STATUS]* %status, i64 0, i64 0, !dbg !9193
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9196
  %adapt1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 18, !dbg !9197
  %3 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt1, align 8, !dbg !9197
  %p_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %3, i32 0, i32 1, !dbg !9198
  store volatile %union.IPS_STATUS* %arraydecay, %union.IPS_STATUS** %p_status_start, align 8, !dbg !9199
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9200
  %adapt2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 18, !dbg !9201
  %5 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt2, align 8, !dbg !9201
  %status3 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %5, i32 0, i32 0, !dbg !9202
  %arraydecay4 = getelementptr inbounds [129 x %union.IPS_STATUS], [129 x %union.IPS_STATUS]* %status3, i64 0, i64 0, !dbg !9200
  %add.ptr = getelementptr %union.IPS_STATUS, %union.IPS_STATUS* %arraydecay4, i64 128, !dbg !9203
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9204
  %adapt5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 18, !dbg !9205
  %7 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt5, align 8, !dbg !9205
  %p_status_end = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %7, i32 0, i32 2, !dbg !9206
  store volatile %union.IPS_STATUS* %add.ptr, %union.IPS_STATUS** %p_status_end, align 8, !dbg !9207
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9208
  %adapt6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 18, !dbg !9209
  %9 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt6, align 8, !dbg !9209
  %status7 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %9, i32 0, i32 0, !dbg !9210
  %arraydecay8 = getelementptr inbounds [129 x %union.IPS_STATUS], [129 x %union.IPS_STATUS]* %status7, i64 0, i64 0, !dbg !9208
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9211
  %adapt9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 18, !dbg !9212
  %11 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt9, align 8, !dbg !9212
  %p_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %11, i32 0, i32 3, !dbg !9213
  store volatile %union.IPS_STATUS* %arraydecay8, %union.IPS_STATUS** %p_status_tail, align 8, !dbg !9214
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9215
  %adapt10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 18, !dbg !9216
  %13 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt10, align 8, !dbg !9216
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %13, i32 0, i32 4, !dbg !9217
  %14 = load volatile i32, i32* %hw_status_start, align 8, !dbg !9217
  store i32 %14, i32* %phys_status_start, align 4, !dbg !9218
  %15 = load i32, i32* %phys_status_start, align 4, !dbg !9219
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9220
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 41, !dbg !9221
  %17 = load i8*, i8** %mem_ptr, align 8, !dbg !9221
  %add.ptr11 = getelementptr i8, i8* %17, i64 44, !dbg !9222
  call void @writel(i32 %15, i8* %add.ptr11) #11, !dbg !9223
  %18 = load i32, i32* %phys_status_start, align 4, !dbg !9224
  %add = add i32 %18, 516, !dbg !9225
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9226
  %mem_ptr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 41, !dbg !9227
  %20 = load i8*, i8** %mem_ptr12, align 8, !dbg !9227
  %add.ptr13 = getelementptr i8, i8* %20, i64 40, !dbg !9228
  call void @writel(i32 %add, i8* %add.ptr13) #11, !dbg !9229
  %21 = load i32, i32* %phys_status_start, align 4, !dbg !9230
  %add14 = add i32 %21, 4, !dbg !9231
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9232
  %mem_ptr15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 41, !dbg !9233
  %23 = load i8*, i8** %mem_ptr15, align 8, !dbg !9233
  %add.ptr16 = getelementptr i8, i8* %23, i64 32, !dbg !9234
  call void @writel(i32 %add14, i8* %add.ptr16) #11, !dbg !9235
  %24 = load i32, i32* %phys_status_start, align 4, !dbg !9236
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9237
  %mem_ptr17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 41, !dbg !9238
  %26 = load i8*, i8** %mem_ptr17, align 8, !dbg !9238
  %add.ptr18 = getelementptr i8, i8* %26, i64 36, !dbg !9239
  call void @writel(i32 %24, i8* %add.ptr18) #11, !dbg !9240
  %27 = load i32, i32* %phys_status_start, align 4, !dbg !9241
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9242
  %adapt19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 18, !dbg !9243
  %29 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt19, align 8, !dbg !9243
  %hw_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %29, i32 0, i32 5, !dbg !9244
  store volatile i32 %27, i32* %hw_status_tail, align 4, !dbg !9245
  ret void, !dbg !9246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_reset_copperhead_memio(%struct.ips_ha* %ha) #0 !dbg !9247 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %reset_counter = alloca i32, align 4
  %__ms = alloca i64, align 8
  %__ms6 = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.declare(metadata i32* %reset_counter, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i32 0, i32* %reset_counter, align 4, !dbg !9252
  br label %while.cond, !dbg !9253

while.cond:                                       ; preds = %if.end16, %entry
  %0 = load i32, i32* %reset_counter, align 4, !dbg !9254
  %cmp = icmp slt i32 %0, 2, !dbg !9255
  br i1 %cmp, label %while.body, label %while.end17, !dbg !9253

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %reset_counter, align 4, !dbg !9256
  %inc = add i32 %1, 1, !dbg !9256
  store i32 %inc, i32* %reset_counter, align 4, !dbg !9256
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9258
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !9259
  %3 = load i8*, i8** %mem_ptr, align 8, !dbg !9259
  %add.ptr = getelementptr i8, i8* %3, i64 5, !dbg !9260
  call void @writeb(i8 zeroext -128, i8* %add.ptr) #11, !dbg !9261
  br label %do.body, !dbg !9262

do.body:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !9263, metadata !DIExpression()), !dbg !9266
  store i64 1000, i64* %__ms, align 8, !dbg !9266
  br label %while.cond1, !dbg !9266

while.cond1:                                      ; preds = %while.body2, %do.body
  %4 = load i64, i64* %__ms, align 8, !dbg !9266
  %dec = add i64 %4, -1, !dbg !9266
  store i64 %dec, i64* %__ms, align 8, !dbg !9266
  %tobool = icmp ne i64 %4, 0, !dbg !9266
  br i1 %tobool, label %while.body2, label %while.end, !dbg !9266

while.body2:                                      ; preds = %while.cond1
  call void @__const_udelay(i64 4295000) #11, !dbg !9267
  br label %while.cond1, !dbg !9266, !llvm.loop !9272

while.end:                                        ; preds = %while.cond1
  call void @touch_nmi_watchdog() #11, !dbg !9273
  br label %do.end, !dbg !9273

do.end:                                           ; preds = %while.end
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9274
  %mem_ptr3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 41, !dbg !9275
  %6 = load i8*, i8** %mem_ptr3, align 8, !dbg !9275
  %add.ptr4 = getelementptr i8, i8* %6, i64 5, !dbg !9276
  call void @writeb(i8 zeroext 0, i8* %add.ptr4) #11, !dbg !9277
  br label %do.body5, !dbg !9278

do.body5:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i64* %__ms6, metadata !9279, metadata !DIExpression()), !dbg !9282
  store i64 1000, i64* %__ms6, align 8, !dbg !9282
  br label %while.cond7, !dbg !9282

while.cond7:                                      ; preds = %while.body10, %do.body5
  %7 = load i64, i64* %__ms6, align 8, !dbg !9282
  %dec8 = add i64 %7, -1, !dbg !9282
  store i64 %dec8, i64* %__ms6, align 8, !dbg !9282
  %tobool9 = icmp ne i64 %7, 0, !dbg !9282
  br i1 %tobool9, label %while.body10, label %while.end11, !dbg !9282

while.body10:                                     ; preds = %while.cond7
  call void @__const_udelay(i64 4295000) #11, !dbg !9283
  br label %while.cond7, !dbg !9282, !llvm.loop !9288

while.end11:                                      ; preds = %while.cond7
  call void @touch_nmi_watchdog() #11, !dbg !9289
  br label %do.end12, !dbg !9289

do.end12:                                         ; preds = %while.end11
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9290
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !9292
  %init = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 4, !dbg !9293
  %9 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %init, align 8, !dbg !9293
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9294
  %call = call i32 %9(%struct.ips_ha* %10) #11, !dbg !9295
  %tobool13 = icmp ne i32 %call, 0, !dbg !9295
  br i1 %tobool13, label %if.then, label %if.else, !dbg !9296

if.then:                                          ; preds = %do.end12
  br label %while.end17, !dbg !9297

if.else:                                          ; preds = %do.end12
  %11 = load i32, i32* %reset_counter, align 4, !dbg !9298
  %cmp14 = icmp sge i32 %11, 2, !dbg !9300
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !9301

if.then15:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !9302
  br label %return, !dbg !9302

if.end:                                           ; preds = %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end
  br label %while.cond, !dbg !9253, !llvm.loop !9304

while.end17:                                      ; preds = %if.then, %while.cond
  store i32 1, i32* %retval, align 4, !dbg !9306
  br label %return, !dbg !9306

return:                                           ; preds = %while.end17, %if.then15
  %12 = load i32, i32* %retval, align 4, !dbg !9307
  ret i32 %12, !dbg !9307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_intr_copperhead(%struct.ips_ha* %ha) #0 !dbg !9308 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %sp = alloca %struct.ips_stat*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %cstatus = alloca %union.IPS_STATUS, align 4
  %intrstatus = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.declare(metadata %struct.ips_stat** %sp, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !9313, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.declare(metadata %union.IPS_STATUS* %cstatus, metadata !9315, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.declare(metadata i32* %intrstatus, metadata !9317, metadata !DIExpression()), !dbg !9318
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9319
  %tobool = icmp ne %struct.ips_ha* %0, null, !dbg !9319
  br i1 %tobool, label %if.end, label %if.then, !dbg !9321

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9322
  br label %return, !dbg !9322

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9323
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 30, !dbg !9325
  %2 = load i8, i8* %active, align 1, !dbg !9325
  %tobool1 = icmp ne i8 %2, 0, !dbg !9323
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9326

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9327
  br label %return, !dbg !9327

if.end3:                                          ; preds = %if.end
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9328
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 43, !dbg !9329
  %isintr = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 3, !dbg !9330
  %4 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %isintr, align 8, !dbg !9330
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9331
  %call = call i32 %4(%struct.ips_ha* %5) #11, !dbg !9332
  store i32 %call, i32* %intrstatus, align 4, !dbg !9333
  %6 = load i32, i32* %intrstatus, align 4, !dbg !9334
  %tobool4 = icmp ne i32 %6, 0, !dbg !9334
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9336

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !9337
  br label %return, !dbg !9337

if.end6:                                          ; preds = %if.end3
  br label %while.body, !dbg !9339

while.body:                                       ; preds = %if.end6, %if.then17, %if.end18
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9340
  %sp7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 11, !dbg !9342
  store %struct.ips_stat* %sp7, %struct.ips_stat** %sp, align 8, !dbg !9343
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9344
  %func8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !9345
  %isintr9 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func8, i32 0, i32 3, !dbg !9346
  %9 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %isintr9, align 8, !dbg !9346
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9347
  %call10 = call i32 %9(%struct.ips_ha* %10) #11, !dbg !9348
  store i32 %call10, i32* %intrstatus, align 4, !dbg !9349
  %11 = load i32, i32* %intrstatus, align 4, !dbg !9350
  %tobool11 = icmp ne i32 %11, 0, !dbg !9350
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !9352

if.then12:                                        ; preds = %while.body
  br label %while.end, !dbg !9353

if.else:                                          ; preds = %while.body
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9354
  %func13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 43, !dbg !9355
  %statupd = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func13, i32 0, i32 11, !dbg !9356
  %13 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %statupd, align 8, !dbg !9356
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9357
  %call14 = call i32 %13(%struct.ips_ha* %14) #11, !dbg !9358
  %value = bitcast %union.IPS_STATUS* %cstatus to i32*, !dbg !9359
  store volatile i32 %call14, i32* %value, align 4, !dbg !9360
  br label %if.end15

if.end15:                                         ; preds = %if.else
  %fields = bitcast %union.IPS_STATUS* %cstatus to %struct.anon.80*, !dbg !9361
  %command_id = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fields, i32 0, i32 1, !dbg !9363
  %15 = load volatile i8, i8* %command_id, align 1, !dbg !9363
  %conv = zext i8 %15 to i32, !dbg !9364
  %cmp = icmp sgt i32 %conv, 127, !dbg !9365
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !9366

if.then17:                                        ; preds = %if.end15
  br label %while.body, !dbg !9367, !llvm.loop !9369

if.end18:                                         ; preds = %if.end15
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9371
  call void @ips_chkstatus(%struct.ips_ha* %16, %union.IPS_STATUS* %cstatus) #11, !dbg !9372
  %17 = load %struct.ips_stat*, %struct.ips_stat** %sp, align 8, !dbg !9373
  %scb_addr = getelementptr inbounds %struct.ips_stat, %struct.ips_stat* %17, i32 0, i32 1, !dbg !9374
  %18 = load i8*, i8** %scb_addr, align 8, !dbg !9374
  %19 = bitcast i8* %18 to %struct.ips_scb*, !dbg !9375
  store %struct.ips_scb* %19, %struct.ips_scb** %scb, align 8, !dbg !9376
  %20 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !9377
  %callback = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %20, i32 0, i32 20, !dbg !9378
  %21 = load void (%struct.ips_ha*, %struct.ips_scb*)*, void (%struct.ips_ha*, %struct.ips_scb*)** %callback, align 8, !dbg !9378
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9379
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !9380
  call void %21(%struct.ips_ha* %22, %struct.ips_scb* %23) #11, !dbg !9381
  br label %while.body, !dbg !9339, !llvm.loop !9369

while.end:                                        ; preds = %if.then12
  store i32 1, i32* %retval, align 4, !dbg !9382
  br label %return, !dbg !9382

return:                                           ; preds = %while.end, %if.then5, %if.then2, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !9383
  ret i32 %24, !dbg !9383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_erase_bios_memio(%struct.ips_ha* %ha) #0 !dbg !9384 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %timeout = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata i8* %status, metadata !9389, metadata !DIExpression()), !dbg !9390
  store i8 0, i8* %status, align 1, !dbg !9391
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9392
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !9393
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !9393
  %add.ptr = getelementptr i8, i8* %1, i64 24, !dbg !9394
  call void @writel(i32 0, i8* %add.ptr) #11, !dbg !9395
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9396
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 44, !dbg !9398
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !9398
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !9399
  %4 = load i8, i8* %revision, align 8, !dbg !9399
  %conv = zext i8 %4 to i32, !dbg !9396
  %cmp = icmp eq i32 %conv, 16, !dbg !9400
  br i1 %cmp, label %if.then, label %if.end, !dbg !9401

if.then:                                          ; preds = %entry
  call void @__const_udelay(i64 107375) #11, !dbg !9402
  br label %if.end, !dbg !9407

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9408
  %mem_ptr2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 41, !dbg !9409
  %6 = load i8*, i8** %mem_ptr2, align 8, !dbg !9409
  %add.ptr3 = getelementptr i8, i8* %6, i64 28, !dbg !9410
  call void @writeb(i8 zeroext 80, i8* %add.ptr3) #11, !dbg !9411
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9412
  %pcidev4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 44, !dbg !9414
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pcidev4, align 8, !dbg !9414
  %revision5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 12, !dbg !9415
  %9 = load i8, i8* %revision5, align 8, !dbg !9415
  %conv6 = zext i8 %9 to i32, !dbg !9412
  %cmp7 = icmp eq i32 %conv6, 16, !dbg !9416
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9417

if.then9:                                         ; preds = %if.end
  call void @__const_udelay(i64 107375) #11, !dbg !9418
  br label %if.end10, !dbg !9423

if.end10:                                         ; preds = %if.then9, %if.end
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9424
  %mem_ptr11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 41, !dbg !9425
  %11 = load i8*, i8** %mem_ptr11, align 8, !dbg !9425
  %add.ptr12 = getelementptr i8, i8* %11, i64 28, !dbg !9426
  call void @writeb(i8 zeroext 32, i8* %add.ptr12) #11, !dbg !9427
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9428
  %pcidev13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 44, !dbg !9430
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pcidev13, align 8, !dbg !9430
  %revision14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 12, !dbg !9431
  %14 = load i8, i8* %revision14, align 8, !dbg !9431
  %conv15 = zext i8 %14 to i32, !dbg !9428
  %cmp16 = icmp eq i32 %conv15, 16, !dbg !9432
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9433

if.then18:                                        ; preds = %if.end10
  call void @__const_udelay(i64 107375) #11, !dbg !9434
  br label %if.end19, !dbg !9439

if.end19:                                         ; preds = %if.then18, %if.end10
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9440
  %mem_ptr20 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 41, !dbg !9441
  %16 = load i8*, i8** %mem_ptr20, align 8, !dbg !9441
  %add.ptr21 = getelementptr i8, i8* %16, i64 28, !dbg !9442
  call void @writeb(i8 zeroext -48, i8* %add.ptr21) #11, !dbg !9443
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9444
  %pcidev22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 44, !dbg !9446
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pcidev22, align 8, !dbg !9446
  %revision23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 12, !dbg !9447
  %19 = load i8, i8* %revision23, align 8, !dbg !9447
  %conv24 = zext i8 %19 to i32, !dbg !9444
  %cmp25 = icmp eq i32 %conv24, 16, !dbg !9448
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !9449

if.then27:                                        ; preds = %if.end19
  call void @__const_udelay(i64 107375) #11, !dbg !9450
  br label %if.end28, !dbg !9455

if.end28:                                         ; preds = %if.then27, %if.end19
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9456
  %mem_ptr29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 41, !dbg !9457
  %21 = load i8*, i8** %mem_ptr29, align 8, !dbg !9457
  %add.ptr30 = getelementptr i8, i8* %21, i64 28, !dbg !9458
  call void @writeb(i8 zeroext 112, i8* %add.ptr30) #11, !dbg !9459
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9460
  %pcidev31 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 44, !dbg !9462
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pcidev31, align 8, !dbg !9462
  %revision32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 12, !dbg !9463
  %24 = load i8, i8* %revision32, align 8, !dbg !9463
  %conv33 = zext i8 %24 to i32, !dbg !9460
  %cmp34 = icmp eq i32 %conv33, 16, !dbg !9464
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9465

if.then36:                                        ; preds = %if.end28
  call void @__const_udelay(i64 107375) #11, !dbg !9466
  br label %if.end37, !dbg !9471

if.end37:                                         ; preds = %if.then36, %if.end28
  store i32 80000, i32* %timeout, align 4, !dbg !9472
  br label %while.cond, !dbg !9473

while.cond:                                       ; preds = %do.end, %if.end37
  %25 = load i32, i32* %timeout, align 4, !dbg !9474
  %cmp38 = icmp sgt i32 %25, 0, !dbg !9475
  br i1 %cmp38, label %while.body, label %while.end, !dbg !9473

while.body:                                       ; preds = %while.cond
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9476
  %pcidev40 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 44, !dbg !9479
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pcidev40, align 8, !dbg !9479
  %revision41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 12, !dbg !9480
  %28 = load i8, i8* %revision41, align 8, !dbg !9480
  %conv42 = zext i8 %28 to i32, !dbg !9476
  %cmp43 = icmp eq i32 %conv42, 16, !dbg !9481
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !9482

if.then45:                                        ; preds = %while.body
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9483
  %mem_ptr46 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %29, i32 0, i32 41, !dbg !9485
  %30 = load i8*, i8** %mem_ptr46, align 8, !dbg !9485
  %add.ptr47 = getelementptr i8, i8* %30, i64 24, !dbg !9486
  call void @writel(i32 0, i8* %add.ptr47) #11, !dbg !9487
  call void @__const_udelay(i64 107375) #11, !dbg !9488
  br label %if.end48, !dbg !9493

if.end48:                                         ; preds = %if.then45, %while.body
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9494
  %mem_ptr49 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 41, !dbg !9495
  %32 = load i8*, i8** %mem_ptr49, align 8, !dbg !9495
  %add.ptr50 = getelementptr i8, i8* %32, i64 28, !dbg !9496
  %call = call zeroext i8 @readb(i8* %add.ptr50) #11, !dbg !9497
  store i8 %call, i8* %status, align 1, !dbg !9498
  %33 = load i8, i8* %status, align 1, !dbg !9499
  %conv51 = zext i8 %33 to i32, !dbg !9499
  %and = and i32 %conv51, 128, !dbg !9501
  %tobool = icmp ne i32 %and, 0, !dbg !9501
  br i1 %tobool, label %if.then52, label %if.end53, !dbg !9502

if.then52:                                        ; preds = %if.end48
  br label %while.end, !dbg !9503

if.end53:                                         ; preds = %if.end48
  br label %do.body, !dbg !9504

do.body:                                          ; preds = %if.end53
  call void @__const_udelay(i64 4295000) #11, !dbg !9505
  call void @touch_nmi_watchdog() #11, !dbg !9511
  br label %do.end, !dbg !9511

do.end:                                           ; preds = %do.body
  %34 = load i32, i32* %timeout, align 4, !dbg !9512
  %dec = add i32 %34, -1, !dbg !9512
  store i32 %dec, i32* %timeout, align 4, !dbg !9512
  br label %while.cond, !dbg !9473, !llvm.loop !9513

while.end:                                        ; preds = %if.then52, %while.cond
  %35 = load i32, i32* %timeout, align 4, !dbg !9515
  %cmp54 = icmp sle i32 %35, 0, !dbg !9517
  br i1 %cmp54, label %if.then56, label %if.end91, !dbg !9518

if.then56:                                        ; preds = %while.end
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9519
  %mem_ptr57 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 41, !dbg !9521
  %37 = load i8*, i8** %mem_ptr57, align 8, !dbg !9521
  %add.ptr58 = getelementptr i8, i8* %37, i64 28, !dbg !9522
  call void @writeb(i8 zeroext -80, i8* %add.ptr58) #11, !dbg !9523
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9524
  %pcidev59 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 44, !dbg !9526
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pcidev59, align 8, !dbg !9526
  %revision60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 12, !dbg !9527
  %40 = load i8, i8* %revision60, align 8, !dbg !9527
  %conv61 = zext i8 %40 to i32, !dbg !9524
  %cmp62 = icmp eq i32 %conv61, 16, !dbg !9528
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !9529

if.then64:                                        ; preds = %if.then56
  call void @__const_udelay(i64 107375) #11, !dbg !9530
  br label %if.end65, !dbg !9535

if.end65:                                         ; preds = %if.then64, %if.then56
  store i32 10000, i32* %timeout, align 4, !dbg !9536
  br label %while.cond66, !dbg !9537

while.cond66:                                     ; preds = %do.end88, %if.end65
  %41 = load i32, i32* %timeout, align 4, !dbg !9538
  %cmp67 = icmp sgt i32 %41, 0, !dbg !9539
  br i1 %cmp67, label %while.body69, label %while.end90, !dbg !9537

while.body69:                                     ; preds = %while.cond66
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9540
  %pcidev70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 44, !dbg !9543
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pcidev70, align 8, !dbg !9543
  %revision71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 12, !dbg !9544
  %44 = load i8, i8* %revision71, align 8, !dbg !9544
  %conv72 = zext i8 %44 to i32, !dbg !9540
  %cmp73 = icmp eq i32 %conv72, 16, !dbg !9545
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !9546

if.then75:                                        ; preds = %while.body69
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9547
  %mem_ptr76 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 41, !dbg !9549
  %46 = load i8*, i8** %mem_ptr76, align 8, !dbg !9549
  %add.ptr77 = getelementptr i8, i8* %46, i64 24, !dbg !9550
  call void @writel(i32 0, i8* %add.ptr77) #11, !dbg !9551
  call void @__const_udelay(i64 107375) #11, !dbg !9552
  br label %if.end78, !dbg !9557

if.end78:                                         ; preds = %if.then75, %while.body69
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9558
  %mem_ptr79 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 41, !dbg !9559
  %48 = load i8*, i8** %mem_ptr79, align 8, !dbg !9559
  %add.ptr80 = getelementptr i8, i8* %48, i64 28, !dbg !9560
  %call81 = call zeroext i8 @readb(i8* %add.ptr80) #11, !dbg !9561
  store i8 %call81, i8* %status, align 1, !dbg !9562
  %49 = load i8, i8* %status, align 1, !dbg !9563
  %conv82 = zext i8 %49 to i32, !dbg !9563
  %and83 = and i32 %conv82, 192, !dbg !9565
  %tobool84 = icmp ne i32 %and83, 0, !dbg !9565
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !9566

if.then85:                                        ; preds = %if.end78
  br label %while.end90, !dbg !9567

if.end86:                                         ; preds = %if.end78
  br label %do.body87, !dbg !9568

do.body87:                                        ; preds = %if.end86
  call void @__const_udelay(i64 4295000) #11, !dbg !9569
  call void @touch_nmi_watchdog() #11, !dbg !9575
  br label %do.end88, !dbg !9575

do.end88:                                         ; preds = %do.body87
  %50 = load i32, i32* %timeout, align 4, !dbg !9576
  %dec89 = add i32 %50, -1, !dbg !9576
  store i32 %dec89, i32* %timeout, align 4, !dbg !9576
  br label %while.cond66, !dbg !9537, !llvm.loop !9577

while.end90:                                      ; preds = %if.then85, %while.cond66
  store i32 1, i32* %retval, align 4, !dbg !9579
  br label %return, !dbg !9579

if.end91:                                         ; preds = %while.end
  %51 = load i8, i8* %status, align 1, !dbg !9580
  %conv92 = zext i8 %51 to i32, !dbg !9580
  %and93 = and i32 %conv92, 8, !dbg !9582
  %tobool94 = icmp ne i32 %and93, 0, !dbg !9582
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !9583

if.then95:                                        ; preds = %if.end91
  store i32 1, i32* %retval, align 4, !dbg !9584
  br label %return, !dbg !9584

if.end96:                                         ; preds = %if.end91
  %52 = load i8, i8* %status, align 1, !dbg !9585
  %conv97 = zext i8 %52 to i32, !dbg !9585
  %and98 = and i32 %conv97, 48, !dbg !9587
  %tobool99 = icmp ne i32 %and98, 0, !dbg !9587
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !9588

if.then100:                                       ; preds = %if.end96
  store i32 1, i32* %retval, align 4, !dbg !9589
  br label %return, !dbg !9589

if.end101:                                        ; preds = %if.end96
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9590
  %mem_ptr102 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 41, !dbg !9591
  %54 = load i8*, i8** %mem_ptr102, align 8, !dbg !9591
  %add.ptr103 = getelementptr i8, i8* %54, i64 28, !dbg !9592
  call void @writeb(i8 zeroext 80, i8* %add.ptr103) #11, !dbg !9593
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9594
  %pcidev104 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 44, !dbg !9596
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pcidev104, align 8, !dbg !9596
  %revision105 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 12, !dbg !9597
  %57 = load i8, i8* %revision105, align 8, !dbg !9597
  %conv106 = zext i8 %57 to i32, !dbg !9594
  %cmp107 = icmp eq i32 %conv106, 16, !dbg !9598
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !9599

if.then109:                                       ; preds = %if.end101
  call void @__const_udelay(i64 107375) #11, !dbg !9600
  br label %if.end110, !dbg !9605

if.end110:                                        ; preds = %if.then109, %if.end101
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9606
  %mem_ptr111 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 41, !dbg !9607
  %59 = load i8*, i8** %mem_ptr111, align 8, !dbg !9607
  %add.ptr112 = getelementptr i8, i8* %59, i64 28, !dbg !9608
  call void @writeb(i8 zeroext -1, i8* %add.ptr112) #11, !dbg !9609
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9610
  %pcidev113 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 44, !dbg !9612
  %61 = load %struct.pci_dev*, %struct.pci_dev** %pcidev113, align 8, !dbg !9612
  %revision114 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %61, i32 0, i32 12, !dbg !9613
  %62 = load i8, i8* %revision114, align 8, !dbg !9613
  %conv115 = zext i8 %62 to i32, !dbg !9610
  %cmp116 = icmp eq i32 %conv115, 16, !dbg !9614
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !9615

if.then118:                                       ; preds = %if.end110
  call void @__const_udelay(i64 107375) #11, !dbg !9616
  br label %if.end119, !dbg !9621

if.end119:                                        ; preds = %if.then118, %if.end110
  store i32 0, i32* %retval, align 4, !dbg !9622
  br label %return, !dbg !9622

return:                                           ; preds = %if.end119, %if.then100, %if.then95, %while.end90
  %63 = load i32, i32* %retval, align 4, !dbg !9623
  ret i32 %63, !dbg !9623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_program_bios_memio(%struct.ips_ha* %ha, i8* %buffer, i32 %buffersize, i32 %offset) #0 !dbg !9624 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %timeout = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  store i32 %buffersize, i32* %buffersize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffersize.addr, metadata !9631, metadata !DIExpression()), !dbg !9632
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9635, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !9637, metadata !DIExpression()), !dbg !9638
  call void @llvm.dbg.declare(metadata i8* %status, metadata !9639, metadata !DIExpression()), !dbg !9640
  store i8 0, i8* %status, align 1, !dbg !9640
  store i8 0, i8* %status, align 1, !dbg !9641
  store i32 0, i32* %i, align 4, !dbg !9642
  br label %for.cond, !dbg !9644

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9645
  %1 = load i32, i32* %buffersize.addr, align 4, !dbg !9647
  %cmp = icmp ult i32 %0, %1, !dbg !9648
  br i1 %cmp, label %for.body, label %for.end, !dbg !9649

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !9650
  %3 = load i32, i32* %offset.addr, align 4, !dbg !9652
  %add = add i32 %2, %3, !dbg !9653
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9654
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 41, !dbg !9655
  %5 = load i8*, i8** %mem_ptr, align 8, !dbg !9655
  %add.ptr = getelementptr i8, i8* %5, i64 24, !dbg !9656
  call void @writel(i32 %add, i8* %add.ptr) #11, !dbg !9657
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9658
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 44, !dbg !9660
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !9660
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 12, !dbg !9661
  %8 = load i8, i8* %revision, align 8, !dbg !9661
  %conv = zext i8 %8 to i32, !dbg !9658
  %cmp1 = icmp eq i32 %conv, 16, !dbg !9662
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9663

if.then:                                          ; preds = %for.body
  call void @__const_udelay(i64 107375) #11, !dbg !9664
  br label %if.end, !dbg !9669

if.end:                                           ; preds = %if.then, %for.body
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9670
  %mem_ptr3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 41, !dbg !9671
  %10 = load i8*, i8** %mem_ptr3, align 8, !dbg !9671
  %add.ptr4 = getelementptr i8, i8* %10, i64 28, !dbg !9672
  call void @writeb(i8 zeroext 64, i8* %add.ptr4) #11, !dbg !9673
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9674
  %pcidev5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 44, !dbg !9676
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pcidev5, align 8, !dbg !9676
  %revision6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 12, !dbg !9677
  %13 = load i8, i8* %revision6, align 8, !dbg !9677
  %conv7 = zext i8 %13 to i32, !dbg !9674
  %cmp8 = icmp eq i32 %conv7, 16, !dbg !9678
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !9679

if.then10:                                        ; preds = %if.end
  call void @__const_udelay(i64 107375) #11, !dbg !9680
  br label %if.end11, !dbg !9685

if.end11:                                         ; preds = %if.then10, %if.end
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !9686
  %15 = load i32, i32* %i, align 4, !dbg !9687
  %idxprom = sext i32 %15 to i64, !dbg !9686
  %arrayidx = getelementptr i8, i8* %14, i64 %idxprom, !dbg !9686
  %16 = load i8, i8* %arrayidx, align 1, !dbg !9686
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9688
  %mem_ptr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 41, !dbg !9689
  %18 = load i8*, i8** %mem_ptr12, align 8, !dbg !9689
  %add.ptr13 = getelementptr i8, i8* %18, i64 28, !dbg !9690
  call void @writeb(i8 zeroext %16, i8* %add.ptr13) #11, !dbg !9691
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9692
  %pcidev14 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 44, !dbg !9694
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pcidev14, align 8, !dbg !9694
  %revision15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 12, !dbg !9695
  %21 = load i8, i8* %revision15, align 8, !dbg !9695
  %conv16 = zext i8 %21 to i32, !dbg !9692
  %cmp17 = icmp eq i32 %conv16, 16, !dbg !9696
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9697

if.then19:                                        ; preds = %if.end11
  call void @__const_udelay(i64 107375) #11, !dbg !9698
  br label %if.end20, !dbg !9703

if.end20:                                         ; preds = %if.then19, %if.end11
  store i32 1000, i32* %timeout, align 4, !dbg !9704
  br label %while.cond, !dbg !9705

while.cond:                                       ; preds = %do.end, %if.end20
  %22 = load i32, i32* %timeout, align 4, !dbg !9706
  %cmp21 = icmp sgt i32 %22, 0, !dbg !9707
  br i1 %cmp21, label %while.body, label %while.end, !dbg !9705

while.body:                                       ; preds = %while.cond
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9708
  %pcidev23 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 44, !dbg !9711
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pcidev23, align 8, !dbg !9711
  %revision24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 12, !dbg !9712
  %25 = load i8, i8* %revision24, align 8, !dbg !9712
  %conv25 = zext i8 %25 to i32, !dbg !9708
  %cmp26 = icmp eq i32 %conv25, 16, !dbg !9713
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !9714

if.then28:                                        ; preds = %while.body
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9715
  %mem_ptr29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 41, !dbg !9717
  %27 = load i8*, i8** %mem_ptr29, align 8, !dbg !9717
  %add.ptr30 = getelementptr i8, i8* %27, i64 24, !dbg !9718
  call void @writel(i32 0, i8* %add.ptr30) #11, !dbg !9719
  call void @__const_udelay(i64 107375) #11, !dbg !9720
  br label %if.end31, !dbg !9725

if.end31:                                         ; preds = %if.then28, %while.body
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9726
  %mem_ptr32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 41, !dbg !9727
  %29 = load i8*, i8** %mem_ptr32, align 8, !dbg !9727
  %add.ptr33 = getelementptr i8, i8* %29, i64 28, !dbg !9728
  %call = call zeroext i8 @readb(i8* %add.ptr33) #11, !dbg !9729
  store i8 %call, i8* %status, align 1, !dbg !9730
  %30 = load i8, i8* %status, align 1, !dbg !9731
  %conv34 = zext i8 %30 to i32, !dbg !9731
  %and = and i32 %conv34, 128, !dbg !9733
  %tobool = icmp ne i32 %and, 0, !dbg !9733
  br i1 %tobool, label %if.then35, label %if.end36, !dbg !9734

if.then35:                                        ; preds = %if.end31
  br label %while.end, !dbg !9735

if.end36:                                         ; preds = %if.end31
  br label %do.body, !dbg !9736

do.body:                                          ; preds = %if.end36
  call void @__const_udelay(i64 4295000) #11, !dbg !9737
  call void @touch_nmi_watchdog() #11, !dbg !9743
  br label %do.end, !dbg !9743

do.end:                                           ; preds = %do.body
  %31 = load i32, i32* %timeout, align 4, !dbg !9744
  %dec = add i32 %31, -1, !dbg !9744
  store i32 %dec, i32* %timeout, align 4, !dbg !9744
  br label %while.cond, !dbg !9705, !llvm.loop !9745

while.end:                                        ; preds = %if.then35, %while.cond
  %32 = load i32, i32* %timeout, align 4, !dbg !9747
  %cmp37 = icmp eq i32 %32, 0, !dbg !9749
  br i1 %cmp37, label %if.then39, label %if.end58, !dbg !9750

if.then39:                                        ; preds = %while.end
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9751
  %mem_ptr40 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 41, !dbg !9753
  %34 = load i8*, i8** %mem_ptr40, align 8, !dbg !9753
  %add.ptr41 = getelementptr i8, i8* %34, i64 24, !dbg !9754
  call void @writel(i32 0, i8* %add.ptr41) #11, !dbg !9755
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9756
  %pcidev42 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 44, !dbg !9758
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pcidev42, align 8, !dbg !9758
  %revision43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 12, !dbg !9759
  %37 = load i8, i8* %revision43, align 8, !dbg !9759
  %conv44 = zext i8 %37 to i32, !dbg !9756
  %cmp45 = icmp eq i32 %conv44, 16, !dbg !9760
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !9761

if.then47:                                        ; preds = %if.then39
  call void @__const_udelay(i64 107375) #11, !dbg !9762
  br label %if.end48, !dbg !9767

if.end48:                                         ; preds = %if.then47, %if.then39
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9768
  %mem_ptr49 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 41, !dbg !9769
  %39 = load i8*, i8** %mem_ptr49, align 8, !dbg !9769
  %add.ptr50 = getelementptr i8, i8* %39, i64 28, !dbg !9770
  call void @writeb(i8 zeroext -1, i8* %add.ptr50) #11, !dbg !9771
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9772
  %pcidev51 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 44, !dbg !9774
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pcidev51, align 8, !dbg !9774
  %revision52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 12, !dbg !9775
  %42 = load i8, i8* %revision52, align 8, !dbg !9775
  %conv53 = zext i8 %42 to i32, !dbg !9772
  %cmp54 = icmp eq i32 %conv53, 16, !dbg !9776
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !9777

if.then56:                                        ; preds = %if.end48
  call void @__const_udelay(i64 107375) #11, !dbg !9778
  br label %if.end57, !dbg !9783

if.end57:                                         ; preds = %if.then56, %if.end48
  store i32 1, i32* %retval, align 4, !dbg !9784
  br label %return, !dbg !9784

if.end58:                                         ; preds = %while.end
  %43 = load i8, i8* %status, align 1, !dbg !9785
  %conv59 = zext i8 %43 to i32, !dbg !9785
  %and60 = and i32 %conv59, 24, !dbg !9787
  %tobool61 = icmp ne i32 %and60, 0, !dbg !9787
  br i1 %tobool61, label %if.then62, label %if.end81, !dbg !9788

if.then62:                                        ; preds = %if.end58
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9789
  %mem_ptr63 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 41, !dbg !9791
  %45 = load i8*, i8** %mem_ptr63, align 8, !dbg !9791
  %add.ptr64 = getelementptr i8, i8* %45, i64 24, !dbg !9792
  call void @writel(i32 0, i8* %add.ptr64) #11, !dbg !9793
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9794
  %pcidev65 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 44, !dbg !9796
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pcidev65, align 8, !dbg !9796
  %revision66 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 12, !dbg !9797
  %48 = load i8, i8* %revision66, align 8, !dbg !9797
  %conv67 = zext i8 %48 to i32, !dbg !9794
  %cmp68 = icmp eq i32 %conv67, 16, !dbg !9798
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !9799

if.then70:                                        ; preds = %if.then62
  call void @__const_udelay(i64 107375) #11, !dbg !9800
  br label %if.end71, !dbg !9805

if.end71:                                         ; preds = %if.then70, %if.then62
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9806
  %mem_ptr72 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 41, !dbg !9807
  %50 = load i8*, i8** %mem_ptr72, align 8, !dbg !9807
  %add.ptr73 = getelementptr i8, i8* %50, i64 28, !dbg !9808
  call void @writeb(i8 zeroext -1, i8* %add.ptr73) #11, !dbg !9809
  %51 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9810
  %pcidev74 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %51, i32 0, i32 44, !dbg !9812
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pcidev74, align 8, !dbg !9812
  %revision75 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 12, !dbg !9813
  %53 = load i8, i8* %revision75, align 8, !dbg !9813
  %conv76 = zext i8 %53 to i32, !dbg !9810
  %cmp77 = icmp eq i32 %conv76, 16, !dbg !9814
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !9815

if.then79:                                        ; preds = %if.end71
  call void @__const_udelay(i64 107375) #11, !dbg !9816
  br label %if.end80, !dbg !9821

if.end80:                                         ; preds = %if.then79, %if.end71
  store i32 1, i32* %retval, align 4, !dbg !9822
  br label %return, !dbg !9822

if.end81:                                         ; preds = %if.end58
  br label %for.inc, !dbg !9823

for.inc:                                          ; preds = %if.end81
  %54 = load i32, i32* %i, align 4, !dbg !9824
  %inc = add i32 %54, 1, !dbg !9824
  store i32 %inc, i32* %i, align 4, !dbg !9824
  br label %for.cond, !dbg !9825, !llvm.loop !9826

for.end:                                          ; preds = %for.cond
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9828
  %mem_ptr82 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 41, !dbg !9829
  %56 = load i8*, i8** %mem_ptr82, align 8, !dbg !9829
  %add.ptr83 = getelementptr i8, i8* %56, i64 24, !dbg !9830
  call void @writel(i32 0, i8* %add.ptr83) #11, !dbg !9831
  %57 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9832
  %pcidev84 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %57, i32 0, i32 44, !dbg !9834
  %58 = load %struct.pci_dev*, %struct.pci_dev** %pcidev84, align 8, !dbg !9834
  %revision85 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 12, !dbg !9835
  %59 = load i8, i8* %revision85, align 8, !dbg !9835
  %conv86 = zext i8 %59 to i32, !dbg !9832
  %cmp87 = icmp eq i32 %conv86, 16, !dbg !9836
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !9837

if.then89:                                        ; preds = %for.end
  call void @__const_udelay(i64 107375) #11, !dbg !9838
  br label %if.end90, !dbg !9843

if.end90:                                         ; preds = %if.then89, %for.end
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9844
  %mem_ptr91 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 41, !dbg !9845
  %61 = load i8*, i8** %mem_ptr91, align 8, !dbg !9845
  %add.ptr92 = getelementptr i8, i8* %61, i64 28, !dbg !9846
  call void @writeb(i8 zeroext -1, i8* %add.ptr92) #11, !dbg !9847
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9848
  %pcidev93 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %62, i32 0, i32 44, !dbg !9850
  %63 = load %struct.pci_dev*, %struct.pci_dev** %pcidev93, align 8, !dbg !9850
  %revision94 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 12, !dbg !9851
  %64 = load i8, i8* %revision94, align 8, !dbg !9851
  %conv95 = zext i8 %64 to i32, !dbg !9848
  %cmp96 = icmp eq i32 %conv95, 16, !dbg !9852
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !9853

if.then98:                                        ; preds = %if.end90
  call void @__const_udelay(i64 107375) #11, !dbg !9854
  br label %if.end99, !dbg !9859

if.end99:                                         ; preds = %if.then98, %if.end90
  store i32 0, i32* %retval, align 4, !dbg !9860
  br label %return, !dbg !9860

return:                                           ; preds = %if.end99, %if.end80, %if.end57
  %65 = load i32, i32* %retval, align 4, !dbg !9861
  ret i32 %65, !dbg !9861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_verify_bios_memio(%struct.ips_ha* %ha, i8* %buffer, i32 %buffersize, i32 %offset) #0 !dbg !9862 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %checksum = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9863, metadata !DIExpression()), !dbg !9864
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9865, metadata !DIExpression()), !dbg !9866
  store i32 %buffersize, i32* %buffersize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffersize.addr, metadata !9867, metadata !DIExpression()), !dbg !9868
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9869, metadata !DIExpression()), !dbg !9870
  call void @llvm.dbg.declare(metadata i8* %checksum, metadata !9871, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9873, metadata !DIExpression()), !dbg !9874
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9875
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !9876
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !9876
  %add.ptr = getelementptr i8, i8* %1, i64 24, !dbg !9877
  call void @writel(i32 0, i8* %add.ptr) #11, !dbg !9878
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9879
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 44, !dbg !9881
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !9881
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !9882
  %4 = load i8, i8* %revision, align 8, !dbg !9882
  %conv = zext i8 %4 to i32, !dbg !9879
  %cmp = icmp eq i32 %conv, 16, !dbg !9883
  br i1 %cmp, label %if.then, label %if.end, !dbg !9884

if.then:                                          ; preds = %entry
  call void @__const_udelay(i64 107375) #11, !dbg !9885
  br label %if.end, !dbg !9890

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9891
  %mem_ptr2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 41, !dbg !9893
  %6 = load i8*, i8** %mem_ptr2, align 8, !dbg !9893
  %add.ptr3 = getelementptr i8, i8* %6, i64 28, !dbg !9894
  %call = call zeroext i8 @readb(i8* %add.ptr3) #11, !dbg !9895
  %conv4 = zext i8 %call to i32, !dbg !9895
  %cmp5 = icmp ne i32 %conv4, 85, !dbg !9896
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !9897

if.then7:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9898
  br label %return, !dbg !9898

if.end8:                                          ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9899
  %mem_ptr9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 41, !dbg !9900
  %8 = load i8*, i8** %mem_ptr9, align 8, !dbg !9900
  %add.ptr10 = getelementptr i8, i8* %8, i64 24, !dbg !9901
  call void @writel(i32 1, i8* %add.ptr10) #11, !dbg !9902
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9903
  %pcidev11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 44, !dbg !9905
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pcidev11, align 8, !dbg !9905
  %revision12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 12, !dbg !9906
  %11 = load i8, i8* %revision12, align 8, !dbg !9906
  %conv13 = zext i8 %11 to i32, !dbg !9903
  %cmp14 = icmp eq i32 %conv13, 16, !dbg !9907
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9908

if.then16:                                        ; preds = %if.end8
  call void @__const_udelay(i64 107375) #11, !dbg !9909
  br label %if.end17, !dbg !9914

if.end17:                                         ; preds = %if.then16, %if.end8
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9915
  %mem_ptr18 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 41, !dbg !9917
  %13 = load i8*, i8** %mem_ptr18, align 8, !dbg !9917
  %add.ptr19 = getelementptr i8, i8* %13, i64 28, !dbg !9918
  %call20 = call zeroext i8 @readb(i8* %add.ptr19) #11, !dbg !9919
  %conv21 = zext i8 %call20 to i32, !dbg !9919
  %cmp22 = icmp ne i32 %conv21, 170, !dbg !9920
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9921

if.then24:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !9922
  br label %return, !dbg !9922

if.end25:                                         ; preds = %if.end17
  store i8 -1, i8* %checksum, align 1, !dbg !9923
  store i32 2, i32* %i, align 4, !dbg !9924
  br label %for.cond, !dbg !9926

for.cond:                                         ; preds = %for.inc, %if.end25
  %14 = load i32, i32* %i, align 4, !dbg !9927
  %15 = load i32, i32* %buffersize.addr, align 4, !dbg !9929
  %cmp26 = icmp ult i32 %14, %15, !dbg !9930
  br i1 %cmp26, label %for.body, label %for.end, !dbg !9931

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !9932
  %17 = load i32, i32* %offset.addr, align 4, !dbg !9934
  %add = add i32 %16, %17, !dbg !9935
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9936
  %mem_ptr28 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 41, !dbg !9937
  %19 = load i8*, i8** %mem_ptr28, align 8, !dbg !9937
  %add.ptr29 = getelementptr i8, i8* %19, i64 24, !dbg !9938
  call void @writel(i32 %add, i8* %add.ptr29) #11, !dbg !9939
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9940
  %pcidev30 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 44, !dbg !9942
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pcidev30, align 8, !dbg !9942
  %revision31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 12, !dbg !9943
  %22 = load i8, i8* %revision31, align 8, !dbg !9943
  %conv32 = zext i8 %22 to i32, !dbg !9940
  %cmp33 = icmp eq i32 %conv32, 16, !dbg !9944
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !9945

if.then35:                                        ; preds = %for.body
  call void @__const_udelay(i64 107375) #11, !dbg !9946
  br label %if.end36, !dbg !9951

if.end36:                                         ; preds = %if.then35, %for.body
  %23 = load i8, i8* %checksum, align 1, !dbg !9952
  %conv37 = zext i8 %23 to i32, !dbg !9953
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9954
  %mem_ptr38 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 41, !dbg !9955
  %25 = load i8*, i8** %mem_ptr38, align 8, !dbg !9955
  %add.ptr39 = getelementptr i8, i8* %25, i64 28, !dbg !9956
  %call40 = call zeroext i8 @readb(i8* %add.ptr39) #11, !dbg !9957
  %conv41 = zext i8 %call40 to i32, !dbg !9957
  %add42 = add i32 %conv37, %conv41, !dbg !9958
  %conv43 = trunc i32 %add42 to i8, !dbg !9953
  store i8 %conv43, i8* %checksum, align 1, !dbg !9959
  br label %for.inc, !dbg !9960

for.inc:                                          ; preds = %if.end36
  %26 = load i32, i32* %i, align 4, !dbg !9961
  %inc = add i32 %26, 1, !dbg !9961
  store i32 %inc, i32* %i, align 4, !dbg !9961
  br label %for.cond, !dbg !9962, !llvm.loop !9963

for.end:                                          ; preds = %for.cond
  %27 = load i8, i8* %checksum, align 1, !dbg !9965
  %conv44 = zext i8 %27 to i32, !dbg !9965
  %cmp45 = icmp ne i32 %conv44, 0, !dbg !9967
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !9968

if.then47:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !9969
  br label %return, !dbg !9969

if.else:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !9970
  br label %return, !dbg !9970

return:                                           ; preds = %if.else, %if.then47, %if.then24, %if.then7
  %28 = load i32, i32* %retval, align 4, !dbg !9971
  ret i32 %28, !dbg !9971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_enable_int_copperhead_memio(%struct.ips_ha* %ha) #0 !dbg !9972 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9975
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 41, !dbg !9976
  %1 = load i8*, i8** %mem_ptr, align 8, !dbg !9976
  %add.ptr = getelementptr i8, i8* %1, i64 8, !dbg !9977
  call void @writeb(i8 zeroext -128, i8* %add.ptr) #11, !dbg !9978
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !9979
  %mem_ptr1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !9980
  %3 = load i8*, i8** %mem_ptr1, align 8, !dbg !9980
  %add.ptr2 = getelementptr i8, i8* %3, i64 8, !dbg !9981
  %call = call zeroext i8 @readb(i8* %add.ptr2) #11, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_issue_copperhead_memio(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !9984 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %TimeOut = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.declare(metadata i32* %TimeOut, metadata !9989, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9991, metadata !DIExpression()), !dbg !9992
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !9993
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 18, !dbg !9995
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !9995
  %tobool = icmp ne %struct.scsi_cmnd* %1, null, !dbg !9993
  br i1 %tobool, label %if.then, label %if.else, !dbg !9996

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !9997

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %TimeOut, align 4, !dbg !9999
  br label %while.cond, !dbg !10000

while.cond:                                       ; preds = %if.end9, %if.end
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10001
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 41, !dbg !10002
  %3 = load i8*, i8** %mem_ptr, align 8, !dbg !10002
  %add.ptr = getelementptr i8, i8* %3, i64 20, !dbg !10003
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !10004
  store i32 %call, i32* %val, align 4, !dbg !10005
  %and = and i32 %call, 8, !dbg !10006
  %tobool1 = icmp ne i32 %and, 0, !dbg !10000
  br i1 %tobool1, label %while.body, label %while.end, !dbg !10000

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !10007
  %4 = load i32, i32* %TimeOut, align 4, !dbg !10013
  %inc = add i32 %4, 1, !dbg !10013
  store i32 %inc, i32* %TimeOut, align 4, !dbg !10013
  %cmp = icmp uge i32 %inc, 2000, !dbg !10015
  br i1 %cmp, label %if.then2, label %if.end9, !dbg !10016

if.then2:                                         ; preds = %while.body
  %5 = load i32, i32* %val, align 4, !dbg !10017
  %and3 = and i32 %5, 2, !dbg !10020
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10020
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10021

if.then5:                                         ; preds = %if.then2
  br label %while.end, !dbg !10022

if.end6:                                          ; preds = %if.then2
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10023
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 44, !dbg !10023
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !10023
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !10023
  %8 = load i32, i32* %val, align 4, !dbg !10023
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i32 %8) #12, !dbg !10023
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10024
  %pcidev7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 44, !dbg !10024
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pcidev7, align 8, !dbg !10024
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !10024
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !10024
  store i32 4, i32* %retval, align 4, !dbg !10025
  br label %return, !dbg !10025

if.end9:                                          ; preds = %while.body
  br label %while.cond, !dbg !10000, !llvm.loop !10026

while.end:                                        ; preds = %if.then5, %while.cond
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !10028
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 6, !dbg !10029
  %12 = load i32, i32* %scb_busaddr, align 4, !dbg !10029
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10030
  %mem_ptr10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 41, !dbg !10031
  %14 = load i8*, i8** %mem_ptr10, align 8, !dbg !10031
  %add.ptr11 = getelementptr i8, i8* %14, i64 16, !dbg !10032
  call void @writel(i32 %12, i8* %add.ptr11) #11, !dbg !10033
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10034
  %mem_ptr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 41, !dbg !10035
  %16 = load i8*, i8** %mem_ptr12, align 8, !dbg !10035
  %add.ptr13 = getelementptr i8, i8* %16, i64 20, !dbg !10036
  call void @writel(i32 4122, i8* %add.ptr13) #11, !dbg !10037
  store i32 1, i32* %retval, align 4, !dbg !10038
  br label %return, !dbg !10038

return:                                           ; preds = %while.end, %if.end6
  %17 = load i32, i32* %retval, align 4, !dbg !10039
  ret i32 %17, !dbg !10039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_isintr_copperhead(%struct.ips_ha* %ha) #0 !dbg !10040 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Isr = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10041, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.declare(metadata i8* %Isr, metadata !10043, metadata !DIExpression()), !dbg !10044
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10045
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 2, !dbg !10046
  %1 = load i32, i32* %io_addr, align 8, !dbg !10046
  %add = add i32 %1, 8, !dbg !10047
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !10048
  store i8 %call, i8* %Isr, align 1, !dbg !10049
  %2 = load i8, i8* %Isr, align 1, !dbg !10050
  %conv = zext i8 %2 to i32, !dbg !10050
  %cmp = icmp eq i32 %conv, 255, !dbg !10052
  br i1 %cmp, label %if.then, label %if.end, !dbg !10053

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10054
  br label %return, !dbg !10054

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %Isr, align 1, !dbg !10055
  %conv2 = zext i8 %3 to i32, !dbg !10055
  %and = and i32 %conv2, 1, !dbg !10057
  %tobool = icmp ne i32 %and, 0, !dbg !10057
  br i1 %tobool, label %if.then3, label %if.else, !dbg !10058

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !10059
  br label %return, !dbg !10059

if.else:                                          ; preds = %if.end
  %4 = load i8, i8* %Isr, align 1, !dbg !10060
  %conv4 = zext i8 %4 to i32, !dbg !10060
  %and5 = and i32 %conv4, 6, !dbg !10062
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10062
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !10063

if.then7:                                         ; preds = %if.else
  %5 = load i8, i8* %Isr, align 1, !dbg !10064
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10066
  %io_addr8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 2, !dbg !10067
  %7 = load i32, i32* %io_addr8, align 8, !dbg !10067
  %add9 = add i32 %7, 8, !dbg !10068
  call void @outb(i8 zeroext %5, i32 %add9) #11, !dbg !10069
  br label %if.end10, !dbg !10070

if.end10:                                         ; preds = %if.then7, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !10071
  br label %return, !dbg !10071

return:                                           ; preds = %if.end11, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10072
  ret i32 %8, !dbg !10072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_isinit_copperhead(%struct.ips_ha* %ha) #0 !dbg !10073 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scpr = alloca i8, align 1
  %isr = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.declare(metadata i8* %scpr, metadata !10076, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.declare(metadata i8* %isr, metadata !10078, metadata !DIExpression()), !dbg !10079
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10080
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 2, !dbg !10081
  %1 = load i32, i32* %io_addr, align 8, !dbg !10081
  %add = add i32 %1, 8, !dbg !10082
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !10083
  store i8 %call, i8* %isr, align 1, !dbg !10084
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10085
  %io_addr1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 2, !dbg !10086
  %3 = load i32, i32* %io_addr1, align 8, !dbg !10086
  %add2 = add i32 %3, 5, !dbg !10087
  %call3 = call zeroext i8 @inb(i32 %add2) #11, !dbg !10088
  store i8 %call3, i8* %scpr, align 1, !dbg !10089
  %4 = load i8, i8* %isr, align 1, !dbg !10090
  %conv = zext i8 %4 to i32, !dbg !10090
  %and = and i32 %conv, 128, !dbg !10092
  %cmp = icmp eq i32 %and, 0, !dbg !10093
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10094

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %scpr, align 1, !dbg !10095
  %conv5 = zext i8 %5 to i32, !dbg !10095
  %and6 = and i32 %conv5, 2, !dbg !10096
  %cmp7 = icmp eq i32 %and6, 0, !dbg !10097
  br i1 %cmp7, label %if.then, label %if.else, !dbg !10098

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !10099
  br label %return, !dbg !10099

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !10100
  br label %return, !dbg !10100

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10101
  ret i32 %6, !dbg !10101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_init_copperhead(%struct.ips_ha* %ha) #0 !dbg !10102 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %Isr = alloca i8, align 1
  %Cbsp = alloca i8, align 1
  %PostByte = alloca [2 x i8], align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %__ms = alloca i64, align 8
  %__ms44 = alloca i64, align 8
  %__ms80 = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10103, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.declare(metadata i8* %Isr, metadata !10105, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.declare(metadata i8* %Cbsp, metadata !10107, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.declare(metadata [2 x i8]* %PostByte, metadata !10109, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10111, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10113, metadata !DIExpression()), !dbg !10114
  store i32 0, i32* %i, align 4, !dbg !10115
  br label %for.cond, !dbg !10117

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10118
  %cmp = icmp slt i32 %0, 2, !dbg !10120
  br i1 %cmp, label %for.body, label %for.end16, !dbg !10121

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10122
  br label %for.cond1, !dbg !10125

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4, !dbg !10126
  %cmp2 = icmp slt i32 %1, 45, !dbg !10128
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !10129

for.body3:                                        ; preds = %for.cond1
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10130
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 2, !dbg !10132
  %3 = load i32, i32* %io_addr, align 8, !dbg !10132
  %add = add i32 %3, 8, !dbg !10133
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !10134
  store i8 %call, i8* %Isr, align 1, !dbg !10135
  %4 = load i8, i8* %Isr, align 1, !dbg !10136
  %conv = zext i8 %4 to i32, !dbg !10136
  %and = and i32 %conv, 4, !dbg !10138
  %tobool = icmp ne i32 %and, 0, !dbg !10138
  br i1 %tobool, label %if.then, label %if.end, !dbg !10139

if.then:                                          ; preds = %for.body3
  br label %for.end, !dbg !10140

if.end:                                           ; preds = %for.body3
  br label %do.body, !dbg !10141

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !10142, metadata !DIExpression()), !dbg !10145
  store i64 1000, i64* %__ms, align 8, !dbg !10145
  br label %while.cond, !dbg !10145

while.cond:                                       ; preds = %while.body, %do.body
  %5 = load i64, i64* %__ms, align 8, !dbg !10145
  %dec = add i64 %5, -1, !dbg !10145
  store i64 %dec, i64* %__ms, align 8, !dbg !10145
  %tobool4 = icmp ne i64 %5, 0, !dbg !10145
  br i1 %tobool4, label %while.body, label %while.end, !dbg !10145

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !10146
  br label %while.cond, !dbg !10145, !llvm.loop !10151

while.end:                                        ; preds = %while.cond
  call void @touch_nmi_watchdog() #11, !dbg !10152
  br label %do.end, !dbg !10152

do.end:                                           ; preds = %while.end
  br label %for.inc, !dbg !10153

for.inc:                                          ; preds = %do.end
  %6 = load i32, i32* %j, align 4, !dbg !10154
  %inc = add i32 %6, 1, !dbg !10154
  store i32 %inc, i32* %j, align 4, !dbg !10154
  br label %for.cond1, !dbg !10155, !llvm.loop !10156

for.end:                                          ; preds = %if.then, %for.cond1
  %7 = load i32, i32* %j, align 4, !dbg !10158
  %cmp5 = icmp sge i32 %7, 45, !dbg !10160
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !10161

if.then7:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10162
  br label %return, !dbg !10162

if.end8:                                          ; preds = %for.end
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10163
  %io_addr9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 2, !dbg !10164
  %9 = load i32, i32* %io_addr9, align 8, !dbg !10164
  %add10 = add i32 %9, 6, !dbg !10165
  %call11 = call zeroext i8 @inb(i32 %add10) #11, !dbg !10166
  %10 = load i32, i32* %i, align 4, !dbg !10167
  %idxprom = sext i32 %10 to i64, !dbg !10168
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 %idxprom, !dbg !10168
  store i8 %call11, i8* %arrayidx, align 1, !dbg !10169
  %11 = load i8, i8* %Isr, align 1, !dbg !10170
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10171
  %io_addr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 2, !dbg !10172
  %13 = load i32, i32* %io_addr12, align 8, !dbg !10172
  %add13 = add i32 %13, 8, !dbg !10173
  call void @outb(i8 zeroext %11, i32 %add13) #11, !dbg !10174
  br label %for.inc14, !dbg !10175

for.inc14:                                        ; preds = %if.end8
  %14 = load i32, i32* %i, align 4, !dbg !10176
  %inc15 = add i32 %14, 1, !dbg !10176
  store i32 %inc15, i32* %i, align 4, !dbg !10176
  br label %for.cond, !dbg !10177, !llvm.loop !10178

for.end16:                                        ; preds = %for.cond
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 0, !dbg !10180
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !10180
  %conv18 = zext i8 %15 to i32, !dbg !10180
  %cmp19 = icmp slt i32 %conv18, 128, !dbg !10182
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !10183

if.then21:                                        ; preds = %for.end16
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10184
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 44, !dbg !10184
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !10184
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !10184
  %arrayidx22 = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 0, !dbg !10184
  %18 = load i8, i8* %arrayidx22, align 1, !dbg !10184
  %conv23 = zext i8 %18 to i32, !dbg !10184
  %arrayidx24 = getelementptr [2 x i8], [2 x i8]* %PostByte, i64 0, i64 1, !dbg !10184
  %19 = load i8, i8* %arrayidx24, align 1, !dbg !10184
  %conv25 = zext i8 %19 to i32, !dbg !10184
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i32 %conv23, i32 %conv25) #12, !dbg !10184
  store i32 0, i32* %retval, align 4, !dbg !10186
  br label %return, !dbg !10186

if.end26:                                         ; preds = %for.end16
  store i32 0, i32* %i, align 4, !dbg !10187
  br label %for.cond27, !dbg !10189

for.cond27:                                       ; preds = %for.inc63, %if.end26
  %20 = load i32, i32* %i, align 4, !dbg !10190
  %cmp28 = icmp slt i32 %20, 2, !dbg !10192
  br i1 %cmp28, label %for.body30, label %for.end65, !dbg !10193

for.body30:                                       ; preds = %for.cond27
  store i32 0, i32* %j, align 4, !dbg !10194
  br label %for.cond31, !dbg !10197

for.cond31:                                       ; preds = %for.inc51, %for.body30
  %21 = load i32, i32* %j, align 4, !dbg !10198
  %cmp32 = icmp slt i32 %21, 240, !dbg !10200
  br i1 %cmp32, label %for.body34, label %for.end53, !dbg !10201

for.body34:                                       ; preds = %for.cond31
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10202
  %io_addr35 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 2, !dbg !10204
  %23 = load i32, i32* %io_addr35, align 8, !dbg !10204
  %add36 = add i32 %23, 8, !dbg !10205
  %call37 = call zeroext i8 @inb(i32 %add36) #11, !dbg !10206
  store i8 %call37, i8* %Isr, align 1, !dbg !10207
  %24 = load i8, i8* %Isr, align 1, !dbg !10208
  %conv38 = zext i8 %24 to i32, !dbg !10208
  %and39 = and i32 %conv38, 4, !dbg !10210
  %tobool40 = icmp ne i32 %and39, 0, !dbg !10210
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !10211

if.then41:                                        ; preds = %for.body34
  br label %for.end53, !dbg !10212

if.end42:                                         ; preds = %for.body34
  br label %do.body43, !dbg !10213

do.body43:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i64* %__ms44, metadata !10214, metadata !DIExpression()), !dbg !10217
  store i64 1000, i64* %__ms44, align 8, !dbg !10217
  br label %while.cond45, !dbg !10217

while.cond45:                                     ; preds = %while.body48, %do.body43
  %25 = load i64, i64* %__ms44, align 8, !dbg !10217
  %dec46 = add i64 %25, -1, !dbg !10217
  store i64 %dec46, i64* %__ms44, align 8, !dbg !10217
  %tobool47 = icmp ne i64 %25, 0, !dbg !10217
  br i1 %tobool47, label %while.body48, label %while.end49, !dbg !10217

while.body48:                                     ; preds = %while.cond45
  call void @__const_udelay(i64 4295000) #11, !dbg !10218
  br label %while.cond45, !dbg !10217, !llvm.loop !10223

while.end49:                                      ; preds = %while.cond45
  call void @touch_nmi_watchdog() #11, !dbg !10224
  br label %do.end50, !dbg !10224

do.end50:                                         ; preds = %while.end49
  br label %for.inc51, !dbg !10225

for.inc51:                                        ; preds = %do.end50
  %26 = load i32, i32* %j, align 4, !dbg !10226
  %inc52 = add i32 %26, 1, !dbg !10226
  store i32 %inc52, i32* %j, align 4, !dbg !10226
  br label %for.cond31, !dbg !10227, !llvm.loop !10228

for.end53:                                        ; preds = %if.then41, %for.cond31
  %27 = load i32, i32* %j, align 4, !dbg !10230
  %cmp54 = icmp sge i32 %27, 240, !dbg !10232
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !10233

if.then56:                                        ; preds = %for.end53
  store i32 0, i32* %retval, align 4, !dbg !10234
  br label %return, !dbg !10234

if.end57:                                         ; preds = %for.end53
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10235
  %io_addr58 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 2, !dbg !10236
  %29 = load i32, i32* %io_addr58, align 8, !dbg !10236
  %add59 = add i32 %29, 6, !dbg !10237
  %call60 = call zeroext i8 @inb(i32 %add59) #11, !dbg !10238
  %30 = load i8, i8* %Isr, align 1, !dbg !10239
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10240
  %io_addr61 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 2, !dbg !10241
  %32 = load i32, i32* %io_addr61, align 8, !dbg !10241
  %add62 = add i32 %32, 8, !dbg !10242
  call void @outb(i8 zeroext %30, i32 %add62) #11, !dbg !10243
  br label %for.inc63, !dbg !10244

for.inc63:                                        ; preds = %if.end57
  %33 = load i32, i32* %i, align 4, !dbg !10245
  %inc64 = add i32 %33, 1, !dbg !10245
  store i32 %inc64, i32* %i, align 4, !dbg !10245
  br label %for.cond27, !dbg !10246, !llvm.loop !10247

for.end65:                                        ; preds = %for.cond27
  store i32 0, i32* %i, align 4, !dbg !10249
  br label %for.cond66, !dbg !10251

for.cond66:                                       ; preds = %for.inc87, %for.end65
  %34 = load i32, i32* %i, align 4, !dbg !10252
  %cmp67 = icmp slt i32 %34, 240, !dbg !10254
  br i1 %cmp67, label %for.body69, label %for.end89, !dbg !10255

for.body69:                                       ; preds = %for.cond66
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10256
  %io_addr70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 2, !dbg !10258
  %36 = load i32, i32* %io_addr70, align 8, !dbg !10258
  %add71 = add i32 %36, 7, !dbg !10259
  %call72 = call zeroext i8 @inb(i32 %add71) #11, !dbg !10260
  store i8 %call72, i8* %Cbsp, align 1, !dbg !10261
  %37 = load i8, i8* %Cbsp, align 1, !dbg !10262
  %conv73 = zext i8 %37 to i32, !dbg !10262
  %and74 = and i32 %conv73, 1, !dbg !10264
  %cmp75 = icmp eq i32 %and74, 0, !dbg !10265
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !10266

if.then77:                                        ; preds = %for.body69
  br label %for.end89, !dbg !10267

if.end78:                                         ; preds = %for.body69
  br label %do.body79, !dbg !10268

do.body79:                                        ; preds = %if.end78
  call void @llvm.dbg.declare(metadata i64* %__ms80, metadata !10269, metadata !DIExpression()), !dbg !10272
  store i64 1000, i64* %__ms80, align 8, !dbg !10272
  br label %while.cond81, !dbg !10272

while.cond81:                                     ; preds = %while.body84, %do.body79
  %38 = load i64, i64* %__ms80, align 8, !dbg !10272
  %dec82 = add i64 %38, -1, !dbg !10272
  store i64 %dec82, i64* %__ms80, align 8, !dbg !10272
  %tobool83 = icmp ne i64 %38, 0, !dbg !10272
  br i1 %tobool83, label %while.body84, label %while.end85, !dbg !10272

while.body84:                                     ; preds = %while.cond81
  call void @__const_udelay(i64 4295000) #11, !dbg !10273
  br label %while.cond81, !dbg !10272, !llvm.loop !10278

while.end85:                                      ; preds = %while.cond81
  call void @touch_nmi_watchdog() #11, !dbg !10279
  br label %do.end86, !dbg !10279

do.end86:                                         ; preds = %while.end85
  br label %for.inc87, !dbg !10280

for.inc87:                                        ; preds = %do.end86
  %39 = load i32, i32* %i, align 4, !dbg !10281
  %inc88 = add i32 %39, 1, !dbg !10281
  store i32 %inc88, i32* %i, align 4, !dbg !10281
  br label %for.cond66, !dbg !10282, !llvm.loop !10283

for.end89:                                        ; preds = %if.then77, %for.cond66
  %40 = load i32, i32* %i, align 4, !dbg !10285
  %cmp90 = icmp sge i32 %40, 240, !dbg !10287
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !10288

if.then92:                                        ; preds = %for.end89
  store i32 0, i32* %retval, align 4, !dbg !10289
  br label %return, !dbg !10289

if.end93:                                         ; preds = %for.end89
  %41 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10290
  %io_addr94 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %41, i32 0, i32 2, !dbg !10291
  %42 = load i32, i32* %io_addr94, align 8, !dbg !10291
  %add95 = add i32 %42, 20, !dbg !10292
  call void @outl(i32 4112, i32 %add95) #11, !dbg !10293
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10294
  %io_addr96 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 2, !dbg !10295
  %44 = load i32, i32* %io_addr96, align 8, !dbg !10295
  %add97 = add i32 %44, 5, !dbg !10296
  call void @outb(i8 zeroext 2, i32 %add97) #11, !dbg !10297
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10298
  %pcidev98 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 44, !dbg !10300
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pcidev98, align 8, !dbg !10300
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 12, !dbg !10301
  %47 = load i8, i8* %revision, align 8, !dbg !10301
  %conv99 = zext i8 %47 to i32, !dbg !10298
  %cmp100 = icmp eq i32 %conv99, 16, !dbg !10302
  br i1 %cmp100, label %if.then102, label %if.end105, !dbg !10303

if.then102:                                       ; preds = %if.end93
  %48 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10304
  %io_addr103 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %48, i32 0, i32 2, !dbg !10305
  %49 = load i32, i32* %io_addr103, align 8, !dbg !10305
  %add104 = add i32 %49, 56, !dbg !10306
  call void @outl(i32 0, i32 %add104) #11, !dbg !10307
  br label %if.end105, !dbg !10307

if.end105:                                        ; preds = %if.then102, %if.end93
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10308
  %io_addr106 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 2, !dbg !10309
  %51 = load i32, i32* %io_addr106, align 8, !dbg !10309
  %add107 = add i32 %51, 8, !dbg !10310
  call void @outb(i8 zeroext -128, i32 %add107) #11, !dbg !10311
  store i32 1, i32* %retval, align 4, !dbg !10312
  br label %return, !dbg !10312

return:                                           ; preds = %if.end105, %if.then92, %if.then56, %if.then21, %if.then7
  %52 = load i32, i32* %retval, align 4, !dbg !10313
  ret i32 %52, !dbg !10313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_statupd_copperhead(%struct.ips_ha* %ha) #0 !dbg !10314 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10315, metadata !DIExpression()), !dbg !10316
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10317
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 18, !dbg !10319
  %1 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !10319
  %p_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %1, i32 0, i32 3, !dbg !10320
  %2 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_tail, align 8, !dbg !10320
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10321
  %adapt1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 18, !dbg !10322
  %4 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt1, align 8, !dbg !10322
  %p_status_end = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %4, i32 0, i32 2, !dbg !10323
  %5 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_end, align 8, !dbg !10323
  %cmp = icmp ne %union.IPS_STATUS* %2, %5, !dbg !10324
  br i1 %cmp, label %if.then, label %if.else, !dbg !10325

if.then:                                          ; preds = %entry
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10326
  %adapt2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 18, !dbg !10328
  %7 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt2, align 8, !dbg !10328
  %p_status_tail3 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %7, i32 0, i32 3, !dbg !10329
  %8 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_tail3, align 8, !dbg !10330
  %incdec.ptr = getelementptr %union.IPS_STATUS, %union.IPS_STATUS* %8, i32 1, !dbg !10330
  store volatile %union.IPS_STATUS* %incdec.ptr, %union.IPS_STATUS** %p_status_tail3, align 8, !dbg !10330
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10331
  %adapt4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 18, !dbg !10332
  %10 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt4, align 8, !dbg !10332
  %hw_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %10, i32 0, i32 5, !dbg !10333
  %11 = load volatile i32, i32* %hw_status_tail, align 4, !dbg !10334
  %conv = zext i32 %11 to i64, !dbg !10334
  %add = add i64 %conv, 4, !dbg !10334
  %conv5 = trunc i64 %add to i32, !dbg !10334
  store volatile i32 %conv5, i32* %hw_status_tail, align 4, !dbg !10334
  br label %if.end, !dbg !10335

if.else:                                          ; preds = %entry
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10336
  %adapt6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 18, !dbg !10338
  %13 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt6, align 8, !dbg !10338
  %p_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %13, i32 0, i32 1, !dbg !10339
  %14 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_start, align 8, !dbg !10339
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10340
  %adapt7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 18, !dbg !10341
  %16 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt7, align 8, !dbg !10341
  %p_status_tail8 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %16, i32 0, i32 3, !dbg !10342
  store volatile %union.IPS_STATUS* %14, %union.IPS_STATUS** %p_status_tail8, align 8, !dbg !10343
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10344
  %adapt9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 18, !dbg !10345
  %18 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt9, align 8, !dbg !10345
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %18, i32 0, i32 4, !dbg !10346
  %19 = load volatile i32, i32* %hw_status_start, align 8, !dbg !10346
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10347
  %adapt10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 18, !dbg !10348
  %21 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt10, align 8, !dbg !10348
  %hw_status_tail11 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %21, i32 0, i32 5, !dbg !10349
  store volatile i32 %19, i32* %hw_status_tail11, align 4, !dbg !10350
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10351
  %adapt12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 18, !dbg !10352
  %23 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt12, align 8, !dbg !10352
  %hw_status_tail13 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %23, i32 0, i32 5, !dbg !10353
  %24 = load volatile i32, i32* %hw_status_tail13, align 4, !dbg !10353
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10354
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 2, !dbg !10355
  %26 = load i32, i32* %io_addr, align 8, !dbg !10355
  %add14 = add i32 %26, 36, !dbg !10356
  call void @outl(i32 %24, i32 %add14) #11, !dbg !10357
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10358
  %adapt15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 18, !dbg !10359
  %28 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt15, align 8, !dbg !10359
  %p_status_tail16 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %28, i32 0, i32 3, !dbg !10360
  %29 = load volatile %union.IPS_STATUS*, %union.IPS_STATUS** %p_status_tail16, align 8, !dbg !10360
  %value = bitcast %union.IPS_STATUS* %29 to i32*, !dbg !10361
  %30 = load volatile i32, i32* %value, align 4, !dbg !10361
  ret i32 %30, !dbg !10362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_statinit(%struct.ips_ha* %ha) #0 !dbg !10363 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %phys_status_start = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.declare(metadata i32* %phys_status_start, metadata !10366, metadata !DIExpression()), !dbg !10367
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10368
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 18, !dbg !10369
  %1 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !10369
  %status = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %1, i32 0, i32 0, !dbg !10370
  %arraydecay = getelementptr inbounds [129 x %union.IPS_STATUS], [129 x %union.IPS_STATUS]* %status, i64 0, i64 0, !dbg !10368
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10371
  %adapt1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 18, !dbg !10372
  %3 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt1, align 8, !dbg !10372
  %p_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %3, i32 0, i32 1, !dbg !10373
  store volatile %union.IPS_STATUS* %arraydecay, %union.IPS_STATUS** %p_status_start, align 8, !dbg !10374
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10375
  %adapt2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 18, !dbg !10376
  %5 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt2, align 8, !dbg !10376
  %status3 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %5, i32 0, i32 0, !dbg !10377
  %arraydecay4 = getelementptr inbounds [129 x %union.IPS_STATUS], [129 x %union.IPS_STATUS]* %status3, i64 0, i64 0, !dbg !10375
  %add.ptr = getelementptr %union.IPS_STATUS, %union.IPS_STATUS* %arraydecay4, i64 128, !dbg !10378
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10379
  %adapt5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 18, !dbg !10380
  %7 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt5, align 8, !dbg !10380
  %p_status_end = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %7, i32 0, i32 2, !dbg !10381
  store volatile %union.IPS_STATUS* %add.ptr, %union.IPS_STATUS** %p_status_end, align 8, !dbg !10382
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10383
  %adapt6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 18, !dbg !10384
  %9 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt6, align 8, !dbg !10384
  %status7 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %9, i32 0, i32 0, !dbg !10385
  %arraydecay8 = getelementptr inbounds [129 x %union.IPS_STATUS], [129 x %union.IPS_STATUS]* %status7, i64 0, i64 0, !dbg !10383
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10386
  %adapt9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 18, !dbg !10387
  %11 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt9, align 8, !dbg !10387
  %p_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %11, i32 0, i32 3, !dbg !10388
  store volatile %union.IPS_STATUS* %arraydecay8, %union.IPS_STATUS** %p_status_tail, align 8, !dbg !10389
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10390
  %adapt10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 18, !dbg !10391
  %13 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt10, align 8, !dbg !10391
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %13, i32 0, i32 4, !dbg !10392
  %14 = load volatile i32, i32* %hw_status_start, align 8, !dbg !10392
  store i32 %14, i32* %phys_status_start, align 4, !dbg !10393
  %15 = load i32, i32* %phys_status_start, align 4, !dbg !10394
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10395
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 2, !dbg !10396
  %17 = load i32, i32* %io_addr, align 8, !dbg !10396
  %add = add i32 %17, 44, !dbg !10397
  call void @outl(i32 %15, i32 %add) #11, !dbg !10398
  %18 = load i32, i32* %phys_status_start, align 4, !dbg !10399
  %add11 = add i32 %18, 516, !dbg !10400
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10401
  %io_addr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 2, !dbg !10402
  %20 = load i32, i32* %io_addr12, align 8, !dbg !10402
  %add13 = add i32 %20, 40, !dbg !10403
  call void @outl(i32 %add11, i32 %add13) #11, !dbg !10404
  %21 = load i32, i32* %phys_status_start, align 4, !dbg !10405
  %add14 = add i32 %21, 4, !dbg !10406
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10407
  %io_addr15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 2, !dbg !10408
  %23 = load i32, i32* %io_addr15, align 8, !dbg !10408
  %add16 = add i32 %23, 32, !dbg !10409
  call void @outl(i32 %add14, i32 %add16) #11, !dbg !10410
  %24 = load i32, i32* %phys_status_start, align 4, !dbg !10411
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10412
  %io_addr17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 2, !dbg !10413
  %26 = load i32, i32* %io_addr17, align 8, !dbg !10413
  %add18 = add i32 %26, 36, !dbg !10414
  call void @outl(i32 %24, i32 %add18) #11, !dbg !10415
  %27 = load i32, i32* %phys_status_start, align 4, !dbg !10416
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10417
  %adapt19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 18, !dbg !10418
  %29 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt19, align 8, !dbg !10418
  %hw_status_tail = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %29, i32 0, i32 5, !dbg !10419
  store volatile i32 %27, i32* %hw_status_tail, align 4, !dbg !10420
  ret void, !dbg !10421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_reset_copperhead(%struct.ips_ha* %ha) #0 !dbg !10422 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %reset_counter = alloca i32, align 4
  %__ms = alloca i64, align 8
  %__ms6 = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.declare(metadata i32* %reset_counter, metadata !10425, metadata !DIExpression()), !dbg !10426
  store i32 0, i32* %reset_counter, align 4, !dbg !10427
  br label %while.cond, !dbg !10428

while.cond:                                       ; preds = %if.end16, %entry
  %0 = load i32, i32* %reset_counter, align 4, !dbg !10429
  %cmp = icmp slt i32 %0, 2, !dbg !10430
  br i1 %cmp, label %while.body, label %while.end17, !dbg !10428

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %reset_counter, align 4, !dbg !10431
  %inc = add i32 %1, 1, !dbg !10431
  store i32 %inc, i32* %reset_counter, align 4, !dbg !10431
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10433
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 2, !dbg !10434
  %3 = load i32, i32* %io_addr, align 8, !dbg !10434
  %add = add i32 %3, 5, !dbg !10435
  call void @outb(i8 zeroext -128, i32 %add) #11, !dbg !10436
  br label %do.body, !dbg !10437

do.body:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !10438, metadata !DIExpression()), !dbg !10441
  store i64 1000, i64* %__ms, align 8, !dbg !10441
  br label %while.cond1, !dbg !10441

while.cond1:                                      ; preds = %while.body2, %do.body
  %4 = load i64, i64* %__ms, align 8, !dbg !10441
  %dec = add i64 %4, -1, !dbg !10441
  store i64 %dec, i64* %__ms, align 8, !dbg !10441
  %tobool = icmp ne i64 %4, 0, !dbg !10441
  br i1 %tobool, label %while.body2, label %while.end, !dbg !10441

while.body2:                                      ; preds = %while.cond1
  call void @__const_udelay(i64 4295000) #11, !dbg !10442
  br label %while.cond1, !dbg !10441, !llvm.loop !10447

while.end:                                        ; preds = %while.cond1
  call void @touch_nmi_watchdog() #11, !dbg !10448
  br label %do.end, !dbg !10448

do.end:                                           ; preds = %while.end
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10449
  %io_addr3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 2, !dbg !10450
  %6 = load i32, i32* %io_addr3, align 8, !dbg !10450
  %add4 = add i32 %6, 5, !dbg !10451
  call void @outb(i8 zeroext 0, i32 %add4) #11, !dbg !10452
  br label %do.body5, !dbg !10453

do.body5:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i64* %__ms6, metadata !10454, metadata !DIExpression()), !dbg !10457
  store i64 1000, i64* %__ms6, align 8, !dbg !10457
  br label %while.cond7, !dbg !10457

while.cond7:                                      ; preds = %while.body10, %do.body5
  %7 = load i64, i64* %__ms6, align 8, !dbg !10457
  %dec8 = add i64 %7, -1, !dbg !10457
  store i64 %dec8, i64* %__ms6, align 8, !dbg !10457
  %tobool9 = icmp ne i64 %7, 0, !dbg !10457
  br i1 %tobool9, label %while.body10, label %while.end11, !dbg !10457

while.body10:                                     ; preds = %while.cond7
  call void @__const_udelay(i64 4295000) #11, !dbg !10458
  br label %while.cond7, !dbg !10457, !llvm.loop !10463

while.end11:                                      ; preds = %while.cond7
  call void @touch_nmi_watchdog() #11, !dbg !10464
  br label %do.end12, !dbg !10464

do.end12:                                         ; preds = %while.end11
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10465
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !10467
  %init = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 4, !dbg !10468
  %9 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %init, align 8, !dbg !10468
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10469
  %call = call i32 %9(%struct.ips_ha* %10) #11, !dbg !10470
  %tobool13 = icmp ne i32 %call, 0, !dbg !10470
  br i1 %tobool13, label %if.then, label %if.else, !dbg !10471

if.then:                                          ; preds = %do.end12
  br label %while.end17, !dbg !10472

if.else:                                          ; preds = %do.end12
  %11 = load i32, i32* %reset_counter, align 4, !dbg !10473
  %cmp14 = icmp sge i32 %11, 2, !dbg !10475
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !10476

if.then15:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !10477
  br label %return, !dbg !10477

if.end:                                           ; preds = %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end
  br label %while.cond, !dbg !10428, !llvm.loop !10479

while.end17:                                      ; preds = %if.then, %while.cond
  store i32 1, i32* %retval, align 4, !dbg !10481
  br label %return, !dbg !10481

return:                                           ; preds = %while.end17, %if.then15
  %12 = load i32, i32* %retval, align 4, !dbg !10482
  ret i32 %12, !dbg !10482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_erase_bios(%struct.ips_ha* %ha) #0 !dbg !10483 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %timeout = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !10486, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata i8* %status, metadata !10488, metadata !DIExpression()), !dbg !10489
  store i8 0, i8* %status, align 1, !dbg !10489
  store i8 0, i8* %status, align 1, !dbg !10490
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10491
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 2, !dbg !10492
  %1 = load i32, i32* %io_addr, align 8, !dbg !10492
  %add = add i32 %1, 24, !dbg !10493
  call void @outl(i32 0, i32 %add) #11, !dbg !10494
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10495
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 44, !dbg !10497
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !10497
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !10498
  %4 = load i8, i8* %revision, align 8, !dbg !10498
  %conv = zext i8 %4 to i32, !dbg !10495
  %cmp = icmp eq i32 %conv, 16, !dbg !10499
  br i1 %cmp, label %if.then, label %if.end, !dbg !10500

if.then:                                          ; preds = %entry
  call void @__const_udelay(i64 107375) #11, !dbg !10501
  br label %if.end, !dbg !10506

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10507
  %io_addr2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 2, !dbg !10508
  %6 = load i32, i32* %io_addr2, align 8, !dbg !10508
  %add3 = add i32 %6, 28, !dbg !10509
  call void @outb(i8 zeroext 80, i32 %add3) #11, !dbg !10510
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10511
  %pcidev4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 44, !dbg !10513
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pcidev4, align 8, !dbg !10513
  %revision5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 12, !dbg !10514
  %9 = load i8, i8* %revision5, align 8, !dbg !10514
  %conv6 = zext i8 %9 to i32, !dbg !10511
  %cmp7 = icmp eq i32 %conv6, 16, !dbg !10515
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10516

if.then9:                                         ; preds = %if.end
  call void @__const_udelay(i64 107375) #11, !dbg !10517
  br label %if.end10, !dbg !10522

if.end10:                                         ; preds = %if.then9, %if.end
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10523
  %io_addr11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 2, !dbg !10524
  %11 = load i32, i32* %io_addr11, align 8, !dbg !10524
  %add12 = add i32 %11, 28, !dbg !10525
  call void @outb(i8 zeroext 32, i32 %add12) #11, !dbg !10526
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10527
  %pcidev13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 44, !dbg !10529
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pcidev13, align 8, !dbg !10529
  %revision14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 12, !dbg !10530
  %14 = load i8, i8* %revision14, align 8, !dbg !10530
  %conv15 = zext i8 %14 to i32, !dbg !10527
  %cmp16 = icmp eq i32 %conv15, 16, !dbg !10531
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !10532

if.then18:                                        ; preds = %if.end10
  call void @__const_udelay(i64 107375) #11, !dbg !10533
  br label %if.end19, !dbg !10538

if.end19:                                         ; preds = %if.then18, %if.end10
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10539
  %io_addr20 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 2, !dbg !10540
  %16 = load i32, i32* %io_addr20, align 8, !dbg !10540
  %add21 = add i32 %16, 28, !dbg !10541
  call void @outb(i8 zeroext -48, i32 %add21) #11, !dbg !10542
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10543
  %pcidev22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 44, !dbg !10545
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pcidev22, align 8, !dbg !10545
  %revision23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 12, !dbg !10546
  %19 = load i8, i8* %revision23, align 8, !dbg !10546
  %conv24 = zext i8 %19 to i32, !dbg !10543
  %cmp25 = icmp eq i32 %conv24, 16, !dbg !10547
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !10548

if.then27:                                        ; preds = %if.end19
  call void @__const_udelay(i64 107375) #11, !dbg !10549
  br label %if.end28, !dbg !10554

if.end28:                                         ; preds = %if.then27, %if.end19
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10555
  %io_addr29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 2, !dbg !10556
  %21 = load i32, i32* %io_addr29, align 8, !dbg !10556
  %add30 = add i32 %21, 28, !dbg !10557
  call void @outb(i8 zeroext 112, i32 %add30) #11, !dbg !10558
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10559
  %pcidev31 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 44, !dbg !10561
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pcidev31, align 8, !dbg !10561
  %revision32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 12, !dbg !10562
  %24 = load i8, i8* %revision32, align 8, !dbg !10562
  %conv33 = zext i8 %24 to i32, !dbg !10559
  %cmp34 = icmp eq i32 %conv33, 16, !dbg !10563
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !10564

if.then36:                                        ; preds = %if.end28
  call void @__const_udelay(i64 107375) #11, !dbg !10565
  br label %if.end37, !dbg !10570

if.end37:                                         ; preds = %if.then36, %if.end28
  store i32 80000, i32* %timeout, align 4, !dbg !10571
  br label %while.cond, !dbg !10572

while.cond:                                       ; preds = %do.end, %if.end37
  %25 = load i32, i32* %timeout, align 4, !dbg !10573
  %cmp38 = icmp sgt i32 %25, 0, !dbg !10574
  br i1 %cmp38, label %while.body, label %while.end, !dbg !10572

while.body:                                       ; preds = %while.cond
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10575
  %pcidev40 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 44, !dbg !10578
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pcidev40, align 8, !dbg !10578
  %revision41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 12, !dbg !10579
  %28 = load i8, i8* %revision41, align 8, !dbg !10579
  %conv42 = zext i8 %28 to i32, !dbg !10575
  %cmp43 = icmp eq i32 %conv42, 16, !dbg !10580
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !10581

if.then45:                                        ; preds = %while.body
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10582
  %io_addr46 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %29, i32 0, i32 2, !dbg !10584
  %30 = load i32, i32* %io_addr46, align 8, !dbg !10584
  %add47 = add i32 %30, 24, !dbg !10585
  call void @outl(i32 0, i32 %add47) #11, !dbg !10586
  call void @__const_udelay(i64 107375) #11, !dbg !10587
  br label %if.end48, !dbg !10592

if.end48:                                         ; preds = %if.then45, %while.body
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10593
  %io_addr49 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 2, !dbg !10594
  %32 = load i32, i32* %io_addr49, align 8, !dbg !10594
  %add50 = add i32 %32, 28, !dbg !10595
  %call = call zeroext i8 @inb(i32 %add50) #11, !dbg !10596
  store i8 %call, i8* %status, align 1, !dbg !10597
  %33 = load i8, i8* %status, align 1, !dbg !10598
  %conv51 = zext i8 %33 to i32, !dbg !10598
  %and = and i32 %conv51, 128, !dbg !10600
  %tobool = icmp ne i32 %and, 0, !dbg !10600
  br i1 %tobool, label %if.then52, label %if.end53, !dbg !10601

if.then52:                                        ; preds = %if.end48
  br label %while.end, !dbg !10602

if.end53:                                         ; preds = %if.end48
  br label %do.body, !dbg !10603

do.body:                                          ; preds = %if.end53
  call void @__const_udelay(i64 4295000) #11, !dbg !10604
  call void @touch_nmi_watchdog() #11, !dbg !10610
  br label %do.end, !dbg !10610

do.end:                                           ; preds = %do.body
  %34 = load i32, i32* %timeout, align 4, !dbg !10611
  %dec = add i32 %34, -1, !dbg !10611
  store i32 %dec, i32* %timeout, align 4, !dbg !10611
  br label %while.cond, !dbg !10572, !llvm.loop !10612

while.end:                                        ; preds = %if.then52, %while.cond
  %35 = load i32, i32* %timeout, align 4, !dbg !10614
  %cmp54 = icmp sle i32 %35, 0, !dbg !10616
  br i1 %cmp54, label %if.then56, label %if.end91, !dbg !10617

if.then56:                                        ; preds = %while.end
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10618
  %io_addr57 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 2, !dbg !10620
  %37 = load i32, i32* %io_addr57, align 8, !dbg !10620
  %add58 = add i32 %37, 28, !dbg !10621
  call void @outb(i8 zeroext -80, i32 %add58) #11, !dbg !10622
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10623
  %pcidev59 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 44, !dbg !10625
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pcidev59, align 8, !dbg !10625
  %revision60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 12, !dbg !10626
  %40 = load i8, i8* %revision60, align 8, !dbg !10626
  %conv61 = zext i8 %40 to i32, !dbg !10623
  %cmp62 = icmp eq i32 %conv61, 16, !dbg !10627
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !10628

if.then64:                                        ; preds = %if.then56
  call void @__const_udelay(i64 107375) #11, !dbg !10629
  br label %if.end65, !dbg !10634

if.end65:                                         ; preds = %if.then64, %if.then56
  store i32 10000, i32* %timeout, align 4, !dbg !10635
  br label %while.cond66, !dbg !10636

while.cond66:                                     ; preds = %do.end88, %if.end65
  %41 = load i32, i32* %timeout, align 4, !dbg !10637
  %cmp67 = icmp sgt i32 %41, 0, !dbg !10638
  br i1 %cmp67, label %while.body69, label %while.end90, !dbg !10636

while.body69:                                     ; preds = %while.cond66
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10639
  %pcidev70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 44, !dbg !10642
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pcidev70, align 8, !dbg !10642
  %revision71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 12, !dbg !10643
  %44 = load i8, i8* %revision71, align 8, !dbg !10643
  %conv72 = zext i8 %44 to i32, !dbg !10639
  %cmp73 = icmp eq i32 %conv72, 16, !dbg !10644
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !10645

if.then75:                                        ; preds = %while.body69
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10646
  %io_addr76 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 2, !dbg !10648
  %46 = load i32, i32* %io_addr76, align 8, !dbg !10648
  %add77 = add i32 %46, 24, !dbg !10649
  call void @outl(i32 0, i32 %add77) #11, !dbg !10650
  call void @__const_udelay(i64 107375) #11, !dbg !10651
  br label %if.end78, !dbg !10656

if.end78:                                         ; preds = %if.then75, %while.body69
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10657
  %io_addr79 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 2, !dbg !10658
  %48 = load i32, i32* %io_addr79, align 8, !dbg !10658
  %add80 = add i32 %48, 28, !dbg !10659
  %call81 = call zeroext i8 @inb(i32 %add80) #11, !dbg !10660
  store i8 %call81, i8* %status, align 1, !dbg !10661
  %49 = load i8, i8* %status, align 1, !dbg !10662
  %conv82 = zext i8 %49 to i32, !dbg !10662
  %and83 = and i32 %conv82, 192, !dbg !10664
  %tobool84 = icmp ne i32 %and83, 0, !dbg !10664
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !10665

if.then85:                                        ; preds = %if.end78
  br label %while.end90, !dbg !10666

if.end86:                                         ; preds = %if.end78
  br label %do.body87, !dbg !10667

do.body87:                                        ; preds = %if.end86
  call void @__const_udelay(i64 4295000) #11, !dbg !10668
  call void @touch_nmi_watchdog() #11, !dbg !10674
  br label %do.end88, !dbg !10674

do.end88:                                         ; preds = %do.body87
  %50 = load i32, i32* %timeout, align 4, !dbg !10675
  %dec89 = add i32 %50, -1, !dbg !10675
  store i32 %dec89, i32* %timeout, align 4, !dbg !10675
  br label %while.cond66, !dbg !10636, !llvm.loop !10676

while.end90:                                      ; preds = %if.then85, %while.cond66
  store i32 1, i32* %retval, align 4, !dbg !10678
  br label %return, !dbg !10678

if.end91:                                         ; preds = %while.end
  %51 = load i8, i8* %status, align 1, !dbg !10679
  %conv92 = zext i8 %51 to i32, !dbg !10679
  %and93 = and i32 %conv92, 8, !dbg !10681
  %tobool94 = icmp ne i32 %and93, 0, !dbg !10681
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !10682

if.then95:                                        ; preds = %if.end91
  store i32 1, i32* %retval, align 4, !dbg !10683
  br label %return, !dbg !10683

if.end96:                                         ; preds = %if.end91
  %52 = load i8, i8* %status, align 1, !dbg !10684
  %conv97 = zext i8 %52 to i32, !dbg !10684
  %and98 = and i32 %conv97, 48, !dbg !10686
  %tobool99 = icmp ne i32 %and98, 0, !dbg !10686
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !10687

if.then100:                                       ; preds = %if.end96
  store i32 1, i32* %retval, align 4, !dbg !10688
  br label %return, !dbg !10688

if.end101:                                        ; preds = %if.end96
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10689
  %io_addr102 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 2, !dbg !10690
  %54 = load i32, i32* %io_addr102, align 8, !dbg !10690
  %add103 = add i32 %54, 28, !dbg !10691
  call void @outb(i8 zeroext 80, i32 %add103) #11, !dbg !10692
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10693
  %pcidev104 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 44, !dbg !10695
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pcidev104, align 8, !dbg !10695
  %revision105 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 12, !dbg !10696
  %57 = load i8, i8* %revision105, align 8, !dbg !10696
  %conv106 = zext i8 %57 to i32, !dbg !10693
  %cmp107 = icmp eq i32 %conv106, 16, !dbg !10697
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !10698

if.then109:                                       ; preds = %if.end101
  call void @__const_udelay(i64 107375) #11, !dbg !10699
  br label %if.end110, !dbg !10704

if.end110:                                        ; preds = %if.then109, %if.end101
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10705
  %io_addr111 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 2, !dbg !10706
  %59 = load i32, i32* %io_addr111, align 8, !dbg !10706
  %add112 = add i32 %59, 28, !dbg !10707
  call void @outb(i8 zeroext -1, i32 %add112) #11, !dbg !10708
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10709
  %pcidev113 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 44, !dbg !10711
  %61 = load %struct.pci_dev*, %struct.pci_dev** %pcidev113, align 8, !dbg !10711
  %revision114 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %61, i32 0, i32 12, !dbg !10712
  %62 = load i8, i8* %revision114, align 8, !dbg !10712
  %conv115 = zext i8 %62 to i32, !dbg !10709
  %cmp116 = icmp eq i32 %conv115, 16, !dbg !10713
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !10714

if.then118:                                       ; preds = %if.end110
  call void @__const_udelay(i64 107375) #11, !dbg !10715
  br label %if.end119, !dbg !10720

if.end119:                                        ; preds = %if.then118, %if.end110
  store i32 0, i32* %retval, align 4, !dbg !10721
  br label %return, !dbg !10721

return:                                           ; preds = %if.end119, %if.then100, %if.then95, %while.end90
  %63 = load i32, i32* %retval, align 4, !dbg !10722
  ret i32 %63, !dbg !10722
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_program_bios(%struct.ips_ha* %ha, i8* %buffer, i32 %buffersize, i32 %offset) #0 !dbg !10723 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %timeout = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  store i32 %buffersize, i32* %buffersize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffersize.addr, metadata !10728, metadata !DIExpression()), !dbg !10729
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10730, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10732, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !10734, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.declare(metadata i8* %status, metadata !10736, metadata !DIExpression()), !dbg !10737
  store i8 0, i8* %status, align 1, !dbg !10737
  store i8 0, i8* %status, align 1, !dbg !10738
  store i32 0, i32* %i, align 4, !dbg !10739
  br label %for.cond, !dbg !10741

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10742
  %1 = load i32, i32* %buffersize.addr, align 4, !dbg !10744
  %cmp = icmp ult i32 %0, %1, !dbg !10745
  br i1 %cmp, label %for.body, label %for.end, !dbg !10746

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !10747
  %3 = load i32, i32* %offset.addr, align 4, !dbg !10749
  %add = add i32 %2, %3, !dbg !10750
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10751
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 2, !dbg !10752
  %5 = load i32, i32* %io_addr, align 8, !dbg !10752
  %add1 = add i32 %5, 24, !dbg !10753
  call void @outl(i32 %add, i32 %add1) #11, !dbg !10754
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10755
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 44, !dbg !10757
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !10757
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 12, !dbg !10758
  %8 = load i8, i8* %revision, align 8, !dbg !10758
  %conv = zext i8 %8 to i32, !dbg !10755
  %cmp2 = icmp eq i32 %conv, 16, !dbg !10759
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10760

if.then:                                          ; preds = %for.body
  call void @__const_udelay(i64 107375) #11, !dbg !10761
  br label %if.end, !dbg !10766

if.end:                                           ; preds = %if.then, %for.body
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10767
  %io_addr4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 2, !dbg !10768
  %10 = load i32, i32* %io_addr4, align 8, !dbg !10768
  %add5 = add i32 %10, 28, !dbg !10769
  call void @outb(i8 zeroext 64, i32 %add5) #11, !dbg !10770
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10771
  %pcidev6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 44, !dbg !10773
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pcidev6, align 8, !dbg !10773
  %revision7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 12, !dbg !10774
  %13 = load i8, i8* %revision7, align 8, !dbg !10774
  %conv8 = zext i8 %13 to i32, !dbg !10771
  %cmp9 = icmp eq i32 %conv8, 16, !dbg !10775
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10776

if.then11:                                        ; preds = %if.end
  call void @__const_udelay(i64 107375) #11, !dbg !10777
  br label %if.end12, !dbg !10782

if.end12:                                         ; preds = %if.then11, %if.end
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !10783
  %15 = load i32, i32* %i, align 4, !dbg !10784
  %idxprom = sext i32 %15 to i64, !dbg !10783
  %arrayidx = getelementptr i8, i8* %14, i64 %idxprom, !dbg !10783
  %16 = load i8, i8* %arrayidx, align 1, !dbg !10783
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10785
  %io_addr13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 2, !dbg !10786
  %18 = load i32, i32* %io_addr13, align 8, !dbg !10786
  %add14 = add i32 %18, 28, !dbg !10787
  call void @outb(i8 zeroext %16, i32 %add14) #11, !dbg !10788
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10789
  %pcidev15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 44, !dbg !10791
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pcidev15, align 8, !dbg !10791
  %revision16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 12, !dbg !10792
  %21 = load i8, i8* %revision16, align 8, !dbg !10792
  %conv17 = zext i8 %21 to i32, !dbg !10789
  %cmp18 = icmp eq i32 %conv17, 16, !dbg !10793
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !10794

if.then20:                                        ; preds = %if.end12
  call void @__const_udelay(i64 107375) #11, !dbg !10795
  br label %if.end21, !dbg !10800

if.end21:                                         ; preds = %if.then20, %if.end12
  store i32 1000, i32* %timeout, align 4, !dbg !10801
  br label %while.cond, !dbg !10802

while.cond:                                       ; preds = %do.end, %if.end21
  %22 = load i32, i32* %timeout, align 4, !dbg !10803
  %cmp22 = icmp sgt i32 %22, 0, !dbg !10804
  br i1 %cmp22, label %while.body, label %while.end, !dbg !10802

while.body:                                       ; preds = %while.cond
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10805
  %pcidev24 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 44, !dbg !10808
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pcidev24, align 8, !dbg !10808
  %revision25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 12, !dbg !10809
  %25 = load i8, i8* %revision25, align 8, !dbg !10809
  %conv26 = zext i8 %25 to i32, !dbg !10805
  %cmp27 = icmp eq i32 %conv26, 16, !dbg !10810
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !10811

if.then29:                                        ; preds = %while.body
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10812
  %io_addr30 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 2, !dbg !10814
  %27 = load i32, i32* %io_addr30, align 8, !dbg !10814
  %add31 = add i32 %27, 24, !dbg !10815
  call void @outl(i32 0, i32 %add31) #11, !dbg !10816
  call void @__const_udelay(i64 107375) #11, !dbg !10817
  br label %if.end32, !dbg !10822

if.end32:                                         ; preds = %if.then29, %while.body
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10823
  %io_addr33 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 2, !dbg !10824
  %29 = load i32, i32* %io_addr33, align 8, !dbg !10824
  %add34 = add i32 %29, 28, !dbg !10825
  %call = call zeroext i8 @inb(i32 %add34) #11, !dbg !10826
  store i8 %call, i8* %status, align 1, !dbg !10827
  %30 = load i8, i8* %status, align 1, !dbg !10828
  %conv35 = zext i8 %30 to i32, !dbg !10828
  %and = and i32 %conv35, 128, !dbg !10830
  %tobool = icmp ne i32 %and, 0, !dbg !10830
  br i1 %tobool, label %if.then36, label %if.end37, !dbg !10831

if.then36:                                        ; preds = %if.end32
  br label %while.end, !dbg !10832

if.end37:                                         ; preds = %if.end32
  br label %do.body, !dbg !10833

do.body:                                          ; preds = %if.end37
  call void @__const_udelay(i64 4295000) #11, !dbg !10834
  call void @touch_nmi_watchdog() #11, !dbg !10840
  br label %do.end, !dbg !10840

do.end:                                           ; preds = %do.body
  %31 = load i32, i32* %timeout, align 4, !dbg !10841
  %dec = add i32 %31, -1, !dbg !10841
  store i32 %dec, i32* %timeout, align 4, !dbg !10841
  br label %while.cond, !dbg !10802, !llvm.loop !10842

while.end:                                        ; preds = %if.then36, %while.cond
  %32 = load i32, i32* %timeout, align 4, !dbg !10844
  %cmp38 = icmp eq i32 %32, 0, !dbg !10846
  br i1 %cmp38, label %if.then40, label %if.end59, !dbg !10847

if.then40:                                        ; preds = %while.end
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10848
  %io_addr41 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 2, !dbg !10850
  %34 = load i32, i32* %io_addr41, align 8, !dbg !10850
  %add42 = add i32 %34, 24, !dbg !10851
  call void @outl(i32 0, i32 %add42) #11, !dbg !10852
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10853
  %pcidev43 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 44, !dbg !10855
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pcidev43, align 8, !dbg !10855
  %revision44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 12, !dbg !10856
  %37 = load i8, i8* %revision44, align 8, !dbg !10856
  %conv45 = zext i8 %37 to i32, !dbg !10853
  %cmp46 = icmp eq i32 %conv45, 16, !dbg !10857
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !10858

if.then48:                                        ; preds = %if.then40
  call void @__const_udelay(i64 107375) #11, !dbg !10859
  br label %if.end49, !dbg !10864

if.end49:                                         ; preds = %if.then48, %if.then40
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10865
  %io_addr50 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 2, !dbg !10866
  %39 = load i32, i32* %io_addr50, align 8, !dbg !10866
  %add51 = add i32 %39, 28, !dbg !10867
  call void @outb(i8 zeroext -1, i32 %add51) #11, !dbg !10868
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10869
  %pcidev52 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 44, !dbg !10871
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pcidev52, align 8, !dbg !10871
  %revision53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 12, !dbg !10872
  %42 = load i8, i8* %revision53, align 8, !dbg !10872
  %conv54 = zext i8 %42 to i32, !dbg !10869
  %cmp55 = icmp eq i32 %conv54, 16, !dbg !10873
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !10874

if.then57:                                        ; preds = %if.end49
  call void @__const_udelay(i64 107375) #11, !dbg !10875
  br label %if.end58, !dbg !10880

if.end58:                                         ; preds = %if.then57, %if.end49
  store i32 1, i32* %retval, align 4, !dbg !10881
  br label %return, !dbg !10881

if.end59:                                         ; preds = %while.end
  %43 = load i8, i8* %status, align 1, !dbg !10882
  %conv60 = zext i8 %43 to i32, !dbg !10882
  %and61 = and i32 %conv60, 24, !dbg !10884
  %tobool62 = icmp ne i32 %and61, 0, !dbg !10884
  br i1 %tobool62, label %if.then63, label %if.end82, !dbg !10885

if.then63:                                        ; preds = %if.end59
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10886
  %io_addr64 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 2, !dbg !10888
  %45 = load i32, i32* %io_addr64, align 8, !dbg !10888
  %add65 = add i32 %45, 24, !dbg !10889
  call void @outl(i32 0, i32 %add65) #11, !dbg !10890
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10891
  %pcidev66 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 44, !dbg !10893
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pcidev66, align 8, !dbg !10893
  %revision67 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 12, !dbg !10894
  %48 = load i8, i8* %revision67, align 8, !dbg !10894
  %conv68 = zext i8 %48 to i32, !dbg !10891
  %cmp69 = icmp eq i32 %conv68, 16, !dbg !10895
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !10896

if.then71:                                        ; preds = %if.then63
  call void @__const_udelay(i64 107375) #11, !dbg !10897
  br label %if.end72, !dbg !10902

if.end72:                                         ; preds = %if.then71, %if.then63
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10903
  %io_addr73 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 2, !dbg !10904
  %50 = load i32, i32* %io_addr73, align 8, !dbg !10904
  %add74 = add i32 %50, 28, !dbg !10905
  call void @outb(i8 zeroext -1, i32 %add74) #11, !dbg !10906
  %51 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10907
  %pcidev75 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %51, i32 0, i32 44, !dbg !10909
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pcidev75, align 8, !dbg !10909
  %revision76 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 12, !dbg !10910
  %53 = load i8, i8* %revision76, align 8, !dbg !10910
  %conv77 = zext i8 %53 to i32, !dbg !10907
  %cmp78 = icmp eq i32 %conv77, 16, !dbg !10911
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !10912

if.then80:                                        ; preds = %if.end72
  call void @__const_udelay(i64 107375) #11, !dbg !10913
  br label %if.end81, !dbg !10918

if.end81:                                         ; preds = %if.then80, %if.end72
  store i32 1, i32* %retval, align 4, !dbg !10919
  br label %return, !dbg !10919

if.end82:                                         ; preds = %if.end59
  br label %for.inc, !dbg !10920

for.inc:                                          ; preds = %if.end82
  %54 = load i32, i32* %i, align 4, !dbg !10921
  %inc = add i32 %54, 1, !dbg !10921
  store i32 %inc, i32* %i, align 4, !dbg !10921
  br label %for.cond, !dbg !10922, !llvm.loop !10923

for.end:                                          ; preds = %for.cond
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10925
  %io_addr83 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 2, !dbg !10926
  %56 = load i32, i32* %io_addr83, align 8, !dbg !10926
  %add84 = add i32 %56, 24, !dbg !10927
  call void @outl(i32 0, i32 %add84) #11, !dbg !10928
  %57 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10929
  %pcidev85 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %57, i32 0, i32 44, !dbg !10931
  %58 = load %struct.pci_dev*, %struct.pci_dev** %pcidev85, align 8, !dbg !10931
  %revision86 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 12, !dbg !10932
  %59 = load i8, i8* %revision86, align 8, !dbg !10932
  %conv87 = zext i8 %59 to i32, !dbg !10929
  %cmp88 = icmp eq i32 %conv87, 16, !dbg !10933
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !10934

if.then90:                                        ; preds = %for.end
  call void @__const_udelay(i64 107375) #11, !dbg !10935
  br label %if.end91, !dbg !10940

if.end91:                                         ; preds = %if.then90, %for.end
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10941
  %io_addr92 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 2, !dbg !10942
  %61 = load i32, i32* %io_addr92, align 8, !dbg !10942
  %add93 = add i32 %61, 28, !dbg !10943
  call void @outb(i8 zeroext -1, i32 %add93) #11, !dbg !10944
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10945
  %pcidev94 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %62, i32 0, i32 44, !dbg !10947
  %63 = load %struct.pci_dev*, %struct.pci_dev** %pcidev94, align 8, !dbg !10947
  %revision95 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 12, !dbg !10948
  %64 = load i8, i8* %revision95, align 8, !dbg !10948
  %conv96 = zext i8 %64 to i32, !dbg !10945
  %cmp97 = icmp eq i32 %conv96, 16, !dbg !10949
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !10950

if.then99:                                        ; preds = %if.end91
  call void @__const_udelay(i64 107375) #11, !dbg !10951
  br label %if.end100, !dbg !10956

if.end100:                                        ; preds = %if.then99, %if.end91
  store i32 0, i32* %retval, align 4, !dbg !10957
  br label %return, !dbg !10957

return:                                           ; preds = %if.end100, %if.end81, %if.end58
  %65 = load i32, i32* %retval, align 4, !dbg !10958
  ret i32 %65, !dbg !10958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_verify_bios(%struct.ips_ha* %ha, i8* %buffer, i32 %buffersize, i32 %offset) #0 !dbg !10959 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %checksum = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  store i32 %buffersize, i32* %buffersize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffersize.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10966, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.declare(metadata i8* %checksum, metadata !10968, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10970, metadata !DIExpression()), !dbg !10971
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10972
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 2, !dbg !10973
  %1 = load i32, i32* %io_addr, align 8, !dbg !10973
  %add = add i32 %1, 24, !dbg !10974
  call void @outl(i32 0, i32 %add) #11, !dbg !10975
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10976
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 44, !dbg !10978
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !10978
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !10979
  %4 = load i8, i8* %revision, align 8, !dbg !10979
  %conv = zext i8 %4 to i32, !dbg !10976
  %cmp = icmp eq i32 %conv, 16, !dbg !10980
  br i1 %cmp, label %if.then, label %if.end, !dbg !10981

if.then:                                          ; preds = %entry
  call void @__const_udelay(i64 107375) #11, !dbg !10982
  br label %if.end, !dbg !10987

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10988
  %io_addr2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 2, !dbg !10990
  %6 = load i32, i32* %io_addr2, align 8, !dbg !10990
  %add3 = add i32 %6, 28, !dbg !10991
  %call = call zeroext i8 @inb(i32 %add3) #11, !dbg !10992
  %conv4 = zext i8 %call to i32, !dbg !10992
  %cmp5 = icmp ne i32 %conv4, 85, !dbg !10993
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !10994

if.then7:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !10995
  br label %return, !dbg !10995

if.end8:                                          ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !10996
  %io_addr9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 2, !dbg !10997
  %8 = load i32, i32* %io_addr9, align 8, !dbg !10997
  %add10 = add i32 %8, 24, !dbg !10998
  call void @outl(i32 1, i32 %add10) #11, !dbg !10999
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11000
  %pcidev11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 44, !dbg !11002
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pcidev11, align 8, !dbg !11002
  %revision12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 12, !dbg !11003
  %11 = load i8, i8* %revision12, align 8, !dbg !11003
  %conv13 = zext i8 %11 to i32, !dbg !11000
  %cmp14 = icmp eq i32 %conv13, 16, !dbg !11004
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !11005

if.then16:                                        ; preds = %if.end8
  call void @__const_udelay(i64 107375) #11, !dbg !11006
  br label %if.end17, !dbg !11011

if.end17:                                         ; preds = %if.then16, %if.end8
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11012
  %io_addr18 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 2, !dbg !11014
  %13 = load i32, i32* %io_addr18, align 8, !dbg !11014
  %add19 = add i32 %13, 28, !dbg !11015
  %call20 = call zeroext i8 @inb(i32 %add19) #11, !dbg !11016
  %conv21 = zext i8 %call20 to i32, !dbg !11016
  %cmp22 = icmp ne i32 %conv21, 170, !dbg !11017
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11018

if.then24:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !11019
  br label %return, !dbg !11019

if.end25:                                         ; preds = %if.end17
  store i8 -1, i8* %checksum, align 1, !dbg !11020
  store i32 2, i32* %i, align 4, !dbg !11021
  br label %for.cond, !dbg !11023

for.cond:                                         ; preds = %for.inc, %if.end25
  %14 = load i32, i32* %i, align 4, !dbg !11024
  %15 = load i32, i32* %buffersize.addr, align 4, !dbg !11026
  %cmp26 = icmp ult i32 %14, %15, !dbg !11027
  br i1 %cmp26, label %for.body, label %for.end, !dbg !11028

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !11029
  %17 = load i32, i32* %offset.addr, align 4, !dbg !11031
  %add28 = add i32 %16, %17, !dbg !11032
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11033
  %io_addr29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 2, !dbg !11034
  %19 = load i32, i32* %io_addr29, align 8, !dbg !11034
  %add30 = add i32 %19, 24, !dbg !11035
  call void @outl(i32 %add28, i32 %add30) #11, !dbg !11036
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11037
  %pcidev31 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 44, !dbg !11039
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pcidev31, align 8, !dbg !11039
  %revision32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 12, !dbg !11040
  %22 = load i8, i8* %revision32, align 8, !dbg !11040
  %conv33 = zext i8 %22 to i32, !dbg !11037
  %cmp34 = icmp eq i32 %conv33, 16, !dbg !11041
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11042

if.then36:                                        ; preds = %for.body
  call void @__const_udelay(i64 107375) #11, !dbg !11043
  br label %if.end37, !dbg !11048

if.end37:                                         ; preds = %if.then36, %for.body
  %23 = load i8, i8* %checksum, align 1, !dbg !11049
  %conv38 = zext i8 %23 to i32, !dbg !11050
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11051
  %io_addr39 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 2, !dbg !11052
  %25 = load i32, i32* %io_addr39, align 8, !dbg !11052
  %add40 = add i32 %25, 28, !dbg !11053
  %call41 = call zeroext i8 @inb(i32 %add40) #11, !dbg !11054
  %conv42 = zext i8 %call41 to i32, !dbg !11054
  %add43 = add i32 %conv38, %conv42, !dbg !11055
  %conv44 = trunc i32 %add43 to i8, !dbg !11050
  store i8 %conv44, i8* %checksum, align 1, !dbg !11056
  br label %for.inc, !dbg !11057

for.inc:                                          ; preds = %if.end37
  %26 = load i32, i32* %i, align 4, !dbg !11058
  %inc = add i32 %26, 1, !dbg !11058
  store i32 %inc, i32* %i, align 4, !dbg !11058
  br label %for.cond, !dbg !11059, !llvm.loop !11060

for.end:                                          ; preds = %for.cond
  %27 = load i8, i8* %checksum, align 1, !dbg !11062
  %conv45 = zext i8 %27 to i32, !dbg !11062
  %cmp46 = icmp ne i32 %conv45, 0, !dbg !11064
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !11065

if.then48:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

if.else:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !11067
  br label %return, !dbg !11067

return:                                           ; preds = %if.else, %if.then48, %if.then24, %if.then7
  %28 = load i32, i32* %retval, align 4, !dbg !11068
  ret i32 %28, !dbg !11068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_enable_int_copperhead(%struct.ips_ha* %ha) #0 !dbg !11069 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11072
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 2, !dbg !11073
  %1 = load i32, i32* %io_addr, align 8, !dbg !11073
  %add = add i32 %1, 8, !dbg !11074
  %conv = trunc i32 %add to i8, !dbg !11072
  call void @outb(i8 zeroext %conv, i32 128) #11, !dbg !11075
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11076
  %io_addr1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 2, !dbg !11077
  %3 = load i32, i32* %io_addr1, align 8, !dbg !11077
  %add2 = add i32 %3, 8, !dbg !11078
  %call = call zeroext i8 @inb(i32 %add2) #11, !dbg !11079
  ret void, !dbg !11080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_issue_i2o(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !11081 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !11082, metadata !DIExpression()), !dbg !11083
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !11084, metadata !DIExpression()), !dbg !11085
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11086
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 18, !dbg !11088
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !11088
  %tobool = icmp ne %struct.scsi_cmnd* %1, null, !dbg !11086
  br i1 %tobool, label %if.then, label %if.else, !dbg !11089

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11090

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11092
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 6, !dbg !11093
  %3 = load i32, i32* %scb_busaddr, align 4, !dbg !11093
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11094
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 2, !dbg !11095
  %5 = load i32, i32* %io_addr, align 8, !dbg !11095
  %add = add i32 %5, 64, !dbg !11096
  call void @outl(i32 %3, i32 %add) #11, !dbg !11097
  ret i32 1, !dbg !11098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_issue_copperhead(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !11099 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %TimeOut = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !11100, metadata !DIExpression()), !dbg !11101
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !11102, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.declare(metadata i32* %TimeOut, metadata !11104, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11106, metadata !DIExpression()), !dbg !11107
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11108
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 18, !dbg !11110
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !11110
  %tobool = icmp ne %struct.scsi_cmnd* %1, null, !dbg !11108
  br i1 %tobool, label %if.then, label %if.else, !dbg !11111

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11112

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %TimeOut, align 4, !dbg !11114
  br label %while.cond, !dbg !11115

while.cond:                                       ; preds = %if.end9, %if.end
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11116
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 2, !dbg !11116
  %3 = load i32, i32* %io_addr, align 8, !dbg !11116
  %add = add i32 %3, 20, !dbg !11116
  %call = call i32 @inl(i32 %add) #11, !dbg !11116
  store i32 %call, i32* %val, align 4, !dbg !11117
  %and = and i32 %call, 8, !dbg !11118
  %tobool1 = icmp ne i32 %and, 0, !dbg !11115
  br i1 %tobool1, label %while.body, label %while.end, !dbg !11115

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !11119
  %4 = load i32, i32* %TimeOut, align 4, !dbg !11125
  %inc = add i32 %4, 1, !dbg !11125
  store i32 %inc, i32* %TimeOut, align 4, !dbg !11125
  %cmp = icmp uge i32 %inc, 2000, !dbg !11127
  br i1 %cmp, label %if.then2, label %if.end9, !dbg !11128

if.then2:                                         ; preds = %while.body
  %5 = load i32, i32* %val, align 4, !dbg !11129
  %and3 = and i32 %5, 2, !dbg !11132
  %tobool4 = icmp ne i32 %and3, 0, !dbg !11132
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11133

if.then5:                                         ; preds = %if.then2
  br label %while.end, !dbg !11134

if.end6:                                          ; preds = %if.then2
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11135
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 44, !dbg !11135
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !11135
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !11135
  %8 = load i32, i32* %val, align 4, !dbg !11135
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i32 %8) #12, !dbg !11135
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11136
  %pcidev7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 44, !dbg !11136
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pcidev7, align 8, !dbg !11136
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !11136
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !11136
  store i32 4, i32* %retval, align 4, !dbg !11137
  br label %return, !dbg !11137

if.end9:                                          ; preds = %while.body
  br label %while.cond, !dbg !11115, !llvm.loop !11138

while.end:                                        ; preds = %if.then5, %while.cond
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11140
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 6, !dbg !11141
  %12 = load i32, i32* %scb_busaddr, align 4, !dbg !11141
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11142
  %io_addr10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 2, !dbg !11143
  %14 = load i32, i32* %io_addr10, align 8, !dbg !11143
  %add11 = add i32 %14, 16, !dbg !11144
  call void @outl(i32 %12, i32 %add11) #11, !dbg !11145
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11146
  %io_addr12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 2, !dbg !11147
  %16 = load i32, i32* %io_addr12, align 8, !dbg !11147
  %add13 = add i32 %16, 20, !dbg !11148
  call void @outw(i16 zeroext 4122, i32 %add13) #11, !dbg !11149
  store i32 1, i32* %retval, align 4, !dbg !11150
  br label %return, !dbg !11150

return:                                           ; preds = %while.end, %if.end6
  %17 = load i32, i32* %retval, align 4, !dbg !11151
  ret i32 %17, !dbg !11151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_flush_and_reset(%struct.ips_ha* %ha) #0 !dbg !11152 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  %time = alloca i32, align 4
  %done = alloca i32, align 4
  %command_dma = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !11155, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11157, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.declare(metadata i32* %time, metadata !11159, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.declare(metadata i32* %done, metadata !11161, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.declare(metadata i64* %command_dma, metadata !11163, metadata !DIExpression()), !dbg !11164
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11165
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 44, !dbg !11166
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !11166
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !11167
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 216, i64* %command_dma, i32 3264) #11, !dbg !11168
  %2 = bitcast i8* %call to %struct.ips_scb*, !dbg !11168
  store %struct.ips_scb* %2, %struct.ips_scb** %scb, align 8, !dbg !11169
  %3 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11170
  %tobool = icmp ne %struct.ips_scb* %3, null, !dbg !11170
  br i1 %tobool, label %if.then, label %if.end20, !dbg !11172

if.then:                                          ; preds = %entry
  %4 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11173
  %5 = bitcast %struct.ips_scb* %4 to i8*, !dbg !11175
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 216, i1 false), !dbg !11175
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11176
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11177
  call void @ips_init_scb(%struct.ips_ha* %6, %struct.ips_scb* %7) #11, !dbg !11178
  %8 = load i64, i64* %command_dma, align 8, !dbg !11179
  %conv = trunc i64 %8 to i32, !dbg !11179
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11180
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 6, !dbg !11181
  store i32 %conv, i32* %scb_busaddr, align 4, !dbg !11182
  %10 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !11183
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11184
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 8, !dbg !11185
  store i32 %10, i32* %timeout, align 4, !dbg !11186
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11187
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 5, !dbg !11188
  %arrayidx = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !11187
  store i8 10, i8* %arrayidx, align 1, !dbg !11189
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11190
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !11191
  %flush_cache = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FC_CMD*, !dbg !11192
  %op_code = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache, i32 0, i32 0, !dbg !11193
  store i8 10, i8* %op_code, align 8, !dbg !11194
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11195
  %cmd1 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !11196
  %flush_cache2 = bitcast %union.IPS_HOST_COMMAND* %cmd1 to %struct.IPS_FC_CMD*, !dbg !11197
  %command_id = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache2, i32 0, i32 1, !dbg !11198
  store i8 -128, i8* %command_id, align 1, !dbg !11199
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11200
  %cmd3 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 0, !dbg !11201
  %flush_cache4 = bitcast %union.IPS_HOST_COMMAND* %cmd3 to %struct.IPS_FC_CMD*, !dbg !11202
  %state = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache4, i32 0, i32 3, !dbg !11203
  store i8 0, i8* %state, align 1, !dbg !11204
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11205
  %cmd5 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 0, !dbg !11206
  %flush_cache6 = bitcast %union.IPS_HOST_COMMAND* %cmd5 to %struct.IPS_FC_CMD*, !dbg !11207
  %reserved = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache6, i32 0, i32 2, !dbg !11208
  store i8 0, i8* %reserved, align 2, !dbg !11209
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11210
  %cmd7 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !11211
  %flush_cache8 = bitcast %union.IPS_HOST_COMMAND* %cmd7 to %struct.IPS_FC_CMD*, !dbg !11212
  %reserved2 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache8, i32 0, i32 4, !dbg !11213
  store i32 0, i32* %reserved2, align 4, !dbg !11214
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11215
  %cmd9 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 0, !dbg !11216
  %flush_cache10 = bitcast %union.IPS_HOST_COMMAND* %cmd9 to %struct.IPS_FC_CMD*, !dbg !11217
  %reserved3 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache10, i32 0, i32 5, !dbg !11218
  store i32 0, i32* %reserved3, align 8, !dbg !11219
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11220
  %cmd11 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 0, !dbg !11221
  %flush_cache12 = bitcast %union.IPS_HOST_COMMAND* %cmd11 to %struct.IPS_FC_CMD*, !dbg !11222
  %reserved4 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache12, i32 0, i32 6, !dbg !11223
  store i32 0, i32* %reserved4, align 4, !dbg !11224
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11225
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11226
  %call13 = call i32 @ips_send_cmd(%struct.ips_ha* %20, %struct.ips_scb* %21) #11, !dbg !11227
  store i32 %call13, i32* %ret, align 4, !dbg !11228
  %22 = load i32, i32* %ret, align 4, !dbg !11229
  %cmp = icmp eq i32 %22, 1, !dbg !11231
  br i1 %cmp, label %if.then15, label %if.end, !dbg !11232

if.then15:                                        ; preds = %if.then
  store i32 60000, i32* %time, align 4, !dbg !11233
  store i32 0, i32* %done, align 4, !dbg !11235
  br label %while.cond, !dbg !11236

while.cond:                                       ; preds = %while.body, %if.then15
  %23 = load i32, i32* %time, align 4, !dbg !11237
  %cmp16 = icmp sgt i32 %23, 0, !dbg !11238
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !11239

land.rhs:                                         ; preds = %while.cond
  %24 = load i32, i32* %done, align 4, !dbg !11240
  %tobool18 = icmp ne i32 %24, 0, !dbg !11241
  %lnot = xor i1 %tobool18, true, !dbg !11241
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %25 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11242
  br i1 %25, label %while.body, label %while.end, !dbg !11236

while.body:                                       ; preds = %land.end
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11243
  %call19 = call i32 @ips_poll_for_flush_complete(%struct.ips_ha* %26) #11, !dbg !11245
  store i32 %call19, i32* %done, align 4, !dbg !11246
  call void @__const_udelay(i64 4295000) #11, !dbg !11247
  %27 = load i32, i32* %time, align 4, !dbg !11252
  %dec = add i32 %27, -1, !dbg !11252
  store i32 %dec, i32* %time, align 4, !dbg !11252
  br label %while.cond, !dbg !11236, !llvm.loop !11253

while.end:                                        ; preds = %land.end
  br label %if.end, !dbg !11255

if.end:                                           ; preds = %while.end, %if.then
  br label %if.end20, !dbg !11256

if.end20:                                         ; preds = %if.end, %entry
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11257
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 43, !dbg !11258
  %reset = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 0, !dbg !11259
  %29 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %reset, align 8, !dbg !11259
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11260
  %call21 = call i32 %29(%struct.ips_ha* %30) #11, !dbg !11261
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11262
  %pcidev22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 44, !dbg !11263
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pcidev22, align 8, !dbg !11263
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 41, !dbg !11264
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !11265
  %34 = bitcast %struct.ips_scb* %33 to i8*, !dbg !11265
  %35 = load i64, i64* %command_dma, align 8, !dbg !11266
  call void @dma_free_coherent(%struct.device* %dev23, i64 216, i8* %34, i64 %35) #11, !dbg !11267
  ret void, !dbg !11268
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_init_scb(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !11269 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %sg_list = alloca %union.IPS_SG_LIST, align 8
  %cmd_busaddr = alloca i32, align 4
  %sg_busaddr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  call void @llvm.dbg.declare(metadata %union.IPS_SG_LIST* %sg_list, metadata !11276, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.declare(metadata i32* %cmd_busaddr, metadata !11278, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %sg_busaddr, metadata !11280, metadata !DIExpression()), !dbg !11281
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11282
  %cmp = icmp eq %struct.ips_scb* %0, null, !dbg !11284
  br i1 %cmp, label %if.then, label %if.end, !dbg !11285

if.then:                                          ; preds = %entry
  br label %return, !dbg !11286

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11287
  %sg_list1 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %1, i32 0, i32 17, !dbg !11288
  %list = bitcast %union.IPS_SG_LIST* %sg_list1 to i8**, !dbg !11289
  %2 = load i8*, i8** %list, align 8, !dbg !11289
  %list2 = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !11290
  store i8* %2, i8** %list2, align 8, !dbg !11291
  %3 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11292
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 6, !dbg !11293
  %4 = load i32, i32* %scb_busaddr, align 4, !dbg !11293
  store i32 %4, i32* %cmd_busaddr, align 4, !dbg !11294
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11295
  %sg_busaddr3 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %5, i32 0, i32 21, !dbg !11296
  %6 = load i32, i32* %sg_busaddr3, align 8, !dbg !11296
  store i32 %6, i32* %sg_busaddr, align 4, !dbg !11297
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11298
  %8 = bitcast %struct.ips_scb* %7 to i8*, !dbg !11299
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 216, i1 false), !dbg !11299
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11300
  %dummy = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 17, !dbg !11301
  %10 = load %struct.IPS_IO_CMD*, %struct.IPS_IO_CMD** %dummy, align 8, !dbg !11301
  %11 = bitcast %struct.IPS_IO_CMD* %10 to i8*, !dbg !11302
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 24, i1 false), !dbg !11302
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11303
  %dummy4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 17, !dbg !11304
  %13 = load %struct.IPS_IO_CMD*, %struct.IPS_IO_CMD** %dummy4, align 8, !dbg !11304
  %op_code = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %13, i32 0, i32 0, !dbg !11305
  store i8 -1, i8* %op_code, align 4, !dbg !11306
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11307
  %adapt = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 18, !dbg !11307
  %15 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt, align 8, !dbg !11307
  %hw_status_start = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %15, i32 0, i32 4, !dbg !11307
  %16 = load volatile i32, i32* %hw_status_start, align 8, !dbg !11307
  %conv = zext i32 %16 to i64, !dbg !11307
  %add = add i64 %conv, 552, !dbg !11307
  %conv5 = trunc i64 %add to i32, !dbg !11307
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11308
  %dummy6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 17, !dbg !11309
  %18 = load %struct.IPS_IO_CMD*, %struct.IPS_IO_CMD** %dummy6, align 8, !dbg !11309
  %ccsar = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %18, i32 0, i32 9, !dbg !11310
  store i32 %conv5, i32* %ccsar, align 4, !dbg !11311
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11312
  %dummy7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 17, !dbg !11313
  %20 = load %struct.IPS_IO_CMD*, %struct.IPS_IO_CMD** %dummy7, align 8, !dbg !11313
  %command_id = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %20, i32 0, i32 1, !dbg !11314
  store i8 -128, i8* %command_id, align 1, !dbg !11315
  %21 = load i32, i32* %cmd_busaddr, align 4, !dbg !11316
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11317
  %scb_busaddr8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %22, i32 0, i32 6, !dbg !11318
  store i32 %21, i32* %scb_busaddr8, align 4, !dbg !11319
  %23 = load i32, i32* %sg_busaddr, align 4, !dbg !11320
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11321
  %sg_busaddr9 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 21, !dbg !11322
  store i32 %23, i32* %sg_busaddr9, align 8, !dbg !11323
  %list10 = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !11324
  %25 = load i8*, i8** %list10, align 8, !dbg !11324
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11325
  %sg_list11 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %26, i32 0, i32 17, !dbg !11326
  %list12 = bitcast %union.IPS_SG_LIST* %sg_list11 to i8**, !dbg !11327
  store i8* %25, i8** %list12, align 8, !dbg !11328
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11329
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %27, i32 0, i32 0, !dbg !11330
  %basic_io = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_IO_CMD*, !dbg !11331
  %cccr = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io, i32 0, i32 10, !dbg !11332
  store i32 16, i32* %cccr, align 4, !dbg !11333
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11334
  %adapt13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 18, !dbg !11334
  %29 = load %struct.IPS_ADAPTER*, %struct.IPS_ADAPTER** %adapt13, align 8, !dbg !11334
  %hw_status_start14 = getelementptr inbounds %struct.IPS_ADAPTER, %struct.IPS_ADAPTER* %29, i32 0, i32 4, !dbg !11334
  %30 = load volatile i32, i32* %hw_status_start14, align 8, !dbg !11334
  %conv15 = zext i32 %30 to i64, !dbg !11334
  %add16 = add i64 %conv15, 552, !dbg !11334
  %conv17 = trunc i64 %add16 to i32, !dbg !11334
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11335
  %cmd18 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 0, !dbg !11336
  %basic_io19 = bitcast %union.IPS_HOST_COMMAND* %cmd18 to %struct.IPS_IO_CMD*, !dbg !11337
  %ccsar20 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io19, i32 0, i32 9, !dbg !11338
  store i32 %conv17, i32* %ccsar20, align 8, !dbg !11339
  br label %return, !dbg !11340

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_send_cmd(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !11341 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  %sp = alloca i8*, align 8
  %device_error = alloca i32, align 4
  %tapeDCDB = alloca %struct.IPS_DCDB_TABLE_TAPE*, align 8
  %TimeOut = alloca i32, align 4
  %inquiry = alloca %struct.IPS_SCSI_INQ_DATA, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !11342, metadata !DIExpression()), !dbg !11343
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !11344, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11346, metadata !DIExpression()), !dbg !11347
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !11348, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.declare(metadata i32* %device_error, metadata !11350, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.declare(metadata %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, metadata !11352, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.declare(metadata i32* %TimeOut, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i32 1, i32* %ret, align 4, !dbg !11356
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11357
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 18, !dbg !11359
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !11359
  %tobool = icmp ne %struct.scsi_cmnd* %1, null, !dbg !11357
  br i1 %tobool, label %if.else, label %if.then, !dbg !11360

if.then:                                          ; preds = %entry
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11361
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 3, !dbg !11364
  %3 = load i8, i8* %bus, align 1, !dbg !11364
  %conv = zext i8 %3 to i32, !dbg !11361
  %cmp = icmp sgt i32 %conv, 0, !dbg !11365
  br i1 %cmp, label %if.then2, label %if.end11, !dbg !11366

if.then2:                                         ; preds = %if.then
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11367
  %waitflag = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 29, !dbg !11370
  %5 = load i8, i8* %waitflag, align 4, !dbg !11370
  %conv3 = zext i8 %5 to i32, !dbg !11367
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !11371
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !11372

land.lhs.true:                                    ; preds = %if.then2
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11373
  %cmd_in_progress = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 27, !dbg !11374
  %7 = load i32, i32* %cmd_in_progress, align 4, !dbg !11374
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11375
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !11376
  %arrayidx = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !11375
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11375
  %conv6 = zext i8 %9 to i32, !dbg !11375
  %cmp7 = icmp eq i32 %7, %conv6, !dbg !11377
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !11378

if.then9:                                         ; preds = %land.lhs.true
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11379
  %waitflag10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 29, !dbg !11381
  store i8 0, i8* %waitflag10, align 4, !dbg !11382
  br label %if.end, !dbg !11383

if.end:                                           ; preds = %if.then9, %land.lhs.true, %if.then2
  store i32 1, i32* %retval, align 4, !dbg !11384
  br label %return, !dbg !11384

if.end11:                                         ; preds = %if.then
  br label %if.end379, !dbg !11385

if.else:                                          ; preds = %entry
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11386
  %bus12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 3, !dbg !11388
  %12 = load i8, i8* %bus12, align 1, !dbg !11388
  %conv13 = zext i8 %12 to i32, !dbg !11386
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !11389
  br i1 %cmp14, label %land.lhs.true16, label %if.end378, !dbg !11390

land.lhs.true16:                                  ; preds = %if.else
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11391
  %scsi_cmd17 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 18, !dbg !11392
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd17, align 8, !dbg !11392
  %call = call i32 @ips_is_passthru(%struct.scsi_cmnd* %14) #11, !dbg !11393
  %tobool18 = icmp ne i32 %call, 0, !dbg !11393
  br i1 %tobool18, label %if.end378, label %if.then19, !dbg !11394

if.then19:                                        ; preds = %land.lhs.true16
  store i32 2, i32* %ret, align 4, !dbg !11395
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11397
  %scsi_cmd20 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 18, !dbg !11398
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd20, align 8, !dbg !11398
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 14, !dbg !11399
  %17 = load i8*, i8** %cmnd, align 8, !dbg !11399
  %arrayidx21 = getelementptr i8, i8* %17, i64 0, !dbg !11397
  %18 = load i8, i8* %arrayidx21, align 1, !dbg !11397
  %conv22 = zext i8 %18 to i32, !dbg !11397
  switch i32 %conv22, label %sw.default [
    i32 30, label %sw.bb
    i32 1, label %sw.bb
    i32 25, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 27, label %sw.bb24
    i32 0, label %sw.bb27
    i32 18, label %sw.bb27
    i32 3, label %sw.bb72
    i32 8, label %sw.bb76
    i32 10, label %sw.bb76
    i32 40, label %sw.bb182
    i32 42, label %sw.bb182
    i32 22, label %sw.bb308
    i32 23, label %sw.bb308
    i32 26, label %sw.bb311
    i32 37, label %sw.bb336
    i32 29, label %sw.bb367
    i32 7, label %sw.bb367
    i32 4, label %sw.bb367
    i32 43, label %sw.bb367
    i32 47, label %sw.bb367
    i32 55, label %sw.bb367
    i32 60, label %sw.bb367
    i32 59, label %sw.bb367
  ], !dbg !11400

sw.bb:                                            ; preds = %if.then19, %if.then19, %if.then19, %if.then19, %if.then19
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11401
  %scsi_cmd23 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 18, !dbg !11403
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd23, align 8, !dbg !11403
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 24, !dbg !11404
  store i32 458752, i32* %result, align 8, !dbg !11405
  br label %sw.epilog, !dbg !11406

sw.bb24:                                          ; preds = %if.then19
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11407
  %scsi_cmd25 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %21, i32 0, i32 18, !dbg !11408
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd25, align 8, !dbg !11408
  %result26 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 24, !dbg !11409
  store i32 0, i32* %result26, align 8, !dbg !11410
  br label %sw.epilog, !dbg !11411

sw.bb27:                                          ; preds = %if.then19, %if.then19
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11412
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %23, i32 0, i32 2, !dbg !11414
  %24 = load i8, i8* %target_id, align 4, !dbg !11414
  %conv28 = zext i8 %24 to i32, !dbg !11412
  %cmp29 = icmp eq i32 %conv28, 15, !dbg !11415
  br i1 %cmp29, label %if.then31, label %if.else58, !dbg !11416

if.then31:                                        ; preds = %sw.bb27
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11417
  %scsi_cmd32 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %25, i32 0, i32 18, !dbg !11420
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd32, align 8, !dbg !11420
  %cmnd33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %26, i32 0, i32 14, !dbg !11421
  %27 = load i8*, i8** %cmnd33, align 8, !dbg !11421
  %arrayidx34 = getelementptr i8, i8* %27, i64 0, !dbg !11417
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !11417
  %conv35 = zext i8 %28 to i32, !dbg !11417
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !11422
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !11423

if.then38:                                        ; preds = %if.then31
  %29 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11424
  %scsi_cmd39 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %29, i32 0, i32 18, !dbg !11425
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd39, align 8, !dbg !11425
  %result40 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 24, !dbg !11426
  store i32 0, i32* %result40, align 8, !dbg !11427
  br label %if.end41, !dbg !11424

if.end41:                                         ; preds = %if.then38, %if.then31
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11428
  %scsi_cmd42 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 18, !dbg !11430
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd42, align 8, !dbg !11430
  %cmnd43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 14, !dbg !11431
  %33 = load i8*, i8** %cmnd43, align 8, !dbg !11431
  %arrayidx44 = getelementptr i8, i8* %33, i64 0, !dbg !11428
  %34 = load i8, i8* %arrayidx44, align 1, !dbg !11428
  %conv45 = zext i8 %34 to i32, !dbg !11428
  %cmp46 = icmp eq i32 %conv45, 18, !dbg !11432
  br i1 %cmp46, label %if.then48, label %if.end57, !dbg !11433

if.then48:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_INQ_DATA* %inquiry, metadata !11434, metadata !DIExpression()), !dbg !11450
  %35 = bitcast %struct.IPS_SCSI_INQ_DATA* %inquiry to i8*, !dbg !11451
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 37, i1 false), !dbg !11451
  %DeviceType = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 0, !dbg !11452
  store i8 3, i8* %DeviceType, align 1, !dbg !11453
  %DeviceTypeQualifier = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 1, !dbg !11454
  store i8 0, i8* %DeviceTypeQualifier, align 1, !dbg !11455
  %Version = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 2, !dbg !11456
  store i8 2, i8* %Version, align 1, !dbg !11457
  %ResponseDataFormat = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 3, !dbg !11458
  store i8 2, i8* %ResponseDataFormat, align 1, !dbg !11459
  %AdditionalLength = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 4, !dbg !11460
  store i8 31, i8* %AdditionalLength, align 1, !dbg !11461
  %Flags = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 6, !dbg !11462
  %arrayidx49 = getelementptr [2 x i8], [2 x i8]* %Flags, i64 0, i64 0, !dbg !11463
  store i8 1, i8* %arrayidx49, align 1, !dbg !11464
  %Flags50 = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 6, !dbg !11465
  %arrayidx51 = getelementptr [2 x i8], [2 x i8]* %Flags50, i64 0, i64 1, !dbg !11466
  store i8 48, i8* %arrayidx51, align 1, !dbg !11467
  %VendorId = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 7, !dbg !11468
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %VendorId, i64 0, i64 0, !dbg !11469
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i64 8, i1 false), !dbg !11469
  %ProductId = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 8, !dbg !11470
  %arraydecay52 = getelementptr inbounds [16 x i8], [16 x i8]* %ProductId, i64 0, i64 0, !dbg !11471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay52, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i64 16, i1 false), !dbg !11471
  %ProductRevisionLevel = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 9, !dbg !11472
  %arraydecay53 = getelementptr inbounds [4 x i8], [4 x i8]* %ProductRevisionLevel, i64 0, i64 0, !dbg !11473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay53, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i64 4, i1 false), !dbg !11473
  %36 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11474
  %scsi_cmd54 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %36, i32 0, i32 18, !dbg !11475
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd54, align 8, !dbg !11475
  %38 = bitcast %struct.IPS_SCSI_INQ_DATA* %inquiry to i8*, !dbg !11476
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %37, i8* %38, i32 37) #11, !dbg !11477
  %39 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11478
  %scsi_cmd55 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %39, i32 0, i32 18, !dbg !11479
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd55, align 8, !dbg !11479
  %result56 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 24, !dbg !11480
  store i32 0, i32* %result56, align 8, !dbg !11481
  br label %if.end57, !dbg !11482

if.end57:                                         ; preds = %if.then48, %if.end41
  br label %if.end71, !dbg !11483

if.else58:                                        ; preds = %sw.bb27
  %41 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11484
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %41, i32 0, i32 0, !dbg !11486
  %logical_info = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_LD_CMD*, !dbg !11487
  %op_code = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info, i32 0, i32 0, !dbg !11488
  store i8 25, i8* %op_code, align 8, !dbg !11489
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11490
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11490
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 12, !dbg !11490
  %44 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !11490
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %42 to i64, !dbg !11490
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %44 to i64, !dbg !11490
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11490
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !11490
  %conv59 = trunc i64 %sub.ptr.div to i32, !dbg !11490
  %conv60 = trunc i32 %conv59 to i8, !dbg !11490
  %45 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11491
  %cmd61 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %45, i32 0, i32 0, !dbg !11492
  %logical_info62 = bitcast %union.IPS_HOST_COMMAND* %cmd61 to %struct.IPS_LD_CMD*, !dbg !11493
  %command_id = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info62, i32 0, i32 1, !dbg !11494
  store i8 %conv60, i8* %command_id, align 1, !dbg !11495
  %46 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11496
  %cmd63 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %46, i32 0, i32 0, !dbg !11497
  %logical_info64 = bitcast %union.IPS_HOST_COMMAND* %cmd63 to %struct.IPS_LD_CMD*, !dbg !11498
  %reserved = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info64, i32 0, i32 2, !dbg !11499
  store i16 0, i16* %reserved, align 2, !dbg !11500
  %47 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11501
  %cmd65 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %47, i32 0, i32 0, !dbg !11502
  %logical_info66 = bitcast %union.IPS_HOST_COMMAND* %cmd65 to %struct.IPS_LD_CMD*, !dbg !11503
  %reserved2 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info66, i32 0, i32 3, !dbg !11504
  store i32 0, i32* %reserved2, align 4, !dbg !11505
  %48 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11506
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %48, i32 0, i32 13, !dbg !11507
  store i32 68, i32* %data_len, align 4, !dbg !11508
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11509
  %logical_drive_info_dma_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 20, !dbg !11510
  %50 = load i64, i64* %logical_drive_info_dma_addr, align 8, !dbg !11510
  %51 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11511
  %data_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %51, i32 0, i32 23, !dbg !11512
  store i64 %50, i64* %data_busaddr, align 8, !dbg !11513
  %52 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11514
  %flags = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %52, i32 0, i32 15, !dbg !11515
  store i32 0, i32* %flags, align 4, !dbg !11516
  %53 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11517
  %data_busaddr67 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %53, i32 0, i32 23, !dbg !11518
  %54 = load i64, i64* %data_busaddr67, align 8, !dbg !11518
  %conv68 = trunc i64 %54 to i32, !dbg !11517
  %55 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11519
  %cmd69 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %55, i32 0, i32 0, !dbg !11520
  %logical_info70 = bitcast %union.IPS_HOST_COMMAND* %cmd69 to %struct.IPS_LD_CMD*, !dbg !11521
  %buffer_addr = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info70, i32 0, i32 4, !dbg !11522
  store i32 %conv68, i32* %buffer_addr, align 8, !dbg !11523
  store i32 1, i32* %ret, align 4, !dbg !11524
  br label %if.end71

if.end71:                                         ; preds = %if.else58, %if.end57
  br label %sw.epilog, !dbg !11525

sw.bb72:                                          ; preds = %if.then19
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11526
  %57 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11527
  %call73 = call i32 @ips_reqsen(%struct.ips_ha* %56, %struct.ips_scb* %57) #11, !dbg !11528
  %58 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11529
  %scsi_cmd74 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %58, i32 0, i32 18, !dbg !11530
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd74, align 8, !dbg !11530
  %result75 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %59, i32 0, i32 24, !dbg !11531
  store i32 0, i32* %result75, align 8, !dbg !11532
  br label %sw.epilog, !dbg !11533

sw.bb76:                                          ; preds = %if.then19, %if.then19
  %60 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11534
  %sg_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %60, i32 0, i32 14, !dbg !11536
  %61 = load i32, i32* %sg_len, align 8, !dbg !11536
  %tobool77 = icmp ne i32 %61, 0, !dbg !11534
  br i1 %tobool77, label %if.else94, label %if.then78, !dbg !11537

if.then78:                                        ; preds = %sw.bb76
  %62 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11538
  %scsi_cmd79 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %62, i32 0, i32 18, !dbg !11540
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd79, align 8, !dbg !11540
  %cmnd80 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %63, i32 0, i32 14, !dbg !11541
  %64 = load i8*, i8** %cmnd80, align 8, !dbg !11541
  %arrayidx81 = getelementptr i8, i8* %64, i64 0, !dbg !11538
  %65 = load i8, i8* %arrayidx81, align 1, !dbg !11538
  %conv82 = zext i8 %65 to i32, !dbg !11538
  %cmp83 = icmp eq i32 %conv82, 8, !dbg !11542
  %66 = zext i1 %cmp83 to i64, !dbg !11543
  %cond = select i1 %cmp83, i32 2, i32 3, !dbg !11543
  %conv85 = trunc i32 %cond to i8, !dbg !11543
  %67 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11544
  %cmd86 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %67, i32 0, i32 0, !dbg !11545
  %basic_io = bitcast %union.IPS_HOST_COMMAND* %cmd86 to %struct.IPS_IO_CMD*, !dbg !11546
  %op_code87 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io, i32 0, i32 0, !dbg !11547
  store i8 %conv85, i8* %op_code87, align 8, !dbg !11548
  %68 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11549
  %cmd88 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %68, i32 0, i32 0, !dbg !11550
  %basic_io89 = bitcast %union.IPS_HOST_COMMAND* %cmd88 to %struct.IPS_IO_CMD*, !dbg !11551
  %enhanced_sg = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io89, i32 0, i32 8, !dbg !11552
  store i8 0, i8* %enhanced_sg, align 1, !dbg !11553
  %69 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11554
  %data_busaddr90 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %69, i32 0, i32 23, !dbg !11554
  %70 = load i64, i64* %data_busaddr90, align 8, !dbg !11554
  %conv91 = trunc i64 %70 to i32, !dbg !11554
  %71 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11555
  %cmd92 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %71, i32 0, i32 0, !dbg !11556
  %basic_io93 = bitcast %union.IPS_HOST_COMMAND* %cmd92 to %struct.IPS_IO_CMD*, !dbg !11557
  %sg_addr = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io93, i32 0, i32 5, !dbg !11558
  store i32 %conv91, i32* %sg_addr, align 8, !dbg !11559
  br label %if.end116, !dbg !11560

if.else94:                                        ; preds = %sw.bb76
  %72 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11561
  %scsi_cmd95 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %72, i32 0, i32 18, !dbg !11563
  %73 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd95, align 8, !dbg !11563
  %cmnd96 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %73, i32 0, i32 14, !dbg !11564
  %74 = load i8*, i8** %cmnd96, align 8, !dbg !11564
  %arrayidx97 = getelementptr i8, i8* %74, i64 0, !dbg !11561
  %75 = load i8, i8* %arrayidx97, align 1, !dbg !11561
  %conv98 = zext i8 %75 to i32, !dbg !11561
  %cmp99 = icmp eq i32 %conv98, 8, !dbg !11565
  %76 = zext i1 %cmp99 to i64, !dbg !11566
  %cond101 = select i1 %cmp99, i32 130, i32 131, !dbg !11566
  %conv102 = trunc i32 %cond101 to i8, !dbg !11566
  %77 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11567
  %cmd103 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %77, i32 0, i32 0, !dbg !11568
  %basic_io104 = bitcast %union.IPS_HOST_COMMAND* %cmd103 to %struct.IPS_IO_CMD*, !dbg !11569
  %op_code105 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io104, i32 0, i32 0, !dbg !11570
  store i8 %conv102, i8* %op_code105, align 8, !dbg !11571
  %78 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11572
  %flags106 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %78, i32 0, i32 28, !dbg !11572
  %79 = load i32, i32* %flags106, align 8, !dbg !11572
  %and = and i32 %79, 1, !dbg !11572
  %tobool107 = icmp ne i32 %and, 0, !dbg !11572
  %80 = zext i1 %tobool107 to i64, !dbg !11572
  %cond108 = select i1 %tobool107, i32 255, i32 0, !dbg !11572
  %conv109 = trunc i32 %cond108 to i8, !dbg !11572
  %81 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11573
  %cmd110 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %81, i32 0, i32 0, !dbg !11574
  %basic_io111 = bitcast %union.IPS_HOST_COMMAND* %cmd110 to %struct.IPS_IO_CMD*, !dbg !11575
  %enhanced_sg112 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io111, i32 0, i32 8, !dbg !11576
  store i8 %conv109, i8* %enhanced_sg112, align 1, !dbg !11577
  %82 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11578
  %sg_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %82, i32 0, i32 21, !dbg !11578
  %83 = load i32, i32* %sg_busaddr, align 8, !dbg !11578
  %84 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11579
  %cmd113 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %84, i32 0, i32 0, !dbg !11580
  %basic_io114 = bitcast %union.IPS_HOST_COMMAND* %cmd113 to %struct.IPS_IO_CMD*, !dbg !11581
  %sg_addr115 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io114, i32 0, i32 5, !dbg !11582
  store i32 %83, i32* %sg_addr115, align 8, !dbg !11583
  br label %if.end116

if.end116:                                        ; preds = %if.else94, %if.then78
  %85 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11584
  %cmd117 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %85, i32 0, i32 0, !dbg !11585
  %basic_io118 = bitcast %union.IPS_HOST_COMMAND* %cmd117 to %struct.IPS_IO_CMD*, !dbg !11586
  %segment_4G = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io118, i32 0, i32 7, !dbg !11587
  store i8 0, i8* %segment_4G, align 2, !dbg !11588
  %86 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11589
  %87 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11589
  %scbs119 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %87, i32 0, i32 12, !dbg !11589
  %88 = load %struct.ips_scb*, %struct.ips_scb** %scbs119, align 8, !dbg !11589
  %sub.ptr.lhs.cast120 = ptrtoint %struct.ips_scb* %86 to i64, !dbg !11589
  %sub.ptr.rhs.cast121 = ptrtoint %struct.ips_scb* %88 to i64, !dbg !11589
  %sub.ptr.sub122 = sub i64 %sub.ptr.lhs.cast120, %sub.ptr.rhs.cast121, !dbg !11589
  %sub.ptr.div123 = sdiv exact i64 %sub.ptr.sub122, 216, !dbg !11589
  %conv124 = trunc i64 %sub.ptr.div123 to i32, !dbg !11589
  %conv125 = trunc i32 %conv124 to i8, !dbg !11589
  %89 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11590
  %cmd126 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %89, i32 0, i32 0, !dbg !11591
  %basic_io127 = bitcast %union.IPS_HOST_COMMAND* %cmd126 to %struct.IPS_IO_CMD*, !dbg !11592
  %command_id128 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io127, i32 0, i32 1, !dbg !11593
  store i8 %conv125, i8* %command_id128, align 1, !dbg !11594
  %90 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11595
  %target_id129 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %90, i32 0, i32 2, !dbg !11596
  %91 = load i8, i8* %target_id129, align 4, !dbg !11596
  %92 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11597
  %cmd130 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %92, i32 0, i32 0, !dbg !11598
  %basic_io131 = bitcast %union.IPS_HOST_COMMAND* %cmd130 to %struct.IPS_IO_CMD*, !dbg !11599
  %log_drv = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io131, i32 0, i32 2, !dbg !11600
  store i8 %91, i8* %log_drv, align 2, !dbg !11601
  %93 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11602
  %sg_len132 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %93, i32 0, i32 14, !dbg !11603
  %94 = load i32, i32* %sg_len132, align 8, !dbg !11603
  %conv133 = trunc i32 %94 to i8, !dbg !11602
  %95 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11604
  %cmd134 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %95, i32 0, i32 0, !dbg !11605
  %basic_io135 = bitcast %union.IPS_HOST_COMMAND* %cmd134 to %struct.IPS_IO_CMD*, !dbg !11606
  %sg_count = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io135, i32 0, i32 3, !dbg !11607
  store i8 %conv133, i8* %sg_count, align 1, !dbg !11608
  %96 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11609
  %cmd136 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %96, i32 0, i32 0, !dbg !11611
  %basic_io137 = bitcast %union.IPS_HOST_COMMAND* %cmd136 to %struct.IPS_IO_CMD*, !dbg !11612
  %lba = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io137, i32 0, i32 4, !dbg !11613
  %97 = load i32, i32* %lba, align 4, !dbg !11613
  %tobool138 = icmp ne i32 %97, 0, !dbg !11609
  br i1 %tobool138, label %if.then139, label %if.else146, !dbg !11614

if.then139:                                       ; preds = %if.end116
  %98 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11615
  %cmd140 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %98, i32 0, i32 0, !dbg !11616
  %basic_io141 = bitcast %union.IPS_HOST_COMMAND* %cmd140 to %struct.IPS_IO_CMD*, !dbg !11617
  %lba142 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io141, i32 0, i32 4, !dbg !11618
  %99 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11619
  %cmd143 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %99, i32 0, i32 0, !dbg !11619
  %basic_io144 = bitcast %union.IPS_HOST_COMMAND* %cmd143 to %struct.IPS_IO_CMD*, !dbg !11619
  %sector_count = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io144, i32 0, i32 6, !dbg !11619
  %100 = load i16, i16* %sector_count, align 4, !dbg !11619
  %conv145 = zext i16 %100 to i32, !dbg !11619
  call void @le32_add_cpu(i32* %lba142, i32 %conv145) #11, !dbg !11620
  br label %if.end165, !dbg !11620

if.else146:                                       ; preds = %if.end116
  %101 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11621
  %scsi_cmd147 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %101, i32 0, i32 18, !dbg !11622
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd147, align 8, !dbg !11622
  %cmnd148 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %102, i32 0, i32 14, !dbg !11623
  %103 = load i8*, i8** %cmnd148, align 8, !dbg !11623
  %arrayidx149 = getelementptr i8, i8* %103, i64 1, !dbg !11621
  %104 = load i8, i8* %arrayidx149, align 1, !dbg !11621
  %conv150 = zext i8 %104 to i32, !dbg !11621
  %and151 = and i32 %conv150, 31, !dbg !11624
  %shl = shl i32 %and151, 16, !dbg !11625
  %105 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11626
  %scsi_cmd152 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %105, i32 0, i32 18, !dbg !11627
  %106 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd152, align 8, !dbg !11627
  %cmnd153 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %106, i32 0, i32 14, !dbg !11628
  %107 = load i8*, i8** %cmnd153, align 8, !dbg !11628
  %arrayidx154 = getelementptr i8, i8* %107, i64 2, !dbg !11626
  %108 = load i8, i8* %arrayidx154, align 1, !dbg !11626
  %conv155 = zext i8 %108 to i32, !dbg !11626
  %shl156 = shl i32 %conv155, 8, !dbg !11629
  %or = or i32 %shl, %shl156, !dbg !11630
  %109 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11631
  %scsi_cmd157 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %109, i32 0, i32 18, !dbg !11632
  %110 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd157, align 8, !dbg !11632
  %cmnd158 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %110, i32 0, i32 14, !dbg !11633
  %111 = load i8*, i8** %cmnd158, align 8, !dbg !11633
  %arrayidx159 = getelementptr i8, i8* %111, i64 3, !dbg !11631
  %112 = load i8, i8* %arrayidx159, align 1, !dbg !11631
  %conv160 = zext i8 %112 to i32, !dbg !11634
  %or161 = or i32 %or, %conv160, !dbg !11635
  %113 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11636
  %cmd162 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %113, i32 0, i32 0, !dbg !11637
  %basic_io163 = bitcast %union.IPS_HOST_COMMAND* %cmd162 to %struct.IPS_IO_CMD*, !dbg !11638
  %lba164 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io163, i32 0, i32 4, !dbg !11639
  store i32 %or161, i32* %lba164, align 4, !dbg !11640
  br label %if.end165

if.end165:                                        ; preds = %if.else146, %if.then139
  %114 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11641
  %data_len166 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %114, i32 0, i32 13, !dbg !11641
  %115 = load i32, i32* %data_len166, align 4, !dbg !11641
  %div = udiv i32 %115, 512, !dbg !11641
  %conv167 = trunc i32 %div to i16, !dbg !11641
  %116 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11642
  %cmd168 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %116, i32 0, i32 0, !dbg !11643
  %basic_io169 = bitcast %union.IPS_HOST_COMMAND* %cmd168 to %struct.IPS_IO_CMD*, !dbg !11644
  %sector_count170 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io169, i32 0, i32 6, !dbg !11645
  store i16 %conv167, i16* %sector_count170, align 4, !dbg !11646
  %117 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11647
  %cmd171 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %117, i32 0, i32 0, !dbg !11647
  %basic_io172 = bitcast %union.IPS_HOST_COMMAND* %cmd171 to %struct.IPS_IO_CMD*, !dbg !11647
  %sector_count173 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io172, i32 0, i32 6, !dbg !11647
  %118 = load i16, i16* %sector_count173, align 4, !dbg !11647
  %conv174 = zext i16 %118 to i32, !dbg !11647
  %cmp175 = icmp eq i32 %conv174, 0, !dbg !11649
  br i1 %cmp175, label %if.then177, label %if.end181, !dbg !11650

if.then177:                                       ; preds = %if.end165
  %119 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11651
  %cmd178 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %119, i32 0, i32 0, !dbg !11652
  %basic_io179 = bitcast %union.IPS_HOST_COMMAND* %cmd178 to %struct.IPS_IO_CMD*, !dbg !11653
  %sector_count180 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io179, i32 0, i32 6, !dbg !11654
  store i16 256, i16* %sector_count180, align 4, !dbg !11655
  br label %if.end181, !dbg !11651

if.end181:                                        ; preds = %if.then177, %if.end165
  store i32 1, i32* %ret, align 4, !dbg !11656
  br label %sw.epilog, !dbg !11657

sw.bb182:                                         ; preds = %if.then19, %if.then19
  %120 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11658
  %sg_len183 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %120, i32 0, i32 14, !dbg !11660
  %121 = load i32, i32* %sg_len183, align 8, !dbg !11660
  %tobool184 = icmp ne i32 %121, 0, !dbg !11658
  br i1 %tobool184, label %if.else205, label %if.then185, !dbg !11661

if.then185:                                       ; preds = %sw.bb182
  %122 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11662
  %scsi_cmd186 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %122, i32 0, i32 18, !dbg !11664
  %123 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd186, align 8, !dbg !11664
  %cmnd187 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %123, i32 0, i32 14, !dbg !11665
  %124 = load i8*, i8** %cmnd187, align 8, !dbg !11665
  %arrayidx188 = getelementptr i8, i8* %124, i64 0, !dbg !11662
  %125 = load i8, i8* %arrayidx188, align 1, !dbg !11662
  %conv189 = zext i8 %125 to i32, !dbg !11662
  %cmp190 = icmp eq i32 %conv189, 40, !dbg !11666
  %126 = zext i1 %cmp190 to i64, !dbg !11667
  %cond192 = select i1 %cmp190, i32 2, i32 3, !dbg !11667
  %conv193 = trunc i32 %cond192 to i8, !dbg !11667
  %127 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11668
  %cmd194 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %127, i32 0, i32 0, !dbg !11669
  %basic_io195 = bitcast %union.IPS_HOST_COMMAND* %cmd194 to %struct.IPS_IO_CMD*, !dbg !11670
  %op_code196 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io195, i32 0, i32 0, !dbg !11671
  store i8 %conv193, i8* %op_code196, align 8, !dbg !11672
  %128 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11673
  %cmd197 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %128, i32 0, i32 0, !dbg !11674
  %basic_io198 = bitcast %union.IPS_HOST_COMMAND* %cmd197 to %struct.IPS_IO_CMD*, !dbg !11675
  %enhanced_sg199 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io198, i32 0, i32 8, !dbg !11676
  store i8 0, i8* %enhanced_sg199, align 1, !dbg !11677
  %129 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11678
  %data_busaddr200 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %129, i32 0, i32 23, !dbg !11678
  %130 = load i64, i64* %data_busaddr200, align 8, !dbg !11678
  %conv201 = trunc i64 %130 to i32, !dbg !11678
  %131 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11679
  %cmd202 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %131, i32 0, i32 0, !dbg !11680
  %basic_io203 = bitcast %union.IPS_HOST_COMMAND* %cmd202 to %struct.IPS_IO_CMD*, !dbg !11681
  %sg_addr204 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io203, i32 0, i32 5, !dbg !11682
  store i32 %conv201, i32* %sg_addr204, align 8, !dbg !11683
  br label %if.end229, !dbg !11684

if.else205:                                       ; preds = %sw.bb182
  %132 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11685
  %scsi_cmd206 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %132, i32 0, i32 18, !dbg !11687
  %133 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd206, align 8, !dbg !11687
  %cmnd207 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %133, i32 0, i32 14, !dbg !11688
  %134 = load i8*, i8** %cmnd207, align 8, !dbg !11688
  %arrayidx208 = getelementptr i8, i8* %134, i64 0, !dbg !11685
  %135 = load i8, i8* %arrayidx208, align 1, !dbg !11685
  %conv209 = zext i8 %135 to i32, !dbg !11685
  %cmp210 = icmp eq i32 %conv209, 40, !dbg !11689
  %136 = zext i1 %cmp210 to i64, !dbg !11690
  %cond212 = select i1 %cmp210, i32 130, i32 131, !dbg !11690
  %conv213 = trunc i32 %cond212 to i8, !dbg !11690
  %137 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11691
  %cmd214 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %137, i32 0, i32 0, !dbg !11692
  %basic_io215 = bitcast %union.IPS_HOST_COMMAND* %cmd214 to %struct.IPS_IO_CMD*, !dbg !11693
  %op_code216 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io215, i32 0, i32 0, !dbg !11694
  store i8 %conv213, i8* %op_code216, align 8, !dbg !11695
  %138 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11696
  %flags217 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %138, i32 0, i32 28, !dbg !11696
  %139 = load i32, i32* %flags217, align 8, !dbg !11696
  %and218 = and i32 %139, 1, !dbg !11696
  %tobool219 = icmp ne i32 %and218, 0, !dbg !11696
  %140 = zext i1 %tobool219 to i64, !dbg !11696
  %cond220 = select i1 %tobool219, i32 255, i32 0, !dbg !11696
  %conv221 = trunc i32 %cond220 to i8, !dbg !11696
  %141 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11697
  %cmd222 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %141, i32 0, i32 0, !dbg !11698
  %basic_io223 = bitcast %union.IPS_HOST_COMMAND* %cmd222 to %struct.IPS_IO_CMD*, !dbg !11699
  %enhanced_sg224 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io223, i32 0, i32 8, !dbg !11700
  store i8 %conv221, i8* %enhanced_sg224, align 1, !dbg !11701
  %142 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11702
  %sg_busaddr225 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %142, i32 0, i32 21, !dbg !11702
  %143 = load i32, i32* %sg_busaddr225, align 8, !dbg !11702
  %144 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11703
  %cmd226 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %144, i32 0, i32 0, !dbg !11704
  %basic_io227 = bitcast %union.IPS_HOST_COMMAND* %cmd226 to %struct.IPS_IO_CMD*, !dbg !11705
  %sg_addr228 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io227, i32 0, i32 5, !dbg !11706
  store i32 %143, i32* %sg_addr228, align 8, !dbg !11707
  br label %if.end229

if.end229:                                        ; preds = %if.else205, %if.then185
  %145 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11708
  %cmd230 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %145, i32 0, i32 0, !dbg !11709
  %basic_io231 = bitcast %union.IPS_HOST_COMMAND* %cmd230 to %struct.IPS_IO_CMD*, !dbg !11710
  %segment_4G232 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io231, i32 0, i32 7, !dbg !11711
  store i8 0, i8* %segment_4G232, align 2, !dbg !11712
  %146 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11713
  %147 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11713
  %scbs233 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %147, i32 0, i32 12, !dbg !11713
  %148 = load %struct.ips_scb*, %struct.ips_scb** %scbs233, align 8, !dbg !11713
  %sub.ptr.lhs.cast234 = ptrtoint %struct.ips_scb* %146 to i64, !dbg !11713
  %sub.ptr.rhs.cast235 = ptrtoint %struct.ips_scb* %148 to i64, !dbg !11713
  %sub.ptr.sub236 = sub i64 %sub.ptr.lhs.cast234, %sub.ptr.rhs.cast235, !dbg !11713
  %sub.ptr.div237 = sdiv exact i64 %sub.ptr.sub236, 216, !dbg !11713
  %conv238 = trunc i64 %sub.ptr.div237 to i32, !dbg !11713
  %conv239 = trunc i32 %conv238 to i8, !dbg !11713
  %149 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11714
  %cmd240 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %149, i32 0, i32 0, !dbg !11715
  %basic_io241 = bitcast %union.IPS_HOST_COMMAND* %cmd240 to %struct.IPS_IO_CMD*, !dbg !11716
  %command_id242 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io241, i32 0, i32 1, !dbg !11717
  store i8 %conv239, i8* %command_id242, align 1, !dbg !11718
  %150 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11719
  %target_id243 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %150, i32 0, i32 2, !dbg !11720
  %151 = load i8, i8* %target_id243, align 4, !dbg !11720
  %152 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11721
  %cmd244 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %152, i32 0, i32 0, !dbg !11722
  %basic_io245 = bitcast %union.IPS_HOST_COMMAND* %cmd244 to %struct.IPS_IO_CMD*, !dbg !11723
  %log_drv246 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io245, i32 0, i32 2, !dbg !11724
  store i8 %151, i8* %log_drv246, align 2, !dbg !11725
  %153 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11726
  %sg_len247 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %153, i32 0, i32 14, !dbg !11727
  %154 = load i32, i32* %sg_len247, align 8, !dbg !11727
  %conv248 = trunc i32 %154 to i8, !dbg !11726
  %155 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11728
  %cmd249 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %155, i32 0, i32 0, !dbg !11729
  %basic_io250 = bitcast %union.IPS_HOST_COMMAND* %cmd249 to %struct.IPS_IO_CMD*, !dbg !11730
  %sg_count251 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io250, i32 0, i32 3, !dbg !11731
  store i8 %conv248, i8* %sg_count251, align 1, !dbg !11732
  %156 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11733
  %cmd252 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %156, i32 0, i32 0, !dbg !11735
  %basic_io253 = bitcast %union.IPS_HOST_COMMAND* %cmd252 to %struct.IPS_IO_CMD*, !dbg !11736
  %lba254 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io253, i32 0, i32 4, !dbg !11737
  %157 = load i32, i32* %lba254, align 4, !dbg !11737
  %tobool255 = icmp ne i32 %157, 0, !dbg !11733
  br i1 %tobool255, label %if.then256, label %if.else264, !dbg !11738

if.then256:                                       ; preds = %if.end229
  %158 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11739
  %cmd257 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %158, i32 0, i32 0, !dbg !11740
  %basic_io258 = bitcast %union.IPS_HOST_COMMAND* %cmd257 to %struct.IPS_IO_CMD*, !dbg !11741
  %lba259 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io258, i32 0, i32 4, !dbg !11742
  %159 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11743
  %cmd260 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %159, i32 0, i32 0, !dbg !11743
  %basic_io261 = bitcast %union.IPS_HOST_COMMAND* %cmd260 to %struct.IPS_IO_CMD*, !dbg !11743
  %sector_count262 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io261, i32 0, i32 6, !dbg !11743
  %160 = load i16, i16* %sector_count262, align 4, !dbg !11743
  %conv263 = zext i16 %160 to i32, !dbg !11743
  call void @le32_add_cpu(i32* %lba259, i32 %conv263) #11, !dbg !11744
  br label %if.end290, !dbg !11744

if.else264:                                       ; preds = %if.end229
  %161 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11745
  %scsi_cmd265 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %161, i32 0, i32 18, !dbg !11746
  %162 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd265, align 8, !dbg !11746
  %cmnd266 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %162, i32 0, i32 14, !dbg !11747
  %163 = load i8*, i8** %cmnd266, align 8, !dbg !11747
  %arrayidx267 = getelementptr i8, i8* %163, i64 2, !dbg !11745
  %164 = load i8, i8* %arrayidx267, align 1, !dbg !11745
  %conv268 = zext i8 %164 to i32, !dbg !11745
  %shl269 = shl i32 %conv268, 24, !dbg !11748
  %165 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11749
  %scsi_cmd270 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %165, i32 0, i32 18, !dbg !11750
  %166 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd270, align 8, !dbg !11750
  %cmnd271 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %166, i32 0, i32 14, !dbg !11751
  %167 = load i8*, i8** %cmnd271, align 8, !dbg !11751
  %arrayidx272 = getelementptr i8, i8* %167, i64 3, !dbg !11749
  %168 = load i8, i8* %arrayidx272, align 1, !dbg !11749
  %conv273 = zext i8 %168 to i32, !dbg !11749
  %shl274 = shl i32 %conv273, 16, !dbg !11752
  %or275 = or i32 %shl269, %shl274, !dbg !11753
  %169 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11754
  %scsi_cmd276 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %169, i32 0, i32 18, !dbg !11755
  %170 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd276, align 8, !dbg !11755
  %cmnd277 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %170, i32 0, i32 14, !dbg !11756
  %171 = load i8*, i8** %cmnd277, align 8, !dbg !11756
  %arrayidx278 = getelementptr i8, i8* %171, i64 4, !dbg !11754
  %172 = load i8, i8* %arrayidx278, align 1, !dbg !11754
  %conv279 = zext i8 %172 to i32, !dbg !11754
  %shl280 = shl i32 %conv279, 8, !dbg !11757
  %or281 = or i32 %or275, %shl280, !dbg !11758
  %173 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11759
  %scsi_cmd282 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %173, i32 0, i32 18, !dbg !11760
  %174 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd282, align 8, !dbg !11760
  %cmnd283 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %174, i32 0, i32 14, !dbg !11761
  %175 = load i8*, i8** %cmnd283, align 8, !dbg !11761
  %arrayidx284 = getelementptr i8, i8* %175, i64 5, !dbg !11759
  %176 = load i8, i8* %arrayidx284, align 1, !dbg !11759
  %conv285 = zext i8 %176 to i32, !dbg !11759
  %or286 = or i32 %or281, %conv285, !dbg !11762
  %177 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11763
  %cmd287 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %177, i32 0, i32 0, !dbg !11764
  %basic_io288 = bitcast %union.IPS_HOST_COMMAND* %cmd287 to %struct.IPS_IO_CMD*, !dbg !11765
  %lba289 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io288, i32 0, i32 4, !dbg !11766
  store i32 %or286, i32* %lba289, align 4, !dbg !11767
  br label %if.end290

if.end290:                                        ; preds = %if.else264, %if.then256
  %178 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11768
  %data_len291 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %178, i32 0, i32 13, !dbg !11768
  %179 = load i32, i32* %data_len291, align 4, !dbg !11768
  %div292 = udiv i32 %179, 512, !dbg !11768
  %conv293 = trunc i32 %div292 to i16, !dbg !11768
  %180 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11769
  %cmd294 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %180, i32 0, i32 0, !dbg !11770
  %basic_io295 = bitcast %union.IPS_HOST_COMMAND* %cmd294 to %struct.IPS_IO_CMD*, !dbg !11771
  %sector_count296 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io295, i32 0, i32 6, !dbg !11772
  store i16 %conv293, i16* %sector_count296, align 4, !dbg !11773
  %181 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11774
  %cmd297 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %181, i32 0, i32 0, !dbg !11774
  %basic_io298 = bitcast %union.IPS_HOST_COMMAND* %cmd297 to %struct.IPS_IO_CMD*, !dbg !11774
  %sector_count299 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io298, i32 0, i32 6, !dbg !11774
  %182 = load i16, i16* %sector_count299, align 4, !dbg !11774
  %conv300 = zext i16 %182 to i32, !dbg !11774
  %cmp301 = icmp eq i32 %conv300, 0, !dbg !11776
  br i1 %cmp301, label %if.then303, label %if.else306, !dbg !11777

if.then303:                                       ; preds = %if.end290
  %183 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11778
  %scsi_cmd304 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %183, i32 0, i32 18, !dbg !11780
  %184 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd304, align 8, !dbg !11780
  %result305 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %184, i32 0, i32 24, !dbg !11781
  store i32 0, i32* %result305, align 8, !dbg !11782
  br label %if.end307, !dbg !11783

if.else306:                                       ; preds = %if.end290
  store i32 1, i32* %ret, align 4, !dbg !11784
  br label %if.end307

if.end307:                                        ; preds = %if.else306, %if.then303
  br label %sw.epilog, !dbg !11785

sw.bb308:                                         ; preds = %if.then19, %if.then19
  %185 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11786
  %scsi_cmd309 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %185, i32 0, i32 18, !dbg !11787
  %186 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd309, align 8, !dbg !11787
  %result310 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %186, i32 0, i32 24, !dbg !11788
  store i32 0, i32* %result310, align 8, !dbg !11789
  br label %sw.epilog, !dbg !11790

sw.bb311:                                         ; preds = %if.then19
  %187 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11791
  %cmd312 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %187, i32 0, i32 0, !dbg !11792
  %basic_io313 = bitcast %union.IPS_HOST_COMMAND* %cmd312 to %struct.IPS_IO_CMD*, !dbg !11793
  %op_code314 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io313, i32 0, i32 0, !dbg !11794
  store i8 5, i8* %op_code314, align 8, !dbg !11795
  %188 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11796
  %189 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11796
  %scbs315 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %189, i32 0, i32 12, !dbg !11796
  %190 = load %struct.ips_scb*, %struct.ips_scb** %scbs315, align 8, !dbg !11796
  %sub.ptr.lhs.cast316 = ptrtoint %struct.ips_scb* %188 to i64, !dbg !11796
  %sub.ptr.rhs.cast317 = ptrtoint %struct.ips_scb* %190 to i64, !dbg !11796
  %sub.ptr.sub318 = sub i64 %sub.ptr.lhs.cast316, %sub.ptr.rhs.cast317, !dbg !11796
  %sub.ptr.div319 = sdiv exact i64 %sub.ptr.sub318, 216, !dbg !11796
  %conv320 = trunc i64 %sub.ptr.div319 to i32, !dbg !11796
  %conv321 = trunc i32 %conv320 to i8, !dbg !11796
  %191 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11797
  %cmd322 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %191, i32 0, i32 0, !dbg !11798
  %basic_io323 = bitcast %union.IPS_HOST_COMMAND* %cmd322 to %struct.IPS_IO_CMD*, !dbg !11799
  %command_id324 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io323, i32 0, i32 1, !dbg !11800
  store i8 %conv321, i8* %command_id324, align 1, !dbg !11801
  %192 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11802
  %cmd325 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %192, i32 0, i32 0, !dbg !11803
  %basic_io326 = bitcast %union.IPS_HOST_COMMAND* %cmd325 to %struct.IPS_IO_CMD*, !dbg !11804
  %segment_4G327 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io326, i32 0, i32 7, !dbg !11805
  store i8 0, i8* %segment_4G327, align 2, !dbg !11806
  %193 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11807
  %cmd328 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %193, i32 0, i32 0, !dbg !11808
  %basic_io329 = bitcast %union.IPS_HOST_COMMAND* %cmd328 to %struct.IPS_IO_CMD*, !dbg !11809
  %enhanced_sg330 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io329, i32 0, i32 8, !dbg !11810
  store i8 0, i8* %enhanced_sg330, align 1, !dbg !11811
  %194 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11812
  %data_len331 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %194, i32 0, i32 13, !dbg !11813
  store i32 196, i32* %data_len331, align 4, !dbg !11814
  %195 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11815
  %enq_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %195, i32 0, i32 49, !dbg !11816
  %196 = load i64, i64* %enq_busaddr, align 8, !dbg !11816
  %conv332 = trunc i64 %196 to i32, !dbg !11815
  %197 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11817
  %cmd333 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %197, i32 0, i32 0, !dbg !11818
  %basic_io334 = bitcast %union.IPS_HOST_COMMAND* %cmd333 to %struct.IPS_IO_CMD*, !dbg !11819
  %sg_addr335 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io334, i32 0, i32 5, !dbg !11820
  store i32 %conv332, i32* %sg_addr335, align 8, !dbg !11821
  store i32 1, i32* %ret, align 4, !dbg !11822
  br label %sw.epilog, !dbg !11823

sw.bb336:                                         ; preds = %if.then19
  %198 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11824
  %cmd337 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %198, i32 0, i32 0, !dbg !11825
  %logical_info338 = bitcast %union.IPS_HOST_COMMAND* %cmd337 to %struct.IPS_LD_CMD*, !dbg !11826
  %op_code339 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info338, i32 0, i32 0, !dbg !11827
  store i8 25, i8* %op_code339, align 8, !dbg !11828
  %199 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11829
  %200 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11829
  %scbs340 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %200, i32 0, i32 12, !dbg !11829
  %201 = load %struct.ips_scb*, %struct.ips_scb** %scbs340, align 8, !dbg !11829
  %sub.ptr.lhs.cast341 = ptrtoint %struct.ips_scb* %199 to i64, !dbg !11829
  %sub.ptr.rhs.cast342 = ptrtoint %struct.ips_scb* %201 to i64, !dbg !11829
  %sub.ptr.sub343 = sub i64 %sub.ptr.lhs.cast341, %sub.ptr.rhs.cast342, !dbg !11829
  %sub.ptr.div344 = sdiv exact i64 %sub.ptr.sub343, 216, !dbg !11829
  %conv345 = trunc i64 %sub.ptr.div344 to i32, !dbg !11829
  %conv346 = trunc i32 %conv345 to i8, !dbg !11829
  %202 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11830
  %cmd347 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %202, i32 0, i32 0, !dbg !11831
  %logical_info348 = bitcast %union.IPS_HOST_COMMAND* %cmd347 to %struct.IPS_LD_CMD*, !dbg !11832
  %command_id349 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info348, i32 0, i32 1, !dbg !11833
  store i8 %conv346, i8* %command_id349, align 1, !dbg !11834
  %203 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11835
  %cmd350 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %203, i32 0, i32 0, !dbg !11836
  %logical_info351 = bitcast %union.IPS_HOST_COMMAND* %cmd350 to %struct.IPS_LD_CMD*, !dbg !11837
  %reserved352 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info351, i32 0, i32 2, !dbg !11838
  store i16 0, i16* %reserved352, align 2, !dbg !11839
  %204 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11840
  %cmd353 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %204, i32 0, i32 0, !dbg !11841
  %logical_info354 = bitcast %union.IPS_HOST_COMMAND* %cmd353 to %struct.IPS_LD_CMD*, !dbg !11842
  %reserved2355 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info354, i32 0, i32 3, !dbg !11843
  store i32 0, i32* %reserved2355, align 4, !dbg !11844
  %205 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11845
  %cmd356 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %205, i32 0, i32 0, !dbg !11846
  %logical_info357 = bitcast %union.IPS_HOST_COMMAND* %cmd356 to %struct.IPS_LD_CMD*, !dbg !11847
  %reserved3 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info357, i32 0, i32 5, !dbg !11848
  store i32 0, i32* %reserved3, align 4, !dbg !11849
  %206 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11850
  %data_len358 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %206, i32 0, i32 13, !dbg !11851
  store i32 68, i32* %data_len358, align 4, !dbg !11852
  %207 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11853
  %logical_drive_info_dma_addr359 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %207, i32 0, i32 20, !dbg !11854
  %208 = load i64, i64* %logical_drive_info_dma_addr359, align 8, !dbg !11854
  %209 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11855
  %data_busaddr360 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %209, i32 0, i32 23, !dbg !11856
  store i64 %208, i64* %data_busaddr360, align 8, !dbg !11857
  %210 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11858
  %flags361 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %210, i32 0, i32 15, !dbg !11859
  store i32 0, i32* %flags361, align 4, !dbg !11860
  %211 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11861
  %data_busaddr362 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %211, i32 0, i32 23, !dbg !11862
  %212 = load i64, i64* %data_busaddr362, align 8, !dbg !11862
  %conv363 = trunc i64 %212 to i32, !dbg !11861
  %213 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11863
  %cmd364 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %213, i32 0, i32 0, !dbg !11864
  %logical_info365 = bitcast %union.IPS_HOST_COMMAND* %cmd364 to %struct.IPS_LD_CMD*, !dbg !11865
  %buffer_addr366 = getelementptr inbounds %struct.IPS_LD_CMD, %struct.IPS_LD_CMD* %logical_info365, i32 0, i32 4, !dbg !11866
  store i32 %conv363, i32* %buffer_addr366, align 8, !dbg !11867
  store i32 1, i32* %ret, align 4, !dbg !11868
  br label %sw.epilog, !dbg !11869

sw.bb367:                                         ; preds = %if.then19, %if.then19, %if.then19, %if.then19, %if.then19, %if.then19, %if.then19, %if.then19
  %214 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11870
  %scsi_cmd368 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %214, i32 0, i32 18, !dbg !11871
  %215 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd368, align 8, !dbg !11871
  %result369 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %215, i32 0, i32 24, !dbg !11872
  store i32 0, i32* %result369, align 8, !dbg !11873
  br label %sw.epilog, !dbg !11874

sw.default:                                       ; preds = %if.then19
  %216 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11875
  %scsi_cmd370 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %216, i32 0, i32 18, !dbg !11876
  %217 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd370, align 8, !dbg !11876
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %217, i32 0, i32 20, !dbg !11877
  %218 = load i8*, i8** %sense_buffer, align 8, !dbg !11877
  store i8* %218, i8** %sp, align 8, !dbg !11878
  %219 = load i8*, i8** %sp, align 8, !dbg !11879
  %arrayidx371 = getelementptr i8, i8* %219, i64 0, !dbg !11879
  store i8 112, i8* %arrayidx371, align 1, !dbg !11880
  %220 = load i8*, i8** %sp, align 8, !dbg !11881
  %arrayidx372 = getelementptr i8, i8* %220, i64 2, !dbg !11881
  store i8 5, i8* %arrayidx372, align 1, !dbg !11882
  %221 = load i8*, i8** %sp, align 8, !dbg !11883
  %arrayidx373 = getelementptr i8, i8* %221, i64 7, !dbg !11883
  store i8 10, i8* %arrayidx373, align 1, !dbg !11884
  %222 = load i8*, i8** %sp, align 8, !dbg !11885
  %arrayidx374 = getelementptr i8, i8* %222, i64 12, !dbg !11885
  store i8 32, i8* %arrayidx374, align 1, !dbg !11886
  %223 = load i8*, i8** %sp, align 8, !dbg !11887
  %arrayidx375 = getelementptr i8, i8* %223, i64 13, !dbg !11887
  store i8 0, i8* %arrayidx375, align 1, !dbg !11888
  store i32 2, i32* %device_error, align 4, !dbg !11889
  %224 = load i32, i32* %device_error, align 4, !dbg !11890
  %225 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11891
  %scsi_cmd376 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %225, i32 0, i32 18, !dbg !11892
  %226 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd376, align 8, !dbg !11892
  %result377 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %226, i32 0, i32 24, !dbg !11893
  store i32 %224, i32* %result377, align 8, !dbg !11894
  br label %sw.epilog, !dbg !11895

sw.epilog:                                        ; preds = %sw.default, %sw.bb367, %sw.bb336, %sw.bb311, %sw.bb308, %if.end307, %if.end181, %sw.bb72, %if.end71, %sw.bb24, %sw.bb
  br label %if.end378, !dbg !11896

if.end378:                                        ; preds = %sw.epilog, %land.lhs.true16, %if.else
  br label %if.end379

if.end379:                                        ; preds = %if.end378, %if.end11
  %227 = load i32, i32* %ret, align 4, !dbg !11897
  %cmp380 = icmp eq i32 %227, 2, !dbg !11899
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !11900

if.then382:                                       ; preds = %if.end379
  %228 = load i32, i32* %ret, align 4, !dbg !11901
  store i32 %228, i32* %retval, align 4, !dbg !11902
  br label %return, !dbg !11902

if.end383:                                        ; preds = %if.end379
  %229 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11903
  %bus384 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %229, i32 0, i32 3, !dbg !11905
  %230 = load i8, i8* %bus384, align 1, !dbg !11905
  %conv385 = zext i8 %230 to i32, !dbg !11903
  %cmp386 = icmp sgt i32 %conv385, 0, !dbg !11906
  br i1 %cmp386, label %if.then388, label %if.end665, !dbg !11907

if.then388:                                       ; preds = %if.end383
  %231 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11908
  %conf = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %231, i32 0, i32 22, !dbg !11911
  %232 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf, align 8, !dbg !11911
  %dev = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %232, i32 0, i32 13, !dbg !11912
  %233 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11913
  %bus389 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %233, i32 0, i32 3, !dbg !11914
  %234 = load i8, i8* %bus389, align 1, !dbg !11914
  %conv390 = zext i8 %234 to i32, !dbg !11913
  %sub = sub i32 %conv390, 1, !dbg !11915
  %idxprom = sext i32 %sub to i64, !dbg !11908
  %arrayidx391 = getelementptr [4 x [16 x %struct.IPS_DEVSTATE]], [4 x [16 x %struct.IPS_DEVSTATE]]* %dev, i64 0, i64 %idxprom, !dbg !11908
  %235 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11916
  %target_id392 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %235, i32 0, i32 2, !dbg !11917
  %236 = load i8, i8* %target_id392, align 4, !dbg !11917
  %idxprom393 = zext i8 %236 to i64, !dbg !11908
  %arrayidx394 = getelementptr [16 x %struct.IPS_DEVSTATE], [16 x %struct.IPS_DEVSTATE]* %arrayidx391, i64 0, i64 %idxprom393, !dbg !11908
  %ucState = getelementptr inbounds %struct.IPS_DEVSTATE, %struct.IPS_DEVSTATE* %arrayidx394, i32 0, i32 3, !dbg !11918
  %237 = load i8, i8* %ucState, align 1, !dbg !11918
  %conv395 = zext i8 %237 to i32, !dbg !11908
  %cmp396 = icmp eq i32 %conv395, 0, !dbg !11919
  br i1 %cmp396, label %if.then398, label %if.end401, !dbg !11920

if.then398:                                       ; preds = %if.then388
  %238 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11921
  %scsi_cmd399 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %238, i32 0, i32 18, !dbg !11923
  %239 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd399, align 8, !dbg !11923
  %result400 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %239, i32 0, i32 24, !dbg !11924
  store i32 65536, i32* %result400, align 8, !dbg !11925
  store i32 2, i32* %retval, align 4, !dbg !11926
  br label %return, !dbg !11926

if.end401:                                        ; preds = %if.then388
  %240 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11927
  %target_id402 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %240, i32 0, i32 2, !dbg !11928
  %241 = load i8, i8* %target_id402, align 4, !dbg !11928
  %conv403 = zext i8 %241 to i32, !dbg !11927
  %shl404 = shl i32 1, %conv403, !dbg !11929
  %242 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11930
  %dcdb_active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %242, i32 0, i32 1, !dbg !11931
  %243 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11932
  %bus405 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %243, i32 0, i32 3, !dbg !11933
  %244 = load i8, i8* %bus405, align 1, !dbg !11933
  %conv406 = zext i8 %244 to i32, !dbg !11932
  %sub407 = sub i32 %conv406, 1, !dbg !11934
  %idxprom408 = sext i32 %sub407 to i64, !dbg !11930
  %arrayidx409 = getelementptr [4 x i32], [4 x i32]* %dcdb_active, i64 0, i64 %idxprom408, !dbg !11930
  %245 = load i32, i32* %arrayidx409, align 4, !dbg !11935
  %or410 = or i32 %245, %shl404, !dbg !11935
  store i32 %or410, i32* %arrayidx409, align 4, !dbg !11935
  %246 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11936
  %247 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11936
  %scbs411 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %247, i32 0, i32 12, !dbg !11936
  %248 = load %struct.ips_scb*, %struct.ips_scb** %scbs411, align 8, !dbg !11936
  %sub.ptr.lhs.cast412 = ptrtoint %struct.ips_scb* %246 to i64, !dbg !11936
  %sub.ptr.rhs.cast413 = ptrtoint %struct.ips_scb* %248 to i64, !dbg !11936
  %sub.ptr.sub414 = sub i64 %sub.ptr.lhs.cast412, %sub.ptr.rhs.cast413, !dbg !11936
  %sub.ptr.div415 = sdiv exact i64 %sub.ptr.sub414, 216, !dbg !11936
  %conv416 = trunc i64 %sub.ptr.div415 to i32, !dbg !11936
  %conv417 = trunc i32 %conv416 to i8, !dbg !11936
  %249 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11937
  %cmd418 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %249, i32 0, i32 0, !dbg !11938
  %dcdb = bitcast %union.IPS_HOST_COMMAND* %cmd418 to %struct.IPS_DCDB_CMD*, !dbg !11939
  %command_id419 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb, i32 0, i32 1, !dbg !11940
  store i8 %conv417, i8* %command_id419, align 1, !dbg !11941
  %250 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11942
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %250, i32 0, i32 6, !dbg !11942
  %251 = load i32, i32* %scb_busaddr, align 4, !dbg !11942
  %conv420 = zext i32 %251 to i64, !dbg !11942
  %252 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11942
  %dcdb421 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %252, i32 0, i32 1, !dbg !11942
  %253 = ptrtoint %struct.IPS_DCDB_TABLE* %dcdb421 to i64, !dbg !11942
  %add = add i64 %conv420, %253, !dbg !11942
  %254 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11942
  %255 = ptrtoint %struct.ips_scb* %254 to i64, !dbg !11942
  %sub422 = sub i64 %add, %255, !dbg !11942
  %conv423 = trunc i64 %sub422 to i32, !dbg !11942
  %256 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11943
  %cmd424 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %256, i32 0, i32 0, !dbg !11944
  %dcdb425 = bitcast %union.IPS_HOST_COMMAND* %cmd424 to %struct.IPS_DCDB_CMD*, !dbg !11945
  %dcdb_address = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb425, i32 0, i32 4, !dbg !11946
  store i32 %conv423, i32* %dcdb_address, align 8, !dbg !11947
  %257 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11948
  %cmd426 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %257, i32 0, i32 0, !dbg !11949
  %dcdb427 = bitcast %union.IPS_HOST_COMMAND* %cmd426 to %struct.IPS_DCDB_CMD*, !dbg !11950
  %reserved428 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb427, i32 0, i32 2, !dbg !11951
  store i16 0, i16* %reserved428, align 2, !dbg !11952
  %258 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11953
  %cmd429 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %258, i32 0, i32 0, !dbg !11954
  %dcdb430 = bitcast %union.IPS_HOST_COMMAND* %cmd429 to %struct.IPS_DCDB_CMD*, !dbg !11955
  %reserved2431 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb430, i32 0, i32 3, !dbg !11956
  store i32 0, i32* %reserved2431, align 4, !dbg !11957
  %259 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11958
  %cmd432 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %259, i32 0, i32 0, !dbg !11959
  %dcdb433 = bitcast %union.IPS_HOST_COMMAND* %cmd432 to %struct.IPS_DCDB_CMD*, !dbg !11960
  %reserved3434 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb433, i32 0, i32 5, !dbg !11961
  store i16 0, i16* %reserved3434, align 4, !dbg !11962
  %260 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11963
  %cmd435 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %260, i32 0, i32 0, !dbg !11964
  %dcdb436 = bitcast %union.IPS_HOST_COMMAND* %cmd435 to %struct.IPS_DCDB_CMD*, !dbg !11965
  %segment_4G437 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb436, i32 0, i32 6, !dbg !11966
  store i8 0, i8* %segment_4G437, align 2, !dbg !11967
  %261 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11968
  %cmd438 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %261, i32 0, i32 0, !dbg !11969
  %dcdb439 = bitcast %union.IPS_HOST_COMMAND* %cmd438 to %struct.IPS_DCDB_CMD*, !dbg !11970
  %enhanced_sg440 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb439, i32 0, i32 7, !dbg !11971
  store i8 0, i8* %enhanced_sg440, align 1, !dbg !11972
  %262 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11973
  %scsi_cmd441 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %262, i32 0, i32 18, !dbg !11974
  %263 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd441, align 8, !dbg !11974
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %263, i32 0, i32 19, !dbg !11975
  %264 = load %struct.request*, %struct.request** %request, align 8, !dbg !11975
  %timeout = getelementptr inbounds %struct.request, %struct.request* %264, i32 0, i32 26, !dbg !11976
  %265 = load i32, i32* %timeout, align 4, !dbg !11976
  store i32 %265, i32* %TimeOut, align 4, !dbg !11977
  %266 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !11978
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %266, i32 0, i32 24, !dbg !11980
  %267 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !11980
  %param = getelementptr inbounds %struct._IPS_SUBSYS, %struct._IPS_SUBSYS* %267, i32 0, i32 0, !dbg !11981
  %arrayidx442 = getelementptr [128 x i32], [128 x i32]* %param, i64 0, i64 4, !dbg !11978
  %268 = load i32, i32* %arrayidx442, align 4, !dbg !11978
  %and443 = and i32 %268, 1048576, !dbg !11982
  %tobool444 = icmp ne i32 %and443, 0, !dbg !11982
  br i1 %tobool444, label %if.then445, label %if.else536, !dbg !11983

if.then445:                                       ; preds = %if.end401
  %269 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11984
  %sg_len446 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %269, i32 0, i32 14, !dbg !11987
  %270 = load i32, i32* %sg_len446, align 8, !dbg !11987
  %tobool447 = icmp ne i32 %270, 0, !dbg !11984
  br i1 %tobool447, label %if.else452, label %if.then448, !dbg !11988

if.then448:                                       ; preds = %if.then445
  %271 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11989
  %cmd449 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %271, i32 0, i32 0, !dbg !11991
  %dcdb450 = bitcast %union.IPS_HOST_COMMAND* %cmd449 to %struct.IPS_DCDB_CMD*, !dbg !11992
  %op_code451 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb450, i32 0, i32 0, !dbg !11993
  store i8 -107, i8* %op_code451, align 8, !dbg !11994
  br label %if.end464, !dbg !11995

if.else452:                                       ; preds = %if.then445
  %272 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !11996
  %cmd453 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %272, i32 0, i32 0, !dbg !11998
  %dcdb454 = bitcast %union.IPS_HOST_COMMAND* %cmd453 to %struct.IPS_DCDB_CMD*, !dbg !11999
  %op_code455 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb454, i32 0, i32 0, !dbg !12000
  store i8 -106, i8* %op_code455, align 8, !dbg !12001
  %273 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12002
  %flags456 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %273, i32 0, i32 28, !dbg !12002
  %274 = load i32, i32* %flags456, align 8, !dbg !12002
  %and457 = and i32 %274, 1, !dbg !12002
  %tobool458 = icmp ne i32 %and457, 0, !dbg !12002
  %275 = zext i1 %tobool458 to i64, !dbg !12002
  %cond459 = select i1 %tobool458, i32 255, i32 0, !dbg !12002
  %conv460 = trunc i32 %cond459 to i8, !dbg !12002
  %276 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12003
  %cmd461 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %276, i32 0, i32 0, !dbg !12004
  %dcdb462 = bitcast %union.IPS_HOST_COMMAND* %cmd461 to %struct.IPS_DCDB_CMD*, !dbg !12005
  %enhanced_sg463 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb462, i32 0, i32 7, !dbg !12006
  store i8 %conv460, i8* %enhanced_sg463, align 1, !dbg !12007
  br label %if.end464

if.end464:                                        ; preds = %if.else452, %if.then448
  %277 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12008
  %dcdb465 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %277, i32 0, i32 1, !dbg !12009
  %278 = bitcast %struct.IPS_DCDB_TABLE* %dcdb465 to %struct.IPS_DCDB_TABLE_TAPE*, !dbg !12010
  store %struct.IPS_DCDB_TABLE_TAPE* %278, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12011
  %279 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12012
  %bus466 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %279, i32 0, i32 3, !dbg !12013
  %280 = load i8, i8* %bus466, align 1, !dbg !12013
  %conv467 = zext i8 %280 to i32, !dbg !12012
  %sub468 = sub i32 %conv467, 1, !dbg !12014
  %shl469 = shl i32 %sub468, 4, !dbg !12015
  %281 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12016
  %target_id470 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %281, i32 0, i32 2, !dbg !12017
  %282 = load i8, i8* %target_id470, align 4, !dbg !12017
  %conv471 = zext i8 %282 to i32, !dbg !12016
  %or472 = or i32 %shl469, %conv471, !dbg !12018
  %conv473 = trunc i32 %or472 to i8, !dbg !12019
  %283 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12020
  %device_address = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %283, i32 0, i32 0, !dbg !12021
  store i8 %conv473, i8* %device_address, align 4, !dbg !12022
  %284 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12023
  %cmd_attribute = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %284, i32 0, i32 1, !dbg !12024
  %285 = load i8, i8* %cmd_attribute, align 1, !dbg !12025
  %conv474 = zext i8 %285 to i32, !dbg !12025
  %or475 = or i32 %conv474, 128, !dbg !12025
  %conv476 = trunc i32 %or475 to i8, !dbg !12025
  store i8 %conv476, i8* %cmd_attribute, align 1, !dbg !12025
  %286 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12026
  %cmd_attribute477 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %286, i32 0, i32 1, !dbg !12027
  %287 = load i8, i8* %cmd_attribute477, align 1, !dbg !12028
  %conv478 = zext i8 %287 to i32, !dbg !12028
  %and479 = and i32 %conv478, -9, !dbg !12028
  %conv480 = trunc i32 %and479 to i8, !dbg !12028
  store i8 %conv480, i8* %cmd_attribute477, align 1, !dbg !12028
  %288 = load i32, i32* %TimeOut, align 4, !dbg !12029
  %tobool481 = icmp ne i32 %288, 0, !dbg !12029
  br i1 %tobool481, label %if.then482, label %if.end509, !dbg !12031

if.then482:                                       ; preds = %if.end464
  %289 = load i32, i32* %TimeOut, align 4, !dbg !12032
  %cmp483 = icmp slt i32 %289, 2500, !dbg !12035
  br i1 %cmp483, label %if.then485, label %if.else490, !dbg !12036

if.then485:                                       ; preds = %if.then482
  %290 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12037
  %cmd_attribute486 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %290, i32 0, i32 1, !dbg !12038
  %291 = load i8, i8* %cmd_attribute486, align 1, !dbg !12039
  %conv487 = zext i8 %291 to i32, !dbg !12039
  %or488 = or i32 %conv487, 16, !dbg !12039
  %conv489 = trunc i32 %or488 to i8, !dbg !12039
  store i8 %conv489, i8* %cmd_attribute486, align 1, !dbg !12039
  br label %if.end508, !dbg !12037

if.else490:                                       ; preds = %if.then482
  %292 = load i32, i32* %TimeOut, align 4, !dbg !12040
  %cmp491 = icmp slt i32 %292, 15000, !dbg !12042
  br i1 %cmp491, label %if.then493, label %if.else498, !dbg !12043

if.then493:                                       ; preds = %if.else490
  %293 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12044
  %cmd_attribute494 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %293, i32 0, i32 1, !dbg !12045
  %294 = load i8, i8* %cmd_attribute494, align 1, !dbg !12046
  %conv495 = zext i8 %294 to i32, !dbg !12046
  %or496 = or i32 %conv495, 32, !dbg !12046
  %conv497 = trunc i32 %or496 to i8, !dbg !12046
  store i8 %conv497, i8* %cmd_attribute494, align 1, !dbg !12046
  br label %if.end507, !dbg !12044

if.else498:                                       ; preds = %if.else490
  %295 = load i32, i32* %TimeOut, align 4, !dbg !12047
  %cmp499 = icmp slt i32 %295, 300000, !dbg !12049
  br i1 %cmp499, label %if.then501, label %if.end506, !dbg !12050

if.then501:                                       ; preds = %if.else498
  %296 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12051
  %cmd_attribute502 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %296, i32 0, i32 1, !dbg !12052
  %297 = load i8, i8* %cmd_attribute502, align 1, !dbg !12053
  %conv503 = zext i8 %297 to i32, !dbg !12053
  %or504 = or i32 %conv503, 48, !dbg !12053
  %conv505 = trunc i32 %or504 to i8, !dbg !12053
  store i8 %conv505, i8* %cmd_attribute502, align 1, !dbg !12053
  br label %if.end506, !dbg !12051

if.end506:                                        ; preds = %if.then501, %if.else498
  br label %if.end507

if.end507:                                        ; preds = %if.end506, %if.then493
  br label %if.end508

if.end508:                                        ; preds = %if.end507, %if.then485
  br label %if.end509, !dbg !12054

if.end509:                                        ; preds = %if.end508, %if.end464
  %298 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12055
  %scsi_cmd510 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %298, i32 0, i32 18, !dbg !12056
  %299 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd510, align 8, !dbg !12056
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %299, i32 0, i32 12, !dbg !12057
  %300 = load i16, i16* %cmd_len, align 4, !dbg !12057
  %conv511 = trunc i16 %300 to i8, !dbg !12055
  %301 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12058
  %cdb_length = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %301, i32 0, i32 2, !dbg !12059
  store i8 %conv511, i8* %cdb_length, align 2, !dbg !12060
  %302 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12061
  %reserved_for_LUN = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %302, i32 0, i32 3, !dbg !12062
  store i8 0, i8* %reserved_for_LUN, align 1, !dbg !12063
  %303 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12064
  %data_len512 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %303, i32 0, i32 13, !dbg !12065
  %304 = load i32, i32* %data_len512, align 4, !dbg !12065
  %305 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12066
  %transfer_length = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %305, i32 0, i32 4, !dbg !12067
  store i32 %304, i32* %transfer_length, align 4, !dbg !12068
  %306 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12069
  %cmd513 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %306, i32 0, i32 0, !dbg !12071
  %dcdb514 = bitcast %union.IPS_HOST_COMMAND* %cmd513 to %struct.IPS_DCDB_CMD*, !dbg !12072
  %op_code515 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb514, i32 0, i32 0, !dbg !12073
  %307 = load i8, i8* %op_code515, align 8, !dbg !12073
  %conv516 = zext i8 %307 to i32, !dbg !12069
  %cmp517 = icmp eq i32 %conv516, 150, !dbg !12074
  br i1 %cmp517, label %if.then519, label %if.else521, !dbg !12075

if.then519:                                       ; preds = %if.end509
  %308 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12076
  %sg_busaddr520 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %308, i32 0, i32 21, !dbg !12076
  %309 = load i32, i32* %sg_busaddr520, align 8, !dbg !12076
  %310 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12077
  %buffer_pointer = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %310, i32 0, i32 5, !dbg !12078
  store i32 %309, i32* %buffer_pointer, align 4, !dbg !12079
  br label %if.end525, !dbg !12077

if.else521:                                       ; preds = %if.end509
  %311 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12080
  %data_busaddr522 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %311, i32 0, i32 23, !dbg !12080
  %312 = load i64, i64* %data_busaddr522, align 8, !dbg !12080
  %conv523 = trunc i64 %312 to i32, !dbg !12080
  %313 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12081
  %buffer_pointer524 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %313, i32 0, i32 5, !dbg !12082
  store i32 %conv523, i32* %buffer_pointer524, align 4, !dbg !12083
  br label %if.end525

if.end525:                                        ; preds = %if.else521, %if.then519
  %314 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12084
  %sg_len526 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %314, i32 0, i32 14, !dbg !12085
  %315 = load i32, i32* %sg_len526, align 8, !dbg !12085
  %conv527 = trunc i32 %315 to i16, !dbg !12084
  %316 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12086
  %sg_count528 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %316, i32 0, i32 6, !dbg !12087
  store i16 %conv527, i16* %sg_count528, align 4, !dbg !12088
  %317 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12089
  %sense_length = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %317, i32 0, i32 7, !dbg !12090
  store i8 56, i8* %sense_length, align 2, !dbg !12091
  %318 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12092
  %scsi_status = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %318, i32 0, i32 8, !dbg !12093
  store i8 0, i8* %scsi_status, align 1, !dbg !12094
  %319 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12095
  %reserved529 = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %319, i32 0, i32 9, !dbg !12096
  store i32 0, i32* %reserved529, align 4, !dbg !12097
  %320 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !12098
  %scsi_cdb = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %320, i32 0, i32 10, !dbg !12099
  %arraydecay530 = getelementptr inbounds [16 x i8], [16 x i8]* %scsi_cdb, i64 0, i64 0, !dbg !12100
  %321 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12101
  %scsi_cmd531 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %321, i32 0, i32 18, !dbg !12102
  %322 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd531, align 8, !dbg !12102
  %cmnd532 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %322, i32 0, i32 14, !dbg !12103
  %323 = load i8*, i8** %cmnd532, align 8, !dbg !12103
  %324 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12104
  %scsi_cmd533 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %324, i32 0, i32 18, !dbg !12105
  %325 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd533, align 8, !dbg !12105
  %cmd_len534 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %325, i32 0, i32 12, !dbg !12106
  %326 = load i16, i16* %cmd_len534, align 4, !dbg !12106
  %conv535 = zext i16 %326 to i64, !dbg !12104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay530, i8* align 1 %323, i64 %conv535, i1 false), !dbg !12100
  br label %if.end664, !dbg !12107

if.else536:                                       ; preds = %if.end401
  %327 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12108
  %sg_len537 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %327, i32 0, i32 14, !dbg !12111
  %328 = load i32, i32* %sg_len537, align 8, !dbg !12111
  %tobool538 = icmp ne i32 %328, 0, !dbg !12108
  br i1 %tobool538, label %if.else543, label %if.then539, !dbg !12112

if.then539:                                       ; preds = %if.else536
  %329 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12113
  %cmd540 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %329, i32 0, i32 0, !dbg !12115
  %dcdb541 = bitcast %union.IPS_HOST_COMMAND* %cmd540 to %struct.IPS_DCDB_CMD*, !dbg !12116
  %op_code542 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb541, i32 0, i32 0, !dbg !12117
  store i8 4, i8* %op_code542, align 8, !dbg !12118
  br label %if.end555, !dbg !12119

if.else543:                                       ; preds = %if.else536
  %330 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12120
  %cmd544 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %330, i32 0, i32 0, !dbg !12122
  %dcdb545 = bitcast %union.IPS_HOST_COMMAND* %cmd544 to %struct.IPS_DCDB_CMD*, !dbg !12123
  %op_code546 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb545, i32 0, i32 0, !dbg !12124
  store i8 -124, i8* %op_code546, align 8, !dbg !12125
  %331 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12126
  %flags547 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %331, i32 0, i32 28, !dbg !12126
  %332 = load i32, i32* %flags547, align 8, !dbg !12126
  %and548 = and i32 %332, 1, !dbg !12126
  %tobool549 = icmp ne i32 %and548, 0, !dbg !12126
  %333 = zext i1 %tobool549 to i64, !dbg !12126
  %cond550 = select i1 %tobool549, i32 255, i32 0, !dbg !12126
  %conv551 = trunc i32 %cond550 to i8, !dbg !12126
  %334 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12127
  %cmd552 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %334, i32 0, i32 0, !dbg !12128
  %dcdb553 = bitcast %union.IPS_HOST_COMMAND* %cmd552 to %struct.IPS_DCDB_CMD*, !dbg !12129
  %enhanced_sg554 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb553, i32 0, i32 7, !dbg !12130
  store i8 %conv551, i8* %enhanced_sg554, align 1, !dbg !12131
  br label %if.end555

if.end555:                                        ; preds = %if.else543, %if.then539
  %335 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12132
  %bus556 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %335, i32 0, i32 3, !dbg !12133
  %336 = load i8, i8* %bus556, align 1, !dbg !12133
  %conv557 = zext i8 %336 to i32, !dbg !12132
  %sub558 = sub i32 %conv557, 1, !dbg !12134
  %shl559 = shl i32 %sub558, 4, !dbg !12135
  %337 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12136
  %target_id560 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %337, i32 0, i32 2, !dbg !12137
  %338 = load i8, i8* %target_id560, align 4, !dbg !12137
  %conv561 = zext i8 %338 to i32, !dbg !12136
  %or562 = or i32 %shl559, %conv561, !dbg !12138
  %conv563 = trunc i32 %or562 to i8, !dbg !12139
  %339 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12140
  %dcdb564 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %339, i32 0, i32 1, !dbg !12141
  %device_address565 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb564, i32 0, i32 0, !dbg !12142
  store i8 %conv563, i8* %device_address565, align 8, !dbg !12143
  %340 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12144
  %dcdb566 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %340, i32 0, i32 1, !dbg !12145
  %cmd_attribute567 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb566, i32 0, i32 1, !dbg !12146
  %341 = load i8, i8* %cmd_attribute567, align 1, !dbg !12147
  %conv568 = zext i8 %341 to i32, !dbg !12147
  %or569 = or i32 %conv568, 128, !dbg !12147
  %conv570 = trunc i32 %or569 to i8, !dbg !12147
  store i8 %conv570, i8* %cmd_attribute567, align 1, !dbg !12147
  %342 = load i32, i32* %TimeOut, align 4, !dbg !12148
  %tobool571 = icmp ne i32 %342, 0, !dbg !12148
  br i1 %tobool571, label %if.then572, label %if.end602, !dbg !12150

if.then572:                                       ; preds = %if.end555
  %343 = load i32, i32* %TimeOut, align 4, !dbg !12151
  %cmp573 = icmp slt i32 %343, 2500, !dbg !12154
  br i1 %cmp573, label %if.then575, label %if.else581, !dbg !12155

if.then575:                                       ; preds = %if.then572
  %344 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12156
  %dcdb576 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %344, i32 0, i32 1, !dbg !12157
  %cmd_attribute577 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb576, i32 0, i32 1, !dbg !12158
  %345 = load i8, i8* %cmd_attribute577, align 1, !dbg !12159
  %conv578 = zext i8 %345 to i32, !dbg !12159
  %or579 = or i32 %conv578, 16, !dbg !12159
  %conv580 = trunc i32 %or579 to i8, !dbg !12159
  store i8 %conv580, i8* %cmd_attribute577, align 1, !dbg !12159
  br label %if.end601, !dbg !12156

if.else581:                                       ; preds = %if.then572
  %346 = load i32, i32* %TimeOut, align 4, !dbg !12160
  %cmp582 = icmp slt i32 %346, 15000, !dbg !12162
  br i1 %cmp582, label %if.then584, label %if.else590, !dbg !12163

if.then584:                                       ; preds = %if.else581
  %347 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12164
  %dcdb585 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %347, i32 0, i32 1, !dbg !12165
  %cmd_attribute586 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb585, i32 0, i32 1, !dbg !12166
  %348 = load i8, i8* %cmd_attribute586, align 1, !dbg !12167
  %conv587 = zext i8 %348 to i32, !dbg !12167
  %or588 = or i32 %conv587, 32, !dbg !12167
  %conv589 = trunc i32 %or588 to i8, !dbg !12167
  store i8 %conv589, i8* %cmd_attribute586, align 1, !dbg !12167
  br label %if.end600, !dbg !12164

if.else590:                                       ; preds = %if.else581
  %349 = load i32, i32* %TimeOut, align 4, !dbg !12168
  %cmp591 = icmp slt i32 %349, 300000, !dbg !12170
  br i1 %cmp591, label %if.then593, label %if.end599, !dbg !12171

if.then593:                                       ; preds = %if.else590
  %350 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12172
  %dcdb594 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %350, i32 0, i32 1, !dbg !12173
  %cmd_attribute595 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb594, i32 0, i32 1, !dbg !12174
  %351 = load i8, i8* %cmd_attribute595, align 1, !dbg !12175
  %conv596 = zext i8 %351 to i32, !dbg !12175
  %or597 = or i32 %conv596, 48, !dbg !12175
  %conv598 = trunc i32 %or597 to i8, !dbg !12175
  store i8 %conv598, i8* %cmd_attribute595, align 1, !dbg !12175
  br label %if.end599, !dbg !12172

if.end599:                                        ; preds = %if.then593, %if.else590
  br label %if.end600

if.end600:                                        ; preds = %if.end599, %if.then584
  br label %if.end601

if.end601:                                        ; preds = %if.end600, %if.then575
  br label %if.end602, !dbg !12176

if.end602:                                        ; preds = %if.end601, %if.end555
  %352 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12177
  %data_len603 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %352, i32 0, i32 13, !dbg !12178
  %353 = load i32, i32* %data_len603, align 4, !dbg !12178
  %conv604 = trunc i32 %353 to i16, !dbg !12177
  %354 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12179
  %dcdb605 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %354, i32 0, i32 1, !dbg !12180
  %transfer_length606 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb605, i32 0, i32 2, !dbg !12181
  store i16 %conv604, i16* %transfer_length606, align 2, !dbg !12182
  %355 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12183
  %dcdb607 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %355, i32 0, i32 1, !dbg !12185
  %cmd_attribute608 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb607, i32 0, i32 1, !dbg !12186
  %356 = load i8, i8* %cmd_attribute608, align 1, !dbg !12186
  %conv609 = zext i8 %356 to i32, !dbg !12183
  %and610 = and i32 %conv609, 8, !dbg !12187
  %tobool611 = icmp ne i32 %and610, 0, !dbg !12187
  br i1 %tobool611, label %if.then612, label %if.end615, !dbg !12188

if.then612:                                       ; preds = %if.end602
  %357 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12189
  %dcdb613 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %357, i32 0, i32 1, !dbg !12190
  %transfer_length614 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb613, i32 0, i32 2, !dbg !12191
  store i16 0, i16* %transfer_length614, align 2, !dbg !12192
  br label %if.end615, !dbg !12189

if.end615:                                        ; preds = %if.then612, %if.end602
  %358 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12193
  %cmd616 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %358, i32 0, i32 0, !dbg !12195
  %dcdb617 = bitcast %union.IPS_HOST_COMMAND* %cmd616 to %struct.IPS_DCDB_CMD*, !dbg !12196
  %op_code618 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb617, i32 0, i32 0, !dbg !12197
  %359 = load i8, i8* %op_code618, align 8, !dbg !12197
  %conv619 = zext i8 %359 to i32, !dbg !12193
  %cmp620 = icmp eq i32 %conv619, 132, !dbg !12198
  br i1 %cmp620, label %if.then622, label %if.else626, !dbg !12199

if.then622:                                       ; preds = %if.end615
  %360 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12200
  %sg_busaddr623 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %360, i32 0, i32 21, !dbg !12200
  %361 = load i32, i32* %sg_busaddr623, align 8, !dbg !12200
  %362 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12201
  %dcdb624 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %362, i32 0, i32 1, !dbg !12202
  %buffer_pointer625 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb624, i32 0, i32 3, !dbg !12203
  store i32 %361, i32* %buffer_pointer625, align 4, !dbg !12204
  br label %if.end631, !dbg !12201

if.else626:                                       ; preds = %if.end615
  %363 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12205
  %data_busaddr627 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %363, i32 0, i32 23, !dbg !12205
  %364 = load i64, i64* %data_busaddr627, align 8, !dbg !12205
  %conv628 = trunc i64 %364 to i32, !dbg !12205
  %365 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12206
  %dcdb629 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %365, i32 0, i32 1, !dbg !12207
  %buffer_pointer630 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb629, i32 0, i32 3, !dbg !12208
  store i32 %conv628, i32* %buffer_pointer630, align 4, !dbg !12209
  br label %if.end631

if.end631:                                        ; preds = %if.else626, %if.then622
  %366 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12210
  %scsi_cmd632 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %366, i32 0, i32 18, !dbg !12211
  %367 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd632, align 8, !dbg !12211
  %cmd_len633 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %367, i32 0, i32 12, !dbg !12212
  %368 = load i16, i16* %cmd_len633, align 4, !dbg !12212
  %conv634 = trunc i16 %368 to i8, !dbg !12210
  %369 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12213
  %dcdb635 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %369, i32 0, i32 1, !dbg !12214
  %cdb_length636 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb635, i32 0, i32 4, !dbg !12215
  store i8 %conv634, i8* %cdb_length636, align 8, !dbg !12216
  %370 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12217
  %dcdb637 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %370, i32 0, i32 1, !dbg !12218
  %sense_length638 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb637, i32 0, i32 5, !dbg !12219
  store i8 64, i8* %sense_length638, align 1, !dbg !12220
  %371 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12221
  %sg_len639 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %371, i32 0, i32 14, !dbg !12222
  %372 = load i32, i32* %sg_len639, align 8, !dbg !12222
  %conv640 = trunc i32 %372 to i8, !dbg !12221
  %373 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12223
  %dcdb641 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %373, i32 0, i32 1, !dbg !12224
  %sg_count642 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb641, i32 0, i32 6, !dbg !12225
  store i8 %conv640, i8* %sg_count642, align 2, !dbg !12226
  %374 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12227
  %dcdb643 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %374, i32 0, i32 1, !dbg !12228
  %reserved644 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb643, i32 0, i32 7, !dbg !12229
  store i8 0, i8* %reserved644, align 1, !dbg !12230
  %375 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12231
  %dcdb645 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %375, i32 0, i32 1, !dbg !12232
  %scsi_cdb646 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb645, i32 0, i32 8, !dbg !12233
  %arraydecay647 = getelementptr inbounds [12 x i8], [12 x i8]* %scsi_cdb646, i64 0, i64 0, !dbg !12234
  %376 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12235
  %scsi_cmd648 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %376, i32 0, i32 18, !dbg !12236
  %377 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd648, align 8, !dbg !12236
  %cmnd649 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %377, i32 0, i32 14, !dbg !12237
  %378 = load i8*, i8** %cmnd649, align 8, !dbg !12237
  %379 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12238
  %scsi_cmd650 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %379, i32 0, i32 18, !dbg !12239
  %380 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd650, align 8, !dbg !12239
  %cmd_len651 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %380, i32 0, i32 12, !dbg !12240
  %381 = load i16, i16* %cmd_len651, align 4, !dbg !12240
  %conv652 = zext i16 %381 to i64, !dbg !12238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay647, i8* align 1 %378, i64 %conv652, i1 false), !dbg !12234
  %382 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12241
  %dcdb653 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %382, i32 0, i32 1, !dbg !12242
  %scsi_status654 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb653, i32 0, i32 10, !dbg !12243
  store i8 0, i8* %scsi_status654, align 8, !dbg !12244
  %383 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12245
  %dcdb655 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %383, i32 0, i32 1, !dbg !12246
  %reserved2656 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb655, i32 0, i32 11, !dbg !12247
  %arrayidx657 = getelementptr [3 x i8], [3 x i8]* %reserved2656, i64 0, i64 0, !dbg !12245
  store i8 0, i8* %arrayidx657, align 1, !dbg !12248
  %384 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12249
  %dcdb658 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %384, i32 0, i32 1, !dbg !12250
  %reserved2659 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb658, i32 0, i32 11, !dbg !12251
  %arrayidx660 = getelementptr [3 x i8], [3 x i8]* %reserved2659, i64 0, i64 1, !dbg !12249
  store i8 0, i8* %arrayidx660, align 1, !dbg !12252
  %385 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12253
  %dcdb661 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %385, i32 0, i32 1, !dbg !12254
  %reserved2662 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb661, i32 0, i32 11, !dbg !12255
  %arrayidx663 = getelementptr [3 x i8], [3 x i8]* %reserved2662, i64 0, i64 2, !dbg !12253
  store i8 0, i8* %arrayidx663, align 1, !dbg !12256
  br label %if.end664

if.end664:                                        ; preds = %if.end631, %if.end525
  br label %if.end665, !dbg !12257

if.end665:                                        ; preds = %if.end664, %if.end383
  %386 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12258
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %386, i32 0, i32 43, !dbg !12259
  %issue = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 1, !dbg !12260
  %387 = load i32 (%struct.ips_ha*, %struct.ips_scb*)*, i32 (%struct.ips_ha*, %struct.ips_scb*)** %issue, align 8, !dbg !12260
  %388 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12261
  %389 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12262
  %call666 = call i32 %387(%struct.ips_ha* %388, %struct.ips_scb* %389) #11, !dbg !12263
  store i32 %call666, i32* %retval, align 4, !dbg !12264
  br label %return, !dbg !12264

return:                                           ; preds = %if.end665, %if.then398, %if.then382, %if.end
  %390 = load i32, i32* %retval, align 4, !dbg !12265
  ret i32 %390, !dbg !12265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_poll_for_flush_complete(%struct.ips_ha* %ha) #0 !dbg !12266 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %cstatus = alloca %union.IPS_STATUS, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !12267, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.declare(metadata %union.IPS_STATUS* %cstatus, metadata !12269, metadata !DIExpression()), !dbg !12270
  br label %while.body, !dbg !12271

while.body:                                       ; preds = %entry, %if.end5
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12272
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 43, !dbg !12274
  %statupd = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 11, !dbg !12275
  %1 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %statupd, align 8, !dbg !12275
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12276
  %call = call i32 %1(%struct.ips_ha* %2) #11, !dbg !12277
  %value = bitcast %union.IPS_STATUS* %cstatus to i32*, !dbg !12278
  store volatile i32 %call, i32* %value, align 4, !dbg !12279
  %value1 = bitcast %union.IPS_STATUS* %cstatus to i32*, !dbg !12280
  %3 = load volatile i32, i32* %value1, align 4, !dbg !12280
  %cmp = icmp eq i32 %3, -1, !dbg !12282
  br i1 %cmp, label %if.then, label %if.end, !dbg !12283

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !12284

if.end:                                           ; preds = %while.body
  %fields = bitcast %union.IPS_STATUS* %cstatus to %struct.anon.80*, !dbg !12285
  %command_id = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fields, i32 0, i32 1, !dbg !12287
  %4 = load volatile i8, i8* %command_id, align 1, !dbg !12287
  %conv = zext i8 %4 to i32, !dbg !12288
  %cmp2 = icmp eq i32 %conv, 128, !dbg !12289
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !12290

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !12291
  br label %return, !dbg !12291

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !12271, !llvm.loop !12292

while.end:                                        ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !12294
  br label %return, !dbg !12294

return:                                           ; preds = %while.end, %if.then4
  %5 = load i32, i32* %retval, align 4, !dbg !12295
  ret i32 %5, !dbg !12295
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #0 !dbg !12296 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12299, metadata !DIExpression()), !dbg !12300
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12301, metadata !DIExpression()), !dbg !12302
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !12303, metadata !DIExpression()), !dbg !12304
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12307
  %1 = load i64, i64* %size.addr, align 8, !dbg !12308
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !12309
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !12310
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !12311
  ret void, !dbg !12312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_is_passthru(%struct.scsi_cmnd* %SC) #0 !dbg !12313 {
entry:
  %retval = alloca i32, align 4
  %SC.addr = alloca %struct.scsi_cmnd*, align 8
  %flags = alloca i64, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %buffer = alloca i8*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy54 = alloca i64, align 8
  %__dummy255 = alloca i64, align 8
  %tmp58 = alloca i32, align 4
  %__dummy72 = alloca i64, align 8
  %__dummy273 = alloca i64, align 8
  %tmp76 = alloca i32, align 4
  store %struct.scsi_cmnd* %SC, %struct.scsi_cmnd** %SC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC.addr, metadata !12314, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12316, metadata !DIExpression()), !dbg !12317
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12318
  %tobool = icmp ne %struct.scsi_cmnd* %0, null, !dbg !12318
  br i1 %tobool, label %if.end, label %if.then, !dbg !12320

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12321
  br label %return, !dbg !12321

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12322
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 14, !dbg !12324
  %2 = load i8*, i8** %cmnd, align 8, !dbg !12324
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !12322
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12322
  %conv = zext i8 %3 to i32, !dbg !12322
  %cmp = icmp eq i32 %conv, 13, !dbg !12325
  br i1 %cmp, label %land.lhs.true, label %if.end79, !dbg !12326

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12327
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 1, !dbg !12328
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !12328
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 17, !dbg !12329
  %6 = load i32, i32* %channel, align 4, !dbg !12329
  %cmp2 = icmp eq i32 %6, 0, !dbg !12330
  br i1 %cmp2, label %land.lhs.true4, label %if.end79, !dbg !12331

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12332
  %device5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 1, !dbg !12333
  %8 = load %struct.scsi_device*, %struct.scsi_device** %device5, align 8, !dbg !12333
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 16, !dbg !12334
  %9 = load i32, i32* %id, align 8, !dbg !12334
  %cmp6 = icmp eq i32 %9, 15, !dbg !12335
  br i1 %cmp6, label %land.lhs.true8, label %if.end79, !dbg !12336

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12337
  %device9 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 1, !dbg !12338
  %11 = load %struct.scsi_device*, %struct.scsi_device** %device9, align 8, !dbg !12338
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 18, !dbg !12339
  %12 = load i64, i64* %lun, align 8, !dbg !12339
  %cmp10 = icmp eq i64 %12, 0, !dbg !12340
  br i1 %cmp10, label %land.lhs.true12, label %if.end79, !dbg !12341

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12342
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %13) #11, !dbg !12343
  %tobool13 = icmp ne %struct.scatterlist* %call, null, !dbg !12343
  br i1 %tobool13, label %if.then14, label %if.end79, !dbg !12344

if.then14:                                        ; preds = %land.lhs.true12
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !12345, metadata !DIExpression()), !dbg !12347
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !12348
  %call15 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %14) #11, !dbg !12349
  store %struct.scatterlist* %call15, %struct.scatterlist** %sg, align 8, !dbg !12347
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !12350, metadata !DIExpression()), !dbg !12351
  br label %do.body, !dbg !12352

do.body:                                          ; preds = %if.then14
  br label %do.body16, !dbg !12353

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12355, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12359, metadata !DIExpression()), !dbg !12358
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !12358
  %conv18 = zext i1 %cmp17 to i32, !dbg !12358
  store i32 1, i32* %tmp, align 4, !dbg !12358
  %15 = load i32, i32* %tmp, align 4, !dbg !12358
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !12360
  store i64 %call19, i64* %flags, align 8, !dbg !12360
  br label %do.end, !dbg !12360

do.end:                                           ; preds = %do.body16
  br label %do.end20, !dbg !12353

do.end20:                                         ; preds = %do.end
  %16 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12361
  %call21 = call %struct.page* @sg_page(%struct.scatterlist* %16) #11, !dbg !12362
  %call22 = call i8* @kmap_atomic(%struct.page* %call21) #11, !dbg !12363
  %17 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12364
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %17, i32 0, i32 1, !dbg !12365
  %18 = load i32, i32* %offset, align 8, !dbg !12365
  %idx.ext = zext i32 %18 to i64, !dbg !12366
  %add.ptr = getelementptr i8, i8* %call22, i64 %idx.ext, !dbg !12366
  store i8* %add.ptr, i8** %buffer, align 8, !dbg !12367
  %19 = load i8*, i8** %buffer, align 8, !dbg !12368
  %tobool23 = icmp ne i8* %19, null, !dbg !12368
  br i1 %tobool23, label %land.lhs.true24, label %if.end61, !dbg !12370

land.lhs.true24:                                  ; preds = %do.end20
  %20 = load i8*, i8** %buffer, align 8, !dbg !12371
  %arrayidx25 = getelementptr i8, i8* %20, i64 0, !dbg !12371
  %21 = load i8, i8* %arrayidx25, align 1, !dbg !12371
  %conv26 = sext i8 %21 to i32, !dbg !12371
  %cmp27 = icmp eq i32 %conv26, 67, !dbg !12372
  br i1 %cmp27, label %land.lhs.true29, label %if.end61, !dbg !12373

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %22 = load i8*, i8** %buffer, align 8, !dbg !12374
  %arrayidx30 = getelementptr i8, i8* %22, i64 1, !dbg !12374
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !12374
  %conv31 = sext i8 %23 to i32, !dbg !12374
  %cmp32 = icmp eq i32 %conv31, 79, !dbg !12375
  br i1 %cmp32, label %land.lhs.true34, label %if.end61, !dbg !12376

land.lhs.true34:                                  ; preds = %land.lhs.true29
  %24 = load i8*, i8** %buffer, align 8, !dbg !12377
  %arrayidx35 = getelementptr i8, i8* %24, i64 2, !dbg !12377
  %25 = load i8, i8* %arrayidx35, align 1, !dbg !12377
  %conv36 = sext i8 %25 to i32, !dbg !12377
  %cmp37 = icmp eq i32 %conv36, 80, !dbg !12378
  br i1 %cmp37, label %land.lhs.true39, label %if.end61, !dbg !12379

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %26 = load i8*, i8** %buffer, align 8, !dbg !12380
  %arrayidx40 = getelementptr i8, i8* %26, i64 3, !dbg !12380
  %27 = load i8, i8* %arrayidx40, align 1, !dbg !12380
  %conv41 = sext i8 %27 to i32, !dbg !12380
  %cmp42 = icmp eq i32 %conv41, 80, !dbg !12381
  br i1 %cmp42, label %if.then44, label %if.end61, !dbg !12382

if.then44:                                        ; preds = %land.lhs.true39
  br label %do.body45, !dbg !12383

do.body45:                                        ; preds = %if.then44
  br label %do.body46, !dbg !12385

do.body46:                                        ; preds = %do.body45
  br label %do.end47, !dbg !12387

do.end47:                                         ; preds = %do.body46
  %28 = load i8*, i8** %buffer, align 8, !dbg !12385
  %29 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12385
  %offset48 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %29, i32 0, i32 1, !dbg !12385
  %30 = load i32, i32* %offset48, align 8, !dbg !12385
  %idx.ext49 = zext i32 %30 to i64, !dbg !12385
  %idx.neg = sub i64 0, %idx.ext49, !dbg !12385
  %add.ptr50 = getelementptr i8, i8* %28, i64 %idx.neg, !dbg !12385
  call void @kunmap_atomic_high(i8* %add.ptr50) #11, !dbg !12385
  call void @pagefault_enable() #11, !dbg !12385
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12385, !srcloc !12389
  br label %do.end51, !dbg !12385

do.end51:                                         ; preds = %do.end47
  br label %do.body52, !dbg !12390

do.body52:                                        ; preds = %do.end51
  br label %do.body53, !dbg !12391

do.body53:                                        ; preds = %do.body52
  call void @llvm.dbg.declare(metadata i64* %__dummy54, metadata !12393, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.declare(metadata i64* %__dummy255, metadata !12397, metadata !DIExpression()), !dbg !12396
  %cmp56 = icmp eq i64* %__dummy54, %__dummy255, !dbg !12396
  %conv57 = zext i1 %cmp56 to i32, !dbg !12396
  store i32 1, i32* %tmp58, align 4, !dbg !12396
  %31 = load i32, i32* %tmp58, align 4, !dbg !12396
  %32 = load i64, i64* %flags, align 8, !dbg !12398
  call void @arch_local_irq_restore(i64 %32) #11, !dbg !12398
  br label %do.end59, !dbg !12398

do.end59:                                         ; preds = %do.body53
  br label %do.end60, !dbg !12391

do.end60:                                         ; preds = %do.end59
  store i32 1, i32* %retval, align 4, !dbg !12399
  br label %return, !dbg !12399

if.end61:                                         ; preds = %land.lhs.true39, %land.lhs.true34, %land.lhs.true29, %land.lhs.true24, %do.end20
  br label %do.body62, !dbg !12400

do.body62:                                        ; preds = %if.end61
  br label %do.body63, !dbg !12401

do.body63:                                        ; preds = %do.body62
  br label %do.end64, !dbg !12403

do.end64:                                         ; preds = %do.body63
  %33 = load i8*, i8** %buffer, align 8, !dbg !12401
  %34 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12401
  %offset65 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %34, i32 0, i32 1, !dbg !12401
  %35 = load i32, i32* %offset65, align 8, !dbg !12401
  %idx.ext66 = zext i32 %35 to i64, !dbg !12401
  %idx.neg67 = sub i64 0, %idx.ext66, !dbg !12401
  %add.ptr68 = getelementptr i8, i8* %33, i64 %idx.neg67, !dbg !12401
  call void @kunmap_atomic_high(i8* %add.ptr68) #11, !dbg !12401
  call void @pagefault_enable() #11, !dbg !12401
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12401, !srcloc !12405
  br label %do.end69, !dbg !12401

do.end69:                                         ; preds = %do.end64
  br label %do.body70, !dbg !12406

do.body70:                                        ; preds = %do.end69
  br label %do.body71, !dbg !12407

do.body71:                                        ; preds = %do.body70
  call void @llvm.dbg.declare(metadata i64* %__dummy72, metadata !12409, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.declare(metadata i64* %__dummy273, metadata !12413, metadata !DIExpression()), !dbg !12412
  %cmp74 = icmp eq i64* %__dummy72, %__dummy273, !dbg !12412
  %conv75 = zext i1 %cmp74 to i32, !dbg !12412
  store i32 1, i32* %tmp76, align 4, !dbg !12412
  %36 = load i32, i32* %tmp76, align 4, !dbg !12412
  %37 = load i64, i64* %flags, align 8, !dbg !12414
  call void @arch_local_irq_restore(i64 %37) #11, !dbg !12414
  br label %do.end77, !dbg !12414

do.end77:                                         ; preds = %do.body71
  br label %do.end78, !dbg !12407

do.end78:                                         ; preds = %do.end77
  br label %if.end79, !dbg !12415

if.end79:                                         ; preds = %do.end78, %land.lhs.true12, %land.lhs.true8, %land.lhs.true4, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12416
  br label %return, !dbg !12416

return:                                           ; preds = %if.end79, %do.end60, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !12417
  ret i32 %38, !dbg !12417
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_scmd_buf_write(%struct.scsi_cmnd* %scmd, i8* %data, i32 %count) #0 !dbg !12418 {
entry:
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12427, metadata !DIExpression()), !dbg !12428
  br label %do.body, !dbg !12429

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12430

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12432, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12436, metadata !DIExpression()), !dbg !12435
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12435
  %conv = zext i1 %cmp to i32, !dbg !12435
  store i32 1, i32* %tmp, align 4, !dbg !12435
  %0 = load i32, i32* %tmp, align 4, !dbg !12435
  %call = call i64 @arch_local_irq_save() #11, !dbg !12437
  store i64 %call, i64* %flags, align 8, !dbg !12437
  br label %do.end, !dbg !12437

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !12430

do.end2:                                          ; preds = %do.end
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !12438
  %2 = load i8*, i8** %data.addr, align 8, !dbg !12439
  %3 = load i32, i32* %count.addr, align 4, !dbg !12440
  %call3 = call i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %1, i8* %2, i32 %3) #11, !dbg !12441
  br label %do.body4, !dbg !12442

do.body4:                                         ; preds = %do.end2
  br label %do.body5, !dbg !12443

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !12445, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !12449, metadata !DIExpression()), !dbg !12448
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !12448
  %conv9 = zext i1 %cmp8 to i32, !dbg !12448
  store i32 1, i32* %tmp10, align 4, !dbg !12448
  %4 = load i32, i32* %tmp10, align 4, !dbg !12448
  %5 = load i64, i64* %flags, align 8, !dbg !12450
  call void @arch_local_irq_restore(i64 %5) #11, !dbg !12450
  br label %do.end11, !dbg !12450

do.end11:                                         ; preds = %do.body5
  br label %do.end12, !dbg !12443

do.end12:                                         ; preds = %do.end11
  ret void, !dbg !12451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_reqsen(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !12452 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %reqsen = alloca %struct.IPS_SCSI_REQSEN, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !12453, metadata !DIExpression()), !dbg !12454
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !12455, metadata !DIExpression()), !dbg !12456
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_REQSEN* %reqsen, metadata !12457, metadata !DIExpression()), !dbg !12471
  %0 = bitcast %struct.IPS_SCSI_REQSEN* %reqsen to i8*, !dbg !12472
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 18, i1 false), !dbg !12472
  %ResponseCode = getelementptr inbounds %struct.IPS_SCSI_REQSEN, %struct.IPS_SCSI_REQSEN* %reqsen, i32 0, i32 0, !dbg !12473
  store i8 -16, i8* %ResponseCode, align 1, !dbg !12474
  %AdditionalLength = getelementptr inbounds %struct.IPS_SCSI_REQSEN, %struct.IPS_SCSI_REQSEN* %reqsen, i32 0, i32 4, !dbg !12475
  store i8 10, i8* %AdditionalLength, align 1, !dbg !12476
  %AdditionalSenseCode = getelementptr inbounds %struct.IPS_SCSI_REQSEN, %struct.IPS_SCSI_REQSEN* %reqsen, i32 0, i32 6, !dbg !12477
  store i8 0, i8* %AdditionalSenseCode, align 1, !dbg !12478
  %AdditionalSenseCodeQual = getelementptr inbounds %struct.IPS_SCSI_REQSEN, %struct.IPS_SCSI_REQSEN* %reqsen, i32 0, i32 7, !dbg !12479
  store i8 0, i8* %AdditionalSenseCodeQual, align 1, !dbg !12480
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12481
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %1, i32 0, i32 18, !dbg !12482
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !12482
  %3 = bitcast %struct.IPS_SCSI_REQSEN* %reqsen to i8*, !dbg !12483
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %2, i8* %3, i32 18) #11, !dbg !12484
  ret i32 1, !dbg !12485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @le32_add_cpu(i32* %var, i32 %val) #0 !dbg !12486 {
entry:
  %var.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  store i32* %var, i32** %var.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %var.addr, metadata !12491, metadata !DIExpression()), !dbg !12492
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12493, metadata !DIExpression()), !dbg !12494
  %0 = load i32*, i32** %var.addr, align 8, !dbg !12495
  %1 = load i32, i32* %0, align 4, !dbg !12495
  %2 = load i32, i32* %val.addr, align 4, !dbg !12495
  %add = add i32 %1, %2, !dbg !12495
  %3 = load i32*, i32** %var.addr, align 8, !dbg !12496
  store i32 %add, i32* %3, align 4, !dbg !12497
  ret void, !dbg !12498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #0 !dbg !12499 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12502, metadata !DIExpression()), !dbg !12503
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12504
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !12505
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !12506
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !12507
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !12507
  ret %struct.scatterlist* %1, !dbg !12508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !12509 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !12513, metadata !DIExpression()), !dbg !12514
  %call = call i64 @arch_local_save_flags() #11, !dbg !12515
  store i64 %call, i64* %f, align 8, !dbg !12516
  call void @arch_local_irq_disable() #11, !dbg !12517
  %0 = load i64, i64* %f, align 8, !dbg !12518
  ret i64 %0, !dbg !12519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmap_atomic(%struct.page* %page) #0 !dbg !12520 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !12524, metadata !DIExpression()), !dbg !12530
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !12532, metadata !DIExpression()), !dbg !12533
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12534, !srcloc !12535
  call void @pagefault_disable() #11, !dbg !12536
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12537
  store %struct.page* %0, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !12538
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !12538
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !12538
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !12538
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !12538
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !12538
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !12538
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !12538
  %add.i = add i64 %shl.i, %4, !dbg !12538
  %5 = inttoptr i64 %add.i to i8*, !dbg !12538
  ret i8* %5, !dbg !12539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #0 !dbg !12540 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !12543, metadata !DIExpression()), !dbg !12544
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !12545
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !12546
  %1 = load i64, i64* %page_link, align 8, !dbg !12546
  %and = and i64 %1, -4, !dbg !12547
  %2 = inttoptr i64 %and to %struct.page*, !dbg !12548
  ret %struct.page* %2, !dbg !12549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kunmap_atomic_high(i8* %addr) #0 !dbg !12550 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12551, metadata !DIExpression()), !dbg !12552
  ret void, !dbg !12553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_enable() #0 !dbg !12554 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !12556, metadata !DIExpression()), !dbg !12562
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !12566, metadata !DIExpression()), !dbg !12568
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !12569, metadata !DIExpression()), !dbg !12571
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12572, !srcloc !12573
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !12568
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !12568
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !12571, !srcloc !12574
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !12571
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !12571
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !12571
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !12571
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !12571
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !12562
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !12562
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !12562
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !12562
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !12575
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !12576
  %dec.i = add i32 %7, -1, !dbg !12576
  store i32 %dec.i, i32* %pagefault_disabled.i, align 8, !dbg !12576
  ret void, !dbg !12577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !12578 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !12581, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12583, metadata !DIExpression()), !dbg !12585
  %0 = load i64, i64* %__edi, align 8, !dbg !12585
  store i64 %0, i64* %__edi, align 8, !dbg !12585
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12586, metadata !DIExpression()), !dbg !12585
  %1 = load i64, i64* %__esi, align 8, !dbg !12585
  store i64 %1, i64* %__esi, align 8, !dbg !12585
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12587, metadata !DIExpression()), !dbg !12585
  %2 = load i64, i64* %__edx, align 8, !dbg !12585
  store i64 %2, i64* %__edx, align 8, !dbg !12585
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12588, metadata !DIExpression()), !dbg !12585
  %3 = load i64, i64* %__ecx, align 8, !dbg !12585
  store i64 %3, i64* %__ecx, align 8, !dbg !12585
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12589, metadata !DIExpression()), !dbg !12585
  %4 = load i64, i64* %__eax, align 8, !dbg !12585
  store i64 %4, i64* %__eax, align 8, !dbg !12585
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !12585
  %6 = call i64 @llvm.read_register.i64(metadata !6329), !dbg !12585
  %7 = load i64, i64* %f.addr, align 8, !dbg !12585
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !12585, !srcloc !12590
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !12585
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !12585
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12585
  call void @llvm.write_register.i64(metadata !6329, i64 %asmresult1), !dbg !12585
  ret void, !dbg !12591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !12592 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !12593, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12596, metadata !DIExpression()), !dbg !12595
  %0 = load i64, i64* %__edi, align 8, !dbg !12595
  store i64 %0, i64* %__edi, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12597, metadata !DIExpression()), !dbg !12595
  %1 = load i64, i64* %__esi, align 8, !dbg !12595
  store i64 %1, i64* %__esi, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12598, metadata !DIExpression()), !dbg !12595
  %2 = load i64, i64* %__edx, align 8, !dbg !12595
  store i64 %2, i64* %__edx, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12599, metadata !DIExpression()), !dbg !12595
  %3 = load i64, i64* %__ecx, align 8, !dbg !12595
  store i64 %3, i64* %__ecx, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12600, metadata !DIExpression()), !dbg !12595
  %4 = load i64, i64* %__eax, align 8, !dbg !12595
  store i64 %4, i64* %__eax, align 8, !dbg !12595
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !12595
  %6 = call i64 @llvm.read_register.i64(metadata !6329), !dbg !12601
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !12601, !srcloc !12604
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12601
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12601
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12601
  call void @llvm.write_register.i64(metadata !6329, i64 %asmresult1), !dbg !12601
  %8 = load i64, i64* %__eax, align 8, !dbg !12601
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !12605, metadata !DIExpression()), !dbg !12607
  store i64 -1, i64* %__mask, align 8, !dbg !12607
  %9 = load i64, i64* %__mask, align 8, !dbg !12607
  store i64 %9, i64* %tmp, align 8, !dbg !12607
  %10 = load i64, i64* %tmp, align 8, !dbg !12607
  %and = and i64 %8, %10, !dbg !12601
  store i64 %and, i64* %__ret, align 8, !dbg !12601
  %11 = load i64, i64* %__ret, align 8, !dbg !12595
  store i64 %11, i64* %tmp2, align 8, !dbg !12608
  %12 = load i64, i64* %tmp2, align 8, !dbg !12595
  ret i64 %12, !dbg !12609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !12610 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12611, metadata !DIExpression()), !dbg !12613
  %0 = load i64, i64* %__edi, align 8, !dbg !12613
  store i64 %0, i64* %__edi, align 8, !dbg !12613
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12614, metadata !DIExpression()), !dbg !12613
  %1 = load i64, i64* %__esi, align 8, !dbg !12613
  store i64 %1, i64* %__esi, align 8, !dbg !12613
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12615, metadata !DIExpression()), !dbg !12613
  %2 = load i64, i64* %__edx, align 8, !dbg !12613
  store i64 %2, i64* %__edx, align 8, !dbg !12613
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12616, metadata !DIExpression()), !dbg !12613
  %3 = load i64, i64* %__ecx, align 8, !dbg !12613
  store i64 %3, i64* %__ecx, align 8, !dbg !12613
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12617, metadata !DIExpression()), !dbg !12613
  %4 = load i64, i64* %__eax, align 8, !dbg !12613
  store i64 %4, i64* %__eax, align 8, !dbg !12613
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !12613
  %6 = call i64 @llvm.read_register.i64(metadata !6329), !dbg !12613
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !12613, !srcloc !12618
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12613
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12613
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12613
  call void @llvm.write_register.i64(metadata !6329, i64 %asmresult1), !dbg !12613
  ret void, !dbg !12619
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_disable() #0 !dbg !12620 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !12556, metadata !DIExpression()), !dbg !12621
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !12566, metadata !DIExpression()), !dbg !12625
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !12569, metadata !DIExpression()), !dbg !12626
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !12625
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !12625
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !12626, !srcloc !12574
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !12626
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !12626
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !12626
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !12626
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !12626
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !12621
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !12621
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !12621
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !12621
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !12627
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !12628
  %inc.i = add i32 %7, 1, !dbg !12628
  store i32 %inc.i, i32* %pagefault_disabled.i, align 8, !dbg !12628
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12629, !srcloc !12630
  ret void, !dbg !12631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %cmd, i8* %buf, i32 %buflen) #0 !dbg !12632 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12637, metadata !DIExpression()), !dbg !12638
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !12639, metadata !DIExpression()), !dbg !12640
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12641
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %0) #11, !dbg !12642
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12643
  %call1 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %1) #11, !dbg !12644
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12645
  %3 = load i32, i32* %buflen.addr, align 4, !dbg !12646
  %conv = sext i32 %3 to i64, !dbg !12646
  %call2 = call i64 @sg_copy_from_buffer(%struct.scatterlist* %call, i32 %call1, i8* %2, i64 %conv) #11, !dbg !12647
  %conv3 = trunc i64 %call2 to i32, !dbg !12647
  ret i32 %conv3, !dbg !12648
}

; Function Attrs: noredzone
declare dso_local i64 @sg_copy_from_buffer(%struct.scatterlist*, i32, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_count(%struct.scsi_cmnd* %cmd) #0 !dbg !12649 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12652, metadata !DIExpression()), !dbg !12653
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12654
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !12655
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !12656
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !12657
  %1 = load i32, i32* %nents, align 8, !dbg !12657
  ret i32 %1, !dbg !12658
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !12659 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12663, metadata !DIExpression()), !dbg !12664
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12665, metadata !DIExpression()), !dbg !12664
  %0 = load i32, i32* %val.addr, align 4, !dbg !12664
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !12664
  %2 = bitcast i8* %1 to i32*, !dbg !12664
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !12664, !srcloc !12666
  ret void, !dbg !12664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @touch_nmi_watchdog() #0 !dbg !12667 {
entry:
  call void @arch_touch_nmi_watchdog() #11, !dbg !12669
  call void @touch_softlockup_watchdog() #11, !dbg !12670
  ret void, !dbg !12671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_touch_nmi_watchdog() #0 !dbg !12672 {
entry:
  ret void, !dbg !12673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @touch_softlockup_watchdog() #0 !dbg !12674 {
entry:
  ret void, !dbg !12675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_chkstatus(%struct.ips_ha* %ha, %union.IPS_STATUS* %pstatus) #0 !dbg !12676 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %pstatus.addr = alloca %union.IPS_STATUS*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %sp = alloca %struct.ips_stat*, align 8
  %basic_status = alloca i8, align 1
  %ext_status = alloca i8, align 1
  %errcode = alloca i32, align 4
  %inquiryData = alloca %struct.IPS_SCSI_INQ_DATA, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !12680, metadata !DIExpression()), !dbg !12681
  store %union.IPS_STATUS* %pstatus, %union.IPS_STATUS** %pstatus.addr, align 8
  call void @llvm.dbg.declare(metadata %union.IPS_STATUS** %pstatus.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !12684, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.declare(metadata %struct.ips_stat** %sp, metadata !12686, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.declare(metadata i8* %basic_status, metadata !12688, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.declare(metadata i8* %ext_status, metadata !12690, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.declare(metadata i32* %errcode, metadata !12692, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_INQ_DATA* %inquiryData, metadata !12694, metadata !DIExpression()), !dbg !12695
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12696
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !12697
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !12697
  %2 = load %union.IPS_STATUS*, %union.IPS_STATUS** %pstatus.addr, align 8, !dbg !12698
  %fields = bitcast %union.IPS_STATUS* %2 to %struct.anon.80*, !dbg !12699
  %command_id = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fields, i32 0, i32 1, !dbg !12700
  %3 = load volatile i8, i8* %command_id, align 1, !dbg !12700
  %idxprom = zext i8 %3 to i64, !dbg !12696
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !12696
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !12701
  %4 = load %union.IPS_STATUS*, %union.IPS_STATUS** %pstatus.addr, align 8, !dbg !12702
  %fields1 = bitcast %union.IPS_STATUS* %4 to %struct.anon.80*, !dbg !12703
  %basic_status2 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fields1, i32 0, i32 2, !dbg !12704
  %5 = load volatile i8, i8* %basic_status2, align 2, !dbg !12704
  %conv = zext i8 %5 to i32, !dbg !12702
  %and = and i32 %conv, 255, !dbg !12705
  %conv3 = trunc i32 %and to i8, !dbg !12702
  store i8 %conv3, i8* %basic_status, align 1, !dbg !12706
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12707
  %basic_status4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %6, i32 0, i32 9, !dbg !12708
  store i8 %conv3, i8* %basic_status4, align 8, !dbg !12709
  %7 = load %union.IPS_STATUS*, %union.IPS_STATUS** %pstatus.addr, align 8, !dbg !12710
  %fields5 = bitcast %union.IPS_STATUS* %7 to %struct.anon.80*, !dbg !12711
  %extended_status = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fields5, i32 0, i32 3, !dbg !12712
  %8 = load volatile i8, i8* %extended_status, align 1, !dbg !12712
  store i8 %8, i8* %ext_status, align 1, !dbg !12713
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12714
  %extended_status6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 10, !dbg !12715
  store i8 %8, i8* %extended_status6, align 1, !dbg !12716
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12717
  %sp7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 11, !dbg !12718
  store %struct.ips_stat* %sp7, %struct.ips_stat** %sp, align 8, !dbg !12719
  %11 = load %struct.ips_stat*, %struct.ips_stat** %sp, align 8, !dbg !12720
  %residue_len = getelementptr inbounds %struct.ips_stat, %struct.ips_stat* %11, i32 0, i32 0, !dbg !12721
  store i32 0, i32* %residue_len, align 8, !dbg !12722
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12723
  %13 = bitcast %struct.ips_scb* %12 to i8*, !dbg !12724
  %14 = load %struct.ips_stat*, %struct.ips_stat** %sp, align 8, !dbg !12725
  %scb_addr = getelementptr inbounds %struct.ips_stat, %struct.ips_stat* %14, i32 0, i32 1, !dbg !12726
  store i8* %13, i8** %scb_addr, align 8, !dbg !12727
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12728
  %scb_activelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 16, !dbg !12729
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12730
  %call = call %struct.ips_scb* @ips_removeq_scb(%struct.ips_scb_queue* %scb_activelist, %struct.ips_scb* %16) #11, !dbg !12731
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12732
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 18, !dbg !12734
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !12734
  %tobool = icmp ne %struct.scsi_cmnd* %18, null, !dbg !12732
  br i1 %tobool, label %if.end, label %if.then, !dbg !12735

if.then:                                          ; preds = %entry
  br label %if.end97, !dbg !12736

if.end:                                           ; preds = %entry
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12737
  %scsi_cmd8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 18, !dbg !12739
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd8, align 8, !dbg !12739
  %tobool9 = icmp ne %struct.scsi_cmnd* %20, null, !dbg !12740
  br i1 %tobool9, label %land.lhs.true, label %if.end14, !dbg !12741

land.lhs.true:                                    ; preds = %if.end
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12742
  %scsi_cmd10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %21, i32 0, i32 18, !dbg !12743
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd10, align 8, !dbg !12743
  %call11 = call i32 @ips_is_passthru(%struct.scsi_cmnd* %22) #11, !dbg !12744
  %tobool12 = icmp ne i32 %call11, 0, !dbg !12744
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12745

if.then13:                                        ; preds = %land.lhs.true
  br label %if.end97, !dbg !12746

if.end14:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %errcode, align 4, !dbg !12747
  %23 = load i8, i8* %basic_status, align 1, !dbg !12748
  %conv15 = zext i8 %23 to i32, !dbg !12748
  %and16 = and i32 %conv15, 15, !dbg !12750
  %cmp = icmp eq i32 %and16, 0, !dbg !12751
  br i1 %cmp, label %if.then22, label %lor.lhs.false, !dbg !12752

lor.lhs.false:                                    ; preds = %if.end14
  %24 = load i8, i8* %basic_status, align 1, !dbg !12753
  %conv18 = zext i8 %24 to i32, !dbg !12753
  %and19 = and i32 %conv18, 15, !dbg !12754
  %cmp20 = icmp eq i32 %and19, 1, !dbg !12755
  br i1 %cmp20, label %if.then22, label %if.else89, !dbg !12756

if.then22:                                        ; preds = %lor.lhs.false, %if.end14
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12757
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %25, i32 0, i32 3, !dbg !12760
  %26 = load i8, i8* %bus, align 1, !dbg !12760
  %conv23 = zext i8 %26 to i32, !dbg !12757
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !12761
  br i1 %cmp24, label %if.then26, label %if.else70, !dbg !12762

if.then26:                                        ; preds = %if.then22
  %27 = load i8, i8* %basic_status, align 1, !dbg !12763
  %conv27 = zext i8 %27 to i32, !dbg !12763
  %and28 = and i32 %conv27, 15, !dbg !12766
  %cmp29 = icmp eq i32 %and28, 1, !dbg !12767
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !12768

if.then31:                                        ; preds = %if.then26
  br label %if.end32, !dbg !12769

if.end32:                                         ; preds = %if.then31, %if.then26
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12771
  %scsi_cmd33 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 18, !dbg !12772
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd33, align 8, !dbg !12772
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 14, !dbg !12773
  %30 = load i8*, i8** %cmnd, align 8, !dbg !12773
  %arrayidx34 = getelementptr i8, i8* %30, i64 0, !dbg !12771
  %31 = load i8, i8* %arrayidx34, align 1, !dbg !12771
  %conv35 = zext i8 %31 to i32, !dbg !12771
  switch i32 %conv35, label %sw.default [
    i32 30, label %sw.bb
    i32 1, label %sw.bb
    i32 25, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 27, label %sw.bb36
    i32 0, label %sw.bb37
    i32 18, label %sw.bb42
    i32 3, label %sw.bb48
    i32 8, label %sw.bb50
    i32 10, label %sw.bb50
    i32 40, label %sw.bb50
    i32 42, label %sw.bb50
    i32 22, label %sw.bb50
    i32 23, label %sw.bb50
    i32 26, label %sw.bb51
    i32 37, label %sw.bb59
    i32 29, label %sw.bb66
    i32 7, label %sw.bb66
    i32 4, label %sw.bb67
    i32 43, label %sw.bb68
    i32 47, label %sw.bb68
    i32 55, label %sw.bb68
    i32 60, label %sw.bb68
    i32 59, label %sw.bb68
  ], !dbg !12774

sw.bb:                                            ; preds = %if.end32, %if.end32, %if.end32, %if.end32, %if.end32
  store i32 7, i32* %errcode, align 4, !dbg !12775
  br label %sw.epilog, !dbg !12777

sw.bb36:                                          ; preds = %if.end32
  br label %sw.epilog, !dbg !12778

sw.bb37:                                          ; preds = %if.end32
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12779
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12781
  %call38 = call i32 @ips_online(%struct.ips_ha* %32, %struct.ips_scb* %33) #11, !dbg !12782
  %tobool39 = icmp ne i32 %call38, 0, !dbg !12782
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !12783

if.then40:                                        ; preds = %sw.bb37
  store i32 3, i32* %errcode, align 4, !dbg !12784
  br label %if.end41, !dbg !12786

if.end41:                                         ; preds = %if.then40, %sw.bb37
  br label %sw.epilog, !dbg !12787

sw.bb42:                                          ; preds = %if.end32
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12788
  %35 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12790
  %call43 = call i32 @ips_online(%struct.ips_ha* %34, %struct.ips_scb* %35) #11, !dbg !12791
  %tobool44 = icmp ne i32 %call43, 0, !dbg !12791
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !12792

if.then45:                                        ; preds = %sw.bb42
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12793
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12795
  %call46 = call i32 @ips_inquiry(%struct.ips_ha* %36, %struct.ips_scb* %37) #11, !dbg !12796
  br label %if.end47, !dbg !12797

if.else:                                          ; preds = %sw.bb42
  store i32 3, i32* %errcode, align 4, !dbg !12798
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then45
  br label %sw.epilog, !dbg !12800

sw.bb48:                                          ; preds = %if.end32
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12801
  %39 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12802
  %call49 = call i32 @ips_reqsen(%struct.ips_ha* %38, %struct.ips_scb* %39) #11, !dbg !12803
  br label %sw.epilog, !dbg !12804

sw.bb50:                                          ; preds = %if.end32, %if.end32, %if.end32, %if.end32, %if.end32, %if.end32
  br label %sw.epilog, !dbg !12805

sw.bb51:                                          ; preds = %if.end32
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12806
  %41 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12808
  %call52 = call i32 @ips_online(%struct.ips_ha* %40, %struct.ips_scb* %41) #11, !dbg !12809
  %tobool53 = icmp ne i32 %call52, 0, !dbg !12809
  br i1 %tobool53, label %lor.lhs.false54, label %if.then57, !dbg !12810

lor.lhs.false54:                                  ; preds = %sw.bb51
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12811
  %43 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12812
  %call55 = call i32 @ips_msense(%struct.ips_ha* %42, %struct.ips_scb* %43) #11, !dbg !12813
  %tobool56 = icmp ne i32 %call55, 0, !dbg !12813
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !12814

if.then57:                                        ; preds = %lor.lhs.false54, %sw.bb51
  store i32 7, i32* %errcode, align 4, !dbg !12815
  br label %if.end58, !dbg !12817

if.end58:                                         ; preds = %if.then57, %lor.lhs.false54
  br label %sw.epilog, !dbg !12818

sw.bb59:                                          ; preds = %if.end32
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12819
  %45 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12821
  %call60 = call i32 @ips_online(%struct.ips_ha* %44, %struct.ips_scb* %45) #11, !dbg !12822
  %tobool61 = icmp ne i32 %call60, 0, !dbg !12822
  br i1 %tobool61, label %if.then62, label %if.else64, !dbg !12823

if.then62:                                        ; preds = %sw.bb59
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12824
  %47 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12825
  %call63 = call i32 @ips_rdcap(%struct.ips_ha* %46, %struct.ips_scb* %47) #11, !dbg !12826
  br label %if.end65, !dbg !12826

if.else64:                                        ; preds = %sw.bb59
  store i32 3, i32* %errcode, align 4, !dbg !12827
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then62
  br label %sw.epilog, !dbg !12829

sw.bb66:                                          ; preds = %if.end32, %if.end32
  br label %sw.epilog, !dbg !12830

sw.bb67:                                          ; preds = %if.end32
  store i32 7, i32* %errcode, align 4, !dbg !12831
  br label %sw.epilog, !dbg !12832

sw.bb68:                                          ; preds = %if.end32, %if.end32, %if.end32, %if.end32, %if.end32
  br label %sw.epilog, !dbg !12833

sw.default:                                       ; preds = %if.end32
  store i32 7, i32* %errcode, align 4, !dbg !12834
  br label %sw.epilog, !dbg !12835

sw.epilog:                                        ; preds = %sw.default, %sw.bb68, %sw.bb67, %sw.bb66, %if.end65, %if.end58, %sw.bb50, %sw.bb48, %if.end47, %if.end41, %sw.bb36, %sw.bb
  %48 = load i32, i32* %errcode, align 4, !dbg !12836
  %shl = shl i32 %48, 16, !dbg !12837
  %49 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12838
  %scsi_cmd69 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %49, i32 0, i32 18, !dbg !12839
  %50 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !12839
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %50, i32 0, i32 24, !dbg !12840
  store i32 %shl, i32* %result, align 8, !dbg !12841
  br label %if.end88, !dbg !12842

if.else70:                                        ; preds = %if.then22
  %51 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12843
  %scsi_cmd71 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %51, i32 0, i32 18, !dbg !12846
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd71, align 8, !dbg !12846
  %cmnd72 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %52, i32 0, i32 14, !dbg !12847
  %53 = load i8*, i8** %cmnd72, align 8, !dbg !12847
  %arrayidx73 = getelementptr i8, i8* %53, i64 0, !dbg !12843
  %54 = load i8, i8* %arrayidx73, align 1, !dbg !12843
  %conv74 = zext i8 %54 to i32, !dbg !12843
  %cmp75 = icmp eq i32 %conv74, 18, !dbg !12848
  br i1 %cmp75, label %if.then77, label %if.end87, !dbg !12849

if.then77:                                        ; preds = %if.else70
  %55 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12850
  %scsi_cmd78 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %55, i32 0, i32 18, !dbg !12852
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd78, align 8, !dbg !12852
  %57 = bitcast %struct.IPS_SCSI_INQ_DATA* %inquiryData to i8*, !dbg !12853
  call void @ips_scmd_buf_read(%struct.scsi_cmnd* %56, i8* %57, i32 37) #11, !dbg !12854
  %DeviceType = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiryData, i32 0, i32 0, !dbg !12855
  %58 = load i8, i8* %DeviceType, align 1, !dbg !12855
  %conv79 = zext i8 %58 to i32, !dbg !12857
  %and80 = and i32 %conv79, 31, !dbg !12858
  %cmp81 = icmp eq i32 %and80, 0, !dbg !12859
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !12860

if.then83:                                        ; preds = %if.then77
  %59 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12861
  %scsi_cmd84 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %59, i32 0, i32 18, !dbg !12862
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd84, align 8, !dbg !12862
  %result85 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %60, i32 0, i32 24, !dbg !12863
  store i32 196608, i32* %result85, align 8, !dbg !12864
  br label %if.end86, !dbg !12861

if.end86:                                         ; preds = %if.then83, %if.then77
  br label %if.end87, !dbg !12865

if.end87:                                         ; preds = %if.end86, %if.else70
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %sw.epilog
  br label %if.end97, !dbg !12866

if.else89:                                        ; preds = %lor.lhs.false
  %61 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12867
  %bus90 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %61, i32 0, i32 3, !dbg !12870
  %62 = load i8, i8* %bus90, align 1, !dbg !12870
  %conv91 = zext i8 %62 to i32, !dbg !12867
  %cmp92 = icmp eq i32 %conv91, 0, !dbg !12871
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !12872

if.then94:                                        ; preds = %if.else89
  br label %if.end95, !dbg !12873

if.end95:                                         ; preds = %if.then94, %if.else89
  %63 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12875
  %64 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !12876
  %65 = load %struct.ips_stat*, %struct.ips_stat** %sp, align 8, !dbg !12877
  %call96 = call i32 @ips_map_status(%struct.ips_ha* %63, %struct.ips_scb* %64, %struct.ips_stat* %65) #11, !dbg !12878
  br label %if.end97

if.end97:                                         ; preds = %if.then, %if.then13, %if.end95, %if.end88
  ret void, !dbg !12879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ips_scb* @ips_removeq_scb(%struct.ips_scb_queue* %queue, %struct.ips_scb* %item) #0 !dbg !12880 {
entry:
  %retval = alloca %struct.ips_scb*, align 8
  %queue.addr = alloca %struct.ips_scb_queue*, align 8
  %item.addr = alloca %struct.ips_scb*, align 8
  %p = alloca %struct.ips_scb*, align 8
  store %struct.ips_scb_queue* %queue, %struct.ips_scb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb_queue** %queue.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  store %struct.ips_scb* %item, %struct.ips_scb** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %item.addr, metadata !12886, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %p, metadata !12888, metadata !DIExpression()), !dbg !12889
  %0 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12890
  %tobool = icmp ne %struct.ips_scb* %0, null, !dbg !12890
  br i1 %tobool, label %if.end, label %if.then, !dbg !12892

if.then:                                          ; preds = %entry
  store %struct.ips_scb* null, %struct.ips_scb** %retval, align 8, !dbg !12893
  br label %return, !dbg !12893

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12894
  %2 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !12896
  %head = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %2, i32 0, i32 0, !dbg !12897
  %3 = load %struct.ips_scb*, %struct.ips_scb** %head, align 8, !dbg !12897
  %cmp = icmp eq %struct.ips_scb* %1, %3, !dbg !12898
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12899

if.then1:                                         ; preds = %if.end
  %4 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !12900
  %call = call %struct.ips_scb* @ips_removeq_scb_head(%struct.ips_scb_queue* %4) #11, !dbg !12902
  store %struct.ips_scb* %call, %struct.ips_scb** %retval, align 8, !dbg !12903
  br label %return, !dbg !12903

if.end2:                                          ; preds = %if.end
  %5 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !12904
  %head3 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %5, i32 0, i32 0, !dbg !12905
  %6 = load %struct.ips_scb*, %struct.ips_scb** %head3, align 8, !dbg !12905
  store %struct.ips_scb* %6, %struct.ips_scb** %p, align 8, !dbg !12906
  br label %while.cond, !dbg !12907

while.cond:                                       ; preds = %while.body, %if.end2
  %7 = load %struct.ips_scb*, %struct.ips_scb** %p, align 8, !dbg !12908
  %tobool4 = icmp ne %struct.ips_scb* %7, null, !dbg !12909
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !12910

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12911
  %9 = load %struct.ips_scb*, %struct.ips_scb** %p, align 8, !dbg !12912
  %q_next = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 19, !dbg !12913
  %10 = load %struct.ips_scb*, %struct.ips_scb** %q_next, align 8, !dbg !12913
  %cmp5 = icmp ne %struct.ips_scb* %8, %10, !dbg !12914
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !12915
  br i1 %11, label %while.body, label %while.end, !dbg !12907

while.body:                                       ; preds = %land.end
  %12 = load %struct.ips_scb*, %struct.ips_scb** %p, align 8, !dbg !12916
  %q_next6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 19, !dbg !12917
  %13 = load %struct.ips_scb*, %struct.ips_scb** %q_next6, align 8, !dbg !12917
  store %struct.ips_scb* %13, %struct.ips_scb** %p, align 8, !dbg !12918
  br label %while.cond, !dbg !12907, !llvm.loop !12919

while.end:                                        ; preds = %land.end
  %14 = load %struct.ips_scb*, %struct.ips_scb** %p, align 8, !dbg !12920
  %tobool7 = icmp ne %struct.ips_scb* %14, null, !dbg !12920
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !12922

if.then8:                                         ; preds = %while.end
  %15 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12923
  %q_next9 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 19, !dbg !12925
  %16 = load %struct.ips_scb*, %struct.ips_scb** %q_next9, align 8, !dbg !12925
  %17 = load %struct.ips_scb*, %struct.ips_scb** %p, align 8, !dbg !12926
  %q_next10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 19, !dbg !12927
  store %struct.ips_scb* %16, %struct.ips_scb** %q_next10, align 8, !dbg !12928
  %18 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12929
  %q_next11 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 19, !dbg !12931
  %19 = load %struct.ips_scb*, %struct.ips_scb** %q_next11, align 8, !dbg !12931
  %tobool12 = icmp ne %struct.ips_scb* %19, null, !dbg !12929
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12932

if.then13:                                        ; preds = %if.then8
  %20 = load %struct.ips_scb*, %struct.ips_scb** %p, align 8, !dbg !12933
  %21 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !12934
  %tail = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %21, i32 0, i32 1, !dbg !12935
  store %struct.ips_scb* %20, %struct.ips_scb** %tail, align 8, !dbg !12936
  br label %if.end14, !dbg !12934

if.end14:                                         ; preds = %if.then13, %if.then8
  %22 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12937
  %q_next15 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %22, i32 0, i32 19, !dbg !12938
  store %struct.ips_scb* null, %struct.ips_scb** %q_next15, align 8, !dbg !12939
  %23 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !12940
  %count = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %23, i32 0, i32 2, !dbg !12941
  %24 = load i32, i32* %count, align 8, !dbg !12942
  %dec = add i32 %24, -1, !dbg !12942
  store i32 %dec, i32* %count, align 8, !dbg !12942
  %25 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !12943
  store %struct.ips_scb* %25, %struct.ips_scb** %retval, align 8, !dbg !12944
  br label %return, !dbg !12944

if.end16:                                         ; preds = %while.end
  store %struct.ips_scb* null, %struct.ips_scb** %retval, align 8, !dbg !12945
  br label %return, !dbg !12945

return:                                           ; preds = %if.end16, %if.end14, %if.then1, %if.then
  %26 = load %struct.ips_scb*, %struct.ips_scb** %retval, align 8, !dbg !12946
  ret %struct.ips_scb* %26, !dbg !12946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_online(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !12947 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !12948, metadata !DIExpression()), !dbg !12949
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !12950, metadata !DIExpression()), !dbg !12951
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12952
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 2, !dbg !12954
  %1 = load i8, i8* %target_id, align 4, !dbg !12954
  %conv = zext i8 %1 to i32, !dbg !12952
  %cmp = icmp sge i32 %conv, 8, !dbg !12955
  br i1 %cmp, label %if.then, label %if.end, !dbg !12956

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12957
  br label %return, !dbg !12957

if.end:                                           ; preds = %entry
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12958
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 9, !dbg !12960
  %3 = load i8, i8* %basic_status, align 8, !dbg !12960
  %conv2 = zext i8 %3 to i32, !dbg !12958
  %and = and i32 %conv2, 15, !dbg !12961
  %cmp3 = icmp sgt i32 %and, 1, !dbg !12962
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !12963

if.then5:                                         ; preds = %if.end
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12964
  %logical_drive_info = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 19, !dbg !12966
  %5 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info, align 8, !dbg !12966
  %6 = bitcast %struct.IPS_LD_INFO* %5 to i8*, !dbg !12967
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 68, i1 false), !dbg !12967
  store i32 0, i32* %retval, align 4, !dbg !12968
  br label %return, !dbg !12968

if.end6:                                          ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12969
  %logical_drive_info7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 19, !dbg !12971
  %8 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info7, align 8, !dbg !12971
  %drive_info = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %8, i32 0, i32 2, !dbg !12972
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12973
  %target_id8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 2, !dbg !12974
  %10 = load i8, i8* %target_id8, align 4, !dbg !12974
  %idxprom = zext i8 %10 to i64, !dbg !12969
  %arrayidx = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info, i64 0, i64 %idxprom, !dbg !12969
  %state = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx, i32 0, i32 3, !dbg !12975
  %11 = load i8, i8* %state, align 1, !dbg !12975
  %conv9 = zext i8 %11 to i32, !dbg !12969
  %cmp10 = icmp ne i32 %conv9, 2, !dbg !12976
  br i1 %cmp10, label %land.lhs.true, label %if.else, !dbg !12977

land.lhs.true:                                    ; preds = %if.end6
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12978
  %logical_drive_info12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 19, !dbg !12979
  %13 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info12, align 8, !dbg !12979
  %drive_info13 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %13, i32 0, i32 2, !dbg !12980
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12981
  %target_id14 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 2, !dbg !12982
  %15 = load i8, i8* %target_id14, align 4, !dbg !12982
  %idxprom15 = zext i8 %15 to i64, !dbg !12978
  %arrayidx16 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info13, i64 0, i64 %idxprom15, !dbg !12978
  %state17 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx16, i32 0, i32 3, !dbg !12983
  %16 = load i8, i8* %state17, align 1, !dbg !12983
  %conv18 = zext i8 %16 to i32, !dbg !12978
  %cmp19 = icmp ne i32 %conv18, 0, !dbg !12984
  br i1 %cmp19, label %land.lhs.true21, label %if.else, !dbg !12985

land.lhs.true21:                                  ; preds = %land.lhs.true
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12986
  %logical_drive_info22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 19, !dbg !12987
  %18 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info22, align 8, !dbg !12987
  %drive_info23 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %18, i32 0, i32 2, !dbg !12988
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12989
  %target_id24 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 2, !dbg !12990
  %20 = load i8, i8* %target_id24, align 4, !dbg !12990
  %idxprom25 = zext i8 %20 to i64, !dbg !12986
  %arrayidx26 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info23, i64 0, i64 %idxprom25, !dbg !12986
  %state27 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx26, i32 0, i32 3, !dbg !12991
  %21 = load i8, i8* %state27, align 1, !dbg !12991
  %conv28 = zext i8 %21 to i32, !dbg !12986
  %cmp29 = icmp ne i32 %conv28, 36, !dbg !12992
  br i1 %cmp29, label %land.lhs.true31, label %if.else, !dbg !12993

land.lhs.true31:                                  ; preds = %land.lhs.true21
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !12994
  %logical_drive_info32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 19, !dbg !12995
  %23 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info32, align 8, !dbg !12995
  %drive_info33 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %23, i32 0, i32 2, !dbg !12996
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !12997
  %target_id34 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 2, !dbg !12998
  %25 = load i8, i8* %target_id34, align 4, !dbg !12998
  %idxprom35 = zext i8 %25 to i64, !dbg !12994
  %arrayidx36 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info33, i64 0, i64 %idxprom35, !dbg !12994
  %state37 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx36, i32 0, i32 3, !dbg !12999
  %26 = load i8, i8* %state37, align 1, !dbg !12999
  %conv38 = zext i8 %26 to i32, !dbg !12994
  %cmp39 = icmp ne i32 %conv38, 6, !dbg !13000
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !13001

if.then41:                                        ; preds = %land.lhs.true31
  store i32 1, i32* %retval, align 4, !dbg !13002
  br label %return, !dbg !13002

if.else:                                          ; preds = %land.lhs.true31, %land.lhs.true21, %land.lhs.true, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13003
  br label %return, !dbg !13003

return:                                           ; preds = %if.else, %if.then41, %if.then5, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !13004
  ret i32 %27, !dbg !13004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_inquiry(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !13005 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %inquiry = alloca %struct.IPS_SCSI_INQ_DATA, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !13006, metadata !DIExpression()), !dbg !13007
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !13008, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_INQ_DATA* %inquiry, metadata !13010, metadata !DIExpression()), !dbg !13011
  %0 = bitcast %struct.IPS_SCSI_INQ_DATA* %inquiry to i8*, !dbg !13012
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 37, i1 false), !dbg !13012
  %DeviceType = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 0, !dbg !13013
  store i8 0, i8* %DeviceType, align 1, !dbg !13014
  %DeviceTypeQualifier = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 1, !dbg !13015
  store i8 0, i8* %DeviceTypeQualifier, align 1, !dbg !13016
  %Version = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 2, !dbg !13017
  store i8 2, i8* %Version, align 1, !dbg !13018
  %ResponseDataFormat = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 3, !dbg !13019
  store i8 2, i8* %ResponseDataFormat, align 1, !dbg !13020
  %AdditionalLength = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 4, !dbg !13021
  store i8 31, i8* %AdditionalLength, align 1, !dbg !13022
  %Flags = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 6, !dbg !13023
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %Flags, i64 0, i64 0, !dbg !13024
  store i8 1, i8* %arrayidx, align 1, !dbg !13025
  %Flags1 = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 6, !dbg !13026
  %arrayidx2 = getelementptr [2 x i8], [2 x i8]* %Flags1, i64 0, i64 1, !dbg !13027
  store i8 50, i8* %arrayidx2, align 1, !dbg !13028
  %VendorId = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 7, !dbg !13029
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %VendorId, i64 0, i64 0, !dbg !13030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i64 8, i1 false), !dbg !13030
  %ProductId = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 8, !dbg !13031
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %ProductId, i64 0, i64 0, !dbg !13032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay3, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i64 16, i1 false), !dbg !13032
  %ProductRevisionLevel = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiry, i32 0, i32 9, !dbg !13033
  %arraydecay4 = getelementptr inbounds [4 x i8], [4 x i8]* %ProductRevisionLevel, i64 0, i64 0, !dbg !13034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay4, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i64 4, i1 false), !dbg !13034
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13035
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %1, i32 0, i32 18, !dbg !13036
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !13036
  %3 = bitcast %struct.IPS_SCSI_INQ_DATA* %inquiry to i8*, !dbg !13037
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %2, i8* %3, i32 37) #11, !dbg !13038
  ret i32 1, !dbg !13039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_msense(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !13040 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %heads = alloca i16, align 2
  %sectors = alloca i16, align 2
  %cylinders = alloca i32, align 4
  %mdata = alloca %struct.IPS_SCSI_MODE_PAGE_DATA, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !13041, metadata !DIExpression()), !dbg !13042
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !13043, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.declare(metadata i16* %heads, metadata !13045, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.declare(metadata i16* %sectors, metadata !13047, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.declare(metadata i32* %cylinders, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, metadata !13051, metadata !DIExpression()), !dbg !13124
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13125
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 21, !dbg !13125
  %1 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !13125
  %ulDriveSize = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %1, i32 0, i32 10, !dbg !13125
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13125
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 2, !dbg !13125
  %3 = load i8, i8* %target_id, align 4, !dbg !13125
  %idxprom = zext i8 %3 to i64, !dbg !13125
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %ulDriveSize, i64 0, i64 %idxprom, !dbg !13125
  %4 = load i32, i32* %arrayidx, align 4, !dbg !13125
  %cmp = icmp ugt i32 %4, 4194304, !dbg !13127
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13128

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13129
  %enq1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 21, !dbg !13130
  %6 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq1, align 8, !dbg !13130
  %ucMiscFlag = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %6, i32 0, i32 1, !dbg !13131
  %7 = load i8, i8* %ucMiscFlag, align 1, !dbg !13131
  %conv = zext i8 %7 to i32, !dbg !13129
  %and = and i32 %conv, 8, !dbg !13132
  %cmp2 = icmp eq i32 %and, 0, !dbg !13133
  br i1 %cmp2, label %if.then, label %if.else, !dbg !13134

if.then:                                          ; preds = %land.lhs.true
  store i16 254, i16* %heads, align 2, !dbg !13135
  store i16 63, i16* %sectors, align 2, !dbg !13137
  br label %if.end, !dbg !13138

if.else:                                          ; preds = %land.lhs.true, %entry
  store i16 128, i16* %heads, align 2, !dbg !13139
  store i16 32, i16* %sectors, align 2, !dbg !13141
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13142
  %enq4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 21, !dbg !13142
  %9 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq4, align 8, !dbg !13142
  %ulDriveSize5 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %9, i32 0, i32 10, !dbg !13142
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13142
  %target_id6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %10, i32 0, i32 2, !dbg !13142
  %11 = load i8, i8* %target_id6, align 4, !dbg !13142
  %idxprom7 = zext i8 %11 to i64, !dbg !13142
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* %ulDriveSize5, i64 0, i64 %idxprom7, !dbg !13142
  %12 = load i32, i32* %arrayidx8, align 4, !dbg !13142
  %sub = sub i32 %12, 1, !dbg !13143
  %13 = load i16, i16* %heads, align 2, !dbg !13144
  %conv9 = zext i16 %13 to i32, !dbg !13144
  %14 = load i16, i16* %sectors, align 2, !dbg !13145
  %conv10 = zext i16 %14 to i32, !dbg !13145
  %mul = mul i32 %conv9, %conv10, !dbg !13146
  %div = udiv i32 %sub, %mul, !dbg !13147
  store i32 %div, i32* %cylinders, align 4, !dbg !13148
  %15 = bitcast %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata to i8*, !dbg !13149
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 44, i1 false), !dbg !13149
  %hdr = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13150
  %BlockDescLength = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr, i32 0, i32 3, !dbg !13151
  store i8 8, i8* %BlockDescLength, align 1, !dbg !13152
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13153
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 18, !dbg !13154
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !13154
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 14, !dbg !13155
  %18 = load i8*, i8** %cmnd, align 8, !dbg !13155
  %arrayidx11 = getelementptr i8, i8* %18, i64 2, !dbg !13153
  %19 = load i8, i8* %arrayidx11, align 1, !dbg !13153
  %conv12 = zext i8 %19 to i32, !dbg !13153
  %and13 = and i32 %conv12, 63, !dbg !13156
  switch i32 %and13, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb54
    i32 8, label %sw.bb130
  ], !dbg !13157

sw.bb:                                            ; preds = %if.end
  %pdata = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13158
  %pg3 = bitcast %union.anon.81* %pdata to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13160
  %PageCode = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg3, i32 0, i32 0, !dbg !13161
  store i8 3, i8* %PageCode, align 4, !dbg !13162
  %pdata14 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13163
  %pg315 = bitcast %union.anon.81* %pdata14 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13164
  %PageLength = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg315, i32 0, i32 1, !dbg !13165
  store i8 24, i8* %PageLength, align 1, !dbg !13166
  %hdr16 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13167
  %BlockDescLength17 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr16, i32 0, i32 3, !dbg !13168
  %20 = load i8, i8* %BlockDescLength17, align 1, !dbg !13168
  %conv18 = zext i8 %20 to i32, !dbg !13169
  %add = add i32 3, %conv18, !dbg !13170
  %pdata19 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13171
  %pg320 = bitcast %union.anon.81* %pdata19 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13172
  %PageLength21 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg320, i32 0, i32 1, !dbg !13173
  %21 = load i8, i8* %PageLength21, align 1, !dbg !13173
  %conv22 = zext i8 %21 to i32, !dbg !13174
  %add23 = add i32 %add, %conv22, !dbg !13175
  %conv24 = trunc i32 %add23 to i8, !dbg !13176
  %hdr25 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13177
  %DataLength = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr25, i32 0, i32 0, !dbg !13178
  store i8 %conv24, i8* %DataLength, align 4, !dbg !13179
  %pdata26 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13180
  %pg327 = bitcast %union.anon.81* %pdata26 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13181
  %TracksPerZone = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg327, i32 0, i32 2, !dbg !13182
  store i16 0, i16* %TracksPerZone, align 2, !dbg !13183
  %pdata28 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13184
  %pg329 = bitcast %union.anon.81* %pdata28 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13185
  %AltSectorsPerZone = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg329, i32 0, i32 3, !dbg !13186
  store i16 0, i16* %AltSectorsPerZone, align 4, !dbg !13187
  %pdata30 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13188
  %pg331 = bitcast %union.anon.81* %pdata30 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13189
  %AltTracksPerZone = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg331, i32 0, i32 4, !dbg !13190
  store i16 0, i16* %AltTracksPerZone, align 2, !dbg !13191
  %pdata32 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13192
  %pg333 = bitcast %union.anon.81* %pdata32 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13193
  %AltTracksPerVolume = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg333, i32 0, i32 5, !dbg !13194
  store i16 0, i16* %AltTracksPerVolume, align 4, !dbg !13195
  %22 = load i16, i16* %sectors, align 2, !dbg !13196
  %23 = call i1 @llvm.is.constant.i16(i16 %22), !dbg !13196
  br i1 %23, label %cond.true, label %cond.false, !dbg !13196

cond.true:                                        ; preds = %sw.bb
  %24 = load i16, i16* %sectors, align 2, !dbg !13196
  %conv34 = zext i16 %24 to i32, !dbg !13196
  %and35 = and i32 %conv34, 255, !dbg !13196
  %shl = shl i32 %and35, 8, !dbg !13196
  %25 = load i16, i16* %sectors, align 2, !dbg !13196
  %conv36 = zext i16 %25 to i32, !dbg !13196
  %and37 = and i32 %conv36, 65280, !dbg !13196
  %shr = ashr i32 %and37, 8, !dbg !13196
  %or = or i32 %shl, %shr, !dbg !13196
  %conv38 = trunc i32 %or to i16, !dbg !13196
  %conv39 = zext i16 %conv38 to i32, !dbg !13196
  br label %cond.end, !dbg !13196

cond.false:                                       ; preds = %sw.bb
  %26 = load i16, i16* %sectors, align 2, !dbg !13196
  %call = call zeroext i16 @__fswab16(i16 zeroext %26) #13, !dbg !13196
  %conv40 = zext i16 %call to i32, !dbg !13196
  br label %cond.end, !dbg !13196

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv39, %cond.true ], [ %conv40, %cond.false ], !dbg !13196
  %conv41 = trunc i32 %cond to i16, !dbg !13196
  %pdata42 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13197
  %pg343 = bitcast %union.anon.81* %pdata42 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13198
  %SectorsPerTrack = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg343, i32 0, i32 6, !dbg !13199
  store i16 %conv41, i16* %SectorsPerTrack, align 2, !dbg !13200
  %pdata44 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13201
  %pg345 = bitcast %union.anon.81* %pdata44 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13202
  %BytesPerSector = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg345, i32 0, i32 7, !dbg !13203
  store i16 2, i16* %BytesPerSector, align 4, !dbg !13204
  %pdata46 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13205
  %pg347 = bitcast %union.anon.81* %pdata46 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13206
  %Interleave = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg347, i32 0, i32 8, !dbg !13207
  store i16 256, i16* %Interleave, align 2, !dbg !13208
  %pdata48 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13209
  %pg349 = bitcast %union.anon.81* %pdata48 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13210
  %TrackSkew = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg349, i32 0, i32 9, !dbg !13211
  store i16 0, i16* %TrackSkew, align 4, !dbg !13212
  %pdata50 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13213
  %pg351 = bitcast %union.anon.81* %pdata50 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13214
  %CylinderSkew = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg351, i32 0, i32 10, !dbg !13215
  store i16 0, i16* %CylinderSkew, align 2, !dbg !13216
  %pdata52 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13217
  %pg353 = bitcast %union.anon.81* %pdata52 to %struct.IPS_SCSI_MODE_PAGE3*, !dbg !13218
  %flags = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE3, %struct.IPS_SCSI_MODE_PAGE3* %pg353, i32 0, i32 11, !dbg !13219
  store i8 1, i8* %flags, align 4, !dbg !13220
  br label %sw.epilog, !dbg !13221

sw.bb54:                                          ; preds = %if.end
  %pdata55 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13222
  %pg4 = bitcast %union.anon.81* %pdata55 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13223
  %PageCode56 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4, i32 0, i32 0, !dbg !13224
  store i8 4, i8* %PageCode56, align 4, !dbg !13225
  %pdata57 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13226
  %pg458 = bitcast %union.anon.81* %pdata57 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13227
  %PageLength59 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg458, i32 0, i32 1, !dbg !13228
  store i8 26, i8* %PageLength59, align 1, !dbg !13229
  %hdr60 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13230
  %BlockDescLength61 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr60, i32 0, i32 3, !dbg !13231
  %27 = load i8, i8* %BlockDescLength61, align 1, !dbg !13231
  %conv62 = zext i8 %27 to i32, !dbg !13232
  %add63 = add i32 3, %conv62, !dbg !13233
  %pdata64 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13234
  %pg465 = bitcast %union.anon.81* %pdata64 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13235
  %PageLength66 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg465, i32 0, i32 1, !dbg !13236
  %28 = load i8, i8* %PageLength66, align 1, !dbg !13236
  %conv67 = zext i8 %28 to i32, !dbg !13237
  %add68 = add i32 %add63, %conv67, !dbg !13238
  %conv69 = trunc i32 %add68 to i8, !dbg !13239
  %hdr70 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13240
  %DataLength71 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr70, i32 0, i32 0, !dbg !13241
  store i8 %conv69, i8* %DataLength71, align 4, !dbg !13242
  %29 = load i32, i32* %cylinders, align 4, !dbg !13243
  %shr72 = lshr i32 %29, 8, !dbg !13243
  %and73 = and i32 %shr72, 65535, !dbg !13243
  %conv74 = trunc i32 %and73 to i16, !dbg !13243
  %30 = call i1 @llvm.is.constant.i16(i16 %conv74), !dbg !13243
  br i1 %30, label %cond.true75, label %cond.false91, !dbg !13243

cond.true75:                                      ; preds = %sw.bb54
  %31 = load i32, i32* %cylinders, align 4, !dbg !13243
  %shr76 = lshr i32 %31, 8, !dbg !13243
  %and77 = and i32 %shr76, 65535, !dbg !13243
  %conv78 = trunc i32 %and77 to i16, !dbg !13243
  %conv79 = zext i16 %conv78 to i32, !dbg !13243
  %and80 = and i32 %conv79, 255, !dbg !13243
  %shl81 = shl i32 %and80, 8, !dbg !13243
  %32 = load i32, i32* %cylinders, align 4, !dbg !13243
  %shr82 = lshr i32 %32, 8, !dbg !13243
  %and83 = and i32 %shr82, 65535, !dbg !13243
  %conv84 = trunc i32 %and83 to i16, !dbg !13243
  %conv85 = zext i16 %conv84 to i32, !dbg !13243
  %and86 = and i32 %conv85, 65280, !dbg !13243
  %shr87 = ashr i32 %and86, 8, !dbg !13243
  %or88 = or i32 %shl81, %shr87, !dbg !13243
  %conv89 = trunc i32 %or88 to i16, !dbg !13243
  %conv90 = zext i16 %conv89 to i32, !dbg !13243
  br label %cond.end97, !dbg !13243

cond.false91:                                     ; preds = %sw.bb54
  %33 = load i32, i32* %cylinders, align 4, !dbg !13243
  %shr92 = lshr i32 %33, 8, !dbg !13243
  %and93 = and i32 %shr92, 65535, !dbg !13243
  %conv94 = trunc i32 %and93 to i16, !dbg !13243
  %call95 = call zeroext i16 @__fswab16(i16 zeroext %conv94) #13, !dbg !13243
  %conv96 = zext i16 %call95 to i32, !dbg !13243
  br label %cond.end97, !dbg !13243

cond.end97:                                       ; preds = %cond.false91, %cond.true75
  %cond98 = phi i32 [ %conv90, %cond.true75 ], [ %conv96, %cond.false91 ], !dbg !13243
  %conv99 = trunc i32 %cond98 to i16, !dbg !13243
  %pdata100 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13244
  %pg4101 = bitcast %union.anon.81* %pdata100 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13245
  %CylindersHigh = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4101, i32 0, i32 2, !dbg !13246
  store i16 %conv99, i16* %CylindersHigh, align 2, !dbg !13247
  %34 = load i32, i32* %cylinders, align 4, !dbg !13248
  %and102 = and i32 %34, 255, !dbg !13249
  %conv103 = trunc i32 %and102 to i8, !dbg !13250
  %pdata104 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13251
  %pg4105 = bitcast %union.anon.81* %pdata104 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13252
  %CylindersLow = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4105, i32 0, i32 3, !dbg !13253
  store i8 %conv103, i8* %CylindersLow, align 4, !dbg !13254
  %35 = load i16, i16* %heads, align 2, !dbg !13255
  %conv106 = trunc i16 %35 to i8, !dbg !13255
  %pdata107 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13256
  %pg4108 = bitcast %union.anon.81* %pdata107 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13257
  %Heads = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4108, i32 0, i32 4, !dbg !13258
  store i8 %conv106, i8* %Heads, align 1, !dbg !13259
  %pdata109 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13260
  %pg4110 = bitcast %union.anon.81* %pdata109 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13261
  %WritePrecompHigh = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4110, i32 0, i32 5, !dbg !13262
  store i16 0, i16* %WritePrecompHigh, align 2, !dbg !13263
  %pdata111 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13264
  %pg4112 = bitcast %union.anon.81* %pdata111 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13265
  %WritePrecompLow = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4112, i32 0, i32 6, !dbg !13266
  store i8 0, i8* %WritePrecompLow, align 4, !dbg !13267
  %pdata113 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13268
  %pg4114 = bitcast %union.anon.81* %pdata113 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13269
  %ReducedWriteCurrentHigh = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4114, i32 0, i32 7, !dbg !13270
  store i16 0, i16* %ReducedWriteCurrentHigh, align 2, !dbg !13271
  %pdata115 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13272
  %pg4116 = bitcast %union.anon.81* %pdata115 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13273
  %ReducedWriteCurrentLow = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4116, i32 0, i32 8, !dbg !13274
  store i8 0, i8* %ReducedWriteCurrentLow, align 4, !dbg !13275
  %pdata117 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13276
  %pg4118 = bitcast %union.anon.81* %pdata117 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13277
  %StepRate = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4118, i32 0, i32 9, !dbg !13278
  store i16 256, i16* %StepRate, align 2, !dbg !13279
  %pdata119 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13280
  %pg4120 = bitcast %union.anon.81* %pdata119 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13281
  %LandingZoneHigh = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4120, i32 0, i32 10, !dbg !13282
  store i16 0, i16* %LandingZoneHigh, align 4, !dbg !13283
  %pdata121 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13284
  %pg4122 = bitcast %union.anon.81* %pdata121 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13285
  %LandingZoneLow = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4122, i32 0, i32 11, !dbg !13286
  store i8 0, i8* %LandingZoneLow, align 2, !dbg !13287
  %pdata123 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13288
  %pg4124 = bitcast %union.anon.81* %pdata123 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13289
  %flags125 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4124, i32 0, i32 12, !dbg !13290
  store i8 0, i8* %flags125, align 1, !dbg !13291
  %pdata126 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13292
  %pg4127 = bitcast %union.anon.81* %pdata126 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13293
  %RotationalOffset = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4127, i32 0, i32 13, !dbg !13294
  store i8 0, i8* %RotationalOffset, align 4, !dbg !13295
  %pdata128 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13296
  %pg4129 = bitcast %union.anon.81* %pdata128 to %struct.IPS_SCSI_MODE_PAGE4*, !dbg !13297
  %MediumRotationRate = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE4, %struct.IPS_SCSI_MODE_PAGE4* %pg4129, i32 0, i32 15, !dbg !13298
  store i16 0, i16* %MediumRotationRate, align 2, !dbg !13299
  br label %sw.epilog, !dbg !13300

sw.bb130:                                         ; preds = %if.end
  %pdata131 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13301
  %pg8 = bitcast %union.anon.81* %pdata131 to %struct.IPS_SCSI_MODE_PAGE8*, !dbg !13302
  %PageCode132 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE8, %struct.IPS_SCSI_MODE_PAGE8* %pg8, i32 0, i32 0, !dbg !13303
  store i8 8, i8* %PageCode132, align 4, !dbg !13304
  %pdata133 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13305
  %pg8134 = bitcast %union.anon.81* %pdata133 to %struct.IPS_SCSI_MODE_PAGE8*, !dbg !13306
  %PageLength135 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE8, %struct.IPS_SCSI_MODE_PAGE8* %pg8134, i32 0, i32 1, !dbg !13307
  store i8 12, i8* %PageLength135, align 1, !dbg !13308
  %hdr136 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13309
  %BlockDescLength137 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr136, i32 0, i32 3, !dbg !13310
  %36 = load i8, i8* %BlockDescLength137, align 1, !dbg !13310
  %conv138 = zext i8 %36 to i32, !dbg !13311
  %add139 = add i32 3, %conv138, !dbg !13312
  %pdata140 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 2, !dbg !13313
  %pg8141 = bitcast %union.anon.81* %pdata140 to %struct.IPS_SCSI_MODE_PAGE8*, !dbg !13314
  %PageLength142 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE8, %struct.IPS_SCSI_MODE_PAGE8* %pg8141, i32 0, i32 1, !dbg !13315
  %37 = load i8, i8* %PageLength142, align 1, !dbg !13315
  %conv143 = zext i8 %37 to i32, !dbg !13316
  %add144 = add i32 %add139, %conv143, !dbg !13317
  %conv145 = trunc i32 %add144 to i8, !dbg !13318
  %hdr146 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_DATA, %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata, i32 0, i32 0, !dbg !13319
  %DataLength147 = getelementptr inbounds %struct.IPS_SCSI_MODE_PAGE_HEADER, %struct.IPS_SCSI_MODE_PAGE_HEADER* %hdr146, i32 0, i32 0, !dbg !13320
  store i8 %conv145, i8* %DataLength147, align 4, !dbg !13321
  br label %sw.epilog, !dbg !13322

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13323
  br label %return, !dbg !13323

sw.epilog:                                        ; preds = %sw.bb130, %cond.end97, %cond.end
  %38 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13324
  %scsi_cmd148 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %38, i32 0, i32 18, !dbg !13325
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd148, align 8, !dbg !13325
  %40 = bitcast %struct.IPS_SCSI_MODE_PAGE_DATA* %mdata to i8*, !dbg !13326
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %39, i8* %40, i32 44) #11, !dbg !13327
  store i32 1, i32* %retval, align 4, !dbg !13328
  br label %return, !dbg !13328

return:                                           ; preds = %sw.epilog, %sw.default
  %41 = load i32, i32* %retval, align 4, !dbg !13329
  ret i32 %41, !dbg !13329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_rdcap(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !13330 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %cap = alloca %struct.IPS_SCSI_CAPACITY, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !13331, metadata !DIExpression()), !dbg !13332
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !13333, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_CAPACITY* %cap, metadata !13335, metadata !DIExpression()), !dbg !13341
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13342
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 18, !dbg !13344
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !13344
  %call = call i32 @scsi_bufflen(%struct.scsi_cmnd* %1) #11, !dbg !13345
  %cmp = icmp ult i32 %call, 8, !dbg !13346
  br i1 %cmp, label %if.then, label %if.end, !dbg !13347

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13348
  br label %return, !dbg !13348

if.end:                                           ; preds = %entry
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13349
  %logical_drive_info = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 19, !dbg !13349
  %3 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info, align 8, !dbg !13349
  %drive_info = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %3, i32 0, i32 2, !dbg !13349
  %4 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13349
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %4, i32 0, i32 2, !dbg !13349
  %5 = load i8, i8* %target_id, align 4, !dbg !13349
  %idxprom = zext i8 %5 to i64, !dbg !13349
  %arrayidx = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info, i64 0, i64 %idxprom, !dbg !13349
  %sector_count = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx, i32 0, i32 4, !dbg !13349
  %6 = load i32, i32* %sector_count, align 4, !dbg !13349
  %sub = sub i32 %6, 1, !dbg !13349
  %7 = call i1 @llvm.is.constant.i32(i32 %sub), !dbg !13349
  br i1 %7, label %cond.true, label %cond.false, !dbg !13349

cond.true:                                        ; preds = %if.end
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13349
  %logical_drive_info1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 19, !dbg !13349
  %9 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info1, align 8, !dbg !13349
  %drive_info2 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %9, i32 0, i32 2, !dbg !13349
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13349
  %target_id3 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %10, i32 0, i32 2, !dbg !13349
  %11 = load i8, i8* %target_id3, align 4, !dbg !13349
  %idxprom4 = zext i8 %11 to i64, !dbg !13349
  %arrayidx5 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info2, i64 0, i64 %idxprom4, !dbg !13349
  %sector_count6 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx5, i32 0, i32 4, !dbg !13349
  %12 = load i32, i32* %sector_count6, align 4, !dbg !13349
  %sub7 = sub i32 %12, 1, !dbg !13349
  %and = and i32 %sub7, 255, !dbg !13349
  %shl = shl i32 %and, 24, !dbg !13349
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13349
  %logical_drive_info8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 19, !dbg !13349
  %14 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info8, align 8, !dbg !13349
  %drive_info9 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %14, i32 0, i32 2, !dbg !13349
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13349
  %target_id10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 2, !dbg !13349
  %16 = load i8, i8* %target_id10, align 4, !dbg !13349
  %idxprom11 = zext i8 %16 to i64, !dbg !13349
  %arrayidx12 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info9, i64 0, i64 %idxprom11, !dbg !13349
  %sector_count13 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx12, i32 0, i32 4, !dbg !13349
  %17 = load i32, i32* %sector_count13, align 4, !dbg !13349
  %sub14 = sub i32 %17, 1, !dbg !13349
  %and15 = and i32 %sub14, 65280, !dbg !13349
  %shl16 = shl i32 %and15, 8, !dbg !13349
  %or = or i32 %shl, %shl16, !dbg !13349
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13349
  %logical_drive_info17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 19, !dbg !13349
  %19 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info17, align 8, !dbg !13349
  %drive_info18 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %19, i32 0, i32 2, !dbg !13349
  %20 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13349
  %target_id19 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %20, i32 0, i32 2, !dbg !13349
  %21 = load i8, i8* %target_id19, align 4, !dbg !13349
  %idxprom20 = zext i8 %21 to i64, !dbg !13349
  %arrayidx21 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info18, i64 0, i64 %idxprom20, !dbg !13349
  %sector_count22 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx21, i32 0, i32 4, !dbg !13349
  %22 = load i32, i32* %sector_count22, align 4, !dbg !13349
  %sub23 = sub i32 %22, 1, !dbg !13349
  %and24 = and i32 %sub23, 16711680, !dbg !13349
  %shr = lshr i32 %and24, 8, !dbg !13349
  %or25 = or i32 %or, %shr, !dbg !13349
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13349
  %logical_drive_info26 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 19, !dbg !13349
  %24 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info26, align 8, !dbg !13349
  %drive_info27 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %24, i32 0, i32 2, !dbg !13349
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13349
  %target_id28 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %25, i32 0, i32 2, !dbg !13349
  %26 = load i8, i8* %target_id28, align 4, !dbg !13349
  %idxprom29 = zext i8 %26 to i64, !dbg !13349
  %arrayidx30 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info27, i64 0, i64 %idxprom29, !dbg !13349
  %sector_count31 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx30, i32 0, i32 4, !dbg !13349
  %27 = load i32, i32* %sector_count31, align 4, !dbg !13349
  %sub32 = sub i32 %27, 1, !dbg !13349
  %and33 = and i32 %sub32, -16777216, !dbg !13349
  %shr34 = lshr i32 %and33, 24, !dbg !13349
  %or35 = or i32 %or25, %shr34, !dbg !13349
  br label %cond.end, !dbg !13349

cond.false:                                       ; preds = %if.end
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13349
  %logical_drive_info36 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 19, !dbg !13349
  %29 = load %struct.IPS_LD_INFO*, %struct.IPS_LD_INFO** %logical_drive_info36, align 8, !dbg !13349
  %drive_info37 = getelementptr inbounds %struct.IPS_LD_INFO, %struct.IPS_LD_INFO* %29, i32 0, i32 2, !dbg !13349
  %30 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13349
  %target_id38 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %30, i32 0, i32 2, !dbg !13349
  %31 = load i8, i8* %target_id38, align 4, !dbg !13349
  %idxprom39 = zext i8 %31 to i64, !dbg !13349
  %arrayidx40 = getelementptr [8 x %struct.IPS_DRIVE_INFO], [8 x %struct.IPS_DRIVE_INFO]* %drive_info37, i64 0, i64 %idxprom39, !dbg !13349
  %sector_count41 = getelementptr inbounds %struct.IPS_DRIVE_INFO, %struct.IPS_DRIVE_INFO* %arrayidx40, i32 0, i32 4, !dbg !13349
  %32 = load i32, i32* %sector_count41, align 4, !dbg !13349
  %sub42 = sub i32 %32, 1, !dbg !13349
  %call43 = call i32 @__fswab32(i32 %sub42) #13, !dbg !13349
  br label %cond.end, !dbg !13349

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or35, %cond.true ], [ %call43, %cond.false ], !dbg !13349
  %lba = getelementptr inbounds %struct.IPS_SCSI_CAPACITY, %struct.IPS_SCSI_CAPACITY* %cap, i32 0, i32 0, !dbg !13350
  store i32 %cond, i32* %lba, align 4, !dbg !13351
  %len = getelementptr inbounds %struct.IPS_SCSI_CAPACITY, %struct.IPS_SCSI_CAPACITY* %cap, i32 0, i32 1, !dbg !13352
  store i32 131072, i32* %len, align 4, !dbg !13353
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13354
  %scsi_cmd44 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %33, i32 0, i32 18, !dbg !13355
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd44, align 8, !dbg !13355
  %35 = bitcast %struct.IPS_SCSI_CAPACITY* %cap to i8*, !dbg !13356
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %34, i8* %35, i32 8) #11, !dbg !13357
  store i32 1, i32* %retval, align 4, !dbg !13358
  br label %return, !dbg !13358

return:                                           ; preds = %cond.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !13359
  ret i32 %36, !dbg !13359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_scmd_buf_read(%struct.scsi_cmnd* %scmd, i8* %data, i32 %count) #0 !dbg !13360 {
entry:
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !13361, metadata !DIExpression()), !dbg !13362
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13363, metadata !DIExpression()), !dbg !13364
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13365, metadata !DIExpression()), !dbg !13366
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13367, metadata !DIExpression()), !dbg !13368
  br label %do.body, !dbg !13369

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13370

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13372, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13376, metadata !DIExpression()), !dbg !13375
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13375
  %conv = zext i1 %cmp to i32, !dbg !13375
  store i32 1, i32* %tmp, align 4, !dbg !13375
  %0 = load i32, i32* %tmp, align 4, !dbg !13375
  %call = call i64 @arch_local_irq_save() #11, !dbg !13377
  store i64 %call, i64* %flags, align 8, !dbg !13377
  br label %do.end, !dbg !13377

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !13370

do.end2:                                          ; preds = %do.end
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !13378
  %2 = load i8*, i8** %data.addr, align 8, !dbg !13379
  %3 = load i32, i32* %count.addr, align 4, !dbg !13380
  %call3 = call i32 @scsi_sg_copy_to_buffer(%struct.scsi_cmnd* %1, i8* %2, i32 %3) #11, !dbg !13381
  br label %do.body4, !dbg !13382

do.body4:                                         ; preds = %do.end2
  br label %do.body5, !dbg !13383

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !13385, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !13389, metadata !DIExpression()), !dbg !13388
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !13388
  %conv9 = zext i1 %cmp8 to i32, !dbg !13388
  store i32 1, i32* %tmp10, align 4, !dbg !13388
  %4 = load i32, i32* %tmp10, align 4, !dbg !13388
  %5 = load i64, i64* %flags, align 8, !dbg !13390
  call void @arch_local_irq_restore(i64 %5) #11, !dbg !13390
  br label %do.end11, !dbg !13390

do.end11:                                         ; preds = %do.body5
  br label %do.end12, !dbg !13383

do.end12:                                         ; preds = %do.end11
  ret void, !dbg !13391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_map_status(%struct.ips_ha* %ha, %struct.ips_scb* %scb, %struct.ips_stat* %sp) #0 !dbg !13392 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %sp.addr = alloca %struct.ips_stat*, align 8
  %errcode = alloca i32, align 4
  %device_error = alloca i32, align 4
  %transfer_len = alloca i32, align 4
  %tapeDCDB = alloca %struct.IPS_DCDB_TABLE_TAPE*, align 8
  %inquiryData = alloca %struct.IPS_SCSI_INQ_DATA, align 1
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !13395, metadata !DIExpression()), !dbg !13396
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !13397, metadata !DIExpression()), !dbg !13398
  store %struct.ips_stat* %sp, %struct.ips_stat** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_stat** %sp.addr, metadata !13399, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.declare(metadata i32* %errcode, metadata !13401, metadata !DIExpression()), !dbg !13402
  call void @llvm.dbg.declare(metadata i32* %device_error, metadata !13403, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.declare(metadata i32* %transfer_len, metadata !13405, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.declare(metadata %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, metadata !13407, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.declare(metadata %struct.IPS_SCSI_INQ_DATA* %inquiryData, metadata !13409, metadata !DIExpression()), !dbg !13410
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13411
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 3, !dbg !13413
  %1 = load i8, i8* %bus, align 1, !dbg !13413
  %tobool = icmp ne i8 %1, 0, !dbg !13411
  br i1 %tobool, label %if.then, label %if.end, !dbg !13414

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !13415

if.end:                                           ; preds = %if.then, %entry
  store i32 7, i32* %errcode, align 4, !dbg !13417
  store i32 0, i32* %device_error, align 4, !dbg !13418
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13419
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 9, !dbg !13420
  %3 = load i8, i8* %basic_status, align 8, !dbg !13420
  %conv = zext i8 %3 to i32, !dbg !13419
  %and = and i32 %conv, 15, !dbg !13421
  switch i32 %and, label %sw.epilog78 [
    i32 14, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb1
    i32 5, label %sw.bb1
    i32 13, label %sw.bb1
    i32 12, label %sw.bb1
    i32 15, label %sw.bb2
  ], !dbg !13422

sw.bb:                                            ; preds = %if.end
  store i32 3, i32* %errcode, align 4, !dbg !13423
  br label %sw.epilog78, !dbg !13425

sw.bb1:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end
  br label %sw.epilog78, !dbg !13426

sw.bb2:                                           ; preds = %if.end
  %4 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13427
  %extended_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %4, i32 0, i32 10, !dbg !13428
  %5 = load i8, i8* %extended_status, align 1, !dbg !13428
  %conv3 = zext i8 %5 to i32, !dbg !13427
  switch i32 %conv3, label %sw.default [
    i32 240, label %sw.bb4
    i32 242, label %sw.bb9
    i32 252, label %sw.bb44
    i32 247, label %sw.bb49
    i32 248, label %sw.bb49
    i32 255, label %sw.bb50
  ], !dbg !13429

sw.bb4:                                           ; preds = %sw.bb2
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13430
  %bus5 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %6, i32 0, i32 3, !dbg !13433
  %7 = load i8, i8* %bus5, align 1, !dbg !13433
  %tobool6 = icmp ne i8 %7, 0, !dbg !13430
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !13434

if.then7:                                         ; preds = %sw.bb4
  store i32 1, i32* %errcode, align 4, !dbg !13435
  br label %if.end8, !dbg !13436

if.end8:                                          ; preds = %if.then7, %sw.bb4
  br label %sw.epilog, !dbg !13437

sw.bb9:                                           ; preds = %sw.bb2
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13438
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 0, !dbg !13440
  %dcdb = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_DCDB_CMD*, !dbg !13441
  %op_code = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb, i32 0, i32 0, !dbg !13442
  %9 = load i8, i8* %op_code, align 8, !dbg !13442
  %conv10 = zext i8 %9 to i32, !dbg !13438
  %cmp = icmp eq i32 %conv10, 149, !dbg !13443
  br i1 %cmp, label %if.then18, label %lor.lhs.false, !dbg !13444

lor.lhs.false:                                    ; preds = %sw.bb9
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13445
  %cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %10, i32 0, i32 0, !dbg !13446
  %dcdb13 = bitcast %union.IPS_HOST_COMMAND* %cmd12 to %struct.IPS_DCDB_CMD*, !dbg !13447
  %op_code14 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb13, i32 0, i32 0, !dbg !13448
  %11 = load i8, i8* %op_code14, align 8, !dbg !13448
  %conv15 = zext i8 %11 to i32, !dbg !13445
  %cmp16 = icmp eq i32 %conv15, 150, !dbg !13449
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !13450

if.then18:                                        ; preds = %lor.lhs.false, %sw.bb9
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13451
  %dcdb19 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 1, !dbg !13453
  %13 = bitcast %struct.IPS_DCDB_TABLE* %dcdb19 to %struct.IPS_DCDB_TABLE_TAPE*, !dbg !13454
  store %struct.IPS_DCDB_TABLE_TAPE* %13, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !13455
  %14 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !13456
  %transfer_length = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %14, i32 0, i32 4, !dbg !13457
  %15 = load i32, i32* %transfer_length, align 4, !dbg !13457
  store i32 %15, i32* %transfer_len, align 4, !dbg !13458
  br label %if.end23, !dbg !13459

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13460
  %dcdb20 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 1, !dbg !13462
  %transfer_length21 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb20, i32 0, i32 2, !dbg !13463
  %17 = load i16, i16* %transfer_length21, align 2, !dbg !13463
  %conv22 = zext i16 %17 to i32, !dbg !13464
  store i32 %conv22, i32* %transfer_len, align 4, !dbg !13465
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13466
  %bus24 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 3, !dbg !13468
  %19 = load i8, i8* %bus24, align 1, !dbg !13468
  %conv25 = zext i8 %19 to i32, !dbg !13469
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !13469
  br i1 %tobool26, label %land.lhs.true, label %if.else42, !dbg !13470

land.lhs.true:                                    ; preds = %if.end23
  %20 = load i32, i32* %transfer_len, align 4, !dbg !13471
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13472
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %21, i32 0, i32 13, !dbg !13473
  %22 = load i32, i32* %data_len, align 4, !dbg !13473
  %cmp27 = icmp ult i32 %20, %22, !dbg !13474
  br i1 %cmp27, label %if.then29, label %if.else42, !dbg !13475

if.then29:                                        ; preds = %land.lhs.true
  store i32 0, i32* %errcode, align 4, !dbg !13476
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13478
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %23, i32 0, i32 18, !dbg !13480
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !13480
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 14, !dbg !13481
  %25 = load i8*, i8** %cmnd, align 8, !dbg !13481
  %arrayidx = getelementptr i8, i8* %25, i64 0, !dbg !13478
  %26 = load i8, i8* %arrayidx, align 1, !dbg !13478
  %conv30 = zext i8 %26 to i32, !dbg !13478
  %cmp31 = icmp eq i32 %conv30, 18, !dbg !13482
  br i1 %cmp31, label %if.then33, label %if.end41, !dbg !13483

if.then33:                                        ; preds = %if.then29
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13484
  %scsi_cmd34 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %27, i32 0, i32 18, !dbg !13486
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd34, align 8, !dbg !13486
  %29 = bitcast %struct.IPS_SCSI_INQ_DATA* %inquiryData to i8*, !dbg !13487
  call void @ips_scmd_buf_read(%struct.scsi_cmnd* %28, i8* %29, i32 37) #11, !dbg !13488
  %DeviceType = getelementptr inbounds %struct.IPS_SCSI_INQ_DATA, %struct.IPS_SCSI_INQ_DATA* %inquiryData, i32 0, i32 0, !dbg !13489
  %30 = load i8, i8* %DeviceType, align 1, !dbg !13489
  %conv35 = zext i8 %30 to i32, !dbg !13491
  %and36 = and i32 %conv35, 31, !dbg !13492
  %cmp37 = icmp eq i32 %and36, 0, !dbg !13493
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !13494

if.then39:                                        ; preds = %if.then33
  store i32 3, i32* %errcode, align 4, !dbg !13495
  br label %sw.epilog, !dbg !13497

if.end40:                                         ; preds = %if.then33
  br label %if.end41, !dbg !13498

if.end41:                                         ; preds = %if.end40, %if.then29
  br label %if.end43, !dbg !13499

if.else42:                                        ; preds = %land.lhs.true, %if.end23
  store i32 7, i32* %errcode, align 4, !dbg !13500
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.end41
  br label %sw.epilog, !dbg !13501

sw.bb44:                                          ; preds = %sw.bb2
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13502
  %bus45 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 3, !dbg !13504
  %32 = load i8, i8* %bus45, align 1, !dbg !13504
  %tobool46 = icmp ne i8 %32, 0, !dbg !13502
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !13505

if.then47:                                        ; preds = %sw.bb44
  store i32 0, i32* %errcode, align 4, !dbg !13506
  br label %if.end48, !dbg !13507

if.end48:                                         ; preds = %if.then47, %sw.bb44
  br label %sw.epilog, !dbg !13508

sw.bb49:                                          ; preds = %sw.bb2, %sw.bb2
  store i32 8, i32* %errcode, align 4, !dbg !13509
  br label %sw.epilog, !dbg !13510

sw.bb50:                                          ; preds = %sw.bb2
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13511
  %bus51 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %33, i32 0, i32 3, !dbg !13513
  %34 = load i8, i8* %bus51, align 1, !dbg !13513
  %tobool52 = icmp ne i8 %34, 0, !dbg !13511
  br i1 %tobool52, label %if.then53, label %if.end77, !dbg !13514

if.then53:                                        ; preds = %sw.bb50
  %35 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13515
  %cmd54 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %35, i32 0, i32 0, !dbg !13518
  %dcdb55 = bitcast %union.IPS_HOST_COMMAND* %cmd54 to %struct.IPS_DCDB_CMD*, !dbg !13519
  %op_code56 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb55, i32 0, i32 0, !dbg !13520
  %36 = load i8, i8* %op_code56, align 8, !dbg !13520
  %conv57 = zext i8 %36 to i32, !dbg !13515
  %cmp58 = icmp eq i32 %conv57, 149, !dbg !13521
  br i1 %cmp58, label %if.then67, label %lor.lhs.false60, !dbg !13522

lor.lhs.false60:                                  ; preds = %if.then53
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13523
  %cmd61 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %37, i32 0, i32 0, !dbg !13524
  %dcdb62 = bitcast %union.IPS_HOST_COMMAND* %cmd61 to %struct.IPS_DCDB_CMD*, !dbg !13525
  %op_code63 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb62, i32 0, i32 0, !dbg !13526
  %38 = load i8, i8* %op_code63, align 8, !dbg !13526
  %conv64 = zext i8 %38 to i32, !dbg !13523
  %cmp65 = icmp eq i32 %conv64, 150, !dbg !13527
  br i1 %cmp65, label %if.then67, label %if.else70, !dbg !13528

if.then67:                                        ; preds = %lor.lhs.false60, %if.then53
  %39 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13529
  %dcdb68 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %39, i32 0, i32 1, !dbg !13531
  %40 = bitcast %struct.IPS_DCDB_TABLE* %dcdb68 to %struct.IPS_DCDB_TABLE_TAPE*, !dbg !13532
  store %struct.IPS_DCDB_TABLE_TAPE* %40, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !13533
  %41 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13534
  %scsi_cmd69 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %41, i32 0, i32 18, !dbg !13535
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !13535
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 20, !dbg !13536
  %43 = load i8*, i8** %sense_buffer, align 8, !dbg !13536
  %44 = load %struct.IPS_DCDB_TABLE_TAPE*, %struct.IPS_DCDB_TABLE_TAPE** %tapeDCDB, align 8, !dbg !13537
  %sense_info = getelementptr inbounds %struct.IPS_DCDB_TABLE_TAPE, %struct.IPS_DCDB_TABLE_TAPE* %44, i32 0, i32 11, !dbg !13538
  %arraydecay = getelementptr inbounds [56 x i8], [56 x i8]* %sense_info, i64 0, i64 0, !dbg !13539
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 4 %arraydecay, i64 96, i1 false), !dbg !13539
  br label %if.end76, !dbg !13540

if.else70:                                        ; preds = %lor.lhs.false60
  %45 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13541
  %scsi_cmd71 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %45, i32 0, i32 18, !dbg !13543
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd71, align 8, !dbg !13543
  %sense_buffer72 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 20, !dbg !13544
  %47 = load i8*, i8** %sense_buffer72, align 8, !dbg !13544
  %48 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13545
  %dcdb73 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %48, i32 0, i32 1, !dbg !13546
  %sense_info74 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb73, i32 0, i32 9, !dbg !13547
  %arraydecay75 = getelementptr inbounds [64 x i8], [64 x i8]* %sense_info74, i64 0, i64 0, !dbg !13548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 8 %arraydecay75, i64 96, i1 false), !dbg !13548
  br label %if.end76

if.end76:                                         ; preds = %if.else70, %if.then67
  store i32 2, i32* %device_error, align 4, !dbg !13549
  br label %if.end77, !dbg !13550

if.end77:                                         ; preds = %if.end76, %sw.bb50
  store i32 0, i32* %errcode, align 4, !dbg !13551
  br label %sw.epilog, !dbg !13552

sw.default:                                       ; preds = %sw.bb2
  store i32 7, i32* %errcode, align 4, !dbg !13553
  br label %sw.epilog, !dbg !13554

sw.epilog:                                        ; preds = %sw.default, %if.end77, %sw.bb49, %if.end48, %if.end43, %if.then39, %if.end8
  br label %sw.epilog78, !dbg !13555

sw.epilog78:                                      ; preds = %sw.epilog, %if.end, %sw.bb1, %sw.bb
  %49 = load i32, i32* %device_error, align 4, !dbg !13556
  %50 = load i32, i32* %errcode, align 4, !dbg !13557
  %shl = shl i32 %50, 16, !dbg !13558
  %or = or i32 %49, %shl, !dbg !13559
  %51 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !13560
  %scsi_cmd79 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %51, i32 0, i32 18, !dbg !13561
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd79, align 8, !dbg !13561
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %52, i32 0, i32 24, !dbg !13562
  store i32 %or, i32* %result, align 8, !dbg !13563
  ret i32 1, !dbg !13564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ips_scb* @ips_removeq_scb_head(%struct.ips_scb_queue* %queue) #0 !dbg !13565 {
entry:
  %retval = alloca %struct.ips_scb*, align 8
  %queue.addr = alloca %struct.ips_scb_queue*, align 8
  %item = alloca %struct.ips_scb*, align 8
  store %struct.ips_scb_queue* %queue, %struct.ips_scb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb_queue** %queue.addr, metadata !13568, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %item, metadata !13570, metadata !DIExpression()), !dbg !13571
  %0 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !13572
  %head = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %0, i32 0, i32 0, !dbg !13573
  %1 = load %struct.ips_scb*, %struct.ips_scb** %head, align 8, !dbg !13573
  store %struct.ips_scb* %1, %struct.ips_scb** %item, align 8, !dbg !13574
  %2 = load %struct.ips_scb*, %struct.ips_scb** %item, align 8, !dbg !13575
  %tobool = icmp ne %struct.ips_scb* %2, null, !dbg !13575
  br i1 %tobool, label %if.end, label %if.then, !dbg !13577

if.then:                                          ; preds = %entry
  store %struct.ips_scb* null, %struct.ips_scb** %retval, align 8, !dbg !13578
  br label %return, !dbg !13578

if.end:                                           ; preds = %entry
  %3 = load %struct.ips_scb*, %struct.ips_scb** %item, align 8, !dbg !13580
  %q_next = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 19, !dbg !13581
  %4 = load %struct.ips_scb*, %struct.ips_scb** %q_next, align 8, !dbg !13581
  %5 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !13582
  %head1 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %5, i32 0, i32 0, !dbg !13583
  store %struct.ips_scb* %4, %struct.ips_scb** %head1, align 8, !dbg !13584
  %6 = load %struct.ips_scb*, %struct.ips_scb** %item, align 8, !dbg !13585
  %q_next2 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %6, i32 0, i32 19, !dbg !13586
  store %struct.ips_scb* null, %struct.ips_scb** %q_next2, align 8, !dbg !13587
  %7 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !13588
  %tail = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %7, i32 0, i32 1, !dbg !13590
  %8 = load %struct.ips_scb*, %struct.ips_scb** %tail, align 8, !dbg !13590
  %9 = load %struct.ips_scb*, %struct.ips_scb** %item, align 8, !dbg !13591
  %cmp = icmp eq %struct.ips_scb* %8, %9, !dbg !13592
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !13593

if.then3:                                         ; preds = %if.end
  %10 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !13594
  %tail4 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %10, i32 0, i32 1, !dbg !13595
  store %struct.ips_scb* null, %struct.ips_scb** %tail4, align 8, !dbg !13596
  br label %if.end5, !dbg !13594

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !13597
  %count = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %11, i32 0, i32 2, !dbg !13598
  %12 = load i32, i32* %count, align 8, !dbg !13599
  %dec = add i32 %12, -1, !dbg !13599
  store i32 %dec, i32* %count, align 8, !dbg !13599
  %13 = load %struct.ips_scb*, %struct.ips_scb** %item, align 8, !dbg !13600
  store %struct.ips_scb* %13, %struct.ips_scb** %retval, align 8, !dbg !13601
  br label %return, !dbg !13601

return:                                           ; preds = %if.end5, %if.then
  %14 = load %struct.ips_scb*, %struct.ips_scb** %retval, align 8, !dbg !13602
  ret %struct.ips_scb* %14, !dbg !13602
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #7 !dbg !13603 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !13607, metadata !DIExpression()), !dbg !13608
  %0 = load i16, i16* %val.addr, align 2, !dbg !13609
  %conv = zext i16 %0 to i32, !dbg !13609
  %and = and i32 %conv, 255, !dbg !13609
  %shl = shl i32 %and, 8, !dbg !13609
  %1 = load i16, i16* %val.addr, align 2, !dbg !13609
  %conv1 = zext i16 %1 to i32, !dbg !13609
  %and2 = and i32 %conv1, 65280, !dbg !13609
  %shr = ashr i32 %and2, 8, !dbg !13609
  %or = or i32 %shl, %shr, !dbg !13609
  %conv3 = trunc i32 %or to i16, !dbg !13609
  ret i16 %conv3, !dbg !13610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_bufflen(%struct.scsi_cmnd* %cmd) #0 !dbg !13611 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13612, metadata !DIExpression()), !dbg !13613
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13614
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !13615
  %length = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 1, !dbg !13616
  %1 = load i32, i32* %length, align 8, !dbg !13616
  ret i32 %1, !dbg !13617
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #7 !dbg !13618 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13621, metadata !DIExpression()), !dbg !13622
  %0 = load i32, i32* %val.addr, align 4, !dbg !13623
  %call = call i32 @__arch_swab32(i32 %0) #13, !dbg !13624
  ret i32 %call, !dbg !13625
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #7 !dbg !13626 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13628, metadata !DIExpression()), !dbg !13629
  %0 = load i32, i32* %val.addr, align 4, !dbg !13630
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #15, !dbg !13631, !srcloc !13632
  store i32 %1, i32* %val.addr, align 4, !dbg !13631
  %2 = load i32, i32* %val.addr, align 4, !dbg !13633
  ret i32 %2, !dbg !13634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_copy_to_buffer(%struct.scsi_cmnd* %cmd, i8* %buf, i32 %buflen) #0 !dbg !13635 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13638, metadata !DIExpression()), !dbg !13639
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !13640, metadata !DIExpression()), !dbg !13641
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13642
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %0) #11, !dbg !13643
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13644
  %call1 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %1) #11, !dbg !13645
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13646
  %3 = load i32, i32* %buflen.addr, align 4, !dbg !13647
  %conv = sext i32 %3 to i64, !dbg !13647
  %call2 = call i64 @sg_copy_to_buffer(%struct.scatterlist* %call, i32 %call1, i8* %2, i64 %conv) #11, !dbg !13648
  %conv3 = trunc i64 %call2 to i32, !dbg !13648
  ret i32 %conv3, !dbg !13649
}

; Function Attrs: noredzone
declare dso_local i64 @sg_copy_to_buffer(%struct.scatterlist*, i32, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #0 !dbg !13650 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13653, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !13655, metadata !DIExpression()), !dbg !13654
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !13654
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !13654, !srcloc !13656
  store i8 %1, i8* %ret, align 1, !dbg !13654
  %2 = load i8, i8* %ret, align 1, !dbg !13654
  ret i8 %2, !dbg !13654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #0 !dbg !13657 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13660, metadata !DIExpression()), !dbg !13661
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13662, metadata !DIExpression()), !dbg !13661
  %0 = load i8, i8* %val.addr, align 1, !dbg !13661
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !13661
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !13661, !srcloc !13663
  ret void, !dbg !13661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #0 !dbg !13664 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.declare(metadata i8* %value, metadata !13669, metadata !DIExpression()), !dbg !13668
  %0 = load i32, i32* %port.addr, align 4, !dbg !13668
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #10, !dbg !13668, !srcloc !13670
  store i8 %1, i8* %value, align 1, !dbg !13668
  %2 = load i8, i8* %value, align 1, !dbg !13668
  ret i8 %2, !dbg !13668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !13671 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !13674, metadata !DIExpression()), !dbg !13675
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13676, metadata !DIExpression()), !dbg !13675
  %0 = load i8, i8* %value.addr, align 1, !dbg !13675
  %1 = load i32, i32* %port.addr, align 4, !dbg !13675
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #10, !dbg !13675, !srcloc !13677
  ret void, !dbg !13675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outl(i32 %value, i32 %port) #0 !dbg !13678 {
entry:
  %value.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !13681, metadata !DIExpression()), !dbg !13682
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13683, metadata !DIExpression()), !dbg !13682
  %0 = load i32, i32* %value.addr, align 4, !dbg !13682
  %1 = load i32, i32* %port.addr, align 4, !dbg !13682
  call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #10, !dbg !13682, !srcloc !13684
  ret void, !dbg !13682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @inl(i32 %port) #0 !dbg !13685 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13688, metadata !DIExpression()), !dbg !13689
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13690, metadata !DIExpression()), !dbg !13689
  %0 = load i32, i32* %port.addr, align 4, !dbg !13689
  %1 = call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #10, !dbg !13689, !srcloc !13691
  store i32 %1, i32* %value, align 4, !dbg !13689
  %2 = load i32, i32* %value, align 4, !dbg !13689
  ret i32 %2, !dbg !13689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #0 !dbg !13692 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !13695, metadata !DIExpression()), !dbg !13696
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13697, metadata !DIExpression()), !dbg !13696
  %0 = load i16, i16* %value.addr, align 2, !dbg !13696
  %1 = load i32, i32* %port.addr, align 4, !dbg !13696
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #10, !dbg !13696, !srcloc !13698
  ret void, !dbg !13696
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !13699 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13707, metadata !DIExpression()), !dbg !13708
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !13709, metadata !DIExpression()), !dbg !13710
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !13711, metadata !DIExpression()), !dbg !13712
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13713, metadata !DIExpression()), !dbg !13714
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !13715, metadata !DIExpression()), !dbg !13716
  %0 = load i32, i32* %irq.addr, align 4, !dbg !13717
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !13718
  %2 = load i64, i64* %flags.addr, align 8, !dbg !13719
  %3 = load i8*, i8** %name.addr, align 8, !dbg !13720
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !13721
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !13722
  ret i32 %call, !dbg !13723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_ipsintr(i32 %irq, i8* %dev_id) #0 !dbg !13724 {
entry:
  %lock.addr.i15 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i15, metadata !13725, metadata !DIExpression()), !dbg !13730
  %lock.addr.i13 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i13, metadata !13725, metadata !DIExpression()), !dbg !13732
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13736, metadata !DIExpression()), !dbg !13738
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %host = alloca %struct.Scsi_Host*, align 8
  %irqstatus = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13740, metadata !DIExpression()), !dbg !13741
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !13742, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !13744, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !13746, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.declare(metadata i32* %irqstatus, metadata !13748, metadata !DIExpression()), !dbg !13749
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !13750
  %1 = bitcast i8* %0 to %struct.ips_ha*, !dbg !13751
  store %struct.ips_ha* %1, %struct.ips_ha** %ha, align 8, !dbg !13752
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13753
  %tobool = icmp ne %struct.ips_ha* %2, null, !dbg !13753
  br i1 %tobool, label %if.end, label %if.then, !dbg !13755

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13756
  br label %return, !dbg !13756

if.end:                                           ; preds = %entry
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13757
  %host_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 7, !dbg !13758
  %4 = load i16, i16* %host_num, align 2, !dbg !13758
  %idxprom = zext i16 %4 to i64, !dbg !13759
  %arrayidx = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom, !dbg !13759
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx, align 8, !dbg !13759
  store %struct.Scsi_Host* %5, %struct.Scsi_Host** %host, align 8, !dbg !13760
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13761
  %tobool1 = icmp ne %struct.Scsi_Host* %6, null, !dbg !13761
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !13763

if.then2:                                         ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13764
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 43, !dbg !13766
  %intr = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 9, !dbg !13767
  %8 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %intr, align 8, !dbg !13767
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13768
  %call = call i32 %8(%struct.ips_ha* %9) #11, !dbg !13769
  store i32 1, i32* %retval, align 4, !dbg !13770
  br label %return, !dbg !13770

if.end3:                                          ; preds = %if.end
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13771
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 4, !dbg !13772
  %11 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !13772
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13773, !srcloc !13775
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13776
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !13776
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !13776
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13778
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 30, !dbg !13779
  %15 = load i8, i8* %active, align 1, !dbg !13779
  %tobool4 = icmp ne i8 %15, 0, !dbg !13778
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !13780

if.then5:                                         ; preds = %if.end3
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13781
  %host_lock6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 4, !dbg !13782
  %17 = load %struct.spinlock*, %struct.spinlock** %host_lock6, align 8, !dbg !13782
  store %struct.spinlock* %17, %struct.spinlock** %lock.addr.i13, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13783, !srcloc !13785
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i13, align 8, !dbg !13786
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !13786
  %rlock.i14 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !13786
  store i32 1, i32* %retval, align 4, !dbg !13788
  br label %return, !dbg !13788

if.end7:                                          ; preds = %if.end3
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13789
  %func8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 43, !dbg !13790
  %intr9 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func8, i32 0, i32 9, !dbg !13791
  %21 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %intr9, align 8, !dbg !13791
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13792
  %call10 = call i32 %21(%struct.ips_ha* %22) #11, !dbg !13793
  store i32 %call10, i32* %irqstatus, align 4, !dbg !13794
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13795
  %host_lock11 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 4, !dbg !13796
  %24 = load %struct.spinlock*, %struct.spinlock** %host_lock11, align 8, !dbg !13796
  store %struct.spinlock* %24, %struct.spinlock** %lock.addr.i15, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13797, !srcloc !13785
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i15, align 8, !dbg !13798
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !13798
  %rlock.i16 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !13798
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !13799
  call void @ips_next(%struct.ips_ha* %27, i32 0) #11, !dbg !13800
  %28 = load i32, i32* %irqstatus, align 4, !dbg !13801
  %tobool12 = icmp ne i32 %28, 0, !dbg !13801
  %29 = zext i1 %tobool12 to i64, !dbg !13801
  %cond = select i1 %tobool12, i32 1, i32 0, !dbg !13801
  store i32 %cond, i32* %retval, align 4, !dbg !13802
  br label %return, !dbg !13802

return:                                           ; preds = %if.end7, %if.then5, %if.then2, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !13803
  ret i32 %30, !dbg !13803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_allocatescbs(%struct.ips_ha* %ha) #0 !dbg !13804 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb_p = alloca %struct.ips_scb*, align 8
  %ips_sg = alloca %union.IPS_SG_LIST, align 8
  %i = alloca i32, align 4
  %command_dma = alloca i64, align 8
  %sg_dma = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !13805, metadata !DIExpression()), !dbg !13806
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb_p, metadata !13807, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.declare(metadata %union.IPS_SG_LIST* %ips_sg, metadata !13809, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13811, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.declare(metadata i64* %command_dma, metadata !13813, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.declare(metadata i64* %sg_dma, metadata !13815, metadata !DIExpression()), !dbg !13816
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13817
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 44, !dbg !13818
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !13818
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !13819
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13820
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !13821
  %3 = load i32, i32* %max_cmds, align 8, !dbg !13821
  %conv = zext i32 %3 to i64, !dbg !13820
  %mul = mul i64 %conv, 216, !dbg !13822
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %mul, i64* %command_dma, i32 3264) #11, !dbg !13823
  %4 = bitcast i8* %call to %struct.ips_scb*, !dbg !13823
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13824
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 12, !dbg !13825
  store %struct.ips_scb* %4, %struct.ips_scb** %scbs, align 8, !dbg !13826
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13827
  %scbs1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 12, !dbg !13829
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scbs1, align 8, !dbg !13829
  %cmp = icmp eq %struct.ips_scb* %7, null, !dbg !13830
  br i1 %cmp, label %if.then, label %if.end, !dbg !13831

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13832
  br label %return, !dbg !13832

if.end:                                           ; preds = %entry
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13833
  %pcidev3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 44, !dbg !13834
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pcidev3, align 8, !dbg !13834
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !13835
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13836
  %flags = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 28, !dbg !13836
  %11 = load i32, i32* %flags, align 8, !dbg !13836
  %and = and i32 %11, 1, !dbg !13836
  %tobool = icmp ne i32 %and, 0, !dbg !13836
  %12 = zext i1 %tobool to i64, !dbg !13836
  %cond = select i1 %tobool, i64 16, i64 8, !dbg !13836
  %mul5 = mul i64 %cond, 17, !dbg !13837
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13838
  %max_cmds6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 9, !dbg !13839
  %14 = load i32, i32* %max_cmds6, align 8, !dbg !13839
  %conv7 = zext i32 %14 to i64, !dbg !13838
  %mul8 = mul i64 %mul5, %conv7, !dbg !13840
  %call9 = call i8* @dma_alloc_coherent(%struct.device* %dev4, i64 %mul8, i64* %sg_dma, i32 3264) #11, !dbg !13841
  %list = bitcast %union.IPS_SG_LIST* %ips_sg to i8**, !dbg !13842
  store i8* %call9, i8** %list, align 8, !dbg !13843
  %list10 = bitcast %union.IPS_SG_LIST* %ips_sg to i8**, !dbg !13844
  %15 = load i8*, i8** %list10, align 8, !dbg !13844
  %cmp11 = icmp eq i8* %15, null, !dbg !13846
  br i1 %cmp11, label %if.then13, label %if.end20, !dbg !13847

if.then13:                                        ; preds = %if.end
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13848
  %pcidev14 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 44, !dbg !13850
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev14, align 8, !dbg !13850
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !13851
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13852
  %max_cmds16 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 9, !dbg !13853
  %19 = load i32, i32* %max_cmds16, align 8, !dbg !13853
  %conv17 = zext i32 %19 to i64, !dbg !13852
  %mul18 = mul i64 %conv17, 216, !dbg !13854
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13855
  %scbs19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 12, !dbg !13856
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scbs19, align 8, !dbg !13856
  %22 = bitcast %struct.ips_scb* %21 to i8*, !dbg !13855
  %23 = load i64, i64* %command_dma, align 8, !dbg !13857
  call void @dma_free_coherent(%struct.device* %dev15, i64 %mul18, i8* %22, i64 %23) #11, !dbg !13858
  store i32 0, i32* %retval, align 4, !dbg !13859
  br label %return, !dbg !13859

if.end20:                                         ; preds = %if.end
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13860
  %scbs21 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 12, !dbg !13861
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scbs21, align 8, !dbg !13861
  %26 = bitcast %struct.ips_scb* %25 to i8*, !dbg !13862
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13863
  %max_cmds22 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 9, !dbg !13864
  %28 = load i32, i32* %max_cmds22, align 8, !dbg !13864
  %conv23 = zext i32 %28 to i64, !dbg !13863
  %mul24 = mul i64 %conv23, 216, !dbg !13865
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 %mul24, i1 false), !dbg !13862
  store i32 0, i32* %i, align 4, !dbg !13866
  br label %for.cond, !dbg !13868

for.cond:                                         ; preds = %for.inc, %if.end20
  %29 = load i32, i32* %i, align 4, !dbg !13869
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13871
  %max_cmds25 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 9, !dbg !13872
  %31 = load i32, i32* %max_cmds25, align 8, !dbg !13872
  %cmp26 = icmp ult i32 %29, %31, !dbg !13873
  br i1 %cmp26, label %for.body, label %for.end, !dbg !13874

for.body:                                         ; preds = %for.cond
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13875
  %scbs28 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 12, !dbg !13877
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scbs28, align 8, !dbg !13877
  %34 = load i32, i32* %i, align 4, !dbg !13878
  %idxprom = sext i32 %34 to i64, !dbg !13875
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %33, i64 %idxprom, !dbg !13875
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb_p, align 8, !dbg !13879
  %35 = load i64, i64* %command_dma, align 8, !dbg !13880
  %36 = load i32, i32* %i, align 4, !dbg !13881
  %conv29 = sext i32 %36 to i64, !dbg !13881
  %mul30 = mul i64 216, %conv29, !dbg !13882
  %add = add i64 %35, %mul30, !dbg !13883
  %conv31 = trunc i64 %add to i32, !dbg !13880
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13884
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %37, i32 0, i32 6, !dbg !13885
  store i32 %conv31, i32* %scb_busaddr, align 4, !dbg !13886
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13887
  %flags32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 28, !dbg !13887
  %39 = load i32, i32* %flags32, align 8, !dbg !13887
  %and33 = and i32 %39, 1, !dbg !13887
  %tobool34 = icmp ne i32 %and33, 0, !dbg !13887
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !13889

if.then35:                                        ; preds = %for.body
  %enh_list = bitcast %union.IPS_SG_LIST* %ips_sg to %struct.ips_enh_sglist**, !dbg !13890
  %40 = load %struct.ips_enh_sglist*, %struct.ips_enh_sglist** %enh_list, align 8, !dbg !13890
  %41 = load i32, i32* %i, align 4, !dbg !13892
  %mul36 = mul i32 %41, 17, !dbg !13893
  %idx.ext = sext i32 %mul36 to i64, !dbg !13894
  %add.ptr = getelementptr %struct.ips_enh_sglist, %struct.ips_enh_sglist* %40, i64 %idx.ext, !dbg !13894
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13895
  %sg_list = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %42, i32 0, i32 17, !dbg !13896
  %enh_list37 = bitcast %union.IPS_SG_LIST* %sg_list to %struct.ips_enh_sglist**, !dbg !13897
  store %struct.ips_enh_sglist* %add.ptr, %struct.ips_enh_sglist** %enh_list37, align 8, !dbg !13898
  %43 = load i64, i64* %sg_dma, align 8, !dbg !13899
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13900
  %flags38 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 28, !dbg !13900
  %45 = load i32, i32* %flags38, align 8, !dbg !13900
  %and39 = and i32 %45, 1, !dbg !13900
  %tobool40 = icmp ne i32 %and39, 0, !dbg !13900
  %46 = zext i1 %tobool40 to i64, !dbg !13900
  %cond41 = select i1 %tobool40, i64 16, i64 8, !dbg !13900
  %mul42 = mul i64 %cond41, 17, !dbg !13901
  %47 = load i32, i32* %i, align 4, !dbg !13902
  %conv43 = sext i32 %47 to i64, !dbg !13902
  %mul44 = mul i64 %mul42, %conv43, !dbg !13903
  %add45 = add i64 %43, %mul44, !dbg !13904
  %conv46 = trunc i64 %add45 to i32, !dbg !13899
  %48 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13905
  %sg_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %48, i32 0, i32 21, !dbg !13906
  store i32 %conv46, i32* %sg_busaddr, align 8, !dbg !13907
  br label %if.end62, !dbg !13908

if.else:                                          ; preds = %for.body
  %std_list = bitcast %union.IPS_SG_LIST* %ips_sg to %struct.ips_sglist**, !dbg !13909
  %49 = load %struct.ips_sglist*, %struct.ips_sglist** %std_list, align 8, !dbg !13909
  %50 = load i32, i32* %i, align 4, !dbg !13911
  %mul47 = mul i32 %50, 17, !dbg !13912
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !13913
  %add.ptr49 = getelementptr %struct.ips_sglist, %struct.ips_sglist* %49, i64 %idx.ext48, !dbg !13913
  %51 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13914
  %sg_list50 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %51, i32 0, i32 17, !dbg !13915
  %std_list51 = bitcast %union.IPS_SG_LIST* %sg_list50 to %struct.ips_sglist**, !dbg !13916
  store %struct.ips_sglist* %add.ptr49, %struct.ips_sglist** %std_list51, align 8, !dbg !13917
  %52 = load i64, i64* %sg_dma, align 8, !dbg !13918
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13919
  %flags52 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 28, !dbg !13919
  %54 = load i32, i32* %flags52, align 8, !dbg !13919
  %and53 = and i32 %54, 1, !dbg !13919
  %tobool54 = icmp ne i32 %and53, 0, !dbg !13919
  %55 = zext i1 %tobool54 to i64, !dbg !13919
  %cond55 = select i1 %tobool54, i64 16, i64 8, !dbg !13919
  %mul56 = mul i64 %cond55, 17, !dbg !13920
  %56 = load i32, i32* %i, align 4, !dbg !13921
  %conv57 = sext i32 %56 to i64, !dbg !13921
  %mul58 = mul i64 %mul56, %conv57, !dbg !13922
  %add59 = add i64 %52, %mul58, !dbg !13923
  %conv60 = trunc i64 %add59 to i32, !dbg !13918
  %57 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13924
  %sg_busaddr61 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %57, i32 0, i32 21, !dbg !13925
  store i32 %conv60, i32* %sg_busaddr61, align 8, !dbg !13926
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then35
  %58 = load i32, i32* %i, align 4, !dbg !13927
  %59 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13929
  %max_cmds63 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %59, i32 0, i32 9, !dbg !13930
  %60 = load i32, i32* %max_cmds63, align 8, !dbg !13930
  %sub = sub i32 %60, 1, !dbg !13931
  %cmp64 = icmp ult i32 %58, %sub, !dbg !13932
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !13933

if.then66:                                        ; preds = %if.end62
  %61 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13934
  %scb_freelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %61, i32 0, i32 13, !dbg !13936
  %62 = load %struct.ips_scb*, %struct.ips_scb** %scb_freelist, align 8, !dbg !13936
  %63 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13937
  %q_next = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %63, i32 0, i32 19, !dbg !13938
  store %struct.ips_scb* %62, %struct.ips_scb** %q_next, align 8, !dbg !13939
  %64 = load %struct.ips_scb*, %struct.ips_scb** %scb_p, align 8, !dbg !13940
  %65 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13941
  %scb_freelist67 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %65, i32 0, i32 13, !dbg !13942
  store %struct.ips_scb* %64, %struct.ips_scb** %scb_freelist67, align 8, !dbg !13943
  br label %if.end68, !dbg !13944

if.end68:                                         ; preds = %if.then66, %if.end62
  br label %for.inc, !dbg !13945

for.inc:                                          ; preds = %if.end68
  %66 = load i32, i32* %i, align 4, !dbg !13946
  %inc = add i32 %66, 1, !dbg !13946
  store i32 %inc, i32* %i, align 4, !dbg !13946
  br label %for.cond, !dbg !13947, !llvm.loop !13948

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !13950
  br label %return, !dbg !13950

return:                                           ; preds = %for.end, %if.then13, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !13951
  ret i32 %67, !dbg !13951
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_hainit(%struct.ips_ha* %ha) #0 !dbg !13952 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %i = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !13953, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13955, metadata !DIExpression()), !dbg !13956
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13957
  %tobool = icmp ne %struct.ips_ha* %0, null, !dbg !13957
  br i1 %tobool, label %if.end, label %if.then, !dbg !13959

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13960
  br label %return, !dbg !13960

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13961
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 43, !dbg !13963
  %statinit = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 8, !dbg !13964
  %statinit1 = bitcast {}** %statinit to void (%struct.ips_ha*)**, !dbg !13964
  %2 = load void (%struct.ips_ha*)*, void (%struct.ips_ha*)** %statinit1, align 8, !dbg !13964
  %tobool2 = icmp ne void (%struct.ips_ha*)* %2, null, !dbg !13961
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !13965

if.then3:                                         ; preds = %if.end
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13966
  %func4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 43, !dbg !13967
  %statinit5 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func4, i32 0, i32 8, !dbg !13968
  %statinit6 = bitcast {}** %statinit5 to void (%struct.ips_ha*)**, !dbg !13968
  %4 = load void (%struct.ips_ha*)*, void (%struct.ips_ha*)** %statinit6, align 8, !dbg !13968
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13969
  call void %4(%struct.ips_ha* %5) #11, !dbg !13970
  br label %if.end7, !dbg !13970

if.end7:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13971
  %func8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 43, !dbg !13973
  %enableint = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func8, i32 0, i32 10, !dbg !13974
  %enableint9 = bitcast {}** %enableint to void (%struct.ips_ha*)**, !dbg !13974
  %7 = load void (%struct.ips_ha*)*, void (%struct.ips_ha*)** %enableint9, align 8, !dbg !13974
  %tobool10 = icmp ne void (%struct.ips_ha*)* %7, null, !dbg !13971
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !13975

if.then11:                                        ; preds = %if.end7
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13976
  %func12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !13977
  %enableint13 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func12, i32 0, i32 10, !dbg !13978
  %enableint14 = bitcast {}** %enableint13 to void (%struct.ips_ha*)**, !dbg !13978
  %9 = load void (%struct.ips_ha*)*, void (%struct.ips_ha*)** %enableint14, align 8, !dbg !13978
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13979
  call void %9(%struct.ips_ha* %10) #11, !dbg !13980
  br label %if.end15, !dbg !13980

if.end15:                                         ; preds = %if.then11, %if.end7
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13981
  %reset_count = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 32, !dbg !13982
  store i16 1, i16* %reset_count, align 4, !dbg !13983
  %call = call i64 @ktime_get_real_seconds() #11, !dbg !13984
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13985
  %last_ffdc = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 33, !dbg !13986
  store i64 %call, i64* %last_ffdc, align 8, !dbg !13987
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13988
  call void @ips_ffdc_reset(%struct.ips_ha* %13, i32 1) #11, !dbg !13989
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13990
  %call16 = call i32 @ips_read_config(%struct.ips_ha* %14, i32 1) #11, !dbg !13992
  %tobool17 = icmp ne i32 %call16, 0, !dbg !13992
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !13993

if.then18:                                        ; preds = %if.end15
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13994
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 44, !dbg !13994
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !13994
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !13994
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !13994
  store i32 0, i32* %retval, align 4, !dbg !13996
  br label %return, !dbg !13996

if.end19:                                         ; preds = %if.end15
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !13997
  %call20 = call i32 @ips_read_adapter_status(%struct.ips_ha* %17, i32 1) #11, !dbg !13999
  %tobool21 = icmp ne i32 %call20, 0, !dbg !13999
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !14000

if.then22:                                        ; preds = %if.end19
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14001
  %pcidev23 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 44, !dbg !14001
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pcidev23, align 8, !dbg !14001
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !14001
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !14001
  store i32 0, i32* %retval, align 4, !dbg !14003
  br label %return, !dbg !14003

if.end25:                                         ; preds = %if.end19
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14004
  call void @ips_identify_controller(%struct.ips_ha* %20) #11, !dbg !14005
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14006
  %call26 = call i32 @ips_read_subsystem_parameters(%struct.ips_ha* %21, i32 1) #11, !dbg !14008
  %tobool27 = icmp ne i32 %call26, 0, !dbg !14008
  br i1 %tobool27, label %if.end31, label %if.then28, !dbg !14009

if.then28:                                        ; preds = %if.end25
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14010
  %pcidev29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 44, !dbg !14010
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pcidev29, align 8, !dbg !14010
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !14010
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev30, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !14010
  store i32 0, i32* %retval, align 4, !dbg !14012
  br label %return, !dbg !14012

if.end31:                                         ; preds = %if.end25
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14013
  %call32 = call i32 @ips_write_driver_status(%struct.ips_ha* %24, i32 1) #11, !dbg !14015
  %tobool33 = icmp ne i32 %call32, 0, !dbg !14015
  br i1 %tobool33, label %if.end37, label %if.then34, !dbg !14016

if.then34:                                        ; preds = %if.end31
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14017
  %pcidev35 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 44, !dbg !14017
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pcidev35, align 8, !dbg !14017
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !14017
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev36, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !14017
  store i32 0, i32* %retval, align 4, !dbg !14019
  br label %return, !dbg !14019

if.end37:                                         ; preds = %if.end31
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14020
  %conf = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 22, !dbg !14022
  %28 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf, align 8, !dbg !14022
  %ucLogDriveCount = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %28, i32 0, i32 0, !dbg !14023
  %29 = load i8, i8* %ucLogDriveCount, align 4, !dbg !14023
  %conv = zext i8 %29 to i32, !dbg !14020
  %cmp = icmp sgt i32 %conv, 0, !dbg !14024
  br i1 %cmp, label %land.lhs.true, label %if.end44, !dbg !14025

land.lhs.true:                                    ; preds = %if.end37
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14026
  %requires_esl = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 50, !dbg !14027
  %31 = load i8, i8* %requires_esl, align 8, !dbg !14027
  %conv39 = zext i8 %31 to i32, !dbg !14026
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !14028
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !14029

if.then42:                                        ; preds = %land.lhs.true
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14030
  %call43 = call i32 @ips_clear_adapter(%struct.ips_ha* %32, i32 1) #11, !dbg !14031
  br label %if.end44, !dbg !14031

if.end44:                                         ; preds = %if.then42, %land.lhs.true, %if.end37
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14032
  %ntargets = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 3, !dbg !14033
  store i8 16, i8* %ntargets, align 4, !dbg !14034
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14035
  %nlun = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %34, i32 0, i32 5, !dbg !14036
  store i8 1, i8* %nlun, align 2, !dbg !14037
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14038
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 21, !dbg !14039
  %36 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !14039
  %ucMaxPhysicalDevices = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %36, i32 0, i32 12, !dbg !14040
  %37 = load i8, i8* %ucMaxPhysicalDevices, align 1, !dbg !14040
  %conv45 = zext i8 %37 to i32, !dbg !14038
  %div = sdiv i32 %conv45, 15, !dbg !14041
  %add = add i32 %div, 1, !dbg !14042
  %conv46 = trunc i32 %add to i8, !dbg !14043
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14044
  %nbus = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 4, !dbg !14045
  store i8 %conv46, i8* %nbus, align 1, !dbg !14046
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14047
  %conf47 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %39, i32 0, i32 22, !dbg !14048
  %40 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf47, align 8, !dbg !14048
  %logical_drive = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %40, i32 0, i32 12, !dbg !14049
  %arrayidx = getelementptr [8 x %struct.IPS_LD], [8 x %struct.IPS_LD]* %logical_drive, i64 0, i64 0, !dbg !14047
  %ucStripeSize = getelementptr inbounds %struct.IPS_LD, %struct.IPS_LD* %arrayidx, i32 0, i32 4, !dbg !14050
  %41 = load i8, i8* %ucStripeSize, align 1, !dbg !14050
  %conv48 = zext i8 %41 to i32, !dbg !14047
  switch i32 %conv48, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb49
    i32 6, label %sw.bb51
    i32 7, label %sw.bb53
  ], !dbg !14051

sw.bb:                                            ; preds = %if.end44
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14052
  %max_xfer = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 8, !dbg !14054
  store i32 65536, i32* %max_xfer, align 4, !dbg !14055
  br label %sw.epilog, !dbg !14056

sw.bb49:                                          ; preds = %if.end44
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14057
  %max_xfer50 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 8, !dbg !14058
  store i32 131072, i32* %max_xfer50, align 4, !dbg !14059
  br label %sw.epilog, !dbg !14060

sw.bb51:                                          ; preds = %if.end44
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14061
  %max_xfer52 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 8, !dbg !14062
  store i32 262144, i32* %max_xfer52, align 4, !dbg !14063
  br label %sw.epilog, !dbg !14064

sw.bb53:                                          ; preds = %if.end44
  br label %sw.default, !dbg !14064

sw.default:                                       ; preds = %if.end44, %sw.bb53
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14065
  %max_xfer54 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 8, !dbg !14066
  store i32 524288, i32* %max_xfer54, align 4, !dbg !14067
  br label %sw.epilog, !dbg !14068

sw.epilog:                                        ; preds = %sw.default, %sw.bb51, %sw.bb49, %sw.bb
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14069
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 24, !dbg !14069
  %47 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !14069
  %param = getelementptr inbounds %struct._IPS_SUBSYS, %struct._IPS_SUBSYS* %47, i32 0, i32 0, !dbg !14069
  %arrayidx55 = getelementptr [128 x i32], [128 x i32]* %param, i64 0, i64 4, !dbg !14069
  %48 = load i32, i32* %arrayidx55, align 4, !dbg !14069
  %and = and i32 %48, 1, !dbg !14071
  %tobool56 = icmp ne i32 %and, 0, !dbg !14071
  br i1 %tobool56, label %if.then57, label %if.else, !dbg !14072

if.then57:                                        ; preds = %sw.epilog
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14073
  %enq58 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 21, !dbg !14075
  %50 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq58, align 8, !dbg !14075
  %ucConcurrentCmdCount = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %50, i32 0, i32 11, !dbg !14076
  %51 = load i8, i8* %ucConcurrentCmdCount, align 4, !dbg !14076
  %conv59 = zext i8 %51 to i32, !dbg !14073
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14077
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 9, !dbg !14078
  store i32 %conv59, i32* %max_cmds, align 8, !dbg !14079
  br label %if.end75, !dbg !14080

if.else:                                          ; preds = %sw.epilog
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14081
  %conf60 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 22, !dbg !14083
  %54 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf60, align 8, !dbg !14083
  %logical_drive61 = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %54, i32 0, i32 12, !dbg !14084
  %arrayidx62 = getelementptr [8 x %struct.IPS_LD], [8 x %struct.IPS_LD]* %logical_drive61, i64 0, i64 0, !dbg !14081
  %ucStripeSize63 = getelementptr inbounds %struct.IPS_LD, %struct.IPS_LD* %arrayidx62, i32 0, i32 4, !dbg !14085
  %55 = load i8, i8* %ucStripeSize63, align 1, !dbg !14085
  %conv64 = zext i8 %55 to i32, !dbg !14081
  switch i32 %conv64, label %sw.default72 [
    i32 4, label %sw.bb65
    i32 5, label %sw.bb67
    i32 6, label %sw.bb69
    i32 7, label %sw.bb71
  ], !dbg !14086

sw.bb65:                                          ; preds = %if.else
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14087
  %max_cmds66 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 9, !dbg !14089
  store i32 32, i32* %max_cmds66, align 8, !dbg !14090
  br label %sw.epilog74, !dbg !14091

sw.bb67:                                          ; preds = %if.else
  %57 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14092
  %max_cmds68 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %57, i32 0, i32 9, !dbg !14093
  store i32 16, i32* %max_cmds68, align 8, !dbg !14094
  br label %sw.epilog74, !dbg !14095

sw.bb69:                                          ; preds = %if.else
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14096
  %max_cmds70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 9, !dbg !14097
  store i32 8, i32* %max_cmds70, align 8, !dbg !14098
  br label %sw.epilog74, !dbg !14099

sw.bb71:                                          ; preds = %if.else
  br label %sw.default72, !dbg !14099

sw.default72:                                     ; preds = %if.else, %sw.bb71
  %59 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14100
  %max_cmds73 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %59, i32 0, i32 9, !dbg !14101
  store i32 4, i32* %max_cmds73, align 8, !dbg !14102
  br label %sw.epilog74, !dbg !14103

sw.epilog74:                                      ; preds = %sw.default72, %sw.bb69, %sw.bb67, %sw.bb65
  br label %if.end75

if.end75:                                         ; preds = %sw.epilog74, %if.then57
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14104
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 6, !dbg !14106
  %61 = load i16, i16* %ad_type, align 8, !dbg !14106
  %conv76 = zext i16 %61 to i32, !dbg !14104
  %cmp77 = icmp eq i32 %conv76, 6, !dbg !14107
  br i1 %cmp77, label %if.then88, label %lor.lhs.false, !dbg !14108

lor.lhs.false:                                    ; preds = %if.end75
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14109
  %ad_type79 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %62, i32 0, i32 6, !dbg !14110
  %63 = load i16, i16* %ad_type79, align 8, !dbg !14110
  %conv80 = zext i16 %63 to i32, !dbg !14109
  %cmp81 = icmp eq i32 %conv80, 9, !dbg !14111
  br i1 %cmp81, label %if.then88, label %lor.lhs.false83, !dbg !14112

lor.lhs.false83:                                  ; preds = %lor.lhs.false
  %64 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14113
  %ad_type84 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %64, i32 0, i32 6, !dbg !14114
  %65 = load i16, i16* %ad_type84, align 8, !dbg !14114
  %conv85 = zext i16 %65 to i32, !dbg !14113
  %cmp86 = icmp eq i32 %conv85, 11, !dbg !14115
  br i1 %cmp86, label %if.then88, label %if.end97, !dbg !14116

if.then88:                                        ; preds = %lor.lhs.false83, %lor.lhs.false, %if.end75
  %66 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14117
  %max_cmds89 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %66, i32 0, i32 9, !dbg !14120
  %67 = load i32, i32* %max_cmds89, align 8, !dbg !14120
  %68 = load i32, i32* @MaxLiteCmds, align 4, !dbg !14121
  %cmp90 = icmp ugt i32 %67, %68, !dbg !14122
  br i1 %cmp90, label %land.lhs.true92, label %if.end96, !dbg !14123

land.lhs.true92:                                  ; preds = %if.then88
  %69 = load i32, i32* @MaxLiteCmds, align 4, !dbg !14124
  %tobool93 = icmp ne i32 %69, 0, !dbg !14125
  br i1 %tobool93, label %if.then94, label %if.end96, !dbg !14126

if.then94:                                        ; preds = %land.lhs.true92
  %70 = load i32, i32* @MaxLiteCmds, align 4, !dbg !14127
  %71 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14128
  %max_cmds95 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %71, i32 0, i32 9, !dbg !14129
  store i32 %70, i32* %max_cmds95, align 8, !dbg !14130
  br label %if.end96, !dbg !14128

if.end96:                                         ; preds = %if.then94, %land.lhs.true92, %if.then88
  br label %if.end97, !dbg !14131

if.end97:                                         ; preds = %if.end96, %lor.lhs.false83
  %72 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14132
  %ha_id = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %72, i32 0, i32 0, !dbg !14133
  %arrayidx98 = getelementptr [5 x i8], [5 x i8]* %ha_id, i64 0, i64 0, !dbg !14132
  store i8 15, i8* %arrayidx98, align 8, !dbg !14134
  store i32 1, i32* %i, align 4, !dbg !14135
  br label %for.cond, !dbg !14137

for.cond:                                         ; preds = %for.inc, %if.end97
  %73 = load i32, i32* %i, align 4, !dbg !14138
  %74 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14140
  %nbus99 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %74, i32 0, i32 4, !dbg !14141
  %75 = load i8, i8* %nbus99, align 1, !dbg !14141
  %conv100 = zext i8 %75 to i32, !dbg !14140
  %cmp101 = icmp slt i32 %73, %conv100, !dbg !14142
  br i1 %cmp101, label %for.body, label %for.end, !dbg !14143

for.body:                                         ; preds = %for.cond
  %76 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14144
  %conf103 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %76, i32 0, i32 22, !dbg !14146
  %77 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf103, align 8, !dbg !14146
  %init_id = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %77, i32 0, i32 4, !dbg !14147
  %78 = load i32, i32* %i, align 4, !dbg !14148
  %sub = sub i32 %78, 1, !dbg !14149
  %idxprom = sext i32 %sub to i64, !dbg !14144
  %arrayidx104 = getelementptr [4 x i8], [4 x i8]* %init_id, i64 0, i64 %idxprom, !dbg !14144
  %79 = load i8, i8* %arrayidx104, align 1, !dbg !14144
  %conv105 = zext i8 %79 to i32, !dbg !14144
  %and106 = and i32 %conv105, 31, !dbg !14150
  %conv107 = trunc i32 %and106 to i8, !dbg !14144
  %80 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14151
  %ha_id108 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %80, i32 0, i32 0, !dbg !14152
  %81 = load i32, i32* %i, align 4, !dbg !14153
  %idxprom109 = sext i32 %81 to i64, !dbg !14151
  %arrayidx110 = getelementptr [5 x i8], [5 x i8]* %ha_id108, i64 0, i64 %idxprom109, !dbg !14151
  store i8 %conv107, i8* %arrayidx110, align 1, !dbg !14154
  %82 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14155
  %dcdb_active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %82, i32 0, i32 1, !dbg !14156
  %83 = load i32, i32* %i, align 4, !dbg !14157
  %sub111 = sub i32 %83, 1, !dbg !14158
  %idxprom112 = sext i32 %sub111 to i64, !dbg !14155
  %arrayidx113 = getelementptr [4 x i32], [4 x i32]* %dcdb_active, i64 0, i64 %idxprom112, !dbg !14155
  store i32 0, i32* %arrayidx113, align 4, !dbg !14159
  br label %for.inc, !dbg !14160

for.inc:                                          ; preds = %for.body
  %84 = load i32, i32* %i, align 4, !dbg !14161
  %inc = add i32 %84, 1, !dbg !14161
  store i32 %inc, i32* %i, align 4, !dbg !14161
  br label %for.cond, !dbg !14162, !llvm.loop !14163

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !14165
  br label %return, !dbg !14165

return:                                           ; preds = %for.end, %if.then34, %if.then28, %if.then22, %if.then18, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !14166
  ret i32 %85, !dbg !14166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_deallocatescbs(%struct.ips_ha* %ha, i32 %cmds) #0 !dbg !14167 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %cmds.addr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !14168, metadata !DIExpression()), !dbg !14169
  store i32 %cmds, i32* %cmds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmds.addr, metadata !14170, metadata !DIExpression()), !dbg !14171
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14172
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !14174
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !14174
  %tobool = icmp ne %struct.ips_scb* %1, null, !dbg !14172
  br i1 %tobool, label %if.then, label %if.end, !dbg !14175

if.then:                                          ; preds = %entry
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14176
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 44, !dbg !14178
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !14178
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !14179
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14180
  %flags = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 28, !dbg !14180
  %5 = load i32, i32* %flags, align 8, !dbg !14180
  %and = and i32 %5, 1, !dbg !14180
  %tobool1 = icmp ne i32 %and, 0, !dbg !14180
  %6 = zext i1 %tobool1 to i64, !dbg !14180
  %cond = select i1 %tobool1, i64 16, i64 8, !dbg !14180
  %mul = mul i64 %cond, 17, !dbg !14181
  %7 = load i32, i32* %cmds.addr, align 4, !dbg !14182
  %conv = sext i32 %7 to i64, !dbg !14182
  %mul2 = mul i64 %mul, %conv, !dbg !14183
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14184
  %scbs3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 12, !dbg !14185
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scbs3, align 8, !dbg !14185
  %sg_list = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 17, !dbg !14186
  %list = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !14187
  %10 = load i8*, i8** %list, align 8, !dbg !14187
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14188
  %scbs4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !14189
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs4, align 8, !dbg !14189
  %sg_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 21, !dbg !14190
  %13 = load i32, i32* %sg_busaddr, align 8, !dbg !14190
  %conv5 = zext i32 %13 to i64, !dbg !14188
  call void @dma_free_coherent(%struct.device* %dev, i64 %mul2, i8* %10, i64 %conv5) #11, !dbg !14191
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14192
  %pcidev6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 44, !dbg !14193
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pcidev6, align 8, !dbg !14193
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !14194
  %16 = load i32, i32* %cmds.addr, align 4, !dbg !14195
  %conv8 = sext i32 %16 to i64, !dbg !14195
  %mul9 = mul i64 216, %conv8, !dbg !14196
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14197
  %scbs10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 12, !dbg !14198
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scbs10, align 8, !dbg !14198
  %19 = bitcast %struct.ips_scb* %18 to i8*, !dbg !14197
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14199
  %scbs11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 12, !dbg !14200
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scbs11, align 8, !dbg !14200
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %21, i32 0, i32 6, !dbg !14201
  %22 = load i32, i32* %scb_busaddr, align 4, !dbg !14201
  %conv12 = zext i32 %22 to i64, !dbg !14199
  call void @dma_free_coherent(%struct.device* %dev7, i64 %mul9, i8* %19, i64 %conv12) #11, !dbg !14202
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14203
  %scbs13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 12, !dbg !14204
  store %struct.ips_scb* null, %struct.ips_scb** %scbs13, align 8, !dbg !14205
  br label %if.end, !dbg !14206

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !14207
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_next(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !14208 {
entry:
  %lock.addr.i258 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i258, metadata !13725, metadata !DIExpression()), !dbg !14211
  %lock.addr.i256 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i256, metadata !13736, metadata !DIExpression()), !dbg !14214
  %lock.addr.i254 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i254, metadata !13725, metadata !DIExpression()), !dbg !14218
  %lock.addr.i252 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i252, metadata !13736, metadata !DIExpression()), !dbg !14221
  %lock.addr.i250 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i250, metadata !13725, metadata !DIExpression()), !dbg !14225
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13736, metadata !DIExpression()), !dbg !14228
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %SC = alloca %struct.scsi_cmnd*, align 8
  %p = alloca %struct.scsi_cmnd*, align 8
  %q = alloca %struct.scsi_cmnd*, align 8
  %item = alloca %struct.ips_copp_wait_item*, align 8
  %ret = alloca i32, align 4
  %host = alloca %struct.Scsi_Host*, align 8
  %now = alloca i64, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %i = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !14231, metadata !DIExpression()), !dbg !14232
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !14233, metadata !DIExpression()), !dbg !14234
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !14235, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC, metadata !14237, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %p, metadata !14239, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %q, metadata !14241, metadata !DIExpression()), !dbg !14242
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %item, metadata !14243, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14247, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !14249, metadata !DIExpression()), !dbg !14250
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14251
  %tobool = icmp ne %struct.ips_ha* %0, null, !dbg !14251
  br i1 %tobool, label %if.end, label %if.then, !dbg !14253

if.then:                                          ; preds = %entry
  br label %if.end249, !dbg !14254

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14255
  %host_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 7, !dbg !14256
  %2 = load i16, i16* %host_num, align 2, !dbg !14256
  %idxprom = zext i16 %2 to i64, !dbg !14257
  %arrayidx = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom, !dbg !14257
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx, align 8, !dbg !14257
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %host, align 8, !dbg !14258
  %4 = load i32, i32* %intr.addr, align 4, !dbg !14259
  %cmp = icmp eq i32 %4, 0, !dbg !14260
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !14261

if.then1:                                         ; preds = %if.end
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14262
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 4, !dbg !14263
  %6 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !14263
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14264, !srcloc !13775
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14265
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !14265
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !14265
  br label %if.end2, !dbg !14266

if.end2:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14267
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 24, !dbg !14269
  %10 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !14269
  %param = getelementptr inbounds %struct._IPS_SUBSYS, %struct._IPS_SUBSYS* %10, i32 0, i32 0, !dbg !14270
  %arrayidx3 = getelementptr [128 x i32], [128 x i32]* %param, i64 0, i64 3, !dbg !14267
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !14267
  %and = and i32 %11, 3145728, !dbg !14271
  %tobool4 = icmp ne i32 %and, 0, !dbg !14271
  br i1 %tobool4, label %land.lhs.true, label %if.end11, !dbg !14272

land.lhs.true:                                    ; preds = %if.end2
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14273
  %scb_activelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 16, !dbg !14274
  %count = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %scb_activelist, i32 0, i32 2, !dbg !14275
  %13 = load i32, i32* %count, align 8, !dbg !14275
  %cmp5 = icmp eq i32 %13, 0, !dbg !14276
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !14277

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %now, metadata !14278, metadata !DIExpression()), !dbg !14280
  %call = call i64 @ktime_get_real_seconds() #11, !dbg !14281
  store i64 %call, i64* %now, align 8, !dbg !14280
  %14 = load i64, i64* %now, align 8, !dbg !14282
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14284
  %last_ffdc = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 33, !dbg !14285
  %16 = load i64, i64* %last_ffdc, align 8, !dbg !14285
  %sub = sub i64 %14, %16, !dbg !14286
  %cmp7 = icmp sgt i64 %sub, 28800, !dbg !14287
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !14288

if.then8:                                         ; preds = %if.then6
  %17 = load i64, i64* %now, align 8, !dbg !14289
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14291
  %last_ffdc9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 33, !dbg !14292
  store i64 %17, i64* %last_ffdc9, align 8, !dbg !14293
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14294
  call void @ips_ffdc_time(%struct.ips_ha* %19) #11, !dbg !14295
  br label %if.end10, !dbg !14296

if.end10:                                         ; preds = %if.then8, %if.then6
  br label %if.end11, !dbg !14297

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %if.end2
  br label %while.cond, !dbg !14298

while.cond:                                       ; preds = %sw.epilog68, %if.then49, %if.end11
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14299
  %num_ioctl = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 10, !dbg !14300
  %21 = load i32, i32* %num_ioctl, align 4, !dbg !14300
  %cmp12 = icmp ult i32 %21, 1, !dbg !14301
  br i1 %cmp12, label %land.lhs.true13, label %land.end, !dbg !14302

land.lhs.true13:                                  ; preds = %while.cond
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14303
  %copp_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 15, !dbg !14304
  %head = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %copp_waitlist, i32 0, i32 0, !dbg !14305
  %23 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head, align 8, !dbg !14305
  %tobool14 = icmp ne %struct.ips_copp_wait_item* %23, null, !dbg !14306
  br i1 %tobool14, label %land.rhs, label %land.end, !dbg !14307

land.rhs:                                         ; preds = %land.lhs.true13
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14308
  %call15 = call %struct.ips_scb* @ips_getscb(%struct.ips_ha* %24) #11, !dbg !14309
  store %struct.ips_scb* %call15, %struct.ips_scb** %scb, align 8, !dbg !14310
  %tobool16 = icmp ne %struct.ips_scb* %call15, null, !dbg !14307
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true13, %while.cond
  %25 = phi i1 [ false, %land.lhs.true13 ], [ false, %while.cond ], [ %tobool16, %land.rhs ], !dbg !14311
  br i1 %25, label %while.body, label %while.end, !dbg !14298

while.body:                                       ; preds = %land.end
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14312
  %copp_waitlist17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 15, !dbg !14313
  %call18 = call %struct.ips_copp_wait_item* @ips_removeq_copp_head(%struct.ips_copp_queue* %copp_waitlist17) #11, !dbg !14314
  store %struct.ips_copp_wait_item* %call18, %struct.ips_copp_wait_item** %item, align 8, !dbg !14315
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14316
  %num_ioctl19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 10, !dbg !14317
  %28 = load i32, i32* %num_ioctl19, align 4, !dbg !14318
  %inc = add i32 %28, 1, !dbg !14318
  store i32 %inc, i32* %num_ioctl19, align 4, !dbg !14318
  %29 = load i32, i32* %intr.addr, align 4, !dbg !14319
  %cmp20 = icmp eq i32 %29, 0, !dbg !14320
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !14321

if.then21:                                        ; preds = %while.body
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14322
  %host_lock22 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %30, i32 0, i32 4, !dbg !14323
  %31 = load %struct.spinlock*, %struct.spinlock** %host_lock22, align 8, !dbg !14323
  store %struct.spinlock* %31, %struct.spinlock** %lock.addr.i250, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14324, !srcloc !13785
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i250, align 8, !dbg !14325
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !14325
  %rlock.i251 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !14325
  br label %if.end23, !dbg !14326

if.end23:                                         ; preds = %if.then21, %while.body
  %34 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14327
  %scsi_cmd = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %34, i32 0, i32 0, !dbg !14328
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !14328
  %36 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14329
  %scsi_cmd24 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %36, i32 0, i32 18, !dbg !14330
  store %struct.scsi_cmnd* %35, %struct.scsi_cmnd** %scsi_cmd24, align 8, !dbg !14331
  %37 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14332
  %38 = bitcast %struct.ips_copp_wait_item* %37 to i8*, !dbg !14332
  call void @kfree(i8* %38) #11, !dbg !14333
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14334
  %40 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14335
  %scsi_cmd25 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %40, i32 0, i32 18, !dbg !14336
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd25, align 8, !dbg !14336
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14337
  %43 = load i32, i32* %intr.addr, align 4, !dbg !14338
  %call26 = call i32 @ips_make_passthru(%struct.ips_ha* %39, %struct.scsi_cmnd* %41, %struct.ips_scb* %42, i32 %43) #11, !dbg !14339
  store i32 %call26, i32* %ret, align 4, !dbg !14340
  %44 = load i32, i32* %intr.addr, align 4, !dbg !14341
  %cmp27 = icmp eq i32 %44, 0, !dbg !14342
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !14343

if.then28:                                        ; preds = %if.end23
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14344
  %host_lock29 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %45, i32 0, i32 4, !dbg !14345
  %46 = load %struct.spinlock*, %struct.spinlock** %host_lock29, align 8, !dbg !14345
  store %struct.spinlock* %46, %struct.spinlock** %lock.addr.i252, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14346, !srcloc !13775
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i252, align 8, !dbg !14347
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !14347
  %rlock.i253 = bitcast %union.anon.1* %48 to %struct.raw_spinlock*, !dbg !14347
  br label %if.end30, !dbg !14348

if.end30:                                         ; preds = %if.then28, %if.end23
  %49 = load i32, i32* %ret, align 4, !dbg !14349
  switch i32 %49, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb38
  ], !dbg !14350

sw.bb:                                            ; preds = %if.end30
  %50 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14351
  %scsi_cmd31 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %50, i32 0, i32 18, !dbg !14354
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd31, align 8, !dbg !14354
  %tobool32 = icmp ne %struct.scsi_cmnd* %51, null, !dbg !14351
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !14355

if.then33:                                        ; preds = %sw.bb
  %52 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14356
  %scsi_cmd34 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %52, i32 0, i32 18, !dbg !14358
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd34, align 8, !dbg !14358
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %53, i32 0, i32 24, !dbg !14359
  store i32 458752, i32* %result, align 8, !dbg !14360
  %54 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14361
  %scsi_cmd35 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %54, i32 0, i32 18, !dbg !14362
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd35, align 8, !dbg !14362
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %55, i32 0, i32 21, !dbg !14363
  %56 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !14363
  %57 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14364
  %scsi_cmd36 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %57, i32 0, i32 18, !dbg !14365
  %58 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd36, align 8, !dbg !14365
  call void %56(%struct.scsi_cmnd* %58) #11, !dbg !14361
  br label %if.end37, !dbg !14366

if.end37:                                         ; preds = %if.then33, %sw.bb
  %59 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14367
  %60 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14368
  call void @ips_freescb(%struct.ips_ha* %59, %struct.ips_scb* %60) #11, !dbg !14369
  br label %sw.epilog, !dbg !14370

sw.bb38:                                          ; preds = %if.end30
  %61 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14371
  %scsi_cmd39 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %61, i32 0, i32 18, !dbg !14373
  %62 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd39, align 8, !dbg !14373
  %tobool40 = icmp ne %struct.scsi_cmnd* %62, null, !dbg !14371
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !14374

if.then41:                                        ; preds = %sw.bb38
  %63 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14375
  %scsi_cmd42 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %63, i32 0, i32 18, !dbg !14377
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd42, align 8, !dbg !14377
  %result43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %64, i32 0, i32 24, !dbg !14378
  store i32 0, i32* %result43, align 8, !dbg !14379
  %65 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14380
  %scsi_cmd44 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %65, i32 0, i32 18, !dbg !14381
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd44, align 8, !dbg !14381
  %scsi_done45 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %66, i32 0, i32 21, !dbg !14382
  %67 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done45, align 8, !dbg !14382
  %68 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14383
  %scsi_cmd46 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %68, i32 0, i32 18, !dbg !14384
  %69 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd46, align 8, !dbg !14384
  call void %67(%struct.scsi_cmnd* %69) #11, !dbg !14380
  br label %if.end47, !dbg !14385

if.end47:                                         ; preds = %if.then41, %sw.bb38
  %70 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14386
  %71 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14387
  call void @ips_freescb(%struct.ips_ha* %70, %struct.ips_scb* %71) #11, !dbg !14388
  br label %sw.epilog, !dbg !14389

sw.default:                                       ; preds = %if.end30
  br label %sw.epilog, !dbg !14390

sw.epilog:                                        ; preds = %sw.default, %if.end47, %if.end37
  %72 = load i32, i32* %ret, align 4, !dbg !14391
  %cmp48 = icmp ne i32 %72, 1, !dbg !14393
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !14394

if.then49:                                        ; preds = %sw.epilog
  %73 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14395
  %num_ioctl50 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %73, i32 0, i32 10, !dbg !14397
  %74 = load i32, i32* %num_ioctl50, align 4, !dbg !14398
  %dec = add i32 %74, -1, !dbg !14398
  store i32 %dec, i32* %num_ioctl50, align 4, !dbg !14398
  br label %while.cond, !dbg !14399, !llvm.loop !14400

if.end51:                                         ; preds = %sw.epilog
  %75 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14402
  %76 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14403
  %call52 = call i32 @ips_send_cmd(%struct.ips_ha* %75, %struct.ips_scb* %76) #11, !dbg !14404
  store i32 %call52, i32* %ret, align 4, !dbg !14405
  %77 = load i32, i32* %ret, align 4, !dbg !14406
  %cmp53 = icmp eq i32 %77, 1, !dbg !14408
  br i1 %cmp53, label %if.then54, label %if.else, !dbg !14409

if.then54:                                        ; preds = %if.end51
  %78 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14410
  %scb_activelist55 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %78, i32 0, i32 16, !dbg !14411
  %79 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14412
  call void @ips_putq_scb_head(%struct.ips_scb_queue* %scb_activelist55, %struct.ips_scb* %79) #11, !dbg !14413
  br label %if.end58, !dbg !14413

if.else:                                          ; preds = %if.end51
  %80 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14414
  %num_ioctl56 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %80, i32 0, i32 10, !dbg !14415
  %81 = load i32, i32* %num_ioctl56, align 4, !dbg !14416
  %dec57 = add i32 %81, -1, !dbg !14416
  store i32 %dec57, i32* %num_ioctl56, align 4, !dbg !14416
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then54
  %82 = load i32, i32* %ret, align 4, !dbg !14417
  switch i32 %82, label %sw.default67 [
    i32 4, label %sw.bb59
    i32 2, label %sw.bb66
  ], !dbg !14418

sw.bb59:                                          ; preds = %if.end58
  %83 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14419
  %scsi_cmd60 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %83, i32 0, i32 18, !dbg !14422
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd60, align 8, !dbg !14422
  %tobool61 = icmp ne %struct.scsi_cmnd* %84, null, !dbg !14419
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !14423

if.then62:                                        ; preds = %sw.bb59
  %85 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14424
  %scsi_cmd63 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %85, i32 0, i32 18, !dbg !14426
  %86 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd63, align 8, !dbg !14426
  %result64 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %86, i32 0, i32 24, !dbg !14427
  store i32 458752, i32* %result64, align 8, !dbg !14428
  br label %if.end65, !dbg !14429

if.end65:                                         ; preds = %if.then62, %sw.bb59
  %87 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14430
  %88 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14431
  call void @ips_freescb(%struct.ips_ha* %87, %struct.ips_scb* %88) #11, !dbg !14432
  br label %sw.epilog68, !dbg !14433

sw.bb66:                                          ; preds = %if.end58
  %89 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14434
  %90 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14435
  call void @ips_freescb(%struct.ips_ha* %89, %struct.ips_scb* %90) #11, !dbg !14436
  br label %sw.epilog68, !dbg !14437

sw.default67:                                     ; preds = %if.end58
  br label %sw.epilog68, !dbg !14438

sw.epilog68:                                      ; preds = %sw.default67, %sw.bb66, %if.end65
  br label %while.cond, !dbg !14298, !llvm.loop !14400

while.end:                                        ; preds = %land.end
  %91 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14439
  %scb_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %91, i32 0, i32 14, !dbg !14440
  %head69 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %scb_waitlist, i32 0, i32 0, !dbg !14441
  %92 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %head69, align 8, !dbg !14441
  store %struct.scsi_cmnd* %92, %struct.scsi_cmnd** %p, align 8, !dbg !14442
  br label %while.cond70, !dbg !14443

while.cond70:                                     ; preds = %sw.epilog242, %if.then89, %while.end
  %93 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14444
  %tobool71 = icmp ne %struct.scsi_cmnd* %93, null, !dbg !14445
  br i1 %tobool71, label %land.rhs72, label %land.end75, !dbg !14446

land.rhs72:                                       ; preds = %while.cond70
  %94 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14447
  %call73 = call %struct.ips_scb* @ips_getscb(%struct.ips_ha* %94) #11, !dbg !14448
  store %struct.ips_scb* %call73, %struct.ips_scb** %scb, align 8, !dbg !14449
  %tobool74 = icmp ne %struct.ips_scb* %call73, null, !dbg !14446
  br label %land.end75

land.end75:                                       ; preds = %land.rhs72, %while.cond70
  %95 = phi i1 [ false, %while.cond70 ], [ %tobool74, %land.rhs72 ], !dbg !14311
  br i1 %95, label %while.body76, label %while.end244, !dbg !14443

while.body76:                                     ; preds = %land.end75
  %96 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14450
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %96, i32 0, i32 1, !dbg !14450
  %97 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !14450
  %call77 = call i32 @sdev_channel(%struct.scsi_device* %97) #11, !dbg !14450
  %cmp78 = icmp ugt i32 %call77, 0, !dbg !14452
  br i1 %cmp78, label %land.lhs.true79, label %if.end90, !dbg !14453

land.lhs.true79:                                  ; preds = %while.body76
  %98 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14454
  %dcdb_active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %98, i32 0, i32 1, !dbg !14455
  %99 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14456
  %device80 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %99, i32 0, i32 1, !dbg !14456
  %100 = load %struct.scsi_device*, %struct.scsi_device** %device80, align 8, !dbg !14456
  %call81 = call i32 @sdev_channel(%struct.scsi_device* %100) #11, !dbg !14456
  %sub82 = sub i32 %call81, 1, !dbg !14457
  %idxprom83 = zext i32 %sub82 to i64, !dbg !14454
  %arrayidx84 = getelementptr [4 x i32], [4 x i32]* %dcdb_active, i64 0, i64 %idxprom83, !dbg !14454
  %101 = load i32, i32* %arrayidx84, align 4, !dbg !14454
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14458
  %device85 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %102, i32 0, i32 1, !dbg !14458
  %103 = load %struct.scsi_device*, %struct.scsi_device** %device85, align 8, !dbg !14458
  %call86 = call i32 @sdev_id(%struct.scsi_device* %103) #11, !dbg !14458
  %shl = shl i32 1, %call86, !dbg !14459
  %and87 = and i32 %101, %shl, !dbg !14460
  %tobool88 = icmp ne i32 %and87, 0, !dbg !14460
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !14461

if.then89:                                        ; preds = %land.lhs.true79
  %104 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14462
  %105 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14464
  call void @ips_freescb(%struct.ips_ha* %104, %struct.ips_scb* %105) #11, !dbg !14465
  %106 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14466
  %host_scribble = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %106, i32 0, i32 23, !dbg !14467
  %107 = load i8*, i8** %host_scribble, align 8, !dbg !14467
  %108 = bitcast i8* %107 to %struct.scsi_cmnd*, !dbg !14468
  store %struct.scsi_cmnd* %108, %struct.scsi_cmnd** %p, align 8, !dbg !14469
  br label %while.cond70, !dbg !14470, !llvm.loop !14471

if.end90:                                         ; preds = %land.lhs.true79, %while.body76
  %109 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14473
  store %struct.scsi_cmnd* %109, %struct.scsi_cmnd** %q, align 8, !dbg !14474
  %110 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14475
  %scb_waitlist91 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %110, i32 0, i32 14, !dbg !14476
  %111 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %q, align 8, !dbg !14477
  %call92 = call %struct.scsi_cmnd* @ips_removeq_wait(%struct.ips_wait_queue* %scb_waitlist91, %struct.scsi_cmnd* %111) #11, !dbg !14478
  store %struct.scsi_cmnd* %call92, %struct.scsi_cmnd** %SC, align 8, !dbg !14479
  %112 = load i32, i32* %intr.addr, align 4, !dbg !14480
  %cmp93 = icmp eq i32 %112, 0, !dbg !14481
  br i1 %cmp93, label %if.then94, label %if.end96, !dbg !14482

if.then94:                                        ; preds = %if.end90
  %113 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14483
  %host_lock95 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %113, i32 0, i32 4, !dbg !14484
  %114 = load %struct.spinlock*, %struct.spinlock** %host_lock95, align 8, !dbg !14484
  store %struct.spinlock* %114, %struct.spinlock** %lock.addr.i254, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14485, !srcloc !13785
  %115 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i254, align 8, !dbg !14486
  %116 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %115, i32 0, i32 0, !dbg !14486
  %rlock.i255 = bitcast %union.anon.1* %116 to %struct.raw_spinlock*, !dbg !14486
  br label %if.end96, !dbg !14487

if.end96:                                         ; preds = %if.then94, %if.end90
  %117 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14488
  %result97 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %117, i32 0, i32 24, !dbg !14489
  store i32 0, i32* %result97, align 8, !dbg !14490
  %118 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14491
  %host_scribble98 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %118, i32 0, i32 23, !dbg !14492
  store i8* null, i8** %host_scribble98, align 8, !dbg !14493
  %119 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14494
  %device99 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %119, i32 0, i32 1, !dbg !14495
  %120 = load %struct.scsi_device*, %struct.scsi_device** %device99, align 8, !dbg !14495
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %120, i32 0, i32 16, !dbg !14496
  %121 = load i32, i32* %id, align 8, !dbg !14496
  %conv = trunc i32 %121 to i8, !dbg !14494
  %122 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14497
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %122, i32 0, i32 2, !dbg !14498
  store i8 %conv, i8* %target_id, align 4, !dbg !14499
  %123 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14500
  %device100 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %123, i32 0, i32 1, !dbg !14501
  %124 = load %struct.scsi_device*, %struct.scsi_device** %device100, align 8, !dbg !14501
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %124, i32 0, i32 18, !dbg !14502
  %125 = load i64, i64* %lun, align 8, !dbg !14502
  %conv101 = trunc i64 %125 to i8, !dbg !14500
  %126 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14503
  %lun102 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %126, i32 0, i32 4, !dbg !14504
  store i8 %conv101, i8* %lun102, align 2, !dbg !14505
  %127 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14506
  %device103 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %127, i32 0, i32 1, !dbg !14507
  %128 = load %struct.scsi_device*, %struct.scsi_device** %device103, align 8, !dbg !14507
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %128, i32 0, i32 17, !dbg !14508
  %129 = load i32, i32* %channel, align 4, !dbg !14508
  %conv104 = trunc i32 %129 to i8, !dbg !14506
  %130 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14509
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %130, i32 0, i32 3, !dbg !14510
  store i8 %conv104, i8* %bus, align 1, !dbg !14511
  %131 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14512
  %132 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14513
  %scsi_cmd105 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %132, i32 0, i32 18, !dbg !14514
  store %struct.scsi_cmnd* %131, %struct.scsi_cmnd** %scsi_cmd105, align 8, !dbg !14515
  %133 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14516
  %breakup = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %133, i32 0, i32 11, !dbg !14517
  store i8 0, i8* %breakup, align 2, !dbg !14518
  %134 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14519
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %134, i32 0, i32 13, !dbg !14520
  store i32 0, i32* %data_len, align 4, !dbg !14521
  %135 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14522
  %callback = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %135, i32 0, i32 20, !dbg !14523
  store void (%struct.ips_ha*, %struct.ips_scb*)* @ipsintr_done, void (%struct.ips_ha*, %struct.ips_scb*)** %callback, align 8, !dbg !14524
  %136 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !14525
  %137 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14526
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %137, i32 0, i32 8, !dbg !14527
  store i32 %136, i32* %timeout, align 4, !dbg !14528
  %138 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14529
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %138, i32 0, i32 0, !dbg !14530
  %139 = bitcast %union.IPS_HOST_COMMAND* %cmd to i8*, !dbg !14531
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 16, i1 false), !dbg !14531
  %140 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14532
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %140, i32 0, i32 5, !dbg !14533
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !14534
  %141 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14535
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %141, i32 0, i32 14, !dbg !14536
  %142 = load i8*, i8** %cmnd, align 8, !dbg !14536
  %143 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14537
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %143, i32 0, i32 12, !dbg !14538
  %144 = load i16, i16* %cmd_len, align 4, !dbg !14538
  %conv106 = zext i16 %144 to i64, !dbg !14537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %142, i64 %conv106, i1 false), !dbg !14534
  %145 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14539
  %call107 = call i32 @scsi_dma_map(%struct.scsi_cmnd* %145) #11, !dbg !14540
  %146 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14541
  %sg_count = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %146, i32 0, i32 22, !dbg !14542
  store i32 %call107, i32* %sg_count, align 4, !dbg !14543
  br label %do.body, !dbg !14544

do.body:                                          ; preds = %if.end96
  %147 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14545
  %sg_count108 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %147, i32 0, i32 22, !dbg !14545
  %148 = load i32, i32* %sg_count108, align 4, !dbg !14545
  %cmp109 = icmp slt i32 %148, 0, !dbg !14545
  %lnot = xor i1 %cmp109, true, !dbg !14545
  %lnot111 = xor i1 %lnot, true, !dbg !14545
  %lnot.ext = zext i1 %lnot111 to i32, !dbg !14545
  %conv112 = sext i32 %lnot.ext to i64, !dbg !14545
  %tobool113 = icmp ne i64 %conv112, 0, !dbg !14545
  br i1 %tobool113, label %if.then114, label %if.end122, !dbg !14548

if.then114:                                       ; preds = %do.body
  br label %do.body115, !dbg !14545

do.body115:                                       ; preds = %if.then114
  br label %do.body116, !dbg !14549

do.body116:                                       ; preds = %do.body115
  br label %do.end, !dbg !14551

do.end:                                           ; preds = %do.body116
  br label %do.body117, !dbg !14549

do.body117:                                       ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i32 2661, i32 0, i64 12) #10, !dbg !14553, !srcloc !14555
  br label %do.end118, !dbg !14553

do.end118:                                        ; preds = %do.body117
  br label %do.body119, !dbg !14549

do.body119:                                       ; preds = %do.end118
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #10, !dbg !14556, !srcloc !14559
  unreachable, !dbg !14560

do.end120:                                        ; No predecessors!
  br label %do.end121, !dbg !14549

do.end121:                                        ; preds = %do.end120
  br label %if.end122, !dbg !14549

if.end122:                                        ; preds = %do.end121, %do.body
  br label %do.end123, !dbg !14548

do.end123:                                        ; preds = %if.end122
  %149 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14561
  %sg_count124 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %149, i32 0, i32 22, !dbg !14563
  %150 = load i32, i32* %sg_count124, align 4, !dbg !14563
  %tobool125 = icmp ne i32 %150, 0, !dbg !14561
  br i1 %tobool125, label %if.then126, label %if.else140, !dbg !14564

if.then126:                                       ; preds = %do.end123
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !14565, metadata !DIExpression()), !dbg !14567
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14568, metadata !DIExpression()), !dbg !14569
  %151 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14570
  %flags = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %151, i32 0, i32 15, !dbg !14571
  %152 = load i32, i32* %flags, align 4, !dbg !14572
  %or = or i32 %152, 8, !dbg !14572
  store i32 %or, i32* %flags, align 4, !dbg !14572
  store i32 0, i32* %i, align 4, !dbg !14573
  %153 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC, align 8, !dbg !14573
  %call127 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %153) #11, !dbg !14573
  store %struct.scatterlist* %call127, %struct.scatterlist** %sg, align 8, !dbg !14573
  br label %for.cond, !dbg !14573

for.cond:                                         ; preds = %for.inc, %if.then126
  %154 = load i32, i32* %i, align 4, !dbg !14575
  %155 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14575
  %sg_count128 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %155, i32 0, i32 22, !dbg !14575
  %156 = load i32, i32* %sg_count128, align 4, !dbg !14575
  %cmp129 = icmp slt i32 %154, %156, !dbg !14575
  br i1 %cmp129, label %for.body, label %for.end, !dbg !14573

for.body:                                         ; preds = %for.cond
  %157 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14577
  %158 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14580
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %158, i32 0, i32 3, !dbg !14580
  %159 = load i64, i64* %dma_address, align 8, !dbg !14580
  %160 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14581
  %161 = load i32, i32* %i, align 4, !dbg !14582
  %162 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14583
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %162, i32 0, i32 4, !dbg !14583
  %163 = load i32, i32* %dma_length, align 8, !dbg !14583
  %call131 = call i32 @ips_fill_scb_sg_single(%struct.ips_ha* %157, i64 %159, %struct.ips_scb* %160, i32 %161, i32 %163) #11, !dbg !14584
  %cmp132 = icmp slt i32 %call131, 0, !dbg !14585
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !14586

if.then134:                                       ; preds = %for.body
  br label %for.end, !dbg !14587

if.end135:                                        ; preds = %for.body
  br label %for.inc, !dbg !14588

for.inc:                                          ; preds = %if.end135
  %164 = load i32, i32* %i, align 4, !dbg !14575
  %inc136 = add i32 %164, 1, !dbg !14575
  store i32 %inc136, i32* %i, align 4, !dbg !14575
  %165 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14575
  %call137 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %165) #11, !dbg !14575
  store %struct.scatterlist* %call137, %struct.scatterlist** %sg, align 8, !dbg !14575
  br label %for.cond, !dbg !14575, !llvm.loop !14589

for.end:                                          ; preds = %if.then134, %for.cond
  %166 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14591
  %data_len138 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %166, i32 0, i32 13, !dbg !14592
  %167 = load i32, i32* %data_len138, align 4, !dbg !14592
  %conv139 = trunc i32 %167 to i16, !dbg !14591
  %168 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14593
  %dcdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %168, i32 0, i32 1, !dbg !14594
  %transfer_length = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb, i32 0, i32 2, !dbg !14595
  store i16 %conv139, i16* %transfer_length, align 2, !dbg !14596
  br label %if.end144, !dbg !14597

if.else140:                                       ; preds = %do.end123
  %169 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14598
  %data_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %169, i32 0, i32 23, !dbg !14600
  store i64 0, i64* %data_busaddr, align 8, !dbg !14601
  %170 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14602
  %sg_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %170, i32 0, i32 14, !dbg !14603
  store i32 0, i32* %sg_len, align 8, !dbg !14604
  %171 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14605
  %data_len141 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %171, i32 0, i32 13, !dbg !14606
  store i32 0, i32* %data_len141, align 4, !dbg !14607
  %172 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14608
  %dcdb142 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %172, i32 0, i32 1, !dbg !14609
  %transfer_length143 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb142, i32 0, i32 2, !dbg !14610
  store i16 0, i16* %transfer_length143, align 2, !dbg !14611
  br label %if.end144

if.end144:                                        ; preds = %if.else140, %for.end
  %173 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14612
  %scsi_cmd145 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %173, i32 0, i32 18, !dbg !14613
  %174 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd145, align 8, !dbg !14613
  %cmnd146 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %174, i32 0, i32 14, !dbg !14614
  %175 = load i8*, i8** %cmnd146, align 8, !dbg !14614
  %arrayidx147 = getelementptr i8, i8* %175, i64 0, !dbg !14612
  %176 = load i8, i8* %arrayidx147, align 1, !dbg !14612
  %idxprom148 = zext i8 %176 to i64, !dbg !14615
  %arrayidx149 = getelementptr [255 x i8], [255 x i8]* bitcast (<{ [235 x i8], [20 x i8] }>* @ips_command_direction to [255 x i8]*), i64 0, i64 %idxprom148, !dbg !14615
  %177 = load i8, i8* %arrayidx149, align 1, !dbg !14615
  %178 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14616
  %dcdb150 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %178, i32 0, i32 1, !dbg !14617
  %cmd_attribute = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb150, i32 0, i32 1, !dbg !14618
  store i8 %177, i8* %cmd_attribute, align 1, !dbg !14619
  %179 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14620
  %scsi_cmd151 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %179, i32 0, i32 18, !dbg !14622
  %180 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd151, align 8, !dbg !14622
  %cmnd152 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %180, i32 0, i32 14, !dbg !14623
  %181 = load i8*, i8** %cmnd152, align 8, !dbg !14623
  %arrayidx153 = getelementptr i8, i8* %181, i64 0, !dbg !14620
  %182 = load i8, i8* %arrayidx153, align 1, !dbg !14620
  %conv154 = zext i8 %182 to i32, !dbg !14620
  %cmp155 = icmp eq i32 %conv154, 59, !dbg !14624
  br i1 %cmp155, label %land.lhs.true157, label %if.end164, !dbg !14625

land.lhs.true157:                                 ; preds = %if.end144
  %183 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14626
  %data_len158 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %183, i32 0, i32 13, !dbg !14627
  %184 = load i32, i32* %data_len158, align 4, !dbg !14627
  %cmp159 = icmp eq i32 %184, 0, !dbg !14628
  br i1 %cmp159, label %if.then161, label %if.end164, !dbg !14629

if.then161:                                       ; preds = %land.lhs.true157
  %185 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14630
  %dcdb162 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %185, i32 0, i32 1, !dbg !14631
  %cmd_attribute163 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb162, i32 0, i32 1, !dbg !14632
  store i8 0, i8* %cmd_attribute163, align 1, !dbg !14633
  br label %if.end164, !dbg !14630

if.end164:                                        ; preds = %if.then161, %land.lhs.true157, %if.end144
  %186 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14634
  %dcdb165 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %186, i32 0, i32 1, !dbg !14636
  %cmd_attribute166 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb165, i32 0, i32 1, !dbg !14637
  %187 = load i8, i8* %cmd_attribute166, align 1, !dbg !14637
  %conv167 = zext i8 %187 to i32, !dbg !14634
  %and168 = and i32 %conv167, 3, !dbg !14638
  %tobool169 = icmp ne i32 %and168, 0, !dbg !14638
  br i1 %tobool169, label %if.end173, label %if.then170, !dbg !14639

if.then170:                                       ; preds = %if.end164
  %188 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14640
  %dcdb171 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %188, i32 0, i32 1, !dbg !14641
  %transfer_length172 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb171, i32 0, i32 2, !dbg !14642
  store i16 0, i16* %transfer_length172, align 2, !dbg !14643
  br label %if.end173, !dbg !14640

if.end173:                                        ; preds = %if.then170, %if.end164
  %189 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14644
  %data_len174 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %189, i32 0, i32 13, !dbg !14646
  %190 = load i32, i32* %data_len174, align 4, !dbg !14646
  %cmp175 = icmp uge i32 %190, 65536, !dbg !14647
  br i1 %cmp175, label %if.then177, label %if.end185, !dbg !14648

if.then177:                                       ; preds = %if.end173
  %191 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14649
  %dcdb178 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %191, i32 0, i32 1, !dbg !14651
  %cmd_attribute179 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb178, i32 0, i32 1, !dbg !14652
  %192 = load i8, i8* %cmd_attribute179, align 1, !dbg !14653
  %conv180 = zext i8 %192 to i32, !dbg !14653
  %or181 = or i32 %conv180, 8, !dbg !14653
  %conv182 = trunc i32 %or181 to i8, !dbg !14653
  store i8 %conv182, i8* %cmd_attribute179, align 1, !dbg !14653
  %193 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14654
  %dcdb183 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %193, i32 0, i32 1, !dbg !14655
  %transfer_length184 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb183, i32 0, i32 2, !dbg !14656
  store i16 0, i16* %transfer_length184, align 2, !dbg !14657
  br label %if.end185, !dbg !14658

if.end185:                                        ; preds = %if.then177, %if.end173
  %194 = load i32, i32* %intr.addr, align 4, !dbg !14659
  %cmp186 = icmp eq i32 %194, 0, !dbg !14660
  br i1 %cmp186, label %if.then188, label %if.end190, !dbg !14661

if.then188:                                       ; preds = %if.end185
  %195 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14662
  %host_lock189 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %195, i32 0, i32 4, !dbg !14663
  %196 = load %struct.spinlock*, %struct.spinlock** %host_lock189, align 8, !dbg !14663
  store %struct.spinlock* %196, %struct.spinlock** %lock.addr.i256, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14664, !srcloc !13775
  %197 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i256, align 8, !dbg !14665
  %198 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %197, i32 0, i32 0, !dbg !14665
  %rlock.i257 = bitcast %union.anon.1* %198 to %struct.raw_spinlock*, !dbg !14665
  br label %if.end190, !dbg !14666

if.end190:                                        ; preds = %if.then188, %if.end185
  %199 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14667
  %200 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14668
  %call191 = call i32 @ips_send_cmd(%struct.ips_ha* %199, %struct.ips_scb* %200) #11, !dbg !14669
  store i32 %call191, i32* %ret, align 4, !dbg !14670
  %201 = load i32, i32* %ret, align 4, !dbg !14671
  switch i32 %201, label %sw.default241 [
    i32 1, label %sw.bb192
    i32 4, label %sw.bb194
    i32 2, label %sw.bb218
  ], !dbg !14672

sw.bb192:                                         ; preds = %if.end190
  %202 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14673
  %scb_activelist193 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %202, i32 0, i32 16, !dbg !14675
  %203 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14676
  call void @ips_putq_scb_head(%struct.ips_scb_queue* %scb_activelist193, %struct.ips_scb* %203) #11, !dbg !14677
  br label %sw.epilog242, !dbg !14678

sw.bb194:                                         ; preds = %if.end190
  %204 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14679
  %scsi_cmd195 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %204, i32 0, i32 18, !dbg !14681
  %205 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd195, align 8, !dbg !14681
  %tobool196 = icmp ne %struct.scsi_cmnd* %205, null, !dbg !14679
  br i1 %tobool196, label %if.then197, label %if.end203, !dbg !14682

if.then197:                                       ; preds = %sw.bb194
  %206 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14683
  %scsi_cmd198 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %206, i32 0, i32 18, !dbg !14685
  %207 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd198, align 8, !dbg !14685
  %result199 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %207, i32 0, i32 24, !dbg !14686
  store i32 458752, i32* %result199, align 8, !dbg !14687
  %208 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14688
  %scsi_cmd200 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %208, i32 0, i32 18, !dbg !14689
  %209 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd200, align 8, !dbg !14689
  %scsi_done201 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %209, i32 0, i32 21, !dbg !14690
  %210 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done201, align 8, !dbg !14690
  %211 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14691
  %scsi_cmd202 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %211, i32 0, i32 18, !dbg !14692
  %212 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd202, align 8, !dbg !14692
  call void %210(%struct.scsi_cmnd* %212) #11, !dbg !14688
  br label %if.end203, !dbg !14693

if.end203:                                        ; preds = %if.then197, %sw.bb194
  %213 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14694
  %bus204 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %213, i32 0, i32 3, !dbg !14696
  %214 = load i8, i8* %bus204, align 1, !dbg !14696
  %tobool205 = icmp ne i8 %214, 0, !dbg !14694
  br i1 %tobool205, label %if.then206, label %if.end217, !dbg !14697

if.then206:                                       ; preds = %if.end203
  %215 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14698
  %target_id207 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %215, i32 0, i32 2, !dbg !14699
  %216 = load i8, i8* %target_id207, align 4, !dbg !14699
  %conv208 = zext i8 %216 to i32, !dbg !14698
  %shl209 = shl i32 1, %conv208, !dbg !14700
  %neg = xor i32 %shl209, -1, !dbg !14701
  %217 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14702
  %dcdb_active210 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %217, i32 0, i32 1, !dbg !14703
  %218 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14704
  %bus211 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %218, i32 0, i32 3, !dbg !14705
  %219 = load i8, i8* %bus211, align 1, !dbg !14705
  %conv212 = zext i8 %219 to i32, !dbg !14704
  %sub213 = sub i32 %conv212, 1, !dbg !14706
  %idxprom214 = sext i32 %sub213 to i64, !dbg !14702
  %arrayidx215 = getelementptr [4 x i32], [4 x i32]* %dcdb_active210, i64 0, i64 %idxprom214, !dbg !14702
  %220 = load i32, i32* %arrayidx215, align 4, !dbg !14707
  %and216 = and i32 %220, %neg, !dbg !14707
  store i32 %and216, i32* %arrayidx215, align 4, !dbg !14707
  br label %if.end217, !dbg !14702

if.end217:                                        ; preds = %if.then206, %if.end203
  %221 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14708
  %222 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14709
  call void @ips_freescb(%struct.ips_ha* %221, %struct.ips_scb* %222) #11, !dbg !14710
  br label %sw.epilog242, !dbg !14711

sw.bb218:                                         ; preds = %if.end190
  %223 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14712
  %scsi_cmd219 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %223, i32 0, i32 18, !dbg !14714
  %224 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd219, align 8, !dbg !14714
  %tobool220 = icmp ne %struct.scsi_cmnd* %224, null, !dbg !14712
  br i1 %tobool220, label %if.then221, label %if.end225, !dbg !14715

if.then221:                                       ; preds = %sw.bb218
  %225 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14716
  %scsi_cmd222 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %225, i32 0, i32 18, !dbg !14717
  %226 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd222, align 8, !dbg !14717
  %scsi_done223 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %226, i32 0, i32 21, !dbg !14718
  %227 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done223, align 8, !dbg !14718
  %228 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14719
  %scsi_cmd224 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %228, i32 0, i32 18, !dbg !14720
  %229 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd224, align 8, !dbg !14720
  call void %227(%struct.scsi_cmnd* %229) #11, !dbg !14716
  br label %if.end225, !dbg !14716

if.end225:                                        ; preds = %if.then221, %sw.bb218
  %230 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14721
  %bus226 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %230, i32 0, i32 3, !dbg !14723
  %231 = load i8, i8* %bus226, align 1, !dbg !14723
  %tobool227 = icmp ne i8 %231, 0, !dbg !14721
  br i1 %tobool227, label %if.then228, label %if.end240, !dbg !14724

if.then228:                                       ; preds = %if.end225
  %232 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14725
  %target_id229 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %232, i32 0, i32 2, !dbg !14726
  %233 = load i8, i8* %target_id229, align 4, !dbg !14726
  %conv230 = zext i8 %233 to i32, !dbg !14725
  %shl231 = shl i32 1, %conv230, !dbg !14727
  %neg232 = xor i32 %shl231, -1, !dbg !14728
  %234 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14729
  %dcdb_active233 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %234, i32 0, i32 1, !dbg !14730
  %235 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14731
  %bus234 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %235, i32 0, i32 3, !dbg !14732
  %236 = load i8, i8* %bus234, align 1, !dbg !14732
  %conv235 = zext i8 %236 to i32, !dbg !14731
  %sub236 = sub i32 %conv235, 1, !dbg !14733
  %idxprom237 = sext i32 %sub236 to i64, !dbg !14729
  %arrayidx238 = getelementptr [4 x i32], [4 x i32]* %dcdb_active233, i64 0, i64 %idxprom237, !dbg !14729
  %237 = load i32, i32* %arrayidx238, align 4, !dbg !14734
  %and239 = and i32 %237, %neg232, !dbg !14734
  store i32 %and239, i32* %arrayidx238, align 4, !dbg !14734
  br label %if.end240, !dbg !14729

if.end240:                                        ; preds = %if.then228, %if.end225
  %238 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14735
  %239 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14736
  call void @ips_freescb(%struct.ips_ha* %238, %struct.ips_scb* %239) #11, !dbg !14737
  br label %sw.epilog242, !dbg !14738

sw.default241:                                    ; preds = %if.end190
  br label %sw.epilog242, !dbg !14739

sw.epilog242:                                     ; preds = %sw.default241, %if.end240, %if.end217, %sw.bb192
  %240 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !14740
  %host_scribble243 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %240, i32 0, i32 23, !dbg !14741
  %241 = load i8*, i8** %host_scribble243, align 8, !dbg !14741
  %242 = bitcast i8* %241 to %struct.scsi_cmnd*, !dbg !14742
  store %struct.scsi_cmnd* %242, %struct.scsi_cmnd** %p, align 8, !dbg !14743
  br label %while.cond70, !dbg !14443, !llvm.loop !14471

while.end244:                                     ; preds = %land.end75
  %243 = load i32, i32* %intr.addr, align 4, !dbg !14744
  %cmp245 = icmp eq i32 %243, 0, !dbg !14745
  br i1 %cmp245, label %if.then247, label %if.end249, !dbg !14746

if.then247:                                       ; preds = %while.end244
  %244 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14747
  %host_lock248 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %244, i32 0, i32 4, !dbg !14748
  %245 = load %struct.spinlock*, %struct.spinlock** %host_lock248, align 8, !dbg !14748
  store %struct.spinlock* %245, %struct.spinlock** %lock.addr.i258, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14749, !srcloc !13785
  %246 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i258, align 8, !dbg !14750
  %247 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %246, i32 0, i32 0, !dbg !14750
  %rlock.i259 = bitcast %union.anon.1* %247 to %struct.raw_spinlock*, !dbg !14750
  br label %if.end249, !dbg !14751

if.end249:                                        ; preds = %if.then, %if.then247, %while.end244
  ret void, !dbg !14752
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_real_seconds() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_ffdc_time(%struct.ips_ha* %ha) #0 !dbg !14753 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !14754, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !14756, metadata !DIExpression()), !dbg !14757
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14758
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !14759
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !14759
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14760
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !14761
  %3 = load i32, i32* %max_cmds, align 8, !dbg !14761
  %sub = sub i32 %3, 1, !dbg !14762
  %idxprom = zext i32 %sub to i64, !dbg !14758
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !14758
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !14763
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14764
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14765
  call void @ips_init_scb(%struct.ips_ha* %4, %struct.ips_scb* %5) #11, !dbg !14766
  %6 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !14767
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14768
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 8, !dbg !14769
  store i32 %6, i32* %timeout, align 4, !dbg !14770
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14771
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !14772
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !14771
  store i8 -41, i8* %arrayidx1, align 1, !dbg !14773
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14774
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 0, !dbg !14775
  %ffdc = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FFDC_CMD*, !dbg !14776
  %op_code = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc, i32 0, i32 0, !dbg !14777
  store i8 -41, i8* %op_code, align 8, !dbg !14778
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14779
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14779
  %scbs2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !14779
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs2, align 8, !dbg !14779
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %10 to i64, !dbg !14779
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %12 to i64, !dbg !14779
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14779
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !14779
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !14779
  %conv3 = trunc i32 %conv to i8, !dbg !14779
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14780
  %cmd4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !14781
  %ffdc5 = bitcast %union.IPS_HOST_COMMAND* %cmd4 to %struct.IPS_FFDC_CMD*, !dbg !14782
  %command_id = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc5, i32 0, i32 1, !dbg !14783
  store i8 %conv3, i8* %command_id, align 1, !dbg !14784
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14785
  %cmd6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !14786
  %ffdc7 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to %struct.IPS_FFDC_CMD*, !dbg !14787
  %reset_count = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc7, i32 0, i32 2, !dbg !14788
  store i8 0, i8* %reset_count, align 2, !dbg !14789
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14790
  %cmd8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 0, !dbg !14791
  %ffdc9 = bitcast %union.IPS_HOST_COMMAND* %cmd8 to %struct.IPS_FFDC_CMD*, !dbg !14792
  %reset_type = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc9, i32 0, i32 3, !dbg !14793
  store i8 0, i8* %reset_type, align 1, !dbg !14794
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14795
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14796
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14797
  %last_ffdc = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 33, !dbg !14798
  %19 = load i64, i64* %last_ffdc, align 8, !dbg !14798
  call void @ips_fix_ffdc_time(%struct.ips_ha* %16, %struct.ips_scb* %17, i64 %19) #11, !dbg !14799
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14800
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14801
  %22 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !14802
  %call = call i32 @ips_send_wait(%struct.ips_ha* %20, %struct.ips_scb* %21, i32 %22, i32 99) #11, !dbg !14803
  ret void, !dbg !14804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ips_scb* @ips_getscb(%struct.ips_ha* %ha) #0 !dbg !14805 {
entry:
  %retval = alloca %struct.ips_scb*, align 8
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !14810, metadata !DIExpression()), !dbg !14811
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14812
  %scb_freelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 13, !dbg !14814
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb_freelist, align 8, !dbg !14814
  store %struct.ips_scb* %1, %struct.ips_scb** %scb, align 8, !dbg !14815
  %cmp = icmp eq %struct.ips_scb* %1, null, !dbg !14816
  br i1 %cmp, label %if.then, label %if.end, !dbg !14817

if.then:                                          ; preds = %entry
  store %struct.ips_scb* null, %struct.ips_scb** %retval, align 8, !dbg !14818
  br label %return, !dbg !14818

if.end:                                           ; preds = %entry
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14820
  %q_next = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 19, !dbg !14821
  %3 = load %struct.ips_scb*, %struct.ips_scb** %q_next, align 8, !dbg !14821
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14822
  %scb_freelist1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 13, !dbg !14823
  store %struct.ips_scb* %3, %struct.ips_scb** %scb_freelist1, align 8, !dbg !14824
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14825
  %flags = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %5, i32 0, i32 15, !dbg !14826
  store i32 0, i32* %flags, align 4, !dbg !14827
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14828
  %q_next2 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %6, i32 0, i32 19, !dbg !14829
  store %struct.ips_scb* null, %struct.ips_scb** %q_next2, align 8, !dbg !14830
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14831
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14832
  call void @ips_init_scb(%struct.ips_ha* %7, %struct.ips_scb* %8) #11, !dbg !14833
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !14834
  store %struct.ips_scb* %9, %struct.ips_scb** %retval, align 8, !dbg !14835
  br label %return, !dbg !14835

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.ips_scb*, %struct.ips_scb** %retval, align 8, !dbg !14836
  ret %struct.ips_scb* %10, !dbg !14836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ips_copp_wait_item* @ips_removeq_copp_head(%struct.ips_copp_queue* %queue) #0 !dbg !14837 {
entry:
  %retval = alloca %struct.ips_copp_wait_item*, align 8
  %queue.addr = alloca %struct.ips_copp_queue*, align 8
  %item = alloca %struct.ips_copp_wait_item*, align 8
  store %struct.ips_copp_queue* %queue, %struct.ips_copp_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_copp_queue** %queue.addr, metadata !14841, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %item, metadata !14843, metadata !DIExpression()), !dbg !14844
  %0 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !14845
  %head = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %0, i32 0, i32 0, !dbg !14846
  %1 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head, align 8, !dbg !14846
  store %struct.ips_copp_wait_item* %1, %struct.ips_copp_wait_item** %item, align 8, !dbg !14847
  %2 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14848
  %tobool = icmp ne %struct.ips_copp_wait_item* %2, null, !dbg !14848
  br i1 %tobool, label %if.end, label %if.then, !dbg !14850

if.then:                                          ; preds = %entry
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %retval, align 8, !dbg !14851
  br label %return, !dbg !14851

if.end:                                           ; preds = %entry
  %3 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14853
  %next = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %3, i32 0, i32 1, !dbg !14854
  %4 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next, align 8, !dbg !14854
  %5 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !14855
  %head1 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %5, i32 0, i32 0, !dbg !14856
  store %struct.ips_copp_wait_item* %4, %struct.ips_copp_wait_item** %head1, align 8, !dbg !14857
  %6 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14858
  %next2 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %6, i32 0, i32 1, !dbg !14859
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %next2, align 8, !dbg !14860
  %7 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !14861
  %tail = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %7, i32 0, i32 1, !dbg !14863
  %8 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %tail, align 8, !dbg !14863
  %9 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14864
  %cmp = icmp eq %struct.ips_copp_wait_item* %8, %9, !dbg !14865
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !14866

if.then3:                                         ; preds = %if.end
  %10 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !14867
  %tail4 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %10, i32 0, i32 1, !dbg !14868
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %tail4, align 8, !dbg !14869
  br label %if.end5, !dbg !14867

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !14870
  %count = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %11, i32 0, i32 2, !dbg !14871
  %12 = load i32, i32* %count, align 8, !dbg !14872
  %dec = add i32 %12, -1, !dbg !14872
  store i32 %dec, i32* %count, align 8, !dbg !14872
  %13 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !14873
  store %struct.ips_copp_wait_item* %13, %struct.ips_copp_wait_item** %retval, align 8, !dbg !14874
  br label %return, !dbg !14874

return:                                           ; preds = %if.end5, %if.then
  %14 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %retval, align 8, !dbg !14875
  ret %struct.ips_copp_wait_item* %14, !dbg !14875
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_make_passthru(%struct.ips_ha* %ha, %struct.scsi_cmnd* %SC, %struct.ips_scb* %scb, i32 %intr) #0 !dbg !14876 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %SC.addr = alloca %struct.scsi_cmnd*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %intr.addr = alloca i32, align 4
  %pt = alloca %struct.ips_passthru_t*, align 8
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !14879, metadata !DIExpression()), !dbg !14880
  store %struct.scsi_cmnd* %SC, %struct.scsi_cmnd** %SC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC.addr, metadata !14881, metadata !DIExpression()), !dbg !14882
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !14883, metadata !DIExpression()), !dbg !14884
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !14885, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt, metadata !14887, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.declare(metadata i32* %length, metadata !14889, metadata !DIExpression()), !dbg !14890
  store i32 0, i32* %length, align 4, !dbg !14890
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14891, metadata !DIExpression()), !dbg !14892
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14893, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !14895, metadata !DIExpression()), !dbg !14896
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14897
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %0) #11, !dbg !14898
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !14896
  store i32 0, i32* %i, align 4, !dbg !14899
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14899
  %call1 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %1) #11, !dbg !14899
  store %struct.scatterlist* %call1, %struct.scatterlist** %sg, align 8, !dbg !14899
  br label %for.cond, !dbg !14899

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !14901
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14901
  %call2 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %3) #11, !dbg !14901
  %cmp = icmp ult i32 %2, %call2, !dbg !14901
  br i1 %cmp, label %for.body, label %for.end, !dbg !14899

for.body:                                         ; preds = %for.cond
  %4 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14903
  %length3 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %4, i32 0, i32 2, !dbg !14904
  %5 = load i32, i32* %length3, align 4, !dbg !14904
  %6 = load i32, i32* %length, align 4, !dbg !14905
  %add = add i32 %6, %5, !dbg !14905
  store i32 %add, i32* %length, align 4, !dbg !14905
  br label %for.inc, !dbg !14906

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !14901
  %inc = add i32 %7, 1, !dbg !14901
  store i32 %inc, i32* %i, align 4, !dbg !14901
  %8 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14901
  %call4 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %8) #11, !dbg !14901
  store %struct.scatterlist* %call4, %struct.scatterlist** %sg, align 8, !dbg !14901
  br label %for.cond, !dbg !14901, !llvm.loop !14907

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %length, align 4, !dbg !14909
  %conv = sext i32 %9 to i64, !dbg !14909
  %cmp5 = icmp ult i64 %conv, 240, !dbg !14911
  br i1 %cmp5, label %if.then, label %if.end, !dbg !14912

if.then:                                          ; preds = %for.end
  store i32 4, i32* %retval, align 4, !dbg !14913
  br label %return, !dbg !14913

if.end:                                           ; preds = %for.end
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14915
  %11 = load i32, i32* %length, align 4, !dbg !14917
  %call7 = call i32 @ips_alloc_passthru_buffer(%struct.ips_ha* %10, i32 %11) #11, !dbg !14918
  %tobool = icmp ne i32 %call7, 0, !dbg !14918
  br i1 %tobool, label %if.then8, label %if.end13, !dbg !14919

if.then8:                                         ; preds = %if.end
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14920
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 25, !dbg !14923
  %13 = load i8*, i8** %ioctl_data, align 8, !dbg !14923
  %tobool9 = icmp ne i8* %13, null, !dbg !14920
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14924

if.then10:                                        ; preds = %if.then8
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14925
  %ioctl_data11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 25, !dbg !14927
  %15 = load i8*, i8** %ioctl_data11, align 8, !dbg !14927
  %16 = bitcast i8* %15 to %struct.ips_passthru_t*, !dbg !14928
  store %struct.ips_passthru_t* %16, %struct.ips_passthru_t** %pt, align 8, !dbg !14929
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14930
  %18 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14931
  %19 = bitcast %struct.ips_passthru_t* %18 to i8*, !dbg !14931
  call void @ips_scmd_buf_read(%struct.scsi_cmnd* %17, i8* %19, i32 240) #11, !dbg !14932
  %20 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14933
  %BasicStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %20, i32 0, i32 7, !dbg !14934
  store i8 11, i8* %BasicStatus, align 4, !dbg !14935
  %21 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14936
  %ExtendedStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %21, i32 0, i32 8, !dbg !14937
  store i8 0, i8* %ExtendedStatus, align 1, !dbg !14938
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14939
  %23 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14940
  %24 = bitcast %struct.ips_passthru_t* %23 to i8*, !dbg !14940
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %22, i8* %24, i32 240) #11, !dbg !14941
  br label %if.end12, !dbg !14942

if.end12:                                         ; preds = %if.then10, %if.then8
  store i32 4, i32* %retval, align 4, !dbg !14943
  br label %return, !dbg !14943

if.end13:                                         ; preds = %if.end
  %25 = load i32, i32* %length, align 4, !dbg !14944
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14945
  %ioctl_datasize = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 26, !dbg !14946
  store i32 %25, i32* %ioctl_datasize, align 8, !dbg !14947
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14948
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14949
  %ioctl_data14 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 25, !dbg !14950
  %29 = load i8*, i8** %ioctl_data14, align 8, !dbg !14950
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14951
  %ioctl_datasize15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 26, !dbg !14952
  %31 = load i32, i32* %ioctl_datasize15, align 8, !dbg !14952
  call void @ips_scmd_buf_read(%struct.scsi_cmnd* %27, i8* %29, i32 %31) #11, !dbg !14953
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14954
  %ioctl_data16 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 25, !dbg !14955
  %33 = load i8*, i8** %ioctl_data16, align 8, !dbg !14955
  %34 = bitcast i8* %33 to %struct.ips_passthru_t*, !dbg !14956
  store %struct.ips_passthru_t* %34, %struct.ips_passthru_t** %pt, align 8, !dbg !14957
  %35 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14958
  %CoppCmd = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %35, i32 0, i32 1, !dbg !14959
  %36 = load i32, i32* %CoppCmd, align 4, !dbg !14959
  switch i32 %36, label %sw.epilog [
    i32 17220, label %sw.bb
    i32 17217, label %sw.bb19
    i32 17218, label %sw.bb19
  ], !dbg !14960

sw.bb:                                            ; preds = %if.end13
  %37 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14961
  %ioctl_data17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %37, i32 0, i32 25, !dbg !14963
  %38 = load i8*, i8** %ioctl_data17, align 8, !dbg !14963
  %add.ptr = getelementptr i8, i8* %38, i64 240, !dbg !14964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 4 bitcast (i32* @ips_num_controllers to i8*), i64 4, i1 false), !dbg !14965
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14966
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14967
  %ioctl_data18 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 25, !dbg !14968
  %41 = load i8*, i8** %ioctl_data18, align 8, !dbg !14968
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %39, i8* %41, i32 244) #11, !dbg !14969
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14970
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 24, !dbg !14971
  store i32 0, i32* %result, align 8, !dbg !14972
  store i32 2, i32* %retval, align 4, !dbg !14973
  br label %return, !dbg !14973

sw.bb19:                                          ; preds = %if.end13, %if.end13
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !14974
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 14, !dbg !14976
  %44 = load i8*, i8** %cmnd, align 8, !dbg !14976
  %arrayidx = getelementptr i8, i8* %44, i64 0, !dbg !14974
  %45 = load i8, i8* %arrayidx, align 1, !dbg !14974
  %conv20 = zext i8 %45 to i32, !dbg !14974
  %cmp21 = icmp eq i32 %conv20, 13, !dbg !14977
  br i1 %cmp21, label %if.then23, label %if.end44, !dbg !14978

if.then23:                                        ; preds = %sw.bb19
  %46 = load i32, i32* %length, align 4, !dbg !14979
  %conv24 = sext i32 %46 to i64, !dbg !14979
  %47 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14982
  %CmdBSize = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %47, i32 0, i32 4, !dbg !14983
  %48 = load i32, i32* %CmdBSize, align 8, !dbg !14983
  %conv25 = zext i32 %48 to i64, !dbg !14982
  %add26 = add i64 240, %conv25, !dbg !14984
  %cmp27 = icmp ult i64 %conv24, %add26, !dbg !14985
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !14986

if.then29:                                        ; preds = %if.then23
  store i32 4, i32* %retval, align 4, !dbg !14987
  br label %return, !dbg !14987

if.end30:                                         ; preds = %if.then23
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !14989
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 44, !dbg !14991
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !14991
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 8, !dbg !14992
  %51 = load i16, i16* %device, align 2, !dbg !14992
  %conv31 = zext i16 %51 to i32, !dbg !14989
  %cmp32 = icmp eq i32 %conv31, 46, !dbg !14993
  br i1 %cmp32, label %land.lhs.true, label %if.end40, !dbg !14994

land.lhs.true:                                    ; preds = %if.end30
  %52 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !14995
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %52, i32 0, i32 5, !dbg !14996
  %cmd = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 0, !dbg !14997
  %flashfw = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FLASHFW_CMD*, !dbg !14998
  %op_code = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw, i32 0, i32 0, !dbg !14999
  %53 = load i8, i8* %op_code, align 8, !dbg !14999
  %conv34 = zext i8 %53 to i32, !dbg !14995
  %cmp35 = icmp eq i32 %conv34, 34, !dbg !15000
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !15001

if.then37:                                        ; preds = %land.lhs.true
  %54 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15002
  %55 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !15004
  %56 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15005
  %call38 = call i32 @ips_flash_copperhead(%struct.ips_ha* %54, %struct.ips_passthru_t* %55, %struct.ips_scb* %56) #11, !dbg !15006
  store i32 %call38, i32* %ret, align 4, !dbg !15007
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !15008
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15009
  %ioctl_data39 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 25, !dbg !15010
  %59 = load i8*, i8** %ioctl_data39, align 8, !dbg !15010
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %57, i8* %59, i32 240) #11, !dbg !15011
  %60 = load i32, i32* %ret, align 4, !dbg !15012
  store i32 %60, i32* %retval, align 4, !dbg !15013
  br label %return, !dbg !15013

if.end40:                                         ; preds = %land.lhs.true, %if.end30
  %61 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15014
  %62 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !15016
  %63 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15017
  %call41 = call i32 @ips_usrcmd(%struct.ips_ha* %61, %struct.ips_passthru_t* %62, %struct.ips_scb* %63) #11, !dbg !15018
  %tobool42 = icmp ne i32 %call41, 0, !dbg !15018
  br i1 %tobool42, label %if.then43, label %if.else, !dbg !15019

if.then43:                                        ; preds = %if.end40
  store i32 1, i32* %retval, align 4, !dbg !15020
  br label %return, !dbg !15020

if.else:                                          ; preds = %if.end40
  store i32 4, i32* %retval, align 4, !dbg !15021
  br label %return, !dbg !15021

if.end44:                                         ; preds = %sw.bb19
  br label %sw.epilog, !dbg !15022

sw.epilog:                                        ; preds = %if.end13, %if.end44
  store i32 4, i32* %retval, align 4, !dbg !15023
  br label %return, !dbg !15023

return:                                           ; preds = %sw.epilog, %if.else, %if.then43, %if.then37, %if.then29, %sw.bb, %if.end12, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !15024
  ret i32 %64, !dbg !15024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_freescb(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !15025 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15026, metadata !DIExpression()), !dbg !15027
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15028, metadata !DIExpression()), !dbg !15029
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15030
  %flags = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 15, !dbg !15032
  %1 = load i32, i32* %flags, align 4, !dbg !15032
  %and = and i32 %1, 8, !dbg !15033
  %tobool = icmp ne i32 %and, 0, !dbg !15033
  br i1 %tobool, label %if.then, label %if.else, !dbg !15034

if.then:                                          ; preds = %entry
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15035
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 18, !dbg !15036
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !15036
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %3) #11, !dbg !15037
  br label %if.end14, !dbg !15037

if.else:                                          ; preds = %entry
  %4 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15038
  %flags1 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %4, i32 0, i32 15, !dbg !15040
  %5 = load i32, i32* %flags1, align 4, !dbg !15040
  %and2 = and i32 %5, 16, !dbg !15041
  %tobool3 = icmp ne i32 %and2, 0, !dbg !15041
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !15042

if.then4:                                         ; preds = %if.else
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15043
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 44, !dbg !15043
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !15043
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !15043
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15043
  %data_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 23, !dbg !15043
  %9 = load i64, i64* %data_busaddr, align 8, !dbg !15043
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15043
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %10, i32 0, i32 13, !dbg !15043
  %11 = load i32, i32* %data_len, align 4, !dbg !15043
  %conv = zext i32 %11 to i64, !dbg !15043
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15043
  %scsi_cmd5 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 18, !dbg !15043
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd5, align 8, !dbg !15043
  %tobool6 = icmp ne %struct.scsi_cmnd* %13, null, !dbg !15043
  br i1 %tobool6, label %lor.lhs.false, label %cond.true, !dbg !15043

lor.lhs.false:                                    ; preds = %if.then4
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15043
  %scsi_cmd7 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 18, !dbg !15043
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd7, align 8, !dbg !15043
  %call = call i32 @ips_is_passthru(%struct.scsi_cmnd* %15) #11, !dbg !15043
  %tobool8 = icmp ne i32 %call, 0, !dbg !15043
  br i1 %tobool8, label %cond.true, label %lor.lhs.false9, !dbg !15043

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15043
  %scsi_cmd10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 18, !dbg !15043
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd10, align 8, !dbg !15043
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 13, !dbg !15043
  %18 = load i32, i32* %sc_data_direction, align 8, !dbg !15043
  %cmp = icmp eq i32 3, %18, !dbg !15043
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15043

cond.true:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %if.then4
  br label %cond.end, !dbg !15043

cond.false:                                       ; preds = %lor.lhs.false9
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15043
  %scsi_cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 18, !dbg !15043
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd12, align 8, !dbg !15043
  %sc_data_direction13 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 13, !dbg !15043
  %21 = load i32, i32* %sc_data_direction13, align 8, !dbg !15043
  br label %cond.end, !dbg !15043

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %21, %cond.false ], !dbg !15043
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %9, i64 %conv, i32 %cond, i64 0) #11, !dbg !15043
  br label %if.end, !dbg !15043

if.end:                                           ; preds = %cond.end, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15044
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15044
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 12, !dbg !15044
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !15044
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %22 to i64, !dbg !15044
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %24 to i64, !dbg !15044
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15044
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !15044
  %conv15 = trunc i64 %sub.ptr.div to i32, !dbg !15044
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15046
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 9, !dbg !15047
  %26 = load i32, i32* %max_cmds, align 8, !dbg !15047
  %sub = sub i32 %26, 1, !dbg !15048
  %cmp16 = icmp ult i32 %conv15, %sub, !dbg !15049
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !15050

if.then18:                                        ; preds = %if.end14
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15051
  %scb_freelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 13, !dbg !15053
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb_freelist, align 8, !dbg !15053
  %29 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15054
  %q_next = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %29, i32 0, i32 19, !dbg !15055
  store %struct.ips_scb* %28, %struct.ips_scb** %q_next, align 8, !dbg !15056
  %30 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15057
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15058
  %scb_freelist19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 13, !dbg !15059
  store %struct.ips_scb* %30, %struct.ips_scb** %scb_freelist19, align 8, !dbg !15060
  br label %if.end20, !dbg !15061

if.end20:                                         ; preds = %if.then18, %if.end14
  ret void, !dbg !15062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_putq_scb_head(%struct.ips_scb_queue* %queue, %struct.ips_scb* %item) #0 !dbg !15063 {
entry:
  %queue.addr = alloca %struct.ips_scb_queue*, align 8
  %item.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_scb_queue* %queue, %struct.ips_scb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb_queue** %queue.addr, metadata !15066, metadata !DIExpression()), !dbg !15067
  store %struct.ips_scb* %item, %struct.ips_scb** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %item.addr, metadata !15068, metadata !DIExpression()), !dbg !15069
  %0 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !15070
  %tobool = icmp ne %struct.ips_scb* %0, null, !dbg !15070
  br i1 %tobool, label %if.end, label %if.then, !dbg !15072

if.then:                                          ; preds = %entry
  br label %return, !dbg !15073

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !15074
  %head = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %1, i32 0, i32 0, !dbg !15075
  %2 = load %struct.ips_scb*, %struct.ips_scb** %head, align 8, !dbg !15075
  %3 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !15076
  %q_next = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 19, !dbg !15077
  store %struct.ips_scb* %2, %struct.ips_scb** %q_next, align 8, !dbg !15078
  %4 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !15079
  %5 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !15080
  %head1 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %5, i32 0, i32 0, !dbg !15081
  store %struct.ips_scb* %4, %struct.ips_scb** %head1, align 8, !dbg !15082
  %6 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !15083
  %tail = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %6, i32 0, i32 1, !dbg !15085
  %7 = load %struct.ips_scb*, %struct.ips_scb** %tail, align 8, !dbg !15085
  %tobool2 = icmp ne %struct.ips_scb* %7, null, !dbg !15083
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !15086

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ips_scb*, %struct.ips_scb** %item.addr, align 8, !dbg !15087
  %9 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !15088
  %tail4 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %9, i32 0, i32 1, !dbg !15089
  store %struct.ips_scb* %8, %struct.ips_scb** %tail4, align 8, !dbg !15090
  br label %if.end5, !dbg !15088

if.end5:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.ips_scb_queue*, %struct.ips_scb_queue** %queue.addr, align 8, !dbg !15091
  %count = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %10, i32 0, i32 2, !dbg !15092
  %11 = load i32, i32* %count, align 8, !dbg !15093
  %inc = add i32 %11, 1, !dbg !15093
  store i32 %inc, i32* %count, align 8, !dbg !15093
  br label %return, !dbg !15094

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !15094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sdev_channel(%struct.scsi_device* %sdev) #0 !dbg !15095 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !15100
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 17, !dbg !15101
  %1 = load i32, i32* %channel, align 4, !dbg !15101
  ret i32 %1, !dbg !15102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sdev_id(%struct.scsi_device* %sdev) #0 !dbg !15103 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !15104, metadata !DIExpression()), !dbg !15105
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !15106
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 16, !dbg !15107
  %1 = load i32, i32* %id, align 8, !dbg !15107
  ret i32 %1, !dbg !15108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_cmnd* @ips_removeq_wait(%struct.ips_wait_queue* %queue, %struct.scsi_cmnd* %item) #0 !dbg !15109 {
entry:
  %retval = alloca %struct.scsi_cmnd*, align 8
  %queue.addr = alloca %struct.ips_wait_queue*, align 8
  %item.addr = alloca %struct.scsi_cmnd*, align 8
  %p = alloca %struct.scsi_cmnd*, align 8
  store %struct.ips_wait_queue* %queue, %struct.ips_wait_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_wait_queue** %queue.addr, metadata !15113, metadata !DIExpression()), !dbg !15114
  store %struct.scsi_cmnd* %item, %struct.scsi_cmnd** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %item.addr, metadata !15115, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %p, metadata !15117, metadata !DIExpression()), !dbg !15118
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15119
  %tobool = icmp ne %struct.scsi_cmnd* %0, null, !dbg !15119
  br i1 %tobool, label %if.end, label %if.then, !dbg !15121

if.then:                                          ; preds = %entry
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !15122
  br label %return, !dbg !15122

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15123
  %2 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !15125
  %head = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %2, i32 0, i32 0, !dbg !15126
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %head, align 8, !dbg !15126
  %cmp = icmp eq %struct.scsi_cmnd* %1, %3, !dbg !15127
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !15128

if.then1:                                         ; preds = %if.end
  %4 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !15129
  %call = call %struct.scsi_cmnd* @ips_removeq_wait_head(%struct.ips_wait_queue* %4) #11, !dbg !15131
  store %struct.scsi_cmnd* %call, %struct.scsi_cmnd** %retval, align 8, !dbg !15132
  br label %return, !dbg !15132

if.end2:                                          ; preds = %if.end
  %5 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !15133
  %head3 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %5, i32 0, i32 0, !dbg !15134
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %head3, align 8, !dbg !15134
  store %struct.scsi_cmnd* %6, %struct.scsi_cmnd** %p, align 8, !dbg !15135
  br label %while.cond, !dbg !15136

while.cond:                                       ; preds = %while.body, %if.end2
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !15137
  %tobool4 = icmp ne %struct.scsi_cmnd* %7, null, !dbg !15138
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !15139

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15140
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !15141
  %host_scribble = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %9, i32 0, i32 23, !dbg !15142
  %10 = load i8*, i8** %host_scribble, align 8, !dbg !15142
  %11 = bitcast i8* %10 to %struct.scsi_cmnd*, !dbg !15143
  %cmp5 = icmp ne %struct.scsi_cmnd* %8, %11, !dbg !15144
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !15145
  br i1 %12, label %while.body, label %while.end, !dbg !15136

while.body:                                       ; preds = %land.end
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !15146
  %host_scribble6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 23, !dbg !15147
  %14 = load i8*, i8** %host_scribble6, align 8, !dbg !15147
  %15 = bitcast i8* %14 to %struct.scsi_cmnd*, !dbg !15148
  store %struct.scsi_cmnd* %15, %struct.scsi_cmnd** %p, align 8, !dbg !15149
  br label %while.cond, !dbg !15136, !llvm.loop !15150

while.end:                                        ; preds = %land.end
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !15151
  %tobool7 = icmp ne %struct.scsi_cmnd* %16, null, !dbg !15151
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !15153

if.then8:                                         ; preds = %while.end
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15154
  %host_scribble9 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 23, !dbg !15156
  %18 = load i8*, i8** %host_scribble9, align 8, !dbg !15156
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !15157
  %host_scribble10 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 23, !dbg !15158
  store i8* %18, i8** %host_scribble10, align 8, !dbg !15159
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15160
  %host_scribble11 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 23, !dbg !15162
  %21 = load i8*, i8** %host_scribble11, align 8, !dbg !15162
  %tobool12 = icmp ne i8* %21, null, !dbg !15160
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !15163

if.then13:                                        ; preds = %if.then8
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !15164
  %23 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !15165
  %tail = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %23, i32 0, i32 1, !dbg !15166
  store %struct.scsi_cmnd* %22, %struct.scsi_cmnd** %tail, align 8, !dbg !15167
  br label %if.end14, !dbg !15165

if.end14:                                         ; preds = %if.then13, %if.then8
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15168
  %host_scribble15 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 23, !dbg !15169
  store i8* null, i8** %host_scribble15, align 8, !dbg !15170
  %25 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !15171
  %count = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %25, i32 0, i32 2, !dbg !15172
  %26 = load i32, i32* %count, align 8, !dbg !15173
  %dec = add i32 %26, -1, !dbg !15173
  store i32 %dec, i32* %count, align 8, !dbg !15173
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !15174
  store %struct.scsi_cmnd* %27, %struct.scsi_cmnd** %retval, align 8, !dbg !15175
  br label %return, !dbg !15175

if.end16:                                         ; preds = %while.end
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !15176
  br label %return, !dbg !15176

return:                                           ; preds = %if.end16, %if.end14, %if.then1, %if.then
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %retval, align 8, !dbg !15177
  ret %struct.scsi_cmnd* %28, !dbg !15177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ipsintr_done(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !15178 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15181, metadata !DIExpression()), !dbg !15182
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15183
  %tobool = icmp ne %struct.ips_scb* %0, null, !dbg !15183
  br i1 %tobool, label %if.end, label %if.then, !dbg !15185

if.then:                                          ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15186
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 44, !dbg !15186
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !15186
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !15186
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39, i64 0, i64 0)) #12, !dbg !15186
  br label %return, !dbg !15188

if.end:                                           ; preds = %entry
  %3 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15189
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 18, !dbg !15191
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !15191
  %cmp = icmp eq %struct.scsi_cmnd* %4, null, !dbg !15192
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !15193

if.then1:                                         ; preds = %if.end
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15194
  %pcidev2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 44, !dbg !15194
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pcidev2, align 8, !dbg !15194
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !15194
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !15194
  br label %return, !dbg !15196

if.end4:                                          ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15197
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15198
  call void @ips_done(%struct.ips_ha* %7, %struct.ips_scb* %8) #11, !dbg !15199
  br label %return, !dbg !15200

return:                                           ; preds = %if.end4, %if.then1, %if.then
  ret void, !dbg !15200
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_dma_map(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_fill_scb_sg_single(%struct.ips_ha* %ha, i64 %busaddr, %struct.ips_scb* %scb, i32 %indx, i32 %e_len) #0 !dbg !15201 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %busaddr.addr = alloca i64, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %indx.addr = alloca i32, align 4
  %e_len.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15204, metadata !DIExpression()), !dbg !15205
  store i64 %busaddr, i64* %busaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %busaddr.addr, metadata !15206, metadata !DIExpression()), !dbg !15207
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15208, metadata !DIExpression()), !dbg !15209
  store i32 %indx, i32* %indx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indx.addr, metadata !15210, metadata !DIExpression()), !dbg !15211
  store i32 %e_len, i32* %e_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e_len.addr, metadata !15212, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15214, metadata !DIExpression()), !dbg !15215
  store i32 0, i32* %ret_val, align 4, !dbg !15215
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15216
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %0, i32 0, i32 13, !dbg !15218
  %1 = load i32, i32* %data_len, align 4, !dbg !15218
  %2 = load i32, i32* %e_len.addr, align 4, !dbg !15219
  %add = add i32 %1, %2, !dbg !15220
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15221
  %max_xfer = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 8, !dbg !15222
  %4 = load i32, i32* %max_xfer, align 4, !dbg !15222
  %cmp = icmp ugt i32 %add, %4, !dbg !15223
  br i1 %cmp, label %if.then, label %if.else, !dbg !15224

if.then:                                          ; preds = %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15225
  %max_xfer1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 8, !dbg !15227
  %6 = load i32, i32* %max_xfer1, align 4, !dbg !15227
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15228
  %data_len2 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 13, !dbg !15229
  %8 = load i32, i32* %data_len2, align 4, !dbg !15229
  %sub = sub i32 %6, %8, !dbg !15230
  store i32 %sub, i32* %e_len.addr, align 4, !dbg !15231
  %9 = load i32, i32* %indx.addr, align 4, !dbg !15232
  %conv = trunc i32 %9 to i8, !dbg !15232
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15233
  %breakup = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %10, i32 0, i32 11, !dbg !15234
  store i8 %conv, i8* %breakup, align 2, !dbg !15235
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15236
  %sg_break = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 12, !dbg !15237
  %12 = load i8, i8* %sg_break, align 1, !dbg !15238
  %inc = add i8 %12, 1, !dbg !15238
  store i8 %inc, i8* %sg_break, align 1, !dbg !15238
  store i32 -1, i32* %ret_val, align 4, !dbg !15239
  br label %if.end, !dbg !15240

if.else:                                          ; preds = %entry
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15241
  %breakup3 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 11, !dbg !15243
  store i8 0, i8* %breakup3, align 2, !dbg !15244
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15245
  %sg_break4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 12, !dbg !15246
  store i8 0, i8* %sg_break4, align 1, !dbg !15247
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15248
  %flags = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 28, !dbg !15248
  %16 = load i32, i32* %flags, align 8, !dbg !15248
  %and = and i32 %16, 1, !dbg !15248
  %tobool = icmp ne i32 %and, 0, !dbg !15248
  br i1 %tobool, label %if.then5, label %if.else18, !dbg !15250

if.then5:                                         ; preds = %if.end
  %17 = load i64, i64* %busaddr.addr, align 8, !dbg !15251
  %and6 = and i64 %17, 4294967295, !dbg !15251
  %conv7 = trunc i64 %and6 to i32, !dbg !15251
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15253
  %sg_list = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 17, !dbg !15254
  %enh_list = bitcast %union.IPS_SG_LIST* %sg_list to %struct.ips_enh_sglist**, !dbg !15255
  %19 = load %struct.ips_enh_sglist*, %struct.ips_enh_sglist** %enh_list, align 8, !dbg !15255
  %20 = load i32, i32* %indx.addr, align 4, !dbg !15256
  %idxprom = sext i32 %20 to i64, !dbg !15253
  %arrayidx = getelementptr %struct.ips_enh_sglist, %struct.ips_enh_sglist* %19, i64 %idxprom, !dbg !15253
  %address_lo = getelementptr inbounds %struct.ips_enh_sglist, %struct.ips_enh_sglist* %arrayidx, i32 0, i32 0, !dbg !15257
  store i32 %conv7, i32* %address_lo, align 4, !dbg !15258
  %21 = load i64, i64* %busaddr.addr, align 8, !dbg !15259
  %shr = lshr i64 %21, 16, !dbg !15259
  %shr8 = lshr i64 %shr, 16, !dbg !15259
  %conv9 = trunc i64 %shr8 to i32, !dbg !15259
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15260
  %sg_list10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %22, i32 0, i32 17, !dbg !15261
  %enh_list11 = bitcast %union.IPS_SG_LIST* %sg_list10 to %struct.ips_enh_sglist**, !dbg !15262
  %23 = load %struct.ips_enh_sglist*, %struct.ips_enh_sglist** %enh_list11, align 8, !dbg !15262
  %24 = load i32, i32* %indx.addr, align 4, !dbg !15263
  %idxprom12 = sext i32 %24 to i64, !dbg !15260
  %arrayidx13 = getelementptr %struct.ips_enh_sglist, %struct.ips_enh_sglist* %23, i64 %idxprom12, !dbg !15260
  %address_hi = getelementptr inbounds %struct.ips_enh_sglist, %struct.ips_enh_sglist* %arrayidx13, i32 0, i32 1, !dbg !15264
  store i32 %conv9, i32* %address_hi, align 4, !dbg !15265
  %25 = load i32, i32* %e_len.addr, align 4, !dbg !15266
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15267
  %sg_list14 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %26, i32 0, i32 17, !dbg !15268
  %enh_list15 = bitcast %union.IPS_SG_LIST* %sg_list14 to %struct.ips_enh_sglist**, !dbg !15269
  %27 = load %struct.ips_enh_sglist*, %struct.ips_enh_sglist** %enh_list15, align 8, !dbg !15269
  %28 = load i32, i32* %indx.addr, align 4, !dbg !15270
  %idxprom16 = sext i32 %28 to i64, !dbg !15267
  %arrayidx17 = getelementptr %struct.ips_enh_sglist, %struct.ips_enh_sglist* %27, i64 %idxprom16, !dbg !15267
  %length = getelementptr inbounds %struct.ips_enh_sglist, %struct.ips_enh_sglist* %arrayidx17, i32 0, i32 2, !dbg !15271
  store i32 %25, i32* %length, align 4, !dbg !15272
  br label %if.end29, !dbg !15273

if.else18:                                        ; preds = %if.end
  %29 = load i64, i64* %busaddr.addr, align 8, !dbg !15274
  %and19 = and i64 %29, 4294967295, !dbg !15274
  %conv20 = trunc i64 %and19 to i32, !dbg !15274
  %30 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15276
  %sg_list21 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %30, i32 0, i32 17, !dbg !15277
  %std_list = bitcast %union.IPS_SG_LIST* %sg_list21 to %struct.ips_sglist**, !dbg !15278
  %31 = load %struct.ips_sglist*, %struct.ips_sglist** %std_list, align 8, !dbg !15278
  %32 = load i32, i32* %indx.addr, align 4, !dbg !15279
  %idxprom22 = sext i32 %32 to i64, !dbg !15276
  %arrayidx23 = getelementptr %struct.ips_sglist, %struct.ips_sglist* %31, i64 %idxprom22, !dbg !15276
  %address = getelementptr inbounds %struct.ips_sglist, %struct.ips_sglist* %arrayidx23, i32 0, i32 0, !dbg !15280
  store i32 %conv20, i32* %address, align 4, !dbg !15281
  %33 = load i32, i32* %e_len.addr, align 4, !dbg !15282
  %34 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15283
  %sg_list24 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %34, i32 0, i32 17, !dbg !15284
  %std_list25 = bitcast %union.IPS_SG_LIST* %sg_list24 to %struct.ips_sglist**, !dbg !15285
  %35 = load %struct.ips_sglist*, %struct.ips_sglist** %std_list25, align 8, !dbg !15285
  %36 = load i32, i32* %indx.addr, align 4, !dbg !15286
  %idxprom26 = sext i32 %36 to i64, !dbg !15283
  %arrayidx27 = getelementptr %struct.ips_sglist, %struct.ips_sglist* %35, i64 %idxprom26, !dbg !15283
  %length28 = getelementptr inbounds %struct.ips_sglist, %struct.ips_sglist* %arrayidx27, i32 0, i32 1, !dbg !15287
  store i32 %33, i32* %length28, align 4, !dbg !15288
  br label %if.end29

if.end29:                                         ; preds = %if.else18, %if.then5
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15289
  %sg_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %37, i32 0, i32 14, !dbg !15290
  %38 = load i32, i32* %sg_len, align 8, !dbg !15291
  %inc30 = add i32 %38, 1, !dbg !15291
  store i32 %inc30, i32* %sg_len, align 8, !dbg !15291
  %39 = load i32, i32* %e_len.addr, align 4, !dbg !15292
  %40 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15293
  %data_len31 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %40, i32 0, i32 13, !dbg !15294
  %41 = load i32, i32* %data_len31, align 4, !dbg !15295
  %add32 = add i32 %41, %39, !dbg !15295
  store i32 %add32, i32* %data_len31, align 4, !dbg !15295
  %42 = load i32, i32* %ret_val, align 4, !dbg !15296
  ret i32 %42, !dbg !15297
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_fix_ffdc_time(%struct.ips_ha* %ha, %struct.ips_scb* %scb, i64 %current_time) #0 !dbg !15298 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %current_time.addr = alloca i64, align 8
  %tm = alloca %struct.tm, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15301, metadata !DIExpression()), !dbg !15302
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15303, metadata !DIExpression()), !dbg !15304
  store i64 %current_time, i64* %current_time.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %current_time.addr, metadata !15305, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !15307, metadata !DIExpression()), !dbg !15319
  %0 = load i64, i64* %current_time.addr, align 8, !dbg !15320
  call void @time64_to_tm(i64 %0, i32 0, %struct.tm* %tm) #11, !dbg !15321
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !15322
  %1 = load i32, i32* %tm_hour, align 8, !dbg !15322
  %conv = trunc i32 %1 to i8, !dbg !15323
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15324
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 0, !dbg !15325
  %ffdc = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FFDC_CMD*, !dbg !15326
  %hour = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc, i32 0, i32 6, !dbg !15327
  store i8 %conv, i8* %hour, align 2, !dbg !15328
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !15329
  %3 = load i32, i32* %tm_min, align 4, !dbg !15329
  %conv1 = trunc i32 %3 to i8, !dbg !15330
  %4 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15331
  %cmd2 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %4, i32 0, i32 0, !dbg !15332
  %ffdc3 = bitcast %union.IPS_HOST_COMMAND* %cmd2 to %struct.IPS_FFDC_CMD*, !dbg !15333
  %minute = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc3, i32 0, i32 5, !dbg !15334
  store i8 %conv1, i8* %minute, align 1, !dbg !15335
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !15336
  %5 = load i32, i32* %tm_sec, align 8, !dbg !15336
  %conv4 = trunc i32 %5 to i8, !dbg !15337
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15338
  %cmd5 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %6, i32 0, i32 0, !dbg !15339
  %ffdc6 = bitcast %union.IPS_HOST_COMMAND* %cmd5 to %struct.IPS_FFDC_CMD*, !dbg !15340
  %second = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc6, i32 0, i32 4, !dbg !15341
  store i8 %conv4, i8* %second, align 4, !dbg !15342
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !15343
  %7 = load i64, i64* %tm_year, align 8, !dbg !15343
  %add = add i64 %7, 1900, !dbg !15344
  %div = sdiv i64 %add, 100, !dbg !15345
  %conv7 = trunc i64 %div to i8, !dbg !15346
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15347
  %cmd8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 0, !dbg !15348
  %ffdc9 = bitcast %union.IPS_HOST_COMMAND* %cmd8 to %struct.IPS_FFDC_CMD*, !dbg !15349
  %yearH = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc9, i32 0, i32 10, !dbg !15350
  store i8 %conv7, i8* %yearH, align 1, !dbg !15351
  %tm_year10 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !15352
  %9 = load i64, i64* %tm_year10, align 8, !dbg !15352
  %rem = srem i64 %9, 100, !dbg !15353
  %conv11 = trunc i64 %rem to i8, !dbg !15354
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15355
  %cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %10, i32 0, i32 0, !dbg !15356
  %ffdc13 = bitcast %union.IPS_HOST_COMMAND* %cmd12 to %struct.IPS_FFDC_CMD*, !dbg !15357
  %yearL = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc13, i32 0, i32 11, !dbg !15358
  store i8 %conv11, i8* %yearL, align 2, !dbg !15359
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !15360
  %11 = load i32, i32* %tm_mon, align 8, !dbg !15360
  %add14 = add i32 %11, 1, !dbg !15361
  %conv15 = trunc i32 %add14 to i8, !dbg !15362
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15363
  %cmd16 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 0, !dbg !15364
  %ffdc17 = bitcast %union.IPS_HOST_COMMAND* %cmd16 to %struct.IPS_FFDC_CMD*, !dbg !15365
  %month = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc17, i32 0, i32 9, !dbg !15366
  store i8 %conv15, i8* %month, align 4, !dbg !15367
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !15368
  %13 = load i32, i32* %tm_mday, align 4, !dbg !15368
  %conv18 = trunc i32 %13 to i8, !dbg !15369
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15370
  %cmd19 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !15371
  %ffdc20 = bitcast %union.IPS_HOST_COMMAND* %cmd19 to %struct.IPS_FFDC_CMD*, !dbg !15372
  %day = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc20, i32 0, i32 7, !dbg !15373
  store i8 %conv18, i8* %day, align 1, !dbg !15374
  ret void, !dbg !15375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_send_wait(%struct.ips_ha* %ha, %struct.ips_scb* %scb, i32 %timeout, i32 %intr) #0 !dbg !15376 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %timeout.addr = alloca i32, align 4
  %intr.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15379, metadata !DIExpression()), !dbg !15380
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15381, metadata !DIExpression()), !dbg !15382
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !15383, metadata !DIExpression()), !dbg !15384
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !15385, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15387, metadata !DIExpression()), !dbg !15388
  %0 = load i32, i32* %intr.addr, align 4, !dbg !15389
  %cmp = icmp ne i32 %0, 99, !dbg !15391
  br i1 %cmp, label %if.then, label %if.end, !dbg !15392

if.then:                                          ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15393
  %waitflag = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 29, !dbg !15395
  store i8 1, i8* %waitflag, align 4, !dbg !15396
  %2 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15397
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %2, i32 0, i32 5, !dbg !15398
  %arrayidx = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !15397
  %3 = load i8, i8* %arrayidx, align 1, !dbg !15397
  %conv = zext i8 %3 to i32, !dbg !15397
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15399
  %cmd_in_progress = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 27, !dbg !15400
  store i32 %conv, i32* %cmd_in_progress, align 4, !dbg !15401
  br label %if.end, !dbg !15402

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15403
  %callback = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %5, i32 0, i32 20, !dbg !15404
  store void (%struct.ips_ha*, %struct.ips_scb*)* @ipsintr_blocking, void (%struct.ips_ha*, %struct.ips_scb*)** %callback, align 8, !dbg !15405
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15406
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15407
  %call = call i32 @ips_send_cmd(%struct.ips_ha* %6, %struct.ips_scb* %7) #11, !dbg !15408
  store i32 %call, i32* %ret, align 4, !dbg !15409
  %8 = load i32, i32* %ret, align 4, !dbg !15410
  %cmp1 = icmp eq i32 %8, 4, !dbg !15412
  br i1 %cmp1, label %if.then5, label %lor.lhs.false, !dbg !15413

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %ret, align 4, !dbg !15414
  %cmp3 = icmp eq i32 %9, 2, !dbg !15415
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !15416

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load i32, i32* %ret, align 4, !dbg !15417
  store i32 %10, i32* %retval, align 4, !dbg !15418
  br label %return, !dbg !15418

if.end6:                                          ; preds = %lor.lhs.false
  %11 = load i32, i32* %intr.addr, align 4, !dbg !15419
  %cmp7 = icmp ne i32 %11, 99, !dbg !15421
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !15422

if.then9:                                         ; preds = %if.end6
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15423
  %13 = load i32, i32* %timeout.addr, align 4, !dbg !15424
  %14 = load i32, i32* %intr.addr, align 4, !dbg !15425
  %call10 = call i32 @ips_wait(%struct.ips_ha* %12, i32 %13, i32 %14) #11, !dbg !15426
  store i32 %call10, i32* %ret, align 4, !dbg !15427
  br label %if.end11, !dbg !15428

if.end11:                                         ; preds = %if.then9, %if.end6
  %15 = load i32, i32* %ret, align 4, !dbg !15429
  store i32 %15, i32* %retval, align 4, !dbg !15430
  br label %return, !dbg !15430

return:                                           ; preds = %if.end11, %if.then5
  %16 = load i32, i32* %retval, align 4, !dbg !15431
  ret i32 %16, !dbg !15431
}

; Function Attrs: noredzone
declare dso_local void @time64_to_tm(i64, i32, %struct.tm*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ipsintr_blocking(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !15432 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15433, metadata !DIExpression()), !dbg !15434
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15435, metadata !DIExpression()), !dbg !15436
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15437
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15438
  call void @ips_freescb(%struct.ips_ha* %0, %struct.ips_scb* %1) #11, !dbg !15439
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15440
  %waitflag = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 29, !dbg !15442
  %3 = load i8, i8* %waitflag, align 4, !dbg !15442
  %conv = zext i8 %3 to i32, !dbg !15440
  %cmp = icmp eq i32 %conv, 1, !dbg !15443
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15444

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15445
  %cmd_in_progress = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 27, !dbg !15446
  %5 = load i32, i32* %cmd_in_progress, align 4, !dbg !15446
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15447
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %6, i32 0, i32 5, !dbg !15448
  %arrayidx = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !15447
  %7 = load i8, i8* %arrayidx, align 1, !dbg !15447
  %conv2 = zext i8 %7 to i32, !dbg !15447
  %cmp3 = icmp eq i32 %5, %conv2, !dbg !15449
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15450

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15451
  %waitflag5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 29, !dbg !15453
  store i8 0, i8* %waitflag5, align 4, !dbg !15454
  br label %if.end, !dbg !15455

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !15456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_wait(%struct.ips_ha* %ha, i32 %time, i32 %intr) #0 !dbg !15457 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %time.addr = alloca i32, align 4
  %intr.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %done = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  store i32 %time, i32* %time.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %time.addr, metadata !15462, metadata !DIExpression()), !dbg !15463
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !15464, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15466, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.declare(metadata i32* %done, metadata !15468, metadata !DIExpression()), !dbg !15469
  store i32 4, i32* %ret, align 4, !dbg !15470
  store i32 0, i32* %done, align 4, !dbg !15471
  %0 = load i32, i32* %time.addr, align 4, !dbg !15472
  %mul = mul i32 %0, 1000, !dbg !15472
  store i32 %mul, i32* %time.addr, align 4, !dbg !15472
  br label %while.cond, !dbg !15473

while.cond:                                       ; preds = %if.end16, %entry
  %1 = load i32, i32* %time.addr, align 4, !dbg !15474
  %cmp = icmp sgt i32 %1, 0, !dbg !15475
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15476

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %done, align 4, !dbg !15477
  %tobool = icmp ne i32 %2, 0, !dbg !15478
  %lnot = xor i1 %tobool, true, !dbg !15478
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !15479
  br i1 %3, label %while.body, label %while.end, !dbg !15473

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %intr.addr, align 4, !dbg !15480
  %cmp1 = icmp eq i32 %4, 0, !dbg !15483
  br i1 %cmp1, label %if.then, label %if.else, !dbg !15484

if.then:                                          ; preds = %while.body
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15485
  %waitflag = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 29, !dbg !15488
  %6 = load i8, i8* %waitflag, align 4, !dbg !15488
  %conv = zext i8 %6 to i32, !dbg !15485
  %cmp2 = icmp eq i32 %conv, 0, !dbg !15489
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !15490

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %ret, align 4, !dbg !15491
  store i32 1, i32* %done, align 4, !dbg !15493
  br label %while.end, !dbg !15494

if.end:                                           ; preds = %if.then
  br label %if.end16, !dbg !15495

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %intr.addr, align 4, !dbg !15496
  %cmp5 = icmp eq i32 %7, 1, !dbg !15498
  br i1 %cmp5, label %if.then7, label %if.end15, !dbg !15499

if.then7:                                         ; preds = %if.else
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15500
  %waitflag8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 29, !dbg !15503
  %9 = load i8, i8* %waitflag8, align 4, !dbg !15503
  %conv9 = zext i8 %9 to i32, !dbg !15500
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !15504
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !15505

if.then12:                                        ; preds = %if.then7
  store i32 1, i32* %ret, align 4, !dbg !15506
  store i32 1, i32* %done, align 4, !dbg !15508
  br label %while.end, !dbg !15509

if.end13:                                         ; preds = %if.then7
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15510
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 43, !dbg !15511
  %intr14 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 9, !dbg !15512
  %11 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %intr14, align 8, !dbg !15512
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15513
  %call = call i32 %11(%struct.ips_ha* %12) #11, !dbg !15514
  br label %if.end15, !dbg !15515

if.end15:                                         ; preds = %if.end13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end
  call void @__const_udelay(i64 4295000) #11, !dbg !15516
  %13 = load i32, i32* %time.addr, align 4, !dbg !15521
  %dec = add i32 %13, -1, !dbg !15521
  store i32 %dec, i32* %time.addr, align 4, !dbg !15521
  br label %while.cond, !dbg !15473, !llvm.loop !15522

while.end:                                        ; preds = %if.then12, %if.then4, %land.end
  %14 = load i32, i32* %ret, align 4, !dbg !15524
  ret i32 %14, !dbg !15525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_alloc_passthru_buffer(%struct.ips_ha* %ha, i32 %length) #0 !dbg !15526 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %length.addr = alloca i32, align 4
  %bigger_buf = alloca i8*, align 8
  %dma_busaddr = alloca i64, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15527, metadata !DIExpression()), !dbg !15528
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !15529, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.declare(metadata i8** %bigger_buf, metadata !15531, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.declare(metadata i64* %dma_busaddr, metadata !15533, metadata !DIExpression()), !dbg !15534
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15535
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 25, !dbg !15537
  %1 = load i8*, i8** %ioctl_data, align 8, !dbg !15537
  %tobool = icmp ne i8* %1, null, !dbg !15535
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15538

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %length.addr, align 4, !dbg !15539
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15540
  %ioctl_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 35, !dbg !15541
  %4 = load i32, i32* %ioctl_len, align 4, !dbg !15541
  %cmp = icmp sle i32 %2, %4, !dbg !15542
  br i1 %cmp, label %if.then, label %if.end, !dbg !15543

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !15544
  br label %return, !dbg !15544

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15545
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 44, !dbg !15546
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !15546
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !15547
  %7 = load i32, i32* %length.addr, align 4, !dbg !15548
  %conv = sext i32 %7 to i64, !dbg !15548
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv, i64* %dma_busaddr, i32 3264) #11, !dbg !15549
  store i8* %call, i8** %bigger_buf, align 8, !dbg !15550
  %8 = load i8*, i8** %bigger_buf, align 8, !dbg !15551
  %tobool1 = icmp ne i8* %8, null, !dbg !15551
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !15553

if.then2:                                         ; preds = %if.end
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15554
  %pcidev3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 44, !dbg !15556
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pcidev3, align 8, !dbg !15556
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !15557
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15558
  %ioctl_len5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 35, !dbg !15559
  %12 = load i32, i32* %ioctl_len5, align 4, !dbg !15559
  %conv6 = sext i32 %12 to i64, !dbg !15558
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15560
  %ioctl_data7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 25, !dbg !15561
  %14 = load i8*, i8** %ioctl_data7, align 8, !dbg !15561
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15562
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 36, !dbg !15563
  %16 = load i64, i64* %ioctl_busaddr, align 8, !dbg !15563
  call void @dma_free_coherent(%struct.device* %dev4, i64 %conv6, i8* %14, i64 %16) #11, !dbg !15564
  %17 = load i8*, i8** %bigger_buf, align 8, !dbg !15565
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15566
  %ioctl_data8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 25, !dbg !15567
  store i8* %17, i8** %ioctl_data8, align 8, !dbg !15568
  %19 = load i32, i32* %length.addr, align 4, !dbg !15569
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15570
  %ioctl_len9 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 35, !dbg !15571
  store i32 %19, i32* %ioctl_len9, align 4, !dbg !15572
  %21 = load i64, i64* %dma_busaddr, align 8, !dbg !15573
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15574
  %ioctl_busaddr10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 36, !dbg !15575
  store i64 %21, i64* %ioctl_busaddr10, align 8, !dbg !15576
  br label %if.end11, !dbg !15577

if.else:                                          ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !15578
  br label %return, !dbg !15578

if.end11:                                         ; preds = %if.then2
  store i32 0, i32* %retval, align 4, !dbg !15580
  br label %return, !dbg !15580

return:                                           ; preds = %if.end11, %if.else, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !15581
  ret i32 %23, !dbg !15581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_flash_copperhead(%struct.ips_ha* %ha, %struct.ips_passthru_t* %pt, %struct.ips_scb* %scb) #0 !dbg !15582 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %pt.addr = alloca %struct.ips_passthru_t*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %datasize = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15585, metadata !DIExpression()), !dbg !15586
  store %struct.ips_passthru_t* %pt, %struct.ips_passthru_t** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt.addr, metadata !15587, metadata !DIExpression()), !dbg !15588
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15589, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.declare(metadata i32* %datasize, metadata !15591, metadata !DIExpression()), !dbg !15592
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15593
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 44, !dbg !15593
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !15593
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 8, !dbg !15593
  %2 = load i16, i16* %device, align 2, !dbg !15593
  %conv = zext i16 %2 to i32, !dbg !15593
  %cmp = icmp eq i32 %conv, 46, !dbg !15593
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !15593

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15593
  %pcidev2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 44, !dbg !15593
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pcidev2, align 8, !dbg !15593
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 12, !dbg !15593
  %5 = load i8, i8* %revision, align 8, !dbg !15593
  %conv3 = zext i8 %5 to i32, !dbg !15593
  %cmp4 = icmp sge i32 %conv3, 15, !dbg !15593
  br i1 %cmp4, label %land.lhs.true6, label %cond.false, !dbg !15593

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15593
  %pcidev7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 44, !dbg !15593
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pcidev7, align 8, !dbg !15593
  %revision8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 12, !dbg !15593
  %8 = load i8, i8* %revision8, align 8, !dbg !15593
  %conv9 = zext i8 %8 to i32, !dbg !15593
  %cmp10 = icmp sle i32 %conv9, 16, !dbg !15593
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !15595

cond.true:                                        ; preds = %land.lhs.true6
  br i1 true, label %land.lhs.true12, label %if.end, !dbg !15593

cond.false:                                       ; preds = %land.lhs.true6, %land.lhs.true, %entry
  br i1 false, label %land.lhs.true12, label %if.end, !dbg !15595

land.lhs.true12:                                  ; preds = %cond.false, %cond.true
  %9 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15596
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %9, i32 0, i32 5, !dbg !15597
  %cmd = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 0, !dbg !15598
  %flashfw = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FLASHFW_CMD*, !dbg !15599
  %type = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw, i32 0, i32 2, !dbg !15600
  %10 = load i8, i8* %type, align 2, !dbg !15600
  %conv13 = zext i8 %10 to i32, !dbg !15596
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !15601
  br i1 %cmp14, label %if.then, label %if.end, !dbg !15602

if.then:                                          ; preds = %land.lhs.true12
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15603
  %12 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15606
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15607
  %call = call i32 @ips_usrcmd(%struct.ips_ha* %11, %struct.ips_passthru_t* %12, %struct.ips_scb* %13) #11, !dbg !15608
  %tobool = icmp ne i32 %call, 0, !dbg !15608
  br i1 %tobool, label %if.then16, label %if.else, !dbg !15609

if.then16:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !15610
  br label %return, !dbg !15610

if.else:                                          ; preds = %if.then
  store i32 4, i32* %retval, align 4, !dbg !15611
  br label %return, !dbg !15611

if.end:                                           ; preds = %land.lhs.true12, %cond.false, %cond.true
  %14 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15612
  %BasicStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %14, i32 0, i32 7, !dbg !15613
  store i8 11, i8* %BasicStatus, align 4, !dbg !15614
  %15 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15615
  %ExtendedStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %15, i32 0, i32 8, !dbg !15616
  store i8 0, i8* %ExtendedStatus, align 1, !dbg !15617
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15618
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 18, !dbg !15619
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !15619
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 24, !dbg !15620
  store i32 0, i32* %result, align 8, !dbg !15621
  %18 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15622
  %CoppCP17 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %18, i32 0, i32 5, !dbg !15624
  %cmd18 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP17, i32 0, i32 0, !dbg !15625
  %flashfw19 = bitcast %union.IPS_HOST_COMMAND* %cmd18 to %struct.IPS_FLASHFW_CMD*, !dbg !15626
  %type20 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw19, i32 0, i32 2, !dbg !15627
  %19 = load i8, i8* %type20, align 2, !dbg !15627
  %conv21 = zext i8 %19 to i32, !dbg !15622
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !15628
  br i1 %cmp22, label %land.lhs.true24, label %if.else34, !dbg !15629

land.lhs.true24:                                  ; preds = %if.end
  %20 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15630
  %CoppCP25 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %20, i32 0, i32 5, !dbg !15631
  %cmd26 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP25, i32 0, i32 0, !dbg !15632
  %flashfw27 = bitcast %union.IPS_HOST_COMMAND* %cmd26 to %struct.IPS_FLASHFW_CMD*, !dbg !15633
  %direction = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw27, i32 0, i32 3, !dbg !15634
  %21 = load i8, i8* %direction, align 1, !dbg !15634
  %conv28 = zext i8 %21 to i32, !dbg !15630
  %cmp29 = icmp eq i32 %conv28, 3, !dbg !15635
  br i1 %cmp29, label %if.then31, label %if.else34, !dbg !15636

if.then31:                                        ; preds = %land.lhs.true24
  %22 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15637
  %BasicStatus32 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %22, i32 0, i32 7, !dbg !15639
  store i8 0, i8* %BasicStatus32, align 4, !dbg !15640
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15641
  %24 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15642
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15643
  %call33 = call i32 @ips_flash_bios(%struct.ips_ha* %23, %struct.ips_passthru_t* %24, %struct.ips_scb* %25) #11, !dbg !15644
  store i32 %call33, i32* %retval, align 4, !dbg !15645
  br label %return, !dbg !15645

if.else34:                                        ; preds = %land.lhs.true24, %if.end
  %26 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15646
  %CoppCP35 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %26, i32 0, i32 5, !dbg !15648
  %cmd36 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP35, i32 0, i32 0, !dbg !15649
  %flashfw37 = bitcast %union.IPS_HOST_COMMAND* %cmd36 to %struct.IPS_FLASHFW_CMD*, !dbg !15650
  %packet_num = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw37, i32 0, i32 7, !dbg !15651
  %27 = load i8, i8* %packet_num, align 1, !dbg !15651
  %conv38 = zext i8 %27 to i32, !dbg !15646
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !15652
  br i1 %cmp39, label %if.then41, label %if.else72, !dbg !15653

if.then41:                                        ; preds = %if.else34
  %28 = load i8*, i8** @ips_FlashData, align 8, !dbg !15654
  %tobool42 = icmp ne i8* %28, null, !dbg !15654
  br i1 %tobool42, label %land.lhs.true43, label %if.else46, !dbg !15657

land.lhs.true43:                                  ; preds = %if.then41
  %call44 = call zeroext i1 @test_and_set_bit(i64 0, i64* @ips_FlashDataInUse) #11, !dbg !15658
  br i1 %call44, label %if.else46, label %if.then45, !dbg !15659

if.then45:                                        ; preds = %land.lhs.true43
  %29 = load i8*, i8** @ips_FlashData, align 8, !dbg !15660
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15662
  %flash_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 45, !dbg !15663
  store i8* %29, i8** %flash_data, align 8, !dbg !15664
  %31 = load i64, i64* @ips_flashbusaddr, align 8, !dbg !15665
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15666
  %flash_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 48, !dbg !15667
  store i64 %31, i64* %flash_busaddr, align 8, !dbg !15668
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15669
  %flash_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 46, !dbg !15670
  store i32 524288, i32* %flash_len, align 8, !dbg !15671
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15672
  %flash_datasize = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %34, i32 0, i32 47, !dbg !15673
  store i32 0, i32* %flash_datasize, align 4, !dbg !15674
  br label %if.end71, !dbg !15675

if.else46:                                        ; preds = %land.lhs.true43, %if.then41
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15676
  %flash_data47 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 45, !dbg !15678
  %36 = load i8*, i8** %flash_data47, align 8, !dbg !15678
  %tobool48 = icmp ne i8* %36, null, !dbg !15676
  br i1 %tobool48, label %if.else69, label %if.then49, !dbg !15679

if.then49:                                        ; preds = %if.else46
  %37 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15680
  %CoppCP50 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %37, i32 0, i32 5, !dbg !15682
  %cmd51 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP50, i32 0, i32 0, !dbg !15683
  %flashfw52 = bitcast %union.IPS_HOST_COMMAND* %cmd51 to %struct.IPS_FLASHFW_CMD*, !dbg !15684
  %total_packets = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw52, i32 0, i32 6, !dbg !15685
  %38 = load i8, i8* %total_packets, align 4, !dbg !15685
  %conv53 = zext i8 %38 to i32, !dbg !15680
  %39 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15686
  %CoppCP54 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %39, i32 0, i32 5, !dbg !15687
  %cmd55 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP54, i32 0, i32 0, !dbg !15688
  %flashfw56 = bitcast %union.IPS_HOST_COMMAND* %cmd55 to %struct.IPS_FLASHFW_CMD*, !dbg !15689
  %count = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw56, i32 0, i32 4, !dbg !15690
  %40 = load i32, i32* %count, align 4, !dbg !15690
  %mul = mul i32 %conv53, %40, !dbg !15691
  store i32 %mul, i32* %datasize, align 4, !dbg !15692
  %41 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15693
  %pcidev57 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %41, i32 0, i32 44, !dbg !15694
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pcidev57, align 8, !dbg !15694
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !15695
  %43 = load i32, i32* %datasize, align 4, !dbg !15696
  %conv58 = sext i32 %43 to i64, !dbg !15696
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15697
  %flash_busaddr59 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 48, !dbg !15698
  %call60 = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv58, i64* %flash_busaddr59, i32 3264) #11, !dbg !15699
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15700
  %flash_data61 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 45, !dbg !15701
  store i8* %call60, i8** %flash_data61, align 8, !dbg !15702
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15703
  %flash_data62 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 45, !dbg !15705
  %47 = load i8*, i8** %flash_data62, align 8, !dbg !15705
  %tobool63 = icmp ne i8* %47, null, !dbg !15703
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !15706

if.then64:                                        ; preds = %if.then49
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !15707
  store i32 4, i32* %retval, align 4, !dbg !15709
  br label %return, !dbg !15709

if.end66:                                         ; preds = %if.then49
  %48 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15710
  %flash_datasize67 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %48, i32 0, i32 47, !dbg !15711
  store i32 0, i32* %flash_datasize67, align 4, !dbg !15712
  %49 = load i32, i32* %datasize, align 4, !dbg !15713
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15714
  %flash_len68 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 46, !dbg !15715
  store i32 %49, i32* %flash_len68, align 8, !dbg !15716
  br label %if.end70, !dbg !15717

if.else69:                                        ; preds = %if.else46
  store i32 4, i32* %retval, align 4, !dbg !15718
  br label %return, !dbg !15718

if.end70:                                         ; preds = %if.end66
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then45
  br label %if.end85, !dbg !15719

if.else72:                                        ; preds = %if.else34
  %51 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15720
  %CoppCP73 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %51, i32 0, i32 5, !dbg !15723
  %cmd74 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP73, i32 0, i32 0, !dbg !15724
  %flashfw75 = bitcast %union.IPS_HOST_COMMAND* %cmd74 to %struct.IPS_FLASHFW_CMD*, !dbg !15725
  %count76 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw75, i32 0, i32 4, !dbg !15726
  %52 = load i32, i32* %count76, align 4, !dbg !15726
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15727
  %flash_datasize77 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 47, !dbg !15728
  %54 = load i32, i32* %flash_datasize77, align 4, !dbg !15728
  %add = add i32 %52, %54, !dbg !15729
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15730
  %flash_len78 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 46, !dbg !15731
  %56 = load i32, i32* %flash_len78, align 8, !dbg !15731
  %cmp79 = icmp ugt i32 %add, %56, !dbg !15732
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !15733

if.then81:                                        ; preds = %if.else72
  %57 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15734
  call void @ips_free_flash_copperhead(%struct.ips_ha* %57) #11, !dbg !15736
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15737
  %pcidev82 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 44, !dbg !15737
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pcidev82, align 8, !dbg !15737
  %dev83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 41, !dbg !15737
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev83, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0)) #12, !dbg !15737
  store i32 4, i32* %retval, align 4, !dbg !15738
  br label %return, !dbg !15738

if.end84:                                         ; preds = %if.else72
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end71
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15739
  %flash_data87 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %60, i32 0, i32 45, !dbg !15741
  %61 = load i8*, i8** %flash_data87, align 8, !dbg !15741
  %tobool88 = icmp ne i8* %61, null, !dbg !15739
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !15742

if.then89:                                        ; preds = %if.end86
  store i32 4, i32* %retval, align 4, !dbg !15743
  br label %return, !dbg !15743

if.end90:                                         ; preds = %if.end86
  %62 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15744
  %BasicStatus91 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %62, i32 0, i32 7, !dbg !15745
  store i8 0, i8* %BasicStatus91, align 4, !dbg !15746
  %63 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15747
  %flash_data92 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %63, i32 0, i32 45, !dbg !15748
  %64 = load i8*, i8** %flash_data92, align 8, !dbg !15748
  %65 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15749
  %flash_datasize93 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %65, i32 0, i32 47, !dbg !15750
  %66 = load i32, i32* %flash_datasize93, align 4, !dbg !15750
  %idxprom = zext i32 %66 to i64, !dbg !15747
  %arrayidx = getelementptr i8, i8* %64, i64 %idxprom, !dbg !15747
  %67 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15751
  %add.ptr = getelementptr %struct.ips_passthru_t, %struct.ips_passthru_t* %67, i64 1, !dbg !15752
  %68 = bitcast %struct.ips_passthru_t* %add.ptr to i8*, !dbg !15753
  %69 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15754
  %CoppCP94 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %69, i32 0, i32 5, !dbg !15755
  %cmd95 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP94, i32 0, i32 0, !dbg !15756
  %flashfw96 = bitcast %union.IPS_HOST_COMMAND* %cmd95 to %struct.IPS_FLASHFW_CMD*, !dbg !15757
  %count97 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw96, i32 0, i32 4, !dbg !15758
  %70 = load i32, i32* %count97, align 4, !dbg !15758
  %conv98 = zext i32 %70 to i64, !dbg !15754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 8 %68, i64 %conv98, i1 false), !dbg !15753
  %71 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15759
  %CoppCP99 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %71, i32 0, i32 5, !dbg !15760
  %cmd100 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP99, i32 0, i32 0, !dbg !15761
  %flashfw101 = bitcast %union.IPS_HOST_COMMAND* %cmd100 to %struct.IPS_FLASHFW_CMD*, !dbg !15762
  %count102 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw101, i32 0, i32 4, !dbg !15763
  %72 = load i32, i32* %count102, align 4, !dbg !15763
  %73 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15764
  %flash_datasize103 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %73, i32 0, i32 47, !dbg !15765
  %74 = load i32, i32* %flash_datasize103, align 4, !dbg !15766
  %add104 = add i32 %74, %72, !dbg !15766
  store i32 %add104, i32* %flash_datasize103, align 4, !dbg !15766
  %75 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15767
  %CoppCP105 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %75, i32 0, i32 5, !dbg !15769
  %cmd106 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP105, i32 0, i32 0, !dbg !15770
  %flashfw107 = bitcast %union.IPS_HOST_COMMAND* %cmd106 to %struct.IPS_FLASHFW_CMD*, !dbg !15771
  %packet_num108 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw107, i32 0, i32 7, !dbg !15772
  %76 = load i8, i8* %packet_num108, align 1, !dbg !15772
  %conv109 = zext i8 %76 to i32, !dbg !15767
  %77 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15773
  %CoppCP110 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %77, i32 0, i32 5, !dbg !15774
  %cmd111 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP110, i32 0, i32 0, !dbg !15775
  %flashfw112 = bitcast %union.IPS_HOST_COMMAND* %cmd111 to %struct.IPS_FLASHFW_CMD*, !dbg !15776
  %total_packets113 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw112, i32 0, i32 6, !dbg !15777
  %78 = load i8, i8* %total_packets113, align 4, !dbg !15777
  %conv114 = zext i8 %78 to i32, !dbg !15773
  %sub = sub i32 %conv114, 1, !dbg !15778
  %cmp115 = icmp eq i32 %conv109, %sub, !dbg !15779
  br i1 %cmp115, label %if.then117, label %if.end139, !dbg !15780

if.then117:                                       ; preds = %if.end90
  %79 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15781
  %CoppCP118 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %79, i32 0, i32 5, !dbg !15784
  %cmd119 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP118, i32 0, i32 0, !dbg !15785
  %flashfw120 = bitcast %union.IPS_HOST_COMMAND* %cmd119 to %struct.IPS_FLASHFW_CMD*, !dbg !15786
  %type121 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw120, i32 0, i32 2, !dbg !15787
  %80 = load i8, i8* %type121, align 2, !dbg !15787
  %conv122 = zext i8 %80 to i32, !dbg !15781
  %cmp123 = icmp eq i32 %conv122, 1, !dbg !15788
  br i1 %cmp123, label %if.then125, label %if.else127, !dbg !15789

if.then125:                                       ; preds = %if.then117
  %81 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15790
  %82 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15791
  %83 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15792
  %call126 = call i32 @ips_flash_bios(%struct.ips_ha* %81, %struct.ips_passthru_t* %82, %struct.ips_scb* %83) #11, !dbg !15793
  store i32 %call126, i32* %retval, align 4, !dbg !15794
  br label %return, !dbg !15794

if.else127:                                       ; preds = %if.then117
  %84 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15795
  %CoppCP128 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %84, i32 0, i32 5, !dbg !15797
  %cmd129 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP128, i32 0, i32 0, !dbg !15798
  %flashfw130 = bitcast %union.IPS_HOST_COMMAND* %cmd129 to %struct.IPS_FLASHFW_CMD*, !dbg !15799
  %type131 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw130, i32 0, i32 2, !dbg !15800
  %85 = load i8, i8* %type131, align 2, !dbg !15800
  %conv132 = zext i8 %85 to i32, !dbg !15795
  %cmp133 = icmp eq i32 %conv132, 0, !dbg !15801
  br i1 %cmp133, label %if.then135, label %if.end137, !dbg !15802

if.then135:                                       ; preds = %if.else127
  %86 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15803
  %87 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15804
  %88 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15805
  %call136 = call i32 @ips_flash_firmware(%struct.ips_ha* %86, %struct.ips_passthru_t* %87, %struct.ips_scb* %88) #11, !dbg !15806
  store i32 %call136, i32* %retval, align 4, !dbg !15807
  br label %return, !dbg !15807

if.end137:                                        ; preds = %if.else127
  br label %if.end138

if.end138:                                        ; preds = %if.end137
  br label %if.end139, !dbg !15808

if.end139:                                        ; preds = %if.end138, %if.end90
  store i32 2, i32* %retval, align 4, !dbg !15809
  br label %return, !dbg !15809

return:                                           ; preds = %if.end139, %if.then135, %if.then125, %if.then89, %if.then81, %if.else69, %if.then64, %if.then31, %if.else, %if.then16
  %89 = load i32, i32* %retval, align 4, !dbg !15810
  ret i32 %89, !dbg !15810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_usrcmd(%struct.ips_ha* %ha, %struct.ips_passthru_t* %pt, %struct.ips_scb* %scb) #0 !dbg !15811 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %pt.addr = alloca %struct.ips_passthru_t*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %sg_list = alloca %union.IPS_SG_LIST, align 8
  %cmd_busaddr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !15812, metadata !DIExpression()), !dbg !15813
  store %struct.ips_passthru_t* %pt, %struct.ips_passthru_t** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt.addr, metadata !15814, metadata !DIExpression()), !dbg !15815
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !15816, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.declare(metadata %union.IPS_SG_LIST* %sg_list, metadata !15818, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.declare(metadata i32* %cmd_busaddr, metadata !15820, metadata !DIExpression()), !dbg !15821
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15822
  %tobool = icmp ne %struct.ips_scb* %0, null, !dbg !15822
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15824

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15825
  %tobool1 = icmp ne %struct.ips_passthru_t* %1, null, !dbg !15825
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !15826

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15827
  %tobool3 = icmp ne %struct.ips_ha* %2, null, !dbg !15827
  br i1 %tobool3, label %if.end, label %if.then, !dbg !15828

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !15829
  br label %return, !dbg !15829

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15830
  %sg_list4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 17, !dbg !15831
  %list = bitcast %union.IPS_SG_LIST* %sg_list4 to i8**, !dbg !15832
  %4 = load i8*, i8** %list, align 8, !dbg !15832
  %list5 = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !15833
  store i8* %4, i8** %list5, align 8, !dbg !15834
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15835
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %5, i32 0, i32 6, !dbg !15836
  %6 = load i32, i32* %scb_busaddr, align 4, !dbg !15836
  store i32 %6, i32* %cmd_busaddr, align 4, !dbg !15837
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15838
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 0, !dbg !15839
  %8 = bitcast %union.IPS_HOST_COMMAND* %cmd to i8*, !dbg !15840
  %9 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15841
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %9, i32 0, i32 5, !dbg !15842
  %cmd6 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 0, !dbg !15843
  %10 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to i8*, !dbg !15840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %10, i64 16, i1 false), !dbg !15840
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15844
  %dcdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 1, !dbg !15845
  %12 = bitcast %struct.IPS_DCDB_TABLE* %dcdb to i8*, !dbg !15846
  %13 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15847
  %CoppCP7 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %13, i32 0, i32 5, !dbg !15848
  %dcdb8 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP7, i32 0, i32 1, !dbg !15849
  %14 = bitcast %struct.IPS_DCDB_TABLE* %dcdb8 to i8*, !dbg !15846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %14, i64 92, i1 false), !dbg !15846
  %list9 = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !15850
  %15 = load i8*, i8** %list9, align 8, !dbg !15850
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15851
  %sg_list10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 17, !dbg !15852
  %list11 = bitcast %union.IPS_SG_LIST* %sg_list10 to i8**, !dbg !15853
  store i8* %15, i8** %list11, align 8, !dbg !15854
  %17 = load i32, i32* %cmd_busaddr, align 4, !dbg !15855
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15856
  %scb_busaddr12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 6, !dbg !15857
  store i32 %17, i32* %scb_busaddr12, align 4, !dbg !15858
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15859
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 18, !dbg !15860
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !15860
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 1, !dbg !15861
  %21 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !15861
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %21, i32 0, i32 17, !dbg !15862
  %22 = load i32, i32* %channel, align 4, !dbg !15862
  %conv = trunc i32 %22 to i8, !dbg !15859
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15863
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %23, i32 0, i32 3, !dbg !15864
  store i8 %conv, i8* %bus, align 1, !dbg !15865
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15866
  %scsi_cmd13 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 18, !dbg !15867
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd13, align 8, !dbg !15867
  %device14 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 1, !dbg !15868
  %26 = load %struct.scsi_device*, %struct.scsi_device** %device14, align 8, !dbg !15868
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 16, !dbg !15869
  %27 = load i32, i32* %id, align 8, !dbg !15869
  %conv15 = trunc i32 %27 to i8, !dbg !15866
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15870
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 2, !dbg !15871
  store i8 %conv15, i8* %target_id, align 4, !dbg !15872
  %29 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15873
  %scsi_cmd16 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %29, i32 0, i32 18, !dbg !15874
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd16, align 8, !dbg !15874
  %device17 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 1, !dbg !15875
  %31 = load %struct.scsi_device*, %struct.scsi_device** %device17, align 8, !dbg !15875
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %31, i32 0, i32 18, !dbg !15876
  %32 = load i64, i64* %lun, align 8, !dbg !15876
  %conv18 = trunc i64 %32 to i8, !dbg !15873
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15877
  %lun19 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %33, i32 0, i32 4, !dbg !15878
  store i8 %conv18, i8* %lun19, align 2, !dbg !15879
  %34 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15880
  %sg_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %34, i32 0, i32 14, !dbg !15881
  store i32 0, i32* %sg_len, align 8, !dbg !15882
  %35 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15883
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %35, i32 0, i32 13, !dbg !15884
  store i32 0, i32* %data_len, align 4, !dbg !15885
  %36 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15886
  %flags = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %36, i32 0, i32 15, !dbg !15887
  store i32 0, i32* %flags, align 4, !dbg !15888
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15889
  %op_code = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %37, i32 0, i32 16, !dbg !15890
  store i32 0, i32* %op_code, align 8, !dbg !15891
  %38 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15892
  %callback = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %38, i32 0, i32 20, !dbg !15893
  store void (%struct.ips_ha*, %struct.ips_scb*)* @ipsintr_done, void (%struct.ips_ha*, %struct.ips_scb*)** %callback, align 8, !dbg !15894
  %39 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !15895
  %40 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15896
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %40, i32 0, i32 8, !dbg !15897
  store i32 %39, i32* %timeout, align 4, !dbg !15898
  %41 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15899
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15899
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 12, !dbg !15899
  %43 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !15899
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %41 to i64, !dbg !15899
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %43 to i64, !dbg !15899
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15899
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !15899
  %conv20 = trunc i64 %sub.ptr.div to i32, !dbg !15899
  %conv21 = trunc i32 %conv20 to i8, !dbg !15899
  %44 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15900
  %cmd22 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %44, i32 0, i32 0, !dbg !15901
  %basic_io = bitcast %union.IPS_HOST_COMMAND* %cmd22 to %struct.IPS_IO_CMD*, !dbg !15902
  %command_id = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io, i32 0, i32 1, !dbg !15903
  store i8 %conv21, i8* %command_id, align 1, !dbg !15904
  %45 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15905
  %cmd23 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %45, i32 0, i32 0, !dbg !15907
  %basic_io24 = bitcast %union.IPS_HOST_COMMAND* %cmd23 to %struct.IPS_IO_CMD*, !dbg !15908
  %op_code25 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io24, i32 0, i32 0, !dbg !15909
  %46 = load i8, i8* %op_code25, align 8, !dbg !15909
  %conv26 = zext i8 %46 to i32, !dbg !15905
  %cmp = icmp eq i32 %conv26, 130, !dbg !15910
  br i1 %cmp, label %if.then42, label %lor.lhs.false28, !dbg !15911

lor.lhs.false28:                                  ; preds = %if.end
  %47 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15912
  %cmd29 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %47, i32 0, i32 0, !dbg !15913
  %basic_io30 = bitcast %union.IPS_HOST_COMMAND* %cmd29 to %struct.IPS_IO_CMD*, !dbg !15914
  %op_code31 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io30, i32 0, i32 0, !dbg !15915
  %48 = load i8, i8* %op_code31, align 8, !dbg !15915
  %conv32 = zext i8 %48 to i32, !dbg !15912
  %cmp33 = icmp eq i32 %conv32, 131, !dbg !15916
  br i1 %cmp33, label %if.then42, label %lor.lhs.false35, !dbg !15917

lor.lhs.false35:                                  ; preds = %lor.lhs.false28
  %49 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15918
  %cmd36 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %49, i32 0, i32 0, !dbg !15919
  %basic_io37 = bitcast %union.IPS_HOST_COMMAND* %cmd36 to %struct.IPS_IO_CMD*, !dbg !15920
  %op_code38 = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io37, i32 0, i32 0, !dbg !15921
  %50 = load i8, i8* %op_code38, align 8, !dbg !15921
  %conv39 = zext i8 %50 to i32, !dbg !15918
  %cmp40 = icmp eq i32 %conv39, 132, !dbg !15922
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !15923

if.then42:                                        ; preds = %lor.lhs.false35, %lor.lhs.false28, %if.end
  store i32 0, i32* %retval, align 4, !dbg !15924
  br label %return, !dbg !15924

if.end43:                                         ; preds = %lor.lhs.false35
  %51 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15925
  %CmdBSize = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %51, i32 0, i32 4, !dbg !15927
  %52 = load i32, i32* %CmdBSize, align 8, !dbg !15927
  %tobool44 = icmp ne i32 %52, 0, !dbg !15925
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !15928

if.then45:                                        ; preds = %if.end43
  %53 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15929
  %CmdBSize46 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %53, i32 0, i32 4, !dbg !15931
  %54 = load i32, i32* %CmdBSize46, align 8, !dbg !15931
  %55 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15932
  %data_len47 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %55, i32 0, i32 13, !dbg !15933
  store i32 %54, i32* %data_len47, align 4, !dbg !15934
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !15935
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 36, !dbg !15936
  %57 = load i64, i64* %ioctl_busaddr, align 8, !dbg !15936
  %add = add i64 %57, 240, !dbg !15937
  %58 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15938
  %data_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %58, i32 0, i32 23, !dbg !15939
  store i64 %add, i64* %data_busaddr, align 8, !dbg !15940
  br label %if.end49, !dbg !15941

if.else:                                          ; preds = %if.end43
  %59 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15942
  %data_busaddr48 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %59, i32 0, i32 23, !dbg !15944
  store i64 0, i64* %data_busaddr48, align 8, !dbg !15945
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then45
  %60 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15946
  %cmd50 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %60, i32 0, i32 0, !dbg !15948
  %dcdb51 = bitcast %union.IPS_HOST_COMMAND* %cmd50 to %struct.IPS_DCDB_CMD*, !dbg !15949
  %op_code52 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb51, i32 0, i32 0, !dbg !15950
  %61 = load i8, i8* %op_code52, align 8, !dbg !15950
  %conv53 = zext i8 %61 to i32, !dbg !15946
  %cmp54 = icmp eq i32 %conv53, 4, !dbg !15951
  br i1 %cmp54, label %if.then56, label %if.end64, !dbg !15952

if.then56:                                        ; preds = %if.end49
  %62 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15953
  %scb_busaddr57 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %62, i32 0, i32 6, !dbg !15953
  %63 = load i32, i32* %scb_busaddr57, align 4, !dbg !15953
  %conv58 = zext i32 %63 to i64, !dbg !15953
  %64 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15953
  %dcdb59 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %64, i32 0, i32 1, !dbg !15953
  %65 = ptrtoint %struct.IPS_DCDB_TABLE* %dcdb59 to i64, !dbg !15953
  %add60 = add i64 %conv58, %65, !dbg !15953
  %66 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15953
  %67 = ptrtoint %struct.ips_scb* %66 to i64, !dbg !15953
  %sub = sub i64 %add60, %67, !dbg !15953
  %conv61 = trunc i64 %sub to i32, !dbg !15953
  %68 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15954
  %cmd62 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %68, i32 0, i32 0, !dbg !15955
  %dcdb63 = bitcast %union.IPS_HOST_COMMAND* %cmd62 to %struct.IPS_DCDB_CMD*, !dbg !15956
  %dcdb_address = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb63, i32 0, i32 4, !dbg !15957
  store i32 %conv61, i32* %dcdb_address, align 8, !dbg !15958
  br label %if.end64, !dbg !15954

if.end64:                                         ; preds = %if.then56, %if.end49
  %69 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15959
  %CmdBSize65 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %69, i32 0, i32 4, !dbg !15961
  %70 = load i32, i32* %CmdBSize65, align 8, !dbg !15961
  %tobool66 = icmp ne i32 %70, 0, !dbg !15959
  br i1 %tobool66, label %if.then67, label %if.end84, !dbg !15962

if.then67:                                        ; preds = %if.end64
  %71 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15963
  %cmd68 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %71, i32 0, i32 0, !dbg !15966
  %dcdb69 = bitcast %union.IPS_HOST_COMMAND* %cmd68 to %struct.IPS_DCDB_CMD*, !dbg !15967
  %op_code70 = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb69, i32 0, i32 0, !dbg !15968
  %72 = load i8, i8* %op_code70, align 8, !dbg !15968
  %conv71 = zext i8 %72 to i32, !dbg !15963
  %cmp72 = icmp eq i32 %conv71, 4, !dbg !15969
  br i1 %cmp72, label %if.then74, label %if.else78, !dbg !15970

if.then74:                                        ; preds = %if.then67
  %73 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15971
  %data_busaddr75 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %73, i32 0, i32 23, !dbg !15971
  %74 = load i64, i64* %data_busaddr75, align 8, !dbg !15971
  %conv76 = trunc i64 %74 to i32, !dbg !15971
  %75 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15972
  %dcdb77 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %75, i32 0, i32 1, !dbg !15973
  %buffer_pointer = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb77, i32 0, i32 3, !dbg !15974
  store i32 %conv76, i32* %buffer_pointer, align 4, !dbg !15975
  br label %if.end83, !dbg !15972

if.else78:                                        ; preds = %if.then67
  %76 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15976
  %data_busaddr79 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %76, i32 0, i32 23, !dbg !15976
  %77 = load i64, i64* %data_busaddr79, align 8, !dbg !15976
  %conv80 = trunc i64 %77 to i32, !dbg !15976
  %78 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15977
  %cmd81 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %78, i32 0, i32 0, !dbg !15978
  %basic_io82 = bitcast %union.IPS_HOST_COMMAND* %cmd81 to %struct.IPS_IO_CMD*, !dbg !15979
  %sg_addr = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io82, i32 0, i32 5, !dbg !15980
  store i32 %conv80, i32* %sg_addr, align 8, !dbg !15981
  br label %if.end83

if.end83:                                         ; preds = %if.else78, %if.then74
  br label %if.end84, !dbg !15982

if.end84:                                         ; preds = %if.end83, %if.end64
  %79 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15983
  %TimeOut = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %79, i32 0, i32 6, !dbg !15985
  %80 = load i32, i32* %TimeOut, align 8, !dbg !15985
  %tobool85 = icmp ne i32 %80, 0, !dbg !15983
  br i1 %tobool85, label %if.then86, label %if.end114, !dbg !15986

if.then86:                                        ; preds = %if.end84
  %81 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15987
  %TimeOut87 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %81, i32 0, i32 6, !dbg !15989
  %82 = load i32, i32* %TimeOut87, align 8, !dbg !15989
  %83 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15990
  %timeout88 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %83, i32 0, i32 8, !dbg !15991
  store i32 %82, i32* %timeout88, align 4, !dbg !15992
  %84 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !15993
  %TimeOut89 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %84, i32 0, i32 6, !dbg !15995
  %85 = load i32, i32* %TimeOut89, align 8, !dbg !15995
  %cmp90 = icmp ule i32 %85, 10, !dbg !15996
  br i1 %cmp90, label %if.then92, label %if.else96, !dbg !15997

if.then92:                                        ; preds = %if.then86
  %86 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !15998
  %dcdb93 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %86, i32 0, i32 1, !dbg !15999
  %cmd_attribute = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb93, i32 0, i32 1, !dbg !16000
  %87 = load i8, i8* %cmd_attribute, align 1, !dbg !16001
  %conv94 = zext i8 %87 to i32, !dbg !16001
  %or = or i32 %conv94, 16, !dbg !16001
  %conv95 = trunc i32 %or to i8, !dbg !16001
  store i8 %conv95, i8* %cmd_attribute, align 1, !dbg !16001
  br label %if.end113, !dbg !15998

if.else96:                                        ; preds = %if.then86
  %88 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16002
  %TimeOut97 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %88, i32 0, i32 6, !dbg !16004
  %89 = load i32, i32* %TimeOut97, align 8, !dbg !16004
  %cmp98 = icmp ule i32 %89, 60, !dbg !16005
  br i1 %cmp98, label %if.then100, label %if.else106, !dbg !16006

if.then100:                                       ; preds = %if.else96
  %90 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16007
  %dcdb101 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %90, i32 0, i32 1, !dbg !16008
  %cmd_attribute102 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb101, i32 0, i32 1, !dbg !16009
  %91 = load i8, i8* %cmd_attribute102, align 1, !dbg !16010
  %conv103 = zext i8 %91 to i32, !dbg !16010
  %or104 = or i32 %conv103, 32, !dbg !16010
  %conv105 = trunc i32 %or104 to i8, !dbg !16010
  store i8 %conv105, i8* %cmd_attribute102, align 1, !dbg !16010
  br label %if.end112, !dbg !16007

if.else106:                                       ; preds = %if.else96
  %92 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16011
  %dcdb107 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %92, i32 0, i32 1, !dbg !16012
  %cmd_attribute108 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb107, i32 0, i32 1, !dbg !16013
  %93 = load i8, i8* %cmd_attribute108, align 1, !dbg !16014
  %conv109 = zext i8 %93 to i32, !dbg !16014
  %or110 = or i32 %conv109, 48, !dbg !16014
  %conv111 = trunc i32 %or110 to i8, !dbg !16014
  store i8 %conv111, i8* %cmd_attribute108, align 1, !dbg !16014
  br label %if.end112

if.end112:                                        ; preds = %if.else106, %if.then100
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then92
  br label %if.end114, !dbg !16015

if.end114:                                        ; preds = %if.end113, %if.end84
  %94 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16016
  %scsi_cmd115 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %94, i32 0, i32 18, !dbg !16017
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd115, align 8, !dbg !16017
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %95, i32 0, i32 24, !dbg !16018
  store i32 0, i32* %result, align 8, !dbg !16019
  store i32 1, i32* %retval, align 4, !dbg !16020
  br label %return, !dbg !16020

return:                                           ; preds = %if.end114, %if.then42, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !16021
  ret i32 %96, !dbg !16021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_flash_bios(%struct.ips_ha* %ha, %struct.ips_passthru_t* %pt, %struct.ips_scb* %scb) #0 !dbg !16022 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %pt.addr = alloca %struct.ips_passthru_t*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16023, metadata !DIExpression()), !dbg !16024
  store %struct.ips_passthru_t* %pt, %struct.ips_passthru_t** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt.addr, metadata !16025, metadata !DIExpression()), !dbg !16026
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !16027, metadata !DIExpression()), !dbg !16028
  %0 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16029
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %0, i32 0, i32 5, !dbg !16031
  %cmd = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 0, !dbg !16032
  %flashfw = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FLASHFW_CMD*, !dbg !16033
  %type = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw, i32 0, i32 2, !dbg !16034
  %1 = load i8, i8* %type, align 2, !dbg !16034
  %conv = zext i8 %1 to i32, !dbg !16029
  %cmp = icmp eq i32 %conv, 1, !dbg !16035
  br i1 %cmp, label %land.lhs.true, label %if.else36, !dbg !16036

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16037
  %CoppCP2 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %2, i32 0, i32 5, !dbg !16038
  %cmd3 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP2, i32 0, i32 0, !dbg !16039
  %flashfw4 = bitcast %union.IPS_HOST_COMMAND* %cmd3 to %struct.IPS_FLASHFW_CMD*, !dbg !16040
  %direction = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw4, i32 0, i32 3, !dbg !16041
  %3 = load i8, i8* %direction, align 1, !dbg !16041
  %conv5 = zext i8 %3 to i32, !dbg !16037
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !16042
  br i1 %cmp6, label %if.then, label %if.else36, !dbg !16043

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16044
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 43, !dbg !16047
  %programbios = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 6, !dbg !16048
  %5 = load i32 (%struct.ips_ha*, i8*, i32, i32)*, i32 (%struct.ips_ha*, i8*, i32, i32)** %programbios, align 8, !dbg !16048
  %tobool = icmp ne i32 (%struct.ips_ha*, i8*, i32, i32)* %5, null, !dbg !16044
  br i1 %tobool, label %lor.lhs.false, label %if.then13, !dbg !16049

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16050
  %func8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 43, !dbg !16051
  %erasebios = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func8, i32 0, i32 5, !dbg !16052
  %7 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %erasebios, align 8, !dbg !16052
  %tobool9 = icmp ne i32 (%struct.ips_ha*)* %7, null, !dbg !16050
  br i1 %tobool9, label %lor.lhs.false10, label %if.then13, !dbg !16053

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16054
  %func11 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 43, !dbg !16055
  %verifybios = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func11, i32 0, i32 7, !dbg !16056
  %9 = load i32 (%struct.ips_ha*, i8*, i32, i32)*, i32 (%struct.ips_ha*, i8*, i32, i32)** %verifybios, align 8, !dbg !16056
  %tobool12 = icmp ne i32 (%struct.ips_ha*, i8*, i32, i32)* %9, null, !dbg !16054
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !16057

if.then13:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %if.then
  br label %error, !dbg !16058

if.end:                                           ; preds = %lor.lhs.false10
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16059
  %func14 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 43, !dbg !16061
  %erasebios15 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func14, i32 0, i32 5, !dbg !16062
  %11 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %erasebios15, align 8, !dbg !16062
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16063
  %call = call i32 %11(%struct.ips_ha* %12) #11, !dbg !16064
  %tobool16 = icmp ne i32 %call, 0, !dbg !16064
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !16065

if.then17:                                        ; preds = %if.end
  br label %error, !dbg !16066

if.else:                                          ; preds = %if.end
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16068
  %func18 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 43, !dbg !16070
  %programbios19 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func18, i32 0, i32 6, !dbg !16071
  %14 = load i32 (%struct.ips_ha*, i8*, i32, i32)*, i32 (%struct.ips_ha*, i8*, i32, i32)** %programbios19, align 8, !dbg !16071
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16072
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16073
  %flash_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 45, !dbg !16074
  %17 = load i8*, i8** %flash_data, align 8, !dbg !16074
  %add.ptr = getelementptr i8, i8* %17, i64 192, !dbg !16075
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16076
  %flash_datasize = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 47, !dbg !16077
  %19 = load i32, i32* %flash_datasize, align 4, !dbg !16077
  %sub = sub i32 %19, 192, !dbg !16078
  %call20 = call i32 %14(%struct.ips_ha* %15, i8* %add.ptr, i32 %sub, i32 0) #11, !dbg !16079
  %tobool21 = icmp ne i32 %call20, 0, !dbg !16079
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !16080

if.then22:                                        ; preds = %if.else
  br label %error, !dbg !16081

if.else23:                                        ; preds = %if.else
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16083
  %func24 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 43, !dbg !16085
  %verifybios25 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func24, i32 0, i32 7, !dbg !16086
  %21 = load i32 (%struct.ips_ha*, i8*, i32, i32)*, i32 (%struct.ips_ha*, i8*, i32, i32)** %verifybios25, align 8, !dbg !16086
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16087
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16088
  %flash_data26 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 45, !dbg !16089
  %24 = load i8*, i8** %flash_data26, align 8, !dbg !16089
  %add.ptr27 = getelementptr i8, i8* %24, i64 192, !dbg !16090
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16091
  %flash_datasize28 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 47, !dbg !16092
  %26 = load i32, i32* %flash_datasize28, align 4, !dbg !16092
  %sub29 = sub i32 %26, 192, !dbg !16093
  %call30 = call i32 %21(%struct.ips_ha* %22, i8* %add.ptr27, i32 %sub29, i32 0) #11, !dbg !16094
  %tobool31 = icmp ne i32 %call30, 0, !dbg !16094
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !16095

if.then32:                                        ; preds = %if.else23
  br label %error, !dbg !16096

if.end33:                                         ; preds = %if.else23
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16098
  call void @ips_free_flash_copperhead(%struct.ips_ha* %27) #11, !dbg !16099
  store i32 2, i32* %retval, align 4, !dbg !16100
  br label %return, !dbg !16100

if.else36:                                        ; preds = %land.lhs.true, %entry
  %28 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16101
  %CoppCP37 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %28, i32 0, i32 5, !dbg !16103
  %cmd38 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP37, i32 0, i32 0, !dbg !16104
  %flashfw39 = bitcast %union.IPS_HOST_COMMAND* %cmd38 to %struct.IPS_FLASHFW_CMD*, !dbg !16105
  %type40 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw39, i32 0, i32 2, !dbg !16106
  %29 = load i8, i8* %type40, align 2, !dbg !16106
  %conv41 = zext i8 %29 to i32, !dbg !16101
  %cmp42 = icmp eq i32 %conv41, 1, !dbg !16107
  br i1 %cmp42, label %land.lhs.true44, label %if.end64, !dbg !16108

land.lhs.true44:                                  ; preds = %if.else36
  %30 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16109
  %CoppCP45 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %30, i32 0, i32 5, !dbg !16110
  %cmd46 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP45, i32 0, i32 0, !dbg !16111
  %flashfw47 = bitcast %union.IPS_HOST_COMMAND* %cmd46 to %struct.IPS_FLASHFW_CMD*, !dbg !16112
  %direction48 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw47, i32 0, i32 3, !dbg !16113
  %31 = load i8, i8* %direction48, align 1, !dbg !16113
  %conv49 = zext i8 %31 to i32, !dbg !16109
  %cmp50 = icmp eq i32 %conv49, 3, !dbg !16114
  br i1 %cmp50, label %if.then52, label %if.end64, !dbg !16115

if.then52:                                        ; preds = %land.lhs.true44
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16116
  %func53 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 43, !dbg !16119
  %erasebios54 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func53, i32 0, i32 5, !dbg !16120
  %33 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %erasebios54, align 8, !dbg !16120
  %tobool55 = icmp ne i32 (%struct.ips_ha*)* %33, null, !dbg !16116
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !16121

if.then56:                                        ; preds = %if.then52
  br label %error, !dbg !16122

if.end57:                                         ; preds = %if.then52
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16123
  %func58 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %34, i32 0, i32 43, !dbg !16125
  %erasebios59 = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func58, i32 0, i32 5, !dbg !16126
  %35 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %erasebios59, align 8, !dbg !16126
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16127
  %call60 = call i32 %35(%struct.ips_ha* %36) #11, !dbg !16128
  %tobool61 = icmp ne i32 %call60, 0, !dbg !16128
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !16129

if.then62:                                        ; preds = %if.end57
  br label %error, !dbg !16130

if.end63:                                         ; preds = %if.end57
  store i32 2, i32* %retval, align 4, !dbg !16132
  br label %return, !dbg !16132

if.end64:                                         ; preds = %land.lhs.true44, %if.else36
  br label %if.end65

if.end65:                                         ; preds = %if.end64
  br label %error, !dbg !16133

error:                                            ; preds = %if.end65, %if.then62, %if.then56, %if.then32, %if.then22, %if.then17, %if.then13
  call void @llvm.dbg.label(metadata !16134), !dbg !16135
  %37 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16136
  %BasicStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %37, i32 0, i32 7, !dbg !16137
  store i8 11, i8* %BasicStatus, align 4, !dbg !16138
  %38 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16139
  %ExtendedStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %38, i32 0, i32 8, !dbg !16140
  store i8 0, i8* %ExtendedStatus, align 1, !dbg !16141
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16142
  call void @ips_free_flash_copperhead(%struct.ips_ha* %39) #11, !dbg !16143
  store i32 4, i32* %retval, align 4, !dbg !16144
  br label %return, !dbg !16144

return:                                           ; preds = %error, %if.end63, %if.end35
  %40 = load i32, i32* %retval, align 4, !dbg !16145
  ret i32 %40, !dbg !16145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !16146 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16152, metadata !DIExpression()), !dbg !16154
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16156, metadata !DIExpression()), !dbg !16157
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !16158, metadata !DIExpression()), !dbg !16160
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !16161, metadata !DIExpression()), !dbg !16166
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16168, metadata !DIExpression()), !dbg !16169
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16170, metadata !DIExpression()), !dbg !16171
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16172, metadata !DIExpression()), !dbg !16173
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16174
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16175
  %div = sdiv i64 %1, 64, !dbg !16175
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16176
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16174
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16177
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16178
  %conv.i = trunc i64 %4 to i32, !dbg !16178
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !16179
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16180
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16180
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !16180
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16181
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !16182
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !16160
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !16160
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !16160, !srcloc !16183
  store i8 %11, i8* %c.i, align 1, !dbg !16160
  %12 = load i8, i8* %c.i, align 1, !dbg !16160
  %tobool.i = trunc i8 %12 to i1, !dbg !16160
  %frombool.i = zext i1 %tobool.i to i8, !dbg !16160
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !16160
  %13 = load i8, i8* %tmp.i, align 1, !dbg !16160
  %tobool1.i = trunc i8 %13 to i1, !dbg !16160
  ret i1 %tobool1.i, !dbg !16184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_free_flash_copperhead(%struct.ips_ha* %ha) #0 !dbg !16185 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16186, metadata !DIExpression()), !dbg !16187
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16188
  %flash_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 45, !dbg !16190
  %1 = load i8*, i8** %flash_data, align 8, !dbg !16190
  %2 = load i8*, i8** @ips_FlashData, align 8, !dbg !16191
  %cmp = icmp eq i8* %1, %2, !dbg !16192
  br i1 %cmp, label %if.then, label %if.else, !dbg !16193

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @test_and_clear_bit(i64 0, i64* @ips_FlashDataInUse) #11, !dbg !16194
  br label %if.end4, !dbg !16194

if.else:                                          ; preds = %entry
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16195
  %flash_data1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 45, !dbg !16197
  %4 = load i8*, i8** %flash_data1, align 8, !dbg !16197
  %tobool = icmp ne i8* %4, null, !dbg !16195
  br i1 %tobool, label %if.then2, label %if.end, !dbg !16198

if.then2:                                         ; preds = %if.else
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16199
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 44, !dbg !16200
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !16200
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !16201
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16202
  %flash_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 46, !dbg !16203
  %8 = load i32, i32* %flash_len, align 8, !dbg !16203
  %conv = sext i32 %8 to i64, !dbg !16202
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16204
  %flash_data3 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 45, !dbg !16205
  %10 = load i8*, i8** %flash_data3, align 8, !dbg !16205
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16206
  %flash_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 48, !dbg !16207
  %12 = load i64, i64* %flash_busaddr, align 8, !dbg !16207
  call void @dma_free_coherent(%struct.device* %dev, i64 %conv, i8* %10, i64 %12) #11, !dbg !16208
  br label %if.end, !dbg !16208

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16209
  %flash_data5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 45, !dbg !16210
  store i8* null, i8** %flash_data5, align 8, !dbg !16211
  ret void, !dbg !16212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_flash_firmware(%struct.ips_ha* %ha, %struct.ips_passthru_t* %pt, %struct.ips_scb* %scb) #0 !dbg !16213 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %pt.addr = alloca %struct.ips_passthru_t*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %sg_list = alloca %union.IPS_SG_LIST, align 8
  %cmd_busaddr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16214, metadata !DIExpression()), !dbg !16215
  store %struct.ips_passthru_t* %pt, %struct.ips_passthru_t** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt.addr, metadata !16216, metadata !DIExpression()), !dbg !16217
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !16218, metadata !DIExpression()), !dbg !16219
  call void @llvm.dbg.declare(metadata %union.IPS_SG_LIST* %sg_list, metadata !16220, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.declare(metadata i32* %cmd_busaddr, metadata !16222, metadata !DIExpression()), !dbg !16223
  %0 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16224
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %0, i32 0, i32 5, !dbg !16226
  %cmd = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 0, !dbg !16227
  %flashfw = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FLASHFW_CMD*, !dbg !16228
  %type = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw, i32 0, i32 2, !dbg !16229
  %1 = load i8, i8* %type, align 2, !dbg !16229
  %conv = zext i8 %1 to i32, !dbg !16224
  %cmp = icmp eq i32 %conv, 0, !dbg !16230
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !16231

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16232
  %CoppCP2 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %2, i32 0, i32 5, !dbg !16233
  %cmd3 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP2, i32 0, i32 0, !dbg !16234
  %flashfw4 = bitcast %union.IPS_HOST_COMMAND* %cmd3 to %struct.IPS_FLASHFW_CMD*, !dbg !16235
  %direction = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw4, i32 0, i32 3, !dbg !16236
  %3 = load i8, i8* %direction, align 1, !dbg !16236
  %conv5 = zext i8 %3 to i32, !dbg !16232
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !16237
  br i1 %cmp6, label %if.then, label %if.else, !dbg !16238

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16239
  %CoppCP8 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %4, i32 0, i32 5, !dbg !16241
  %cmd9 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP8, i32 0, i32 0, !dbg !16242
  %5 = bitcast %union.IPS_HOST_COMMAND* %cmd9 to i8*, !dbg !16243
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false), !dbg !16243
  %6 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16244
  %CoppCP10 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %6, i32 0, i32 5, !dbg !16245
  %cmd11 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP10, i32 0, i32 0, !dbg !16246
  %flashfw12 = bitcast %union.IPS_HOST_COMMAND* %cmd11 to %struct.IPS_FLASHFW_CMD*, !dbg !16247
  %op_code = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw12, i32 0, i32 0, !dbg !16248
  store i8 32, i8* %op_code, align 8, !dbg !16249
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16250
  %flash_datasize = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 47, !dbg !16250
  %8 = load i32, i32* %flash_datasize, align 4, !dbg !16250
  %9 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16251
  %CoppCP13 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %9, i32 0, i32 5, !dbg !16252
  %cmd14 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP13, i32 0, i32 0, !dbg !16253
  %flashfw15 = bitcast %union.IPS_HOST_COMMAND* %cmd14 to %struct.IPS_FLASHFW_CMD*, !dbg !16254
  %count = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw15, i32 0, i32 4, !dbg !16255
  store i32 %8, i32* %count, align 4, !dbg !16256
  br label %if.end, !dbg !16257

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16258
  %BasicStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %10, i32 0, i32 7, !dbg !16260
  store i8 11, i8* %BasicStatus, align 4, !dbg !16261
  %11 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16262
  %ExtendedStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %11, i32 0, i32 8, !dbg !16263
  store i8 0, i8* %ExtendedStatus, align 1, !dbg !16264
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16265
  call void @ips_free_flash_copperhead(%struct.ips_ha* %12) #11, !dbg !16266
  store i32 4, i32* %retval, align 4, !dbg !16267
  br label %return, !dbg !16267

if.end:                                           ; preds = %if.then
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16268
  %sg_list16 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 17, !dbg !16269
  %list = bitcast %union.IPS_SG_LIST* %sg_list16 to i8**, !dbg !16270
  %14 = load i8*, i8** %list, align 8, !dbg !16270
  %list17 = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !16271
  store i8* %14, i8** %list17, align 8, !dbg !16272
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16273
  %scb_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 6, !dbg !16274
  %16 = load i32, i32* %scb_busaddr, align 4, !dbg !16274
  store i32 %16, i32* %cmd_busaddr, align 4, !dbg !16275
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16276
  %cmd18 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !16277
  %18 = bitcast %union.IPS_HOST_COMMAND* %cmd18 to i8*, !dbg !16278
  %19 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16279
  %CoppCP19 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %19, i32 0, i32 5, !dbg !16280
  %cmd20 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP19, i32 0, i32 0, !dbg !16281
  %20 = bitcast %union.IPS_HOST_COMMAND* %cmd20 to i8*, !dbg !16278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 16, i1 false), !dbg !16278
  %list21 = bitcast %union.IPS_SG_LIST* %sg_list to i8**, !dbg !16282
  %21 = load i8*, i8** %list21, align 8, !dbg !16282
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16283
  %sg_list22 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %22, i32 0, i32 17, !dbg !16284
  %list23 = bitcast %union.IPS_SG_LIST* %sg_list22 to i8**, !dbg !16285
  store i8* %21, i8** %list23, align 8, !dbg !16286
  %23 = load i32, i32* %cmd_busaddr, align 4, !dbg !16287
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16288
  %scb_busaddr24 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 6, !dbg !16289
  store i32 %23, i32* %scb_busaddr24, align 4, !dbg !16290
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16291
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %25, i32 0, i32 18, !dbg !16292
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !16292
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %26, i32 0, i32 1, !dbg !16293
  %27 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !16293
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %27, i32 0, i32 17, !dbg !16294
  %28 = load i32, i32* %channel, align 4, !dbg !16294
  %conv25 = trunc i32 %28 to i8, !dbg !16291
  %29 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16295
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %29, i32 0, i32 3, !dbg !16296
  store i8 %conv25, i8* %bus, align 1, !dbg !16297
  %30 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16298
  %scsi_cmd26 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %30, i32 0, i32 18, !dbg !16299
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd26, align 8, !dbg !16299
  %device27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 1, !dbg !16300
  %32 = load %struct.scsi_device*, %struct.scsi_device** %device27, align 8, !dbg !16300
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %32, i32 0, i32 16, !dbg !16301
  %33 = load i32, i32* %id, align 8, !dbg !16301
  %conv28 = trunc i32 %33 to i8, !dbg !16298
  %34 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16302
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %34, i32 0, i32 2, !dbg !16303
  store i8 %conv28, i8* %target_id, align 4, !dbg !16304
  %35 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16305
  %scsi_cmd29 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %35, i32 0, i32 18, !dbg !16306
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd29, align 8, !dbg !16306
  %device30 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %36, i32 0, i32 1, !dbg !16307
  %37 = load %struct.scsi_device*, %struct.scsi_device** %device30, align 8, !dbg !16307
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %37, i32 0, i32 18, !dbg !16308
  %38 = load i64, i64* %lun, align 8, !dbg !16308
  %conv31 = trunc i64 %38 to i8, !dbg !16305
  %39 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16309
  %lun32 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %39, i32 0, i32 4, !dbg !16310
  store i8 %conv31, i8* %lun32, align 2, !dbg !16311
  %40 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16312
  %sg_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %40, i32 0, i32 14, !dbg !16313
  store i32 0, i32* %sg_len, align 8, !dbg !16314
  %41 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16315
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %41, i32 0, i32 13, !dbg !16316
  store i32 0, i32* %data_len, align 4, !dbg !16317
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16318
  %flags = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %42, i32 0, i32 15, !dbg !16319
  store i32 0, i32* %flags, align 4, !dbg !16320
  %43 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16321
  %op_code33 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %43, i32 0, i32 16, !dbg !16322
  store i32 0, i32* %op_code33, align 8, !dbg !16323
  %44 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16324
  %callback = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %44, i32 0, i32 20, !dbg !16325
  store void (%struct.ips_ha*, %struct.ips_scb*)* @ipsintr_done, void (%struct.ips_ha*, %struct.ips_scb*)** %callback, align 8, !dbg !16326
  %45 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !16327
  %46 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16328
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %46, i32 0, i32 8, !dbg !16329
  store i32 %45, i32* %timeout, align 4, !dbg !16330
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16331
  %flash_datasize34 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 47, !dbg !16332
  %48 = load i32, i32* %flash_datasize34, align 4, !dbg !16332
  %49 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16333
  %data_len35 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %49, i32 0, i32 13, !dbg !16334
  store i32 %48, i32* %data_len35, align 4, !dbg !16335
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16336
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 44, !dbg !16336
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !16336
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 41, !dbg !16336
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16336
  %flash_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 45, !dbg !16336
  %53 = load i8*, i8** %flash_data, align 8, !dbg !16336
  %54 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16336
  %data_len36 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %54, i32 0, i32 13, !dbg !16336
  %55 = load i32, i32* %data_len36, align 4, !dbg !16336
  %conv37 = zext i32 %55 to i64, !dbg !16336
  %56 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16336
  %scsi_cmd38 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %56, i32 0, i32 18, !dbg !16336
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd38, align 8, !dbg !16336
  %tobool = icmp ne %struct.scsi_cmnd* %57, null, !dbg !16336
  br i1 %tobool, label %lor.lhs.false, label %cond.true, !dbg !16336

lor.lhs.false:                                    ; preds = %if.end
  %58 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16336
  %scsi_cmd39 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %58, i32 0, i32 18, !dbg !16336
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd39, align 8, !dbg !16336
  %call = call i32 @ips_is_passthru(%struct.scsi_cmnd* %59) #11, !dbg !16336
  %tobool40 = icmp ne i32 %call, 0, !dbg !16336
  br i1 %tobool40, label %cond.true, label %lor.lhs.false41, !dbg !16336

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %60 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16336
  %scsi_cmd42 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %60, i32 0, i32 18, !dbg !16336
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd42, align 8, !dbg !16336
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %61, i32 0, i32 13, !dbg !16336
  %62 = load i32, i32* %sc_data_direction, align 8, !dbg !16336
  %cmp43 = icmp eq i32 3, %62, !dbg !16336
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !16336

cond.true:                                        ; preds = %lor.lhs.false41, %lor.lhs.false, %if.end
  br label %cond.end, !dbg !16336

cond.false:                                       ; preds = %lor.lhs.false41
  %63 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16336
  %scsi_cmd45 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %63, i32 0, i32 18, !dbg !16336
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd45, align 8, !dbg !16336
  %sc_data_direction46 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %64, i32 0, i32 13, !dbg !16336
  %65 = load i32, i32* %sc_data_direction46, align 8, !dbg !16336
  br label %cond.end, !dbg !16336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %65, %cond.false ], !dbg !16336
  %call47 = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %53, i64 %conv37, i32 %cond, i64 0) #11, !dbg !16336
  %66 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16337
  %data_busaddr = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %66, i32 0, i32 23, !dbg !16338
  store i64 %call47, i64* %data_busaddr, align 8, !dbg !16339
  %67 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16340
  %flags48 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %67, i32 0, i32 15, !dbg !16341
  %68 = load i32, i32* %flags48, align 4, !dbg !16342
  %or = or i32 %68, 16, !dbg !16342
  store i32 %or, i32* %flags48, align 4, !dbg !16342
  %69 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16343
  %70 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16343
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %70, i32 0, i32 12, !dbg !16343
  %71 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !16343
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %69 to i64, !dbg !16343
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %71 to i64, !dbg !16343
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16343
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !16343
  %conv49 = trunc i64 %sub.ptr.div to i32, !dbg !16343
  %conv50 = trunc i32 %conv49 to i8, !dbg !16343
  %72 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16344
  %cmd51 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %72, i32 0, i32 0, !dbg !16345
  %flashfw52 = bitcast %union.IPS_HOST_COMMAND* %cmd51 to %struct.IPS_FLASHFW_CMD*, !dbg !16346
  %command_id = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw52, i32 0, i32 1, !dbg !16347
  store i8 %conv50, i8* %command_id, align 1, !dbg !16348
  %73 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16349
  %data_busaddr53 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %73, i32 0, i32 23, !dbg !16349
  %74 = load i64, i64* %data_busaddr53, align 8, !dbg !16349
  %conv54 = trunc i64 %74 to i32, !dbg !16349
  %75 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16350
  %cmd55 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %75, i32 0, i32 0, !dbg !16351
  %flashfw56 = bitcast %union.IPS_HOST_COMMAND* %cmd55 to %struct.IPS_FLASHFW_CMD*, !dbg !16352
  %buffer_addr = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw56, i32 0, i32 5, !dbg !16353
  store i32 %conv54, i32* %buffer_addr, align 8, !dbg !16354
  %76 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16355
  %TimeOut = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %76, i32 0, i32 6, !dbg !16357
  %77 = load i32, i32* %TimeOut, align 8, !dbg !16357
  %tobool57 = icmp ne i32 %77, 0, !dbg !16355
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !16358

if.then58:                                        ; preds = %cond.end
  %78 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt.addr, align 8, !dbg !16359
  %TimeOut59 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %78, i32 0, i32 6, !dbg !16360
  %79 = load i32, i32* %TimeOut59, align 8, !dbg !16360
  %80 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16361
  %timeout60 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %80, i32 0, i32 8, !dbg !16362
  store i32 %79, i32* %timeout60, align 4, !dbg !16363
  br label %if.end61, !dbg !16361

if.end61:                                         ; preds = %if.then58, %cond.end
  %81 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16364
  %scsi_cmd62 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %81, i32 0, i32 18, !dbg !16365
  %82 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd62, align 8, !dbg !16365
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %82, i32 0, i32 24, !dbg !16366
  store i32 0, i32* %result, align 8, !dbg !16367
  store i32 1, i32* %retval, align 4, !dbg !16368
  br label %return, !dbg !16368

return:                                           ; preds = %if.end61, %if.else
  %83 = load i32, i32* %retval, align 4, !dbg !16369
  ret i32 %83, !dbg !16369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !16370 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16374, metadata !DIExpression()), !dbg !16375
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16376, metadata !DIExpression()), !dbg !16377
  ret i1 true, !dbg !16378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !16379 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16383, metadata !DIExpression()), !dbg !16384
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16385, metadata !DIExpression()), !dbg !16386
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16387, metadata !DIExpression()), !dbg !16388
  ret void, !dbg !16389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !16390 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16391, metadata !DIExpression()), !dbg !16393
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16395, metadata !DIExpression()), !dbg !16396
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !16397, metadata !DIExpression()), !dbg !16399
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !16161, metadata !DIExpression()), !dbg !16400
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16168, metadata !DIExpression()), !dbg !16402
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16403, metadata !DIExpression()), !dbg !16404
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16405, metadata !DIExpression()), !dbg !16406
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16407
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16408
  %div = sdiv i64 %1, 64, !dbg !16408
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16409
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16407
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16410
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16411
  %conv.i = trunc i64 %4 to i32, !dbg !16411
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !16412
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16413
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16413
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !16413
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16414
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !16415
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !16399
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !16399
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !16399, !srcloc !16416
  store i8 %11, i8* %c.i, align 1, !dbg !16399
  %12 = load i8, i8* %c.i, align 1, !dbg !16399
  %tobool.i = trunc i8 %12 to i1, !dbg !16399
  %frombool.i = zext i1 %tobool.i to i8, !dbg !16399
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !16399
  %13 = load i8, i8* %tmp.i, align 1, !dbg !16399
  %tobool1.i = trunc i8 %13 to i1, !dbg !16399
  ret i1 %tobool1.i, !dbg !16417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !6271 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16418, metadata !DIExpression()), !dbg !16419
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16420, metadata !DIExpression()), !dbg !16421
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16422, metadata !DIExpression()), !dbg !16423
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16424, metadata !DIExpression()), !dbg !16425
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !16426, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !16428, metadata !DIExpression()), !dbg !16431
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !16431
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !16431
  %lnot = xor i1 %call, true, !dbg !16431
  %lnot1 = xor i1 %lnot, true, !dbg !16431
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16431
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !16431
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !16432
  %tobool = icmp ne i32 %1, 0, !dbg !16432
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16432

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !16432
  %tobool2 = trunc i8 %2 to i1, !dbg !16432
  %lnot3 = xor i1 %tobool2, true, !dbg !16432
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !16434
  %lnot5 = xor i1 %3, true, !dbg !16432
  %lnot7 = xor i1 %lnot5, true, !dbg !16432
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !16432
  %conv = sext i32 %lnot.ext8 to i64, !dbg !16432
  %tobool9 = icmp ne i64 %conv, 0, !dbg !16432
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !16431

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !16435
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16437, metadata !DIExpression()), !dbg !16439
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !16439
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !16440
  %tobool10 = icmp ne i32 %4, 0, !dbg !16440
  %lnot11 = xor i1 %tobool10, true, !dbg !16440
  %lnot13 = xor i1 %lnot11, true, !dbg !16440
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !16440
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !16440
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !16440
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !16439

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !16440

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !16442

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !16444

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16442
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !16442
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16442
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !16442
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !16442
  br label %do.body21, !dbg !16442

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !16446

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !16448

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !16446

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0), i32 276, i32 2313, i64 12) #10, !dbg !16450, !srcloc !16452
  br label %do.end25, !dbg !16450

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 227) #10, !dbg !16453, !srcloc !16455
  br label %do.body26, !dbg !16446

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !16456

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !16446

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !16442

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !16458

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !16442

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !16442

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !16439
  %tobool32 = icmp ne i32 %7, 0, !dbg !16439
  %lnot33 = xor i1 %tobool32, true, !dbg !16439
  %lnot35 = xor i1 %lnot33, true, !dbg !16439
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !16439
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !16439
  store i64 %conv37, i64* %tmp, align 8, !dbg !16440
  %8 = load i64, i64* %tmp, align 8, !dbg !16439
  br label %if.end38, !dbg !16435

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !16431
  %tobool40 = icmp ne i32 %9, 0, !dbg !16431
  %lnot41 = xor i1 %tobool40, true, !dbg !16431
  %lnot43 = xor i1 %lnot41, true, !dbg !16431
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !16431
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !16431
  store i64 %conv45, i64* %tmp39, align 8, !dbg !16432
  %10 = load i64, i64* %tmp39, align 8, !dbg !16431
  %tobool46 = icmp ne i64 %10, 0, !dbg !16460
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !16461

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !16462
  br label %return, !dbg !16462

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16463
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !16464
  %13 = load i64, i64* %size.addr, align 8, !dbg !16465
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !16466
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16467
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !16468
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !16468
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !16468
  %18 = ptrtoint i8* %17 to i64, !dbg !16468
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !16468
  %shr = lshr i64 %call49, 12, !dbg !16468
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !16468
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !16469
  %20 = ptrtoint i8* %19 to i64, !dbg !16469
  %and = and i64 %20, 4095, !dbg !16469
  %21 = load i64, i64* %size.addr, align 8, !dbg !16470
  %22 = load i32, i32* %dir.addr, align 4, !dbg !16471
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !16472
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !16473
  store i64 %call50, i64* %retval, align 8, !dbg !16474
  br label %return, !dbg !16474

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !16475
  ret i64 %24, !dbg !16475
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !16476 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16479, metadata !DIExpression()), !dbg !16480
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16481
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !16483
  %1 = load i8*, i8** %init_name, align 8, !dbg !16483
  %tobool = icmp ne i8* %1, null, !dbg !16481
  br i1 %tobool, label %if.then, label %if.end, !dbg !16484

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16485
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !16486
  %3 = load i8*, i8** %init_name1, align 8, !dbg !16486
  store i8* %3, i8** %retval, align 8, !dbg !16487
  br label %return, !dbg !16487

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16488
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !16489
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !16490
  store i8* %call, i8** %retval, align 8, !dbg !16491
  br label %return, !dbg !16491

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !16492
  ret i8* %5, !dbg !16492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #0 !dbg !16493 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16496, metadata !DIExpression()), !dbg !16497
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16498, metadata !DIExpression()), !dbg !16499
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16500, metadata !DIExpression()), !dbg !16501
  ret void, !dbg !16502
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !16503 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !16507, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.declare(metadata i64* %y, metadata !16509, metadata !DIExpression()), !dbg !16510
  %0 = load i64, i64* %x.addr, align 8, !dbg !16511
  %sub = sub i64 %0, -2147483648, !dbg !16512
  store i64 %sub, i64* %y, align 8, !dbg !16510
  %1 = load i64, i64* %y, align 8, !dbg !16513
  %2 = load i64, i64* %x.addr, align 8, !dbg !16514
  %3 = load i64, i64* %y, align 8, !dbg !16515
  %cmp = icmp ugt i64 %2, %3, !dbg !16516
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16517

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !16518
  br label %cond.end, !dbg !16517

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !16519
  %sub1 = sub i64 -2147483648, %5, !dbg !16520
  br label %cond.end, !dbg !16517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !16517
  %add = add i64 %1, %cond, !dbg !16521
  store i64 %add, i64* %x.addr, align 8, !dbg !16522
  %6 = load i64, i64* %x.addr, align 8, !dbg !16523
  ret i64 %6, !dbg !16524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !16525 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16530, metadata !DIExpression()), !dbg !16531
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16532
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !16533
  %1 = load i8*, i8** %name, align 8, !dbg !16533
  ret i8* %1, !dbg !16534
}

; Function Attrs: noredzone
declare dso_local void @scsi_dma_unmap(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !16535 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16538, metadata !DIExpression()), !dbg !16539
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !16540, metadata !DIExpression()), !dbg !16541
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16542, metadata !DIExpression()), !dbg !16543
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16544, metadata !DIExpression()), !dbg !16545
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !16546, metadata !DIExpression()), !dbg !16547
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16548
  %1 = load i64, i64* %addr.addr, align 8, !dbg !16549
  %2 = load i64, i64* %size.addr, align 8, !dbg !16550
  %3 = load i32, i32* %dir.addr, align 4, !dbg !16551
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !16552
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !16553
  ret void, !dbg !16554
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_cmnd* @ips_removeq_wait_head(%struct.ips_wait_queue* %queue) #0 !dbg !16555 {
entry:
  %retval = alloca %struct.scsi_cmnd*, align 8
  %queue.addr = alloca %struct.ips_wait_queue*, align 8
  %item = alloca %struct.scsi_cmnd*, align 8
  store %struct.ips_wait_queue* %queue, %struct.ips_wait_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_wait_queue** %queue.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %item, metadata !16560, metadata !DIExpression()), !dbg !16561
  %0 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !16562
  %head = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %0, i32 0, i32 0, !dbg !16563
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %head, align 8, !dbg !16563
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %item, align 8, !dbg !16564
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item, align 8, !dbg !16565
  %tobool = icmp ne %struct.scsi_cmnd* %2, null, !dbg !16565
  br i1 %tobool, label %if.end, label %if.then, !dbg !16567

if.then:                                          ; preds = %entry
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !16568
  br label %return, !dbg !16568

if.end:                                           ; preds = %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item, align 8, !dbg !16570
  %host_scribble = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 23, !dbg !16571
  %4 = load i8*, i8** %host_scribble, align 8, !dbg !16571
  %5 = bitcast i8* %4 to %struct.scsi_cmnd*, !dbg !16572
  %6 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !16573
  %head1 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %6, i32 0, i32 0, !dbg !16574
  store %struct.scsi_cmnd* %5, %struct.scsi_cmnd** %head1, align 8, !dbg !16575
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item, align 8, !dbg !16576
  %host_scribble2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 23, !dbg !16577
  store i8* null, i8** %host_scribble2, align 8, !dbg !16578
  %8 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !16579
  %tail = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %8, i32 0, i32 1, !dbg !16581
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tail, align 8, !dbg !16581
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item, align 8, !dbg !16582
  %cmp = icmp eq %struct.scsi_cmnd* %9, %10, !dbg !16583
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !16584

if.then3:                                         ; preds = %if.end
  %11 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !16585
  %tail4 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %11, i32 0, i32 1, !dbg !16586
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %tail4, align 8, !dbg !16587
  br label %if.end5, !dbg !16585

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !16588
  %count = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %12, i32 0, i32 2, !dbg !16589
  %13 = load i32, i32* %count, align 8, !dbg !16590
  %dec = add i32 %13, -1, !dbg !16590
  store i32 %dec, i32* %count, align 8, !dbg !16590
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item, align 8, !dbg !16591
  store %struct.scsi_cmnd* %14, %struct.scsi_cmnd** %retval, align 8, !dbg !16592
  br label %return, !dbg !16592

return:                                           ; preds = %if.end5, %if.then
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %retval, align 8, !dbg !16593
  ret %struct.scsi_cmnd* %15, !dbg !16593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_done(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !16594 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %i = alloca i32, align 4
  %sg_dma_index = alloca i32, align 4
  %ips_sg_index = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16595, metadata !DIExpression()), !dbg !16596
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !16597, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16599, metadata !DIExpression()), !dbg !16600
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16601
  %tobool = icmp ne %struct.ips_scb* %0, null, !dbg !16601
  br i1 %tobool, label %if.end, label %if.then, !dbg !16603

if.then:                                          ; preds = %entry
  br label %return, !dbg !16604

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16605
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %1, i32 0, i32 18, !dbg !16607
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !16607
  %tobool1 = icmp ne %struct.scsi_cmnd* %2, null, !dbg !16608
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !16609

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16610
  %scsi_cmd2 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 18, !dbg !16611
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd2, align 8, !dbg !16611
  %call = call i32 @ips_is_passthru(%struct.scsi_cmnd* %4) #11, !dbg !16612
  %tobool3 = icmp ne i32 %call, 0, !dbg !16612
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !16613

if.then4:                                         ; preds = %land.lhs.true
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16614
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16616
  call void @ips_cleanup_passthru(%struct.ips_ha* %5, %struct.ips_scb* %6) #11, !dbg !16617
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16618
  %num_ioctl = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 10, !dbg !16619
  %8 = load i32, i32* %num_ioctl, align 4, !dbg !16620
  %dec = add i32 %8, -1, !dbg !16620
  store i32 %dec, i32* %num_ioctl, align 4, !dbg !16620
  br label %if.end84, !dbg !16621

if.else:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16622
  %breakup = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 11, !dbg !16625
  %10 = load i8, i8* %breakup, align 2, !dbg !16625
  %conv = zext i8 %10 to i32, !dbg !16626
  %tobool5 = icmp ne i32 %conv, 0, !dbg !16626
  br i1 %tobool5, label %if.then8, label %lor.lhs.false, !dbg !16627

lor.lhs.false:                                    ; preds = %if.else
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16628
  %sg_break = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %11, i32 0, i32 12, !dbg !16629
  %12 = load i8, i8* %sg_break, align 1, !dbg !16629
  %conv6 = zext i8 %12 to i32, !dbg !16630
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !16630
  br i1 %tobool7, label %if.then8, label %if.end83, !dbg !16631

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !16632, metadata !DIExpression()), !dbg !16634
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16635, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.declare(metadata i32* %sg_dma_index, metadata !16637, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.declare(metadata i32* %ips_sg_index, metadata !16639, metadata !DIExpression()), !dbg !16640
  store i32 0, i32* %ips_sg_index, align 4, !dbg !16640
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16641
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 13, !dbg !16642
  store i32 0, i32* %data_len, align 4, !dbg !16643
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16644
  %scsi_cmd9 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 18, !dbg !16645
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd9, align 8, !dbg !16645
  %call10 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %15) #11, !dbg !16646
  store %struct.scatterlist* %call10, %struct.scatterlist** %sg, align 8, !dbg !16647
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16648
  %breakup11 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 11, !dbg !16649
  %17 = load i8, i8* %breakup11, align 2, !dbg !16649
  %conv12 = zext i8 %17 to i32, !dbg !16648
  store i32 %conv12, i32* %sg_dma_index, align 4, !dbg !16650
  store i32 0, i32* %i, align 4, !dbg !16651
  br label %for.cond, !dbg !16653

for.cond:                                         ; preds = %for.inc, %if.then8
  %18 = load i32, i32* %i, align 4, !dbg !16654
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16656
  %breakup13 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 11, !dbg !16657
  %20 = load i8, i8* %breakup13, align 2, !dbg !16657
  %conv14 = zext i8 %20 to i32, !dbg !16656
  %cmp = icmp slt i32 %18, %conv14, !dbg !16658
  br i1 %cmp, label %for.body, label %for.end, !dbg !16659

for.body:                                         ; preds = %for.cond
  %21 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !16660
  %call16 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %21) #11, !dbg !16661
  store %struct.scatterlist* %call16, %struct.scatterlist** %sg, align 8, !dbg !16662
  br label %for.inc, !dbg !16663

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !16664
  %inc = add i32 %22, 1, !dbg !16664
  store i32 %inc, i32* %i, align 4, !dbg !16664
  br label %for.cond, !dbg !16665, !llvm.loop !16666

for.end:                                          ; preds = %for.cond
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16668
  %24 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !16669
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %24, i32 0, i32 3, !dbg !16669
  %25 = load i64, i64* %dma_address, align 8, !dbg !16669
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16670
  %27 = load i32, i32* %ips_sg_index, align 4, !dbg !16671
  %inc17 = add i32 %27, 1, !dbg !16671
  store i32 %inc17, i32* %ips_sg_index, align 4, !dbg !16671
  %28 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !16672
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %28, i32 0, i32 4, !dbg !16672
  %29 = load i32, i32* %dma_length, align 8, !dbg !16672
  %call18 = call i32 @ips_fill_scb_sg_single(%struct.ips_ha* %23, i64 %25, %struct.ips_scb* %26, i32 %27, i32 %29) #11, !dbg !16673
  br label %for.cond19, !dbg !16674

for.cond19:                                       ; preds = %for.inc33, %for.end
  %30 = load i32, i32* %sg_dma_index, align 4, !dbg !16675
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16678
  %scsi_cmd20 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 18, !dbg !16679
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd20, align 8, !dbg !16679
  %call21 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %32) #11, !dbg !16680
  %cmp22 = icmp ult i32 %30, %call21, !dbg !16681
  br i1 %cmp22, label %for.body24, label %for.end36, !dbg !16682

for.body24:                                       ; preds = %for.cond19
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16683
  %34 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !16686
  %dma_address25 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %34, i32 0, i32 3, !dbg !16686
  %35 = load i64, i64* %dma_address25, align 8, !dbg !16686
  %36 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16687
  %37 = load i32, i32* %ips_sg_index, align 4, !dbg !16688
  %inc26 = add i32 %37, 1, !dbg !16688
  store i32 %inc26, i32* %ips_sg_index, align 4, !dbg !16688
  %38 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !16689
  %dma_length27 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %38, i32 0, i32 4, !dbg !16689
  %39 = load i32, i32* %dma_length27, align 8, !dbg !16689
  %call28 = call i32 @ips_fill_scb_sg_single(%struct.ips_ha* %33, i64 %35, %struct.ips_scb* %36, i32 %37, i32 %39) #11, !dbg !16690
  %cmp29 = icmp slt i32 %call28, 0, !dbg !16691
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !16692

if.then31:                                        ; preds = %for.body24
  br label %for.end36, !dbg !16693

if.end32:                                         ; preds = %for.body24
  br label %for.inc33, !dbg !16694

for.inc33:                                        ; preds = %if.end32
  %40 = load i32, i32* %sg_dma_index, align 4, !dbg !16695
  %inc34 = add i32 %40, 1, !dbg !16695
  store i32 %inc34, i32* %sg_dma_index, align 4, !dbg !16695
  %41 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !16696
  %call35 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %41) #11, !dbg !16697
  store %struct.scatterlist* %call35, %struct.scatterlist** %sg, align 8, !dbg !16698
  br label %for.cond19, !dbg !16699, !llvm.loop !16700

for.end36:                                        ; preds = %if.then31, %for.cond19
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16702
  %data_len37 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %42, i32 0, i32 13, !dbg !16703
  %43 = load i32, i32* %data_len37, align 4, !dbg !16703
  %conv38 = trunc i32 %43 to i16, !dbg !16702
  %44 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16704
  %dcdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %44, i32 0, i32 1, !dbg !16705
  %transfer_length = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb, i32 0, i32 2, !dbg !16706
  store i16 %conv38, i16* %transfer_length, align 2, !dbg !16707
  %45 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16708
  %scsi_cmd39 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %45, i32 0, i32 18, !dbg !16709
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd39, align 8, !dbg !16709
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 14, !dbg !16710
  %47 = load i8*, i8** %cmnd, align 8, !dbg !16710
  %arrayidx = getelementptr i8, i8* %47, i64 0, !dbg !16708
  %48 = load i8, i8* %arrayidx, align 1, !dbg !16708
  %idxprom = zext i8 %48 to i64, !dbg !16711
  %arrayidx40 = getelementptr [255 x i8], [255 x i8]* bitcast (<{ [235 x i8], [20 x i8] }>* @ips_command_direction to [255 x i8]*), i64 0, i64 %idxprom, !dbg !16711
  %49 = load i8, i8* %arrayidx40, align 1, !dbg !16711
  %conv41 = sext i8 %49 to i32, !dbg !16711
  %50 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16712
  %dcdb42 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %50, i32 0, i32 1, !dbg !16713
  %cmd_attribute = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb42, i32 0, i32 1, !dbg !16714
  %51 = load i8, i8* %cmd_attribute, align 1, !dbg !16715
  %conv43 = zext i8 %51 to i32, !dbg !16715
  %or = or i32 %conv43, %conv41, !dbg !16715
  %conv44 = trunc i32 %or to i8, !dbg !16715
  store i8 %conv44, i8* %cmd_attribute, align 1, !dbg !16715
  %52 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16716
  %dcdb45 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %52, i32 0, i32 1, !dbg !16718
  %cmd_attribute46 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb45, i32 0, i32 1, !dbg !16719
  %53 = load i8, i8* %cmd_attribute46, align 1, !dbg !16719
  %conv47 = zext i8 %53 to i32, !dbg !16716
  %and = and i32 %conv47, 3, !dbg !16720
  %tobool48 = icmp ne i32 %and, 0, !dbg !16720
  br i1 %tobool48, label %if.end52, label %if.then49, !dbg !16721

if.then49:                                        ; preds = %for.end36
  %54 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16722
  %dcdb50 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %54, i32 0, i32 1, !dbg !16723
  %transfer_length51 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb50, i32 0, i32 2, !dbg !16724
  store i16 0, i16* %transfer_length51, align 2, !dbg !16725
  br label %if.end52, !dbg !16722

if.end52:                                         ; preds = %if.then49, %for.end36
  %55 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16726
  %data_len53 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %55, i32 0, i32 13, !dbg !16728
  %56 = load i32, i32* %data_len53, align 4, !dbg !16728
  %cmp54 = icmp uge i32 %56, 65536, !dbg !16729
  br i1 %cmp54, label %if.then56, label %if.end64, !dbg !16730

if.then56:                                        ; preds = %if.end52
  %57 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16731
  %dcdb57 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %57, i32 0, i32 1, !dbg !16733
  %cmd_attribute58 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb57, i32 0, i32 1, !dbg !16734
  %58 = load i8, i8* %cmd_attribute58, align 1, !dbg !16735
  %conv59 = zext i8 %58 to i32, !dbg !16735
  %or60 = or i32 %conv59, 8, !dbg !16735
  %conv61 = trunc i32 %or60 to i8, !dbg !16735
  store i8 %conv61, i8* %cmd_attribute58, align 1, !dbg !16735
  %59 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16736
  %dcdb62 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %59, i32 0, i32 1, !dbg !16737
  %transfer_length63 = getelementptr inbounds %struct.IPS_DCDB_TABLE, %struct.IPS_DCDB_TABLE* %dcdb62, i32 0, i32 2, !dbg !16738
  store i16 0, i16* %transfer_length63, align 2, !dbg !16739
  br label %if.end64, !dbg !16740

if.end64:                                         ; preds = %if.then56, %if.end52
  %60 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16741
  %61 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16742
  %call65 = call i32 @ips_send_cmd(%struct.ips_ha* %60, %struct.ips_scb* %61) #11, !dbg !16743
  store i32 %call65, i32* %ret, align 4, !dbg !16744
  %62 = load i32, i32* %ret, align 4, !dbg !16745
  switch i32 %62, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb73
  ], !dbg !16746

sw.bb:                                            ; preds = %if.end64
  %63 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16747
  %scsi_cmd66 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %63, i32 0, i32 18, !dbg !16750
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd66, align 8, !dbg !16750
  %tobool67 = icmp ne %struct.scsi_cmnd* %64, null, !dbg !16747
  br i1 %tobool67, label %if.then68, label %if.end72, !dbg !16751

if.then68:                                        ; preds = %sw.bb
  %65 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16752
  %scsi_cmd69 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %65, i32 0, i32 18, !dbg !16754
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !16754
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %66, i32 0, i32 24, !dbg !16755
  store i32 458752, i32* %result, align 8, !dbg !16756
  %67 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16757
  %scsi_cmd70 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %67, i32 0, i32 18, !dbg !16758
  %68 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd70, align 8, !dbg !16758
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %68, i32 0, i32 21, !dbg !16759
  %69 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !16759
  %70 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16760
  %scsi_cmd71 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %70, i32 0, i32 18, !dbg !16761
  %71 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd71, align 8, !dbg !16761
  call void %69(%struct.scsi_cmnd* %71) #11, !dbg !16757
  br label %if.end72, !dbg !16762

if.end72:                                         ; preds = %if.then68, %sw.bb
  %72 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16763
  %73 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16764
  call void @ips_freescb(%struct.ips_ha* %72, %struct.ips_scb* %73) #11, !dbg !16765
  br label %sw.epilog, !dbg !16766

sw.bb73:                                          ; preds = %if.end64
  %74 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16767
  %scsi_cmd74 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %74, i32 0, i32 18, !dbg !16769
  %75 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd74, align 8, !dbg !16769
  %tobool75 = icmp ne %struct.scsi_cmnd* %75, null, !dbg !16767
  br i1 %tobool75, label %if.then76, label %if.end82, !dbg !16770

if.then76:                                        ; preds = %sw.bb73
  %76 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16771
  %scsi_cmd77 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %76, i32 0, i32 18, !dbg !16773
  %77 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd77, align 8, !dbg !16773
  %result78 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %77, i32 0, i32 24, !dbg !16774
  store i32 458752, i32* %result78, align 8, !dbg !16775
  %78 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16776
  %scsi_cmd79 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %78, i32 0, i32 18, !dbg !16777
  %79 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd79, align 8, !dbg !16777
  %scsi_done80 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %79, i32 0, i32 21, !dbg !16778
  %80 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done80, align 8, !dbg !16778
  %81 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16779
  %scsi_cmd81 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %81, i32 0, i32 18, !dbg !16780
  %82 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd81, align 8, !dbg !16780
  call void %80(%struct.scsi_cmnd* %82) #11, !dbg !16776
  br label %if.end82, !dbg !16781

if.end82:                                         ; preds = %if.then76, %sw.bb73
  %83 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16782
  %84 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16783
  call void @ips_freescb(%struct.ips_ha* %83, %struct.ips_scb* %84) #11, !dbg !16784
  br label %sw.epilog, !dbg !16785

sw.default:                                       ; preds = %if.end64
  br label %sw.epilog, !dbg !16786

sw.epilog:                                        ; preds = %sw.default, %if.end82, %if.end72
  br label %return, !dbg !16787

if.end83:                                         ; preds = %lor.lhs.false
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then4
  %85 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16788
  %bus = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %85, i32 0, i32 3, !dbg !16790
  %86 = load i8, i8* %bus, align 1, !dbg !16790
  %tobool85 = icmp ne i8 %86, 0, !dbg !16788
  br i1 %tobool85, label %if.then86, label %if.end93, !dbg !16791

if.then86:                                        ; preds = %if.end84
  %87 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16792
  %target_id = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %87, i32 0, i32 2, !dbg !16794
  %88 = load i8, i8* %target_id, align 4, !dbg !16794
  %conv87 = zext i8 %88 to i32, !dbg !16792
  %shl = shl i32 1, %conv87, !dbg !16795
  %neg = xor i32 %shl, -1, !dbg !16796
  %89 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16797
  %dcdb_active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %89, i32 0, i32 1, !dbg !16798
  %90 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16799
  %bus88 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %90, i32 0, i32 3, !dbg !16800
  %91 = load i8, i8* %bus88, align 1, !dbg !16800
  %conv89 = zext i8 %91 to i32, !dbg !16799
  %sub = sub i32 %conv89, 1, !dbg !16801
  %idxprom90 = sext i32 %sub to i64, !dbg !16797
  %arrayidx91 = getelementptr [4 x i32], [4 x i32]* %dcdb_active, i64 0, i64 %idxprom90, !dbg !16797
  %92 = load i32, i32* %arrayidx91, align 4, !dbg !16802
  %and92 = and i32 %92, %neg, !dbg !16802
  store i32 %and92, i32* %arrayidx91, align 4, !dbg !16802
  br label %if.end93, !dbg !16803

if.end93:                                         ; preds = %if.then86, %if.end84
  %93 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16804
  %scsi_cmd94 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %93, i32 0, i32 18, !dbg !16805
  %94 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd94, align 8, !dbg !16805
  %scsi_done95 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %94, i32 0, i32 21, !dbg !16806
  %95 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done95, align 8, !dbg !16806
  %96 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16807
  %scsi_cmd96 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %96, i32 0, i32 18, !dbg !16808
  %97 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd96, align 8, !dbg !16808
  call void %95(%struct.scsi_cmnd* %97) #11, !dbg !16804
  %98 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16809
  %99 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16810
  call void @ips_freescb(%struct.ips_ha* %98, %struct.ips_scb* %99) #11, !dbg !16811
  br label %return, !dbg !16812

return:                                           ; preds = %if.end93, %sw.epilog, %if.then
  ret void, !dbg !16812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_cleanup_passthru(%struct.ips_ha* %ha, %struct.ips_scb* %scb) #0 !dbg !16813 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %scb.addr = alloca %struct.ips_scb*, align 8
  %pt = alloca %struct.ips_passthru_t*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16814, metadata !DIExpression()), !dbg !16815
  store %struct.ips_scb* %scb, %struct.ips_scb** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb.addr, metadata !16816, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt, metadata !16818, metadata !DIExpression()), !dbg !16819
  %0 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16820
  %tobool = icmp ne %struct.ips_scb* %0, null, !dbg !16820
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16822

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16823
  %scsi_cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %1, i32 0, i32 18, !dbg !16824
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !16824
  %tobool1 = icmp ne %struct.scsi_cmnd* %2, null, !dbg !16823
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !16825

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16826
  %scsi_cmd3 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %3, i32 0, i32 18, !dbg !16827
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd3, align 8, !dbg !16827
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %4) #11, !dbg !16828
  %tobool4 = icmp ne %struct.scatterlist* %call, null, !dbg !16828
  br i1 %tobool4, label %if.end, label %if.then, !dbg !16829

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !16830

if.end:                                           ; preds = %lor.lhs.false2
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16832
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 25, !dbg !16833
  %6 = load i8*, i8** %ioctl_data, align 8, !dbg !16833
  %7 = bitcast i8* %6 to %struct.ips_passthru_t*, !dbg !16834
  store %struct.ips_passthru_t* %7, %struct.ips_passthru_t** %pt, align 8, !dbg !16835
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16836
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 0, !dbg !16838
  %dcdb = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_DCDB_CMD*, !dbg !16839
  %op_code = getelementptr inbounds %struct.IPS_DCDB_CMD, %struct.IPS_DCDB_CMD* %dcdb, i32 0, i32 0, !dbg !16840
  %9 = load i8, i8* %op_code, align 8, !dbg !16840
  %conv = zext i8 %9 to i32, !dbg !16836
  %cmp = icmp eq i32 %conv, 4, !dbg !16841
  br i1 %cmp, label %if.then6, label %if.end9, !dbg !16842

if.then6:                                         ; preds = %if.end
  %10 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !16843
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %10, i32 0, i32 5, !dbg !16844
  %dcdb7 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 1, !dbg !16845
  %11 = bitcast %struct.IPS_DCDB_TABLE* %dcdb7 to i8*, !dbg !16846
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16847
  %dcdb8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 1, !dbg !16848
  %13 = bitcast %struct.IPS_DCDB_TABLE* %dcdb8 to i8*, !dbg !16846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %13, i64 92, i1 false), !dbg !16846
  br label %if.end9, !dbg !16846

if.end9:                                          ; preds = %if.then6, %if.end
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16849
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 9, !dbg !16850
  %15 = load i8, i8* %basic_status, align 8, !dbg !16850
  %16 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !16851
  %BasicStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %16, i32 0, i32 7, !dbg !16852
  store i8 %15, i8* %BasicStatus, align 4, !dbg !16853
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16854
  %extended_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 10, !dbg !16855
  %18 = load i8, i8* %extended_status, align 1, !dbg !16855
  %19 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !16856
  %ExtendedStatus = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %19, i32 0, i32 8, !dbg !16857
  store i8 %18, i8* %ExtendedStatus, align 1, !dbg !16858
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16859
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 6, !dbg !16860
  %21 = load i16, i16* %ad_type, align 8, !dbg !16860
  %conv10 = trunc i16 %21 to i8, !dbg !16859
  %22 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !16861
  %AdapterType = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %22, i32 0, i32 9, !dbg !16862
  store i8 %conv10, i8* %AdapterType, align 2, !dbg !16863
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16864
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 44, !dbg !16866
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !16866
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 8, !dbg !16867
  %25 = load i16, i16* %device, align 2, !dbg !16867
  %conv11 = zext i16 %25 to i32, !dbg !16864
  %cmp12 = icmp eq i32 %conv11, 46, !dbg !16868
  br i1 %cmp12, label %land.lhs.true, label %if.end27, !dbg !16869

land.lhs.true:                                    ; preds = %if.end9
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16870
  %cmd14 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %26, i32 0, i32 0, !dbg !16871
  %flashfw = bitcast %union.IPS_HOST_COMMAND* %cmd14 to %struct.IPS_FLASHFW_CMD*, !dbg !16872
  %op_code15 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw, i32 0, i32 0, !dbg !16873
  %27 = load i8, i8* %op_code15, align 8, !dbg !16873
  %conv16 = zext i8 %27 to i32, !dbg !16870
  %cmp17 = icmp eq i32 %conv16, 32, !dbg !16874
  br i1 %cmp17, label %if.then26, label %lor.lhs.false19, !dbg !16875

lor.lhs.false19:                                  ; preds = %land.lhs.true
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16876
  %cmd20 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 0, !dbg !16877
  %flashfw21 = bitcast %union.IPS_HOST_COMMAND* %cmd20 to %struct.IPS_FLASHFW_CMD*, !dbg !16878
  %op_code22 = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw21, i32 0, i32 0, !dbg !16879
  %29 = load i8, i8* %op_code22, align 8, !dbg !16879
  %conv23 = zext i8 %29 to i32, !dbg !16876
  %cmp24 = icmp eq i32 %conv23, 34, !dbg !16880
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !16881

if.then26:                                        ; preds = %lor.lhs.false19, %land.lhs.true
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16882
  call void @ips_free_flash_copperhead(%struct.ips_ha* %30) #11, !dbg !16883
  br label %if.end27, !dbg !16883

if.end27:                                         ; preds = %if.then26, %lor.lhs.false19, %if.end9
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb.addr, align 8, !dbg !16884
  %scsi_cmd28 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 18, !dbg !16885
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd28, align 8, !dbg !16885
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16886
  %ioctl_data29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 25, !dbg !16887
  %34 = load i8*, i8** %ioctl_data29, align 8, !dbg !16887
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16888
  %ioctl_datasize = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 26, !dbg !16889
  %36 = load i32, i32* %ioctl_datasize, align 8, !dbg !16889
  call void @ips_scmd_buf_write(%struct.scsi_cmnd* %32, i8* %34, i32 %36) #11, !dbg !16890
  br label %return, !dbg !16891

return:                                           ; preds = %if.end27, %if.then
  ret void, !dbg !16891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_ffdc_reset(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !16892 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16893, metadata !DIExpression()), !dbg !16894
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !16895, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !16897, metadata !DIExpression()), !dbg !16898
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16899
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !16900
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !16900
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16901
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !16902
  %3 = load i32, i32* %max_cmds, align 8, !dbg !16902
  %sub = sub i32 %3, 1, !dbg !16903
  %idxprom = zext i32 %sub to i64, !dbg !16899
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !16899
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !16904
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16905
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16906
  call void @ips_init_scb(%struct.ips_ha* %4, %struct.ips_scb* %5) #11, !dbg !16907
  %6 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !16908
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16909
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 8, !dbg !16910
  store i32 %6, i32* %timeout, align 4, !dbg !16911
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16912
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !16913
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !16912
  store i8 -41, i8* %arrayidx1, align 1, !dbg !16914
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16915
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 0, !dbg !16916
  %ffdc = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FFDC_CMD*, !dbg !16917
  %op_code = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc, i32 0, i32 0, !dbg !16918
  store i8 -41, i8* %op_code, align 8, !dbg !16919
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16920
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16920
  %scbs2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !16920
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs2, align 8, !dbg !16920
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %10 to i64, !dbg !16920
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %12 to i64, !dbg !16920
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16920
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !16920
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !16920
  %conv3 = trunc i32 %conv to i8, !dbg !16920
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16921
  %cmd4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !16922
  %ffdc5 = bitcast %union.IPS_HOST_COMMAND* %cmd4 to %struct.IPS_FFDC_CMD*, !dbg !16923
  %command_id = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc5, i32 0, i32 1, !dbg !16924
  store i8 %conv3, i8* %command_id, align 1, !dbg !16925
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16926
  %reset_count = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 32, !dbg !16927
  %15 = load i16, i16* %reset_count, align 4, !dbg !16927
  %conv6 = trunc i16 %15 to i8, !dbg !16926
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16928
  %cmd7 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 0, !dbg !16929
  %ffdc8 = bitcast %union.IPS_HOST_COMMAND* %cmd7 to %struct.IPS_FFDC_CMD*, !dbg !16930
  %reset_count9 = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc8, i32 0, i32 2, !dbg !16931
  store i8 %conv6, i8* %reset_count9, align 2, !dbg !16932
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16933
  %cmd10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !16934
  %ffdc11 = bitcast %union.IPS_HOST_COMMAND* %cmd10 to %struct.IPS_FFDC_CMD*, !dbg !16935
  %reset_type = getelementptr inbounds %struct.IPS_FFDC_CMD, %struct.IPS_FFDC_CMD* %ffdc11, i32 0, i32 3, !dbg !16936
  store i8 -128, i8* %reset_type, align 1, !dbg !16937
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16938
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16939
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16940
  %last_ffdc = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 33, !dbg !16941
  %21 = load i64, i64* %last_ffdc, align 8, !dbg !16941
  call void @ips_fix_ffdc_time(%struct.ips_ha* %18, %struct.ips_scb* %19, i64 %21) #11, !dbg !16942
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16943
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16944
  %24 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !16945
  %25 = load i32, i32* %intr.addr, align 4, !dbg !16946
  %call = call i32 @ips_send_wait(%struct.ips_ha* %22, %struct.ips_scb* %23, i32 %24, i32 %25) #11, !dbg !16947
  ret void, !dbg !16948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_read_config(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !16949 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !16950, metadata !DIExpression()), !dbg !16951
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !16952, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !16954, metadata !DIExpression()), !dbg !16955
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16956, metadata !DIExpression()), !dbg !16957
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16958, metadata !DIExpression()), !dbg !16959
  store i32 0, i32* %i, align 4, !dbg !16960
  br label %for.cond, !dbg !16962

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16963
  %cmp = icmp slt i32 %0, 4, !dbg !16965
  br i1 %cmp, label %for.body, label %for.end, !dbg !16966

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16967
  %conf = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 22, !dbg !16968
  %2 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf, align 8, !dbg !16968
  %init_id = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %2, i32 0, i32 4, !dbg !16969
  %3 = load i32, i32* %i, align 4, !dbg !16970
  %idxprom = sext i32 %3 to i64, !dbg !16967
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %init_id, i64 0, i64 %idxprom, !dbg !16967
  store i8 7, i8* %arrayidx, align 1, !dbg !16971
  br label %for.inc, !dbg !16967

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !16972
  %inc = add i32 %4, 1, !dbg !16972
  store i32 %inc, i32* %i, align 4, !dbg !16972
  br label %for.cond, !dbg !16973, !llvm.loop !16974

for.end:                                          ; preds = %for.cond
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16976
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 12, !dbg !16977
  %6 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !16977
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16978
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 9, !dbg !16979
  %8 = load i32, i32* %max_cmds, align 8, !dbg !16979
  %sub = sub i32 %8, 1, !dbg !16980
  %idxprom1 = zext i32 %sub to i64, !dbg !16976
  %arrayidx2 = getelementptr %struct.ips_scb, %struct.ips_scb* %6, i64 %idxprom1, !dbg !16976
  store %struct.ips_scb* %arrayidx2, %struct.ips_scb** %scb, align 8, !dbg !16981
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16982
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16983
  call void @ips_init_scb(%struct.ips_ha* %9, %struct.ips_scb* %10) #11, !dbg !16984
  %11 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !16985
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16986
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %12, i32 0, i32 8, !dbg !16987
  store i32 %11, i32* %timeout, align 4, !dbg !16988
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16989
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 5, !dbg !16990
  %arrayidx3 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !16989
  store i8 56, i8* %arrayidx3, align 1, !dbg !16991
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16992
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !16993
  %basic_io = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_IO_CMD*, !dbg !16994
  %op_code = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io, i32 0, i32 0, !dbg !16995
  store i8 56, i8* %op_code, align 8, !dbg !16996
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16997
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !16997
  %scbs4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 12, !dbg !16997
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scbs4, align 8, !dbg !16997
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %15 to i64, !dbg !16997
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %17 to i64, !dbg !16997
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16997
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !16997
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !16997
  %conv5 = trunc i32 %conv to i8, !dbg !16997
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !16998
  %cmd6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 0, !dbg !16999
  %basic_io7 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to %struct.IPS_IO_CMD*, !dbg !17000
  %command_id = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io7, i32 0, i32 1, !dbg !17001
  store i8 %conv5, i8* %command_id, align 1, !dbg !17002
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17003
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 13, !dbg !17004
  store i32 4508, i32* %data_len, align 4, !dbg !17005
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17006
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 36, !dbg !17007
  %21 = load i64, i64* %ioctl_busaddr, align 8, !dbg !17007
  %conv8 = trunc i64 %21 to i32, !dbg !17006
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17008
  %cmd9 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %22, i32 0, i32 0, !dbg !17009
  %basic_io10 = bitcast %union.IPS_HOST_COMMAND* %cmd9 to %struct.IPS_IO_CMD*, !dbg !17010
  %sg_addr = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io10, i32 0, i32 5, !dbg !17011
  store i32 %conv8, i32* %sg_addr, align 8, !dbg !17012
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17013
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17015
  %25 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17016
  %26 = load i32, i32* %intr.addr, align 4, !dbg !17017
  %call = call i32 @ips_send_wait(%struct.ips_ha* %23, %struct.ips_scb* %24, i32 %25, i32 %26) #11, !dbg !17018
  store i32 %call, i32* %ret, align 4, !dbg !17019
  %cmp11 = icmp eq i32 %call, 4, !dbg !17020
  br i1 %cmp11, label %if.then, label %lor.lhs.false, !dbg !17021

lor.lhs.false:                                    ; preds = %for.end
  %27 = load i32, i32* %ret, align 4, !dbg !17022
  %cmp13 = icmp eq i32 %27, 2, !dbg !17023
  br i1 %cmp13, label %if.then, label %lor.lhs.false15, !dbg !17024

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17025
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 9, !dbg !17026
  %29 = load i8, i8* %basic_status, align 8, !dbg !17026
  %conv16 = zext i8 %29 to i32, !dbg !17025
  %and = and i32 %conv16, 15, !dbg !17027
  %cmp17 = icmp sgt i32 %and, 1, !dbg !17028
  br i1 %cmp17, label %if.then, label %if.end37, !dbg !17029

if.then:                                          ; preds = %lor.lhs.false15, %lor.lhs.false, %for.end
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17030
  %conf19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 22, !dbg !17032
  %31 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf19, align 8, !dbg !17032
  %32 = bitcast %struct.IPS_CONF* %31 to i8*, !dbg !17033
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 4508, i1 false), !dbg !17033
  store i32 0, i32* %i, align 4, !dbg !17034
  br label %for.cond20, !dbg !17036

for.cond20:                                       ; preds = %for.inc28, %if.then
  %33 = load i32, i32* %i, align 4, !dbg !17037
  %cmp21 = icmp slt i32 %33, 4, !dbg !17039
  br i1 %cmp21, label %for.body23, label %for.end30, !dbg !17040

for.body23:                                       ; preds = %for.cond20
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17041
  %conf24 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %34, i32 0, i32 22, !dbg !17042
  %35 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf24, align 8, !dbg !17042
  %init_id25 = getelementptr inbounds %struct.IPS_CONF, %struct.IPS_CONF* %35, i32 0, i32 4, !dbg !17043
  %36 = load i32, i32* %i, align 4, !dbg !17044
  %idxprom26 = sext i32 %36 to i64, !dbg !17041
  %arrayidx27 = getelementptr [4 x i8], [4 x i8]* %init_id25, i64 0, i64 %idxprom26, !dbg !17041
  store i8 7, i8* %arrayidx27, align 1, !dbg !17045
  br label %for.inc28, !dbg !17041

for.inc28:                                        ; preds = %for.body23
  %37 = load i32, i32* %i, align 4, !dbg !17046
  %inc29 = add i32 %37, 1, !dbg !17046
  store i32 %inc29, i32* %i, align 4, !dbg !17046
  br label %for.cond20, !dbg !17047, !llvm.loop !17048

for.end30:                                        ; preds = %for.cond20
  %38 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17050
  %basic_status31 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %38, i32 0, i32 9, !dbg !17052
  %39 = load i8, i8* %basic_status31, align 8, !dbg !17052
  %conv32 = zext i8 %39 to i32, !dbg !17050
  %and33 = and i32 %conv32, 15, !dbg !17053
  %cmp34 = icmp eq i32 %and33, 12, !dbg !17054
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !17055

if.then36:                                        ; preds = %for.end30
  store i32 1, i32* %retval, align 4, !dbg !17056
  br label %return, !dbg !17056

if.end:                                           ; preds = %for.end30
  store i32 0, i32* %retval, align 4, !dbg !17057
  br label %return, !dbg !17057

if.end37:                                         ; preds = %lor.lhs.false15
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17058
  %conf38 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 22, !dbg !17059
  %41 = load %struct.IPS_CONF*, %struct.IPS_CONF** %conf38, align 8, !dbg !17059
  %42 = bitcast %struct.IPS_CONF* %41 to i8*, !dbg !17060
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17061
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 25, !dbg !17062
  %44 = load i8*, i8** %ioctl_data, align 8, !dbg !17062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 1 %44, i64 4508, i1 false), !dbg !17060
  store i32 1, i32* %retval, align 4, !dbg !17063
  br label %return, !dbg !17063

return:                                           ; preds = %if.end37, %if.end, %if.then36
  %45 = load i32, i32* %retval, align 4, !dbg !17064
  ret i32 %45, !dbg !17064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_read_adapter_status(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !17065 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17066, metadata !DIExpression()), !dbg !17067
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !17068, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !17070, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17072, metadata !DIExpression()), !dbg !17073
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17074
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !17075
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !17075
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17076
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !17077
  %3 = load i32, i32* %max_cmds, align 8, !dbg !17077
  %sub = sub i32 %3, 1, !dbg !17078
  %idxprom = zext i32 %sub to i64, !dbg !17074
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !17074
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !17079
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17080
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17081
  call void @ips_init_scb(%struct.ips_ha* %4, %struct.ips_scb* %5) #11, !dbg !17082
  %6 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17083
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17084
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 8, !dbg !17085
  store i32 %6, i32* %timeout, align 4, !dbg !17086
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17087
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !17088
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !17087
  store i8 5, i8* %arrayidx1, align 1, !dbg !17089
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17090
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 0, !dbg !17091
  %basic_io = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_IO_CMD*, !dbg !17092
  %op_code = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io, i32 0, i32 0, !dbg !17093
  store i8 5, i8* %op_code, align 8, !dbg !17094
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17095
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17095
  %scbs2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !17095
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs2, align 8, !dbg !17095
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %10 to i64, !dbg !17095
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %12 to i64, !dbg !17095
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17095
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !17095
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !17095
  %conv3 = trunc i32 %conv to i8, !dbg !17095
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17096
  %cmd4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !17097
  %basic_io5 = bitcast %union.IPS_HOST_COMMAND* %cmd4 to %struct.IPS_IO_CMD*, !dbg !17098
  %command_id = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io5, i32 0, i32 1, !dbg !17099
  store i8 %conv3, i8* %command_id, align 1, !dbg !17100
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17101
  %cmd6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !17102
  %basic_io7 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to %struct.IPS_IO_CMD*, !dbg !17103
  %sg_count = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io7, i32 0, i32 3, !dbg !17104
  store i8 0, i8* %sg_count, align 1, !dbg !17105
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17106
  %cmd8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 0, !dbg !17107
  %basic_io9 = bitcast %union.IPS_HOST_COMMAND* %cmd8 to %struct.IPS_IO_CMD*, !dbg !17108
  %lba = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io9, i32 0, i32 4, !dbg !17109
  store i32 0, i32* %lba, align 4, !dbg !17110
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17111
  %cmd10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 0, !dbg !17112
  %basic_io11 = bitcast %union.IPS_HOST_COMMAND* %cmd10 to %struct.IPS_IO_CMD*, !dbg !17113
  %sector_count = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io11, i32 0, i32 6, !dbg !17114
  store i16 0, i16* %sector_count, align 4, !dbg !17115
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17116
  %cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !17117
  %basic_io13 = bitcast %union.IPS_HOST_COMMAND* %cmd12 to %struct.IPS_IO_CMD*, !dbg !17118
  %log_drv = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io13, i32 0, i32 2, !dbg !17119
  store i8 0, i8* %log_drv, align 2, !dbg !17120
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17121
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 13, !dbg !17122
  store i32 196, i32* %data_len, align 4, !dbg !17123
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17124
  %enq_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 49, !dbg !17125
  %20 = load i64, i64* %enq_busaddr, align 8, !dbg !17125
  %conv14 = trunc i64 %20 to i32, !dbg !17124
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17126
  %cmd15 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %21, i32 0, i32 0, !dbg !17127
  %basic_io16 = bitcast %union.IPS_HOST_COMMAND* %cmd15 to %struct.IPS_IO_CMD*, !dbg !17128
  %sg_addr = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io16, i32 0, i32 5, !dbg !17129
  store i32 %conv14, i32* %sg_addr, align 8, !dbg !17130
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17131
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17133
  %24 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17134
  %25 = load i32, i32* %intr.addr, align 4, !dbg !17135
  %call = call i32 @ips_send_wait(%struct.ips_ha* %22, %struct.ips_scb* %23, i32 %24, i32 %25) #11, !dbg !17136
  store i32 %call, i32* %ret, align 4, !dbg !17137
  %cmp = icmp eq i32 %call, 4, !dbg !17138
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17139

lor.lhs.false:                                    ; preds = %entry
  %26 = load i32, i32* %ret, align 4, !dbg !17140
  %cmp18 = icmp eq i32 %26, 2, !dbg !17141
  br i1 %cmp18, label %if.then, label %lor.lhs.false20, !dbg !17142

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17143
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %27, i32 0, i32 9, !dbg !17144
  %28 = load i8, i8* %basic_status, align 8, !dbg !17144
  %conv21 = zext i8 %28 to i32, !dbg !17143
  %and = and i32 %conv21, 15, !dbg !17145
  %cmp22 = icmp sgt i32 %and, 1, !dbg !17146
  br i1 %cmp22, label %if.then, label %if.end, !dbg !17147

if.then:                                          ; preds = %lor.lhs.false20, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !17148
  br label %return, !dbg !17148

if.end:                                           ; preds = %lor.lhs.false20
  store i32 1, i32* %retval, align 4, !dbg !17149
  br label %return, !dbg !17149

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !17150
  ret i32 %29, !dbg !17150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_identify_controller(%struct.ips_ha* %ha) #0 !dbg !17151 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17152, metadata !DIExpression()), !dbg !17153
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17154
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 44, !dbg !17155
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !17155
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 8, !dbg !17156
  %2 = load i16, i16* %device, align 2, !dbg !17156
  %conv = zext i16 %2 to i32, !dbg !17154
  switch i32 %conv, label %sw.epilog98 [
    i32 46, label %sw.bb
    i32 445, label %sw.bb70
    i32 592, label %sw.bb85
  ], !dbg !17157

sw.bb:                                            ; preds = %entry
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17158
  %pcidev1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %3, i32 0, i32 44, !dbg !17161
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pcidev1, align 8, !dbg !17161
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 12, !dbg !17162
  %5 = load i8, i8* %revision, align 8, !dbg !17162
  %conv2 = zext i8 %5 to i32, !dbg !17158
  %cmp = icmp sle i32 %conv2, 2, !dbg !17163
  br i1 %cmp, label %if.then, label %if.else, !dbg !17164

if.then:                                          ; preds = %sw.bb
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17165
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 6, !dbg !17167
  store i16 1, i16* %ad_type, align 8, !dbg !17168
  br label %if.end69, !dbg !17169

if.else:                                          ; preds = %sw.bb
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17170
  %pcidev4 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 44, !dbg !17172
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pcidev4, align 8, !dbg !17172
  %revision5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 12, !dbg !17173
  %9 = load i8, i8* %revision5, align 8, !dbg !17173
  %conv6 = zext i8 %9 to i32, !dbg !17170
  %cmp7 = icmp eq i32 %conv6, 4, !dbg !17174
  br i1 %cmp7, label %if.then9, label %if.else11, !dbg !17175

if.then9:                                         ; preds = %if.else
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17176
  %ad_type10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 6, !dbg !17178
  store i16 2, i16* %ad_type10, align 8, !dbg !17179
  br label %if.end68, !dbg !17180

if.else11:                                        ; preds = %if.else
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17181
  %pcidev12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 44, !dbg !17183
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pcidev12, align 8, !dbg !17183
  %revision13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 12, !dbg !17184
  %13 = load i8, i8* %revision13, align 8, !dbg !17184
  %conv14 = zext i8 %13 to i32, !dbg !17181
  %cmp15 = icmp eq i32 %conv14, 3, !dbg !17185
  br i1 %cmp15, label %if.then17, label %if.else19, !dbg !17186

if.then17:                                        ; preds = %if.else11
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17187
  %ad_type18 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 6, !dbg !17189
  store i16 3, i16* %ad_type18, align 8, !dbg !17190
  br label %if.end67, !dbg !17191

if.else19:                                        ; preds = %if.else11
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17192
  %pcidev20 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 44, !dbg !17194
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pcidev20, align 8, !dbg !17194
  %revision21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 12, !dbg !17195
  %17 = load i8, i8* %revision21, align 8, !dbg !17195
  %conv22 = zext i8 %17 to i32, !dbg !17192
  %cmp23 = icmp eq i32 %conv22, 4, !dbg !17196
  br i1 %cmp23, label %land.lhs.true, label %if.else30, !dbg !17197

land.lhs.true:                                    ; preds = %if.else19
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17198
  %slot_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 34, !dbg !17199
  %19 = load i8, i8* %slot_num, align 8, !dbg !17199
  %conv25 = zext i8 %19 to i32, !dbg !17198
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !17200
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !17201

if.then28:                                        ; preds = %land.lhs.true
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17202
  %ad_type29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 6, !dbg !17204
  store i16 4, i16* %ad_type29, align 8, !dbg !17205
  br label %if.end66, !dbg !17206

if.else30:                                        ; preds = %land.lhs.true, %if.else19
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17207
  %pcidev31 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %21, i32 0, i32 44, !dbg !17209
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pcidev31, align 8, !dbg !17209
  %revision32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 12, !dbg !17210
  %23 = load i8, i8* %revision32, align 8, !dbg !17210
  %conv33 = zext i8 %23 to i32, !dbg !17207
  %cmp34 = icmp sge i32 %conv33, 5, !dbg !17211
  br i1 %cmp34, label %land.lhs.true36, label %if.else50, !dbg !17212

land.lhs.true36:                                  ; preds = %if.else30
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17213
  %pcidev37 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 44, !dbg !17214
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pcidev37, align 8, !dbg !17214
  %revision38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 12, !dbg !17215
  %26 = load i8, i8* %revision38, align 8, !dbg !17215
  %conv39 = zext i8 %26 to i32, !dbg !17213
  %cmp40 = icmp sle i32 %conv39, 13, !dbg !17216
  br i1 %cmp40, label %if.then42, label %if.else50, !dbg !17217

if.then42:                                        ; preds = %land.lhs.true36
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17218
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 21, !dbg !17221
  %28 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !17221
  %ucMaxPhysicalDevices = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %28, i32 0, i32 12, !dbg !17222
  %29 = load i8, i8* %ucMaxPhysicalDevices, align 1, !dbg !17222
  %conv43 = zext i8 %29 to i32, !dbg !17218
  %cmp44 = icmp eq i32 %conv43, 15, !dbg !17223
  br i1 %cmp44, label %if.then46, label %if.else48, !dbg !17224

if.then46:                                        ; preds = %if.then42
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17225
  %ad_type47 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 6, !dbg !17226
  store i16 6, i16* %ad_type47, align 8, !dbg !17227
  br label %if.end, !dbg !17225

if.else48:                                        ; preds = %if.then42
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17228
  %ad_type49 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 6, !dbg !17229
  store i16 5, i16* %ad_type49, align 8, !dbg !17230
  br label %if.end

if.end:                                           ; preds = %if.else48, %if.then46
  br label %if.end65, !dbg !17231

if.else50:                                        ; preds = %land.lhs.true36, %if.else30
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17232
  %pcidev51 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 44, !dbg !17234
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pcidev51, align 8, !dbg !17234
  %revision52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 12, !dbg !17235
  %34 = load i8, i8* %revision52, align 8, !dbg !17235
  %conv53 = zext i8 %34 to i32, !dbg !17232
  %cmp54 = icmp sge i32 %conv53, 15, !dbg !17236
  br i1 %cmp54, label %land.lhs.true56, label %if.end64, !dbg !17237

land.lhs.true56:                                  ; preds = %if.else50
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17238
  %pcidev57 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 44, !dbg !17239
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pcidev57, align 8, !dbg !17239
  %revision58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 12, !dbg !17240
  %37 = load i8, i8* %revision58, align 8, !dbg !17240
  %conv59 = zext i8 %37 to i32, !dbg !17238
  %cmp60 = icmp sle i32 %conv59, 16, !dbg !17241
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !17242

if.then62:                                        ; preds = %land.lhs.true56
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17243
  %ad_type63 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 6, !dbg !17245
  store i16 7, i16* %ad_type63, align 8, !dbg !17246
  br label %if.end64, !dbg !17247

if.end64:                                         ; preds = %if.then62, %land.lhs.true56, %if.else50
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then28
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then17
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then9
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then
  br label %sw.epilog98, !dbg !17248

sw.bb70:                                          ; preds = %entry
  %39 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17249
  %pcidev71 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %39, i32 0, i32 44, !dbg !17250
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pcidev71, align 8, !dbg !17250
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 10, !dbg !17251
  %41 = load i16, i16* %subsystem_device, align 2, !dbg !17251
  %conv72 = zext i16 %41 to i32, !dbg !17249
  switch i32 %conv72, label %sw.epilog [
    i32 447, label %sw.bb73
    i32 446, label %sw.bb75
    i32 520, label %sw.bb77
    i32 526, label %sw.bb79
    i32 601, label %sw.bb81
    i32 600, label %sw.bb83
  ], !dbg !17252

sw.bb73:                                          ; preds = %sw.bb70
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17253
  %ad_type74 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 6, !dbg !17255
  store i16 9, i16* %ad_type74, align 8, !dbg !17256
  br label %sw.epilog, !dbg !17257

sw.bb75:                                          ; preds = %sw.bb70
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17258
  %ad_type76 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 6, !dbg !17259
  store i16 8, i16* %ad_type76, align 8, !dbg !17260
  br label %sw.epilog, !dbg !17261

sw.bb77:                                          ; preds = %sw.bb70
  %44 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17262
  %ad_type78 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 6, !dbg !17263
  store i16 10, i16* %ad_type78, align 8, !dbg !17264
  br label %sw.epilog, !dbg !17265

sw.bb79:                                          ; preds = %sw.bb70
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17266
  %ad_type80 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 6, !dbg !17267
  store i16 11, i16* %ad_type80, align 8, !dbg !17268
  br label %sw.epilog, !dbg !17269

sw.bb81:                                          ; preds = %sw.bb70
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17270
  %ad_type82 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 6, !dbg !17271
  store i16 12, i16* %ad_type82, align 8, !dbg !17272
  br label %sw.epilog, !dbg !17273

sw.bb83:                                          ; preds = %sw.bb70
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17274
  %ad_type84 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 6, !dbg !17275
  store i16 13, i16* %ad_type84, align 8, !dbg !17276
  br label %sw.epilog, !dbg !17277

sw.epilog:                                        ; preds = %sw.bb70, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73
  br label %sw.epilog98, !dbg !17278

sw.bb85:                                          ; preds = %entry
  %48 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17279
  %pcidev86 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %48, i32 0, i32 44, !dbg !17280
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pcidev86, align 8, !dbg !17280
  %subsystem_device87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 10, !dbg !17281
  %50 = load i16, i16* %subsystem_device87, align 2, !dbg !17281
  %conv88 = zext i16 %50 to i32, !dbg !17279
  switch i32 %conv88, label %sw.epilog97 [
    i32 633, label %sw.bb89
    i32 652, label %sw.bb91
    i32 654, label %sw.bb93
    i32 655, label %sw.bb95
  ], !dbg !17282

sw.bb89:                                          ; preds = %sw.bb85
  %51 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17283
  %ad_type90 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %51, i32 0, i32 6, !dbg !17285
  store i16 14, i16* %ad_type90, align 8, !dbg !17286
  br label %sw.epilog97, !dbg !17287

sw.bb91:                                          ; preds = %sw.bb85
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17288
  %ad_type92 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 6, !dbg !17289
  store i16 15, i16* %ad_type92, align 8, !dbg !17290
  br label %sw.epilog97, !dbg !17291

sw.bb93:                                          ; preds = %sw.bb85
  %53 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17292
  %ad_type94 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %53, i32 0, i32 6, !dbg !17293
  store i16 17, i16* %ad_type94, align 8, !dbg !17294
  br label %sw.epilog97, !dbg !17295

sw.bb95:                                          ; preds = %sw.bb85
  %54 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17296
  %ad_type96 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %54, i32 0, i32 6, !dbg !17297
  store i16 18, i16* %ad_type96, align 8, !dbg !17298
  br label %sw.epilog97, !dbg !17299

sw.epilog97:                                      ; preds = %sw.bb85, %sw.bb95, %sw.bb93, %sw.bb91, %sw.bb89
  br label %sw.epilog98, !dbg !17300

sw.epilog98:                                      ; preds = %entry, %sw.epilog97, %sw.epilog, %if.end69
  ret void, !dbg !17301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_read_subsystem_parameters(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !17302 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17303, metadata !DIExpression()), !dbg !17304
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !17305, metadata !DIExpression()), !dbg !17306
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !17307, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17309, metadata !DIExpression()), !dbg !17310
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17311
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !17312
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !17312
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17313
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !17314
  %3 = load i32, i32* %max_cmds, align 8, !dbg !17314
  %sub = sub i32 %3, 1, !dbg !17315
  %idxprom = zext i32 %sub to i64, !dbg !17311
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !17311
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !17316
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17317
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17318
  call void @ips_init_scb(%struct.ips_ha* %4, %struct.ips_scb* %5) #11, !dbg !17319
  %6 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17320
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17321
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 8, !dbg !17322
  store i32 %6, i32* %timeout, align 4, !dbg !17323
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17324
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !17325
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !17324
  store i8 64, i8* %arrayidx1, align 1, !dbg !17326
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17327
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 0, !dbg !17328
  %basic_io = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_IO_CMD*, !dbg !17329
  %op_code = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io, i32 0, i32 0, !dbg !17330
  store i8 64, i8* %op_code, align 8, !dbg !17331
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17332
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17332
  %scbs2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !17332
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs2, align 8, !dbg !17332
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %10 to i64, !dbg !17332
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %12 to i64, !dbg !17332
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17332
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !17332
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !17332
  %conv3 = trunc i32 %conv to i8, !dbg !17332
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17333
  %cmd4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !17334
  %basic_io5 = bitcast %union.IPS_HOST_COMMAND* %cmd4 to %struct.IPS_IO_CMD*, !dbg !17335
  %command_id = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io5, i32 0, i32 1, !dbg !17336
  store i8 %conv3, i8* %command_id, align 1, !dbg !17337
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17338
  %cmd6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !17339
  %basic_io7 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to %struct.IPS_IO_CMD*, !dbg !17340
  %sg_count = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io7, i32 0, i32 3, !dbg !17341
  store i8 0, i8* %sg_count, align 1, !dbg !17342
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17343
  %cmd8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 0, !dbg !17344
  %basic_io9 = bitcast %union.IPS_HOST_COMMAND* %cmd8 to %struct.IPS_IO_CMD*, !dbg !17345
  %lba = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io9, i32 0, i32 4, !dbg !17346
  store i32 0, i32* %lba, align 4, !dbg !17347
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17348
  %cmd10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 0, !dbg !17349
  %basic_io11 = bitcast %union.IPS_HOST_COMMAND* %cmd10 to %struct.IPS_IO_CMD*, !dbg !17350
  %sector_count = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io11, i32 0, i32 6, !dbg !17351
  store i16 0, i16* %sector_count, align 4, !dbg !17352
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17353
  %cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !17354
  %basic_io13 = bitcast %union.IPS_HOST_COMMAND* %cmd12 to %struct.IPS_IO_CMD*, !dbg !17355
  %log_drv = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io13, i32 0, i32 2, !dbg !17356
  store i8 0, i8* %log_drv, align 2, !dbg !17357
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17358
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 13, !dbg !17359
  store i32 512, i32* %data_len, align 4, !dbg !17360
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17361
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 36, !dbg !17362
  %20 = load i64, i64* %ioctl_busaddr, align 8, !dbg !17362
  %conv14 = trunc i64 %20 to i32, !dbg !17361
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17363
  %cmd15 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %21, i32 0, i32 0, !dbg !17364
  %basic_io16 = bitcast %union.IPS_HOST_COMMAND* %cmd15 to %struct.IPS_IO_CMD*, !dbg !17365
  %sg_addr = getelementptr inbounds %struct.IPS_IO_CMD, %struct.IPS_IO_CMD* %basic_io16, i32 0, i32 5, !dbg !17366
  store i32 %conv14, i32* %sg_addr, align 8, !dbg !17367
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17368
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17370
  %24 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17371
  %25 = load i32, i32* %intr.addr, align 4, !dbg !17372
  %call = call i32 @ips_send_wait(%struct.ips_ha* %22, %struct.ips_scb* %23, i32 %24, i32 %25) #11, !dbg !17373
  store i32 %call, i32* %ret, align 4, !dbg !17374
  %cmp = icmp eq i32 %call, 4, !dbg !17375
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17376

lor.lhs.false:                                    ; preds = %entry
  %26 = load i32, i32* %ret, align 4, !dbg !17377
  %cmp18 = icmp eq i32 %26, 2, !dbg !17378
  br i1 %cmp18, label %if.then, label %lor.lhs.false20, !dbg !17379

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17380
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %27, i32 0, i32 9, !dbg !17381
  %28 = load i8, i8* %basic_status, align 8, !dbg !17381
  %conv21 = zext i8 %28 to i32, !dbg !17380
  %and = and i32 %conv21, 15, !dbg !17382
  %cmp22 = icmp sgt i32 %and, 1, !dbg !17383
  br i1 %cmp22, label %if.then, label %if.end, !dbg !17384

if.then:                                          ; preds = %lor.lhs.false20, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !17385
  br label %return, !dbg !17385

if.end:                                           ; preds = %lor.lhs.false20
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17386
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %29, i32 0, i32 24, !dbg !17387
  %30 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !17387
  %31 = bitcast %struct._IPS_SUBSYS* %30 to i8*, !dbg !17388
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17389
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %32, i32 0, i32 25, !dbg !17390
  %33 = load i8*, i8** %ioctl_data, align 8, !dbg !17390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 1 %33, i64 512, i1 false), !dbg !17388
  store i32 1, i32* %retval, align 4, !dbg !17391
  br label %return, !dbg !17391

return:                                           ; preds = %if.end, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !17392
  ret i32 %34, !dbg !17392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_write_driver_status(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !17393 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17394, metadata !DIExpression()), !dbg !17395
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !17396, metadata !DIExpression()), !dbg !17397
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17398
  %1 = load i32, i32* %intr.addr, align 4, !dbg !17400
  %call = call i32 @ips_readwrite_page5(%struct.ips_ha* %0, i32 0, i32 %1) #11, !dbg !17401
  %tobool = icmp ne i32 %call, 0, !dbg !17401
  br i1 %tobool, label %if.end, label %if.then, !dbg !17402

if.then:                                          ; preds = %entry
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17403
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 44, !dbg !17403
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !17403
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !17403
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)) #12, !dbg !17403
  store i32 0, i32* %retval, align 4, !dbg !17405
  br label %return, !dbg !17405

if.end:                                           ; preds = %entry
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17406
  %nvram = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 23, !dbg !17406
  %5 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !17406
  %signature = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %5, i32 0, i32 0, !dbg !17406
  %6 = load i32, i32* %signature, align 4, !dbg !17406
  %cmp = icmp ne i32 %6, -2245735, !dbg !17408
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17409

if.then1:                                         ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17410
  %nvram2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 23, !dbg !17412
  %8 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram2, align 8, !dbg !17412
  %signature3 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %8, i32 0, i32 0, !dbg !17413
  store i32 -2245735, i32* %signature3, align 4, !dbg !17414
  br label %if.end4, !dbg !17415

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17416
  %10 = load i32, i32* %intr.addr, align 4, !dbg !17417
  call void @ips_get_bios_version(%struct.ips_ha* %9, i32 %10) #11, !dbg !17418
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17419
  %nvram5 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 23, !dbg !17420
  %12 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram5, align 8, !dbg !17420
  %operating_system = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %12, i32 0, i32 8, !dbg !17421
  store i8 7, i8* %operating_system, align 1, !dbg !17422
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17423
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 6, !dbg !17424
  %14 = load i16, i16* %ad_type, align 8, !dbg !17424
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17425
  %nvram6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 23, !dbg !17426
  %16 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram6, align 8, !dbg !17426
  %adapter_type = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %16, i32 0, i32 3, !dbg !17427
  store i16 %14, i16* %adapter_type, align 2, !dbg !17428
  %17 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17429
  %nvram7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %17, i32 0, i32 23, !dbg !17430
  %18 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram7, align 8, !dbg !17430
  %driver_high = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %18, i32 0, i32 9, !dbg !17431
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %driver_high, i64 0, i64 0, !dbg !17432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i64 4, i1 false), !dbg !17432
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17433
  %nvram8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 23, !dbg !17434
  %20 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram8, align 8, !dbg !17434
  %driver_low = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %20, i32 0, i32 10, !dbg !17435
  %arraydecay9 = getelementptr inbounds [4 x i8], [4 x i8]* %driver_low, i64 0, i64 0, !dbg !17436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay9, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i64 4, i1 false), !dbg !17436
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17437
  %nvram10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %21, i32 0, i32 23, !dbg !17438
  %22 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram10, align 8, !dbg !17438
  %bios_high = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %22, i32 0, i32 13, !dbg !17439
  %arraydecay11 = getelementptr inbounds [4 x i8], [4 x i8]* %bios_high, i64 0, i64 0, !dbg !17440
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17441
  %bios_version = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 37, !dbg !17442
  %arraydecay12 = getelementptr inbounds [8 x i8], [8 x i8]* %bios_version, i64 0, i64 0, !dbg !17440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay11, i8* align 8 %arraydecay12, i64 4, i1 false), !dbg !17440
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17443
  %nvram13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 23, !dbg !17444
  %25 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram13, align 8, !dbg !17444
  %bios_low = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %25, i32 0, i32 14, !dbg !17445
  %arraydecay14 = getelementptr inbounds [4 x i8], [4 x i8]* %bios_low, i64 0, i64 0, !dbg !17446
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17447
  %bios_version15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 37, !dbg !17448
  %arraydecay16 = getelementptr inbounds [8 x i8], [8 x i8]* %bios_version15, i64 0, i64 0, !dbg !17447
  %add.ptr = getelementptr i8, i8* %arraydecay16, i64 4, !dbg !17449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay14, i8* align 1 %add.ptr, i64 4, i1 false), !dbg !17446
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17450
  %nvram17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 23, !dbg !17451
  %28 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram17, align 8, !dbg !17451
  %versioning = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %28, i32 0, i32 5, !dbg !17452
  store i8 0, i8* %versioning, align 4, !dbg !17453
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17454
  %30 = load i32, i32* %intr.addr, align 4, !dbg !17456
  %call18 = call i32 @ips_readwrite_page5(%struct.ips_ha* %29, i32 1, i32 %30) #11, !dbg !17457
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17457
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !17458

if.then20:                                        ; preds = %if.end4
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17459
  %pcidev21 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 44, !dbg !17459
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pcidev21, align 8, !dbg !17459
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 41, !dbg !17459
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !17459
  store i32 0, i32* %retval, align 4, !dbg !17461
  br label %return, !dbg !17461

if.end23:                                         ; preds = %if.end4
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17462
  %nvram24 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 23, !dbg !17463
  %34 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram24, align 8, !dbg !17463
  %adapter_slot = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %34, i32 0, i32 2, !dbg !17464
  %35 = load i8, i8* %adapter_slot, align 1, !dbg !17464
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17465
  %slot_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 34, !dbg !17466
  store i8 %35, i8* %slot_num, align 8, !dbg !17467
  store i32 1, i32* %retval, align 4, !dbg !17468
  br label %return, !dbg !17468

return:                                           ; preds = %if.end23, %if.then20, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !17469
  ret i32 %37, !dbg !17469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_clear_adapter(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !17470 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17471, metadata !DIExpression()), !dbg !17472
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !17473, metadata !DIExpression()), !dbg !17474
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !17475, metadata !DIExpression()), !dbg !17476
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17477, metadata !DIExpression()), !dbg !17478
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17479
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !17480
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !17480
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17481
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !17482
  %3 = load i32, i32* %max_cmds, align 8, !dbg !17482
  %sub = sub i32 %3, 1, !dbg !17483
  %idxprom = zext i32 %sub to i64, !dbg !17479
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !17479
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !17484
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17485
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17486
  call void @ips_init_scb(%struct.ips_ha* %4, %struct.ips_scb* %5) #11, !dbg !17487
  %6 = load i32, i32* @ips_reset_timeout, align 4, !dbg !17488
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17489
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 8, !dbg !17490
  store i32 %6, i32* %timeout, align 4, !dbg !17491
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17492
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !17493
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !17492
  store i8 88, i8* %arrayidx1, align 1, !dbg !17494
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17495
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 0, !dbg !17496
  %config_sync = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_CS_CMD*, !dbg !17497
  %op_code = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync, i32 0, i32 0, !dbg !17498
  store i8 88, i8* %op_code, align 8, !dbg !17499
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17500
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17500
  %scbs2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !17500
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs2, align 8, !dbg !17500
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %10 to i64, !dbg !17500
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %12 to i64, !dbg !17500
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17500
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !17500
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !17500
  %conv3 = trunc i32 %conv to i8, !dbg !17500
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17501
  %cmd4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !17502
  %config_sync5 = bitcast %union.IPS_HOST_COMMAND* %cmd4 to %struct.IPS_CS_CMD*, !dbg !17503
  %command_id = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync5, i32 0, i32 1, !dbg !17504
  store i8 %conv3, i8* %command_id, align 1, !dbg !17505
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17506
  %cmd6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !17507
  %config_sync7 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to %struct.IPS_CS_CMD*, !dbg !17508
  %channel = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync7, i32 0, i32 2, !dbg !17509
  store i8 0, i8* %channel, align 2, !dbg !17510
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17511
  %cmd8 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %15, i32 0, i32 0, !dbg !17512
  %config_sync9 = bitcast %union.IPS_HOST_COMMAND* %cmd8 to %struct.IPS_CS_CMD*, !dbg !17513
  %source_target = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync9, i32 0, i32 3, !dbg !17514
  store i8 48, i8* %source_target, align 1, !dbg !17515
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17516
  %cmd10 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 0, !dbg !17517
  %config_sync11 = bitcast %union.IPS_HOST_COMMAND* %cmd10 to %struct.IPS_CS_CMD*, !dbg !17518
  %reserved = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync11, i32 0, i32 4, !dbg !17519
  store i32 0, i32* %reserved, align 4, !dbg !17520
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17521
  %cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !17522
  %config_sync13 = bitcast %union.IPS_HOST_COMMAND* %cmd12 to %struct.IPS_CS_CMD*, !dbg !17523
  %reserved2 = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync13, i32 0, i32 5, !dbg !17524
  store i32 0, i32* %reserved2, align 8, !dbg !17525
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17526
  %cmd14 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 0, !dbg !17527
  %config_sync15 = bitcast %union.IPS_HOST_COMMAND* %cmd14 to %struct.IPS_CS_CMD*, !dbg !17528
  %reserved3 = getelementptr inbounds %struct.IPS_CS_CMD, %struct.IPS_CS_CMD* %config_sync15, i32 0, i32 6, !dbg !17529
  store i32 0, i32* %reserved3, align 4, !dbg !17530
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17531
  %20 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17533
  %21 = load i32, i32* @ips_reset_timeout, align 4, !dbg !17534
  %22 = load i32, i32* %intr.addr, align 4, !dbg !17535
  %call = call i32 @ips_send_wait(%struct.ips_ha* %19, %struct.ips_scb* %20, i32 %21, i32 %22) #11, !dbg !17536
  store i32 %call, i32* %ret, align 4, !dbg !17537
  %cmp = icmp eq i32 %call, 4, !dbg !17538
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17539

lor.lhs.false:                                    ; preds = %entry
  %23 = load i32, i32* %ret, align 4, !dbg !17540
  %cmp17 = icmp eq i32 %23, 2, !dbg !17541
  br i1 %cmp17, label %if.then, label %lor.lhs.false19, !dbg !17542

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17543
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 9, !dbg !17544
  %25 = load i8, i8* %basic_status, align 8, !dbg !17544
  %conv20 = zext i8 %25 to i32, !dbg !17543
  %and = and i32 %conv20, 15, !dbg !17545
  %cmp21 = icmp sgt i32 %and, 1, !dbg !17546
  br i1 %cmp21, label %if.then, label %if.end, !dbg !17547

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !17548
  br label %return, !dbg !17548

if.end:                                           ; preds = %lor.lhs.false19
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17549
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17550
  call void @ips_init_scb(%struct.ips_ha* %26, %struct.ips_scb* %27) #11, !dbg !17551
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17552
  %cdb23 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 5, !dbg !17553
  %arrayidx24 = getelementptr [12 x i8], [12 x i8]* %cdb23, i64 0, i64 0, !dbg !17552
  store i8 23, i8* %arrayidx24, align 1, !dbg !17554
  %29 = load i32, i32* @ips_reset_timeout, align 4, !dbg !17555
  %30 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17556
  %timeout25 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %30, i32 0, i32 8, !dbg !17557
  store i32 %29, i32* %timeout25, align 4, !dbg !17558
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17559
  %cmd26 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 0, !dbg !17560
  %unlock_stripe = bitcast %union.IPS_HOST_COMMAND* %cmd26 to %struct.IPS_US_CMD*, !dbg !17561
  %op_code27 = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe, i32 0, i32 0, !dbg !17562
  store i8 23, i8* %op_code27, align 8, !dbg !17563
  %32 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17564
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17564
  %scbs28 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 12, !dbg !17564
  %34 = load %struct.ips_scb*, %struct.ips_scb** %scbs28, align 8, !dbg !17564
  %sub.ptr.lhs.cast29 = ptrtoint %struct.ips_scb* %32 to i64, !dbg !17564
  %sub.ptr.rhs.cast30 = ptrtoint %struct.ips_scb* %34 to i64, !dbg !17564
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30, !dbg !17564
  %sub.ptr.div32 = sdiv exact i64 %sub.ptr.sub31, 216, !dbg !17564
  %conv33 = trunc i64 %sub.ptr.div32 to i32, !dbg !17564
  %conv34 = trunc i32 %conv33 to i8, !dbg !17564
  %35 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17565
  %cmd35 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %35, i32 0, i32 0, !dbg !17566
  %unlock_stripe36 = bitcast %union.IPS_HOST_COMMAND* %cmd35 to %struct.IPS_US_CMD*, !dbg !17567
  %command_id37 = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe36, i32 0, i32 1, !dbg !17568
  store i8 %conv34, i8* %command_id37, align 1, !dbg !17569
  %36 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17570
  %cmd38 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %36, i32 0, i32 0, !dbg !17571
  %unlock_stripe39 = bitcast %union.IPS_HOST_COMMAND* %cmd38 to %struct.IPS_US_CMD*, !dbg !17572
  %log_drv = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe39, i32 0, i32 2, !dbg !17573
  store i8 0, i8* %log_drv, align 2, !dbg !17574
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17575
  %cmd40 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %37, i32 0, i32 0, !dbg !17576
  %unlock_stripe41 = bitcast %union.IPS_HOST_COMMAND* %cmd40 to %struct.IPS_US_CMD*, !dbg !17577
  %control = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe41, i32 0, i32 3, !dbg !17578
  store i8 -1, i8* %control, align 1, !dbg !17579
  %38 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17580
  %cmd42 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %38, i32 0, i32 0, !dbg !17581
  %unlock_stripe43 = bitcast %union.IPS_HOST_COMMAND* %cmd42 to %struct.IPS_US_CMD*, !dbg !17582
  %reserved44 = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe43, i32 0, i32 4, !dbg !17583
  store i32 0, i32* %reserved44, align 4, !dbg !17584
  %39 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17585
  %cmd45 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %39, i32 0, i32 0, !dbg !17586
  %unlock_stripe46 = bitcast %union.IPS_HOST_COMMAND* %cmd45 to %struct.IPS_US_CMD*, !dbg !17587
  %reserved247 = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe46, i32 0, i32 5, !dbg !17588
  store i32 0, i32* %reserved247, align 8, !dbg !17589
  %40 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17590
  %cmd48 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %40, i32 0, i32 0, !dbg !17591
  %unlock_stripe49 = bitcast %union.IPS_HOST_COMMAND* %cmd48 to %struct.IPS_US_CMD*, !dbg !17592
  %reserved350 = getelementptr inbounds %struct.IPS_US_CMD, %struct.IPS_US_CMD* %unlock_stripe49, i32 0, i32 6, !dbg !17593
  store i32 0, i32* %reserved350, align 4, !dbg !17594
  %41 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17595
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17597
  %43 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17598
  %44 = load i32, i32* %intr.addr, align 4, !dbg !17599
  %call51 = call i32 @ips_send_wait(%struct.ips_ha* %41, %struct.ips_scb* %42, i32 %43, i32 %44) #11, !dbg !17600
  store i32 %call51, i32* %ret, align 4, !dbg !17601
  %cmp52 = icmp eq i32 %call51, 4, !dbg !17602
  br i1 %cmp52, label %if.then63, label %lor.lhs.false54, !dbg !17603

lor.lhs.false54:                                  ; preds = %if.end
  %45 = load i32, i32* %ret, align 4, !dbg !17604
  %cmp55 = icmp eq i32 %45, 2, !dbg !17605
  br i1 %cmp55, label %if.then63, label %lor.lhs.false57, !dbg !17606

lor.lhs.false57:                                  ; preds = %lor.lhs.false54
  %46 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17607
  %basic_status58 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %46, i32 0, i32 9, !dbg !17608
  %47 = load i8, i8* %basic_status58, align 8, !dbg !17608
  %conv59 = zext i8 %47 to i32, !dbg !17607
  %and60 = and i32 %conv59, 15, !dbg !17609
  %cmp61 = icmp sgt i32 %and60, 1, !dbg !17610
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !17611

if.then63:                                        ; preds = %lor.lhs.false57, %lor.lhs.false54, %if.end
  store i32 0, i32* %retval, align 4, !dbg !17612
  br label %return, !dbg !17612

if.end64:                                         ; preds = %lor.lhs.false57
  store i32 1, i32* %retval, align 4, !dbg !17613
  br label %return, !dbg !17613

return:                                           ; preds = %if.end64, %if.then63, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !17614
  ret i32 %48, !dbg !17614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_readwrite_page5(%struct.ips_ha* %ha, i32 %write, i32 %intr) #0 !dbg !17615 {
entry:
  %retval = alloca i32, align 4
  %ha.addr = alloca %struct.ips_ha*, align 8
  %write.addr = alloca i32, align 4
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17616, metadata !DIExpression()), !dbg !17617
  store i32 %write, i32* %write.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write.addr, metadata !17618, metadata !DIExpression()), !dbg !17619
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !17620, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !17622, metadata !DIExpression()), !dbg !17623
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17624, metadata !DIExpression()), !dbg !17625
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17626
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 12, !dbg !17627
  %1 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !17627
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17628
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %2, i32 0, i32 9, !dbg !17629
  %3 = load i32, i32* %max_cmds, align 8, !dbg !17629
  %sub = sub i32 %3, 1, !dbg !17630
  %idxprom = zext i32 %sub to i64, !dbg !17626
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %1, i64 %idxprom, !dbg !17626
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !17631
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17632
  %5 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17633
  call void @ips_init_scb(%struct.ips_ha* %4, %struct.ips_scb* %5) #11, !dbg !17634
  %6 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17635
  %7 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17636
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %7, i32 0, i32 8, !dbg !17637
  store i32 %6, i32* %timeout, align 4, !dbg !17638
  %8 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17639
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %8, i32 0, i32 5, !dbg !17640
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !17639
  store i8 -68, i8* %arrayidx1, align 1, !dbg !17641
  %9 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17642
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %9, i32 0, i32 0, !dbg !17643
  %nvram = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_NVRAM_CMD*, !dbg !17644
  %op_code = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram, i32 0, i32 0, !dbg !17645
  store i8 -68, i8* %op_code, align 8, !dbg !17646
  %10 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17647
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17647
  %scbs2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !17647
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs2, align 8, !dbg !17647
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %10 to i64, !dbg !17647
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %12 to i64, !dbg !17647
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17647
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !17647
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !17647
  %conv3 = trunc i32 %conv to i8, !dbg !17647
  %13 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17648
  %cmd4 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %13, i32 0, i32 0, !dbg !17649
  %nvram5 = bitcast %union.IPS_HOST_COMMAND* %cmd4 to %struct.IPS_NVRAM_CMD*, !dbg !17650
  %command_id = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram5, i32 0, i32 1, !dbg !17651
  store i8 %conv3, i8* %command_id, align 1, !dbg !17652
  %14 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17653
  %cmd6 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %14, i32 0, i32 0, !dbg !17654
  %nvram7 = bitcast %union.IPS_HOST_COMMAND* %cmd6 to %struct.IPS_NVRAM_CMD*, !dbg !17655
  %page = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram7, i32 0, i32 2, !dbg !17656
  store i8 5, i8* %page, align 2, !dbg !17657
  %15 = load i32, i32* %write.addr, align 4, !dbg !17658
  %conv8 = trunc i32 %15 to i8, !dbg !17658
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17659
  %cmd9 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %16, i32 0, i32 0, !dbg !17660
  %nvram10 = bitcast %union.IPS_HOST_COMMAND* %cmd9 to %struct.IPS_NVRAM_CMD*, !dbg !17661
  %write11 = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram10, i32 0, i32 3, !dbg !17662
  store i8 %conv8, i8* %write11, align 1, !dbg !17663
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17664
  %cmd12 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 0, !dbg !17665
  %nvram13 = bitcast %union.IPS_HOST_COMMAND* %cmd12 to %struct.IPS_NVRAM_CMD*, !dbg !17666
  %reserved = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram13, i32 0, i32 4, !dbg !17667
  store i32 0, i32* %reserved, align 4, !dbg !17668
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17669
  %cmd14 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 0, !dbg !17670
  %nvram15 = bitcast %union.IPS_HOST_COMMAND* %cmd14 to %struct.IPS_NVRAM_CMD*, !dbg !17671
  %reserved2 = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram15, i32 0, i32 6, !dbg !17672
  store i32 0, i32* %reserved2, align 4, !dbg !17673
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17674
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 13, !dbg !17675
  store i32 128, i32* %data_len, align 4, !dbg !17676
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17677
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 36, !dbg !17678
  %21 = load i64, i64* %ioctl_busaddr, align 8, !dbg !17678
  %conv16 = trunc i64 %21 to i32, !dbg !17677
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17679
  %cmd17 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %22, i32 0, i32 0, !dbg !17680
  %nvram18 = bitcast %union.IPS_HOST_COMMAND* %cmd17 to %struct.IPS_NVRAM_CMD*, !dbg !17681
  %buffer_addr = getelementptr inbounds %struct.IPS_NVRAM_CMD, %struct.IPS_NVRAM_CMD* %nvram18, i32 0, i32 5, !dbg !17682
  store i32 %conv16, i32* %buffer_addr, align 8, !dbg !17683
  %23 = load i32, i32* %write.addr, align 4, !dbg !17684
  %tobool = icmp ne i32 %23, 0, !dbg !17684
  br i1 %tobool, label %if.then, label %if.end, !dbg !17686

if.then:                                          ; preds = %entry
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17687
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 25, !dbg !17688
  %25 = load i8*, i8** %ioctl_data, align 8, !dbg !17688
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17689
  %nvram19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 23, !dbg !17690
  %27 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram19, align 8, !dbg !17690
  %28 = bitcast %struct.IPS_NVRAM_P5* %27 to i8*, !dbg !17691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 4 %28, i64 128, i1 false), !dbg !17691
  br label %if.end, !dbg !17691

if.end:                                           ; preds = %if.then, %entry
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17692
  %30 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17694
  %31 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17695
  %32 = load i32, i32* %intr.addr, align 4, !dbg !17696
  %call = call i32 @ips_send_wait(%struct.ips_ha* %29, %struct.ips_scb* %30, i32 %31, i32 %32) #11, !dbg !17697
  store i32 %call, i32* %ret, align 4, !dbg !17698
  %cmp = icmp eq i32 %call, 4, !dbg !17699
  br i1 %cmp, label %if.then27, label %lor.lhs.false, !dbg !17700

lor.lhs.false:                                    ; preds = %if.end
  %33 = load i32, i32* %ret, align 4, !dbg !17701
  %cmp21 = icmp eq i32 %33, 2, !dbg !17702
  br i1 %cmp21, label %if.then27, label %lor.lhs.false23, !dbg !17703

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %34 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17704
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %34, i32 0, i32 9, !dbg !17705
  %35 = load i8, i8* %basic_status, align 8, !dbg !17705
  %conv24 = zext i8 %35 to i32, !dbg !17704
  %and = and i32 %conv24, 15, !dbg !17706
  %cmp25 = icmp sgt i32 %and, 1, !dbg !17707
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !17708

if.then27:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %if.end
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17709
  %nvram28 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 23, !dbg !17711
  %37 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram28, align 8, !dbg !17711
  %38 = bitcast %struct.IPS_NVRAM_P5* %37 to i8*, !dbg !17712
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 128, i1 false), !dbg !17712
  store i32 0, i32* %retval, align 4, !dbg !17713
  br label %return, !dbg !17713

if.end29:                                         ; preds = %lor.lhs.false23
  %39 = load i32, i32* %write.addr, align 4, !dbg !17714
  %tobool30 = icmp ne i32 %39, 0, !dbg !17714
  br i1 %tobool30, label %if.end34, label %if.then31, !dbg !17716

if.then31:                                        ; preds = %if.end29
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17717
  %nvram32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 23, !dbg !17718
  %41 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram32, align 8, !dbg !17718
  %42 = bitcast %struct.IPS_NVRAM_P5* %41 to i8*, !dbg !17719
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17720
  %ioctl_data33 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 25, !dbg !17721
  %44 = load i8*, i8** %ioctl_data33, align 8, !dbg !17721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 1 %44, i64 128, i1 false), !dbg !17719
  br label %if.end34, !dbg !17719

if.end34:                                         ; preds = %if.then31, %if.end29
  store i32 1, i32* %retval, align 4, !dbg !17722
  br label %return, !dbg !17722

return:                                           ; preds = %if.end34, %if.then27
  %45 = load i32, i32* %retval, align 4, !dbg !17723
  ret i32 %45, !dbg !17723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_get_bios_version(%struct.ips_ha* %ha, i32 %intr) #0 !dbg !17724 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %intr.addr = alloca i32, align 4
  %scb = alloca %struct.ips_scb*, align 8
  %ret = alloca i32, align 4
  %major = alloca i8, align 1
  %minor = alloca i8, align 1
  %subminor = alloca i8, align 1
  %buffer = alloca i8*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !17725, metadata !DIExpression()), !dbg !17726
  store i32 %intr, i32* %intr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intr.addr, metadata !17727, metadata !DIExpression()), !dbg !17728
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !17729, metadata !DIExpression()), !dbg !17730
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17731, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.declare(metadata i8* %major, metadata !17733, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.declare(metadata i8* %minor, metadata !17735, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.declare(metadata i8* %subminor, metadata !17737, metadata !DIExpression()), !dbg !17738
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !17739, metadata !DIExpression()), !dbg !17740
  store i8 0, i8* %major, align 1, !dbg !17741
  store i8 0, i8* %minor, align 1, !dbg !17742
  %0 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17743
  %bios_version = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %0, i32 0, i32 37, !dbg !17744
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %bios_version, i64 0, i64 0, !dbg !17745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i64 8, i1 false), !dbg !17745
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17746
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 44, !dbg !17748
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !17748
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !17749
  %3 = load i16, i16* %device, align 2, !dbg !17749
  %conv = zext i16 %3 to i32, !dbg !17746
  %cmp = icmp eq i32 %conv, 46, !dbg !17750
  br i1 %cmp, label %if.then, label %if.else181, !dbg !17751

if.then:                                          ; preds = %entry
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 44, !dbg !17752
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pcidev2, align 8, !dbg !17752
  %device3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 8, !dbg !17752
  %6 = load i16, i16* %device3, align 2, !dbg !17752
  %conv4 = zext i16 %6 to i32, !dbg !17752
  %cmp5 = icmp eq i32 %conv4, 445, !dbg !17752
  br i1 %cmp5, label %cond.true43, label %lor.lhs.false, !dbg !17752

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev7 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 44, !dbg !17752
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pcidev7, align 8, !dbg !17752
  %device8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 8, !dbg !17752
  %9 = load i16, i16* %device8, align 2, !dbg !17752
  %conv9 = zext i16 %9 to i32, !dbg !17752
  %cmp10 = icmp eq i32 %conv9, 46, !dbg !17752
  br i1 %cmp10, label %land.lhs.true, label %cond.false, !dbg !17752

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 44, !dbg !17752
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pcidev12, align 8, !dbg !17752
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 12, !dbg !17752
  %12 = load i8, i8* %revision, align 8, !dbg !17752
  %conv13 = zext i8 %12 to i32, !dbg !17752
  %cmp14 = icmp sge i32 %conv13, 15, !dbg !17752
  br i1 %cmp14, label %land.lhs.true16, label %cond.false, !dbg !17752

land.lhs.true16:                                  ; preds = %land.lhs.true
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 44, !dbg !17752
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pcidev17, align 8, !dbg !17752
  %revision18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 12, !dbg !17752
  %15 = load i8, i8* %revision18, align 8, !dbg !17752
  %conv19 = zext i8 %15 to i32, !dbg !17752
  %cmp20 = icmp sle i32 %conv19, 16, !dbg !17752
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !17752

cond.true:                                        ; preds = %land.lhs.true16
  br i1 true, label %land.lhs.true42, label %lor.lhs.false22, !dbg !17752

cond.false:                                       ; preds = %land.lhs.true16, %land.lhs.true, %lor.lhs.false
  br i1 false, label %land.lhs.true42, label %lor.lhs.false22, !dbg !17752

lor.lhs.false22:                                  ; preds = %cond.false, %cond.true
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev23 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 44, !dbg !17752
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev23, align 8, !dbg !17752
  %device24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 8, !dbg !17752
  %18 = load i16, i16* %device24, align 2, !dbg !17752
  %conv25 = zext i16 %18 to i32, !dbg !17752
  %cmp26 = icmp eq i32 %conv25, 46, !dbg !17752
  br i1 %cmp26, label %land.lhs.true28, label %cond.false41, !dbg !17752

land.lhs.true28:                                  ; preds = %lor.lhs.false22
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev29 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %19, i32 0, i32 44, !dbg !17752
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pcidev29, align 8, !dbg !17752
  %revision30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 12, !dbg !17752
  %21 = load i8, i8* %revision30, align 8, !dbg !17752
  %conv31 = zext i8 %21 to i32, !dbg !17752
  %cmp32 = icmp sge i32 %conv31, 5, !dbg !17752
  br i1 %cmp32, label %land.lhs.true34, label %cond.false41, !dbg !17752

land.lhs.true34:                                  ; preds = %land.lhs.true28
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17752
  %pcidev35 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 44, !dbg !17752
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pcidev35, align 8, !dbg !17752
  %revision36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 12, !dbg !17752
  %24 = load i8, i8* %revision36, align 8, !dbg !17752
  %conv37 = zext i8 %24 to i32, !dbg !17752
  %cmp38 = icmp sle i32 %conv37, 13, !dbg !17752
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !17752

cond.true40:                                      ; preds = %land.lhs.true34
  br i1 true, label %land.lhs.true42, label %cond.false44, !dbg !17752

cond.false41:                                     ; preds = %land.lhs.true34, %land.lhs.true28, %lor.lhs.false22
  br i1 false, label %land.lhs.true42, label %cond.false44, !dbg !17752

land.lhs.true42:                                  ; preds = %cond.false41, %cond.true40, %cond.false, %cond.true
  %25 = load i32, i32* @ips_force_memio, align 4, !dbg !17752
  %tobool = icmp ne i32 %25, 0, !dbg !17752
  br i1 %tobool, label %cond.true43, label %cond.false44, !dbg !17755

cond.true43:                                      ; preds = %land.lhs.true42, %if.then
  br i1 true, label %if.then45, label %if.else, !dbg !17752

cond.false44:                                     ; preds = %land.lhs.true42, %cond.false41, %cond.true40
  br i1 false, label %if.then45, label %if.else, !dbg !17755

if.then45:                                        ; preds = %cond.false44, %cond.true43
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17756
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 41, !dbg !17758
  %27 = load i8*, i8** %mem_ptr, align 8, !dbg !17758
  %add.ptr = getelementptr i8, i8* %27, i64 24, !dbg !17759
  call void @writel(i32 0, i8* %add.ptr) #11, !dbg !17760
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17761
  %pcidev46 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %28, i32 0, i32 44, !dbg !17763
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pcidev46, align 8, !dbg !17763
  %revision47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 12, !dbg !17764
  %30 = load i8, i8* %revision47, align 8, !dbg !17764
  %conv48 = zext i8 %30 to i32, !dbg !17761
  %cmp49 = icmp eq i32 %conv48, 16, !dbg !17765
  br i1 %cmp49, label %if.then51, label %if.end, !dbg !17766

if.then51:                                        ; preds = %if.then45
  call void @__const_udelay(i64 107375) #11, !dbg !17767
  br label %if.end, !dbg !17772

if.end:                                           ; preds = %if.then51, %if.then45
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17773
  %mem_ptr52 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %31, i32 0, i32 41, !dbg !17775
  %32 = load i8*, i8** %mem_ptr52, align 8, !dbg !17775
  %add.ptr53 = getelementptr i8, i8* %32, i64 28, !dbg !17776
  %call = call zeroext i8 @readb(i8* %add.ptr53) #11, !dbg !17777
  %conv54 = zext i8 %call to i32, !dbg !17777
  %cmp55 = icmp ne i32 %conv54, 85, !dbg !17778
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !17779

if.then57:                                        ; preds = %if.end
  br label %return, !dbg !17780

if.end58:                                         ; preds = %if.end
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17781
  %mem_ptr59 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 41, !dbg !17782
  %34 = load i8*, i8** %mem_ptr59, align 8, !dbg !17782
  %add.ptr60 = getelementptr i8, i8* %34, i64 24, !dbg !17783
  call void @writel(i32 1, i8* %add.ptr60) #11, !dbg !17784
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17785
  %pcidev61 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 44, !dbg !17787
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pcidev61, align 8, !dbg !17787
  %revision62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 12, !dbg !17788
  %37 = load i8, i8* %revision62, align 8, !dbg !17788
  %conv63 = zext i8 %37 to i32, !dbg !17785
  %cmp64 = icmp eq i32 %conv63, 16, !dbg !17789
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !17790

if.then66:                                        ; preds = %if.end58
  call void @__const_udelay(i64 107375) #11, !dbg !17791
  br label %if.end67, !dbg !17796

if.end67:                                         ; preds = %if.then66, %if.end58
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17797
  %mem_ptr68 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 41, !dbg !17799
  %39 = load i8*, i8** %mem_ptr68, align 8, !dbg !17799
  %add.ptr69 = getelementptr i8, i8* %39, i64 28, !dbg !17800
  %call70 = call zeroext i8 @readb(i8* %add.ptr69) #11, !dbg !17801
  %conv71 = zext i8 %call70 to i32, !dbg !17801
  %cmp72 = icmp ne i32 %conv71, 170, !dbg !17802
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !17803

if.then74:                                        ; preds = %if.end67
  br label %return, !dbg !17804

if.end75:                                         ; preds = %if.end67
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17805
  %mem_ptr76 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 41, !dbg !17806
  %41 = load i8*, i8** %mem_ptr76, align 8, !dbg !17806
  %add.ptr77 = getelementptr i8, i8* %41, i64 24, !dbg !17807
  call void @writel(i32 511, i8* %add.ptr77) #11, !dbg !17808
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17809
  %pcidev78 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 44, !dbg !17811
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pcidev78, align 8, !dbg !17811
  %revision79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 12, !dbg !17812
  %44 = load i8, i8* %revision79, align 8, !dbg !17812
  %conv80 = zext i8 %44 to i32, !dbg !17809
  %cmp81 = icmp eq i32 %conv80, 16, !dbg !17813
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !17814

if.then83:                                        ; preds = %if.end75
  call void @__const_udelay(i64 107375) #11, !dbg !17815
  br label %if.end84, !dbg !17820

if.end84:                                         ; preds = %if.then83, %if.end75
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17821
  %mem_ptr85 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %45, i32 0, i32 41, !dbg !17822
  %46 = load i8*, i8** %mem_ptr85, align 8, !dbg !17822
  %add.ptr86 = getelementptr i8, i8* %46, i64 28, !dbg !17823
  %call87 = call zeroext i8 @readb(i8* %add.ptr86) #11, !dbg !17824
  store i8 %call87, i8* %major, align 1, !dbg !17825
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17826
  %mem_ptr88 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 41, !dbg !17827
  %48 = load i8*, i8** %mem_ptr88, align 8, !dbg !17827
  %add.ptr89 = getelementptr i8, i8* %48, i64 24, !dbg !17828
  call void @writel(i32 510, i8* %add.ptr89) #11, !dbg !17829
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17830
  %pcidev90 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 44, !dbg !17832
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pcidev90, align 8, !dbg !17832
  %revision91 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 12, !dbg !17833
  %51 = load i8, i8* %revision91, align 8, !dbg !17833
  %conv92 = zext i8 %51 to i32, !dbg !17830
  %cmp93 = icmp eq i32 %conv92, 16, !dbg !17834
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !17835

if.then95:                                        ; preds = %if.end84
  call void @__const_udelay(i64 107375) #11, !dbg !17836
  br label %if.end96, !dbg !17841

if.end96:                                         ; preds = %if.then95, %if.end84
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17842
  %mem_ptr97 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 41, !dbg !17843
  %53 = load i8*, i8** %mem_ptr97, align 8, !dbg !17843
  %add.ptr98 = getelementptr i8, i8* %53, i64 28, !dbg !17844
  %call99 = call zeroext i8 @readb(i8* %add.ptr98) #11, !dbg !17845
  store i8 %call99, i8* %minor, align 1, !dbg !17846
  %54 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17847
  %mem_ptr100 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %54, i32 0, i32 41, !dbg !17848
  %55 = load i8*, i8** %mem_ptr100, align 8, !dbg !17848
  %add.ptr101 = getelementptr i8, i8* %55, i64 24, !dbg !17849
  call void @writel(i32 509, i8* %add.ptr101) #11, !dbg !17850
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17851
  %pcidev102 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 44, !dbg !17853
  %57 = load %struct.pci_dev*, %struct.pci_dev** %pcidev102, align 8, !dbg !17853
  %revision103 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %57, i32 0, i32 12, !dbg !17854
  %58 = load i8, i8* %revision103, align 8, !dbg !17854
  %conv104 = zext i8 %58 to i32, !dbg !17851
  %cmp105 = icmp eq i32 %conv104, 16, !dbg !17855
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !17856

if.then107:                                       ; preds = %if.end96
  call void @__const_udelay(i64 107375) #11, !dbg !17857
  br label %if.end108, !dbg !17862

if.end108:                                        ; preds = %if.then107, %if.end96
  %59 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17863
  %mem_ptr109 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %59, i32 0, i32 41, !dbg !17864
  %60 = load i8*, i8** %mem_ptr109, align 8, !dbg !17864
  %add.ptr110 = getelementptr i8, i8* %60, i64 28, !dbg !17865
  %call111 = call zeroext i8 @readb(i8* %add.ptr110) #11, !dbg !17866
  store i8 %call111, i8* %subminor, align 1, !dbg !17867
  br label %if.end180, !dbg !17868

if.else:                                          ; preds = %cond.false44, %cond.true43
  %61 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17869
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %61, i32 0, i32 2, !dbg !17871
  %62 = load i32, i32* %io_addr, align 8, !dbg !17871
  %add = add i32 %62, 24, !dbg !17872
  call void @outl(i32 0, i32 %add) #11, !dbg !17873
  %63 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17874
  %pcidev112 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %63, i32 0, i32 44, !dbg !17876
  %64 = load %struct.pci_dev*, %struct.pci_dev** %pcidev112, align 8, !dbg !17876
  %revision113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %64, i32 0, i32 12, !dbg !17877
  %65 = load i8, i8* %revision113, align 8, !dbg !17877
  %conv114 = zext i8 %65 to i32, !dbg !17874
  %cmp115 = icmp eq i32 %conv114, 16, !dbg !17878
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !17879

if.then117:                                       ; preds = %if.else
  call void @__const_udelay(i64 107375) #11, !dbg !17880
  br label %if.end118, !dbg !17885

if.end118:                                        ; preds = %if.then117, %if.else
  %66 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17886
  %io_addr119 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %66, i32 0, i32 2, !dbg !17888
  %67 = load i32, i32* %io_addr119, align 8, !dbg !17888
  %add120 = add i32 %67, 28, !dbg !17889
  %call121 = call zeroext i8 @inb(i32 %add120) #11, !dbg !17890
  %conv122 = zext i8 %call121 to i32, !dbg !17890
  %cmp123 = icmp ne i32 %conv122, 85, !dbg !17891
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !17892

if.then125:                                       ; preds = %if.end118
  br label %return, !dbg !17893

if.end126:                                        ; preds = %if.end118
  %68 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17894
  %io_addr127 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %68, i32 0, i32 2, !dbg !17895
  %69 = load i32, i32* %io_addr127, align 8, !dbg !17895
  %add128 = add i32 %69, 24, !dbg !17896
  call void @outl(i32 1, i32 %add128) #11, !dbg !17897
  %70 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17898
  %pcidev129 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %70, i32 0, i32 44, !dbg !17900
  %71 = load %struct.pci_dev*, %struct.pci_dev** %pcidev129, align 8, !dbg !17900
  %revision130 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 12, !dbg !17901
  %72 = load i8, i8* %revision130, align 8, !dbg !17901
  %conv131 = zext i8 %72 to i32, !dbg !17898
  %cmp132 = icmp eq i32 %conv131, 16, !dbg !17902
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !17903

if.then134:                                       ; preds = %if.end126
  call void @__const_udelay(i64 107375) #11, !dbg !17904
  br label %if.end135, !dbg !17909

if.end135:                                        ; preds = %if.then134, %if.end126
  %73 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17910
  %io_addr136 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %73, i32 0, i32 2, !dbg !17912
  %74 = load i32, i32* %io_addr136, align 8, !dbg !17912
  %add137 = add i32 %74, 28, !dbg !17913
  %call138 = call zeroext i8 @inb(i32 %add137) #11, !dbg !17914
  %conv139 = zext i8 %call138 to i32, !dbg !17914
  %cmp140 = icmp ne i32 %conv139, 170, !dbg !17915
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !17916

if.then142:                                       ; preds = %if.end135
  br label %return, !dbg !17917

if.end143:                                        ; preds = %if.end135
  %75 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17918
  %io_addr144 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %75, i32 0, i32 2, !dbg !17919
  %76 = load i32, i32* %io_addr144, align 8, !dbg !17919
  %add145 = add i32 %76, 24, !dbg !17920
  call void @outl(i32 511, i32 %add145) #11, !dbg !17921
  %77 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17922
  %pcidev146 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %77, i32 0, i32 44, !dbg !17924
  %78 = load %struct.pci_dev*, %struct.pci_dev** %pcidev146, align 8, !dbg !17924
  %revision147 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %78, i32 0, i32 12, !dbg !17925
  %79 = load i8, i8* %revision147, align 8, !dbg !17925
  %conv148 = zext i8 %79 to i32, !dbg !17922
  %cmp149 = icmp eq i32 %conv148, 16, !dbg !17926
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !17927

if.then151:                                       ; preds = %if.end143
  call void @__const_udelay(i64 107375) #11, !dbg !17928
  br label %if.end152, !dbg !17933

if.end152:                                        ; preds = %if.then151, %if.end143
  %80 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17934
  %io_addr153 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %80, i32 0, i32 2, !dbg !17935
  %81 = load i32, i32* %io_addr153, align 8, !dbg !17935
  %add154 = add i32 %81, 28, !dbg !17936
  %call155 = call zeroext i8 @inb(i32 %add154) #11, !dbg !17937
  store i8 %call155, i8* %major, align 1, !dbg !17938
  %82 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17939
  %io_addr156 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %82, i32 0, i32 2, !dbg !17940
  %83 = load i32, i32* %io_addr156, align 8, !dbg !17940
  %add157 = add i32 %83, 24, !dbg !17941
  call void @outl(i32 510, i32 %add157) #11, !dbg !17942
  %84 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17943
  %pcidev158 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %84, i32 0, i32 44, !dbg !17945
  %85 = load %struct.pci_dev*, %struct.pci_dev** %pcidev158, align 8, !dbg !17945
  %revision159 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 12, !dbg !17946
  %86 = load i8, i8* %revision159, align 8, !dbg !17946
  %conv160 = zext i8 %86 to i32, !dbg !17943
  %cmp161 = icmp eq i32 %conv160, 16, !dbg !17947
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !17948

if.then163:                                       ; preds = %if.end152
  call void @__const_udelay(i64 107375) #11, !dbg !17949
  br label %if.end164, !dbg !17954

if.end164:                                        ; preds = %if.then163, %if.end152
  %87 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17955
  %io_addr165 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %87, i32 0, i32 2, !dbg !17956
  %88 = load i32, i32* %io_addr165, align 8, !dbg !17956
  %add166 = add i32 %88, 28, !dbg !17957
  %call167 = call zeroext i8 @inb(i32 %add166) #11, !dbg !17958
  store i8 %call167, i8* %minor, align 1, !dbg !17959
  %89 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17960
  %io_addr168 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %89, i32 0, i32 2, !dbg !17961
  %90 = load i32, i32* %io_addr168, align 8, !dbg !17961
  %add169 = add i32 %90, 24, !dbg !17962
  call void @outl(i32 509, i32 %add169) #11, !dbg !17963
  %91 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17964
  %pcidev170 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %91, i32 0, i32 44, !dbg !17966
  %92 = load %struct.pci_dev*, %struct.pci_dev** %pcidev170, align 8, !dbg !17966
  %revision171 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %92, i32 0, i32 12, !dbg !17967
  %93 = load i8, i8* %revision171, align 8, !dbg !17967
  %conv172 = zext i8 %93 to i32, !dbg !17964
  %cmp173 = icmp eq i32 %conv172, 16, !dbg !17968
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !17969

if.then175:                                       ; preds = %if.end164
  call void @__const_udelay(i64 107375) #11, !dbg !17970
  br label %if.end176, !dbg !17975

if.end176:                                        ; preds = %if.then175, %if.end164
  %94 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17976
  %io_addr177 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %94, i32 0, i32 2, !dbg !17977
  %95 = load i32, i32* %io_addr177, align 8, !dbg !17977
  %add178 = add i32 %95, 28, !dbg !17978
  %call179 = call zeroext i8 @inb(i32 %add178) #11, !dbg !17979
  store i8 %call179, i8* %subminor, align 1, !dbg !17980
  br label %if.end180

if.end180:                                        ; preds = %if.end176, %if.end108
  br label %if.end228, !dbg !17981

if.else181:                                       ; preds = %entry
  %96 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17982
  %ioctl_data = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %96, i32 0, i32 25, !dbg !17984
  %97 = load i8*, i8** %ioctl_data, align 8, !dbg !17984
  store i8* %97, i8** %buffer, align 8, !dbg !17985
  %98 = load i8*, i8** %buffer, align 8, !dbg !17986
  call void @llvm.memset.p0i8.i64(i8* align 1 %98, i8 0, i64 4096, i1 false), !dbg !17987
  %99 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17988
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %99, i32 0, i32 12, !dbg !17989
  %100 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !17989
  %101 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17990
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %101, i32 0, i32 9, !dbg !17991
  %102 = load i32, i32* %max_cmds, align 8, !dbg !17991
  %sub = sub i32 %102, 1, !dbg !17992
  %idxprom = zext i32 %sub to i64, !dbg !17988
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %100, i64 %idxprom, !dbg !17988
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !17993
  %103 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !17994
  %104 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17995
  call void @ips_init_scb(%struct.ips_ha* %103, %struct.ips_scb* %104) #11, !dbg !17996
  %105 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !17997
  %106 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !17998
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %106, i32 0, i32 8, !dbg !17999
  store i32 %105, i32* %timeout, align 4, !dbg !18000
  %107 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18001
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %107, i32 0, i32 5, !dbg !18002
  %arrayidx182 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !18001
  store i8 34, i8* %arrayidx182, align 1, !dbg !18003
  %108 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18004
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %108, i32 0, i32 0, !dbg !18005
  %flashfw = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FLASHFW_CMD*, !dbg !18006
  %op_code = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw, i32 0, i32 0, !dbg !18007
  store i8 34, i8* %op_code, align 8, !dbg !18008
  %109 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18009
  %110 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18009
  %scbs183 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %110, i32 0, i32 12, !dbg !18009
  %111 = load %struct.ips_scb*, %struct.ips_scb** %scbs183, align 8, !dbg !18009
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %109 to i64, !dbg !18009
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %111 to i64, !dbg !18009
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18009
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !18009
  %conv184 = trunc i64 %sub.ptr.div to i32, !dbg !18009
  %conv185 = trunc i32 %conv184 to i8, !dbg !18009
  %112 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18010
  %cmd186 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %112, i32 0, i32 0, !dbg !18011
  %flashfw187 = bitcast %union.IPS_HOST_COMMAND* %cmd186 to %struct.IPS_FLASHFW_CMD*, !dbg !18012
  %command_id = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw187, i32 0, i32 1, !dbg !18013
  store i8 %conv185, i8* %command_id, align 1, !dbg !18014
  %113 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18015
  %cmd188 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %113, i32 0, i32 0, !dbg !18016
  %flashfw189 = bitcast %union.IPS_HOST_COMMAND* %cmd188 to %struct.IPS_FLASHFW_CMD*, !dbg !18017
  %type = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw189, i32 0, i32 2, !dbg !18018
  store i8 1, i8* %type, align 2, !dbg !18019
  %114 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18020
  %cmd190 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %114, i32 0, i32 0, !dbg !18021
  %flashfw191 = bitcast %union.IPS_HOST_COMMAND* %cmd190 to %struct.IPS_FLASHFW_CMD*, !dbg !18022
  %direction = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw191, i32 0, i32 3, !dbg !18023
  store i8 0, i8* %direction, align 1, !dbg !18024
  %115 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18025
  %cmd192 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %115, i32 0, i32 0, !dbg !18026
  %flashfw193 = bitcast %union.IPS_HOST_COMMAND* %cmd192 to %struct.IPS_FLASHFW_CMD*, !dbg !18027
  %count = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw193, i32 0, i32 4, !dbg !18028
  store i32 2048, i32* %count, align 4, !dbg !18029
  %116 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18030
  %cmd194 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %116, i32 0, i32 0, !dbg !18031
  %flashfw195 = bitcast %union.IPS_HOST_COMMAND* %cmd194 to %struct.IPS_FLASHFW_CMD*, !dbg !18032
  %total_packets = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw195, i32 0, i32 6, !dbg !18033
  store i8 1, i8* %total_packets, align 4, !dbg !18034
  %117 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18035
  %cmd196 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %117, i32 0, i32 0, !dbg !18036
  %flashfw197 = bitcast %union.IPS_HOST_COMMAND* %cmd196 to %struct.IPS_FLASHFW_CMD*, !dbg !18037
  %packet_num = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw197, i32 0, i32 7, !dbg !18038
  store i8 0, i8* %packet_num, align 1, !dbg !18039
  %118 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18040
  %data_len = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %118, i32 0, i32 13, !dbg !18041
  store i32 4096, i32* %data_len, align 4, !dbg !18042
  %119 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18043
  %ioctl_busaddr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %119, i32 0, i32 36, !dbg !18044
  %120 = load i64, i64* %ioctl_busaddr, align 8, !dbg !18044
  %conv198 = trunc i64 %120 to i32, !dbg !18043
  %121 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18045
  %cmd199 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %121, i32 0, i32 0, !dbg !18046
  %flashfw200 = bitcast %union.IPS_HOST_COMMAND* %cmd199 to %struct.IPS_FLASHFW_CMD*, !dbg !18047
  %buffer_addr = getelementptr inbounds %struct.IPS_FLASHFW_CMD, %struct.IPS_FLASHFW_CMD* %flashfw200, i32 0, i32 5, !dbg !18048
  store i32 %conv198, i32* %buffer_addr, align 8, !dbg !18049
  %122 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18050
  %123 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18052
  %124 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !18053
  %125 = load i32, i32* %intr.addr, align 4, !dbg !18054
  %call201 = call i32 @ips_send_wait(%struct.ips_ha* %122, %struct.ips_scb* %123, i32 %124, i32 %125) #11, !dbg !18055
  store i32 %call201, i32* %ret, align 4, !dbg !18056
  %cmp202 = icmp eq i32 %call201, 4, !dbg !18057
  br i1 %cmp202, label %if.then211, label %lor.lhs.false204, !dbg !18058

lor.lhs.false204:                                 ; preds = %if.else181
  %126 = load i32, i32* %ret, align 4, !dbg !18059
  %cmp205 = icmp eq i32 %126, 2, !dbg !18060
  br i1 %cmp205, label %if.then211, label %lor.lhs.false207, !dbg !18061

lor.lhs.false207:                                 ; preds = %lor.lhs.false204
  %127 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !18062
  %basic_status = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %127, i32 0, i32 9, !dbg !18063
  %128 = load i8, i8* %basic_status, align 8, !dbg !18063
  %conv208 = zext i8 %128 to i32, !dbg !18062
  %and = and i32 %conv208, 15, !dbg !18064
  %cmp209 = icmp sgt i32 %and, 1, !dbg !18065
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !18066

if.then211:                                       ; preds = %lor.lhs.false207, %lor.lhs.false204, %if.else181
  br label %return, !dbg !18067

if.end212:                                        ; preds = %lor.lhs.false207
  %129 = load i8*, i8** %buffer, align 8, !dbg !18069
  %arrayidx213 = getelementptr i8, i8* %129, i64 192, !dbg !18069
  %130 = load i8, i8* %arrayidx213, align 1, !dbg !18069
  %conv214 = zext i8 %130 to i32, !dbg !18069
  %cmp215 = icmp eq i32 %conv214, 85, !dbg !18071
  br i1 %cmp215, label %land.lhs.true217, label %if.else226, !dbg !18072

land.lhs.true217:                                 ; preds = %if.end212
  %131 = load i8*, i8** %buffer, align 8, !dbg !18073
  %arrayidx218 = getelementptr i8, i8* %131, i64 193, !dbg !18073
  %132 = load i8, i8* %arrayidx218, align 1, !dbg !18073
  %conv219 = zext i8 %132 to i32, !dbg !18073
  %cmp220 = icmp eq i32 %conv219, 170, !dbg !18074
  br i1 %cmp220, label %if.then222, label %if.else226, !dbg !18075

if.then222:                                       ; preds = %land.lhs.true217
  %133 = load i8*, i8** %buffer, align 8, !dbg !18076
  %arrayidx223 = getelementptr i8, i8* %133, i64 703, !dbg !18076
  %134 = load i8, i8* %arrayidx223, align 1, !dbg !18076
  store i8 %134, i8* %major, align 1, !dbg !18078
  %135 = load i8*, i8** %buffer, align 8, !dbg !18079
  %arrayidx224 = getelementptr i8, i8* %135, i64 702, !dbg !18079
  %136 = load i8, i8* %arrayidx224, align 1, !dbg !18079
  store i8 %136, i8* %minor, align 1, !dbg !18080
  %137 = load i8*, i8** %buffer, align 8, !dbg !18081
  %arrayidx225 = getelementptr i8, i8* %137, i64 701, !dbg !18081
  %138 = load i8, i8* %arrayidx225, align 1, !dbg !18081
  store i8 %138, i8* %subminor, align 1, !dbg !18082
  br label %if.end227, !dbg !18083

if.else226:                                       ; preds = %land.lhs.true217, %if.end212
  br label %return, !dbg !18084

if.end227:                                        ; preds = %if.then222
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.end180
  %139 = load i8, i8* %major, align 1, !dbg !18086
  %conv229 = zext i8 %139 to i32, !dbg !18086
  %and230 = and i32 %conv229, 240, !dbg !18086
  %shr = ashr i32 %and230, 4, !dbg !18086
  %idxprom231 = sext i32 %shr to i64, !dbg !18086
  %arrayidx232 = getelementptr [0 x i8], [0 x i8]* @hex_asc_upper, i64 0, i64 %idxprom231, !dbg !18086
  %140 = load i8, i8* %arrayidx232, align 1, !dbg !18086
  %141 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18087
  %bios_version233 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %141, i32 0, i32 37, !dbg !18088
  %arrayidx234 = getelementptr [8 x i8], [8 x i8]* %bios_version233, i64 0, i64 0, !dbg !18087
  store i8 %140, i8* %arrayidx234, align 8, !dbg !18089
  %142 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18090
  %bios_version235 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %142, i32 0, i32 37, !dbg !18091
  %arrayidx236 = getelementptr [8 x i8], [8 x i8]* %bios_version235, i64 0, i64 1, !dbg !18090
  store i8 46, i8* %arrayidx236, align 1, !dbg !18092
  %143 = load i8, i8* %major, align 1, !dbg !18093
  %conv237 = zext i8 %143 to i32, !dbg !18093
  %and238 = and i32 %conv237, 15, !dbg !18093
  %idxprom239 = sext i32 %and238 to i64, !dbg !18093
  %arrayidx240 = getelementptr [0 x i8], [0 x i8]* @hex_asc_upper, i64 0, i64 %idxprom239, !dbg !18093
  %144 = load i8, i8* %arrayidx240, align 1, !dbg !18093
  %145 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18094
  %bios_version241 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %145, i32 0, i32 37, !dbg !18095
  %arrayidx242 = getelementptr [8 x i8], [8 x i8]* %bios_version241, i64 0, i64 2, !dbg !18094
  store i8 %144, i8* %arrayidx242, align 2, !dbg !18096
  %146 = load i8, i8* %subminor, align 1, !dbg !18097
  %conv243 = zext i8 %146 to i32, !dbg !18097
  %and244 = and i32 %conv243, 15, !dbg !18097
  %idxprom245 = sext i32 %and244 to i64, !dbg !18097
  %arrayidx246 = getelementptr [0 x i8], [0 x i8]* @hex_asc_upper, i64 0, i64 %idxprom245, !dbg !18097
  %147 = load i8, i8* %arrayidx246, align 1, !dbg !18097
  %148 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18098
  %bios_version247 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %148, i32 0, i32 37, !dbg !18099
  %arrayidx248 = getelementptr [8 x i8], [8 x i8]* %bios_version247, i64 0, i64 3, !dbg !18098
  store i8 %147, i8* %arrayidx248, align 1, !dbg !18100
  %149 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18101
  %bios_version249 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %149, i32 0, i32 37, !dbg !18102
  %arrayidx250 = getelementptr [8 x i8], [8 x i8]* %bios_version249, i64 0, i64 4, !dbg !18101
  store i8 46, i8* %arrayidx250, align 4, !dbg !18103
  %150 = load i8, i8* %minor, align 1, !dbg !18104
  %conv251 = zext i8 %150 to i32, !dbg !18104
  %and252 = and i32 %conv251, 240, !dbg !18104
  %shr253 = ashr i32 %and252, 4, !dbg !18104
  %idxprom254 = sext i32 %shr253 to i64, !dbg !18104
  %arrayidx255 = getelementptr [0 x i8], [0 x i8]* @hex_asc_upper, i64 0, i64 %idxprom254, !dbg !18104
  %151 = load i8, i8* %arrayidx255, align 1, !dbg !18104
  %152 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18105
  %bios_version256 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %152, i32 0, i32 37, !dbg !18106
  %arrayidx257 = getelementptr [8 x i8], [8 x i8]* %bios_version256, i64 0, i64 5, !dbg !18105
  store i8 %151, i8* %arrayidx257, align 1, !dbg !18107
  %153 = load i8, i8* %minor, align 1, !dbg !18108
  %conv258 = zext i8 %153 to i32, !dbg !18108
  %and259 = and i32 %conv258, 15, !dbg !18108
  %idxprom260 = sext i32 %and259 to i64, !dbg !18108
  %arrayidx261 = getelementptr [0 x i8], [0 x i8]* @hex_asc_upper, i64 0, i64 %idxprom260, !dbg !18108
  %154 = load i8, i8* %arrayidx261, align 1, !dbg !18108
  %155 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18109
  %bios_version262 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %155, i32 0, i32 37, !dbg !18110
  %arrayidx263 = getelementptr [8 x i8], [8 x i8]* %bios_version262, i64 0, i64 6, !dbg !18109
  store i8 %154, i8* %arrayidx263, align 2, !dbg !18111
  %156 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !18112
  %bios_version264 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %156, i32 0, i32 37, !dbg !18113
  %arrayidx265 = getelementptr [8 x i8], [8 x i8]* %bios_version264, i64 0, i64 7, !dbg !18112
  store i8 0, i8* %arrayidx265, align 1, !dbg !18114
  br label %return, !dbg !18115

return:                                           ; preds = %if.end228, %if.else226, %if.then211, %if.then142, %if.then125, %if.then74, %if.then57
  ret void, !dbg !18115
}

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_add_host(%struct.Scsi_Host* %host, %struct.device* %dev) #0 !dbg !18116 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !18119, metadata !DIExpression()), !dbg !18120
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18121, metadata !DIExpression()), !dbg !18122
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !18123
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18124
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18125
  %call = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %0, %struct.device* %1, %struct.device* %2) #11, !dbg !18126
  ret i32 %call, !dbg !18127
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_host(%struct.Scsi_Host*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ips_info(%struct.Scsi_Host* %SH) #0 !dbg !6291 {
entry:
  %retval = alloca i8*, align 8
  %SH.addr = alloca %struct.Scsi_Host*, align 8
  %bp = alloca i8*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  store %struct.Scsi_Host* %SH, %struct.Scsi_Host** %SH.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %SH.addr, metadata !18128, metadata !DIExpression()), !dbg !18129
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !18130, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18132, metadata !DIExpression()), !dbg !18133
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %SH.addr, align 8, !dbg !18134
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !18134
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18134
  %1 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18134
  store %struct.ips_ha* %1, %struct.ips_ha** %ha, align 8, !dbg !18135
  %2 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18136
  %tobool = icmp ne %struct.ips_ha* %2, null, !dbg !18136
  br i1 %tobool, label %if.end, label %if.then, !dbg !18138

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !18139
  br label %return, !dbg !18139

if.end:                                           ; preds = %entry
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @ips_info.buffer, i64 0, i64 0), i8** %bp, align 8, !dbg !18140
  %3 = load i8*, i8** %bp, align 8, !dbg !18141
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 256, i1 false), !dbg !18142
  %4 = load i8*, i8** %bp, align 8, !dbg !18143
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i32 761) #11, !dbg !18144
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18145
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 6, !dbg !18147
  %6 = load i16, i16* %ad_type, align 8, !dbg !18147
  %conv = zext i16 %6 to i32, !dbg !18145
  %cmp = icmp sgt i32 %conv, 0, !dbg !18148
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !18149

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18150
  %ad_type2 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 6, !dbg !18151
  %8 = load i16, i16* %ad_type2, align 8, !dbg !18151
  %conv3 = zext i16 %8 to i32, !dbg !18150
  %cmp4 = icmp sle i32 %conv3, 15, !dbg !18152
  br i1 %cmp4, label %if.then6, label %if.end13, !dbg !18153

if.then6:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %bp, align 8, !dbg !18154
  %call7 = call i8* @strcat(i8* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !18156
  %10 = load i8*, i8** %bp, align 8, !dbg !18157
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18158
  %ad_type8 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 6, !dbg !18159
  %12 = load i16, i16* %ad_type8, align 8, !dbg !18159
  %conv9 = zext i16 %12 to i32, !dbg !18158
  %sub = sub i32 %conv9, 1, !dbg !18160
  %idxprom = sext i32 %sub to i64, !dbg !18161
  %arrayidx = getelementptr [18 x [30 x i8]], [18 x [30 x i8]]* @ips_adapter_name, i64 0, i64 %idxprom, !dbg !18161
  %arraydecay10 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx, i64 0, i64 0, !dbg !18161
  %call11 = call i8* @strcat(i8* %10, i8* %arraydecay10) #11, !dbg !18162
  %13 = load i8*, i8** %bp, align 8, !dbg !18163
  %call12 = call i8* @strcat(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !18164
  br label %if.end13, !dbg !18165

if.end13:                                         ; preds = %if.then6, %land.lhs.true, %if.end
  %14 = load i8*, i8** %bp, align 8, !dbg !18166
  store i8* %14, i8** %retval, align 8, !dbg !18167
  br label %return, !dbg !18167

return:                                           ; preds = %if.end13, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !18168
  ret i8* %15, !dbg !18168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_queue(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #0 !dbg !18169 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !18170, metadata !DIExpression()), !dbg !18174
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !18176, metadata !DIExpression()), !dbg !18177
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !18178, metadata !DIExpression()), !dbg !18183
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %irq_flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !18190, metadata !DIExpression()), !dbg !18191
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !18192, metadata !DIExpression()), !dbg !18191
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !18193, metadata !DIExpression()), !dbg !18191
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18194, metadata !DIExpression()), !dbg !18191
  br label %do.body, !dbg !18191

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !18195

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18196, metadata !DIExpression()), !dbg !18198
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18199, metadata !DIExpression()), !dbg !18198
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18198
  %conv = zext i1 %cmp to i32, !dbg !18198
  store i32 1, i32* %tmp, align 4, !dbg !18198
  %0 = load i32, i32* %tmp, align 4, !dbg !18198
  br label %do.body2, !dbg !18200

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !18201

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !18202

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !18204, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !18208, metadata !DIExpression()), !dbg !18207
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !18207
  %conv8 = zext i1 %cmp7 to i32, !dbg !18207
  store i32 1, i32* %tmp9, align 4, !dbg !18207
  %1 = load i32, i32* %tmp9, align 4, !dbg !18207
  %call = call i64 @arch_local_irq_save() #11, !dbg !18209
  store i64 %call, i64* %irq_flags, align 8, !dbg !18209
  br label %do.end, !dbg !18209

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !18202

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !18201

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18210, !srcloc !18211
  br label %do.body12, !dbg !18210

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !18212
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !18212
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !18212
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18213
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !18214
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !18214
  br label %do.end14, !dbg !18212

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !18210

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !18201

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !18200

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !18195

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !18191
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !18191
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !18191
  %8 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !18191
  %call19 = call i32 @ips_queue_lck(%struct.scsi_cmnd* %6, void (%struct.scsi_cmnd*)* %8) #11, !dbg !18191
  store i32 %call19, i32* %rc, align 4, !dbg !18191
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !18191
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !18191
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !18191
  %11 = load i64, i64* %irq_flags, align 8, !dbg !18191
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !297, metadata !18215, metadata !DIExpression()) #10, !dbg !18218
  call void @llvm.dbg.declare(metadata !297, metadata !18219, metadata !DIExpression()) #10, !dbg !18218
  store i32 1, i32* %tmp.i, align 4, !dbg !18218
  %12 = load i32, i32* %tmp.i, align 4, !dbg !18218
  call void @llvm.dbg.declare(metadata !297, metadata !18220, metadata !DIExpression()) #10, !dbg !18225
  call void @llvm.dbg.declare(metadata !297, metadata !18226, metadata !DIExpression()) #10, !dbg !18225
  store i32 1, i32* %tmp8.i, align 4, !dbg !18225
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !18225
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !18227
  call void @arch_local_irq_restore(i64 %14) #14, !dbg !18227
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18228, !srcloc !18230
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !18231
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !18231
  %rlock.i22 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !18231
  %17 = load i32, i32* %rc, align 4, !dbg !18191
  ret i32 %17, !dbg !18191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_eh_abort(%struct.scsi_cmnd* %SC) #0 !dbg !18233 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !13725, metadata !DIExpression()), !dbg !18234
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13736, metadata !DIExpression()), !dbg !18236
  %retval = alloca i32, align 4
  %SC.addr = alloca %struct.scsi_cmnd*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %item = alloca %struct.ips_copp_wait_item*, align 8
  %ret = alloca i32, align 4
  %host = alloca %struct.Scsi_Host*, align 8
  store %struct.scsi_cmnd* %SC, %struct.scsi_cmnd** %SC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC.addr, metadata !18238, metadata !DIExpression()), !dbg !18239
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18240, metadata !DIExpression()), !dbg !18241
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %item, metadata !18242, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18244, metadata !DIExpression()), !dbg !18245
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !18246, metadata !DIExpression()), !dbg !18247
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18248
  %tobool = icmp ne %struct.scsi_cmnd* %0, null, !dbg !18248
  br i1 %tobool, label %if.end, label %if.then, !dbg !18250

if.then:                                          ; preds = %entry
  store i32 8195, i32* %retval, align 4, !dbg !18251
  br label %return, !dbg !18251

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18252
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 1, !dbg !18253
  %2 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !18253
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 0, !dbg !18254
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !18254
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %host, align 8, !dbg !18255
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18256
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 1, !dbg !18257
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !18257
  %host3 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !18258
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host3, align 8, !dbg !18258
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 51, !dbg !18259
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18256
  %7 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18260
  store %struct.ips_ha* %7, %struct.ips_ha** %ha, align 8, !dbg !18261
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18262
  %tobool4 = icmp ne %struct.ips_ha* %8, null, !dbg !18262
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !18264

if.then5:                                         ; preds = %if.end
  store i32 8195, i32* %retval, align 4, !dbg !18265
  br label %return, !dbg !18265

if.end6:                                          ; preds = %if.end
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18266
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 30, !dbg !18268
  %10 = load i8, i8* %active, align 1, !dbg !18268
  %tobool7 = icmp ne i8 %10, 0, !dbg !18266
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !18269

if.then8:                                         ; preds = %if.end6
  store i32 8195, i32* %retval, align 4, !dbg !18270
  br label %return, !dbg !18270

if.end9:                                          ; preds = %if.end6
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18271
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 4, !dbg !18272
  %12 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !18272
  store %struct.spinlock* %12, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18273, !srcloc !13775
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18274
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !18274
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !18274
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18275
  %copp_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 15, !dbg !18276
  %head = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %copp_waitlist, i32 0, i32 0, !dbg !18277
  %16 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head, align 8, !dbg !18277
  store %struct.ips_copp_wait_item* %16, %struct.ips_copp_wait_item** %item, align 8, !dbg !18278
  br label %while.cond, !dbg !18279

while.cond:                                       ; preds = %while.body, %if.end9
  %17 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18280
  %tobool10 = icmp ne %struct.ips_copp_wait_item* %17, null, !dbg !18281
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !18282

land.rhs:                                         ; preds = %while.cond
  %18 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18283
  %scsi_cmd = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %18, i32 0, i32 0, !dbg !18284
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !18284
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18285
  %cmp = icmp ne %struct.scsi_cmnd* %19, %20, !dbg !18286
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %21 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !18287
  br i1 %21, label %while.body, label %while.end, !dbg !18279

while.body:                                       ; preds = %land.end
  %22 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18288
  %next = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %22, i32 0, i32 1, !dbg !18289
  %23 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next, align 8, !dbg !18289
  store %struct.ips_copp_wait_item* %23, %struct.ips_copp_wait_item** %item, align 8, !dbg !18290
  br label %while.cond, !dbg !18279, !llvm.loop !18291

while.end:                                        ; preds = %land.end
  %24 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18292
  %tobool11 = icmp ne %struct.ips_copp_wait_item* %24, null, !dbg !18292
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !18294

if.then12:                                        ; preds = %while.end
  %25 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18295
  %copp_waitlist13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %25, i32 0, i32 15, !dbg !18297
  %26 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18298
  %call = call %struct.ips_copp_wait_item* @ips_removeq_copp(%struct.ips_copp_queue* %copp_waitlist13, %struct.ips_copp_wait_item* %26) #11, !dbg !18299
  store i32 8194, i32* %ret, align 4, !dbg !18300
  br label %if.end19, !dbg !18301

if.else:                                          ; preds = %while.end
  %27 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18302
  %scb_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %27, i32 0, i32 14, !dbg !18304
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18305
  %call14 = call %struct.scsi_cmnd* @ips_removeq_wait(%struct.ips_wait_queue* %scb_waitlist, %struct.scsi_cmnd* %28) #11, !dbg !18306
  %tobool15 = icmp ne %struct.scsi_cmnd* %call14, null, !dbg !18306
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !18307

if.then16:                                        ; preds = %if.else
  store i32 8194, i32* %ret, align 4, !dbg !18308
  br label %if.end18, !dbg !18310

if.else17:                                        ; preds = %if.else
  store i32 8195, i32* %ret, align 4, !dbg !18311
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.then16
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then12
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18313
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 4, !dbg !18314
  %30 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !18314
  store %struct.spinlock* %30, %struct.spinlock** %lock.addr.i21, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18315, !srcloc !13785
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !18316
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !18316
  %rlock.i22 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !18316
  %33 = load i32, i32* %ret, align 4, !dbg !18317
  store i32 %33, i32* %retval, align 4, !dbg !18318
  br label %return, !dbg !18318

return:                                           ; preds = %if.end19, %if.then8, %if.then5, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !18319
  ret i32 %34, !dbg !18319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_eh_reset(%struct.scsi_cmnd* %SC) #0 !dbg !18320 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !18321, metadata !DIExpression()), !dbg !18323
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !18325, metadata !DIExpression()), !dbg !18327
  %SC.addr = alloca %struct.scsi_cmnd*, align 8
  %rc = alloca i32, align 4
  store %struct.scsi_cmnd* %SC, %struct.scsi_cmnd** %SC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC.addr, metadata !18329, metadata !DIExpression()), !dbg !18330
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18331, metadata !DIExpression()), !dbg !18332
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18333
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !18334
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !18334
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !18335
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18335
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !18336
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !18336
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !18337
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18340, !srcloc !18342
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18343
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !18343
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !18343
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18345
  %call = call i32 @__ips_eh_reset(%struct.scsi_cmnd* %6) #11, !dbg !18346
  store i32 %call, i32* %rc, align 4, !dbg !18347
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18348
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 1, !dbg !18349
  %8 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !18349
  %host2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 0, !dbg !18350
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !18350
  %host_lock3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !18351
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock3, align 8, !dbg !18351
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #14, !dbg !18352
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18355, !srcloc !18357
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !18358
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !18358
  %rlock.i5 = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !18358
  %13 = load i32, i32* %rc, align 4, !dbg !18360
  ret i32 %13, !dbg !18361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_slave_configure(%struct.scsi_device* %SDptr) #0 !dbg !18362 {
entry:
  %SDptr.addr = alloca %struct.scsi_device*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %min = alloca i32, align 4
  store %struct.scsi_device* %SDptr, %struct.scsi_device** %SDptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %SDptr.addr, metadata !18363, metadata !DIExpression()), !dbg !18364
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18365, metadata !DIExpression()), !dbg !18366
  call void @llvm.dbg.declare(metadata i32* %min, metadata !18367, metadata !DIExpression()), !dbg !18368
  %0 = load %struct.scsi_device*, %struct.scsi_device** %SDptr.addr, align 8, !dbg !18369
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !18369
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18369
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 51, !dbg !18369
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18369
  %2 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18369
  store %struct.ips_ha* %2, %struct.ips_ha** %ha, align 8, !dbg !18370
  %3 = load %struct.scsi_device*, %struct.scsi_device** %SDptr.addr, align 8, !dbg !18371
  %tagged_supported = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 39, !dbg !18373
  %4 = bitcast [6 x i8]* %tagged_supported to i48*, !dbg !18373
  %bf.load = load i48, i48* %4, align 4, !dbg !18373
  %bf.lshr = lshr i48 %bf.load, 11, !dbg !18373
  %bf.clear = and i48 %bf.lshr, 1, !dbg !18373
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !18373
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !18371
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !18374

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.scsi_device*, %struct.scsi_device** %SDptr.addr, align 8, !dbg !18375
  %type = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 22, !dbg !18376
  %6 = load i8, i8* %type, align 8, !dbg !18376
  %conv = zext i8 %6 to i32, !dbg !18375
  %cmp = icmp eq i32 %conv, 0, !dbg !18377
  br i1 %cmp, label %if.then, label %if.end7, !dbg !18378

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18379
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %7, i32 0, i32 9, !dbg !18381
  %8 = load i32, i32* %max_cmds, align 8, !dbg !18381
  %div = udiv i32 %8, 2, !dbg !18382
  store i32 %div, i32* %min, align 4, !dbg !18383
  %9 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18384
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %9, i32 0, i32 21, !dbg !18386
  %10 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !18386
  %ucLogDriveCount = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %10, i32 0, i32 0, !dbg !18387
  %11 = load i8, i8* %ucLogDriveCount, align 4, !dbg !18387
  %conv2 = zext i8 %11 to i32, !dbg !18384
  %cmp3 = icmp sle i32 %conv2, 2, !dbg !18388
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !18389

if.then5:                                         ; preds = %if.then
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18390
  %max_cmds6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 9, !dbg !18391
  %13 = load i32, i32* %max_cmds6, align 8, !dbg !18391
  %sub = sub i32 %13, 1, !dbg !18392
  store i32 %sub, i32* %min, align 4, !dbg !18393
  br label %if.end, !dbg !18394

if.end:                                           ; preds = %if.then5, %if.then
  %14 = load %struct.scsi_device*, %struct.scsi_device** %SDptr.addr, align 8, !dbg !18395
  %15 = load i32, i32* %min, align 4, !dbg !18396
  %call = call i32 @scsi_change_queue_depth(%struct.scsi_device* %14, i32 %15) #11, !dbg !18397
  br label %if.end7, !dbg !18398

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  %16 = load %struct.scsi_device*, %struct.scsi_device** %SDptr.addr, align 8, !dbg !18399
  %skip_ms_page_8 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 39, !dbg !18400
  %17 = bitcast [6 x i8]* %skip_ms_page_8 to i48*, !dbg !18400
  %bf.load8 = load i48, i48* %17, align 4, !dbg !18401
  %bf.clear9 = and i48 %bf.load8, -2097153, !dbg !18401
  %bf.set = or i48 %bf.clear9, 2097152, !dbg !18401
  store i48 %bf.set, i48* %17, align 4, !dbg !18401
  %18 = load %struct.scsi_device*, %struct.scsi_device** %SDptr.addr, align 8, !dbg !18402
  %skip_ms_page_3f = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %18, i32 0, i32 39, !dbg !18403
  %19 = bitcast [6 x i8]* %skip_ms_page_3f to i48*, !dbg !18403
  %bf.load10 = load i48, i48* %19, align 4, !dbg !18404
  %bf.clear11 = and i48 %bf.load10, -4194305, !dbg !18404
  %bf.set12 = or i48 %bf.clear11, 4194304, !dbg !18404
  store i48 %bf.set12, i48* %19, align 4, !dbg !18404
  ret i32 0, !dbg !18405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_biosparam(%struct.scsi_device* %sdev, %struct.block_device* %bdev, i64 %capacity, i32* %geom) #0 !dbg !18406 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %bdev.addr = alloca %struct.block_device*, align 8
  %capacity.addr = alloca i64, align 8
  %geom.addr = alloca i32*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %heads = alloca i32, align 4
  %sectors = alloca i32, align 4
  %cylinders = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !18407, metadata !DIExpression()), !dbg !18408
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !18409, metadata !DIExpression()), !dbg !18410
  store i64 %capacity, i64* %capacity.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.addr, metadata !18411, metadata !DIExpression()), !dbg !18412
  store i32* %geom, i32** %geom.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %geom.addr, metadata !18413, metadata !DIExpression()), !dbg !18414
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18415, metadata !DIExpression()), !dbg !18416
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !18417
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !18418
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18418
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 51, !dbg !18419
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18417
  %2 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18420
  store %struct.ips_ha* %2, %struct.ips_ha** %ha, align 8, !dbg !18416
  call void @llvm.dbg.declare(metadata i32* %heads, metadata !18421, metadata !DIExpression()), !dbg !18422
  call void @llvm.dbg.declare(metadata i32* %sectors, metadata !18423, metadata !DIExpression()), !dbg !18424
  call void @llvm.dbg.declare(metadata i32* %cylinders, metadata !18425, metadata !DIExpression()), !dbg !18426
  %3 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18427
  %tobool = icmp ne %struct.ips_ha* %3, null, !dbg !18427
  br i1 %tobool, label %if.end, label %if.then, !dbg !18429

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18430
  br label %return, !dbg !18430

if.end:                                           ; preds = %entry
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18431
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 30, !dbg !18433
  %5 = load i8, i8* %active, align 1, !dbg !18433
  %tobool1 = icmp ne i8 %5, 0, !dbg !18431
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !18434

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18435
  br label %return, !dbg !18435

if.end3:                                          ; preds = %if.end
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18436
  %call = call i32 @ips_read_adapter_status(%struct.ips_ha* %6, i32 0) #11, !dbg !18438
  %tobool4 = icmp ne i32 %call, 0, !dbg !18438
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !18439

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !18440
  br label %return, !dbg !18440

if.end6:                                          ; preds = %if.end3
  %7 = load i64, i64* %capacity.addr, align 8, !dbg !18441
  %cmp = icmp ugt i64 %7, 4194304, !dbg !18443
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !18444

land.lhs.true:                                    ; preds = %if.end6
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18445
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 21, !dbg !18446
  %9 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !18446
  %ucMiscFlag = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %9, i32 0, i32 1, !dbg !18447
  %10 = load i8, i8* %ucMiscFlag, align 1, !dbg !18447
  %conv = zext i8 %10 to i32, !dbg !18445
  %and = and i32 %conv, 8, !dbg !18448
  %cmp7 = icmp eq i32 %and, 0, !dbg !18449
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !18450

if.then9:                                         ; preds = %land.lhs.true
  store i32 254, i32* %heads, align 4, !dbg !18451
  store i32 63, i32* %sectors, align 4, !dbg !18453
  br label %if.end10, !dbg !18454

if.else:                                          ; preds = %land.lhs.true, %if.end6
  store i32 128, i32* %heads, align 4, !dbg !18455
  store i32 32, i32* %sectors, align 4, !dbg !18457
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  %11 = load i64, i64* %capacity.addr, align 8, !dbg !18458
  %12 = load i32, i32* %heads, align 4, !dbg !18459
  %13 = load i32, i32* %sectors, align 4, !dbg !18460
  %mul = mul i32 %12, %13, !dbg !18461
  %conv11 = sext i32 %mul to i64, !dbg !18462
  %div = udiv i64 %11, %conv11, !dbg !18463
  %conv12 = trunc i64 %div to i32, !dbg !18464
  store i32 %conv12, i32* %cylinders, align 4, !dbg !18465
  %14 = load i32, i32* %heads, align 4, !dbg !18466
  %15 = load i32*, i32** %geom.addr, align 8, !dbg !18467
  %arrayidx = getelementptr i32, i32* %15, i64 0, !dbg !18467
  store i32 %14, i32* %arrayidx, align 4, !dbg !18468
  %16 = load i32, i32* %sectors, align 4, !dbg !18469
  %17 = load i32*, i32** %geom.addr, align 8, !dbg !18470
  %arrayidx13 = getelementptr i32, i32* %17, i64 1, !dbg !18470
  store i32 %16, i32* %arrayidx13, align 4, !dbg !18471
  %18 = load i32, i32* %cylinders, align 4, !dbg !18472
  %19 = load i32*, i32** %geom.addr, align 8, !dbg !18473
  %arrayidx14 = getelementptr i32, i32* %19, i64 2, !dbg !18473
  store i32 %18, i32* %arrayidx14, align 4, !dbg !18474
  store i32 0, i32* %retval, align 4, !dbg !18475
  br label %return, !dbg !18475

return:                                           ; preds = %if.end10, %if.then5, %if.then2, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !18476
  ret i32 %20, !dbg !18476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_show_info(%struct.seq_file* %m, %struct.Scsi_Host* %host) #0 !dbg !18477 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.seq_file*, align 8
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %i = alloca i32, align 4
  %ha = alloca %struct.ips_ha*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !18478, metadata !DIExpression()), !dbg !18479
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !18480, metadata !DIExpression()), !dbg !18481
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18482, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18484, metadata !DIExpression()), !dbg !18485
  store %struct.ips_ha* null, %struct.ips_ha** %ha, align 8, !dbg !18485
  store i32 0, i32* %i, align 4, !dbg !18486
  br label %for.cond, !dbg !18488

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18489
  %1 = load i32, i32* @ips_next_controller, align 4, !dbg !18491
  %cmp = icmp ult i32 %0, %1, !dbg !18492
  br i1 %cmp, label %for.body, label %for.end, !dbg !18493

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !18494
  %idxprom = sext i32 %2 to i64, !dbg !18497
  %arrayidx = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom, !dbg !18497
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx, align 8, !dbg !18497
  %tobool = icmp ne %struct.Scsi_Host* %3, null, !dbg !18497
  br i1 %tobool, label %if.then, label %if.end7, !dbg !18498

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !18499
  %idxprom1 = sext i32 %4 to i64, !dbg !18502
  %arrayidx2 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom1, !dbg !18502
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx2, align 8, !dbg !18502
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !18503
  %cmp3 = icmp eq %struct.Scsi_Host* %5, %6, !dbg !18504
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !18505

if.then4:                                         ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !18506
  %idxprom5 = sext i32 %7 to i64, !dbg !18508
  %arrayidx6 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom5, !dbg !18508
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx6, align 8, !dbg !18508
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 51, !dbg !18509
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18508
  %9 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18510
  store %struct.ips_ha* %9, %struct.ips_ha** %ha, align 8, !dbg !18511
  br label %for.end, !dbg !18512

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !18513

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !18514

for.inc:                                          ; preds = %if.end7
  %10 = load i32, i32* %i, align 4, !dbg !18515
  %inc = add i32 %10, 1, !dbg !18515
  store i32 %inc, i32* %i, align 4, !dbg !18515
  br label %for.cond, !dbg !18516, !llvm.loop !18517

for.end:                                          ; preds = %if.then4, %for.cond
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18519
  %tobool8 = icmp ne %struct.ips_ha* %11, null, !dbg !18519
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !18521

if.then9:                                         ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !18522
  br label %return, !dbg !18522

if.end10:                                         ; preds = %for.end
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18523
  %13 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !18524
  %call = call i32 @ips_host_info(%struct.ips_ha* %12, %struct.seq_file* %13) #11, !dbg !18525
  store i32 %call, i32* %retval, align 4, !dbg !18526
  br label %return, !dbg !18526

return:                                           ; preds = %if.end10, %if.then9
  %14 = load i32, i32* %retval, align 4, !dbg !18527
  ret i32 %14, !dbg !18527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_write_info(%struct.Scsi_Host* %host, i8* %buffer, i32 %length) #0 !dbg !18528 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ha = alloca %struct.ips_ha*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !18529, metadata !DIExpression()), !dbg !18530
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18531, metadata !DIExpression()), !dbg !18532
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !18533, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18535, metadata !DIExpression()), !dbg !18536
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18537, metadata !DIExpression()), !dbg !18538
  store %struct.ips_ha* null, %struct.ips_ha** %ha, align 8, !dbg !18538
  store i32 0, i32* %i, align 4, !dbg !18539
  br label %for.cond, !dbg !18541

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18542
  %1 = load i32, i32* @ips_next_controller, align 4, !dbg !18544
  %cmp = icmp ult i32 %0, %1, !dbg !18545
  br i1 %cmp, label %for.body, label %for.end, !dbg !18546

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !18547
  %idxprom = sext i32 %2 to i64, !dbg !18550
  %arrayidx = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom, !dbg !18550
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx, align 8, !dbg !18550
  %tobool = icmp ne %struct.Scsi_Host* %3, null, !dbg !18550
  br i1 %tobool, label %if.then, label %if.end7, !dbg !18551

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !18552
  %idxprom1 = sext i32 %4 to i64, !dbg !18555
  %arrayidx2 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom1, !dbg !18555
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx2, align 8, !dbg !18555
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !18556
  %cmp3 = icmp eq %struct.Scsi_Host* %5, %6, !dbg !18557
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !18558

if.then4:                                         ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !18559
  %idxprom5 = sext i32 %7 to i64, !dbg !18561
  %arrayidx6 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom5, !dbg !18561
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx6, align 8, !dbg !18561
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 51, !dbg !18562
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18561
  %9 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18563
  store %struct.ips_ha* %9, %struct.ips_ha** %ha, align 8, !dbg !18564
  br label %for.end, !dbg !18565

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !18566

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !18567

for.inc:                                          ; preds = %if.end7
  %10 = load i32, i32* %i, align 4, !dbg !18568
  %inc = add i32 %10, 1, !dbg !18568
  store i32 %inc, i32* %i, align 4, !dbg !18568
  br label %for.cond, !dbg !18569, !llvm.loop !18570

for.end:                                          ; preds = %if.then4, %for.cond
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18572
  %tobool8 = icmp ne %struct.ips_ha* %11, null, !dbg !18572
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !18574

if.then9:                                         ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !18575
  br label %return, !dbg !18575

if.end10:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !18576
  br label %return, !dbg !18576

return:                                           ; preds = %if.end10, %if.then9
  %12 = load i32, i32* %retval, align 4, !dbg !18577
  ret i32 %12, !dbg !18577
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @strcat(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_queue_lck(%struct.scsi_cmnd* %SC, void (%struct.scsi_cmnd*)* %done) #0 !dbg !18578 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6530, metadata !DIExpression()), !dbg !18581
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6542, metadata !DIExpression()), !dbg !18586
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6544, metadata !DIExpression()), !dbg !18587
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6546, metadata !DIExpression()), !dbg !18588
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6548, metadata !DIExpression()), !dbg !18589
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6554, metadata !DIExpression()), !dbg !18591
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6560, metadata !DIExpression()), !dbg !18593
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6569, metadata !DIExpression()), !dbg !18596
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6571, metadata !DIExpression()), !dbg !18597
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6573, metadata !DIExpression()), !dbg !18598
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6575, metadata !DIExpression()), !dbg !18599
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6577, metadata !DIExpression()), !dbg !18600
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6579, metadata !DIExpression()), !dbg !18601
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6581, metadata !DIExpression()), !dbg !18602
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6583, metadata !DIExpression()), !dbg !18603
  %retval = alloca i32, align 4
  %SC.addr = alloca %struct.scsi_cmnd*, align 8
  %done.addr = alloca void (%struct.scsi_cmnd*)*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %pt = alloca %struct.ips_passthru_t*, align 8
  %scratch = alloca %struct.ips_copp_wait_item*, align 8
  store %struct.scsi_cmnd* %SC, %struct.scsi_cmnd** %SC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC.addr, metadata !18604, metadata !DIExpression()), !dbg !18605
  store void (%struct.scsi_cmnd*)* %done, void (%struct.scsi_cmnd*)** %done.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.scsi_cmnd*)** %done.addr, metadata !18606, metadata !DIExpression()), !dbg !18607
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18608, metadata !DIExpression()), !dbg !18609
  call void @llvm.dbg.declare(metadata %struct.ips_passthru_t** %pt, metadata !18610, metadata !DIExpression()), !dbg !18611
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18612
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !18613
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !18613
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !18614
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18614
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !18615
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18612
  %3 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18616
  store %struct.ips_ha* %3, %struct.ips_ha** %ha, align 8, !dbg !18617
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18618
  %tobool = icmp ne %struct.ips_ha* %4, null, !dbg !18618
  br i1 %tobool, label %if.end, label %if.then, !dbg !18620

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !18621
  br label %return, !dbg !18621

if.end:                                           ; preds = %entry
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18622
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %5, i32 0, i32 30, !dbg !18624
  %6 = load i8, i8* %active, align 1, !dbg !18624
  %tobool1 = icmp ne i8 %6, 0, !dbg !18622
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !18625

if.then2:                                         ; preds = %if.end
  store i32 7, i32* %retval, align 4, !dbg !18626
  br label %return, !dbg !18626

if.end3:                                          ; preds = %if.end
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18627
  %call = call i32 @ips_is_passthru(%struct.scsi_cmnd* %7) #11, !dbg !18629
  %tobool4 = icmp ne i32 %call, 0, !dbg !18629
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18630

if.then5:                                         ; preds = %if.end3
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18631
  %copp_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 15, !dbg !18634
  %count = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %copp_waitlist, i32 0, i32 2, !dbg !18635
  %9 = load i32, i32* %count, align 8, !dbg !18635
  %cmp = icmp eq i32 %9, 8, !dbg !18636
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18637

if.then6:                                         ; preds = %if.then5
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18638
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 24, !dbg !18640
  store i32 131072, i32* %result, align 8, !dbg !18641
  %11 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !18642
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18643
  call void %11(%struct.scsi_cmnd* %12) #11, !dbg !18642
  store i32 0, i32* %retval, align 4, !dbg !18644
  br label %return, !dbg !18644

if.end7:                                          ; preds = %if.then5
  br label %if.end13, !dbg !18645

if.else:                                          ; preds = %if.end3
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18646
  %scb_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 14, !dbg !18648
  %count8 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %scb_waitlist, i32 0, i32 2, !dbg !18649
  %14 = load i32, i32* %count8, align 8, !dbg !18649
  %cmp9 = icmp eq i32 %14, 128, !dbg !18650
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !18651

if.then10:                                        ; preds = %if.else
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18652
  %result11 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 24, !dbg !18654
  store i32 131072, i32* %result11, align 8, !dbg !18655
  %16 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !18656
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18657
  call void %16(%struct.scsi_cmnd* %17) #11, !dbg !18656
  store i32 0, i32* %retval, align 4, !dbg !18658
  br label %return, !dbg !18658

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end7
  %18 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !18659
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18660
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 21, !dbg !18661
  store void (%struct.scsi_cmnd*)* %18, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !18662
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18663
  %device14 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 1, !dbg !18663
  %21 = load %struct.scsi_device*, %struct.scsi_device** %device14, align 8, !dbg !18663
  %call15 = call i32 @sdev_channel(%struct.scsi_device* %21) #11, !dbg !18663
  %cmp16 = icmp ugt i32 %call15, 0, !dbg !18665
  br i1 %cmp16, label %land.lhs.true, label %if.end25, !dbg !18666

land.lhs.true:                                    ; preds = %if.end13
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18667
  %device17 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 1, !dbg !18667
  %23 = load %struct.scsi_device*, %struct.scsi_device** %device17, align 8, !dbg !18667
  %call18 = call i32 @sdev_id(%struct.scsi_device* %23) #11, !dbg !18667
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18668
  %ha_id = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 0, !dbg !18669
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18670
  %device19 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 1, !dbg !18670
  %26 = load %struct.scsi_device*, %struct.scsi_device** %device19, align 8, !dbg !18670
  %call20 = call i32 @sdev_channel(%struct.scsi_device* %26) #11, !dbg !18670
  %idxprom = zext i32 %call20 to i64, !dbg !18668
  %arrayidx = getelementptr [5 x i8], [5 x i8]* %ha_id, i64 0, i64 %idxprom, !dbg !18668
  %27 = load i8, i8* %arrayidx, align 1, !dbg !18668
  %conv = zext i8 %27 to i32, !dbg !18668
  %cmp21 = icmp eq i32 %call18, %conv, !dbg !18671
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !18672

if.then23:                                        ; preds = %land.lhs.true
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18673
  %result24 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 24, !dbg !18675
  store i32 65536, i32* %result24, align 8, !dbg !18676
  %29 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !18677
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18678
  call void %29(%struct.scsi_cmnd* %30) #11, !dbg !18677
  store i32 0, i32* %retval, align 4, !dbg !18679
  br label %return, !dbg !18679

if.end25:                                         ; preds = %land.lhs.true, %if.end13
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18680
  %call26 = call i32 @ips_is_passthru(%struct.scsi_cmnd* %31) #11, !dbg !18681
  %tobool27 = icmp ne i32 %call26, 0, !dbg !18681
  br i1 %tobool27, label %if.then28, label %if.else57, !dbg !18682

if.then28:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %scratch, metadata !18683, metadata !DIExpression()), !dbg !18684
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18685
  %call29 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %32) #11, !dbg !18686
  %33 = bitcast %struct.scatterlist* %call29 to %struct.ips_passthru_t*, !dbg !18687
  store %struct.ips_passthru_t* %33, %struct.ips_passthru_t** %pt, align 8, !dbg !18688
  %34 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !18689
  %CoppCP = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %34, i32 0, i32 5, !dbg !18691
  %cmd = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP, i32 0, i32 0, !dbg !18692
  %reset = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_RESET_CMD*, !dbg !18693
  %op_code = getelementptr inbounds %struct.IPS_RESET_CMD, %struct.IPS_RESET_CMD* %reset, i32 0, i32 0, !dbg !18694
  %35 = load i8, i8* %op_code, align 8, !dbg !18694
  %conv30 = zext i8 %35 to i32, !dbg !18689
  %cmp31 = icmp eq i32 %conv30, 26, !dbg !18695
  br i1 %cmp31, label %land.lhs.true33, label %if.end50, !dbg !18696

land.lhs.true33:                                  ; preds = %if.then28
  %36 = load %struct.ips_passthru_t*, %struct.ips_passthru_t** %pt, align 8, !dbg !18697
  %CoppCP34 = getelementptr inbounds %struct.ips_passthru_t, %struct.ips_passthru_t* %36, i32 0, i32 5, !dbg !18698
  %cmd35 = getelementptr inbounds %struct.ips_scb_pt, %struct.ips_scb_pt* %CoppCP34, i32 0, i32 0, !dbg !18699
  %reset36 = bitcast %union.IPS_HOST_COMMAND* %cmd35 to %struct.IPS_RESET_CMD*, !dbg !18700
  %adapter_flag = getelementptr inbounds %struct.IPS_RESET_CMD, %struct.IPS_RESET_CMD* %reset36, i32 0, i32 15, !dbg !18701
  %37 = load i8, i8* %adapter_flag, align 1, !dbg !18701
  %conv37 = zext i8 %37 to i32, !dbg !18697
  %cmp38 = icmp eq i32 %conv37, 1, !dbg !18702
  br i1 %cmp38, label %if.then40, label %if.end50, !dbg !18703

if.then40:                                        ; preds = %land.lhs.true33
  %38 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18704
  %scb_activelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %38, i32 0, i32 16, !dbg !18707
  %count41 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %scb_activelist, i32 0, i32 2, !dbg !18708
  %39 = load i32, i32* %count41, align 8, !dbg !18708
  %cmp42 = icmp ne i32 %39, 0, !dbg !18709
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !18710

if.then44:                                        ; preds = %if.then40
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18711
  %result45 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 24, !dbg !18713
  store i32 131072, i32* %result45, align 8, !dbg !18714
  %41 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !18715
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18716
  call void %41(%struct.scsi_cmnd* %42) #11, !dbg !18715
  store i32 0, i32* %retval, align 4, !dbg !18717
  br label %return, !dbg !18717

if.end46:                                         ; preds = %if.then40
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18718
  %ioctl_reset = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 31, !dbg !18719
  store i32 1, i32* %ioctl_reset, align 8, !dbg !18720
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18721
  %call47 = call i32 @__ips_eh_reset(%struct.scsi_cmnd* %44) #11, !dbg !18722
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18723
  %result48 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %45, i32 0, i32 24, !dbg !18724
  store i32 0, i32* %result48, align 8, !dbg !18725
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18726
  %scsi_done49 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 21, !dbg !18727
  %47 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done49, align 8, !dbg !18727
  %48 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18728
  call void %47(%struct.scsi_cmnd* %48) #11, !dbg !18726
  store i32 0, i32* %retval, align 4, !dbg !18729
  br label %return, !dbg !18729

if.end50:                                         ; preds = %land.lhs.true33, %if.then28
  store i64 16, i64* %size.addr.i, align 8
  store i32 2592, i32* %flags.addr.i, align 4
  %49 = load i64, i64* %size.addr.i, align 8, !dbg !18730
  %50 = call i1 @llvm.is.constant.i64(i64 %49) #10, !dbg !18731
  br i1 %50, label %if.then.i, label %if.end9.i, !dbg !18732

if.then.i:                                        ; preds = %if.end50
  %51 = load i64, i64* %size.addr.i, align 8, !dbg !18733
  %cmp.i = icmp ugt i64 %51, 8192, !dbg !18734
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !18735

if.then1.i:                                       ; preds = %if.then.i
  %52 = load i64, i64* %size.addr.i, align 8, !dbg !18736
  %53 = load i32, i32* %flags.addr.i, align 4, !dbg !18737
  store i64 %52, i64* %size.addr.i.i, align 8
  store i32 %53, i32* %flags.addr.i.i, align 4
  %54 = load i64, i64* %size.addr.i.i, align 8, !dbg !18738
  %call.i.i = call i32 @get_order(i64 %54) #13, !dbg !18739
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !18600
  %55 = load i64, i64* %size.addr.i.i, align 8, !dbg !18740
  %56 = load i32, i32* %flags.addr.i.i, align 4, !dbg !18741
  %57 = load i32, i32* %order.i.i, align 4, !dbg !18742
  store i64 %55, i64* %size.addr.i.i.i, align 8
  store i32 %56, i32* %flags.addr.i.i.i, align 4
  store i32 %57, i32* %order.addr.i.i.i, align 4
  %58 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !18743
  %59 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !18744
  %60 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !18745
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %58, i32 %59, i32 %60) #14, !dbg !18746
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !18746
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !18746
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !18746
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !18746
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !18747
  br label %kmalloc.exit, !dbg !18747

if.end.i:                                         ; preds = %if.then.i
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !18748
  store i64 %61, i64* %size.addr.i11.i, align 8
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18749
  %tobool.i.i = icmp ne i64 %62, 0, !dbg !18749
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !18750

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !18751
  br label %kmalloc_index.exit.i, !dbg !18751

if.end.i.i:                                       ; preds = %if.end.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18752
  %cmp.i.i = icmp ule i64 %63, 8, !dbg !18753
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !18754

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18755
  br label %kmalloc_index.exit.i, !dbg !18755

if.end2.i.i:                                      ; preds = %if.end.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18756
  %cmp3.i.i = icmp ugt i64 %64, 64, !dbg !18757
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !18758

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18759
  %cmp4.i.i = icmp ule i64 %65, 96, !dbg !18760
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !18761

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !18762
  br label %kmalloc_index.exit.i, !dbg !18762

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18763
  %cmp7.i.i = icmp ugt i64 %66, 128, !dbg !18764
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !18765

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18766
  %cmp9.i.i = icmp ule i64 %67, 192, !dbg !18767
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !18768

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !18769
  br label %kmalloc_index.exit.i, !dbg !18769

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18770
  %cmp12.i.i = icmp ule i64 %68, 8, !dbg !18771
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !18772

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18773
  br label %kmalloc_index.exit.i, !dbg !18773

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18774
  %cmp15.i.i = icmp ule i64 %69, 16, !dbg !18775
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !18776

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !18777
  br label %kmalloc_index.exit.i, !dbg !18777

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18778
  %cmp18.i.i = icmp ule i64 %70, 32, !dbg !18779
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !18780

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !18781
  br label %kmalloc_index.exit.i, !dbg !18781

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18782
  %cmp21.i.i = icmp ule i64 %71, 64, !dbg !18783
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !18784

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !18785
  br label %kmalloc_index.exit.i, !dbg !18785

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18786
  %cmp24.i.i = icmp ule i64 %72, 128, !dbg !18787
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !18788

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !18789
  br label %kmalloc_index.exit.i, !dbg !18789

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %73 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18790
  %cmp27.i.i = icmp ule i64 %73, 256, !dbg !18791
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !18792

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !18793
  br label %kmalloc_index.exit.i, !dbg !18793

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %74 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18794
  %cmp30.i.i = icmp ule i64 %74, 512, !dbg !18795
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !18796

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !18797
  br label %kmalloc_index.exit.i, !dbg !18797

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %75 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18798
  %cmp33.i.i = icmp ule i64 %75, 1024, !dbg !18799
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !18800

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !18801
  br label %kmalloc_index.exit.i, !dbg !18801

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %76 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18802
  %cmp36.i.i = icmp ule i64 %76, 2048, !dbg !18803
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !18804

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !18805
  br label %kmalloc_index.exit.i, !dbg !18805

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %77 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18806
  %cmp39.i.i = icmp ule i64 %77, 4096, !dbg !18807
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !18808

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !18809
  br label %kmalloc_index.exit.i, !dbg !18809

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %78 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18810
  %cmp42.i.i = icmp ule i64 %78, 8192, !dbg !18811
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !18812

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !18813
  br label %kmalloc_index.exit.i, !dbg !18813

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %79 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18814
  %cmp45.i.i = icmp ule i64 %79, 16384, !dbg !18815
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !18816

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !18817
  br label %kmalloc_index.exit.i, !dbg !18817

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %80 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18818
  %cmp48.i.i = icmp ule i64 %80, 32768, !dbg !18819
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !18820

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !18821
  br label %kmalloc_index.exit.i, !dbg !18821

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %81 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18822
  %cmp51.i.i = icmp ule i64 %81, 65536, !dbg !18823
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !18824

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !18825
  br label %kmalloc_index.exit.i, !dbg !18825

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %82 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18826
  %cmp54.i.i = icmp ule i64 %82, 131072, !dbg !18827
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !18828

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !18829
  br label %kmalloc_index.exit.i, !dbg !18829

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %83 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18830
  %cmp57.i.i = icmp ule i64 %83, 262144, !dbg !18831
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !18832

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !18833
  br label %kmalloc_index.exit.i, !dbg !18833

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %84 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18834
  %cmp60.i.i = icmp ule i64 %84, 524288, !dbg !18835
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !18836

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !18837
  br label %kmalloc_index.exit.i, !dbg !18837

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %85 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18838
  %cmp63.i.i = icmp ule i64 %85, 1048576, !dbg !18839
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !18840

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !18841
  br label %kmalloc_index.exit.i, !dbg !18841

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %86 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18842
  %cmp66.i.i = icmp ule i64 %86, 2097152, !dbg !18843
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !18844

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !18845
  br label %kmalloc_index.exit.i, !dbg !18845

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %87 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18846
  %cmp69.i.i = icmp ule i64 %87, 4194304, !dbg !18847
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !18848

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !18849
  br label %kmalloc_index.exit.i, !dbg !18849

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %88 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18850
  %cmp72.i.i = icmp ule i64 %88, 8388608, !dbg !18851
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !18852

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !18853
  br label %kmalloc_index.exit.i, !dbg !18853

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %89 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18854
  %cmp75.i.i = icmp ule i64 %89, 16777216, !dbg !18855
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !18856

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !18857
  br label %kmalloc_index.exit.i, !dbg !18857

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %90 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18858
  %cmp78.i.i = icmp ule i64 %90, 33554432, !dbg !18859
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !18860

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !18861
  br label %kmalloc_index.exit.i, !dbg !18861

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %91 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18862
  %cmp81.i.i = icmp ule i64 %91, 67108864, !dbg !18863
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !18864

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !18865
  br label %kmalloc_index.exit.i, !dbg !18865

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !18866, !srcloc !7074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !18867, !srcloc !7078
  unreachable, !dbg !18868

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %92 = load i32, i32* %retval.i.i, align 4, !dbg !18869
  store i32 %92, i32* %index.i, align 4, !dbg !18870
  %93 = load i32, i32* %index.i, align 4, !dbg !18871
  %tobool.i = icmp ne i32 %93, 0, !dbg !18871
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !18872

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !18873
  br label %kmalloc.exit, !dbg !18873

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %94 = load i32, i32* %flags.addr.i, align 4, !dbg !18874
  store i32 %94, i32* %flags.addr.i13.i, align 4
  %95 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18875
  %and.i.i = and i32 %95, 17, !dbg !18875
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !18875
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !18875
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !18875
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !18875
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !18876

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !18877
  br label %kmalloc_type.exit.i, !dbg !18877

if.end.i16.i:                                     ; preds = %if.end4.i
  %96 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18878
  %and2.i.i = and i32 %96, 1, !dbg !18879
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !18878
  %97 = zext i1 %tobool3.i.i to i64, !dbg !18878
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !18878
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !18880
  br label %kmalloc_type.exit.i, !dbg !18880

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %98 = load i32, i32* %retval.i12.i, align 4, !dbg !18881
  %idxprom.i = zext i32 %98 to i64, !dbg !18882
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !18882
  %99 = load i32, i32* %index.i, align 4, !dbg !18883
  %idxprom6.i = zext i32 %99 to i64, !dbg !18882
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !18882
  %100 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !18882
  %101 = load i32, i32* %flags.addr.i, align 4, !dbg !18884
  %102 = load i64, i64* %size.addr.i, align 8, !dbg !18885
  store %struct.kmem_cache* %100, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %101, i32* %flags.addr.i17.i, align 4
  store i64 %102, i64* %size.addr.i18.i, align 8
  %103 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18886
  %104 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18887
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %103, i32 %104) #14, !dbg !18888
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !18888
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !18888
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !18888
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !18888
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !18588
  %105 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18889
  %106 = load i8*, i8** %ret.i.i, align 8, !dbg !18890
  %107 = load i64, i64* %size.addr.i18.i, align 8, !dbg !18891
  %108 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18892
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %105, i8* %106, i64 %107, i32 %108) #14, !dbg !18893
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !18894
  %109 = load i8*, i8** %ret.i.i, align 8, !dbg !18895
  store i8* %109, i8** %retval.i, align 8, !dbg !18896
  br label %kmalloc.exit, !dbg !18896

if.end9.i:                                        ; preds = %if.end50
  %110 = load i64, i64* %size.addr.i, align 8, !dbg !18897
  %111 = load i32, i32* %flags.addr.i, align 4, !dbg !18898
  %call10.i = call noalias i8* @__kmalloc(i64 %110, i32 %111) #14, !dbg !18899
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !18899
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !18899
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !18899
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !18899
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !18900
  br label %kmalloc.exit, !dbg !18900

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %112 = load i8*, i8** %retval.i, align 8, !dbg !18901
  %113 = bitcast i8* %112 to %struct.ips_copp_wait_item*, !dbg !18902
  store %struct.ips_copp_wait_item* %113, %struct.ips_copp_wait_item** %scratch, align 8, !dbg !18903
  %114 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %scratch, align 8, !dbg !18904
  %tobool52 = icmp ne %struct.ips_copp_wait_item* %114, null, !dbg !18904
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !18906

if.then53:                                        ; preds = %kmalloc.exit
  %115 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18907
  %result54 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %115, i32 0, i32 24, !dbg !18909
  store i32 458752, i32* %result54, align 8, !dbg !18910
  %116 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !18911
  %117 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18912
  call void %116(%struct.scsi_cmnd* %117) #11, !dbg !18911
  store i32 0, i32* %retval, align 4, !dbg !18913
  br label %return, !dbg !18913

if.end55:                                         ; preds = %kmalloc.exit
  %118 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18914
  %119 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %scratch, align 8, !dbg !18915
  %scsi_cmd = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %119, i32 0, i32 0, !dbg !18916
  store %struct.scsi_cmnd* %118, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !18917
  %120 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %scratch, align 8, !dbg !18918
  %next = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %120, i32 0, i32 1, !dbg !18919
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %next, align 8, !dbg !18920
  %121 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18921
  %copp_waitlist56 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %121, i32 0, i32 15, !dbg !18922
  %122 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %scratch, align 8, !dbg !18923
  call void @ips_putq_copp_tail(%struct.ips_copp_queue* %copp_waitlist56, %struct.ips_copp_wait_item* %122) #11, !dbg !18924
  br label %if.end59, !dbg !18925

if.else57:                                        ; preds = %if.end25
  %123 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18926
  %scb_waitlist58 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %123, i32 0, i32 14, !dbg !18928
  %124 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18929
  call void @ips_putq_wait_tail(%struct.ips_wait_queue* %scb_waitlist58, %struct.scsi_cmnd* %124) #11, !dbg !18930
  br label %if.end59

if.end59:                                         ; preds = %if.else57, %if.end55
  %125 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18931
  call void @ips_next(%struct.ips_ha* %125, i32 1) #11, !dbg !18932
  store i32 0, i32* %retval, align 4, !dbg !18933
  br label %return, !dbg !18933

return:                                           ; preds = %if.end59, %if.then53, %if.end46, %if.then44, %if.then23, %if.then10, %if.then6, %if.then2, %if.then
  %126 = load i32, i32* %retval, align 4, !dbg !18934
  ret i32 %126, !dbg !18934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__ips_eh_reset(%struct.scsi_cmnd* %SC) #0 !dbg !18935 {
entry:
  %retval = alloca i32, align 4
  %SC.addr = alloca %struct.scsi_cmnd*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %ha = alloca %struct.ips_ha*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %item = alloca %struct.ips_copp_wait_item*, align 8
  %scsi_cmd45 = alloca %struct.scsi_cmnd*, align 8
  %scsi_cmd69 = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %SC, %struct.scsi_cmnd** %SC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %SC.addr, metadata !18936, metadata !DIExpression()), !dbg !18937
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18938, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18940, metadata !DIExpression()), !dbg !18941
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !18942, metadata !DIExpression()), !dbg !18943
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !18944, metadata !DIExpression()), !dbg !18945
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %item, metadata !18946, metadata !DIExpression()), !dbg !18947
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18948
  %tobool = icmp ne %struct.scsi_cmnd* %0, null, !dbg !18948
  br i1 %tobool, label %if.end, label %if.then, !dbg !18950

if.then:                                          ; preds = %entry
  store i32 8195, i32* %retval, align 4, !dbg !18951
  br label %return, !dbg !18951

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18953
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 1, !dbg !18954
  %2 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !18954
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 0, !dbg !18955
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !18955
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 51, !dbg !18956
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !18953
  %4 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !18957
  store %struct.ips_ha* %4, %struct.ips_ha** %ha, align 8, !dbg !18958
  %5 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18959
  %tobool1 = icmp ne %struct.ips_ha* %5, null, !dbg !18959
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !18961

if.then2:                                         ; preds = %if.end
  store i32 8195, i32* %retval, align 4, !dbg !18962
  br label %return, !dbg !18962

if.end3:                                          ; preds = %if.end
  %6 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18964
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %6, i32 0, i32 30, !dbg !18966
  %7 = load i8, i8* %active, align 1, !dbg !18966
  %tobool4 = icmp ne i8 %7, 0, !dbg !18964
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !18967

if.then5:                                         ; preds = %if.end3
  store i32 8195, i32* %retval, align 4, !dbg !18968
  br label %return, !dbg !18968

if.end6:                                          ; preds = %if.end3
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18969
  %copp_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 15, !dbg !18970
  %head = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %copp_waitlist, i32 0, i32 0, !dbg !18971
  %9 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head, align 8, !dbg !18971
  store %struct.ips_copp_wait_item* %9, %struct.ips_copp_wait_item** %item, align 8, !dbg !18972
  br label %while.cond, !dbg !18973

while.cond:                                       ; preds = %while.body, %if.end6
  %10 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18974
  %tobool7 = icmp ne %struct.ips_copp_wait_item* %10, null, !dbg !18975
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !18976

land.rhs:                                         ; preds = %while.cond
  %11 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18977
  %scsi_cmd = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %11, i32 0, i32 0, !dbg !18978
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd, align 8, !dbg !18978
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18979
  %cmp = icmp ne %struct.scsi_cmnd* %12, %13, !dbg !18980
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !18981
  br i1 %14, label %while.body, label %while.end, !dbg !18973

while.body:                                       ; preds = %land.end
  %15 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18982
  %next = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %15, i32 0, i32 1, !dbg !18983
  %16 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next, align 8, !dbg !18983
  store %struct.ips_copp_wait_item* %16, %struct.ips_copp_wait_item** %item, align 8, !dbg !18984
  br label %while.cond, !dbg !18973, !llvm.loop !18985

while.end:                                        ; preds = %land.end
  %17 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18986
  %tobool8 = icmp ne %struct.ips_copp_wait_item* %17, null, !dbg !18986
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !18988

if.then9:                                         ; preds = %while.end
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18989
  %copp_waitlist10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 15, !dbg !18991
  %19 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item, align 8, !dbg !18992
  %call = call %struct.ips_copp_wait_item* @ips_removeq_copp(%struct.ips_copp_queue* %copp_waitlist10, %struct.ips_copp_wait_item* %19) #11, !dbg !18993
  store i32 8194, i32* %retval, align 4, !dbg !18994
  br label %return, !dbg !18994

if.end11:                                         ; preds = %while.end
  %20 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !18995
  %scb_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %20, i32 0, i32 14, !dbg !18997
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %SC.addr, align 8, !dbg !18998
  %call12 = call %struct.scsi_cmnd* @ips_removeq_wait(%struct.ips_wait_queue* %scb_waitlist, %struct.scsi_cmnd* %21) #11, !dbg !18999
  %tobool13 = icmp ne %struct.scsi_cmnd* %call12, null, !dbg !18999
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !19000

if.then14:                                        ; preds = %if.end11
  store i32 8194, i32* %retval, align 4, !dbg !19001
  br label %return, !dbg !19001

if.end15:                                         ; preds = %if.end11
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19003
  %ioctl_reset = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 31, !dbg !19005
  %23 = load i32, i32* %ioctl_reset, align 8, !dbg !19005
  %cmp16 = icmp eq i32 %23, 0, !dbg !19006
  br i1 %cmp16, label %if.then17, label %if.end38, !dbg !19007

if.then17:                                        ; preds = %if.end15
  %24 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19008
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %24, i32 0, i32 12, !dbg !19010
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !19010
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19011
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 9, !dbg !19012
  %27 = load i32, i32* %max_cmds, align 8, !dbg !19012
  %sub = sub i32 %27, 1, !dbg !19013
  %idxprom = zext i32 %sub to i64, !dbg !19008
  %arrayidx = getelementptr %struct.ips_scb, %struct.ips_scb* %25, i64 %idxprom, !dbg !19008
  store %struct.ips_scb* %arrayidx, %struct.ips_scb** %scb, align 8, !dbg !19014
  %28 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19015
  %29 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19016
  call void @ips_init_scb(%struct.ips_ha* %28, %struct.ips_scb* %29) #11, !dbg !19017
  %30 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !19018
  %31 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19019
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %31, i32 0, i32 8, !dbg !19020
  store i32 %30, i32* %timeout, align 4, !dbg !19021
  %32 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19022
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %32, i32 0, i32 5, !dbg !19023
  %arrayidx18 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !19022
  store i8 10, i8* %arrayidx18, align 1, !dbg !19024
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19025
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %33, i32 0, i32 0, !dbg !19026
  %flush_cache = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FC_CMD*, !dbg !19027
  %op_code = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache, i32 0, i32 0, !dbg !19028
  store i8 10, i8* %op_code, align 8, !dbg !19029
  %34 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19030
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19030
  %scbs19 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 12, !dbg !19030
  %36 = load %struct.ips_scb*, %struct.ips_scb** %scbs19, align 8, !dbg !19030
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %34 to i64, !dbg !19030
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %36 to i64, !dbg !19030
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19030
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !19030
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !19030
  %conv20 = trunc i32 %conv to i8, !dbg !19030
  %37 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19031
  %cmd21 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %37, i32 0, i32 0, !dbg !19032
  %flush_cache22 = bitcast %union.IPS_HOST_COMMAND* %cmd21 to %struct.IPS_FC_CMD*, !dbg !19033
  %command_id = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache22, i32 0, i32 1, !dbg !19034
  store i8 %conv20, i8* %command_id, align 1, !dbg !19035
  %38 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19036
  %cmd23 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %38, i32 0, i32 0, !dbg !19037
  %flush_cache24 = bitcast %union.IPS_HOST_COMMAND* %cmd23 to %struct.IPS_FC_CMD*, !dbg !19038
  %state = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache24, i32 0, i32 3, !dbg !19039
  store i8 0, i8* %state, align 1, !dbg !19040
  %39 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19041
  %cmd25 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %39, i32 0, i32 0, !dbg !19042
  %flush_cache26 = bitcast %union.IPS_HOST_COMMAND* %cmd25 to %struct.IPS_FC_CMD*, !dbg !19043
  %reserved = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache26, i32 0, i32 2, !dbg !19044
  store i8 0, i8* %reserved, align 2, !dbg !19045
  %40 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19046
  %cmd27 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %40, i32 0, i32 0, !dbg !19047
  %flush_cache28 = bitcast %union.IPS_HOST_COMMAND* %cmd27 to %struct.IPS_FC_CMD*, !dbg !19048
  %reserved2 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache28, i32 0, i32 4, !dbg !19049
  store i32 0, i32* %reserved2, align 4, !dbg !19050
  %41 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19051
  %cmd29 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %41, i32 0, i32 0, !dbg !19052
  %flush_cache30 = bitcast %union.IPS_HOST_COMMAND* %cmd29 to %struct.IPS_FC_CMD*, !dbg !19053
  %reserved3 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache30, i32 0, i32 5, !dbg !19054
  store i32 0, i32* %reserved3, align 8, !dbg !19055
  %42 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19056
  %cmd31 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %42, i32 0, i32 0, !dbg !19057
  %flush_cache32 = bitcast %union.IPS_HOST_COMMAND* %cmd31 to %struct.IPS_FC_CMD*, !dbg !19058
  %reserved4 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache32, i32 0, i32 6, !dbg !19059
  store i32 0, i32* %reserved4, align 4, !dbg !19060
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19061
  %44 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19062
  %45 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !19063
  %call33 = call i32 @ips_send_wait(%struct.ips_ha* %43, %struct.ips_scb* %44, i32 %45, i32 1) #11, !dbg !19064
  store i32 %call33, i32* %ret, align 4, !dbg !19065
  %46 = load i32, i32* %ret, align 4, !dbg !19066
  %cmp34 = icmp eq i32 %46, 1, !dbg !19068
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !19069

if.then36:                                        ; preds = %if.then17
  %47 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19070
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 44, !dbg !19070
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !19070
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 41, !dbg !19070
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.57, i64 0, i64 0)) #12, !dbg !19070
  store i32 8194, i32* %retval, align 4, !dbg !19072
  br label %return, !dbg !19072

if.end37:                                         ; preds = %if.then17
  br label %if.end38, !dbg !19073

if.end38:                                         ; preds = %if.end37, %if.end15
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19074
  %ioctl_reset39 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 31, !dbg !19075
  store i32 0, i32* %ioctl_reset39, align 8, !dbg !19076
  %50 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19077
  %pcidev40 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %50, i32 0, i32 44, !dbg !19077
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pcidev40, align 8, !dbg !19077
  %dev41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 41, !dbg !19077
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct.device* %dev41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i64 0, i64 0)) #12, !dbg !19077
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19078
  %func = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 43, !dbg !19079
  %reset = getelementptr inbounds %struct.ips_hw_func_t, %struct.ips_hw_func_t* %func, i32 0, i32 0, !dbg !19080
  %53 = load i32 (%struct.ips_ha*)*, i32 (%struct.ips_ha*)** %reset, align 8, !dbg !19080
  %54 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19081
  %call42 = call i32 %53(%struct.ips_ha* %54) #11, !dbg !19082
  store i32 %call42, i32* %ret, align 4, !dbg !19083
  %55 = load i32, i32* %ret, align 4, !dbg !19084
  %tobool43 = icmp ne i32 %55, 0, !dbg !19084
  br i1 %tobool43, label %if.end65, label %if.then44, !dbg !19086

if.then44:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scsi_cmd45, metadata !19087, metadata !DIExpression()), !dbg !19089
  %56 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19090
  %pcidev46 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %56, i32 0, i32 44, !dbg !19090
  %57 = load %struct.pci_dev*, %struct.pci_dev** %pcidev46, align 8, !dbg !19090
  %dev47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %57, i32 0, i32 41, !dbg !19090
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct.device* %dev47, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.59, i64 0, i64 0)) #12, !dbg !19090
  br label %while.cond48, !dbg !19091

while.cond48:                                     ; preds = %while.body51, %if.then44
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19092
  %scb_activelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 16, !dbg !19093
  %call49 = call %struct.ips_scb* @ips_removeq_scb_head(%struct.ips_scb_queue* %scb_activelist) #11, !dbg !19094
  store %struct.ips_scb* %call49, %struct.ips_scb** %scb, align 8, !dbg !19095
  %tobool50 = icmp ne %struct.ips_scb* %call49, null, !dbg !19091
  br i1 %tobool50, label %while.body51, label %while.end55, !dbg !19091

while.body51:                                     ; preds = %while.cond48
  %59 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19096
  %scsi_cmd52 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %59, i32 0, i32 18, !dbg !19098
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd52, align 8, !dbg !19098
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %60, i32 0, i32 24, !dbg !19099
  store i32 458752, i32* %result, align 8, !dbg !19100
  %61 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19101
  %scsi_cmd53 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %61, i32 0, i32 18, !dbg !19102
  %62 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd53, align 8, !dbg !19102
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %62, i32 0, i32 21, !dbg !19103
  %63 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !19103
  %64 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19104
  %scsi_cmd54 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %64, i32 0, i32 18, !dbg !19105
  %65 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd54, align 8, !dbg !19105
  call void %63(%struct.scsi_cmnd* %65) #11, !dbg !19101
  %66 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19106
  %67 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19107
  call void @ips_freescb(%struct.ips_ha* %66, %struct.ips_scb* %67) #11, !dbg !19108
  br label %while.cond48, !dbg !19091, !llvm.loop !19109

while.end55:                                      ; preds = %while.cond48
  br label %while.cond56, !dbg !19111

while.cond56:                                     ; preds = %while.body60, %while.end55
  %68 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19112
  %scb_waitlist57 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %68, i32 0, i32 14, !dbg !19113
  %call58 = call %struct.scsi_cmnd* @ips_removeq_wait_head(%struct.ips_wait_queue* %scb_waitlist57) #11, !dbg !19114
  store %struct.scsi_cmnd* %call58, %struct.scsi_cmnd** %scsi_cmd45, align 8, !dbg !19115
  %tobool59 = icmp ne %struct.scsi_cmnd* %call58, null, !dbg !19111
  br i1 %tobool59, label %while.body60, label %while.end63, !dbg !19111

while.body60:                                     ; preds = %while.cond56
  %69 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd45, align 8, !dbg !19116
  %result61 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %69, i32 0, i32 24, !dbg !19118
  store i32 7, i32* %result61, align 8, !dbg !19119
  %70 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd45, align 8, !dbg !19120
  %scsi_done62 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %70, i32 0, i32 21, !dbg !19121
  %71 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done62, align 8, !dbg !19121
  %72 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd45, align 8, !dbg !19122
  call void %71(%struct.scsi_cmnd* %72) #11, !dbg !19120
  br label %while.cond56, !dbg !19111, !llvm.loop !19123

while.end63:                                      ; preds = %while.cond56
  %73 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19125
  %active64 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %73, i32 0, i32 30, !dbg !19126
  store i8 0, i8* %active64, align 1, !dbg !19127
  store i32 8195, i32* %retval, align 4, !dbg !19128
  br label %return, !dbg !19128

if.end65:                                         ; preds = %if.end38
  %74 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19129
  %call66 = call i32 @ips_clear_adapter(%struct.ips_ha* %74, i32 1) #11, !dbg !19131
  %tobool67 = icmp ne i32 %call66, 0, !dbg !19131
  br i1 %tobool67, label %if.end92, label %if.then68, !dbg !19132

if.then68:                                        ; preds = %if.end65
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scsi_cmd69, metadata !19133, metadata !DIExpression()), !dbg !19135
  %75 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19136
  %pcidev70 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %75, i32 0, i32 44, !dbg !19136
  %76 = load %struct.pci_dev*, %struct.pci_dev** %pcidev70, align 8, !dbg !19136
  %dev71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 41, !dbg !19136
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct.device* %dev71, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.59, i64 0, i64 0)) #12, !dbg !19136
  br label %while.cond72, !dbg !19137

while.cond72:                                     ; preds = %while.body76, %if.then68
  %77 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19138
  %scb_activelist73 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %77, i32 0, i32 16, !dbg !19139
  %call74 = call %struct.ips_scb* @ips_removeq_scb_head(%struct.ips_scb_queue* %scb_activelist73) #11, !dbg !19140
  store %struct.ips_scb* %call74, %struct.ips_scb** %scb, align 8, !dbg !19141
  %tobool75 = icmp ne %struct.ips_scb* %call74, null, !dbg !19137
  br i1 %tobool75, label %while.body76, label %while.end82, !dbg !19137

while.body76:                                     ; preds = %while.cond72
  %78 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19142
  %scsi_cmd77 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %78, i32 0, i32 18, !dbg !19144
  %79 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd77, align 8, !dbg !19144
  %result78 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %79, i32 0, i32 24, !dbg !19145
  store i32 458752, i32* %result78, align 8, !dbg !19146
  %80 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19147
  %scsi_cmd79 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %80, i32 0, i32 18, !dbg !19148
  %81 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd79, align 8, !dbg !19148
  %scsi_done80 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %81, i32 0, i32 21, !dbg !19149
  %82 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done80, align 8, !dbg !19149
  %83 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19150
  %scsi_cmd81 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %83, i32 0, i32 18, !dbg !19151
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd81, align 8, !dbg !19151
  call void %82(%struct.scsi_cmnd* %84) #11, !dbg !19147
  %85 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19152
  %86 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19153
  call void @ips_freescb(%struct.ips_ha* %85, %struct.ips_scb* %86) #11, !dbg !19154
  br label %while.cond72, !dbg !19137, !llvm.loop !19155

while.end82:                                      ; preds = %while.cond72
  br label %while.cond83, !dbg !19157

while.cond83:                                     ; preds = %while.body87, %while.end82
  %87 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19158
  %scb_waitlist84 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %87, i32 0, i32 14, !dbg !19159
  %call85 = call %struct.scsi_cmnd* @ips_removeq_wait_head(%struct.ips_wait_queue* %scb_waitlist84) #11, !dbg !19160
  store %struct.scsi_cmnd* %call85, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !19161
  %tobool86 = icmp ne %struct.scsi_cmnd* %call85, null, !dbg !19157
  br i1 %tobool86, label %while.body87, label %while.end90, !dbg !19157

while.body87:                                     ; preds = %while.cond83
  %88 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !19162
  %result88 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %88, i32 0, i32 24, !dbg !19164
  store i32 458752, i32* %result88, align 8, !dbg !19165
  %89 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !19166
  %scsi_done89 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %89, i32 0, i32 21, !dbg !19167
  %90 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done89, align 8, !dbg !19167
  %91 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd69, align 8, !dbg !19168
  call void %90(%struct.scsi_cmnd* %91) #11, !dbg !19166
  br label %while.cond83, !dbg !19157, !llvm.loop !19169

while.end90:                                      ; preds = %while.cond83
  %92 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19171
  %active91 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %92, i32 0, i32 30, !dbg !19172
  store i8 0, i8* %active91, align 1, !dbg !19173
  store i32 8195, i32* %retval, align 4, !dbg !19174
  br label %return, !dbg !19174

if.end92:                                         ; preds = %if.end65
  %93 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19175
  %subsys = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %93, i32 0, i32 24, !dbg !19175
  %94 = load %struct._IPS_SUBSYS*, %struct._IPS_SUBSYS** %subsys, align 8, !dbg !19175
  %param = getelementptr inbounds %struct._IPS_SUBSYS, %struct._IPS_SUBSYS* %94, i32 0, i32 0, !dbg !19175
  %arrayidx93 = getelementptr [128 x i32], [128 x i32]* %param, i64 0, i64 3, !dbg !19175
  %95 = load i32, i32* %arrayidx93, align 4, !dbg !19175
  %and = and i32 %95, 3145728, !dbg !19177
  %tobool94 = icmp ne i32 %and, 0, !dbg !19177
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19178

if.then95:                                        ; preds = %if.end92
  %call96 = call i64 @ktime_get_real_seconds() #11, !dbg !19179
  %96 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19181
  %last_ffdc = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %96, i32 0, i32 33, !dbg !19182
  store i64 %call96, i64* %last_ffdc, align 8, !dbg !19183
  %97 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19184
  %reset_count = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %97, i32 0, i32 32, !dbg !19185
  %98 = load i16, i16* %reset_count, align 4, !dbg !19186
  %inc = add i16 %98, 1, !dbg !19186
  store i16 %inc, i16* %reset_count, align 4, !dbg !19186
  %99 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19187
  call void @ips_ffdc_reset(%struct.ips_ha* %99, i32 1) #11, !dbg !19188
  br label %if.end97, !dbg !19189

if.end97:                                         ; preds = %if.then95, %if.end92
  br label %while.cond98, !dbg !19190

while.cond98:                                     ; preds = %while.body102, %if.end97
  %100 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19191
  %scb_activelist99 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %100, i32 0, i32 16, !dbg !19192
  %call100 = call %struct.ips_scb* @ips_removeq_scb_head(%struct.ips_scb_queue* %scb_activelist99) #11, !dbg !19193
  store %struct.ips_scb* %call100, %struct.ips_scb** %scb, align 8, !dbg !19194
  %tobool101 = icmp ne %struct.ips_scb* %call100, null, !dbg !19190
  br i1 %tobool101, label %while.body102, label %while.end108, !dbg !19190

while.body102:                                    ; preds = %while.cond98
  %101 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19195
  %scsi_cmd103 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %101, i32 0, i32 18, !dbg !19197
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd103, align 8, !dbg !19197
  %result104 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %102, i32 0, i32 24, !dbg !19198
  store i32 524288, i32* %result104, align 8, !dbg !19199
  %103 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19200
  %scsi_cmd105 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %103, i32 0, i32 18, !dbg !19201
  %104 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd105, align 8, !dbg !19201
  %scsi_done106 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %104, i32 0, i32 21, !dbg !19202
  %105 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done106, align 8, !dbg !19202
  %106 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19203
  %scsi_cmd107 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %106, i32 0, i32 18, !dbg !19204
  %107 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsi_cmd107, align 8, !dbg !19204
  call void %105(%struct.scsi_cmnd* %107) #11, !dbg !19200
  %108 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19205
  %109 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19206
  call void @ips_freescb(%struct.ips_ha* %108, %struct.ips_scb* %109) #11, !dbg !19207
  br label %while.cond98, !dbg !19190, !llvm.loop !19208

while.end108:                                     ; preds = %while.cond98
  store i32 1, i32* %i, align 4, !dbg !19210
  br label %for.cond, !dbg !19212

for.cond:                                         ; preds = %for.inc, %while.end108
  %110 = load i32, i32* %i, align 4, !dbg !19213
  %111 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19215
  %nbus = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %111, i32 0, i32 4, !dbg !19216
  %112 = load i8, i8* %nbus, align 1, !dbg !19216
  %conv109 = zext i8 %112 to i32, !dbg !19215
  %cmp110 = icmp slt i32 %110, %conv109, !dbg !19217
  br i1 %cmp110, label %for.body, label %for.end, !dbg !19218

for.body:                                         ; preds = %for.cond
  %113 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19219
  %dcdb_active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %113, i32 0, i32 1, !dbg !19220
  %114 = load i32, i32* %i, align 4, !dbg !19221
  %sub112 = sub i32 %114, 1, !dbg !19222
  %idxprom113 = sext i32 %sub112 to i64, !dbg !19219
  %arrayidx114 = getelementptr [4 x i32], [4 x i32]* %dcdb_active, i64 0, i64 %idxprom113, !dbg !19219
  store i32 0, i32* %arrayidx114, align 4, !dbg !19223
  br label %for.inc, !dbg !19219

for.inc:                                          ; preds = %for.body
  %115 = load i32, i32* %i, align 4, !dbg !19224
  %inc115 = add i32 %115, 1, !dbg !19224
  store i32 %inc115, i32* %i, align 4, !dbg !19224
  br label %for.cond, !dbg !19225, !llvm.loop !19226

for.end:                                          ; preds = %for.cond
  %116 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19228
  %num_ioctl = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %116, i32 0, i32 10, !dbg !19229
  store i32 0, i32* %num_ioctl, align 4, !dbg !19230
  %117 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19231
  call void @ips_next(%struct.ips_ha* %117, i32 1) #11, !dbg !19232
  store i32 8194, i32* %retval, align 4, !dbg !19233
  br label %return, !dbg !19233

return:                                           ; preds = %for.end, %while.end90, %while.end63, %if.then36, %if.then14, %if.then9, %if.then5, %if.then2, %if.then
  %118 = load i32, i32* %retval, align 4, !dbg !19234
  ret i32 %118, !dbg !19234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_putq_copp_tail(%struct.ips_copp_queue* %queue, %struct.ips_copp_wait_item* %item) #0 !dbg !19235 {
entry:
  %queue.addr = alloca %struct.ips_copp_queue*, align 8
  %item.addr = alloca %struct.ips_copp_wait_item*, align 8
  store %struct.ips_copp_queue* %queue, %struct.ips_copp_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_copp_queue** %queue.addr, metadata !19238, metadata !DIExpression()), !dbg !19239
  store %struct.ips_copp_wait_item* %item, %struct.ips_copp_wait_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %item.addr, metadata !19240, metadata !DIExpression()), !dbg !19241
  %0 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19242
  %tobool = icmp ne %struct.ips_copp_wait_item* %0, null, !dbg !19242
  br i1 %tobool, label %if.end, label %if.then, !dbg !19244

if.then:                                          ; preds = %entry
  br label %return, !dbg !19245

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19246
  %next = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %1, i32 0, i32 1, !dbg !19247
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %next, align 8, !dbg !19248
  %2 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19249
  %tail = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %2, i32 0, i32 1, !dbg !19251
  %3 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %tail, align 8, !dbg !19251
  %tobool1 = icmp ne %struct.ips_copp_wait_item* %3, null, !dbg !19249
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !19252

if.then2:                                         ; preds = %if.end
  %4 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19253
  %5 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19254
  %tail3 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %5, i32 0, i32 1, !dbg !19255
  %6 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %tail3, align 8, !dbg !19255
  %next4 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %6, i32 0, i32 1, !dbg !19256
  store %struct.ips_copp_wait_item* %4, %struct.ips_copp_wait_item** %next4, align 8, !dbg !19257
  br label %if.end5, !dbg !19254

if.end5:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19258
  %8 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19259
  %tail6 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %8, i32 0, i32 1, !dbg !19260
  store %struct.ips_copp_wait_item* %7, %struct.ips_copp_wait_item** %tail6, align 8, !dbg !19261
  %9 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19262
  %head = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %9, i32 0, i32 0, !dbg !19264
  %10 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head, align 8, !dbg !19264
  %tobool7 = icmp ne %struct.ips_copp_wait_item* %10, null, !dbg !19262
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !19265

if.then8:                                         ; preds = %if.end5
  %11 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19266
  %12 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19267
  %head9 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %12, i32 0, i32 0, !dbg !19268
  store %struct.ips_copp_wait_item* %11, %struct.ips_copp_wait_item** %head9, align 8, !dbg !19269
  br label %if.end10, !dbg !19267

if.end10:                                         ; preds = %if.then8, %if.end5
  %13 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19270
  %count = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %13, i32 0, i32 2, !dbg !19271
  %14 = load i32, i32* %count, align 8, !dbg !19272
  %inc = add i32 %14, 1, !dbg !19272
  store i32 %inc, i32* %count, align 8, !dbg !19272
  br label %return, !dbg !19273

return:                                           ; preds = %if.end10, %if.then
  ret void, !dbg !19273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_putq_wait_tail(%struct.ips_wait_queue* %queue, %struct.scsi_cmnd* %item) #0 !dbg !19274 {
entry:
  %queue.addr = alloca %struct.ips_wait_queue*, align 8
  %item.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.ips_wait_queue* %queue, %struct.ips_wait_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_wait_queue** %queue.addr, metadata !19277, metadata !DIExpression()), !dbg !19278
  store %struct.scsi_cmnd* %item, %struct.scsi_cmnd** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %item.addr, metadata !19279, metadata !DIExpression()), !dbg !19280
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !19281
  %tobool = icmp ne %struct.scsi_cmnd* %0, null, !dbg !19281
  br i1 %tobool, label %if.end, label %if.then, !dbg !19283

if.then:                                          ; preds = %entry
  br label %return, !dbg !19284

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !19285
  %host_scribble = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 23, !dbg !19286
  store i8* null, i8** %host_scribble, align 8, !dbg !19287
  %2 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !19288
  %tail = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %2, i32 0, i32 1, !dbg !19290
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tail, align 8, !dbg !19290
  %tobool1 = icmp ne %struct.scsi_cmnd* %3, null, !dbg !19288
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !19291

if.then2:                                         ; preds = %if.end
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !19292
  %5 = bitcast %struct.scsi_cmnd* %4 to i8*, !dbg !19293
  %6 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !19294
  %tail3 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %6, i32 0, i32 1, !dbg !19295
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tail3, align 8, !dbg !19295
  %host_scribble4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 23, !dbg !19296
  store i8* %5, i8** %host_scribble4, align 8, !dbg !19297
  br label %if.end5, !dbg !19294

if.end5:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !19298
  %9 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !19299
  %tail6 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %9, i32 0, i32 1, !dbg !19300
  store %struct.scsi_cmnd* %8, %struct.scsi_cmnd** %tail6, align 8, !dbg !19301
  %10 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !19302
  %head = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %10, i32 0, i32 0, !dbg !19304
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %head, align 8, !dbg !19304
  %tobool7 = icmp ne %struct.scsi_cmnd* %11, null, !dbg !19302
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !19305

if.then8:                                         ; preds = %if.end5
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %item.addr, align 8, !dbg !19306
  %13 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !19307
  %head9 = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %13, i32 0, i32 0, !dbg !19308
  store %struct.scsi_cmnd* %12, %struct.scsi_cmnd** %head9, align 8, !dbg !19309
  br label %if.end10, !dbg !19307

if.end10:                                         ; preds = %if.then8, %if.end5
  %14 = load %struct.ips_wait_queue*, %struct.ips_wait_queue** %queue.addr, align 8, !dbg !19310
  %count = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %14, i32 0, i32 2, !dbg !19311
  %15 = load i32, i32* %count, align 8, !dbg !19312
  %inc = add i32 %15, 1, !dbg !19312
  store i32 %inc, i32* %count, align 8, !dbg !19312
  br label %return, !dbg !19313

return:                                           ; preds = %if.end10, %if.then
  ret void, !dbg !19313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ips_copp_wait_item* @ips_removeq_copp(%struct.ips_copp_queue* %queue, %struct.ips_copp_wait_item* %item) #0 !dbg !19314 {
entry:
  %retval = alloca %struct.ips_copp_wait_item*, align 8
  %queue.addr = alloca %struct.ips_copp_queue*, align 8
  %item.addr = alloca %struct.ips_copp_wait_item*, align 8
  %p = alloca %struct.ips_copp_wait_item*, align 8
  store %struct.ips_copp_queue* %queue, %struct.ips_copp_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_copp_queue** %queue.addr, metadata !19317, metadata !DIExpression()), !dbg !19318
  store %struct.ips_copp_wait_item* %item, %struct.ips_copp_wait_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %item.addr, metadata !19319, metadata !DIExpression()), !dbg !19320
  call void @llvm.dbg.declare(metadata %struct.ips_copp_wait_item** %p, metadata !19321, metadata !DIExpression()), !dbg !19322
  %0 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19323
  %tobool = icmp ne %struct.ips_copp_wait_item* %0, null, !dbg !19323
  br i1 %tobool, label %if.end, label %if.then, !dbg !19325

if.then:                                          ; preds = %entry
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %retval, align 8, !dbg !19326
  br label %return, !dbg !19326

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19327
  %2 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19329
  %head = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %2, i32 0, i32 0, !dbg !19330
  %3 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head, align 8, !dbg !19330
  %cmp = icmp eq %struct.ips_copp_wait_item* %1, %3, !dbg !19331
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !19332

if.then1:                                         ; preds = %if.end
  %4 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19333
  %call = call %struct.ips_copp_wait_item* @ips_removeq_copp_head(%struct.ips_copp_queue* %4) #11, !dbg !19335
  store %struct.ips_copp_wait_item* %call, %struct.ips_copp_wait_item** %retval, align 8, !dbg !19336
  br label %return, !dbg !19336

if.end2:                                          ; preds = %if.end
  %5 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19337
  %head3 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %5, i32 0, i32 0, !dbg !19338
  %6 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %head3, align 8, !dbg !19338
  store %struct.ips_copp_wait_item* %6, %struct.ips_copp_wait_item** %p, align 8, !dbg !19339
  br label %while.cond, !dbg !19340

while.cond:                                       ; preds = %while.body, %if.end2
  %7 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %p, align 8, !dbg !19341
  %tobool4 = icmp ne %struct.ips_copp_wait_item* %7, null, !dbg !19342
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !19343

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19344
  %9 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %p, align 8, !dbg !19345
  %next = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %9, i32 0, i32 1, !dbg !19346
  %10 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next, align 8, !dbg !19346
  %cmp5 = icmp ne %struct.ips_copp_wait_item* %8, %10, !dbg !19347
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !19348
  br i1 %11, label %while.body, label %while.end, !dbg !19340

while.body:                                       ; preds = %land.end
  %12 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %p, align 8, !dbg !19349
  %next6 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %12, i32 0, i32 1, !dbg !19350
  %13 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next6, align 8, !dbg !19350
  store %struct.ips_copp_wait_item* %13, %struct.ips_copp_wait_item** %p, align 8, !dbg !19351
  br label %while.cond, !dbg !19340, !llvm.loop !19352

while.end:                                        ; preds = %land.end
  %14 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %p, align 8, !dbg !19353
  %tobool7 = icmp ne %struct.ips_copp_wait_item* %14, null, !dbg !19353
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !19355

if.then8:                                         ; preds = %while.end
  %15 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19356
  %next9 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %15, i32 0, i32 1, !dbg !19358
  %16 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next9, align 8, !dbg !19358
  %17 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %p, align 8, !dbg !19359
  %next10 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %17, i32 0, i32 1, !dbg !19360
  store %struct.ips_copp_wait_item* %16, %struct.ips_copp_wait_item** %next10, align 8, !dbg !19361
  %18 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19362
  %next11 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %18, i32 0, i32 1, !dbg !19364
  %19 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %next11, align 8, !dbg !19364
  %tobool12 = icmp ne %struct.ips_copp_wait_item* %19, null, !dbg !19362
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !19365

if.then13:                                        ; preds = %if.then8
  %20 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %p, align 8, !dbg !19366
  %21 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19367
  %tail = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %21, i32 0, i32 1, !dbg !19368
  store %struct.ips_copp_wait_item* %20, %struct.ips_copp_wait_item** %tail, align 8, !dbg !19369
  br label %if.end14, !dbg !19367

if.end14:                                         ; preds = %if.then13, %if.then8
  %22 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19370
  %next15 = getelementptr inbounds %struct.ips_copp_wait_item, %struct.ips_copp_wait_item* %22, i32 0, i32 1, !dbg !19371
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %next15, align 8, !dbg !19372
  %23 = load %struct.ips_copp_queue*, %struct.ips_copp_queue** %queue.addr, align 8, !dbg !19373
  %count = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %23, i32 0, i32 2, !dbg !19374
  %24 = load i32, i32* %count, align 8, !dbg !19375
  %dec = add i32 %24, -1, !dbg !19375
  store i32 %dec, i32* %count, align 8, !dbg !19375
  %25 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %item.addr, align 8, !dbg !19376
  store %struct.ips_copp_wait_item* %25, %struct.ips_copp_wait_item** %retval, align 8, !dbg !19377
  br label %return, !dbg !19377

if.end16:                                         ; preds = %while.end
  store %struct.ips_copp_wait_item* null, %struct.ips_copp_wait_item** %retval, align 8, !dbg !19378
  br label %return, !dbg !19378

return:                                           ; preds = %if.end16, %if.end14, %if.then1, %if.then
  %26 = load %struct.ips_copp_wait_item*, %struct.ips_copp_wait_item** %retval, align 8, !dbg !19379
  ret %struct.ips_copp_wait_item* %26, !dbg !19379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !19380 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !19381, metadata !DIExpression()), !dbg !19383
  %0 = load i64, i64* %__edi, align 8, !dbg !19383
  store i64 %0, i64* %__edi, align 8, !dbg !19383
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !19384, metadata !DIExpression()), !dbg !19383
  %1 = load i64, i64* %__esi, align 8, !dbg !19383
  store i64 %1, i64* %__esi, align 8, !dbg !19383
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !19385, metadata !DIExpression()), !dbg !19383
  %2 = load i64, i64* %__edx, align 8, !dbg !19383
  store i64 %2, i64* %__edx, align 8, !dbg !19383
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !19386, metadata !DIExpression()), !dbg !19383
  %3 = load i64, i64* %__ecx, align 8, !dbg !19383
  store i64 %3, i64* %__ecx, align 8, !dbg !19383
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !19387, metadata !DIExpression()), !dbg !19383
  %4 = load i64, i64* %__eax, align 8, !dbg !19383
  store i64 %4, i64* %__eax, align 8, !dbg !19383
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !19383
  %6 = call i64 @llvm.read_register.i64(metadata !6329), !dbg !19383
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !19383, !srcloc !19388
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !19383
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !19383
  store i64 %asmresult, i64* %__eax, align 8, !dbg !19383
  call void @llvm.write_register.i64(metadata !6329, i64 %asmresult1), !dbg !19383
  ret void, !dbg !19389
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_change_queue_depth(%struct.scsi_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_host_info(%struct.ips_ha* %ha, %struct.seq_file* %m) #0 !dbg !19390 {
entry:
  %ha.addr = alloca %struct.ips_ha*, align 8
  %m.addr = alloca %struct.seq_file*, align 8
  store %struct.ips_ha* %ha, %struct.ips_ha** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha.addr, metadata !19393, metadata !DIExpression()), !dbg !19394
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !19395, metadata !DIExpression()), !dbg !19396
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19397
  call void @seq_puts(%struct.seq_file* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.60, i64 0, i64 0)) #11, !dbg !19398
  %1 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19399
  %nvram = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 23, !dbg !19399
  %2 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !19399
  %signature = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %2, i32 0, i32 0, !dbg !19399
  %3 = load i32, i32* %signature, align 4, !dbg !19399
  %cmp = icmp eq i32 %3, -2245735, !dbg !19401
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19402

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19403
  %nvram1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %4, i32 0, i32 23, !dbg !19403
  %5 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram1, align 8, !dbg !19403
  %adapter_type = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %5, i32 0, i32 3, !dbg !19403
  %6 = load i16, i16* %adapter_type, align 2, !dbg !19403
  %conv = zext i16 %6 to i32, !dbg !19403
  %cmp2 = icmp ne i32 %conv, 0, !dbg !19404
  br i1 %cmp2, label %if.then, label %if.else, !dbg !19405

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19406
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19407
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 6, !dbg !19408
  %9 = load i16, i16* %ad_type, align 8, !dbg !19408
  %conv4 = zext i16 %9 to i32, !dbg !19407
  %sub = sub i32 %conv4, 1, !dbg !19409
  %idxprom = sext i32 %sub to i64, !dbg !19410
  %arrayidx = getelementptr [18 x [30 x i8]], [18 x [30 x i8]]* @ips_adapter_name, i64 0, i64 %idxprom, !dbg !19410
  %arraydecay = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx, i64 0, i64 0, !dbg !19410
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.61, i64 0, i64 0), i8* %arraydecay) #11, !dbg !19411
  br label %if.end, !dbg !19411

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19412
  call void @seq_puts(%struct.seq_file* %10, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.62, i64 0, i64 0)) #11, !dbg !19413
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19414
  %io_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 2, !dbg !19416
  %12 = load i32, i32* %io_addr, align 8, !dbg !19416
  %tobool = icmp ne i32 %12, 0, !dbg !19414
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !19417

if.then5:                                         ; preds = %if.end
  %13 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19418
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19419
  %io_addr6 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %14, i32 0, i32 2, !dbg !19420
  %15 = load i32, i32* %io_addr6, align 8, !dbg !19420
  %16 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19421
  %io_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %16, i32 0, i32 39, !dbg !19422
  %17 = load i32, i32* %io_len, align 4, !dbg !19422
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.63, i64 0, i64 0), i32 %15, i32 %17) #11, !dbg !19423
  br label %if.end7, !dbg !19423

if.end7:                                          ; preds = %if.then5, %if.end
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19424
  %mem_addr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 38, !dbg !19426
  %19 = load i32, i32* %mem_addr, align 8, !dbg !19426
  %tobool8 = icmp ne i32 %19, 0, !dbg !19424
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !19427

if.then9:                                         ; preds = %if.end7
  %20 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19428
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19430
  %mem_addr10 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %21, i32 0, i32 38, !dbg !19431
  %22 = load i32, i32* %mem_addr10, align 8, !dbg !19431
  %23 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19432
  %mem_len = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %23, i32 0, i32 40, !dbg !19433
  %24 = load i32, i32* %mem_len, align 8, !dbg !19433
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %20, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.64, i64 0, i64 0), i32 %22, i32 %24) #11, !dbg !19434
  %25 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19435
  %26 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19436
  %mem_ptr = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %26, i32 0, i32 41, !dbg !19437
  %27 = load i8*, i8** %mem_ptr, align 8, !dbg !19437
  %28 = ptrtoint i8* %27 to i64, !dbg !19438
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %25, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i64 %28) #11, !dbg !19439
  br label %if.end11, !dbg !19440

if.end11:                                         ; preds = %if.then9, %if.end7
  %29 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19441
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19442
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 44, !dbg !19443
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !19443
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 43, !dbg !19444
  %32 = load i32, i32* %irq, align 4, !dbg !19444
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %29, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %32) #11, !dbg !19445
  %33 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19446
  %nvram12 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %33, i32 0, i32 23, !dbg !19446
  %34 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram12, align 8, !dbg !19446
  %signature13 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %34, i32 0, i32 0, !dbg !19446
  %35 = load i32, i32* %signature13, align 4, !dbg !19446
  %cmp14 = icmp eq i32 %35, -2245735, !dbg !19448
  br i1 %cmp14, label %if.then16, label %if.end84, !dbg !19449

if.then16:                                        ; preds = %if.end11
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19450
  %nvram17 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 23, !dbg !19453
  %37 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram17, align 8, !dbg !19453
  %bios_low = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %37, i32 0, i32 14, !dbg !19454
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %bios_low, i64 0, i64 3, !dbg !19450
  %38 = load i8, i8* %arrayidx18, align 1, !dbg !19450
  %conv19 = zext i8 %38 to i32, !dbg !19450
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !19455
  br i1 %cmp20, label %if.then22, label %if.else50, !dbg !19456

if.then22:                                        ; preds = %if.then16
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19457
  %40 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19459
  %nvram23 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %40, i32 0, i32 23, !dbg !19460
  %41 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram23, align 8, !dbg !19460
  %bios_high = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %41, i32 0, i32 13, !dbg !19461
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %bios_high, i64 0, i64 0, !dbg !19459
  %42 = load i8, i8* %arrayidx24, align 4, !dbg !19459
  %conv25 = zext i8 %42 to i32, !dbg !19459
  %43 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19462
  %nvram26 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %43, i32 0, i32 23, !dbg !19463
  %44 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram26, align 8, !dbg !19463
  %bios_high27 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %44, i32 0, i32 13, !dbg !19464
  %arrayidx28 = getelementptr [4 x i8], [4 x i8]* %bios_high27, i64 0, i64 1, !dbg !19462
  %45 = load i8, i8* %arrayidx28, align 1, !dbg !19462
  %conv29 = zext i8 %45 to i32, !dbg !19462
  %46 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19465
  %nvram30 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %46, i32 0, i32 23, !dbg !19466
  %47 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram30, align 8, !dbg !19466
  %bios_high31 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %47, i32 0, i32 13, !dbg !19467
  %arrayidx32 = getelementptr [4 x i8], [4 x i8]* %bios_high31, i64 0, i64 2, !dbg !19465
  %48 = load i8, i8* %arrayidx32, align 2, !dbg !19465
  %conv33 = zext i8 %48 to i32, !dbg !19465
  %49 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19468
  %nvram34 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %49, i32 0, i32 23, !dbg !19469
  %50 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram34, align 8, !dbg !19469
  %bios_high35 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %50, i32 0, i32 13, !dbg !19470
  %arrayidx36 = getelementptr [4 x i8], [4 x i8]* %bios_high35, i64 0, i64 3, !dbg !19468
  %51 = load i8, i8* %arrayidx36, align 1, !dbg !19468
  %conv37 = zext i8 %51 to i32, !dbg !19468
  %52 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19471
  %nvram38 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %52, i32 0, i32 23, !dbg !19472
  %53 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram38, align 8, !dbg !19472
  %bios_low39 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %53, i32 0, i32 14, !dbg !19473
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %bios_low39, i64 0, i64 0, !dbg !19471
  %54 = load i8, i8* %arrayidx40, align 4, !dbg !19471
  %conv41 = zext i8 %54 to i32, !dbg !19471
  %55 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19474
  %nvram42 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %55, i32 0, i32 23, !dbg !19475
  %56 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram42, align 8, !dbg !19475
  %bios_low43 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %56, i32 0, i32 14, !dbg !19476
  %arrayidx44 = getelementptr [4 x i8], [4 x i8]* %bios_low43, i64 0, i64 1, !dbg !19474
  %57 = load i8, i8* %arrayidx44, align 1, !dbg !19474
  %conv45 = zext i8 %57 to i32, !dbg !19474
  %58 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19477
  %nvram46 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 23, !dbg !19478
  %59 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram46, align 8, !dbg !19478
  %bios_low47 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %59, i32 0, i32 14, !dbg !19479
  %arrayidx48 = getelementptr [4 x i8], [4 x i8]* %bios_low47, i64 0, i64 2, !dbg !19477
  %60 = load i8, i8* %arrayidx48, align 2, !dbg !19477
  %conv49 = zext i8 %60 to i32, !dbg !19477
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %39, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.67, i64 0, i64 0), i32 %conv25, i32 %conv29, i32 %conv33, i32 %conv37, i32 %conv41, i32 %conv45, i32 %conv49) #11, !dbg !19480
  br label %if.end83, !dbg !19481

if.else50:                                        ; preds = %if.then16
  %61 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19482
  %62 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19484
  %nvram51 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %62, i32 0, i32 23, !dbg !19485
  %63 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram51, align 8, !dbg !19485
  %bios_high52 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %63, i32 0, i32 13, !dbg !19486
  %arrayidx53 = getelementptr [4 x i8], [4 x i8]* %bios_high52, i64 0, i64 0, !dbg !19484
  %64 = load i8, i8* %arrayidx53, align 4, !dbg !19484
  %conv54 = zext i8 %64 to i32, !dbg !19484
  %65 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19487
  %nvram55 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %65, i32 0, i32 23, !dbg !19488
  %66 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram55, align 8, !dbg !19488
  %bios_high56 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %66, i32 0, i32 13, !dbg !19489
  %arrayidx57 = getelementptr [4 x i8], [4 x i8]* %bios_high56, i64 0, i64 1, !dbg !19487
  %67 = load i8, i8* %arrayidx57, align 1, !dbg !19487
  %conv58 = zext i8 %67 to i32, !dbg !19487
  %68 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19490
  %nvram59 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %68, i32 0, i32 23, !dbg !19491
  %69 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram59, align 8, !dbg !19491
  %bios_high60 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %69, i32 0, i32 13, !dbg !19492
  %arrayidx61 = getelementptr [4 x i8], [4 x i8]* %bios_high60, i64 0, i64 2, !dbg !19490
  %70 = load i8, i8* %arrayidx61, align 2, !dbg !19490
  %conv62 = zext i8 %70 to i32, !dbg !19490
  %71 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19493
  %nvram63 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %71, i32 0, i32 23, !dbg !19494
  %72 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram63, align 8, !dbg !19494
  %bios_high64 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %72, i32 0, i32 13, !dbg !19495
  %arrayidx65 = getelementptr [4 x i8], [4 x i8]* %bios_high64, i64 0, i64 3, !dbg !19493
  %73 = load i8, i8* %arrayidx65, align 1, !dbg !19493
  %conv66 = zext i8 %73 to i32, !dbg !19493
  %74 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19496
  %nvram67 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %74, i32 0, i32 23, !dbg !19497
  %75 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram67, align 8, !dbg !19497
  %bios_low68 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %75, i32 0, i32 14, !dbg !19498
  %arrayidx69 = getelementptr [4 x i8], [4 x i8]* %bios_low68, i64 0, i64 0, !dbg !19496
  %76 = load i8, i8* %arrayidx69, align 4, !dbg !19496
  %conv70 = zext i8 %76 to i32, !dbg !19496
  %77 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19499
  %nvram71 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %77, i32 0, i32 23, !dbg !19500
  %78 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram71, align 8, !dbg !19500
  %bios_low72 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %78, i32 0, i32 14, !dbg !19501
  %arrayidx73 = getelementptr [4 x i8], [4 x i8]* %bios_low72, i64 0, i64 1, !dbg !19499
  %79 = load i8, i8* %arrayidx73, align 1, !dbg !19499
  %conv74 = zext i8 %79 to i32, !dbg !19499
  %80 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19502
  %nvram75 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %80, i32 0, i32 23, !dbg !19503
  %81 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram75, align 8, !dbg !19503
  %bios_low76 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %81, i32 0, i32 14, !dbg !19504
  %arrayidx77 = getelementptr [4 x i8], [4 x i8]* %bios_low76, i64 0, i64 2, !dbg !19502
  %82 = load i8, i8* %arrayidx77, align 2, !dbg !19502
  %conv78 = zext i8 %82 to i32, !dbg !19502
  %83 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19505
  %nvram79 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %83, i32 0, i32 23, !dbg !19506
  %84 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram79, align 8, !dbg !19506
  %bios_low80 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %84, i32 0, i32 14, !dbg !19507
  %arrayidx81 = getelementptr [4 x i8], [4 x i8]* %bios_low80, i64 0, i64 3, !dbg !19505
  %85 = load i8, i8* %arrayidx81, align 1, !dbg !19505
  %conv82 = zext i8 %85 to i32, !dbg !19505
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %61, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0), i32 %conv54, i32 %conv58, i32 %conv62, i32 %conv66, i32 %conv70, i32 %conv74, i32 %conv78, i32 %conv82) #11, !dbg !19508
  br label %if.end83

if.end83:                                         ; preds = %if.else50, %if.then22
  br label %if.end84, !dbg !19509

if.end84:                                         ; preds = %if.end83, %if.end11
  %86 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19510
  %enq = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %86, i32 0, i32 21, !dbg !19512
  %87 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq, align 8, !dbg !19512
  %CodeBlkVersion = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %87, i32 0, i32 8, !dbg !19513
  %arrayidx85 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion, i64 0, i64 7, !dbg !19510
  %88 = load i8, i8* %arrayidx85, align 1, !dbg !19510
  %conv86 = zext i8 %88 to i32, !dbg !19510
  %cmp87 = icmp eq i32 %conv86, 0, !dbg !19514
  br i1 %cmp87, label %if.then89, label %if.else118, !dbg !19515

if.then89:                                        ; preds = %if.end84
  %89 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19516
  %90 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19518
  %enq90 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %90, i32 0, i32 21, !dbg !19519
  %91 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq90, align 8, !dbg !19519
  %CodeBlkVersion91 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %91, i32 0, i32 8, !dbg !19520
  %arrayidx92 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion91, i64 0, i64 0, !dbg !19518
  %92 = load i8, i8* %arrayidx92, align 4, !dbg !19518
  %conv93 = zext i8 %92 to i32, !dbg !19518
  %93 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19521
  %enq94 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %93, i32 0, i32 21, !dbg !19522
  %94 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq94, align 8, !dbg !19522
  %CodeBlkVersion95 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %94, i32 0, i32 8, !dbg !19523
  %arrayidx96 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion95, i64 0, i64 1, !dbg !19521
  %95 = load i8, i8* %arrayidx96, align 1, !dbg !19521
  %conv97 = zext i8 %95 to i32, !dbg !19521
  %96 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19524
  %enq98 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %96, i32 0, i32 21, !dbg !19525
  %97 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq98, align 8, !dbg !19525
  %CodeBlkVersion99 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %97, i32 0, i32 8, !dbg !19526
  %arrayidx100 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion99, i64 0, i64 2, !dbg !19524
  %98 = load i8, i8* %arrayidx100, align 2, !dbg !19524
  %conv101 = zext i8 %98 to i32, !dbg !19524
  %99 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19527
  %enq102 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %99, i32 0, i32 21, !dbg !19528
  %100 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq102, align 8, !dbg !19528
  %CodeBlkVersion103 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %100, i32 0, i32 8, !dbg !19529
  %arrayidx104 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion103, i64 0, i64 3, !dbg !19527
  %101 = load i8, i8* %arrayidx104, align 1, !dbg !19527
  %conv105 = zext i8 %101 to i32, !dbg !19527
  %102 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19530
  %enq106 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %102, i32 0, i32 21, !dbg !19531
  %103 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq106, align 8, !dbg !19531
  %CodeBlkVersion107 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %103, i32 0, i32 8, !dbg !19532
  %arrayidx108 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion107, i64 0, i64 4, !dbg !19530
  %104 = load i8, i8* %arrayidx108, align 4, !dbg !19530
  %conv109 = zext i8 %104 to i32, !dbg !19530
  %105 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19533
  %enq110 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %105, i32 0, i32 21, !dbg !19534
  %106 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq110, align 8, !dbg !19534
  %CodeBlkVersion111 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %106, i32 0, i32 8, !dbg !19535
  %arrayidx112 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion111, i64 0, i64 5, !dbg !19533
  %107 = load i8, i8* %arrayidx112, align 1, !dbg !19533
  %conv113 = zext i8 %107 to i32, !dbg !19533
  %108 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19536
  %enq114 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %108, i32 0, i32 21, !dbg !19537
  %109 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq114, align 8, !dbg !19537
  %CodeBlkVersion115 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %109, i32 0, i32 8, !dbg !19538
  %arrayidx116 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion115, i64 0, i64 6, !dbg !19536
  %110 = load i8, i8* %arrayidx116, align 2, !dbg !19536
  %conv117 = zext i8 %110 to i32, !dbg !19536
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %89, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.69, i64 0, i64 0), i32 %conv93, i32 %conv97, i32 %conv101, i32 %conv105, i32 %conv109, i32 %conv113, i32 %conv117) #11, !dbg !19539
  br label %if.end151, !dbg !19540

if.else118:                                       ; preds = %if.end84
  %111 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19541
  %112 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19543
  %enq119 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %112, i32 0, i32 21, !dbg !19544
  %113 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq119, align 8, !dbg !19544
  %CodeBlkVersion120 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %113, i32 0, i32 8, !dbg !19545
  %arrayidx121 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion120, i64 0, i64 0, !dbg !19543
  %114 = load i8, i8* %arrayidx121, align 4, !dbg !19543
  %conv122 = zext i8 %114 to i32, !dbg !19543
  %115 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19546
  %enq123 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %115, i32 0, i32 21, !dbg !19547
  %116 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq123, align 8, !dbg !19547
  %CodeBlkVersion124 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %116, i32 0, i32 8, !dbg !19548
  %arrayidx125 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion124, i64 0, i64 1, !dbg !19546
  %117 = load i8, i8* %arrayidx125, align 1, !dbg !19546
  %conv126 = zext i8 %117 to i32, !dbg !19546
  %118 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19549
  %enq127 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %118, i32 0, i32 21, !dbg !19550
  %119 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq127, align 8, !dbg !19550
  %CodeBlkVersion128 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %119, i32 0, i32 8, !dbg !19551
  %arrayidx129 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion128, i64 0, i64 2, !dbg !19549
  %120 = load i8, i8* %arrayidx129, align 2, !dbg !19549
  %conv130 = zext i8 %120 to i32, !dbg !19549
  %121 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19552
  %enq131 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %121, i32 0, i32 21, !dbg !19553
  %122 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq131, align 8, !dbg !19553
  %CodeBlkVersion132 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %122, i32 0, i32 8, !dbg !19554
  %arrayidx133 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion132, i64 0, i64 3, !dbg !19552
  %123 = load i8, i8* %arrayidx133, align 1, !dbg !19552
  %conv134 = zext i8 %123 to i32, !dbg !19552
  %124 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19555
  %enq135 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %124, i32 0, i32 21, !dbg !19556
  %125 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq135, align 8, !dbg !19556
  %CodeBlkVersion136 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %125, i32 0, i32 8, !dbg !19557
  %arrayidx137 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion136, i64 0, i64 4, !dbg !19555
  %126 = load i8, i8* %arrayidx137, align 4, !dbg !19555
  %conv138 = zext i8 %126 to i32, !dbg !19555
  %127 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19558
  %enq139 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %127, i32 0, i32 21, !dbg !19559
  %128 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq139, align 8, !dbg !19559
  %CodeBlkVersion140 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %128, i32 0, i32 8, !dbg !19560
  %arrayidx141 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion140, i64 0, i64 5, !dbg !19558
  %129 = load i8, i8* %arrayidx141, align 1, !dbg !19558
  %conv142 = zext i8 %129 to i32, !dbg !19558
  %130 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19561
  %enq143 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %130, i32 0, i32 21, !dbg !19562
  %131 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq143, align 8, !dbg !19562
  %CodeBlkVersion144 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %131, i32 0, i32 8, !dbg !19563
  %arrayidx145 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion144, i64 0, i64 6, !dbg !19561
  %132 = load i8, i8* %arrayidx145, align 2, !dbg !19561
  %conv146 = zext i8 %132 to i32, !dbg !19561
  %133 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19564
  %enq147 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %133, i32 0, i32 21, !dbg !19565
  %134 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq147, align 8, !dbg !19565
  %CodeBlkVersion148 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %134, i32 0, i32 8, !dbg !19566
  %arrayidx149 = getelementptr [8 x i8], [8 x i8]* %CodeBlkVersion148, i64 0, i64 7, !dbg !19564
  %135 = load i8, i8* %arrayidx149, align 1, !dbg !19564
  %conv150 = zext i8 %135 to i32, !dbg !19564
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %111, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.70, i64 0, i64 0), i32 %conv122, i32 %conv126, i32 %conv130, i32 %conv134, i32 %conv138, i32 %conv142, i32 %conv146, i32 %conv150) #11, !dbg !19567
  br label %if.end151

if.end151:                                        ; preds = %if.else118, %if.then89
  %136 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19568
  %enq152 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %136, i32 0, i32 21, !dbg !19570
  %137 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq152, align 8, !dbg !19570
  %BootBlkVersion = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %137, i32 0, i32 9, !dbg !19571
  %arrayidx153 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion, i64 0, i64 7, !dbg !19568
  %138 = load i8, i8* %arrayidx153, align 1, !dbg !19568
  %conv154 = zext i8 %138 to i32, !dbg !19568
  %cmp155 = icmp eq i32 %conv154, 0, !dbg !19572
  br i1 %cmp155, label %if.then157, label %if.else186, !dbg !19573

if.then157:                                       ; preds = %if.end151
  %139 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19574
  %140 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19576
  %enq158 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %140, i32 0, i32 21, !dbg !19577
  %141 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq158, align 8, !dbg !19577
  %BootBlkVersion159 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %141, i32 0, i32 9, !dbg !19578
  %arrayidx160 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion159, i64 0, i64 0, !dbg !19576
  %142 = load i8, i8* %arrayidx160, align 4, !dbg !19576
  %conv161 = zext i8 %142 to i32, !dbg !19576
  %143 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19579
  %enq162 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %143, i32 0, i32 21, !dbg !19580
  %144 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq162, align 8, !dbg !19580
  %BootBlkVersion163 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %144, i32 0, i32 9, !dbg !19581
  %arrayidx164 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion163, i64 0, i64 1, !dbg !19579
  %145 = load i8, i8* %arrayidx164, align 1, !dbg !19579
  %conv165 = zext i8 %145 to i32, !dbg !19579
  %146 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19582
  %enq166 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %146, i32 0, i32 21, !dbg !19583
  %147 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq166, align 8, !dbg !19583
  %BootBlkVersion167 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %147, i32 0, i32 9, !dbg !19584
  %arrayidx168 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion167, i64 0, i64 2, !dbg !19582
  %148 = load i8, i8* %arrayidx168, align 2, !dbg !19582
  %conv169 = zext i8 %148 to i32, !dbg !19582
  %149 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19585
  %enq170 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %149, i32 0, i32 21, !dbg !19586
  %150 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq170, align 8, !dbg !19586
  %BootBlkVersion171 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %150, i32 0, i32 9, !dbg !19587
  %arrayidx172 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion171, i64 0, i64 3, !dbg !19585
  %151 = load i8, i8* %arrayidx172, align 1, !dbg !19585
  %conv173 = zext i8 %151 to i32, !dbg !19585
  %152 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19588
  %enq174 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %152, i32 0, i32 21, !dbg !19589
  %153 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq174, align 8, !dbg !19589
  %BootBlkVersion175 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %153, i32 0, i32 9, !dbg !19590
  %arrayidx176 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion175, i64 0, i64 4, !dbg !19588
  %154 = load i8, i8* %arrayidx176, align 4, !dbg !19588
  %conv177 = zext i8 %154 to i32, !dbg !19588
  %155 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19591
  %enq178 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %155, i32 0, i32 21, !dbg !19592
  %156 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq178, align 8, !dbg !19592
  %BootBlkVersion179 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %156, i32 0, i32 9, !dbg !19593
  %arrayidx180 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion179, i64 0, i64 5, !dbg !19591
  %157 = load i8, i8* %arrayidx180, align 1, !dbg !19591
  %conv181 = zext i8 %157 to i32, !dbg !19591
  %158 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19594
  %enq182 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %158, i32 0, i32 21, !dbg !19595
  %159 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq182, align 8, !dbg !19595
  %BootBlkVersion183 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %159, i32 0, i32 9, !dbg !19596
  %arrayidx184 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion183, i64 0, i64 6, !dbg !19594
  %160 = load i8, i8* %arrayidx184, align 2, !dbg !19594
  %conv185 = zext i8 %160 to i32, !dbg !19594
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %139, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.71, i64 0, i64 0), i32 %conv161, i32 %conv165, i32 %conv169, i32 %conv173, i32 %conv177, i32 %conv181, i32 %conv185) #11, !dbg !19597
  br label %if.end219, !dbg !19598

if.else186:                                       ; preds = %if.end151
  %161 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19599
  %162 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19601
  %enq187 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %162, i32 0, i32 21, !dbg !19602
  %163 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq187, align 8, !dbg !19602
  %BootBlkVersion188 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %163, i32 0, i32 9, !dbg !19603
  %arrayidx189 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion188, i64 0, i64 0, !dbg !19601
  %164 = load i8, i8* %arrayidx189, align 4, !dbg !19601
  %conv190 = zext i8 %164 to i32, !dbg !19601
  %165 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19604
  %enq191 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %165, i32 0, i32 21, !dbg !19605
  %166 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq191, align 8, !dbg !19605
  %BootBlkVersion192 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %166, i32 0, i32 9, !dbg !19606
  %arrayidx193 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion192, i64 0, i64 1, !dbg !19604
  %167 = load i8, i8* %arrayidx193, align 1, !dbg !19604
  %conv194 = zext i8 %167 to i32, !dbg !19604
  %168 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19607
  %enq195 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %168, i32 0, i32 21, !dbg !19608
  %169 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq195, align 8, !dbg !19608
  %BootBlkVersion196 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %169, i32 0, i32 9, !dbg !19609
  %arrayidx197 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion196, i64 0, i64 2, !dbg !19607
  %170 = load i8, i8* %arrayidx197, align 2, !dbg !19607
  %conv198 = zext i8 %170 to i32, !dbg !19607
  %171 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19610
  %enq199 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %171, i32 0, i32 21, !dbg !19611
  %172 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq199, align 8, !dbg !19611
  %BootBlkVersion200 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %172, i32 0, i32 9, !dbg !19612
  %arrayidx201 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion200, i64 0, i64 3, !dbg !19610
  %173 = load i8, i8* %arrayidx201, align 1, !dbg !19610
  %conv202 = zext i8 %173 to i32, !dbg !19610
  %174 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19613
  %enq203 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %174, i32 0, i32 21, !dbg !19614
  %175 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq203, align 8, !dbg !19614
  %BootBlkVersion204 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %175, i32 0, i32 9, !dbg !19615
  %arrayidx205 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion204, i64 0, i64 4, !dbg !19613
  %176 = load i8, i8* %arrayidx205, align 4, !dbg !19613
  %conv206 = zext i8 %176 to i32, !dbg !19613
  %177 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19616
  %enq207 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %177, i32 0, i32 21, !dbg !19617
  %178 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq207, align 8, !dbg !19617
  %BootBlkVersion208 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %178, i32 0, i32 9, !dbg !19618
  %arrayidx209 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion208, i64 0, i64 5, !dbg !19616
  %179 = load i8, i8* %arrayidx209, align 1, !dbg !19616
  %conv210 = zext i8 %179 to i32, !dbg !19616
  %180 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19619
  %enq211 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %180, i32 0, i32 21, !dbg !19620
  %181 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq211, align 8, !dbg !19620
  %BootBlkVersion212 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %181, i32 0, i32 9, !dbg !19621
  %arrayidx213 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion212, i64 0, i64 6, !dbg !19619
  %182 = load i8, i8* %arrayidx213, align 2, !dbg !19619
  %conv214 = zext i8 %182 to i32, !dbg !19619
  %183 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19622
  %enq215 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %183, i32 0, i32 21, !dbg !19623
  %184 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq215, align 8, !dbg !19623
  %BootBlkVersion216 = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %184, i32 0, i32 9, !dbg !19624
  %arrayidx217 = getelementptr [8 x i8], [8 x i8]* %BootBlkVersion216, i64 0, i64 7, !dbg !19622
  %185 = load i8, i8* %arrayidx217, align 1, !dbg !19622
  %conv218 = zext i8 %185 to i32, !dbg !19622
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %161, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.72, i64 0, i64 0), i32 %conv190, i32 %conv194, i32 %conv198, i32 %conv202, i32 %conv206, i32 %conv210, i32 %conv214, i32 %conv218) #11, !dbg !19625
  br label %if.end219

if.end219:                                        ; preds = %if.else186, %if.then157
  %186 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19626
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %186, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)) #11, !dbg !19627
  %187 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19628
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %187, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.74, i64 0, i64 0), i32 761) #11, !dbg !19629
  %188 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19630
  %189 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19631
  %enq220 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %189, i32 0, i32 21, !dbg !19632
  %190 = load %struct.IPS_ENQ*, %struct.IPS_ENQ** %enq220, align 8, !dbg !19632
  %ucMaxPhysicalDevices = getelementptr inbounds %struct.IPS_ENQ, %struct.IPS_ENQ* %190, i32 0, i32 12, !dbg !19633
  %191 = load i8, i8* %ucMaxPhysicalDevices, align 1, !dbg !19633
  %conv221 = zext i8 %191 to i32, !dbg !19631
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %188, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.75, i64 0, i64 0), i32 %conv221) #11, !dbg !19634
  %192 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19635
  %193 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19636
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %193, i32 0, i32 9, !dbg !19637
  %194 = load i32, i32* %max_cmds, align 8, !dbg !19637
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %192, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i64 0, i64 0), i32 %194) #11, !dbg !19638
  %195 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19639
  %196 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19640
  %scb_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %196, i32 0, i32 14, !dbg !19641
  %count = getelementptr inbounds %struct.ips_wait_queue, %struct.ips_wait_queue* %scb_waitlist, i32 0, i32 2, !dbg !19642
  %197 = load i32, i32* %count, align 8, !dbg !19642
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %195, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.77, i64 0, i64 0), i32 %197) #11, !dbg !19643
  %198 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19644
  %199 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19645
  %scb_activelist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %199, i32 0, i32 16, !dbg !19646
  %count222 = getelementptr inbounds %struct.ips_scb_queue, %struct.ips_scb_queue* %scb_activelist, i32 0, i32 2, !dbg !19647
  %200 = load i32, i32* %count222, align 8, !dbg !19647
  %201 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19648
  %num_ioctl = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %201, i32 0, i32 10, !dbg !19649
  %202 = load i32, i32* %num_ioctl, align 4, !dbg !19649
  %sub223 = sub i32 %200, %202, !dbg !19650
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %198, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.78, i64 0, i64 0), i32 %sub223) #11, !dbg !19651
  %203 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19652
  %204 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19653
  %copp_waitlist = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %204, i32 0, i32 15, !dbg !19654
  %count224 = getelementptr inbounds %struct.ips_copp_queue, %struct.ips_copp_queue* %copp_waitlist, i32 0, i32 2, !dbg !19655
  %205 = load i32, i32* %count224, align 8, !dbg !19655
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %203, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.79, i64 0, i64 0), i32 %205) #11, !dbg !19656
  %206 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19657
  %207 = load %struct.ips_ha*, %struct.ips_ha** %ha.addr, align 8, !dbg !19658
  %num_ioctl225 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %207, i32 0, i32 10, !dbg !19659
  %208 = load i32, i32* %num_ioctl225, align 4, !dbg !19659
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %206, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.80, i64 0, i64 0), i32 %208) #11, !dbg !19660
  %209 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !19661
  call void @seq_putc(%struct.seq_file* %209, i8 signext 10) #11, !dbg !19662
  ret i32 0, !dbg !19663
}

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @seq_putc(%struct.seq_file*, i8 signext) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !19664 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19667, metadata !DIExpression()), !dbg !19668
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !19669, metadata !DIExpression()), !dbg !19670
  %0 = load i8*, i8** %data.addr, align 8, !dbg !19671
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19672
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !19673
  store i8* %0, i8** %driver_data, align 8, !dbg !19674
  ret void, !dbg !19675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #0 !dbg !19676 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !19679, metadata !DIExpression()), !dbg !19680
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !19681
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !19682
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !19683
  ret i8* %call, !dbg !19684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_release(%struct.Scsi_Host* %sh) #0 !dbg !19685 {
entry:
  %retval = alloca i32, align 4
  %sh.addr = alloca %struct.Scsi_Host*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %i = alloca i32, align 4
  store %struct.Scsi_Host* %sh, %struct.Scsi_Host** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %sh.addr, metadata !19686, metadata !DIExpression()), !dbg !19687
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !19688, metadata !DIExpression()), !dbg !19689
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !19690, metadata !DIExpression()), !dbg !19691
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19692, metadata !DIExpression()), !dbg !19693
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh.addr, align 8, !dbg !19694
  call void @scsi_remove_host(%struct.Scsi_Host* %0) #11, !dbg !19695
  store i32 0, i32* %i, align 4, !dbg !19696
  br label %for.cond, !dbg !19698

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !19699
  %cmp = icmp slt i32 %1, 16, !dbg !19701
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19702

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !19703
  %idxprom = sext i32 %2 to i64, !dbg !19704
  %arrayidx = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom, !dbg !19704
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx, align 8, !dbg !19704
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh.addr, align 8, !dbg !19705
  %cmp1 = icmp ne %struct.Scsi_Host* %3, %4, !dbg !19706
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !19707
  br i1 %5, label %for.body, label %for.end, !dbg !19708

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !19708

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !19709
  %inc = add i32 %6, 1, !dbg !19709
  store i32 %inc, i32* %i, align 4, !dbg !19709
  br label %for.cond, !dbg !19710, !llvm.loop !19711

for.end:                                          ; preds = %land.end
  %7 = load i32, i32* %i, align 4, !dbg !19713
  %cmp2 = icmp eq i32 %7, 16, !dbg !19715
  br i1 %cmp2, label %if.then, label %if.end, !dbg !19716

if.then:                                          ; preds = %for.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ips_name, i64 0, i64 0)) #12, !dbg !19717
  br label %do.body, !dbg !19719

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !19720

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !19722

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !19720

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i32 657, i32 0, i64 12) #10, !dbg !19724, !srcloc !19726
  br label %do.end5, !dbg !19724

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !19720

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 298) #10, !dbg !19727, !srcloc !19730
  unreachable, !dbg !19731

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !19720

do.end8:                                          ; preds = %do.end7
  store i32 0, i32* %retval, align 4, !dbg !19732
  br label %return, !dbg !19732

if.end:                                           ; preds = %for.end
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh.addr, align 8, !dbg !19733
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 51, !dbg !19733
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !19733
  %9 = bitcast i64* %arraydecay to %struct.ips_ha*, !dbg !19733
  store %struct.ips_ha* %9, %struct.ips_ha** %ha, align 8, !dbg !19734
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19735
  %tobool = icmp ne %struct.ips_ha* %10, null, !dbg !19735
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !19737

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !19738
  br label %return, !dbg !19738

if.end10:                                         ; preds = %if.end
  %11 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19739
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %11, i32 0, i32 12, !dbg !19740
  %12 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !19740
  %13 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19741
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %13, i32 0, i32 9, !dbg !19742
  %14 = load i32, i32* %max_cmds, align 8, !dbg !19742
  %sub = sub i32 %14, 1, !dbg !19743
  %idxprom11 = zext i32 %sub to i64, !dbg !19739
  %arrayidx12 = getelementptr %struct.ips_scb, %struct.ips_scb* %12, i64 %idxprom11, !dbg !19739
  store %struct.ips_scb* %arrayidx12, %struct.ips_scb** %scb, align 8, !dbg !19744
  %15 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19745
  %16 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19746
  call void @ips_init_scb(%struct.ips_ha* %15, %struct.ips_scb* %16) #11, !dbg !19747
  %17 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !19748
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19749
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 8, !dbg !19750
  store i32 %17, i32* %timeout, align 4, !dbg !19751
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19752
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 5, !dbg !19753
  %arrayidx13 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !19752
  store i8 10, i8* %arrayidx13, align 1, !dbg !19754
  %20 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19755
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %20, i32 0, i32 0, !dbg !19756
  %flush_cache = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FC_CMD*, !dbg !19757
  %op_code = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache, i32 0, i32 0, !dbg !19758
  store i8 10, i8* %op_code, align 8, !dbg !19759
  %21 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19760
  %22 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19760
  %scbs14 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %22, i32 0, i32 12, !dbg !19760
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scbs14, align 8, !dbg !19760
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %21 to i64, !dbg !19760
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %23 to i64, !dbg !19760
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19760
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !19760
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !19760
  %conv15 = trunc i32 %conv to i8, !dbg !19760
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19761
  %cmd16 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 0, !dbg !19762
  %flush_cache17 = bitcast %union.IPS_HOST_COMMAND* %cmd16 to %struct.IPS_FC_CMD*, !dbg !19763
  %command_id = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache17, i32 0, i32 1, !dbg !19764
  store i8 %conv15, i8* %command_id, align 1, !dbg !19765
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19766
  %cmd18 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %25, i32 0, i32 0, !dbg !19767
  %flush_cache19 = bitcast %union.IPS_HOST_COMMAND* %cmd18 to %struct.IPS_FC_CMD*, !dbg !19768
  %state = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache19, i32 0, i32 3, !dbg !19769
  store i8 0, i8* %state, align 1, !dbg !19770
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19771
  %cmd20 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %26, i32 0, i32 0, !dbg !19772
  %flush_cache21 = bitcast %union.IPS_HOST_COMMAND* %cmd20 to %struct.IPS_FC_CMD*, !dbg !19773
  %reserved = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache21, i32 0, i32 2, !dbg !19774
  store i8 0, i8* %reserved, align 2, !dbg !19775
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19776
  %cmd22 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %27, i32 0, i32 0, !dbg !19777
  %flush_cache23 = bitcast %union.IPS_HOST_COMMAND* %cmd22 to %struct.IPS_FC_CMD*, !dbg !19778
  %reserved2 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache23, i32 0, i32 4, !dbg !19779
  store i32 0, i32* %reserved2, align 4, !dbg !19780
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19781
  %cmd24 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 0, !dbg !19782
  %flush_cache25 = bitcast %union.IPS_HOST_COMMAND* %cmd24 to %struct.IPS_FC_CMD*, !dbg !19783
  %reserved3 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache25, i32 0, i32 5, !dbg !19784
  store i32 0, i32* %reserved3, align 8, !dbg !19785
  %29 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19786
  %cmd26 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %29, i32 0, i32 0, !dbg !19787
  %flush_cache27 = bitcast %union.IPS_HOST_COMMAND* %cmd26 to %struct.IPS_FC_CMD*, !dbg !19788
  %reserved4 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache27, i32 0, i32 6, !dbg !19789
  store i32 0, i32* %reserved4, align 4, !dbg !19790
  %30 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19791
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %30, i32 0, i32 44, !dbg !19791
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !19791
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !19791
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i64 0, i64 0)) #12, !dbg !19791
  %32 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19792
  %33 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19794
  %34 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !19795
  %call28 = call i32 @ips_send_wait(%struct.ips_ha* %32, %struct.ips_scb* %33, i32 %34, i32 0) #11, !dbg !19796
  %cmp29 = icmp eq i32 %call28, 4, !dbg !19797
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !19798

if.then31:                                        ; preds = %if.end10
  %35 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19799
  %pcidev32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %35, i32 0, i32 44, !dbg !19799
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pcidev32, align 8, !dbg !19799
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !19799
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev33, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.83, i64 0, i64 0)) #12, !dbg !19799
  br label %if.end34, !dbg !19799

if.end34:                                         ; preds = %if.then31, %if.end10
  %37 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19800
  %pcidev35 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %37, i32 0, i32 44, !dbg !19800
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pcidev35, align 8, !dbg !19800
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !19800
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev36, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.84, i64 0, i64 0)) #12, !dbg !19800
  %39 = load i32, i32* %i, align 4, !dbg !19801
  %idxprom37 = sext i32 %39 to i64, !dbg !19802
  %arrayidx38 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom37, !dbg !19802
  store %struct.Scsi_Host* null, %struct.Scsi_Host** %arrayidx38, align 8, !dbg !19803
  %40 = load i32, i32* %i, align 4, !dbg !19804
  %idxprom39 = sext i32 %40 to i64, !dbg !19805
  %arrayidx40 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom39, !dbg !19805
  store %struct.ips_ha* null, %struct.ips_ha** %arrayidx40, align 8, !dbg !19806
  %41 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19807
  call void @ips_free(%struct.ips_ha* %41) #11, !dbg !19808
  %42 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19809
  %pcidev41 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %42, i32 0, i32 44, !dbg !19810
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pcidev41, align 8, !dbg !19810
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 43, !dbg !19811
  %44 = load i32, i32* %irq, align 4, !dbg !19811
  %45 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19812
  %46 = bitcast %struct.ips_ha* %45 to i8*, !dbg !19812
  %call42 = call i8* @free_irq(i32 %44, i8* %46) #11, !dbg !19813
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh.addr, align 8, !dbg !19814
  call void @scsi_host_put(%struct.Scsi_Host* %47) #11, !dbg !19815
  %48 = load i32, i32* @ips_released_controllers, align 4, !dbg !19816
  %inc43 = add i32 %48, 1, !dbg !19816
  store i32 %inc43, i32* @ips_released_controllers, align 4, !dbg !19816
  store i32 0, i32* %retval, align 4, !dbg !19817
  br label %return, !dbg !19817

return:                                           ; preds = %if.end34, %if.then9, %do.end8
  %49 = load i32, i32* %retval, align 4, !dbg !19818
  ret i32 %49, !dbg !19818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !19819 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19822, metadata !DIExpression()), !dbg !19823
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19824
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !19825
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19825
  ret i8* %1, !dbg !19826
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_halt(%struct.notifier_block* %nb, i64 %event, i8* %buf) #0 !dbg !19827 {
entry:
  %retval = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %event.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %scb = alloca %struct.ips_scb*, align 8
  %ha = alloca %struct.ips_ha*, align 8
  %i = alloca i32, align 4
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !19831, metadata !DIExpression()), !dbg !19832
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !19833, metadata !DIExpression()), !dbg !19834
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19835, metadata !DIExpression()), !dbg !19836
  call void @llvm.dbg.declare(metadata %struct.ips_scb** %scb, metadata !19837, metadata !DIExpression()), !dbg !19838
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha, metadata !19839, metadata !DIExpression()), !dbg !19840
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19841, metadata !DIExpression()), !dbg !19842
  %0 = load i64, i64* %event.addr, align 8, !dbg !19843
  %cmp = icmp ne i64 %0, 1, !dbg !19845
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19846

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, i64* %event.addr, align 8, !dbg !19847
  %cmp1 = icmp ne i64 %1, 2, !dbg !19848
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !19849

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i64, i64* %event.addr, align 8, !dbg !19850
  %cmp3 = icmp ne i64 %2, 3, !dbg !19851
  br i1 %cmp3, label %if.then, label %if.end, !dbg !19852

if.then:                                          ; preds = %land.lhs.true2
  store i32 0, i32* %retval, align 4, !dbg !19853
  br label %return, !dbg !19853

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %i, align 4, !dbg !19854
  br label %for.cond, !dbg !19856

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !19857
  %4 = load i32, i32* @ips_next_controller, align 4, !dbg !19859
  %cmp4 = icmp ult i32 %3, %4, !dbg !19860
  br i1 %cmp4, label %for.body, label %for.end, !dbg !19861

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !19862
  %idxprom = sext i32 %5 to i64, !dbg !19864
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !19864
  %6 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !19864
  store %struct.ips_ha* %6, %struct.ips_ha** %ha, align 8, !dbg !19865
  %7 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19866
  %tobool = icmp ne %struct.ips_ha* %7, null, !dbg !19866
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !19868

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !19869

if.end6:                                          ; preds = %for.body
  %8 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19870
  %active = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %8, i32 0, i32 30, !dbg !19872
  %9 = load i8, i8* %active, align 1, !dbg !19872
  %tobool7 = icmp ne i8 %9, 0, !dbg !19870
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !19873

if.then8:                                         ; preds = %if.end6
  br label %for.inc, !dbg !19874

if.end9:                                          ; preds = %if.end6
  %10 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19875
  %scbs = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %10, i32 0, i32 12, !dbg !19876
  %11 = load %struct.ips_scb*, %struct.ips_scb** %scbs, align 8, !dbg !19876
  %12 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19877
  %max_cmds = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 9, !dbg !19878
  %13 = load i32, i32* %max_cmds, align 8, !dbg !19878
  %sub = sub i32 %13, 1, !dbg !19879
  %idxprom10 = zext i32 %sub to i64, !dbg !19875
  %arrayidx11 = getelementptr %struct.ips_scb, %struct.ips_scb* %11, i64 %idxprom10, !dbg !19875
  store %struct.ips_scb* %arrayidx11, %struct.ips_scb** %scb, align 8, !dbg !19880
  %14 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19881
  %15 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19882
  call void @ips_init_scb(%struct.ips_ha* %14, %struct.ips_scb* %15) #11, !dbg !19883
  %16 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !19884
  %17 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19885
  %timeout = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %17, i32 0, i32 8, !dbg !19886
  store i32 %16, i32* %timeout, align 4, !dbg !19887
  %18 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19888
  %cdb = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %18, i32 0, i32 5, !dbg !19889
  %arrayidx12 = getelementptr [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !19888
  store i8 10, i8* %arrayidx12, align 1, !dbg !19890
  %19 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19891
  %cmd = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %19, i32 0, i32 0, !dbg !19892
  %flush_cache = bitcast %union.IPS_HOST_COMMAND* %cmd to %struct.IPS_FC_CMD*, !dbg !19893
  %op_code = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache, i32 0, i32 0, !dbg !19894
  store i8 10, i8* %op_code, align 8, !dbg !19895
  %20 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19896
  %21 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19896
  %scbs13 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %21, i32 0, i32 12, !dbg !19896
  %22 = load %struct.ips_scb*, %struct.ips_scb** %scbs13, align 8, !dbg !19896
  %sub.ptr.lhs.cast = ptrtoint %struct.ips_scb* %20 to i64, !dbg !19896
  %sub.ptr.rhs.cast = ptrtoint %struct.ips_scb* %22 to i64, !dbg !19896
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19896
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 216, !dbg !19896
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !19896
  %conv14 = trunc i32 %conv to i8, !dbg !19896
  %23 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19897
  %cmd15 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %23, i32 0, i32 0, !dbg !19898
  %flush_cache16 = bitcast %union.IPS_HOST_COMMAND* %cmd15 to %struct.IPS_FC_CMD*, !dbg !19899
  %command_id = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache16, i32 0, i32 1, !dbg !19900
  store i8 %conv14, i8* %command_id, align 1, !dbg !19901
  %24 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19902
  %cmd17 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %24, i32 0, i32 0, !dbg !19903
  %flush_cache18 = bitcast %union.IPS_HOST_COMMAND* %cmd17 to %struct.IPS_FC_CMD*, !dbg !19904
  %state = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache18, i32 0, i32 3, !dbg !19905
  store i8 0, i8* %state, align 1, !dbg !19906
  %25 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19907
  %cmd19 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %25, i32 0, i32 0, !dbg !19908
  %flush_cache20 = bitcast %union.IPS_HOST_COMMAND* %cmd19 to %struct.IPS_FC_CMD*, !dbg !19909
  %reserved = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache20, i32 0, i32 2, !dbg !19910
  store i8 0, i8* %reserved, align 2, !dbg !19911
  %26 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19912
  %cmd21 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %26, i32 0, i32 0, !dbg !19913
  %flush_cache22 = bitcast %union.IPS_HOST_COMMAND* %cmd21 to %struct.IPS_FC_CMD*, !dbg !19914
  %reserved2 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache22, i32 0, i32 4, !dbg !19915
  store i32 0, i32* %reserved2, align 4, !dbg !19916
  %27 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19917
  %cmd23 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %27, i32 0, i32 0, !dbg !19918
  %flush_cache24 = bitcast %union.IPS_HOST_COMMAND* %cmd23 to %struct.IPS_FC_CMD*, !dbg !19919
  %reserved3 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache24, i32 0, i32 5, !dbg !19920
  store i32 0, i32* %reserved3, align 8, !dbg !19921
  %28 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19922
  %cmd25 = getelementptr inbounds %struct.ips_scb, %struct.ips_scb* %28, i32 0, i32 0, !dbg !19923
  %flush_cache26 = bitcast %union.IPS_HOST_COMMAND* %cmd25 to %struct.IPS_FC_CMD*, !dbg !19924
  %reserved4 = getelementptr inbounds %struct.IPS_FC_CMD, %struct.IPS_FC_CMD* %flush_cache26, i32 0, i32 6, !dbg !19925
  store i32 0, i32* %reserved4, align 4, !dbg !19926
  %29 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19927
  %pcidev = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %29, i32 0, i32 44, !dbg !19927
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !19927
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !19927
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i64 0, i64 0)) #12, !dbg !19927
  %31 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19928
  %32 = load %struct.ips_scb*, %struct.ips_scb** %scb, align 8, !dbg !19930
  %33 = load i32, i32* @ips_cmd_timeout, align 4, !dbg !19931
  %call = call i32 @ips_send_wait(%struct.ips_ha* %31, %struct.ips_scb* %32, i32 %33, i32 0) #11, !dbg !19932
  %cmp27 = icmp eq i32 %call, 4, !dbg !19933
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !19934

if.then29:                                        ; preds = %if.end9
  %34 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19935
  %pcidev30 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %34, i32 0, i32 44, !dbg !19935
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pcidev30, align 8, !dbg !19935
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !19935
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.83, i64 0, i64 0)) #12, !dbg !19935
  br label %if.end34, !dbg !19935

if.else:                                          ; preds = %if.end9
  %36 = load %struct.ips_ha*, %struct.ips_ha** %ha, align 8, !dbg !19936
  %pcidev32 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %36, i32 0, i32 44, !dbg !19936
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pcidev32, align 8, !dbg !19936
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !19936
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.device* %dev33, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.84, i64 0, i64 0)) #12, !dbg !19936
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then29
  br label %for.inc, !dbg !19937

for.inc:                                          ; preds = %if.end34, %if.then8, %if.then5
  %38 = load i32, i32* %i, align 4, !dbg !19938
  %inc = add i32 %38, 1, !dbg !19938
  store i32 %inc, i32* %i, align 4, !dbg !19938
  br label %for.cond, !dbg !19939, !llvm.loop !19940

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !19942
  br label %return, !dbg !19942

return:                                           ; preds = %for.end, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !19943
  ret i32 %39, !dbg !19943
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_order_controllers() #0 !dbg !19944 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  %position = alloca i32, align 4
  %nvram = alloca %struct.IPS_NVRAM_P5*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19945, metadata !DIExpression()), !dbg !19946
  call void @llvm.dbg.declare(metadata i32* %j, metadata !19947, metadata !DIExpression()), !dbg !19948
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !19949, metadata !DIExpression()), !dbg !19950
  call void @llvm.dbg.declare(metadata i32* %position, metadata !19951, metadata !DIExpression()), !dbg !19952
  store i32 0, i32* %position, align 4, !dbg !19952
  call void @llvm.dbg.declare(metadata %struct.IPS_NVRAM_P5** %nvram, metadata !19953, metadata !DIExpression()), !dbg !19954
  %0 = load %struct.ips_ha*, %struct.ips_ha** getelementptr inbounds ([16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 0), align 16, !dbg !19955
  %tobool = icmp ne %struct.ips_ha* %0, null, !dbg !19955
  br i1 %tobool, label %if.end, label %if.then, !dbg !19957

if.then:                                          ; preds = %entry
  br label %return, !dbg !19958

if.end:                                           ; preds = %entry
  %1 = load %struct.ips_ha*, %struct.ips_ha** getelementptr inbounds ([16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 0), align 16, !dbg !19959
  %nvram1 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %1, i32 0, i32 23, !dbg !19960
  %2 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram1, align 8, !dbg !19960
  store %struct.IPS_NVRAM_P5* %2, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !19961
  %3 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !19962
  %adapter_order = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %3, i32 0, i32 15, !dbg !19964
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %adapter_order, i64 0, i64 0, !dbg !19962
  %4 = load i8, i8* %arrayidx, align 4, !dbg !19962
  %tobool2 = icmp ne i8 %4, 0, !dbg !19962
  br i1 %tobool2, label %if.then3, label %if.end55, !dbg !19965

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %i, align 4, !dbg !19966
  br label %for.cond, !dbg !19969

for.cond:                                         ; preds = %for.inc52, %if.then3
  %5 = load i32, i32* %i, align 4, !dbg !19970
  %6 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !19972
  %adapter_order4 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %6, i32 0, i32 15, !dbg !19973
  %arrayidx5 = getelementptr [16 x i8], [16 x i8]* %adapter_order4, i64 0, i64 0, !dbg !19972
  %7 = load i8, i8* %arrayidx5, align 4, !dbg !19972
  %conv = zext i8 %7 to i32, !dbg !19972
  %cmp = icmp sle i32 %5, %conv, !dbg !19974
  br i1 %cmp, label %for.body, label %for.end54, !dbg !19975

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %position, align 4, !dbg !19976
  store i32 %8, i32* %j, align 4, !dbg !19979
  br label %for.cond7, !dbg !19980

for.cond7:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %j, align 4, !dbg !19981
  %10 = load i32, i32* @ips_num_controllers, align 4, !dbg !19983
  %cmp8 = icmp ult i32 %9, %10, !dbg !19984
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !19985

for.body10:                                       ; preds = %for.cond7
  %11 = load i32, i32* %j, align 4, !dbg !19986
  %idxprom = sext i32 %11 to i64, !dbg !19988
  %arrayidx11 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !19988
  %12 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx11, align 8, !dbg !19988
  %ad_type = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %12, i32 0, i32 6, !dbg !19989
  %13 = load i16, i16* %ad_type, align 8, !dbg !19989
  %conv12 = zext i16 %13 to i32, !dbg !19988
  switch i32 %conv12, label %sw.default [
    i32 14, label %sw.bb
    i32 18, label %sw.bb
    i32 9, label %sw.bb21
    i32 8, label %sw.bb21
    i32 10, label %sw.bb21
    i32 11, label %sw.bb21
    i32 15, label %sw.bb31
    i32 12, label %sw.bb31
    i32 13, label %sw.bb31
    i32 17, label %sw.bb31
    i32 1, label %sw.bb41
    i32 2, label %sw.bb41
    i32 3, label %sw.bb41
    i32 4, label %sw.bb41
    i32 6, label %sw.bb41
    i32 5, label %sw.bb41
    i32 7, label %sw.bb41
  ], !dbg !19990

sw.bb:                                            ; preds = %for.body10, %for.body10
  %14 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !19991
  %adapter_order13 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %14, i32 0, i32 15, !dbg !19994
  %15 = load i32, i32* %i, align 4, !dbg !19995
  %idxprom14 = sext i32 %15 to i64, !dbg !19991
  %arrayidx15 = getelementptr [16 x i8], [16 x i8]* %adapter_order13, i64 0, i64 %idxprom14, !dbg !19991
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !19991
  %conv16 = zext i8 %16 to i32, !dbg !19991
  %cmp17 = icmp eq i32 %conv16, 77, !dbg !19996
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !19997

if.then19:                                        ; preds = %sw.bb
  %17 = load i32, i32* %position, align 4, !dbg !19998
  %18 = load i32, i32* %j, align 4, !dbg !20000
  call void @ips_shift_controllers(i32 %17, i32 %18) #11, !dbg !20001
  %19 = load i32, i32* %position, align 4, !dbg !20002
  %inc = add i32 %19, 1, !dbg !20002
  store i32 %inc, i32* %position, align 4, !dbg !20002
  br label %if.end20, !dbg !20003

if.end20:                                         ; preds = %if.then19, %sw.bb
  br label %sw.epilog, !dbg !20004

sw.bb21:                                          ; preds = %for.body10, %for.body10, %for.body10, %for.body10
  %20 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !20005
  %adapter_order22 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %20, i32 0, i32 15, !dbg !20007
  %21 = load i32, i32* %i, align 4, !dbg !20008
  %idxprom23 = sext i32 %21 to i64, !dbg !20005
  %arrayidx24 = getelementptr [16 x i8], [16 x i8]* %adapter_order22, i64 0, i64 %idxprom23, !dbg !20005
  %22 = load i8, i8* %arrayidx24, align 1, !dbg !20005
  %conv25 = zext i8 %22 to i32, !dbg !20005
  %cmp26 = icmp eq i32 %conv25, 78, !dbg !20009
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !20010

if.then28:                                        ; preds = %sw.bb21
  %23 = load i32, i32* %position, align 4, !dbg !20011
  %24 = load i32, i32* %j, align 4, !dbg !20013
  call void @ips_shift_controllers(i32 %23, i32 %24) #11, !dbg !20014
  %25 = load i32, i32* %position, align 4, !dbg !20015
  %inc29 = add i32 %25, 1, !dbg !20015
  store i32 %inc29, i32* %position, align 4, !dbg !20015
  br label %if.end30, !dbg !20016

if.end30:                                         ; preds = %if.then28, %sw.bb21
  br label %sw.epilog, !dbg !20017

sw.bb31:                                          ; preds = %for.body10, %for.body10, %for.body10, %for.body10
  %26 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !20018
  %adapter_order32 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %26, i32 0, i32 15, !dbg !20020
  %27 = load i32, i32* %i, align 4, !dbg !20021
  %idxprom33 = sext i32 %27 to i64, !dbg !20018
  %arrayidx34 = getelementptr [16 x i8], [16 x i8]* %adapter_order32, i64 0, i64 %idxprom33, !dbg !20018
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !20018
  %conv35 = zext i8 %28 to i32, !dbg !20018
  %cmp36 = icmp eq i32 %conv35, 83, !dbg !20022
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !20023

if.then38:                                        ; preds = %sw.bb31
  %29 = load i32, i32* %position, align 4, !dbg !20024
  %30 = load i32, i32* %j, align 4, !dbg !20026
  call void @ips_shift_controllers(i32 %29, i32 %30) #11, !dbg !20027
  %31 = load i32, i32* %position, align 4, !dbg !20028
  %inc39 = add i32 %31, 1, !dbg !20028
  store i32 %inc39, i32* %position, align 4, !dbg !20028
  br label %if.end40, !dbg !20029

if.end40:                                         ; preds = %if.then38, %sw.bb31
  br label %sw.epilog, !dbg !20030

sw.bb41:                                          ; preds = %for.body10, %for.body10, %for.body10, %for.body10, %for.body10, %for.body10, %for.body10
  %32 = load %struct.IPS_NVRAM_P5*, %struct.IPS_NVRAM_P5** %nvram, align 8, !dbg !20031
  %adapter_order42 = getelementptr inbounds %struct.IPS_NVRAM_P5, %struct.IPS_NVRAM_P5* %32, i32 0, i32 15, !dbg !20033
  %33 = load i32, i32* %i, align 4, !dbg !20034
  %idxprom43 = sext i32 %33 to i64, !dbg !20031
  %arrayidx44 = getelementptr [16 x i8], [16 x i8]* %adapter_order42, i64 0, i64 %idxprom43, !dbg !20031
  %34 = load i8, i8* %arrayidx44, align 1, !dbg !20031
  %conv45 = zext i8 %34 to i32, !dbg !20031
  %cmp46 = icmp eq i32 %conv45, 65, !dbg !20035
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !20036

if.then48:                                        ; preds = %sw.bb41
  %35 = load i32, i32* %position, align 4, !dbg !20037
  %36 = load i32, i32* %j, align 4, !dbg !20039
  call void @ips_shift_controllers(i32 %35, i32 %36) #11, !dbg !20040
  %37 = load i32, i32* %position, align 4, !dbg !20041
  %inc49 = add i32 %37, 1, !dbg !20041
  store i32 %inc49, i32* %position, align 4, !dbg !20041
  br label %if.end50, !dbg !20042

if.end50:                                         ; preds = %if.then48, %sw.bb41
  br label %sw.epilog, !dbg !20043

sw.default:                                       ; preds = %for.body10
  br label %sw.epilog, !dbg !20044

sw.epilog:                                        ; preds = %sw.default, %if.end50, %if.end40, %if.end30, %if.end20
  br label %for.inc, !dbg !20045

for.inc:                                          ; preds = %sw.epilog
  %38 = load i32, i32* %j, align 4, !dbg !20046
  %inc51 = add i32 %38, 1, !dbg !20046
  store i32 %inc51, i32* %j, align 4, !dbg !20046
  br label %for.cond7, !dbg !20047, !llvm.loop !20048

for.end:                                          ; preds = %for.cond7
  br label %for.inc52, !dbg !20050

for.inc52:                                        ; preds = %for.end
  %39 = load i32, i32* %i, align 4, !dbg !20051
  %inc53 = add i32 %39, 1, !dbg !20051
  store i32 %inc53, i32* %i, align 4, !dbg !20051
  br label %for.cond, !dbg !20052, !llvm.loop !20053

for.end54:                                        ; preds = %for.cond
  br label %return, !dbg !20055

if.end55:                                         ; preds = %if.end
  store i32 0, i32* %tmp, align 4, !dbg !20056
  %40 = load i32, i32* %position, align 4, !dbg !20057
  store i32 %40, i32* %i, align 4, !dbg !20059
  br label %for.cond56, !dbg !20060

for.cond56:                                       ; preds = %for.inc75, %if.end55
  %41 = load i32, i32* %i, align 4, !dbg !20061
  %42 = load i32, i32* @ips_num_controllers, align 4, !dbg !20063
  %cmp57 = icmp ult i32 %41, %42, !dbg !20064
  br i1 %cmp57, label %for.body59, label %for.end77, !dbg !20065

for.body59:                                       ; preds = %for.cond56
  %43 = load i32, i32* %i, align 4, !dbg !20066
  %idxprom60 = sext i32 %43 to i64, !dbg !20069
  %arrayidx61 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom60, !dbg !20069
  %44 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx61, align 8, !dbg !20069
  %ad_type62 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %44, i32 0, i32 6, !dbg !20070
  %45 = load i16, i16* %ad_type62, align 8, !dbg !20070
  %conv63 = zext i16 %45 to i32, !dbg !20069
  %cmp64 = icmp eq i32 %conv63, 12, !dbg !20071
  br i1 %cmp64, label %if.then72, label %lor.lhs.false, !dbg !20072

lor.lhs.false:                                    ; preds = %for.body59
  %46 = load i32, i32* %i, align 4, !dbg !20073
  %idxprom66 = sext i32 %46 to i64, !dbg !20074
  %arrayidx67 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom66, !dbg !20074
  %47 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx67, align 8, !dbg !20074
  %ad_type68 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %47, i32 0, i32 6, !dbg !20075
  %48 = load i16, i16* %ad_type68, align 8, !dbg !20075
  %conv69 = zext i16 %48 to i32, !dbg !20074
  %cmp70 = icmp eq i32 %conv69, 13, !dbg !20076
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !20077

if.then72:                                        ; preds = %lor.lhs.false, %for.body59
  %49 = load i32, i32* %position, align 4, !dbg !20078
  %50 = load i32, i32* %i, align 4, !dbg !20080
  call void @ips_shift_controllers(i32 %49, i32 %50) #11, !dbg !20081
  %51 = load i32, i32* %position, align 4, !dbg !20082
  %inc73 = add i32 %51, 1, !dbg !20082
  store i32 %inc73, i32* %position, align 4, !dbg !20082
  store i32 1, i32* %tmp, align 4, !dbg !20083
  br label %if.end74, !dbg !20084

if.end74:                                         ; preds = %if.then72, %lor.lhs.false
  br label %for.inc75, !dbg !20085

for.inc75:                                        ; preds = %if.end74
  %52 = load i32, i32* %i, align 4, !dbg !20086
  %inc76 = add i32 %52, 1, !dbg !20086
  store i32 %inc76, i32* %i, align 4, !dbg !20086
  br label %for.cond56, !dbg !20087, !llvm.loop !20088

for.end77:                                        ; preds = %for.cond56
  %53 = load i32, i32* %tmp, align 4, !dbg !20090
  %tobool78 = icmp ne i32 %53, 0, !dbg !20090
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !20092

if.then79:                                        ; preds = %for.end77
  br label %return, !dbg !20093

if.end80:                                         ; preds = %for.end77
  %54 = load i32, i32* %position, align 4, !dbg !20094
  store i32 %54, i32* %i, align 4, !dbg !20096
  br label %for.cond81, !dbg !20097

for.cond81:                                       ; preds = %for.inc115, %if.end80
  %55 = load i32, i32* %i, align 4, !dbg !20098
  %56 = load i32, i32* @ips_num_controllers, align 4, !dbg !20100
  %cmp82 = icmp ult i32 %55, %56, !dbg !20101
  br i1 %cmp82, label %for.body84, label %for.end117, !dbg !20102

for.body84:                                       ; preds = %for.cond81
  %57 = load i32, i32* %i, align 4, !dbg !20103
  %idxprom85 = sext i32 %57 to i64, !dbg !20106
  %arrayidx86 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom85, !dbg !20106
  %58 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx86, align 8, !dbg !20106
  %ad_type87 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %58, i32 0, i32 6, !dbg !20107
  %59 = load i16, i16* %ad_type87, align 8, !dbg !20107
  %conv88 = zext i16 %59 to i32, !dbg !20106
  %cmp89 = icmp eq i32 %conv88, 9, !dbg !20108
  br i1 %cmp89, label %if.then112, label %lor.lhs.false91, !dbg !20109

lor.lhs.false91:                                  ; preds = %for.body84
  %60 = load i32, i32* %i, align 4, !dbg !20110
  %idxprom92 = sext i32 %60 to i64, !dbg !20111
  %arrayidx93 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom92, !dbg !20111
  %61 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx93, align 8, !dbg !20111
  %ad_type94 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %61, i32 0, i32 6, !dbg !20112
  %62 = load i16, i16* %ad_type94, align 8, !dbg !20112
  %conv95 = zext i16 %62 to i32, !dbg !20111
  %cmp96 = icmp eq i32 %conv95, 8, !dbg !20113
  br i1 %cmp96, label %if.then112, label %lor.lhs.false98, !dbg !20114

lor.lhs.false98:                                  ; preds = %lor.lhs.false91
  %63 = load i32, i32* %i, align 4, !dbg !20115
  %idxprom99 = sext i32 %63 to i64, !dbg !20116
  %arrayidx100 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom99, !dbg !20116
  %64 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx100, align 8, !dbg !20116
  %ad_type101 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %64, i32 0, i32 6, !dbg !20117
  %65 = load i16, i16* %ad_type101, align 8, !dbg !20117
  %conv102 = zext i16 %65 to i32, !dbg !20116
  %cmp103 = icmp eq i32 %conv102, 11, !dbg !20118
  br i1 %cmp103, label %if.then112, label %lor.lhs.false105, !dbg !20119

lor.lhs.false105:                                 ; preds = %lor.lhs.false98
  %66 = load i32, i32* %i, align 4, !dbg !20120
  %idxprom106 = sext i32 %66 to i64, !dbg !20121
  %arrayidx107 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom106, !dbg !20121
  %67 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx107, align 8, !dbg !20121
  %ad_type108 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %67, i32 0, i32 6, !dbg !20122
  %68 = load i16, i16* %ad_type108, align 8, !dbg !20122
  %conv109 = zext i16 %68 to i32, !dbg !20121
  %cmp110 = icmp eq i32 %conv109, 10, !dbg !20123
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !20124

if.then112:                                       ; preds = %lor.lhs.false105, %lor.lhs.false98, %lor.lhs.false91, %for.body84
  %69 = load i32, i32* %position, align 4, !dbg !20125
  %70 = load i32, i32* %i, align 4, !dbg !20127
  call void @ips_shift_controllers(i32 %69, i32 %70) #11, !dbg !20128
  %71 = load i32, i32* %position, align 4, !dbg !20129
  %inc113 = add i32 %71, 1, !dbg !20129
  store i32 %inc113, i32* %position, align 4, !dbg !20129
  br label %if.end114, !dbg !20130

if.end114:                                        ; preds = %if.then112, %lor.lhs.false105
  br label %for.inc115, !dbg !20131

for.inc115:                                       ; preds = %if.end114
  %72 = load i32, i32* %i, align 4, !dbg !20132
  %inc116 = add i32 %72, 1, !dbg !20132
  store i32 %inc116, i32* %i, align 4, !dbg !20132
  br label %for.cond81, !dbg !20133, !llvm.loop !20134

for.end117:                                       ; preds = %for.cond81
  br label %return, !dbg !20136

return:                                           ; preds = %for.end117, %if.then79, %for.end54, %if.then
  ret void, !dbg !20137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ips_detect(%struct.scsi_host_template* %SHT) #0 !dbg !20138 {
entry:
  %SHT.addr = alloca %struct.scsi_host_template*, align 8
  %i = alloca i32, align 4
  store %struct.scsi_host_template* %SHT, %struct.scsi_host_template** %SHT.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %SHT.addr, metadata !20141, metadata !DIExpression()), !dbg !20142
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20143, metadata !DIExpression()), !dbg !20144
  store i32 0, i32* %i, align 4, !dbg !20145
  br label %for.cond, !dbg !20147

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !20148
  %1 = load i32, i32* @ips_num_controllers, align 4, !dbg !20150
  %cmp = icmp ult i32 %0, %1, !dbg !20151
  br i1 %cmp, label %for.body, label %for.end, !dbg !20152

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !20153
  %call = call i32 @ips_register_scsi(i32 %2) #11, !dbg !20156
  %tobool = icmp ne i32 %call, 0, !dbg !20156
  br i1 %tobool, label %if.then, label %if.end, !dbg !20157

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !20158
  %idxprom = sext i32 %3 to i64, !dbg !20159
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !20159
  %4 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !20159
  call void @ips_free(%struct.ips_ha* %4) #11, !dbg !20160
  br label %if.end, !dbg !20160

if.end:                                           ; preds = %if.then, %for.body
  %5 = load i32, i32* @ips_released_controllers, align 4, !dbg !20161
  %inc = add i32 %5, 1, !dbg !20161
  store i32 %inc, i32* @ips_released_controllers, align 4, !dbg !20161
  br label %for.inc, !dbg !20162

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !20163
  %inc1 = add i32 %6, 1, !dbg !20163
  store i32 %inc1, i32* %i, align 4, !dbg !20163
  br label %for.cond, !dbg !20164, !llvm.loop !20165

for.end:                                          ; preds = %for.cond
  store i32 1, i32* @ips_hotplug, align 4, !dbg !20167
  %7 = load i32, i32* @ips_num_controllers, align 4, !dbg !20168
  ret i32 %7, !dbg !20169
}

; Function Attrs: noredzone
declare dso_local i32 @register_reboot_notifier(%struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ips_shift_controllers(i32 %lowindex, i32 %highindex) #0 !dbg !20170 {
entry:
  %lowindex.addr = alloca i32, align 4
  %highindex.addr = alloca i32, align 4
  %ha_sav = alloca %struct.ips_ha*, align 8
  %sh_sav = alloca %struct.Scsi_Host*, align 8
  %i = alloca i32, align 4
  store i32 %lowindex, i32* %lowindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lowindex.addr, metadata !20173, metadata !DIExpression()), !dbg !20174
  store i32 %highindex, i32* %highindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %highindex.addr, metadata !20175, metadata !DIExpression()), !dbg !20176
  call void @llvm.dbg.declare(metadata %struct.ips_ha** %ha_sav, metadata !20177, metadata !DIExpression()), !dbg !20178
  %0 = load i32, i32* %highindex.addr, align 4, !dbg !20179
  %idxprom = sext i32 %0 to i64, !dbg !20180
  %arrayidx = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom, !dbg !20180
  %1 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx, align 8, !dbg !20180
  store %struct.ips_ha* %1, %struct.ips_ha** %ha_sav, align 8, !dbg !20178
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %sh_sav, metadata !20181, metadata !DIExpression()), !dbg !20182
  %2 = load i32, i32* %highindex.addr, align 4, !dbg !20183
  %idxprom1 = sext i32 %2 to i64, !dbg !20184
  %arrayidx2 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom1, !dbg !20184
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx2, align 8, !dbg !20184
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %sh_sav, align 8, !dbg !20182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20185, metadata !DIExpression()), !dbg !20186
  %4 = load i32, i32* %highindex.addr, align 4, !dbg !20187
  store i32 %4, i32* %i, align 4, !dbg !20189
  br label %for.cond, !dbg !20190

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !20191
  %6 = load i32, i32* %lowindex.addr, align 4, !dbg !20193
  %cmp = icmp sgt i32 %5, %6, !dbg !20194
  br i1 %cmp, label %for.body, label %for.end, !dbg !20195

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !20196
  %sub = sub i32 %7, 1, !dbg !20198
  %idxprom3 = sext i32 %sub to i64, !dbg !20199
  %arrayidx4 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom3, !dbg !20199
  %8 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx4, align 8, !dbg !20199
  %9 = load i32, i32* %i, align 4, !dbg !20200
  %idxprom5 = sext i32 %9 to i64, !dbg !20201
  %arrayidx6 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom5, !dbg !20201
  store %struct.ips_ha* %8, %struct.ips_ha** %arrayidx6, align 8, !dbg !20202
  %10 = load i32, i32* %i, align 4, !dbg !20203
  %sub7 = sub i32 %10, 1, !dbg !20204
  %idxprom8 = sext i32 %sub7 to i64, !dbg !20205
  %arrayidx9 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom8, !dbg !20205
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx9, align 8, !dbg !20205
  %12 = load i32, i32* %i, align 4, !dbg !20206
  %idxprom10 = sext i32 %12 to i64, !dbg !20207
  %arrayidx11 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom10, !dbg !20207
  store %struct.Scsi_Host* %11, %struct.Scsi_Host** %arrayidx11, align 8, !dbg !20208
  %13 = load i32, i32* %i, align 4, !dbg !20209
  %conv = trunc i32 %13 to i16, !dbg !20209
  %14 = load i32, i32* %i, align 4, !dbg !20210
  %idxprom12 = sext i32 %14 to i64, !dbg !20211
  %arrayidx13 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom12, !dbg !20211
  %15 = load %struct.ips_ha*, %struct.ips_ha** %arrayidx13, align 8, !dbg !20211
  %host_num = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %15, i32 0, i32 7, !dbg !20212
  store i16 %conv, i16* %host_num, align 2, !dbg !20213
  br label %for.inc, !dbg !20214

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !20215
  %dec = add i32 %16, -1, !dbg !20215
  store i32 %dec, i32* %i, align 4, !dbg !20215
  br label %for.cond, !dbg !20216, !llvm.loop !20217

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %lowindex.addr, align 4, !dbg !20219
  %conv14 = trunc i32 %17 to i16, !dbg !20219
  %18 = load %struct.ips_ha*, %struct.ips_ha** %ha_sav, align 8, !dbg !20220
  %host_num15 = getelementptr inbounds %struct.ips_ha, %struct.ips_ha* %18, i32 0, i32 7, !dbg !20221
  store i16 %conv14, i16* %host_num15, align 2, !dbg !20222
  %19 = load %struct.ips_ha*, %struct.ips_ha** %ha_sav, align 8, !dbg !20223
  %20 = load i32, i32* %lowindex.addr, align 4, !dbg !20224
  %idxprom16 = sext i32 %20 to i64, !dbg !20225
  %arrayidx17 = getelementptr [16 x %struct.ips_ha*], [16 x %struct.ips_ha*]* @ips_ha, i64 0, i64 %idxprom16, !dbg !20225
  store %struct.ips_ha* %19, %struct.ips_ha** %arrayidx17, align 8, !dbg !20226
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %sh_sav, align 8, !dbg !20227
  %22 = load i32, i32* %lowindex.addr, align 4, !dbg !20228
  %idxprom18 = sext i32 %22 to i64, !dbg !20229
  %arrayidx19 = getelementptr [16 x %struct.Scsi_Host*], [16 x %struct.Scsi_Host*]* @ips_sh, i64 0, i64 %idxprom18, !dbg !20229
  store %struct.Scsi_Host* %21, %struct.Scsi_Host** %arrayidx19, align 8, !dbg !20230
  ret void, !dbg !20231
}

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6329}
!llvm.module.flags = !{!6330, !6331, !6332, !6333}
!llvm.ident = !{!6334}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__setup_str_ips_setup", scope: !2, file: !3, line: 539, type: !6328, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !181, globals: !6153, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/ips.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !36, !43, !51, !57, !63, !75, !81, !88, !92, !97, !104, !110, !119, !127, !135, !145, !156, !163, !170, !176}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !31, line: 44, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35}
!33 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !37, line: 343, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42}
!39 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !44, line: 524, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50}
!46 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !44, line: 502, baseType: !7, size: 32, elements: !52)
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !58, line: 26, baseType: !7, size: 32, elements: !59)
!58 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!59 = !{!60, !61, !62}
!60 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!61 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!62 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !64, line: 49, baseType: !7, size: 32, elements: !65)
!64 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!65 = !{!66, !67, !68, !69, !70, !71, !72, !73, !74}
!66 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!70 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!71 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!72 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!73 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!74 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !76, line: 118, baseType: !7, size: 32, elements: !77)
!76 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!77 = !{!78, !79, !80}
!78 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!79 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !82, line: 19, baseType: !7, size: 32, elements: !83)
!82 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!83 = !{!84, !85, !86, !87}
!84 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !76, line: 293, baseType: !7, size: 32, elements: !89)
!89 = !{!90, !91}
!90 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !76, line: 315, baseType: !7, size: 32, elements: !93)
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !98, line: 59, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!99 = !{!100, !101, !102, !103}
!100 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!103 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !105, line: 54, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109}
!107 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !111, line: 296, baseType: !7, size: 32, elements: !112)
!111 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!112 = !{!113, !114, !115, !116, !117, !118}
!113 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!117 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !120, line: 9, baseType: !7, size: 32, elements: !121)
!120 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !136, line: 514, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139, !140, !141, !142, !143, !144}
!138 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !146)
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155}
!147 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!150 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!151 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!152 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!153 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!154 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !157, line: 5, baseType: !7, size: 32, elements: !158)
!157 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!158 = !{!159, !160, !161, !162}
!159 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!162 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !164, line: 305, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167, !168, !169}
!166 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !171, line: 11, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!172 = !{!173, !174, !175}
!173 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !177, line: 10, baseType: !7, size: 32, elements: !178)
!177 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!178 = !{!179, !180}
!179 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!181 = !{!182, !183, !184, !186, !191, !189, !193, !195, !196, !198, !199, !228, !229, !4665, !522, !4846, !4848, !6109, !6110, !6111, !205, !5540, !5101, !6113, !3904, !187, !738}
!182 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !185, line: 148, baseType: !7)
!185 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !185, line: 104, baseType: !187)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !188, line: 21, baseType: !189)
!188 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !190, line: 27, baseType: !7)
!190 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !192, line: 31, baseType: !189)
!192 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !190, line: 24, baseType: !194)
!194 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !192, line: 29, baseType: !193)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!198 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_DCDB_TABLE_TAPE", file: !201, line: 642, baseType: !202)
!201 = !DIFile(filename: "drivers/scsi/ips.h", directory: "/home/lizy2001/genbc/linux")
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 629, size: 736, elements: !203)
!203 = !{!204, !209, !210, !211, !212, !213, !214, !217, !218, !219, !220, !224}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "device_address", scope: !202, file: !201, line: 630, baseType: !205, size: 8)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !185, line: 102, baseType: !206)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !188, line: 17, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !190, line: 21, baseType: !208)
!208 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_attribute", scope: !202, file: !201, line: 631, baseType: !205, size: 8, offset: 8)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_length", scope: !202, file: !201, line: 632, baseType: !205, size: 8, offset: 16)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_for_LUN", scope: !202, file: !201, line: 633, baseType: !205, size: 8, offset: 24)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !202, file: !201, line: 634, baseType: !186, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pointer", scope: !202, file: !201, line: 635, baseType: !186, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !202, file: !201, line: 636, baseType: !215, size: 16, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !185, line: 103, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !188, line: 19, baseType: !193)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "sense_length", scope: !202, file: !201, line: 637, baseType: !205, size: 8, offset: 112)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_status", scope: !202, file: !201, line: 638, baseType: !205, size: 8, offset: 120)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !202, file: !201, line: 639, baseType: !186, size: 32, offset: 128)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cdb", scope: !202, file: !201, line: 640, baseType: !221, size: 128, offset: 160)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 128, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 16)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "sense_info", scope: !202, file: !201, line: 641, baseType: !225, size: 448, offset: 288)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 448, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 56)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !231, line: 640, size: 48640, elements: !232)
!231 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !239, !242, !243, !253, !254, !255, !256, !257, !258, !259, !260, !264, !298, !309, !416, !417, !418, !429, !430, !432, !433, !4180, !4181, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4258, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4273, !4274, !4275, !4277, !4278, !4279, !4280, !4281, !4282, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4306, !4311, !4312, !4313, !4314, !4315, !4317, !4320, !4323, !4326, !4329, !4332, !4433, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4479, !4480, !4481, !4482, !4483, !4488, !4489, !4490, !4493, !4494, !4496, !4505, !4508, !4509, !4510, !4513, !4514, !4593, !4594, !4597, !4598, !4601, !4602, !4603, !4607, !4608, !4609, !4622, !4623, !4624, !4634, !4639, !4640, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !230, file: !231, line: 646, baseType: !234, size: 128)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !235, line: 56, size: 128, elements: !236)
!235 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !234, file: !235, line: 57, baseType: !198, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !234, file: !235, line: 58, baseType: !187, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !230, file: !231, line: 649, baseType: !240, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !241)
!241 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !230, file: !231, line: 657, baseType: !183, size: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !230, file: !231, line: 658, baseType: !244, size: 32, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !245, line: 113, baseType: !246)
!245 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !245, line: 111, size: 32, elements: !247)
!247 = !{!248}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !246, file: !245, line: 112, baseType: !249, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !185, line: 168, baseType: !250)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !185, line: 166, size: 32, elements: !251)
!251 = !{!252}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !250, file: !185, line: 167, baseType: !182, size: 32)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !230, file: !231, line: 660, baseType: !7, size: 32, offset: 288)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !230, file: !231, line: 661, baseType: !7, size: 32, offset: 320)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !230, file: !231, line: 684, baseType: !182, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !230, file: !231, line: 686, baseType: !182, size: 32, offset: 384)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !230, file: !231, line: 687, baseType: !182, size: 32, offset: 416)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !230, file: !231, line: 688, baseType: !182, size: 32, offset: 448)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !230, file: !231, line: 689, baseType: !7, size: 32, offset: 480)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !230, file: !231, line: 691, baseType: !261, size: 64, offset: 512)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !231, line: 691, flags: DIFlagFwdDecl)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !230, file: !231, line: 692, baseType: !265, size: 832, offset: 576)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !231, line: 451, size: 832, elements: !266)
!266 = !{!267, !272, !280, !286, !287, !291, !292, !293, !294, !295}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !265, file: !231, line: 453, baseType: !268, size: 128)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !231, line: 325, size: 128, elements: !269)
!269 = !{!270, !271}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !268, file: !231, line: 326, baseType: !198, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !268, file: !231, line: 327, baseType: !187, size: 32, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !265, file: !231, line: 454, baseType: !273, size: 192, align: 64, offset: 128)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !274, line: 24, size: 192, align: 64, elements: !275)
!274 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276, !277, !279}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !273, file: !274, line: 25, baseType: !198, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !273, file: !274, line: 26, baseType: !278, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !273, file: !274, line: 27, baseType: !278, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !265, file: !231, line: 455, baseType: !281, size: 128, offset: 320)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !185, line: 178, size: 128, elements: !282)
!282 = !{!283, !285}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !185, line: 179, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !281, file: !185, line: 179, baseType: !284, size: 64, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !265, file: !231, line: 456, baseType: !7, size: 32, offset: 448)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !265, file: !231, line: 458, baseType: !288, size: 64, offset: 512)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !188, line: 23, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !190, line: 31, baseType: !290)
!290 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !265, file: !231, line: 459, baseType: !288, size: 64, offset: 576)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !265, file: !231, line: 460, baseType: !288, size: 64, offset: 640)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !265, file: !231, line: 461, baseType: !288, size: 64, offset: 704)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !265, file: !231, line: 463, baseType: !288, size: 64, offset: 768)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !265, file: !231, line: 465, baseType: !296, offset: 832)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !231, line: 415, elements: !297)
!297 = !{}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !230, file: !231, line: 693, baseType: !299, size: 384, offset: 1408)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !231, line: 489, size: 384, elements: !300)
!300 = !{!301, !302, !303, !304, !305, !306, !307}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !299, file: !231, line: 490, baseType: !281, size: 128)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !299, file: !231, line: 491, baseType: !198, size: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !299, file: !231, line: 492, baseType: !198, size: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !299, file: !231, line: 493, baseType: !7, size: 32, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !299, file: !231, line: 494, baseType: !194, size: 16, offset: 288)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !299, file: !231, line: 495, baseType: !194, size: 16, offset: 304)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !299, file: !231, line: 497, baseType: !308, size: 64, offset: 320)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !230, file: !231, line: 697, baseType: !310, size: 1792, offset: 1792)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !231, line: 507, size: 1792, elements: !311)
!311 = !{!312, !313, !314, !315, !316, !317, !318, !322, !323, !324, !325, !326, !327, !328, !413, !414}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !310, file: !231, line: 508, baseType: !273, size: 192, align: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !310, file: !231, line: 515, baseType: !288, size: 64, offset: 192)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !310, file: !231, line: 516, baseType: !288, size: 64, offset: 256)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !310, file: !231, line: 517, baseType: !288, size: 64, offset: 320)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !310, file: !231, line: 518, baseType: !288, size: 64, offset: 384)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !310, file: !231, line: 519, baseType: !288, size: 64, offset: 448)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !310, file: !231, line: 526, baseType: !319, size: 64, offset: 512)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !188, line: 22, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !190, line: 30, baseType: !321)
!321 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !310, file: !231, line: 527, baseType: !288, size: 64, offset: 576)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !310, file: !231, line: 528, baseType: !7, size: 32, offset: 640)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !310, file: !231, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !310, file: !231, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !310, file: !231, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !310, file: !231, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !310, file: !231, line: 563, baseType: !329, size: 512, offset: 704)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !330)
!330 = !{!331, !339, !340, !345, !409, !410, !411, !412}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !329, file: !20, line: 119, baseType: !332, size: 256)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !333, line: 9, size: 256, elements: !334)
!333 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!334 = !{!335, !336}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !332, file: !333, line: 10, baseType: !273, size: 192, align: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !332, file: !333, line: 11, baseType: !337, size: 64, offset: 192)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !338, line: 29, baseType: !319)
!338 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!339 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !329, file: !20, line: 120, baseType: !337, size: 64, offset: 256)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !329, file: !20, line: 121, baseType: !341, size: 64, offset: 320)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!19, !344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !329, file: !20, line: 122, baseType: !346, size: 64, offset: 384)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !348)
!348 = !{!349, !377, !378, !382, !392, !393, !404, !408}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !347, file: !20, line: 160, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !352)
!352 = !{!353, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !351, file: !20, line: 215, baseType: !354)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !355, line: 29, baseType: !356)
!355 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !355, line: 20, elements: !357)
!357 = !{!358}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !356, file: !355, line: 21, baseType: !359)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !360, line: 25, baseType: !361)
!360 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !360, line: 25, elements: !297)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !351, file: !20, line: 216, baseType: !7, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !351, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !351, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !351, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !351, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !351, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !351, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !351, file: !20, line: 233, baseType: !337, size: 64, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !351, file: !20, line: 234, baseType: !344, size: 64, offset: 192)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !351, file: !20, line: 235, baseType: !337, size: 64, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !351, file: !20, line: 236, baseType: !344, size: 64, offset: 320)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !351, file: !20, line: 237, baseType: !374, size: 4096, offset: 512)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 4096, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 8)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !347, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !347, file: !20, line: 162, baseType: !379, size: 32, offset: 96)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !185, line: 27, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !381, line: 96, baseType: !182)
!381 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!382 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !347, file: !20, line: 163, baseType: !383, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !384, line: 276, baseType: !385)
!384 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !384, line: 276, size: 32, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !385, file: !384, line: 276, baseType: !388, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !384, line: 70, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !384, line: 65, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !389, file: !384, line: 66, baseType: !7, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !347, file: !20, line: 164, baseType: !344, size: 64, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !347, file: !20, line: 165, baseType: !394, size: 128, offset: 256)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !333, line: 14, size: 128, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !394, file: !333, line: 15, baseType: !397, size: 128)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !274, line: 125, size: 128, elements: !398)
!398 = !{!399, !403}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !397, file: !274, line: 126, baseType: !400, size: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !274, line: 31, size: 64, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !400, file: !274, line: 32, baseType: !278, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !397, file: !274, line: 127, baseType: !278, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !347, file: !20, line: 166, baseType: !405, size: 64, offset: 384)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{!337}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !347, file: !20, line: 167, baseType: !337, size: 64, offset: 448)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !329, file: !20, line: 123, baseType: !206, size: 8, offset: 448)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !329, file: !20, line: 124, baseType: !206, size: 8, offset: 456)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !329, file: !20, line: 125, baseType: !206, size: 8, offset: 464)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !329, file: !20, line: 126, baseType: !206, size: 8, offset: 472)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !310, file: !231, line: 572, baseType: !329, size: 512, offset: 1216)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !310, file: !231, line: 580, baseType: !415, size: 64, offset: 1728)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !230, file: !231, line: 721, baseType: !7, size: 32, offset: 3584)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !230, file: !231, line: 722, baseType: !182, size: 32, offset: 3616)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !230, file: !231, line: 723, baseType: !419, size: 64, offset: 3648)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !422, line: 17, baseType: !423)
!422 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !422, line: 17, size: 64, elements: !424)
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !423, file: !422, line: 17, baseType: !426, size: 64)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 64, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 1)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !230, file: !231, line: 724, baseType: !421, size: 64, offset: 3712)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !230, file: !231, line: 749, baseType: !431, offset: 3776)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !231, line: 290, elements: !297)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !230, file: !231, line: 751, baseType: !281, size: 128, offset: 3776)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !230, file: !231, line: 757, baseType: !434, size: 64, offset: 3904)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !436, line: 388, size: 7296, elements: !437)
!436 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!437 = !{!438, !4178}
!438 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !436, line: 389, baseType: !439, size: 7296)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !436, line: 389, size: 7296, elements: !440)
!440 = !{!441, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4101, !4107, !4110, !4149, !4150, !4162, !4163, !4166, !4167, !4168, !4171, !4172, !4173, !4176, !4177}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !439, file: !436, line: 390, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !436, line: 305, size: 1472, elements: !444)
!444 = !{!445, !446, !447, !448, !449, !450, !451, !452, !460, !461, !466, !467, !470, !4047, !4048, !4049, !4050, !4051}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !443, file: !436, line: 308, baseType: !198, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !443, file: !436, line: 309, baseType: !198, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !443, file: !436, line: 313, baseType: !442, size: 64, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !443, file: !436, line: 313, baseType: !442, size: 64, offset: 192)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !443, file: !436, line: 315, baseType: !273, size: 192, align: 64, offset: 256)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !443, file: !436, line: 323, baseType: !198, size: 64, offset: 448)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !443, file: !436, line: 327, baseType: !434, size: 64, offset: 512)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !443, file: !436, line: 333, baseType: !453, size: 64, offset: 576)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !454, line: 284, baseType: !455)
!454 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !454, line: 284, size: 64, elements: !456)
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !455, file: !454, line: 284, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !459, line: 19, baseType: !198)
!459 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!460 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !443, file: !436, line: 334, baseType: !198, size: 64, offset: 640)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !443, file: !436, line: 343, baseType: !462, size: 256, offset: 704)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !443, file: !436, line: 340, size: 256, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !462, file: !436, line: 341, baseType: !273, size: 192, align: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !462, file: !436, line: 342, baseType: !198, size: 64, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !443, file: !436, line: 351, baseType: !281, size: 128, offset: 960)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !443, file: !436, line: 353, baseType: !468, size: 64, offset: 1088)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !436, line: 353, flags: DIFlagFwdDecl)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !443, file: !436, line: 356, baseType: !471, size: 64, offset: 1152)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !474)
!474 = !{!475, !479, !480, !484, !488, !4021, !4025, !4029, !4033, !4034, !4035, !4039, !4043}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !473, file: !14, line: 558, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DISubroutineType(types: !478)
!478 = !{null, !442}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !473, file: !14, line: 559, baseType: !476, size: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !473, file: !14, line: 560, baseType: !481, size: 64, offset: 128)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DISubroutineType(types: !483)
!483 = !{!182, !442, !198}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !473, file: !14, line: 561, baseType: !485, size: 64, offset: 192)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!182, !442}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !473, file: !14, line: 562, baseType: !489, size: 64, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !436, line: 682, baseType: !7)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !495)
!495 = !{!496, !497, !498, !499, !500, !501, !508, !515, !521, !4015, !4016, !4018, !4020}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !494, file: !14, line: 509, baseType: !442, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !494, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !494, file: !14, line: 511, baseType: !184, size: 32, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !494, file: !14, line: 512, baseType: !198, size: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !494, file: !14, line: 513, baseType: !198, size: 64, offset: 192)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !494, file: !14, line: 514, baseType: !502, size: 64, offset: 256)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !454, line: 385, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 385, size: 64, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !504, file: !454, line: 385, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !459, line: 15, baseType: !198)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !494, file: !14, line: 516, baseType: !509, size: 64, offset: 320)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !454, line: 359, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 359, size: 64, elements: !512)
!512 = !{!513}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !511, file: !454, line: 359, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !459, line: 16, baseType: !198)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !494, file: !14, line: 519, baseType: !516, size: 64, offset: 384)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !459, line: 21, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 21, size: 64, elements: !518)
!518 = !{!519}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !517, file: !459, line: 21, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !459, line: 14, baseType: !198)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !494, file: !14, line: 521, baseType: !522, size: 64, offset: 448)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !436, line: 68, size: 512, align: 128, elements: !524)
!524 = !{!525, !526, !4007, !4014}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !523, file: !436, line: 69, baseType: !198, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !523, file: !436, line: 77, baseType: !527, size: 320, offset: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !523, file: !436, line: 77, size: 320, elements: !528)
!528 = !{!529, !3900, !3905, !3931, !3939, !3945, !3958, !4006}
!529 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 78, baseType: !530, size: 320)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 78, size: 320, elements: !531)
!531 = !{!532, !533, !3898, !3899}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !530, file: !436, line: 84, baseType: !281, size: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !530, file: !436, line: 86, baseType: !534, size: 64, offset: 128)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !111, line: 451, size: 1216, align: 64, elements: !536)
!536 = !{!537, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3893, !3894, !3895, !3896, !3897}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !535, file: !111, line: 452, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !111, line: 610, size: 4224, elements: !540)
!540 = !{!541, !543, !544, !552, !559, !560, !3719, !3720, !3721, !3722, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3762, !3770, !3771, !3772, !3782, !3783, !3784, !3785}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !539, file: !111, line: 611, baseType: !542, size: 16)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !185, line: 19, baseType: !194)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !539, file: !111, line: 612, baseType: !194, size: 16, offset: 16)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !539, file: !111, line: 613, baseType: !545, size: 32, offset: 32)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !546, line: 23, baseType: !547)
!546 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !546, line: 21, size: 32, elements: !548)
!548 = !{!549}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !547, file: !546, line: 22, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !185, line: 32, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !381, line: 49, baseType: !7)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !539, file: !111, line: 614, baseType: !553, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !546, line: 28, baseType: !554)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !546, line: 26, size: 32, elements: !555)
!555 = !{!556}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !554, file: !546, line: 27, baseType: !557, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !185, line: 33, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !381, line: 50, baseType: !7)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !539, file: !111, line: 615, baseType: !7, size: 32, offset: 96)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !539, file: !111, line: 622, baseType: !561, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !111, line: 1864, size: 1536, align: 512, elements: !564)
!564 = !{!565, !3596, !3606, !3610, !3616, !3620, !3624, !3628, !3632, !3636, !3640, !3641, !3645, !3649, !3669, !3695, !3699, !3705, !3710, !3714, !3715}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !563, file: !111, line: 1865, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!569, !538, !569, !7}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !571, line: 89, size: 1536, elements: !572)
!571 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!572 = !{!573, !574, !579, !587, !588, !603, !604, !608, !627, !699, !3580, !3581, !3582, !3588, !3589, !3590}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !570, file: !571, line: 91, baseType: !7, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !570, file: !571, line: 92, baseType: !575, size: 32, offset: 32)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !384, line: 277, baseType: !576)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !384, line: 277, size: 32, elements: !577)
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !576, file: !384, line: 277, baseType: !388, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !570, file: !571, line: 93, baseType: !580, size: 128, offset: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !581, line: 38, size: 128, elements: !582)
!581 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!582 = !{!583, !585}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !580, file: !581, line: 39, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !580, file: !581, line: 39, baseType: !586, size: 64, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !570, file: !571, line: 94, baseType: !569, size: 64, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !570, file: !571, line: 95, baseType: !589, size: 128, offset: 256)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !571, line: 47, size: 128, elements: !590)
!590 = !{!591, !600}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !571, line: 48, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !571, line: 48, size: 64, elements: !593)
!593 = !{!594, !599}
!594 = !DIDerivedType(tag: DW_TAG_member, scope: !592, file: !571, line: 49, baseType: !595, size: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !592, file: !571, line: 49, size: 64, elements: !596)
!596 = !{!597, !598}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !595, file: !571, line: 50, baseType: !187, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !595, file: !571, line: 50, baseType: !187, size: 32, offset: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !592, file: !571, line: 52, baseType: !288, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !571, line: 54, baseType: !601, size: 64, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !570, file: !571, line: 96, baseType: !538, size: 64, offset: 384)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !570, file: !571, line: 98, baseType: !605, size: 256, offset: 448)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 256, elements: !606)
!606 = !{!607}
!607 = !DISubrange(count: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !570, file: !571, line: 101, baseType: !609, size: 32, offset: 704)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !610, line: 25, size: 32, elements: !611)
!610 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, scope: !609, file: !610, line: 26, baseType: !613, size: 32)
!613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !609, file: !610, line: 26, size: 32, elements: !614)
!614 = !{!615}
!615 = !DIDerivedType(tag: DW_TAG_member, scope: !613, file: !610, line: 30, baseType: !616, size: 32)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !613, file: !610, line: 30, size: 32, elements: !617)
!617 = !{!618, !626}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !616, file: !610, line: 31, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !355, line: 83, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !355, line: 71, elements: !621)
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, scope: !620, file: !355, line: 72, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !620, file: !355, line: 72, elements: !624)
!624 = !{!625}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !623, file: !355, line: 73, baseType: !356)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !616, file: !610, line: 32, baseType: !182, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !570, file: !571, line: 102, baseType: !628, size: 64, offset: 768)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !571, line: 135, size: 1024, align: 512, elements: !631)
!631 = !{!632, !636, !637, !644, !652, !656, !660, !664, !665, !669, !673, !685, !693}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !630, file: !571, line: 136, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!182, !569, !7}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !630, file: !571, line: 137, baseType: !633, size: 64, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !630, file: !571, line: 138, baseType: !638, size: 64, offset: 128)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DISubroutineType(types: !640)
!640 = !{!182, !641, !643}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !630, file: !571, line: 139, baseType: !645, size: 64, offset: 192)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{!182, !641, !7, !648, !650}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !197)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !630, file: !571, line: 141, baseType: !653, size: 64, offset: 256)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{!182, !641}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !630, file: !571, line: 142, baseType: !657, size: 64, offset: 320)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{!182, !569}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !630, file: !571, line: 143, baseType: !661, size: 64, offset: 384)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{null, !569}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !630, file: !571, line: 144, baseType: !661, size: 64, offset: 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !630, file: !571, line: 145, baseType: !666, size: 64, offset: 512)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !569, !538}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !630, file: !571, line: 146, baseType: !670, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!196, !569, !196, !182}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !630, file: !571, line: 147, baseType: !674, size: 64, offset: 640)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DISubroutineType(types: !676)
!676 = !{!677, !679}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !571, line: 18, flags: DIFlagFwdDecl)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !681, line: 8, size: 128, elements: !682)
!681 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !680, file: !681, line: 9, baseType: !677, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !680, file: !681, line: 10, baseType: !569, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !630, file: !571, line: 148, baseType: !686, size: 64, offset: 704)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DISubroutineType(types: !688)
!688 = !{!182, !689, !691}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !680)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !185, line: 30, baseType: !692)
!692 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !630, file: !571, line: 149, baseType: !694, size: 64, offset: 768)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!569, !569, !697}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !539)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !570, file: !571, line: 103, baseType: !700, size: 64, offset: 832)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !111, line: 1416, size: 9472, elements: !702)
!702 = !{!703, !704, !707, !708, !709, !712, !764, !1493, !1575, !1658, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1674, !1678, !1679, !3439, !3440, !3443, !3444, !3445, !3486, !3512, !3513, !3514, !3515, !3516, !3517, !3520, !3521, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !701, file: !111, line: 1417, baseType: !281, size: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !701, file: !111, line: 1418, baseType: !705, size: 32, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !185, line: 16, baseType: !706)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !185, line: 13, baseType: !187)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !701, file: !111, line: 1419, baseType: !208, size: 8, offset: 160)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !701, file: !111, line: 1420, baseType: !198, size: 64, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !701, file: !111, line: 1421, baseType: !710, size: 64, offset: 256)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !185, line: 46, baseType: !711)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !381, line: 88, baseType: !321)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !701, file: !111, line: 1422, baseType: !713, size: 64, offset: 320)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !111, line: 2228, size: 576, elements: !715)
!715 = !{!716, !717, !718, !725, !729, !733, !737, !741, !742, !752, !755, !756, !757, !761, !762, !763}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !714, file: !111, line: 2229, baseType: !648, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !714, file: !111, line: 2230, baseType: !182, size: 32, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !714, file: !111, line: 2238, baseType: !719, size: 64, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!182, !722}
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !724, line: 28, flags: DIFlagFwdDecl)
!724 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!725 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !714, file: !111, line: 2239, baseType: !726, size: 64, offset: 192)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !111, line: 70, flags: DIFlagFwdDecl)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !714, file: !111, line: 2240, baseType: !730, size: 64, offset: 256)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!569, !713, !182, !648, !183}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !714, file: !111, line: 2242, baseType: !734, size: 64, offset: 320)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !700}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !714, file: !111, line: 2243, baseType: !738, size: 64, offset: 384)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !740, line: 189, flags: DIFlagFwdDecl)
!740 = !DIFile(filename: "./include/linux/jump_label.h", directory: "/home/lizy2001/genbc/linux")
!741 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !714, file: !111, line: 2244, baseType: !713, size: 64, offset: 448)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !714, file: !111, line: 2245, baseType: !743, size: 64, offset: 512)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !185, line: 182, size: 64, elements: !744)
!744 = !{!745}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !743, file: !185, line: 183, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !185, line: 186, size: 128, elements: !748)
!748 = !{!749, !750}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !747, file: !185, line: 187, baseType: !746, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !747, file: !185, line: 187, baseType: !751, size: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !714, file: !111, line: 2247, baseType: !753, offset: 576)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !754, line: 187, elements: !297)
!754 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!755 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !714, file: !111, line: 2248, baseType: !753, offset: 576)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !714, file: !111, line: 2249, baseType: !753, offset: 576)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !714, file: !111, line: 2250, baseType: !758, offset: 576)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, elements: !759)
!759 = !{!760}
!760 = !DISubrange(count: 3)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !714, file: !111, line: 2252, baseType: !753, offset: 576)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !714, file: !111, line: 2253, baseType: !753, offset: 576)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !714, file: !111, line: 2254, baseType: !753, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !701, file: !111, line: 1423, baseType: !765, size: 64, offset: 384)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !111, line: 1935, size: 1472, elements: !768)
!768 = !{!769, !773, !777, !778, !782, !788, !792, !793, !794, !798, !802, !803, !804, !805, !811, !816, !817, !1470, !1471, !1472, !1473, !1477, !1492}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !767, file: !111, line: 1936, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!538, !700}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !767, file: !111, line: 1937, baseType: !774, size: 64, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{null, !538}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !767, file: !111, line: 1938, baseType: !774, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !767, file: !111, line: 1940, baseType: !779, size: 64, offset: 192)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{null, !538, !182}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !767, file: !111, line: 1941, baseType: !783, size: 64, offset: 256)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{!182, !538, !786}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !767, file: !111, line: 1942, baseType: !789, size: 64, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!182, !538}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !767, file: !111, line: 1943, baseType: !774, size: 64, offset: 384)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !767, file: !111, line: 1944, baseType: !734, size: 64, offset: 448)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !767, file: !111, line: 1945, baseType: !795, size: 64, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!182, !700, !182}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !767, file: !111, line: 1946, baseType: !799, size: 64, offset: 576)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{!182, !700}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !767, file: !111, line: 1947, baseType: !799, size: 64, offset: 640)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !767, file: !111, line: 1948, baseType: !799, size: 64, offset: 704)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !767, file: !111, line: 1949, baseType: !799, size: 64, offset: 768)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !767, file: !111, line: 1950, baseType: !806, size: 64, offset: 832)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!182, !569, !809}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !111, line: 57, flags: DIFlagFwdDecl)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !767, file: !111, line: 1951, baseType: !812, size: 64, offset: 896)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!182, !700, !815, !196}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !767, file: !111, line: 1952, baseType: !734, size: 64, offset: 960)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !767, file: !111, line: 1954, baseType: !818, size: 64, offset: 1024)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!182, !821, !569}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !823, line: 16, size: 896, elements: !824)
!823 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!824 = !{!825, !826, !830, !831, !832, !833, !834, !835, !848, !870, !871, !1469}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !822, file: !823, line: 17, baseType: !196, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !822, file: !823, line: 18, baseType: !827, size: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !185, line: 55, baseType: !828)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !381, line: 72, baseType: !829)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !381, line: 16, baseType: !198)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !822, file: !823, line: 19, baseType: !827, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !822, file: !823, line: 20, baseType: !827, size: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !822, file: !823, line: 21, baseType: !827, size: 64, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !822, file: !823, line: 22, baseType: !710, size: 64, offset: 320)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !822, file: !823, line: 23, baseType: !710, size: 64, offset: 384)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !822, file: !823, line: 24, baseType: !836, size: 192, offset: 448)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !837, line: 53, size: 192, elements: !838)
!837 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!838 = !{!839, !846, !847}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !836, file: !837, line: 54, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !841, line: 13, baseType: !842)
!841 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !185, line: 175, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !185, line: 173, size: 64, elements: !844)
!844 = !{!845}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !843, file: !185, line: 174, baseType: !319, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !836, file: !837, line: 55, baseType: !619, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !836, file: !837, line: 59, baseType: !281, size: 128, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !822, file: !823, line: 25, baseType: !849, size: 64, offset: 640)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !823, line: 31, size: 256, elements: !852)
!852 = !{!853, !858, !862, !866}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !851, file: !823, line: 32, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!183, !821, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !851, file: !823, line: 33, baseType: !859, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !821, !183}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !851, file: !823, line: 34, baseType: !863, size: 64, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!183, !821, !183, !857}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !851, file: !823, line: 35, baseType: !867, size: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!182, !821, !183}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !822, file: !823, line: 26, baseType: !182, size: 32, offset: 704)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !822, file: !823, line: 27, baseType: !872, size: 64, offset: 768)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !111, line: 916, size: 1856, align: 32, elements: !875)
!875 = !{!876, !894, !895, !896, !1217, !1218, !1219, !1220, !1221, !1223, !1224, !1225, !1255, !1451, !1460, !1461, !1462, !1463, !1464, !1465, !1468}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !874, file: !111, line: 920, baseType: !877, size: 128)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !874, file: !111, line: 917, size: 128, elements: !878)
!878 = !{!879, !885}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !877, file: !111, line: 918, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !881, line: 58, size: 64, elements: !882)
!881 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!882 = !{!883}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !880, file: !881, line: 59, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !877, file: !111, line: 919, baseType: !886, size: 128, align: 64)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !185, line: 216, size: 128, align: 64, elements: !887)
!887 = !{!888, !890}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !886, file: !185, line: 217, baseType: !889, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !886, file: !185, line: 218, baseType: !891, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{null, !889}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !874, file: !111, line: 921, baseType: !680, size: 128, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !874, file: !111, line: 922, baseType: !538, size: 64, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !874, file: !111, line: 923, baseType: !897, size: 64, offset: 320)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !111, line: 1822, size: 2048, elements: !900)
!900 = !{!901, !902, !907, !914, !918, !1006, !1007, !1011, !1024, !1025, !1032, !1036, !1037, !1041, !1042, !1046, !1051, !1052, !1056, !1060, !1174, !1178, !1182, !1186, !1187, !1191, !1195, !1200, !1204, !1208, !1212, !1216}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !899, file: !111, line: 1823, baseType: !738, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !899, file: !111, line: 1824, baseType: !903, size: 64, offset: 64)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!710, !906, !710, !182}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !899, file: !111, line: 1825, baseType: !908, size: 64, offset: 128)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!911, !906, !196, !827, !857}
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !185, line: 60, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !381, line: 73, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !381, line: 15, baseType: !241)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !899, file: !111, line: 1826, baseType: !915, size: 64, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!911, !906, !648, !827, !857}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !899, file: !111, line: 1827, baseType: !919, size: 64, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!911, !922, !960}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !111, line: 320, size: 384, elements: !924)
!924 = !{!925, !926, !927, !931, !932, !933, !934, !935}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !923, file: !111, line: 321, baseType: !906, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !923, file: !111, line: 326, baseType: !710, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !923, file: !111, line: 327, baseType: !928, size: 64, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{null, !922, !241, !241}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !923, file: !111, line: 328, baseType: !183, size: 64, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !923, file: !111, line: 329, baseType: !182, size: 32, offset: 256)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !923, file: !111, line: 330, baseType: !216, size: 16, offset: 288)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !923, file: !111, line: 331, baseType: !216, size: 16, offset: 304)
!935 = !DIDerivedType(tag: DW_TAG_member, scope: !923, file: !111, line: 332, baseType: !936, size: 64, offset: 320)
!936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !923, file: !111, line: 332, size: 64, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !936, file: !111, line: 333, baseType: !7, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !936, file: !111, line: 334, baseType: !940, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !942, line: 569, size: 448, elements: !943)
!942 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!943 = !{!944, !945, !946}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !941, file: !942, line: 570, baseType: !522, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !941, file: !942, line: 571, baseType: !182, size: 32, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !941, file: !942, line: 572, baseType: !947, size: 320, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !948, line: 14, baseType: !949)
!948 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !948, line: 29, size: 320, elements: !950)
!950 = !{!951, !952, !953, !959}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !949, file: !948, line: 30, baseType: !7, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !949, file: !948, line: 31, baseType: !183, size: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !949, file: !948, line: 32, baseType: !954, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !948, line: 16, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!182, !958, !7, !182, !183}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !949, file: !948, line: 33, baseType: !281, size: 128, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !962, line: 29, size: 320, elements: !963)
!962 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!963 = !{!964, !965, !966, !967, !997}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !961, file: !962, line: 35, baseType: !7, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !961, file: !962, line: 36, baseType: !827, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !961, file: !962, line: 37, baseType: !827, size: 64, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_member, scope: !961, file: !962, line: 38, baseType: !968, size: 64, offset: 192)
!968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !961, file: !962, line: 38, size: 64, elements: !969)
!969 = !{!970, !978, !985, !994}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !968, file: !962, line: 39, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !974, line: 17, size: 128, elements: !975)
!974 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !973, file: !974, line: 19, baseType: !183, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !973, file: !974, line: 20, baseType: !828, size: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !968, file: !962, line: 40, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !962, line: 15, size: 128, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !981, file: !962, line: 16, baseType: !183, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !981, file: !962, line: 17, baseType: !827, size: 64, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !968, file: !962, line: 41, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !989, line: 31, size: 128, elements: !990)
!989 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !988, file: !989, line: 32, baseType: !522, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !988, file: !989, line: 33, baseType: !7, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !988, file: !989, line: 34, baseType: !7, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !968, file: !962, line: 42, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !231, line: 53, flags: DIFlagFwdDecl)
!997 = !DIDerivedType(tag: DW_TAG_member, scope: !961, file: !962, line: 44, baseType: !998, size: 64, offset: 256)
!998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !961, file: !962, line: 44, size: 64, elements: !999)
!999 = !{!1000, !1001}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !998, file: !962, line: 45, baseType: !198, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, scope: !998, file: !962, line: 46, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !998, file: !962, line: 46, size: 64, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1002, file: !962, line: 47, baseType: !7, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1002, file: !962, line: 48, baseType: !7, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !899, file: !111, line: 1828, baseType: !919, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !899, file: !111, line: 1829, baseType: !1008, size: 64, offset: 384)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!182, !922, !691}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !899, file: !111, line: 1830, baseType: !1012, size: 64, offset: 448)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!182, !906, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !111, line: 1776, size: 128, elements: !1017)
!1017 = !{!1018, !1023}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1016, file: !111, line: 1777, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !111, line: 1773, baseType: !1020)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!182, !1015, !648, !182, !710, !288, !7}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1016, file: !111, line: 1778, baseType: !710, size: 64, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !899, file: !111, line: 1831, baseType: !1012, size: 64, offset: 512)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !899, file: !111, line: 1832, baseType: !1026, size: 64, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!1029, !906, !1030}
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !192, line: 52, baseType: !7)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !724, line: 27, flags: DIFlagFwdDecl)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !899, file: !111, line: 1833, baseType: !1033, size: 64, offset: 640)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!241, !906, !7, !198}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !899, file: !111, line: 1834, baseType: !1033, size: 64, offset: 704)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !899, file: !111, line: 1835, baseType: !1038, size: 64, offset: 768)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!182, !906, !442}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !899, file: !111, line: 1836, baseType: !198, size: 64, offset: 832)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !899, file: !111, line: 1837, baseType: !1043, size: 64, offset: 896)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!182, !538, !906}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !899, file: !111, line: 1838, baseType: !1047, size: 64, offset: 960)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!182, !906, !1050}
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !111, line: 1007, baseType: !183)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !899, file: !111, line: 1839, baseType: !1043, size: 64, offset: 1024)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !899, file: !111, line: 1840, baseType: !1053, size: 64, offset: 1088)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!182, !906, !710, !710, !182}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !899, file: !111, line: 1841, baseType: !1057, size: 64, offset: 1152)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!182, !182, !906, !182}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !899, file: !111, line: 1842, baseType: !1061, size: 64, offset: 1216)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!182, !906, !182, !1064}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !111, line: 1062, size: 1664, elements: !1066)
!1066 = !{!1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1083, !1084, !1085, !1086, !1103, !1104, !1105, !1118, !1150}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1065, file: !111, line: 1063, baseType: !1064, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1065, file: !111, line: 1064, baseType: !281, size: 128, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1065, file: !111, line: 1065, baseType: !747, size: 128, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1065, file: !111, line: 1066, baseType: !281, size: 128, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1065, file: !111, line: 1069, baseType: !281, size: 128, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1065, file: !111, line: 1072, baseType: !1050, size: 64, offset: 576)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1065, file: !111, line: 1073, baseType: !7, size: 32, offset: 640)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1065, file: !111, line: 1074, baseType: !208, size: 8, offset: 672)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1065, file: !111, line: 1075, baseType: !7, size: 32, offset: 704)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1065, file: !111, line: 1076, baseType: !182, size: 32, offset: 736)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1065, file: !111, line: 1077, baseType: !1078, size: 128, offset: 768)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !948, line: 40, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !948, line: 36, size: 128, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1079, file: !948, line: 37, baseType: !619)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1079, file: !948, line: 38, baseType: !281, size: 128)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1065, file: !111, line: 1078, baseType: !906, size: 64, offset: 896)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1065, file: !111, line: 1079, baseType: !710, size: 64, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1065, file: !111, line: 1080, baseType: !710, size: 64, offset: 1024)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1065, file: !111, line: 1082, baseType: !1087, size: 64, offset: 1088)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !111, line: 1314, size: 320, elements: !1089)
!1089 = !{!1090, !1098, !1099, !1100, !1101, !1102}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1088, file: !111, line: 1315, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1092, line: 20, baseType: !1093)
!1092 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1092, line: 11, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1093, file: !1092, line: 12, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !360, line: 33, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !360, line: 31, elements: !297)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1088, file: !111, line: 1316, baseType: !182, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1088, file: !111, line: 1317, baseType: !182, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1088, file: !111, line: 1318, baseType: !1087, size: 64, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1088, file: !111, line: 1319, baseType: !906, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1088, file: !111, line: 1320, baseType: !886, size: 128, align: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1065, file: !111, line: 1084, baseType: !198, size: 64, offset: 1152)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1065, file: !111, line: 1085, baseType: !198, size: 64, offset: 1216)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1065, file: !111, line: 1087, baseType: !1106, size: 64, offset: 1280)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !111, line: 1011, size: 128, elements: !1109)
!1109 = !{!1110, !1114}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1108, file: !111, line: 1012, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1064, !1064}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1108, file: !111, line: 1013, baseType: !1115, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1064}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1065, file: !111, line: 1088, baseType: !1119, size: 64, offset: 1344)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !111, line: 1016, size: 512, elements: !1122)
!1122 = !{!1123, !1127, !1131, !1132, !1136, !1140, !1144, !1149}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1121, file: !111, line: 1017, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!1050, !1050}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1121, file: !111, line: 1018, baseType: !1128, size: 64, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !1050}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1121, file: !111, line: 1019, baseType: !1115, size: 64, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1121, file: !111, line: 1020, baseType: !1133, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!182, !1064, !182}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1121, file: !111, line: 1021, baseType: !1137, size: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!691, !1064}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1121, file: !111, line: 1022, baseType: !1141, size: 64, offset: 320)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!182, !1064, !182, !284}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1121, file: !111, line: 1023, baseType: !1145, size: 64, offset: 384)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{null, !1064, !1148}
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1121, file: !111, line: 1024, baseType: !1137, size: 64, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1065, file: !111, line: 1097, baseType: !1151, size: 256, offset: 1408)
!1151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1065, file: !111, line: 1089, size: 256, elements: !1152)
!1152 = !{!1153, !1162, !1168}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1151, file: !111, line: 1090, baseType: !1154, size: 256)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1155, line: 10, size: 256, elements: !1156)
!1155 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1156 = !{!1157, !1158, !1161}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1154, file: !1155, line: 11, baseType: !187, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1154, file: !1155, line: 12, baseType: !1159, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1155, line: 5, flags: DIFlagFwdDecl)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1154, file: !1155, line: 13, baseType: !281, size: 128, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1151, file: !111, line: 1091, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1155, line: 17, size: 64, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1163, file: !1155, line: 18, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1155, line: 16, flags: DIFlagFwdDecl)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1151, file: !111, line: 1096, baseType: !1169, size: 192)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1151, file: !111, line: 1092, size: 192, elements: !1170)
!1170 = !{!1171, !1172, !1173}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1169, file: !111, line: 1093, baseType: !281, size: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1169, file: !111, line: 1094, baseType: !182, size: 32, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1169, file: !111, line: 1095, baseType: !7, size: 32, offset: 160)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !899, file: !111, line: 1843, baseType: !1175, size: 64, offset: 1280)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!911, !906, !522, !182, !827, !857, !182}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !899, file: !111, line: 1844, baseType: !1179, size: 64, offset: 1344)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!198, !906, !198, !198, !198, !198}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !899, file: !111, line: 1845, baseType: !1183, size: 64, offset: 1408)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!182, !182}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !899, file: !111, line: 1846, baseType: !1061, size: 64, offset: 1472)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !899, file: !111, line: 1847, baseType: !1188, size: 64, offset: 1536)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!911, !995, !906, !857, !827, !7}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !899, file: !111, line: 1848, baseType: !1192, size: 64, offset: 1600)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!911, !906, !857, !995, !827, !7}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !899, file: !111, line: 1849, baseType: !1196, size: 64, offset: 1664)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!182, !906, !241, !1199, !1148}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !899, file: !111, line: 1850, baseType: !1201, size: 64, offset: 1728)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!241, !906, !182, !710, !710}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !899, file: !111, line: 1852, baseType: !1205, size: 64, offset: 1792)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{null, !821, !906}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !899, file: !111, line: 1856, baseType: !1209, size: 64, offset: 1856)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!911, !906, !710, !906, !710, !827, !7}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !899, file: !111, line: 1858, baseType: !1213, size: 64, offset: 1920)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!710, !906, !710, !906, !710, !710, !7}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !899, file: !111, line: 1861, baseType: !1053, size: 64, offset: 1984)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !874, file: !111, line: 929, baseType: !619, offset: 384)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !874, file: !111, line: 930, baseType: !110, size: 32, offset: 384)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !874, file: !111, line: 931, baseType: !840, size: 64, offset: 448)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !874, file: !111, line: 932, baseType: !7, size: 32, offset: 512)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !874, file: !111, line: 933, baseType: !1222, size: 32, offset: 544)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !185, line: 150, baseType: !7)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !874, file: !111, line: 934, baseType: !836, size: 192, offset: 576)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !874, file: !111, line: 935, baseType: !710, size: 64, offset: 768)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !874, file: !111, line: 936, baseType: !1226, size: 192, offset: 832)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !111, line: 885, size: 192, elements: !1227)
!1227 = !{!1228, !1229, !1251, !1252, !1253, !1254}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1226, file: !111, line: 886, baseType: !1091)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1226, file: !111, line: 887, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !120, line: 59, size: 768, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236, !1240, !1241, !1242, !1243}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1231, file: !120, line: 61, baseType: !244, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1231, file: !120, line: 62, baseType: !7, size: 32, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1231, file: !120, line: 63, baseType: !619, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1231, file: !120, line: 65, baseType: !1237, size: 256, offset: 64)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 256, elements: !1238)
!1238 = !{!1239}
!1239 = !DISubrange(count: 4)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1231, file: !120, line: 66, baseType: !743, size: 64, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1231, file: !120, line: 68, baseType: !1078, size: 128, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1231, file: !120, line: 69, baseType: !886, size: 128, align: 64, offset: 512)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1231, file: !120, line: 70, baseType: !1244, size: 128, offset: 640)
!1244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 128, elements: !427)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !120, line: 54, size: 128, elements: !1246)
!1246 = !{!1247, !1248}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1245, file: !120, line: 55, baseType: !182, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1245, file: !120, line: 56, baseType: !1249, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !120, line: 56, flags: DIFlagFwdDecl)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1226, file: !111, line: 888, baseType: !119, size: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1226, file: !111, line: 889, baseType: !545, size: 32, offset: 96)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1226, file: !111, line: 889, baseType: !545, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1226, file: !111, line: 890, baseType: !182, size: 32, offset: 160)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !874, file: !111, line: 937, baseType: !1256, size: 64, offset: 1024)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1259, line: 111, size: 1280, elements: !1260)
!1259 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1260 = !{!1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1280, !1281, !1282, !1283, !1284, !1285, !1404, !1405, !1406, !1407, !1433, !1436, !1446}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1258, file: !1259, line: 112, baseType: !249, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1258, file: !1259, line: 120, baseType: !545, size: 32, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1258, file: !1259, line: 121, baseType: !553, size: 32, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1258, file: !1259, line: 122, baseType: !545, size: 32, offset: 96)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1258, file: !1259, line: 123, baseType: !553, size: 32, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1258, file: !1259, line: 124, baseType: !545, size: 32, offset: 160)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1258, file: !1259, line: 125, baseType: !553, size: 32, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1258, file: !1259, line: 126, baseType: !545, size: 32, offset: 224)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1258, file: !1259, line: 127, baseType: !553, size: 32, offset: 256)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1258, file: !1259, line: 128, baseType: !7, size: 32, offset: 288)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1258, file: !1259, line: 129, baseType: !1272, size: 64, offset: 320)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1273, line: 26, baseType: !1274)
!1273 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1273, line: 24, size: 64, elements: !1275)
!1275 = !{!1276}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1274, file: !1273, line: 25, baseType: !1277, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 64, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 2)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1258, file: !1259, line: 130, baseType: !1272, size: 64, offset: 384)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1258, file: !1259, line: 131, baseType: !1272, size: 64, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1258, file: !1259, line: 132, baseType: !1272, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1258, file: !1259, line: 133, baseType: !1272, size: 64, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1258, file: !1259, line: 135, baseType: !208, size: 8, offset: 640)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1258, file: !1259, line: 137, baseType: !1286, size: 64, offset: 704)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1288, line: 189, size: 1664, elements: !1289)
!1288 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1289 = !{!1290, !1291, !1296, !1301, !1309, !1312, !1313, !1320, !1321, !1322, !1323, !1325, !1326, !1327, !1329, !1330, !1368, !1389}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1287, file: !1288, line: 190, baseType: !244, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1287, file: !1288, line: 191, baseType: !1292, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1288, line: 28, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !185, line: 98, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !188, line: 20, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !190, line: 26, baseType: !182)
!1296 = !DIDerivedType(tag: DW_TAG_member, scope: !1287, file: !1288, line: 192, baseType: !1297, size: 192, offset: 64)
!1297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1287, file: !1288, line: 192, size: 192, elements: !1298)
!1298 = !{!1299, !1300}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1297, file: !1288, line: 193, baseType: !281, size: 128)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1297, file: !1288, line: 194, baseType: !273, size: 192, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1287, file: !1288, line: 199, baseType: !1302, size: 256, offset: 256)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1303, line: 35, size: 256, elements: !1304)
!1303 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1304 = !{!1305, !1306, !1307, !1308}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1302, file: !1303, line: 36, baseType: !840, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1302, file: !1303, line: 42, baseType: !840, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1302, file: !1303, line: 46, baseType: !354, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1302, file: !1303, line: 47, baseType: !281, size: 128, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1287, file: !1288, line: 200, baseType: !1310, size: 64, offset: 512)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1288, line: 200, flags: DIFlagFwdDecl)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1287, file: !1288, line: 201, baseType: !183, size: 64, offset: 576)
!1313 = !DIDerivedType(tag: DW_TAG_member, scope: !1287, file: !1288, line: 202, baseType: !1314, size: 64, offset: 640)
!1314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1287, file: !1288, line: 202, size: 64, elements: !1315)
!1315 = !{!1316, !1319}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1314, file: !1288, line: 203, baseType: !1317, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1318, line: 8, baseType: !320)
!1318 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1314, file: !1288, line: 204, baseType: !1317, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1287, file: !1288, line: 206, baseType: !1317, size: 64, offset: 704)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1287, file: !1288, line: 207, baseType: !545, size: 32, offset: 768)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1287, file: !1288, line: 208, baseType: !553, size: 32, offset: 800)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1287, file: !1288, line: 209, baseType: !1324, size: 32, offset: 832)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1288, line: 31, baseType: !186)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1287, file: !1288, line: 210, baseType: !194, size: 16, offset: 864)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1287, file: !1288, line: 211, baseType: !194, size: 16, offset: 880)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1287, file: !1288, line: 215, baseType: !1328, size: 16, offset: 896)
!1328 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1287, file: !1288, line: 222, baseType: !198, size: 64, offset: 960)
!1330 = !DIDerivedType(tag: DW_TAG_member, scope: !1287, file: !1288, line: 239, baseType: !1331, size: 320, offset: 1024)
!1331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1287, file: !1288, line: 239, size: 320, elements: !1332)
!1332 = !{!1333, !1360}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1331, file: !1288, line: 240, baseType: !1334, size: 320)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1288, line: 108, size: 320, elements: !1335)
!1335 = !{!1336, !1337, !1349, !1352, !1359}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1334, file: !1288, line: 110, baseType: !198, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, scope: !1334, file: !1288, line: 111, baseType: !1338, size: 64, offset: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1334, file: !1288, line: 111, size: 64, elements: !1339)
!1339 = !{!1340, !1348}
!1340 = !DIDerivedType(tag: DW_TAG_member, scope: !1338, file: !1288, line: 112, baseType: !1341, size: 64)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1338, file: !1288, line: 112, size: 64, elements: !1342)
!1342 = !{!1343, !1344}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1341, file: !1288, line: 114, baseType: !216, size: 16)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1341, file: !1288, line: 115, baseType: !1345, size: 48, offset: 16)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 48, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 6)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1338, file: !1288, line: 121, baseType: !198, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1334, file: !1288, line: 123, baseType: !1350, size: 64, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1288, line: 96, flags: DIFlagFwdDecl)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1334, file: !1288, line: 124, baseType: !1353, size: 64, offset: 192)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1288, line: 102, size: 192, elements: !1355)
!1355 = !{!1356, !1357, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1354, file: !1288, line: 103, baseType: !886, size: 128, align: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1354, file: !1288, line: 104, baseType: !244, size: 32, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1354, file: !1288, line: 105, baseType: !691, size: 8, offset: 160)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1334, file: !1288, line: 125, baseType: !648, size: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_member, scope: !1331, file: !1288, line: 241, baseType: !1361, size: 320)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1331, file: !1288, line: 241, size: 320, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1361, file: !1288, line: 242, baseType: !198, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1361, file: !1288, line: 243, baseType: !198, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1361, file: !1288, line: 244, baseType: !1350, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1361, file: !1288, line: 245, baseType: !1353, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1361, file: !1288, line: 246, baseType: !196, size: 64, offset: 256)
!1368 = !DIDerivedType(tag: DW_TAG_member, scope: !1287, file: !1288, line: 254, baseType: !1369, size: 256, offset: 1344)
!1369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1287, file: !1288, line: 254, size: 256, elements: !1370)
!1370 = !{!1371, !1377}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1369, file: !1288, line: 255, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1288, line: 128, size: 256, elements: !1373)
!1373 = !{!1374, !1375}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1372, file: !1288, line: 129, baseType: !183, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1372, file: !1288, line: 130, baseType: !1376, size: 256)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 256, elements: !1238)
!1377 = !DIDerivedType(tag: DW_TAG_member, scope: !1369, file: !1288, line: 256, baseType: !1378, size: 256)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1369, file: !1288, line: 256, size: 256, elements: !1379)
!1379 = !{!1380, !1381}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1378, file: !1288, line: 258, baseType: !281, size: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1378, file: !1288, line: 259, baseType: !1382, size: 128, offset: 128)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1383, line: 22, size: 128, elements: !1384)
!1383 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1384 = !{!1385, !1388}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1382, file: !1383, line: 23, baseType: !1386, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1383, line: 23, flags: DIFlagFwdDecl)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1382, file: !1383, line: 24, baseType: !198, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1287, file: !1288, line: 274, baseType: !1390, size: 64, offset: 1600)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1288, line: 170, size: 192, elements: !1392)
!1392 = !{!1393, !1402, !1403}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1391, file: !1288, line: 171, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1288, line: 165, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!182, !1286, !1398, !1400, !1286}
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1391, file: !1288, line: 172, baseType: !1286, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1391, file: !1288, line: 173, baseType: !1350, size: 64, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1258, file: !1259, line: 138, baseType: !1286, size: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1258, file: !1259, line: 139, baseType: !1286, size: 64, offset: 832)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1258, file: !1259, line: 140, baseType: !1286, size: 64, offset: 896)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1258, file: !1259, line: 145, baseType: !1408, size: 64, offset: 960)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1410, line: 13, size: 896, elements: !1411)
!1410 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1411 = !{!1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1409, file: !1410, line: 14, baseType: !244, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1409, file: !1410, line: 15, baseType: !249, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1409, file: !1410, line: 16, baseType: !249, size: 32, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1409, file: !1410, line: 21, baseType: !840, size: 64, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1409, file: !1410, line: 27, baseType: !198, size: 64, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1409, file: !1410, line: 28, baseType: !198, size: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1409, file: !1410, line: 29, baseType: !840, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1409, file: !1410, line: 32, baseType: !747, size: 128, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1409, file: !1410, line: 33, baseType: !545, size: 32, offset: 512)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1409, file: !1410, line: 37, baseType: !840, size: 64, offset: 576)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1409, file: !1410, line: 44, baseType: !1423, size: 256, offset: 640)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1424, line: 15, size: 256, elements: !1425)
!1424 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1423, file: !1424, line: 16, baseType: !354)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1423, file: !1424, line: 18, baseType: !182, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1423, file: !1424, line: 19, baseType: !182, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1423, file: !1424, line: 20, baseType: !182, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1423, file: !1424, line: 21, baseType: !182, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1423, file: !1424, line: 22, baseType: !198, size: 64, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1423, file: !1424, line: 23, baseType: !198, size: 64, offset: 192)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1258, file: !1259, line: 146, baseType: !1434, size: 64, offset: 1024)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !436, line: 516, flags: DIFlagFwdDecl)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1258, file: !1259, line: 147, baseType: !1437, size: 64, offset: 1088)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1259, line: 25, size: 64, elements: !1439)
!1439 = !{!1440, !1441, !1442}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1438, file: !1259, line: 26, baseType: !249, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1438, file: !1259, line: 27, baseType: !182, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1438, file: !1259, line: 28, baseType: !1443, offset: 64)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, elements: !1444)
!1444 = !{!1445}
!1445 = !DISubrange(count: 0)
!1446 = !DIDerivedType(tag: DW_TAG_member, scope: !1258, file: !1259, line: 149, baseType: !1447, size: 128, offset: 1152)
!1447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1258, file: !1259, line: 149, size: 128, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1447, file: !1259, line: 150, baseType: !182, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1447, file: !1259, line: 151, baseType: !886, size: 128, align: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !874, file: !111, line: 938, baseType: !1452, size: 256, offset: 1088)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !111, line: 896, size: 256, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458, !1459}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1452, file: !111, line: 897, baseType: !198, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1452, file: !111, line: 898, baseType: !7, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1452, file: !111, line: 899, baseType: !7, size: 32, offset: 96)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1452, file: !111, line: 902, baseType: !7, size: 32, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1452, file: !111, line: 903, baseType: !7, size: 32, offset: 160)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1452, file: !111, line: 904, baseType: !710, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !874, file: !111, line: 940, baseType: !288, size: 64, offset: 1344)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !874, file: !111, line: 945, baseType: !183, size: 64, offset: 1408)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !874, file: !111, line: 949, baseType: !281, size: 128, offset: 1472)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !874, file: !111, line: 950, baseType: !281, size: 128, offset: 1600)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !874, file: !111, line: 952, baseType: !534, size: 64, offset: 1728)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !874, file: !111, line: 953, baseType: !1466, size: 32, offset: 1792)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1467, line: 8, baseType: !187)
!1467 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !874, file: !111, line: 954, baseType: !1466, size: 32, offset: 1824)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !822, file: !823, line: 28, baseType: !183, size: 64, offset: 832)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !767, file: !111, line: 1955, baseType: !818, size: 64, offset: 1088)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !767, file: !111, line: 1956, baseType: !818, size: 64, offset: 1152)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !767, file: !111, line: 1957, baseType: !818, size: 64, offset: 1216)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !767, file: !111, line: 1963, baseType: !1474, size: 64, offset: 1280)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!182, !700, !522, !184}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !767, file: !111, line: 1964, baseType: !1478, size: 64, offset: 1344)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!241, !700, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1483, line: 12, size: 256, elements: !1484)
!1483 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1484 = !{!1485, !1486, !1487, !1488, !1489}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1482, file: !1483, line: 13, baseType: !184, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1482, file: !1483, line: 16, baseType: !182, size: 32, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1482, file: !1483, line: 23, baseType: !198, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1482, file: !1483, line: 30, baseType: !198, size: 64, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1482, file: !1483, line: 33, baseType: !1490, size: 64, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !436, line: 27, flags: DIFlagFwdDecl)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !767, file: !111, line: 1966, baseType: !1478, size: 64, offset: 1408)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !701, file: !111, line: 1424, baseType: !1494, size: 64, offset: 448)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !105, line: 322, size: 704, elements: !1497)
!1497 = !{!1498, !1544, !1548, !1552, !1553, !1554, !1555, !1556, !1561, !1566, !1570}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1496, file: !105, line: 323, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!182, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !105, line: 294, size: 1600, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1529, !1530, !1531}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1503, file: !105, line: 295, baseType: !747, size: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1503, file: !105, line: 296, baseType: !281, size: 128, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1503, file: !105, line: 297, baseType: !281, size: 128, offset: 256)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1503, file: !105, line: 298, baseType: !281, size: 128, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1503, file: !105, line: 299, baseType: !836, size: 192, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1503, file: !105, line: 300, baseType: !619, offset: 704)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1503, file: !105, line: 301, baseType: !249, size: 32, offset: 704)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1503, file: !105, line: 302, baseType: !700, size: 64, offset: 768)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1503, file: !105, line: 303, baseType: !1514, size: 64, offset: 832)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !105, line: 68, size: 64, elements: !1515)
!1515 = !{!1516, !1528}
!1516 = !DIDerivedType(tag: DW_TAG_member, scope: !1514, file: !105, line: 69, baseType: !1517, size: 32)
!1517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !105, line: 69, size: 32, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1517, file: !105, line: 70, baseType: !545, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1517, file: !105, line: 71, baseType: !553, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1517, file: !105, line: 72, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1523, line: 24, baseType: !1524)
!1523 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1523, line: 22, size: 32, elements: !1525)
!1525 = !{!1526}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1524, file: !1523, line: 23, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1523, line: 20, baseType: !551)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1514, file: !105, line: 74, baseType: !104, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1503, file: !105, line: 304, baseType: !710, size: 64, offset: 896)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1503, file: !105, line: 305, baseType: !198, size: 64, offset: 960)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1503, file: !105, line: 306, baseType: !1532, size: 576, offset: 1024)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !105, line: 205, size: 576, elements: !1533)
!1533 = !{!1534, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1532, file: !105, line: 206, baseType: !1535, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !105, line: 66, baseType: !321)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1532, file: !105, line: 207, baseType: !1535, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1532, file: !105, line: 208, baseType: !1535, size: 64, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1532, file: !105, line: 209, baseType: !1535, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1532, file: !105, line: 210, baseType: !1535, size: 64, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1532, file: !105, line: 211, baseType: !1535, size: 64, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1532, file: !105, line: 212, baseType: !1535, size: 64, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1532, file: !105, line: 213, baseType: !1317, size: 64, offset: 448)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1532, file: !105, line: 214, baseType: !1317, size: 64, offset: 512)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1496, file: !105, line: 324, baseType: !1545, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!1502, !700, !182}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1496, file: !105, line: 325, baseType: !1549, size: 64, offset: 128)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{null, !1502}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1496, file: !105, line: 326, baseType: !1499, size: 64, offset: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1496, file: !105, line: 327, baseType: !1499, size: 64, offset: 256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1496, file: !105, line: 328, baseType: !1499, size: 64, offset: 320)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1496, file: !105, line: 329, baseType: !795, size: 64, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1496, file: !105, line: 332, baseType: !1557, size: 64, offset: 448)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!1560, !538}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1496, file: !105, line: 333, baseType: !1562, size: 64, offset: 512)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!182, !538, !1565}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1496, file: !105, line: 335, baseType: !1567, size: 64, offset: 576)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!182, !538, !1560}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1496, file: !105, line: 337, baseType: !1571, size: 64, offset: 640)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!182, !700, !1574}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !701, file: !111, line: 1425, baseType: !1576, size: 64, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !105, line: 428, size: 704, elements: !1579)
!1579 = !{!1580, !1584, !1585, !1589, !1590, !1591, !1606, !1629, !1633, !1634, !1657}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1578, file: !105, line: 429, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!182, !700, !182, !182, !689}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1578, file: !105, line: 430, baseType: !795, size: 64, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1578, file: !105, line: 431, baseType: !1586, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!182, !700, !7}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1578, file: !105, line: 432, baseType: !1586, size: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1578, file: !105, line: 433, baseType: !795, size: 64, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1578, file: !105, line: 434, baseType: !1592, size: 64, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!182, !700, !182, !1595}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !105, line: 415, size: 256, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1596, file: !105, line: 416, baseType: !182, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1596, file: !105, line: 417, baseType: !7, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1596, file: !105, line: 418, baseType: !7, size: 32, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1596, file: !105, line: 420, baseType: !7, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1596, file: !105, line: 421, baseType: !7, size: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1596, file: !105, line: 422, baseType: !7, size: 32, offset: 160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1596, file: !105, line: 423, baseType: !7, size: 32, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1596, file: !105, line: 424, baseType: !7, size: 32, offset: 224)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1578, file: !105, line: 435, baseType: !1607, size: 64, offset: 384)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!182, !700, !1514, !1610}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !105, line: 343, size: 960, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1611, file: !105, line: 344, baseType: !182, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1611, file: !105, line: 345, baseType: !288, size: 64, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1611, file: !105, line: 346, baseType: !288, size: 64, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1611, file: !105, line: 347, baseType: !288, size: 64, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1611, file: !105, line: 348, baseType: !288, size: 64, offset: 256)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1611, file: !105, line: 349, baseType: !288, size: 64, offset: 320)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1611, file: !105, line: 350, baseType: !288, size: 64, offset: 384)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1611, file: !105, line: 351, baseType: !319, size: 64, offset: 448)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1611, file: !105, line: 353, baseType: !319, size: 64, offset: 512)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1611, file: !105, line: 354, baseType: !182, size: 32, offset: 576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1611, file: !105, line: 355, baseType: !182, size: 32, offset: 608)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1611, file: !105, line: 356, baseType: !288, size: 64, offset: 640)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1611, file: !105, line: 357, baseType: !288, size: 64, offset: 704)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1611, file: !105, line: 358, baseType: !288, size: 64, offset: 768)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1611, file: !105, line: 359, baseType: !319, size: 64, offset: 832)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1611, file: !105, line: 360, baseType: !182, size: 32, offset: 896)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1578, file: !105, line: 436, baseType: !1630, size: 64, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!182, !700, !1574, !1610}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1578, file: !105, line: 438, baseType: !1607, size: 64, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1578, file: !105, line: 439, baseType: !1635, size: 64, offset: 576)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!182, !700, !1638}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !105, line: 409, size: 1408, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1639, file: !105, line: 410, baseType: !7, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1639, file: !105, line: 411, baseType: !1643, size: 1344, offset: 64)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 1344, elements: !759)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !105, line: 395, size: 448, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1656}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1644, file: !105, line: 396, baseType: !7, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1644, file: !105, line: 397, baseType: !7, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1644, file: !105, line: 399, baseType: !7, size: 32, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1644, file: !105, line: 400, baseType: !7, size: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1644, file: !105, line: 401, baseType: !7, size: 32, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1644, file: !105, line: 402, baseType: !7, size: 32, offset: 160)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1644, file: !105, line: 403, baseType: !7, size: 32, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1644, file: !105, line: 404, baseType: !290, size: 64, offset: 256)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1644, file: !105, line: 405, baseType: !1655, size: 64, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !185, line: 126, baseType: !288)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1644, file: !105, line: 406, baseType: !1655, size: 64, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1578, file: !105, line: 440, baseType: !1586, size: 64, offset: 640)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !701, file: !111, line: 1426, baseType: !1659, size: 64, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !111, line: 49, flags: DIFlagFwdDecl)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !701, file: !111, line: 1427, baseType: !198, size: 64, offset: 640)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !701, file: !111, line: 1428, baseType: !198, size: 64, offset: 704)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !701, file: !111, line: 1429, baseType: !198, size: 64, offset: 768)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !701, file: !111, line: 1430, baseType: !569, size: 64, offset: 832)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !701, file: !111, line: 1431, baseType: !1302, size: 256, offset: 896)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !701, file: !111, line: 1432, baseType: !182, size: 32, offset: 1152)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !701, file: !111, line: 1433, baseType: !249, size: 32, offset: 1184)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !701, file: !111, line: 1437, baseType: !1670, size: 64, offset: 1216)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1673 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !111, line: 1437, flags: DIFlagFwdDecl)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !701, file: !111, line: 1449, baseType: !1675, size: 64, offset: 1280)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !581, line: 34, size: 64, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1675, file: !581, line: 35, baseType: !584, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !701, file: !111, line: 1450, baseType: !281, size: 128, offset: 1344)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !701, file: !111, line: 1451, baseType: !1680, size: 64, offset: 1472)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1682, line: 22, size: 1344, elements: !1683)
!1682 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1683 = !{!1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !2520, !2521, !2522, !3436, !3437, !3438}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1681, file: !1682, line: 23, baseType: !705, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1681, file: !1682, line: 24, baseType: !182, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1681, file: !1682, line: 25, baseType: !538, size: 64, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1681, file: !1682, line: 26, baseType: !700, size: 64, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1681, file: !1682, line: 27, baseType: !836, size: 192, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1681, file: !1682, line: 28, baseType: !183, size: 64, offset: 384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1681, file: !1682, line: 29, baseType: !183, size: 64, offset: 448)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1681, file: !1682, line: 30, baseType: !182, size: 32, offset: 512)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1681, file: !1682, line: 31, baseType: !691, size: 8, offset: 544)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1681, file: !1682, line: 33, baseType: !281, size: 128, offset: 576)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1681, file: !1682, line: 35, baseType: !1680, size: 64, offset: 704)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1681, file: !1682, line: 36, baseType: !206, size: 8, offset: 768)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1681, file: !1682, line: 37, baseType: !1697, size: 64, offset: 832)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1699, line: 53, size: 6592, elements: !1700)
!1699 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1700 = !{!1701, !1703, !1704, !1705, !1708, !1729, !2499, !2500, !2501, !2502, !2512}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1698, file: !1699, line: 54, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !185, line: 125, baseType: !288)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1698, file: !1699, line: 60, baseType: !1702, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1698, file: !1699, line: 64, baseType: !198, size: 64, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1698, file: !1699, line: 65, baseType: !1706, size: 64, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1699, line: 65, flags: DIFlagFwdDecl)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1698, file: !1699, line: 66, baseType: !1709, size: 128, offset: 256)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1710, line: 105, size: 128, elements: !1711)
!1710 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1711 = !{!1712, !1713}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1709, file: !1710, line: 110, baseType: !198, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1709, file: !1710, line: 118, baseType: !1714, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1710, line: 95, size: 448, elements: !1716)
!1716 = !{!1717, !1718, !1724, !1725, !1726, !1727, !1728}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1715, file: !1710, line: 96, baseType: !840, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1715, file: !1710, line: 97, baseType: !1719, size: 64, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1710, line: 60, baseType: !1721)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{null, !1723}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1715, file: !1710, line: 98, baseType: !1719, size: 64, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1715, file: !1710, line: 99, baseType: !691, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1715, file: !1710, line: 100, baseType: !691, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1715, file: !1710, line: 101, baseType: !886, size: 128, align: 64, offset: 256)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1715, file: !1710, line: 102, baseType: !1723, size: 64, offset: 384)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1698, file: !1699, line: 68, baseType: !1730, size: 5568, offset: 384)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !37, line: 461, size: 5568, elements: !1731)
!1731 = !{!1732, !2030, !2032, !2035, !2036, !2087, !2179, !2180, !2181, !2182, !2183, !2192, !2318, !2331, !2334, !2335, !2339, !2341, !2342, !2343, !2347, !2353, !2354, !2357, !2361, !2451, !2452, !2453, !2454, !2455, !2487, !2488, !2489, !2492, !2495, !2496, !2497, !2498}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1730, file: !37, line: 462, baseType: !1733, size: 512)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1734, line: 64, size: 512, elements: !1735)
!1734 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1735 = !{!1736, !1737, !1738, !1740, !1782, !1887, !2020, !2025, !2026, !2027, !2028, !2029}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1733, file: !1734, line: 65, baseType: !648, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1733, file: !1734, line: 66, baseType: !281, size: 128, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1733, file: !1734, line: 67, baseType: !1739, size: 64, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1733, file: !1734, line: 68, baseType: !1741, size: 64, offset: 256)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1734, line: 192, size: 704, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1742, file: !1734, line: 193, baseType: !281, size: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1742, file: !1734, line: 194, baseType: !619, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1742, file: !1734, line: 195, baseType: !1733, size: 512, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1742, file: !1734, line: 196, baseType: !1748, size: 64, offset: 640)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1734, line: 156, size: 192, elements: !1751)
!1751 = !{!1752, !1757, !1762}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1750, file: !1734, line: 157, baseType: !1753, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!182, !1741, !1739}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1750, file: !1734, line: 158, baseType: !1758, size: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!648, !1741, !1739}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1750, file: !1734, line: 159, baseType: !1763, size: 64, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!182, !1741, !1739, !1767}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1734, line: 148, size: 20736, elements: !1769)
!1769 = !{!1770, !1772, !1776, !1777, !1781}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1768, file: !1734, line: 149, baseType: !1771, size: 192)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 192, elements: !759)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1768, file: !1734, line: 150, baseType: !1773, size: 4096, offset: 192)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 4096, elements: !1774)
!1774 = !{!1775}
!1775 = !DISubrange(count: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1768, file: !1734, line: 151, baseType: !182, size: 32, offset: 4288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1768, file: !1734, line: 152, baseType: !1778, size: 16384, offset: 4320)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 16384, elements: !1779)
!1779 = !{!1780}
!1780 = !DISubrange(count: 2048)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1768, file: !1734, line: 153, baseType: !182, size: 32, offset: 20704)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1733, file: !1734, line: 69, baseType: !1783, size: 64, offset: 320)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1734, line: 138, size: 448, elements: !1785)
!1785 = !{!1786, !1790, !1809, !1811, !1844, !1877, !1881}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1784, file: !1734, line: 139, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{null, !1739}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1784, file: !1734, line: 140, baseType: !1791, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1794, line: 230, size: 128, elements: !1795)
!1794 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1805}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1793, file: !1794, line: 231, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!911, !1739, !1800, !196}
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1794, line: 30, size: 128, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1801, file: !1794, line: 31, baseType: !648, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1801, file: !1794, line: 32, baseType: !542, size: 16, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1793, file: !1794, line: 232, baseType: !1806, size: 64, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!911, !1739, !1800, !648, !827}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1784, file: !1734, line: 141, baseType: !1810, size: 64, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1784, file: !1734, line: 142, baseType: !1812, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1794, line: 84, size: 320, elements: !1816)
!1816 = !{!1817, !1818, !1822, !1841, !1842}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1815, file: !1794, line: 85, baseType: !648, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1815, file: !1794, line: 86, baseType: !1819, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!542, !1739, !1800, !182}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1815, file: !1794, line: 88, baseType: !1823, size: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!542, !1739, !1826, !182}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1794, line: 168, size: 448, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832, !1836, !1837}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1827, file: !1794, line: 169, baseType: !1801, size: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1827, file: !1794, line: 170, baseType: !827, size: 64, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1827, file: !1794, line: 171, baseType: !183, size: 64, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1827, file: !1794, line: 172, baseType: !1833, size: 64, offset: 256)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!911, !906, !1739, !1826, !196, !710, !827}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1827, file: !1794, line: 174, baseType: !1833, size: 64, offset: 320)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1827, file: !1794, line: 176, baseType: !1838, size: 64, offset: 384)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!182, !906, !1739, !1826, !442}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1815, file: !1794, line: 90, baseType: !1810, size: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1815, file: !1794, line: 91, baseType: !1843, size: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1784, file: !1734, line: 143, baseType: !1845, size: 64, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!1848, !1739}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !58, line: 39, size: 384, elements: !1851)
!1851 = !{!1852, !1853, !1857, !1861, !1869, !1873}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1850, file: !58, line: 40, baseType: !57, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1850, file: !58, line: 41, baseType: !1854, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!691}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1850, file: !58, line: 42, baseType: !1858, size: 64, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!183}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1850, file: !58, line: 43, baseType: !1862, size: 64, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!1865, !1867}
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !58, line: 19, flags: DIFlagFwdDecl)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1850, file: !58, line: 44, baseType: !1870, size: 64, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!1865}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1850, file: !58, line: 45, baseType: !1874, size: 64, offset: 320)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !183}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1784, file: !1734, line: 144, baseType: !1878, size: 64, offset: 320)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!1865, !1739}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1784, file: !1734, line: 145, baseType: !1882, size: 64, offset: 384)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{null, !1739, !1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1733, file: !1734, line: 70, baseType: !1888, size: 64, offset: 384)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !724, line: 123, size: 1024, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !2013, !2014, !2015, !2016, !2017}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1889, file: !724, line: 124, baseType: !249, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1889, file: !724, line: 125, baseType: !249, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1889, file: !724, line: 135, baseType: !1888, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1889, file: !724, line: 136, baseType: !648, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1889, file: !724, line: 138, baseType: !273, size: 192, align: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1889, file: !724, line: 140, baseType: !1865, size: 64, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1889, file: !724, line: 141, baseType: !7, size: 32, offset: 448)
!1898 = !DIDerivedType(tag: DW_TAG_member, scope: !1889, file: !724, line: 142, baseType: !1899, size: 256, offset: 512)
!1899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1889, file: !724, line: 142, size: 256, elements: !1900)
!1900 = !{!1901, !1953, !1957}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1899, file: !724, line: 143, baseType: !1902, size: 192)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !724, line: 91, size: 192, elements: !1903)
!1903 = !{!1904, !1905, !1906}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1902, file: !724, line: 92, baseType: !198, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1902, file: !724, line: 94, baseType: !400, size: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1902, file: !724, line: 100, baseType: !1907, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !724, line: 180, size: 704, elements: !1909)
!1909 = !{!1910, !1911, !1912, !1925, !1926, !1927, !1951, !1952}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1908, file: !724, line: 182, baseType: !1888, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1908, file: !724, line: 183, baseType: !7, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1908, file: !724, line: 186, baseType: !1913, size: 192, offset: 128)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1914, line: 19, size: 192, elements: !1915)
!1914 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1915 = !{!1916, !1923, !1924}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1913, file: !1914, line: 20, baseType: !1917, size: 128)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1918, line: 292, size: 128, elements: !1919)
!1918 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1919 = !{!1920, !1921, !1922}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1917, file: !1918, line: 293, baseType: !619)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1917, file: !1918, line: 295, baseType: !184, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1917, file: !1918, line: 296, baseType: !183, size: 64, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1913, file: !1914, line: 21, baseType: !7, size: 32, offset: 128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1913, file: !1914, line: 22, baseType: !7, size: 32, offset: 160)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1908, file: !724, line: 187, baseType: !187, size: 32, offset: 320)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1908, file: !724, line: 188, baseType: !187, size: 32, offset: 352)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1908, file: !724, line: 189, baseType: !1928, size: 64, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !724, line: 168, size: 320, elements: !1930)
!1930 = !{!1931, !1935, !1939, !1943, !1947}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1929, file: !724, line: 169, baseType: !1932, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!182, !821, !1907}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1929, file: !724, line: 171, baseType: !1936, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!182, !1888, !648, !542}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1929, file: !724, line: 173, baseType: !1940, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!182, !1888}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1929, file: !724, line: 174, baseType: !1944, size: 64, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!182, !1888, !1888, !648}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1929, file: !724, line: 176, baseType: !1948, size: 64, offset: 256)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!182, !821, !1888, !1907}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1908, file: !724, line: 192, baseType: !281, size: 128, offset: 448)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1908, file: !724, line: 194, baseType: !1078, size: 128, offset: 576)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1899, file: !724, line: 144, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !724, line: 103, size: 64, elements: !1955)
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1954, file: !724, line: 104, baseType: !1888, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1899, file: !724, line: 145, baseType: !1958, size: 256)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !724, line: 107, size: 256, elements: !1959)
!1959 = !{!1960, !2008, !2011, !2012}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1958, file: !724, line: 108, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !724, line: 217, size: 768, elements: !1964)
!1964 = !{!1965, !1985, !1989, !1990, !1991, !1992, !1993, !1997, !1998, !1999, !2000, !2004}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1963, file: !724, line: 222, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!182, !1969}
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !724, line: 197, size: 1088, elements: !1971)
!1971 = !{!1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1970, file: !724, line: 199, baseType: !1888, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1970, file: !724, line: 200, baseType: !906, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1970, file: !724, line: 201, baseType: !821, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1970, file: !724, line: 202, baseType: !183, size: 64, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1970, file: !724, line: 205, baseType: !836, size: 192, offset: 256)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1970, file: !724, line: 206, baseType: !836, size: 192, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1970, file: !724, line: 207, baseType: !182, size: 32, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1970, file: !724, line: 208, baseType: !281, size: 128, offset: 704)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1970, file: !724, line: 209, baseType: !196, size: 64, offset: 832)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1970, file: !724, line: 211, baseType: !827, size: 64, offset: 896)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1970, file: !724, line: 212, baseType: !691, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1970, file: !724, line: 213, baseType: !691, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1970, file: !724, line: 214, baseType: !471, size: 64, offset: 1024)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1963, file: !724, line: 223, baseType: !1986, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{null, !1969}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1963, file: !724, line: 236, baseType: !867, size: 64, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1963, file: !724, line: 238, baseType: !854, size: 64, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1963, file: !724, line: 239, baseType: !863, size: 64, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1963, file: !724, line: 240, baseType: !859, size: 64, offset: 320)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1963, file: !724, line: 242, baseType: !1994, size: 64, offset: 384)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!911, !1969, !196, !827, !710}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1963, file: !724, line: 252, baseType: !827, size: 64, offset: 448)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1963, file: !724, line: 259, baseType: !691, size: 8, offset: 512)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1963, file: !724, line: 260, baseType: !1994, size: 64, offset: 576)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1963, file: !724, line: 263, baseType: !2001, size: 64, offset: 640)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!1029, !1969, !1030}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1963, file: !724, line: 266, baseType: !2005, size: 64, offset: 704)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!182, !1969, !442}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1958, file: !724, line: 109, baseType: !2009, size: 64, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !724, line: 31, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1958, file: !724, line: 110, baseType: !710, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1958, file: !724, line: 111, baseType: !1888, size: 64, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1889, file: !724, line: 148, baseType: !183, size: 64, offset: 768)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1889, file: !724, line: 154, baseType: !288, size: 64, offset: 832)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1889, file: !724, line: 156, baseType: !194, size: 16, offset: 896)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1889, file: !724, line: 157, baseType: !542, size: 16, offset: 912)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1889, file: !724, line: 158, baseType: !2018, size: 64, offset: 960)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !724, line: 32, flags: DIFlagFwdDecl)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1733, file: !1734, line: 71, baseType: !2021, size: 32, offset: 448)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2022, line: 19, size: 32, elements: !2023)
!2022 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2021, file: !2022, line: 20, baseType: !244, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1733, file: !1734, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1733, file: !1734, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1733, file: !1734, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1733, file: !1734, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1733, file: !1734, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1730, file: !37, line: 463, baseType: !2031, size: 64, offset: 512)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1730, file: !37, line: 465, baseType: !2033, size: 64, offset: 576)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !37, line: 36, flags: DIFlagFwdDecl)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1730, file: !37, line: 467, baseType: !648, size: 64, offset: 640)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1730, file: !37, line: 468, baseType: !2037, size: 64, offset: 704)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !37, line: 87, size: 384, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2047, !2052, !2056}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2039, file: !37, line: 88, baseType: !648, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2039, file: !37, line: 89, baseType: !1812, size: 64, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2039, file: !37, line: 90, baseType: !2044, size: 64, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!182, !2031, !1767}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2039, file: !37, line: 91, baseType: !2048, size: 64, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!196, !2031, !2051, !1885, !1886}
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2039, file: !37, line: 93, baseType: !2053, size: 64, offset: 256)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{null, !2031}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2039, file: !37, line: 95, baseType: !2057, size: 64, offset: 320)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !44, line: 278, size: 1472, elements: !2060)
!2060 = !{!2061, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2059, file: !44, line: 279, baseType: !2062, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!182, !2031}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2059, file: !44, line: 280, baseType: !2053, size: 64, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2059, file: !44, line: 281, baseType: !2062, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2059, file: !44, line: 282, baseType: !2062, size: 64, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2059, file: !44, line: 283, baseType: !2062, size: 64, offset: 256)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2059, file: !44, line: 284, baseType: !2062, size: 64, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2059, file: !44, line: 285, baseType: !2062, size: 64, offset: 384)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2059, file: !44, line: 286, baseType: !2062, size: 64, offset: 448)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2059, file: !44, line: 287, baseType: !2062, size: 64, offset: 512)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2059, file: !44, line: 288, baseType: !2062, size: 64, offset: 576)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2059, file: !44, line: 289, baseType: !2062, size: 64, offset: 640)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2059, file: !44, line: 290, baseType: !2062, size: 64, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2059, file: !44, line: 291, baseType: !2062, size: 64, offset: 768)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2059, file: !44, line: 292, baseType: !2062, size: 64, offset: 832)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2059, file: !44, line: 293, baseType: !2062, size: 64, offset: 896)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2059, file: !44, line: 294, baseType: !2062, size: 64, offset: 960)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2059, file: !44, line: 295, baseType: !2062, size: 64, offset: 1024)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2059, file: !44, line: 296, baseType: !2062, size: 64, offset: 1088)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2059, file: !44, line: 297, baseType: !2062, size: 64, offset: 1152)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2059, file: !44, line: 298, baseType: !2062, size: 64, offset: 1216)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2059, file: !44, line: 299, baseType: !2062, size: 64, offset: 1280)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2059, file: !44, line: 300, baseType: !2062, size: 64, offset: 1344)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2059, file: !44, line: 301, baseType: !2062, size: 64, offset: 1408)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1730, file: !37, line: 470, baseType: !2088, size: 64, offset: 768)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2090, line: 82, size: 1408, elements: !2091)
!2090 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2091 = !{!2092, !2093, !2094, !2095, !2096, !2097, !2098, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2174, !2177, !2178}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2089, file: !2090, line: 83, baseType: !648, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2089, file: !2090, line: 84, baseType: !648, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2089, file: !2090, line: 85, baseType: !2031, size: 64, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2089, file: !2090, line: 86, baseType: !1812, size: 64, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2089, file: !2090, line: 87, baseType: !1812, size: 64, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2089, file: !2090, line: 88, baseType: !1812, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2089, file: !2090, line: 90, baseType: !2099, size: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!182, !2031, !2102}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !31, line: 95, size: 1152, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2125, !2138, !2139, !2140, !2141, !2142, !2150, !2151, !2152, !2153, !2154, !2155}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2103, file: !31, line: 96, baseType: !648, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2103, file: !31, line: 97, baseType: !2088, size: 64, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2103, file: !31, line: 99, baseType: !738, size: 64, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2103, file: !31, line: 100, baseType: !648, size: 64, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2103, file: !31, line: 102, baseType: !691, size: 8, offset: 256)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2103, file: !31, line: 103, baseType: !30, size: 32, offset: 288)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2103, file: !31, line: 105, baseType: !2112, size: 64, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !2115, line: 262, size: 1600, elements: !2116)
!2115 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!2116 = !{!2117, !2119, !2120, !2124}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2114, file: !2115, line: 263, baseType: !2118, size: 256)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 256, elements: !606)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2114, file: !2115, line: 264, baseType: !2118, size: 256, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !2114, file: !2115, line: 265, baseType: !2121, size: 1024, offset: 512)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 1024, elements: !2122)
!2122 = !{!2123}
!2123 = !DISubrange(count: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2114, file: !2115, line: 266, baseType: !1865, size: 64, offset: 1536)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2103, file: !31, line: 106, baseType: !2126, size: 64, offset: 384)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !2115, line: 210, size: 256, elements: !2129)
!2129 = !{!2130, !2134, !2136, !2137}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2128, file: !2115, line: 211, baseType: !2131, size: 72)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 72, elements: !2132)
!2132 = !{!2133}
!2133 = !DISubrange(count: 9)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2128, file: !2115, line: 212, baseType: !2135, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !2115, line: 14, baseType: !198)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !2128, file: !2115, line: 213, baseType: !189, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !2128, file: !2115, line: 214, baseType: !189, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2103, file: !31, line: 108, baseType: !2062, size: 64, offset: 448)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2103, file: !31, line: 109, baseType: !2053, size: 64, offset: 512)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2103, file: !31, line: 110, baseType: !2062, size: 64, offset: 576)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2103, file: !31, line: 111, baseType: !2053, size: 64, offset: 640)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2103, file: !31, line: 112, baseType: !2143, size: 64, offset: 704)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!182, !2031, !2146}
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !44, line: 52, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !44, line: 50, size: 32, elements: !2148)
!2148 = !{!2149}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2147, file: !44, line: 51, baseType: !182, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2103, file: !31, line: 113, baseType: !2062, size: 64, offset: 768)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2103, file: !31, line: 114, baseType: !1812, size: 64, offset: 832)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2103, file: !31, line: 115, baseType: !1812, size: 64, offset: 896)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2103, file: !31, line: 117, baseType: !2057, size: 64, offset: 960)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2103, file: !31, line: 118, baseType: !2053, size: 64, offset: 1024)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2103, file: !31, line: 120, baseType: !2156, size: 64, offset: 1088)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !31, line: 120, flags: DIFlagFwdDecl)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2089, file: !2090, line: 91, baseType: !2044, size: 64, offset: 448)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2089, file: !2090, line: 92, baseType: !2062, size: 64, offset: 512)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2089, file: !2090, line: 93, baseType: !2053, size: 64, offset: 576)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2089, file: !2090, line: 94, baseType: !2062, size: 64, offset: 640)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2089, file: !2090, line: 95, baseType: !2053, size: 64, offset: 704)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2089, file: !2090, line: 97, baseType: !2062, size: 64, offset: 768)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2089, file: !2090, line: 98, baseType: !2062, size: 64, offset: 832)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2089, file: !2090, line: 100, baseType: !2143, size: 64, offset: 896)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2089, file: !2090, line: 101, baseType: !2062, size: 64, offset: 960)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2089, file: !2090, line: 103, baseType: !2062, size: 64, offset: 1024)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2089, file: !2090, line: 105, baseType: !2062, size: 64, offset: 1088)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2089, file: !2090, line: 107, baseType: !2057, size: 64, offset: 1152)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2089, file: !2090, line: 109, baseType: !2171, size: 64, offset: 1216)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2090, line: 109, flags: DIFlagFwdDecl)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2089, file: !2090, line: 111, baseType: !2175, size: 64, offset: 1280)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2090, line: 111, flags: DIFlagFwdDecl)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2089, file: !2090, line: 112, baseType: !753, offset: 1344)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2089, file: !2090, line: 114, baseType: !691, size: 8, offset: 1344)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1730, file: !37, line: 471, baseType: !2102, size: 64, offset: 832)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1730, file: !37, line: 473, baseType: !183, size: 64, offset: 896)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1730, file: !37, line: 475, baseType: !183, size: 64, offset: 960)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1730, file: !37, line: 480, baseType: !836, size: 192, offset: 1024)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1730, file: !37, line: 484, baseType: !2184, size: 576, offset: 1216)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !37, line: 361, size: 576, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190, !2191}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2184, file: !37, line: 362, baseType: !281, size: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2184, file: !37, line: 363, baseType: !281, size: 128, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2184, file: !37, line: 364, baseType: !281, size: 128, offset: 256)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2184, file: !37, line: 365, baseType: !281, size: 128, offset: 384)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2184, file: !37, line: 366, baseType: !691, size: 8, offset: 512)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2184, file: !37, line: 367, baseType: !36, size: 32, offset: 544)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1730, file: !37, line: 485, baseType: !2193, size: 2304, offset: 1792)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !44, line: 565, size: 2304, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2220, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2311, !2315}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2193, file: !44, line: 566, baseType: !2146, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2193, file: !44, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2193, file: !44, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2193, file: !44, line: 569, baseType: !691, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2193, file: !44, line: 570, baseType: !691, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2193, file: !44, line: 571, baseType: !691, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2193, file: !44, line: 572, baseType: !691, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2193, file: !44, line: 573, baseType: !691, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2193, file: !44, line: 574, baseType: !691, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2193, file: !44, line: 575, baseType: !691, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2193, file: !44, line: 576, baseType: !691, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2193, file: !44, line: 577, baseType: !187, size: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2193, file: !44, line: 578, baseType: !619, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2193, file: !44, line: 580, baseType: !281, size: 128, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2193, file: !44, line: 581, baseType: !2210, size: 192, offset: 256)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2211, line: 26, size: 192, elements: !2212)
!2211 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2212 = !{!2213, !2214}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2210, file: !2211, line: 27, baseType: !7, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2210, file: !2211, line: 28, baseType: !2215, size: 128, offset: 64)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2216, line: 43, size: 128, elements: !2217)
!2216 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2217 = !{!2218, !2219}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2215, file: !2216, line: 44, baseType: !354)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2215, file: !2216, line: 45, baseType: !281, size: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2193, file: !44, line: 582, baseType: !2221, size: 64, offset: 448)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2223, line: 43, size: 1472, elements: !2224)
!2223 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2224 = !{!2225, !2226, !2227, !2228, !2229, !2232, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2222, file: !2223, line: 44, baseType: !648, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2222, file: !2223, line: 45, baseType: !182, size: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2222, file: !2223, line: 46, baseType: !281, size: 128, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2222, file: !2223, line: 47, baseType: !619, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2222, file: !2223, line: 48, baseType: !2230, size: 64, offset: 256)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !44, line: 533, flags: DIFlagFwdDecl)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2222, file: !2223, line: 49, baseType: !2233, size: 320, offset: 320)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2234, line: 11, size: 320, elements: !2235)
!2234 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !{!2236, !2237, !2238, !2243}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2233, file: !2234, line: 16, baseType: !747, size: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2233, file: !2234, line: 17, baseType: !198, size: 64, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2233, file: !2234, line: 18, baseType: !2239, size: 64, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{null, !2242}
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2233, file: !2234, line: 19, baseType: !187, size: 32, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2222, file: !2223, line: 50, baseType: !198, size: 64, offset: 640)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2222, file: !2223, line: 51, baseType: !337, size: 64, offset: 704)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2222, file: !2223, line: 52, baseType: !337, size: 64, offset: 768)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2222, file: !2223, line: 53, baseType: !337, size: 64, offset: 832)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2222, file: !2223, line: 54, baseType: !337, size: 64, offset: 896)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2222, file: !2223, line: 55, baseType: !337, size: 64, offset: 960)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2222, file: !2223, line: 56, baseType: !198, size: 64, offset: 1024)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2222, file: !2223, line: 57, baseType: !198, size: 64, offset: 1088)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2222, file: !2223, line: 58, baseType: !198, size: 64, offset: 1152)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2222, file: !2223, line: 59, baseType: !198, size: 64, offset: 1216)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2222, file: !2223, line: 60, baseType: !198, size: 64, offset: 1280)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2222, file: !2223, line: 61, baseType: !2031, size: 64, offset: 1344)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2222, file: !2223, line: 62, baseType: !691, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2222, file: !2223, line: 63, baseType: !691, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2193, file: !44, line: 583, baseType: !691, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2193, file: !44, line: 584, baseType: !691, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2193, file: !44, line: 585, baseType: !691, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2193, file: !44, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2193, file: !44, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2193, file: !44, line: 592, baseType: !329, size: 512, offset: 576)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2193, file: !44, line: 593, baseType: !288, size: 64, offset: 1088)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2193, file: !44, line: 594, baseType: !2266, size: 256, offset: 1152)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2267, line: 102, size: 256, elements: !2268)
!2267 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2268 = !{!2269, !2270, !2271}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2266, file: !2267, line: 103, baseType: !840, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2266, file: !2267, line: 104, baseType: !281, size: 128, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2266, file: !2267, line: 105, baseType: !2272, size: 64, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2267, line: 21, baseType: !2273)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{null, !2276}
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2193, file: !44, line: 595, baseType: !1078, size: 128, offset: 1408)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2193, file: !44, line: 596, baseType: !2230, size: 64, offset: 1536)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2193, file: !44, line: 597, baseType: !249, size: 32, offset: 1600)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2193, file: !44, line: 598, baseType: !249, size: 32, offset: 1632)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2193, file: !44, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2193, file: !44, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2193, file: !44, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2193, file: !44, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2193, file: !44, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2193, file: !44, line: 604, baseType: !691, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2193, file: !44, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2193, file: !44, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2193, file: !44, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2193, file: !44, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2193, file: !44, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2193, file: !44, line: 610, baseType: !7, size: 32, offset: 1696)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2193, file: !44, line: 611, baseType: !43, size: 32, offset: 1728)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2193, file: !44, line: 612, baseType: !51, size: 32, offset: 1760)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2193, file: !44, line: 613, baseType: !182, size: 32, offset: 1792)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2193, file: !44, line: 614, baseType: !182, size: 32, offset: 1824)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2193, file: !44, line: 615, baseType: !288, size: 64, offset: 1856)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2193, file: !44, line: 616, baseType: !288, size: 64, offset: 1920)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2193, file: !44, line: 617, baseType: !288, size: 64, offset: 1984)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2193, file: !44, line: 618, baseType: !288, size: 64, offset: 2048)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2193, file: !44, line: 620, baseType: !2302, size: 64, offset: 2112)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !44, line: 536, size: 256, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2303, file: !44, line: 537, baseType: !619)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2303, file: !44, line: 538, baseType: !7, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2303, file: !44, line: 540, baseType: !281, size: 128, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2303, file: !44, line: 543, baseType: !2309, size: 64, offset: 192)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !44, line: 534, flags: DIFlagFwdDecl)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2193, file: !44, line: 621, baseType: !2312, size: 64, offset: 2176)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{null, !2031, !1294}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2193, file: !44, line: 622, baseType: !2316, size: 64, offset: 2240)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !44, line: 622, flags: DIFlagFwdDecl)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1730, file: !37, line: 486, baseType: !2319, size: 64, offset: 4096)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !44, line: 642, size: 1792, elements: !2321)
!2321 = !{!2322, !2323, !2324, !2328, !2329, !2330}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2320, file: !44, line: 643, baseType: !2059, size: 1472)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2320, file: !44, line: 644, baseType: !2062, size: 64, offset: 1472)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2320, file: !44, line: 645, baseType: !2325, size: 64, offset: 1536)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{null, !2031, !691}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2320, file: !44, line: 646, baseType: !2062, size: 64, offset: 1600)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2320, file: !44, line: 647, baseType: !2053, size: 64, offset: 1664)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2320, file: !44, line: 648, baseType: !2053, size: 64, offset: 1728)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1730, file: !37, line: 493, baseType: !2332, size: 64, offset: 4160)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !37, line: 493, flags: DIFlagFwdDecl)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1730, file: !37, line: 499, baseType: !281, size: 128, offset: 4224)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1730, file: !37, line: 502, baseType: !2336, size: 64, offset: 4352)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2338)
!2338 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !37, line: 502, flags: DIFlagFwdDecl)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1730, file: !37, line: 504, baseType: !2340, size: 64, offset: 4416)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1730, file: !37, line: 505, baseType: !288, size: 64, offset: 4480)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1730, file: !37, line: 510, baseType: !288, size: 64, offset: 4544)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1730, file: !37, line: 511, baseType: !2344, size: 64, offset: 4608)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2346)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !37, line: 511, flags: DIFlagFwdDecl)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1730, file: !37, line: 513, baseType: !2348, size: 64, offset: 4672)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !37, line: 288, size: 128, elements: !2350)
!2350 = !{!2351, !2352}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2349, file: !37, line: 293, baseType: !7, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2349, file: !37, line: 294, baseType: !198, size: 64, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1730, file: !37, line: 515, baseType: !281, size: 128, offset: 4736)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1730, file: !37, line: 526, baseType: !2355, offset: 4864)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2356, line: 5, elements: !297)
!2356 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1730, file: !37, line: 528, baseType: !2358, size: 64, offset: 4864)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2360, line: 14, flags: DIFlagFwdDecl)
!2360 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1730, file: !37, line: 529, baseType: !2362, size: 64, offset: 4928)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2364, line: 17, size: 192, elements: !2365)
!2364 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2365 = !{!2366, !2367, !2450}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2363, file: !2364, line: 18, baseType: !2362, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2363, file: !2364, line: 19, baseType: !2368, size: 64, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2364, line: 110, size: 1152, elements: !2371)
!2371 = !{!2372, !2376, !2380, !2386, !2392, !2396, !2400, !2405, !2409, !2410, !2414, !2418, !2422, !2433, !2434, !2435, !2436, !2446}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2370, file: !2364, line: 111, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!2362, !2362}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2370, file: !2364, line: 112, baseType: !2377, size: 64, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = !DISubroutineType(types: !2379)
!2379 = !{null, !2362}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2370, file: !2364, line: 113, baseType: !2381, size: 64, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!691, !2384}
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2363)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2370, file: !2364, line: 114, baseType: !2387, size: 64, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!1865, !2384, !2390}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1730)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2370, file: !2364, line: 116, baseType: !2393, size: 64, offset: 256)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{!691, !2384, !648}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2370, file: !2364, line: 118, baseType: !2397, size: 64, offset: 320)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!182, !2384, !648, !7, !183, !827}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2370, file: !2364, line: 123, baseType: !2401, size: 64, offset: 384)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{!182, !2384, !648, !2404, !827}
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2370, file: !2364, line: 126, baseType: !2406, size: 64, offset: 448)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!648, !2384}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2370, file: !2364, line: 127, baseType: !2406, size: 64, offset: 512)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2370, file: !2364, line: 128, baseType: !2411, size: 64, offset: 576)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!2362, !2384}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2370, file: !2364, line: 130, baseType: !2415, size: 64, offset: 640)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!2362, !2384, !2362}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2370, file: !2364, line: 133, baseType: !2419, size: 64, offset: 704)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!2362, !2384, !648}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2370, file: !2364, line: 135, baseType: !2423, size: 64, offset: 768)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!182, !2384, !648, !648, !7, !7, !2426}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2364, line: 43, size: 640, elements: !2428)
!2428 = !{!2429, !2430, !2431}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2427, file: !2364, line: 44, baseType: !2362, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2427, file: !2364, line: 45, baseType: !7, size: 32, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2427, file: !2364, line: 46, baseType: !2432, size: 512, offset: 128)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 512, elements: !375)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2370, file: !2364, line: 140, baseType: !2415, size: 64, offset: 832)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2370, file: !2364, line: 143, baseType: !2411, size: 64, offset: 896)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2370, file: !2364, line: 145, baseType: !2373, size: 64, offset: 960)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2370, file: !2364, line: 146, baseType: !2437, size: 64, offset: 1024)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!182, !2384, !2440}
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2364, line: 29, size: 128, elements: !2442)
!2442 = !{!2443, !2444, !2445}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2441, file: !2364, line: 30, baseType: !7, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2441, file: !2364, line: 31, baseType: !7, size: 32, offset: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2441, file: !2364, line: 32, baseType: !2384, size: 64, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2370, file: !2364, line: 148, baseType: !2447, size: 64, offset: 1088)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!182, !2384, !2031}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2363, file: !2364, line: 20, baseType: !2031, size: 64, offset: 128)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1730, file: !37, line: 534, baseType: !705, size: 32, offset: 4992)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1730, file: !37, line: 535, baseType: !187, size: 32, offset: 5024)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1730, file: !37, line: 537, baseType: !619, offset: 5056)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1730, file: !37, line: 538, baseType: !281, size: 128, offset: 5056)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1730, file: !37, line: 540, baseType: !2456, size: 64, offset: 5184)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2458, line: 54, size: 960, elements: !2459)
!2458 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2459 = !{!2460, !2461, !2462, !2463, !2464, !2465, !2466, !2470, !2474, !2475, !2476, !2477, !2481, !2485, !2486}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2457, file: !2458, line: 55, baseType: !648, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2457, file: !2458, line: 56, baseType: !738, size: 64, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2457, file: !2458, line: 58, baseType: !1812, size: 64, offset: 128)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2457, file: !2458, line: 59, baseType: !1812, size: 64, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2457, file: !2458, line: 60, baseType: !1739, size: 64, offset: 256)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2457, file: !2458, line: 62, baseType: !2044, size: 64, offset: 320)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2457, file: !2458, line: 63, baseType: !2467, size: 64, offset: 384)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{!196, !2031, !2051}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2457, file: !2458, line: 65, baseType: !2471, size: 64, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !2456}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2457, file: !2458, line: 66, baseType: !2053, size: 64, offset: 512)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2457, file: !2458, line: 68, baseType: !2062, size: 64, offset: 576)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2457, file: !2458, line: 70, baseType: !1848, size: 64, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2457, file: !2458, line: 71, baseType: !2478, size: 64, offset: 704)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!1865, !2031}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2457, file: !2458, line: 73, baseType: !2482, size: 64, offset: 768)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !2031, !1885, !1886}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2457, file: !2458, line: 75, baseType: !2057, size: 64, offset: 832)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2457, file: !2458, line: 77, baseType: !2175, size: 64, offset: 896)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1730, file: !37, line: 541, baseType: !1812, size: 64, offset: 5248)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1730, file: !37, line: 543, baseType: !2053, size: 64, offset: 5312)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1730, file: !37, line: 544, baseType: !2490, size: 64, offset: 5376)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !37, line: 45, flags: DIFlagFwdDecl)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1730, file: !37, line: 545, baseType: !2493, size: 64, offset: 5440)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !37, line: 47, flags: DIFlagFwdDecl)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1730, file: !37, line: 547, baseType: !691, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1730, file: !37, line: 548, baseType: !691, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1730, file: !37, line: 549, baseType: !691, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1730, file: !37, line: 550, baseType: !691, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1698, file: !1699, line: 69, baseType: !1739, size: 64, offset: 5952)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1698, file: !1699, line: 70, baseType: !182, size: 32, offset: 6016)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1698, file: !1699, line: 70, baseType: !182, size: 32, offset: 6048)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1698, file: !1699, line: 71, baseType: !2503, size: 64, offset: 6080)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1699, line: 48, size: 808, elements: !2505)
!2505 = !{!2506, !2510}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2504, file: !1699, line: 49, baseType: !2507, size: 296)
!2507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 296, elements: !2508)
!2508 = !{!2509}
!2509 = !DISubrange(count: 37)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2504, file: !1699, line: 50, baseType: !2511, size: 512, offset: 296)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 512, elements: !1774)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1698, file: !1699, line: 75, baseType: !2513, size: 448, offset: 6144)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2267, line: 124, size: 448, elements: !2514)
!2514 = !{!2515, !2516, !2517}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2513, file: !2267, line: 125, baseType: !2266, size: 256)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2513, file: !2267, line: 126, baseType: !886, size: 128, align: 64, offset: 256)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2513, file: !2267, line: 129, baseType: !2518, size: 64, offset: 384)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2267, line: 18, flags: DIFlagFwdDecl)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1681, file: !1682, line: 39, baseType: !7, size: 32, offset: 896)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1681, file: !1682, line: 41, baseType: !619, offset: 928)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1681, file: !1682, line: 42, baseType: !2523, size: 64, offset: 960)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1699, line: 167, size: 8512, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2543, !2544, !2719, !3417, !3418, !3419, !3420, !3421, !3422, !3425, !3426, !3429, !3430, !3431, !3434}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2524, file: !1699, line: 171, baseType: !182, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2524, file: !1699, line: 172, baseType: !182, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2524, file: !1699, line: 173, baseType: !182, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2524, file: !1699, line: 176, baseType: !2118, size: 256, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2524, file: !1699, line: 178, baseType: !194, size: 16, offset: 352)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2524, file: !1699, line: 179, baseType: !194, size: 16, offset: 368)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2524, file: !1699, line: 186, baseType: !2533, size: 64, offset: 384)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1699, line: 149, size: 256, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2534, file: !1699, line: 150, baseType: !886, size: 128, align: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2534, file: !1699, line: 151, baseType: !182, size: 32, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2534, file: !1699, line: 152, baseType: !1697, size: 64, offset: 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2534, file: !1699, line: 153, baseType: !2540, offset: 256)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1697, elements: !2541)
!2541 = !{!2542}
!2542 = !DISubrange(count: -1)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2524, file: !1699, line: 187, baseType: !1698, size: 6592, offset: 448)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2524, file: !1699, line: 189, baseType: !2545, size: 64, offset: 7040)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2547)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !76, line: 1844, size: 960, elements: !2548)
!2548 = !{!2549, !2645, !2649, !2653, !2657, !2661, !2662, !2666, !2670, !2674, !2680, !2684, !2710, !2714, !2715}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2547, file: !76, line: 1845, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!2553, !2554}
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1682, line: 515, baseType: !7)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1682, line: 203, size: 832, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560, !2561, !2562, !2563, !2565, !2566, !2567, !2574, !2579, !2580, !2600, !2601, !2602, !2603, !2604, !2644}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2555, file: !1682, line: 204, baseType: !2554, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2555, file: !1682, line: 205, baseType: !2523, size: 64, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2555, file: !1682, line: 206, baseType: !7, size: 32, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2555, file: !1682, line: 210, baseType: !194, size: 16, offset: 160)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2555, file: !1682, line: 211, baseType: !194, size: 16, offset: 176)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2555, file: !1682, line: 212, baseType: !194, size: 16, offset: 192)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2555, file: !1682, line: 213, baseType: !2564, size: 8, offset: 208)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1682, line: 58, baseType: !206)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2555, file: !1682, line: 214, baseType: !206, size: 8, offset: 216)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2555, file: !1682, line: 215, baseType: !249, size: 32, offset: 224)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2555, file: !1682, line: 217, baseType: !2568, size: 192, offset: 256)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !989, line: 37, size: 192, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2568, file: !989, line: 38, baseType: !1702, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2568, file: !989, line: 40, baseType: !7, size: 32, offset: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2568, file: !989, line: 42, baseType: !7, size: 32, offset: 96)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2568, file: !989, line: 44, baseType: !7, size: 32, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2555, file: !1682, line: 219, baseType: !2575, size: 64, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1682, line: 19, baseType: !2577)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{null, !2554}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2555, file: !1682, line: 221, baseType: !183, size: 64, offset: 512)
!2580 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !1682, line: 240, baseType: !2581, size: 64, offset: 576)
!2581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !1682, line: 240, size: 64, elements: !2582)
!2582 = !{!2583}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2581, file: !1682, line: 242, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2586, line: 313, size: 832, elements: !2587)
!2586 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2598}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2585, file: !2586, line: 314, baseType: !2554, size: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2585, file: !2586, line: 316, baseType: !2568, size: 192, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2585, file: !2586, line: 318, baseType: !194, size: 16, offset: 256)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2585, file: !2586, line: 319, baseType: !194, size: 16, offset: 272)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2585, file: !2586, line: 320, baseType: !194, size: 16, offset: 288)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2585, file: !2586, line: 321, baseType: !194, size: 16, offset: 304)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2585, file: !2586, line: 323, baseType: !2568, size: 192, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2585, file: !2586, line: 325, baseType: !2266, size: 256, offset: 512)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2585, file: !2586, line: 327, baseType: !2597, size: 64, offset: 768)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2585, file: !2586, line: 328, baseType: !2599, offset: 832)
!2599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !988, elements: !2541)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2555, file: !1682, line: 246, baseType: !194, size: 16, offset: 640)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2555, file: !1682, line: 252, baseType: !194, size: 16, offset: 656)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2555, file: !1682, line: 254, baseType: !249, size: 32, offset: 672)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2555, file: !1682, line: 256, baseType: !2597, size: 64, offset: 704)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2555, file: !1682, line: 258, baseType: !2605, size: 64, offset: 768)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2586, line: 682, size: 2368, elements: !2607)
!2607 = !{!2608, !2611, !2612, !2633, !2634, !2635, !2636, !2637, !2642, !2643}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2606, file: !2586, line: 683, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !436, line: 117, flags: DIFlagFwdDecl)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2606, file: !2586, line: 684, baseType: !7, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2606, file: !2586, line: 686, baseType: !2613, size: 448, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2614, line: 26, baseType: !2615)
!2614 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2614, line: 16, size: 448, elements: !2616)
!2616 = !{!2617, !2618, !2619, !2620, !2621, !2622, !2627, !2632}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2615, file: !2614, line: 17, baseType: !619)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2615, file: !2614, line: 18, baseType: !182, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2615, file: !2614, line: 19, baseType: !182, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2615, file: !2614, line: 20, baseType: !1148, size: 64, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2615, file: !2614, line: 22, baseType: !183, size: 64, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2615, file: !2614, line: 23, baseType: !2623, size: 64, offset: 192)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2614, line: 13, baseType: !2625)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!183, !184, !183}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2615, file: !2614, line: 24, baseType: !2628, size: 64, offset: 256)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2614, line: 14, baseType: !2630)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{null, !183, !183}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2615, file: !2614, line: 25, baseType: !1078, size: 128, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2606, file: !2586, line: 687, baseType: !2613, size: 448, offset: 576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2606, file: !2586, line: 689, baseType: !2613, size: 448, offset: 1024)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2606, file: !2586, line: 690, baseType: !2613, size: 448, offset: 1472)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2606, file: !2586, line: 697, baseType: !619, offset: 1920)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2606, file: !2586, line: 698, baseType: !2638, size: 128, offset: 1920)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2586, line: 554, size: 128, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2638, file: !2586, line: 555, baseType: !2554, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2638, file: !2586, line: 556, baseType: !2554, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2606, file: !2586, line: 699, baseType: !2266, size: 256, offset: 2048)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2606, file: !2586, line: 700, baseType: !2518, size: 64, offset: 2304)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2555, file: !1682, line: 265, baseType: !2599, offset: 832)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2547, file: !76, line: 1846, baseType: !2646, size: 64, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!182, !1680, !1222}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2547, file: !76, line: 1847, baseType: !2650, size: 64, offset: 128)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{null, !2523, !1222}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2547, file: !76, line: 1848, baseType: !2654, size: 64, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{!182, !1680, !1702, !522, !7}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2547, file: !76, line: 1849, baseType: !2658, size: 64, offset: 256)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{!182, !1680, !1222, !7, !198}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2547, file: !76, line: 1850, baseType: !2658, size: 64, offset: 320)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2547, file: !76, line: 1851, baseType: !2663, size: 64, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!7, !2523, !7}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2547, file: !76, line: 1853, baseType: !2667, size: 64, offset: 448)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{null, !2523}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2547, file: !76, line: 1854, baseType: !2671, size: 64, offset: 512)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!182, !2523}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2547, file: !76, line: 1855, baseType: !2675, size: 64, offset: 576)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{!182, !1680, !2678}
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 64)
!2679 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !111, line: 51, flags: DIFlagFwdDecl)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2547, file: !76, line: 1857, baseType: !2681, size: 64, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{null, !1680, !198}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2547, file: !76, line: 1858, baseType: !2685, size: 64, offset: 704)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!182, !2523, !1702, !7, !2688, !183}
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !76, line: 354, baseType: !2689)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!182, !2692, !7, !183}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2694, line: 106, size: 512, elements: !2695)
!2694 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2695 = !{!2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2705, !2706}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2693, file: !2694, line: 107, baseType: !289, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2693, file: !2694, line: 108, baseType: !289, size: 64, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2693, file: !2694, line: 109, baseType: !289, size: 64, offset: 128)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2693, file: !2694, line: 110, baseType: !207, size: 8, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2693, file: !2694, line: 111, baseType: !207, size: 8, offset: 200)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2693, file: !2694, line: 112, baseType: !207, size: 8, offset: 208)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2693, file: !2694, line: 113, baseType: !207, size: 8, offset: 216)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2693, file: !2694, line: 114, baseType: !2704, size: 32, offset: 224)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 32, elements: !1238)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2693, file: !2694, line: 115, baseType: !289, size: 64, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2693, file: !2694, line: 116, baseType: !2707, size: 192, offset: 320)
!2707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 192, elements: !2708)
!2708 = !{!2709}
!2709 = !DISubrange(count: 24)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2547, file: !76, line: 1860, baseType: !2711, size: 64, offset: 768)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!196, !2523, !2051}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2547, file: !76, line: 1861, baseType: !738, size: 64, offset: 832)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2547, file: !76, line: 1862, baseType: !2716, size: 64, offset: 896)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2718)
!2718 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !76, line: 41, flags: DIFlagFwdDecl)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2524, file: !1699, line: 190, baseType: !2720, size: 64, offset: 7104)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !76, line: 399, size: 14464, elements: !2722)
!2722 = !{!2723, !2939, !3061, !3062, !3065, !3068, !3164, !3165, !3166, !3168, !3169, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3285, !3294, !3295, !3296, !3297, !3298, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2721, file: !76, line: 400, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !76, line: 130, size: 2176, elements: !2726)
!2726 = !{!2727, !2728, !2731, !2821, !2822, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2836, !2843, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2937, !2938}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2725, file: !76, line: 131, baseType: !2720, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2725, file: !76, line: 132, baseType: !2729, size: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !76, line: 132, flags: DIFlagFwdDecl)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2725, file: !76, line: 133, baseType: !2732, size: 64, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2734, line: 16, size: 4032, elements: !2735)
!2734 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2735 = !{!2736, !2742, !2749, !2752, !2753, !2754, !2755, !2756, !2757, !2760, !2761, !2776, !2777, !2778, !2779, !2780, !2782, !2783, !2784, !2785, !2788, !2789, !2790, !2791, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2736 = !DIDerivedType(tag: DW_TAG_member, scope: !2733, file: !2734, line: 17, baseType: !2737, size: 192)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2733, file: !2734, line: 17, size: 192, elements: !2738)
!2738 = !{!2739, !2740, !2741}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2737, file: !2734, line: 19, baseType: !619)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2737, file: !2734, line: 27, baseType: !281, size: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2737, file: !2734, line: 32, baseType: !198, size: 64, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2733, file: !2734, line: 38, baseType: !2743, size: 704, offset: 192)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2267, line: 115, size: 704, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2743, file: !2267, line: 116, baseType: !2266, size: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2743, file: !2267, line: 117, baseType: !2233, size: 320, offset: 256)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2743, file: !2267, line: 120, baseType: !2518, size: 64, offset: 576)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2743, file: !2267, line: 121, baseType: !182, size: 32, offset: 640)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2733, file: !2734, line: 40, baseType: !2750, size: 64, offset: 896)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !422, line: 756, baseType: !2751)
!2751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !427)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2733, file: !2734, line: 45, baseType: !182, size: 32, offset: 960)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2733, file: !2734, line: 50, baseType: !182, size: 32, offset: 992)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2733, file: !2734, line: 53, baseType: !198, size: 64, offset: 1024)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2733, file: !2734, line: 59, baseType: !183, size: 64, offset: 1088)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2733, file: !2734, line: 63, baseType: !2720, size: 64, offset: 1152)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2733, file: !2734, line: 65, baseType: !2758, size: 64, offset: 1216)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !76, line: 40, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2733, file: !2734, line: 71, baseType: !183, size: 64, offset: 1280)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2733, file: !2734, line: 77, baseType: !2762, size: 192, offset: 1344)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2763, line: 48, size: 192, elements: !2764)
!2763 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2764 = !{!2765, !2766, !2767, !2768}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2762, file: !2763, line: 52, baseType: !7, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2762, file: !2763, line: 57, baseType: !7, size: 32, offset: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2762, file: !2763, line: 62, baseType: !7, size: 32, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2762, file: !2763, line: 67, baseType: !2769, size: 64, offset: 128)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2763, line: 20, size: 192, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2770, file: !2763, line: 24, baseType: !198, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2770, file: !2763, line: 29, baseType: !198, size: 64, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2770, file: !2763, line: 34, baseType: !198, size: 64, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2770, file: !2763, line: 39, baseType: !619, offset: 192)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2733, file: !2734, line: 83, baseType: !2729, size: 64, offset: 1536)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2733, file: !2734, line: 89, baseType: !7, size: 32, offset: 1600)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2733, file: !2734, line: 92, baseType: !194, size: 16, offset: 1632)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2733, file: !2734, line: 94, baseType: !194, size: 16, offset: 1648)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2733, file: !2734, line: 96, baseType: !2781, size: 64, offset: 1664)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2733, file: !2734, line: 99, baseType: !619, offset: 1728)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2733, file: !2734, line: 104, baseType: !947, size: 320, offset: 1728)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2733, file: !2734, line: 110, baseType: !249, size: 32, offset: 2048)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2733, file: !2734, line: 116, baseType: !2786, size: 64, offset: 2112)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2734, line: 9, flags: DIFlagFwdDecl)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2733, file: !2734, line: 122, baseType: !2786, size: 64, offset: 2176)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2733, file: !2734, line: 125, baseType: !198, size: 64, offset: 2240)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2733, file: !2734, line: 127, baseType: !198, size: 64, offset: 2304)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2733, file: !2734, line: 130, baseType: !2792, size: 448, offset: 2368)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 448, elements: !2793)
!2793 = !{!2794}
!2794 = !DISubrange(count: 7)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2733, file: !2734, line: 133, baseType: !7, size: 32, offset: 2816)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2733, file: !2734, line: 135, baseType: !7, size: 32, offset: 2848)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2733, file: !2734, line: 141, baseType: !249, size: 32, offset: 2880)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2733, file: !2734, line: 145, baseType: !249, size: 32, offset: 2912)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2733, file: !2734, line: 148, baseType: !747, size: 128, offset: 2944)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2733, file: !2734, line: 150, baseType: !747, size: 128, offset: 3072)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2733, file: !2734, line: 152, baseType: !1733, size: 512, offset: 3200)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2733, file: !2734, line: 155, baseType: !198, size: 64, offset: 3712)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2733, file: !2734, line: 157, baseType: !198, size: 64, offset: 3776)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2733, file: !2734, line: 159, baseType: !198, size: 64, offset: 3840)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2733, file: !2734, line: 175, baseType: !281, size: 128, offset: 3904)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2733, file: !2734, line: 182, baseType: !2807, offset: 4032)
!2807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2808, elements: !2541)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2809, line: 16, size: 576, elements: !2810)
!2809 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2810 = !{!2811, !2813, !2814, !2815, !2816, !2817, !2818, !2820}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2808, file: !2809, line: 17, baseType: !2812, size: 32)
!2812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 32, elements: !1278)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2808, file: !2809, line: 18, baseType: !1328, size: 16, offset: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2808, file: !2809, line: 19, baseType: !206, size: 8, offset: 48)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2808, file: !2809, line: 20, baseType: !206, size: 8, offset: 56)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2808, file: !2809, line: 21, baseType: !2215, size: 128, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2808, file: !2809, line: 23, baseType: !889, size: 64, offset: 192)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2808, file: !2809, line: 24, baseType: !2819, size: 64, offset: 256)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2808, file: !2809, line: 25, baseType: !2266, size: 256, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2725, file: !76, line: 135, baseType: !7, size: 32, offset: 192)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2725, file: !76, line: 136, baseType: !2823, size: 32, offset: 224)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !76, line: 66, baseType: !189)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2725, file: !76, line: 138, baseType: !182, size: 32, offset: 256)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2725, file: !76, line: 139, baseType: !182, size: 32, offset: 288)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2725, file: !76, line: 142, baseType: !7, size: 32, offset: 320)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2725, file: !76, line: 143, baseType: !1702, size: 64, offset: 384)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2725, file: !76, line: 145, baseType: !2554, size: 64, offset: 448)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2725, file: !76, line: 146, baseType: !2554, size: 64, offset: 512)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2725, file: !76, line: 148, baseType: !281, size: 128, offset: 576)
!2831 = !DIDerivedType(tag: DW_TAG_member, scope: !2725, file: !76, line: 157, baseType: !2832, size: 128, offset: 704)
!2832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2725, file: !76, line: 157, size: 128, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2832, file: !76, line: 158, baseType: !747, size: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2832, file: !76, line: 159, baseType: !281, size: 128)
!2836 = !DIDerivedType(tag: DW_TAG_member, scope: !2725, file: !76, line: 167, baseType: !2837, size: 192, offset: 832)
!2837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2725, file: !76, line: 167, size: 192, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2842}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2837, file: !76, line: 168, baseType: !273, size: 192, align: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2837, file: !76, line: 169, baseType: !988, size: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2837, file: !76, line: 170, baseType: !183, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2837, file: !76, line: 171, baseType: !182, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, scope: !2725, file: !76, line: 180, baseType: !2844, size: 256, offset: 1024)
!2844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2725, file: !76, line: 180, size: 256, elements: !2845)
!2845 = !{!2846, !2881}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2844, file: !76, line: 184, baseType: !2847, size: 192)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2844, file: !76, line: 181, size: 192, elements: !2848)
!2848 = !{!2849, !2879}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2847, file: !76, line: 182, baseType: !2850, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2852, line: 73, size: 448, elements: !2853)
!2852 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2853 = !{!2854, !2855, !2868, !2873, !2878}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2851, file: !2852, line: 74, baseType: !2720, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2851, file: !2852, line: 75, baseType: !2856, size: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2852, line: 99, size: 704, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2857, file: !2852, line: 100, baseType: !840, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2857, file: !2852, line: 101, baseType: !249, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2857, file: !2852, line: 102, baseType: !249, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2857, file: !2852, line: 105, baseType: !619, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2857, file: !2852, line: 107, baseType: !194, size: 16, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2857, file: !2852, line: 109, baseType: !1917, size: 128, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2857, file: !2852, line: 110, baseType: !2850, size: 64, offset: 320)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2857, file: !2852, line: 111, baseType: !743, size: 64, offset: 384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2857, file: !2852, line: 113, baseType: !2266, size: 256, offset: 448)
!2868 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 83, baseType: !2869, size: 128, offset: 128)
!2869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 83, size: 128, elements: !2870)
!2870 = !{!2871, !2872}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2869, file: !2852, line: 84, baseType: !281, size: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2869, file: !2852, line: 85, baseType: !2609, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 87, baseType: !2874, size: 128, offset: 256)
!2874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 87, size: 128, elements: !2875)
!2875 = !{!2876, !2877}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2874, file: !2852, line: 88, baseType: !747, size: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2874, file: !2852, line: 89, baseType: !886, size: 128, align: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2851, file: !2852, line: 92, baseType: !7, size: 32, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2847, file: !76, line: 183, baseType: !2880, size: 128, offset: 64)
!2880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 128, elements: !1278)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2844, file: !76, line: 190, baseType: !2882, size: 256)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2844, file: !76, line: 186, size: 256, elements: !2883)
!2883 = !{!2884, !2885, !2886}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2882, file: !76, line: 187, baseType: !7, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2882, file: !76, line: 188, baseType: !281, size: 128, offset: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2882, file: !76, line: 189, baseType: !2887, size: 64, offset: 192)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !76, line: 62, baseType: !2889)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{null, !2724, !2564}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2725, file: !76, line: 193, baseType: !2523, size: 64, offset: 1280)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2725, file: !76, line: 194, baseType: !1697, size: 64, offset: 1344)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2725, file: !76, line: 200, baseType: !288, size: 64, offset: 1408)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2725, file: !76, line: 202, baseType: !288, size: 64, offset: 1472)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2725, file: !76, line: 212, baseType: !194, size: 16, offset: 1536)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2725, file: !76, line: 218, baseType: !194, size: 16, offset: 1552)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2725, file: !76, line: 221, baseType: !194, size: 16, offset: 1568)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2725, file: !76, line: 229, baseType: !194, size: 16, offset: 1584)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2725, file: !76, line: 230, baseType: !194, size: 16, offset: 1600)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2725, file: !76, line: 232, baseType: !75, size: 32, offset: 1632)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2725, file: !76, line: 233, baseType: !244, size: 32, offset: 1664)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2725, file: !76, line: 235, baseType: !7, size: 32, offset: 1696)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2725, file: !76, line: 236, baseType: !198, size: 64, offset: 1728)
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2725, file: !76, line: 238, baseType: !2905, size: 256, offset: 1792)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2725, file: !76, line: 238, size: 256, elements: !2906)
!2906 = !{!2907, !2936}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2905, file: !76, line: 239, baseType: !2908, size: 256)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2909, line: 23, size: 256, elements: !2910)
!2909 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2910 = !{!2911, !2933, !2935}
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !2908, file: !2909, line: 24, baseType: !2912, size: 128)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2908, file: !2909, line: 24, size: 128, elements: !2913)
!2913 = !{!2914, !2926}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2912, file: !2909, line: 25, baseType: !2915, size: 128)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2916, line: 58, size: 128, elements: !2917)
!2916 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2917 = !{!2918, !2919, !2924, !2925}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2915, file: !2916, line: 59, baseType: !880, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, scope: !2915, file: !2916, line: 60, baseType: !2920, size: 32, offset: 64)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2915, file: !2916, line: 60, size: 32, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2920, file: !2916, line: 61, baseType: !7, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2920, file: !2916, line: 62, baseType: !249, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2915, file: !2916, line: 65, baseType: !216, size: 16, offset: 96)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2915, file: !2916, line: 65, baseType: !216, size: 16, offset: 112)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2909, line: 26, baseType: !2927, size: 128)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2912, file: !2909, line: 26, size: 128, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2927, file: !2909, line: 27, baseType: !880, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2927, file: !2909, line: 28, baseType: !7, size: 32, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2927, file: !2909, line: 30, baseType: !216, size: 16, offset: 96)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2927, file: !2909, line: 30, baseType: !216, size: 16, offset: 112)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2908, file: !2909, line: 34, baseType: !2934, size: 64, offset: 128)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2909, line: 17, baseType: !1874)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2908, file: !2909, line: 35, baseType: !183, size: 64, offset: 192)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2905, file: !76, line: 240, baseType: !288, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2725, file: !76, line: 246, baseType: !2887, size: 64, offset: 2048)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2725, file: !76, line: 247, baseType: !183, size: 64, offset: 2112)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2721, file: !76, line: 401, baseType: !2940, size: 64, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !82, line: 101, size: 4992, elements: !2942)
!2942 = !{!2943, !3055, !3056, !3057, !3058, !3059}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2941, file: !82, line: 103, baseType: !2944, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !82, line: 66, size: 2240, elements: !2946)
!2946 = !{!2947, !2948, !3030, !3031, !3032, !3045, !3046, !3047, !3049, !3050, !3054}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2945, file: !82, line: 69, baseType: !2609, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2945, file: !82, line: 72, baseType: !2949, size: 1408, offset: 64)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !82, line: 29, size: 1408, elements: !2950)
!2950 = !{!2951, !2955, !2959, !2963, !2967, !2971, !2975, !2979, !2984, !2988, !2992, !2998, !3002, !3003, !3007, !3011, !3015, !3019, !3020, !3024, !3025, !3029}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2949, file: !82, line: 30, baseType: !2952, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!182, !2720, !2944}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2949, file: !82, line: 31, baseType: !2956, size: 64, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{null, !2940}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2949, file: !82, line: 32, baseType: !2960, size: 64, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!182, !2732, !7}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2949, file: !82, line: 33, baseType: !2964, size: 64, offset: 192)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{null, !2732, !7}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2949, file: !82, line: 34, baseType: !2968, size: 64, offset: 256)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{null, !2732}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2949, file: !82, line: 36, baseType: !2972, size: 64, offset: 320)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!691, !2720, !2724, !2554}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2949, file: !82, line: 37, baseType: !2976, size: 64, offset: 384)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!691, !2732, !2554, !7}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2949, file: !82, line: 38, baseType: !2980, size: 64, offset: 448)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!182, !2720, !2983, !2554}
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2949, file: !82, line: 39, baseType: !2985, size: 64, offset: 512)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{null, !2720, !2724, !81}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2949, file: !82, line: 40, baseType: !2989, size: 64, offset: 576)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{null, !2720, !2724, !2724}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2949, file: !82, line: 41, baseType: !2993, size: 64, offset: 640)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{null, !7, !2996}
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !82, line: 26, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2949, file: !82, line: 42, baseType: !2999, size: 64, offset: 704)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{null, !2724}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2949, file: !82, line: 43, baseType: !2999, size: 64, offset: 768)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2949, file: !82, line: 44, baseType: !3004, size: 64, offset: 832)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{null, !2732, !284, !691}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2949, file: !82, line: 45, baseType: !3008, size: 64, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{!2724, !2732}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2949, file: !82, line: 46, baseType: !3012, size: 64, offset: 960)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!691, !2732}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2949, file: !82, line: 47, baseType: !3016, size: 64, offset: 1024)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{null, !2724, !288}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2949, file: !82, line: 48, baseType: !2999, size: 64, offset: 1088)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2949, file: !82, line: 49, baseType: !3021, size: 64, offset: 1152)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!2724, !2720, !2724}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2949, file: !82, line: 50, baseType: !3021, size: 64, offset: 1216)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2949, file: !82, line: 51, baseType: !3026, size: 64, offset: 1280)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !2850}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2949, file: !82, line: 52, baseType: !3026, size: 64, offset: 1344)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2945, file: !82, line: 74, baseType: !827, size: 64, offset: 1472)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2945, file: !82, line: 75, baseType: !827, size: 64, offset: 1536)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2945, file: !82, line: 76, baseType: !3033, size: 64, offset: 1600)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !82, line: 57, size: 256, elements: !3035)
!3035 = !{!3036, !3037, !3041}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3034, file: !82, line: 58, baseType: !1801, size: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3034, file: !82, line: 59, baseType: !3038, size: 64, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!911, !2940, !196}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3034, file: !82, line: 60, baseType: !3042, size: 64, offset: 192)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!911, !2940, !648, !827}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2945, file: !82, line: 77, baseType: !648, size: 64, offset: 1664)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2945, file: !82, line: 78, baseType: !648, size: 64, offset: 1728)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2945, file: !82, line: 79, baseType: !3048, size: 32, offset: 1792)
!3048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2945, file: !82, line: 80, baseType: !738, size: 64, offset: 1856)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2945, file: !82, line: 87, baseType: !3051, size: 176, offset: 1920)
!3051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 176, elements: !3052)
!3052 = !{!3053}
!3053 = !DISubrange(count: 22)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2945, file: !82, line: 88, baseType: !281, size: 128, offset: 2112)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2941, file: !82, line: 104, baseType: !183, size: 64, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2941, file: !82, line: 105, baseType: !1733, size: 512, offset: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2941, file: !82, line: 106, baseType: !836, size: 192, offset: 640)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2941, file: !82, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2941, file: !82, line: 108, baseType: !3060, size: 4096, offset: 896)
!3060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 4096, elements: !1774)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2721, file: !76, line: 403, baseType: !1709, size: 128, offset: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2721, file: !76, line: 405, baseType: !3063, size: 64, offset: 256)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !76, line: 43, flags: DIFlagFwdDecl)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2721, file: !76, line: 406, baseType: !3066, size: 64, offset: 320)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !76, line: 42, flags: DIFlagFwdDecl)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2721, file: !76, line: 408, baseType: !3069, size: 64, offset: 384)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2734, line: 290, size: 960, elements: !3072)
!3072 = !{!3073, !3083, !3084, !3088, !3092, !3096, !3100, !3101, !3105, !3106, !3153, !3157, !3158, !3159, !3160}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3071, file: !2734, line: 294, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!2564, !2732, !3077}
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2734, line: 277, size: 128, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3079, file: !2734, line: 278, baseType: !2724, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3079, file: !2734, line: 279, baseType: !691, size: 8, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3071, file: !2734, line: 304, baseType: !2968, size: 64, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3071, file: !2734, line: 312, baseType: !3085, size: 64, offset: 128)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!691, !2720}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3071, file: !2734, line: 317, baseType: !3089, size: 64, offset: 192)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{null, !2720}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3071, file: !2734, line: 322, baseType: !3093, size: 64, offset: 256)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!88, !2724, !691}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3071, file: !2734, line: 327, baseType: !3097, size: 64, offset: 320)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!182, !2732}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3071, file: !2734, line: 332, baseType: !2999, size: 64, offset: 384)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3071, file: !2734, line: 339, baseType: !3102, size: 64, offset: 448)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!182, !2732, !183, !7}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3071, file: !2734, line: 343, baseType: !2964, size: 64, offset: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3071, file: !2734, line: 352, baseType: !3107, size: 64, offset: 576)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!182, !3110, !2724, !7, !7}
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2734, line: 249, size: 2304, elements: !3112)
!3112 = !{!3113, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3148, !3149, !3151, !3152}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3111, file: !2734, line: 250, baseType: !3114, size: 384)
!3114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3115, size: 384, elements: !759)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2734, line: 195, size: 128, elements: !3116)
!3116 = !{!3117, !3119, !3120}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3115, file: !2734, line: 196, baseType: !3118, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3115, file: !2734, line: 197, baseType: !7, size: 32, offset: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3115, file: !2734, line: 198, baseType: !7, size: 32, offset: 96)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3111, file: !2734, line: 251, baseType: !7, size: 32, offset: 384)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3111, file: !2734, line: 252, baseType: !3069, size: 64, offset: 448)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3111, file: !2734, line: 253, baseType: !7, size: 32, offset: 512)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3111, file: !2734, line: 254, baseType: !7, size: 32, offset: 544)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3111, file: !2734, line: 255, baseType: !7, size: 32, offset: 576)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3111, file: !2734, line: 256, baseType: !7, size: 32, offset: 608)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3111, file: !2734, line: 257, baseType: !182, size: 32, offset: 640)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3111, file: !2734, line: 258, baseType: !7, size: 32, offset: 672)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3111, file: !2734, line: 259, baseType: !7, size: 32, offset: 704)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3111, file: !2734, line: 260, baseType: !183, size: 64, offset: 768)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3111, file: !2734, line: 261, baseType: !249, size: 32, offset: 832)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3111, file: !2734, line: 263, baseType: !3133, size: 512, offset: 896)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2763, line: 97, size: 512, elements: !3134)
!3134 = !{!3135, !3136, !3137, !3138, !3139, !3145, !3146, !3147}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3133, file: !2763, line: 101, baseType: !2762, size: 192)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3133, file: !2763, line: 109, baseType: !3118, size: 64, offset: 192)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3133, file: !2763, line: 115, baseType: !7, size: 32, offset: 256)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3133, file: !2763, line: 120, baseType: !249, size: 32, offset: 288)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3133, file: !2763, line: 125, baseType: !3140, size: 64, offset: 320)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2763, line: 76, size: 192, elements: !3142)
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3141, file: !2763, line: 80, baseType: !249, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3141, file: !2763, line: 85, baseType: !1078, size: 128, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3133, file: !2763, line: 130, baseType: !249, size: 32, offset: 384)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3133, file: !2763, line: 135, baseType: !691, size: 8, offset: 416)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3133, file: !2763, line: 141, baseType: !7, size: 32, offset: 448)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3111, file: !2734, line: 264, baseType: !3133, size: 512, offset: 1408)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3111, file: !2734, line: 265, baseType: !3150, size: 64, offset: 1920)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3111, file: !2734, line: 267, baseType: !836, size: 192, offset: 1984)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3111, file: !2734, line: 268, baseType: !281, size: 128, offset: 2176)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3071, file: !2734, line: 357, baseType: !3154, size: 64, offset: 640)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{null, !3110, !2724, !7}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3071, file: !2734, line: 363, baseType: !2999, size: 64, offset: 704)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3071, file: !2734, line: 369, baseType: !2999, size: 64, offset: 768)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3071, file: !2734, line: 374, baseType: !3085, size: 64, offset: 832)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3071, file: !2734, line: 380, baseType: !3161, size: 64, offset: 896)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!182, !3110}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2721, file: !76, line: 411, baseType: !2729, size: 64, offset: 448)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2721, file: !76, line: 413, baseType: !7, size: 32, offset: 512)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2721, file: !76, line: 416, baseType: !3167, size: 64, offset: 576)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2721, file: !76, line: 417, baseType: !7, size: 32, offset: 640)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2721, file: !76, line: 419, baseType: !3170, size: 64, offset: 704)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !64, line: 165, size: 4672, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3223, !3224, !3225, !3226, !3228, !3229}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3171, file: !64, line: 166, baseType: !288, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3171, file: !64, line: 167, baseType: !273, size: 192, align: 64, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !3171, file: !64, line: 168, baseType: !281, size: 128, offset: 256)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3171, file: !64, line: 169, baseType: !198, size: 64, offset: 384)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !3171, file: !64, line: 170, baseType: !198, size: 64, offset: 448)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3171, file: !64, line: 172, baseType: !2021, size: 32, offset: 512)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3171, file: !64, line: 173, baseType: !7, size: 32, offset: 544)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !3171, file: !64, line: 174, baseType: !7, size: 32, offset: 576)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !3171, file: !64, line: 175, baseType: !7, size: 32, offset: 608)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !3171, file: !64, line: 175, baseType: !7, size: 32, offset: 640)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !3171, file: !64, line: 181, baseType: !840, size: 64, offset: 704)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !3171, file: !64, line: 183, baseType: !3185, size: 2688, offset: 768)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !64, line: 107, size: 2688, elements: !3186)
!3186 = !{!3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3216, !3217, !3218, !3219, !3220, !3221, !3222}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !3185, file: !64, line: 108, baseType: !3170, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3185, file: !64, line: 110, baseType: !198, size: 64, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !3185, file: !64, line: 111, baseType: !198, size: 64, offset: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !3185, file: !64, line: 113, baseType: !281, size: 128, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !3185, file: !64, line: 114, baseType: !281, size: 128, offset: 320)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !3185, file: !64, line: 115, baseType: !281, size: 128, offset: 448)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !3185, file: !64, line: 116, baseType: !281, size: 128, offset: 576)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3185, file: !64, line: 117, baseType: !619, offset: 704)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !3185, file: !64, line: 119, baseType: !3196, size: 256, offset: 704)
!3196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3197, size: 256, elements: !1238)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3198, line: 97, size: 64, elements: !3199)
!3198 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3199 = !{!3200}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3197, file: !3198, line: 98, baseType: !319, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !3185, file: !64, line: 121, baseType: !198, size: 64, offset: 960)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !3185, file: !64, line: 123, baseType: !198, size: 64, offset: 1024)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !3185, file: !64, line: 124, baseType: !198, size: 64, offset: 1088)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !3185, file: !64, line: 125, baseType: !198, size: 64, offset: 1152)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !3185, file: !64, line: 126, baseType: !198, size: 64, offset: 1216)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !3185, file: !64, line: 127, baseType: !198, size: 64, offset: 1280)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !3185, file: !64, line: 135, baseType: !198, size: 64, offset: 1344)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !3185, file: !64, line: 136, baseType: !198, size: 64, offset: 1408)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !3185, file: !64, line: 138, baseType: !3210, size: 128, offset: 1472)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !3211, line: 76, size: 128, elements: !3212)
!3211 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!3212 = !{!3213, !3214, !3215}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3210, file: !3211, line: 78, baseType: !3197, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3210, file: !3211, line: 80, baseType: !7, size: 32, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3210, file: !3211, line: 81, baseType: !354, offset: 96)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !3185, file: !64, line: 139, baseType: !182, size: 32, offset: 1600)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !3185, file: !64, line: 140, baseType: !63, size: 32, offset: 1632)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !3185, file: !64, line: 142, baseType: !619, offset: 1664)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !3185, file: !64, line: 143, baseType: !281, size: 128, offset: 1664)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !3185, file: !64, line: 144, baseType: !2743, size: 704, offset: 1792)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !3185, file: !64, line: 146, baseType: !198, size: 64, offset: 2496)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !3185, file: !64, line: 148, baseType: !281, size: 128, offset: 2560)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !3171, file: !64, line: 184, baseType: !281, size: 128, offset: 3456)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !3171, file: !64, line: 190, baseType: !1078, size: 128, offset: 3584)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3171, file: !64, line: 192, baseType: !2031, size: 64, offset: 3712)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3171, file: !64, line: 193, baseType: !3227, size: 512, offset: 3776)
!3227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 512, elements: !1774)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3171, file: !64, line: 194, baseType: !2031, size: 64, offset: 4288)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !3171, file: !64, line: 196, baseType: !2233, size: 320, offset: 4352)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2721, file: !76, line: 425, baseType: !183, size: 64, offset: 768)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2721, file: !76, line: 430, baseType: !198, size: 64, offset: 832)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2721, file: !76, line: 436, baseType: !249, size: 32, offset: 896)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2721, file: !76, line: 442, baseType: !182, size: 32, offset: 928)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2721, file: !76, line: 447, baseType: !184, size: 32, offset: 960)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2721, file: !76, line: 449, baseType: !619, offset: 992)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2721, file: !76, line: 454, baseType: !1733, size: 512, offset: 1024)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2721, file: !76, line: 459, baseType: !1739, size: 64, offset: 1536)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2721, file: !76, line: 462, baseType: !3239, size: 128, offset: 1600)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1699, line: 159, size: 128, elements: !3240)
!3240 = !{!3241, !3270, !3271, !3272, !3273}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3239, file: !1699, line: 160, baseType: !3242, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3244)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !76, line: 1664, size: 320, elements: !3245)
!3245 = !{!3246, !3260, !3261, !3264, !3269}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3244, file: !76, line: 1665, baseType: !3247, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !76, line: 1660, baseType: !3249)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!2564, !3251}
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !76, line: 1651, size: 320, elements: !3253)
!3253 = !{!3254, !3255, !3256, !3257, !3258, !3259}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3252, file: !76, line: 1652, baseType: !183, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3252, file: !76, line: 1653, baseType: !183, size: 64, offset: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3252, file: !76, line: 1654, baseType: !1702, size: 64, offset: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3252, file: !76, line: 1655, baseType: !7, size: 32, offset: 192)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3252, file: !76, line: 1656, baseType: !194, size: 16, offset: 224)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3252, file: !76, line: 1657, baseType: !648, size: 64, offset: 256)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3244, file: !76, line: 1666, baseType: !3247, size: 64, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3244, file: !76, line: 1667, baseType: !3262, size: 64, offset: 128)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !76, line: 1661, baseType: !3000)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3244, file: !76, line: 1668, baseType: !3265, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !76, line: 1662, baseType: !3267)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{null, !2724, !7}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3244, file: !76, line: 1669, baseType: !648, size: 64, offset: 256)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3239, file: !1699, line: 161, baseType: !208, size: 8, offset: 64)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3239, file: !1699, line: 162, baseType: !208, size: 8, offset: 72)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3239, file: !1699, line: 163, baseType: !208, size: 8, offset: 80)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3239, file: !1699, line: 164, baseType: !208, size: 8, offset: 88)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2721, file: !76, line: 466, baseType: !2031, size: 64, offset: 1728)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2721, file: !76, line: 467, baseType: !51, size: 32, offset: 1792)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2721, file: !76, line: 468, baseType: !7, size: 32, offset: 1824)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2721, file: !76, line: 474, baseType: !198, size: 64, offset: 1856)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2721, file: !76, line: 476, baseType: !7, size: 32, offset: 1920)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2721, file: !76, line: 477, baseType: !7, size: 32, offset: 1952)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2721, file: !76, line: 484, baseType: !7, size: 32, offset: 1984)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2721, file: !76, line: 485, baseType: !182, size: 32, offset: 2016)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2721, file: !76, line: 487, baseType: !3283, size: 64, offset: 2048)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !76, line: 44, flags: DIFlagFwdDecl)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2721, file: !76, line: 488, baseType: !3286, size: 5120, offset: 2112)
!3286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3287, size: 5120, elements: !222)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1682, line: 540, size: 320, elements: !3288)
!3288 = !{!3289, !3290, !3291, !3292, !3293}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3287, file: !1682, line: 541, baseType: !288, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3287, file: !1682, line: 542, baseType: !288, size: 64, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3287, file: !1682, line: 543, baseType: !288, size: 64, offset: 128)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3287, file: !1682, line: 544, baseType: !187, size: 32, offset: 192)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3287, file: !1682, line: 545, baseType: !288, size: 64, offset: 256)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2721, file: !76, line: 490, baseType: !2233, size: 320, offset: 7232)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2721, file: !76, line: 491, baseType: !2266, size: 256, offset: 7552)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2721, file: !76, line: 493, baseType: !249, size: 32, offset: 7808)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2721, file: !76, line: 495, baseType: !281, size: 128, offset: 7872)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2721, file: !76, line: 502, baseType: !3299, size: 896, offset: 8000)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !76, line: 321, size: 896, elements: !3300)
!3300 = !{!3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3299, file: !76, line: 322, baseType: !198, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3299, file: !76, line: 323, baseType: !198, size: 64, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3299, file: !76, line: 324, baseType: !198, size: 64, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3299, file: !76, line: 326, baseType: !7, size: 32, offset: 192)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3299, file: !76, line: 327, baseType: !7, size: 32, offset: 224)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3299, file: !76, line: 328, baseType: !7, size: 32, offset: 256)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3299, file: !76, line: 329, baseType: !7, size: 32, offset: 288)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3299, file: !76, line: 330, baseType: !7, size: 32, offset: 320)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3299, file: !76, line: 331, baseType: !7, size: 32, offset: 352)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3299, file: !76, line: 332, baseType: !7, size: 32, offset: 384)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3299, file: !76, line: 333, baseType: !7, size: 32, offset: 416)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3299, file: !76, line: 334, baseType: !7, size: 32, offset: 448)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3299, file: !76, line: 335, baseType: !7, size: 32, offset: 480)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3299, file: !76, line: 336, baseType: !7, size: 32, offset: 512)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3299, file: !76, line: 337, baseType: !7, size: 32, offset: 544)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3299, file: !76, line: 338, baseType: !7, size: 32, offset: 576)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3299, file: !76, line: 339, baseType: !7, size: 32, offset: 608)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3299, file: !76, line: 340, baseType: !7, size: 32, offset: 640)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3299, file: !76, line: 341, baseType: !7, size: 32, offset: 672)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3299, file: !76, line: 342, baseType: !7, size: 32, offset: 704)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3299, file: !76, line: 344, baseType: !194, size: 16, offset: 736)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3299, file: !76, line: 345, baseType: !194, size: 16, offset: 752)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3299, file: !76, line: 346, baseType: !194, size: 16, offset: 768)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3299, file: !76, line: 348, baseType: !208, size: 8, offset: 784)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3299, file: !76, line: 349, baseType: !208, size: 8, offset: 792)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3299, file: !76, line: 350, baseType: !208, size: 8, offset: 800)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3299, file: !76, line: 351, baseType: !92, size: 32, offset: 832)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2721, file: !76, line: 504, baseType: !7, size: 32, offset: 8896)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2721, file: !76, line: 534, baseType: !7, size: 32, offset: 8928)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2721, file: !76, line: 535, baseType: !7, size: 32, offset: 8960)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2721, file: !76, line: 536, baseType: !182, size: 32, offset: 8992)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2721, file: !76, line: 537, baseType: !836, size: 192, offset: 9024)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2721, file: !76, line: 544, baseType: !2758, size: 64, offset: 9216)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2721, file: !76, line: 546, baseType: !281, size: 128, offset: 9280)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2721, file: !76, line: 547, baseType: !619, offset: 9408)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2721, file: !76, line: 548, baseType: !2743, size: 704, offset: 9408)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2721, file: !76, line: 550, baseType: !836, size: 192, offset: 10112)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2721, file: !76, line: 551, baseType: !836, size: 192, offset: 10304)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2721, file: !76, line: 557, baseType: !281, size: 128, offset: 10496)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2721, file: !76, line: 558, baseType: !619, offset: 10624)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2721, file: !76, line: 560, baseType: !182, size: 32, offset: 10624)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2721, file: !76, line: 563, baseType: !3343, size: 256, offset: 10688)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3344, line: 18, size: 256, elements: !3345)
!3344 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3345 = !{!3346, !3347, !3348, !3349}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3343, file: !3344, line: 19, baseType: !2031, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3343, file: !3344, line: 20, baseType: !182, size: 32, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3343, file: !3344, line: 21, baseType: !2720, size: 64, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3343, file: !3344, line: 22, baseType: !3350, size: 64, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3352)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3344, line: 10, size: 256, elements: !3353)
!3353 = !{!3354, !3395, !3399, !3403}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3352, file: !3344, line: 11, baseType: !3355, size: 64)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!182, !3358}
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3360, line: 22, size: 1280, elements: !3361)
!3360 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3361 = !{!3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3359, file: !3360, line: 23, baseType: !1295, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3359, file: !3360, line: 24, baseType: !189, size: 32, offset: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3359, file: !3360, line: 25, baseType: !189, size: 32, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3359, file: !3360, line: 28, baseType: !189, size: 32, offset: 96)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3359, file: !3360, line: 29, baseType: !289, size: 64, offset: 128)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3359, file: !3360, line: 30, baseType: !289, size: 64, offset: 192)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3359, file: !3360, line: 31, baseType: !189, size: 32, offset: 256)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3359, file: !3360, line: 32, baseType: !189, size: 32, offset: 288)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3359, file: !3360, line: 33, baseType: !189, size: 32, offset: 320)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3359, file: !3360, line: 34, baseType: !189, size: 32, offset: 352)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3359, file: !3360, line: 35, baseType: !289, size: 64, offset: 384)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3359, file: !3360, line: 38, baseType: !189, size: 32, offset: 448)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3359, file: !3360, line: 40, baseType: !189, size: 32, offset: 480)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3359, file: !3360, line: 41, baseType: !189, size: 32, offset: 512)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3359, file: !3360, line: 42, baseType: !189, size: 32, offset: 544)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3359, file: !3360, line: 43, baseType: !289, size: 64, offset: 576)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3359, file: !3360, line: 44, baseType: !289, size: 64, offset: 640)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3359, file: !3360, line: 46, baseType: !189, size: 32, offset: 704)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3359, file: !3360, line: 47, baseType: !189, size: 32, offset: 736)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3359, file: !3360, line: 48, baseType: !289, size: 64, offset: 768)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3359, file: !3360, line: 49, baseType: !189, size: 32, offset: 832)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3359, file: !3360, line: 51, baseType: !189, size: 32, offset: 864)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3359, file: !3360, line: 52, baseType: !189, size: 32, offset: 896)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3359, file: !3360, line: 53, baseType: !189, size: 32, offset: 928)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3359, file: !3360, line: 54, baseType: !189, size: 32, offset: 960)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3359, file: !3360, line: 55, baseType: !189, size: 32, offset: 992)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3359, file: !3360, line: 56, baseType: !189, size: 32, offset: 1024)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3359, file: !3360, line: 57, baseType: !189, size: 32, offset: 1056)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3359, file: !3360, line: 58, baseType: !1295, size: 32, offset: 1088)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3359, file: !3360, line: 59, baseType: !1295, size: 32, offset: 1120)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3359, file: !3360, line: 60, baseType: !289, size: 64, offset: 1152)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3359, file: !3360, line: 61, baseType: !189, size: 32, offset: 1216)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3359, file: !3360, line: 63, baseType: !189, size: 32, offset: 1248)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3352, file: !3344, line: 12, baseType: !3396, size: 64, offset: 64)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!182, !2724, !3358, !1222}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3352, file: !3344, line: 14, baseType: !3400, size: 64, offset: 128)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!182, !2724, !3358}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3352, file: !3344, line: 15, baseType: !2999, size: 64, offset: 192)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2721, file: !76, line: 570, baseType: !886, size: 128, align: 64, offset: 10944)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2721, file: !76, line: 571, baseType: !1078, size: 128, offset: 11072)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2721, file: !76, line: 576, baseType: !836, size: 192, offset: 11200)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2721, file: !76, line: 578, baseType: !3110, size: 64, offset: 11392)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2721, file: !76, line: 579, baseType: !281, size: 128, offset: 11456)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2721, file: !76, line: 580, baseType: !2606, size: 2368, offset: 11584)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2721, file: !76, line: 582, baseType: !569, size: 64, offset: 13952)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2721, file: !76, line: 589, baseType: !691, size: 8, offset: 14016)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2721, file: !76, line: 591, baseType: !827, size: 64, offset: 14080)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2721, file: !76, line: 594, baseType: !3414, size: 320, offset: 14144)
!3414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 320, elements: !3415)
!3415 = !{!3416}
!3416 = !DISubrange(count: 5)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2524, file: !1699, line: 191, baseType: !183, size: 64, offset: 7168)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2524, file: !1699, line: 193, baseType: !182, size: 32, offset: 7232)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2524, file: !1699, line: 194, baseType: !198, size: 64, offset: 7296)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2524, file: !1699, line: 196, baseType: !1302, size: 256, offset: 7360)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2524, file: !1699, line: 197, baseType: !1739, size: 64, offset: 7616)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2524, file: !1699, line: 199, baseType: !3423, size: 64, offset: 7680)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1699, line: 199, flags: DIFlagFwdDecl)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2524, file: !1699, line: 200, baseType: !249, size: 32, offset: 7744)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2524, file: !1699, line: 201, baseType: !3427, size: 64, offset: 7808)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1699, line: 156, flags: DIFlagFwdDecl)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2524, file: !1699, line: 203, baseType: !1733, size: 512, offset: 7872)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2524, file: !1699, line: 208, baseType: !182, size: 32, offset: 8384)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2524, file: !1699, line: 209, baseType: !3432, size: 64, offset: 8448)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1699, line: 157, flags: DIFlagFwdDecl)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2524, file: !1699, line: 210, baseType: !3435, offset: 8512)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !754, line: 192, elements: !297)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1681, file: !1682, line: 43, baseType: !3170, size: 64, offset: 1024)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1681, file: !1682, line: 46, baseType: !182, size: 32, offset: 1088)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1681, file: !1682, line: 48, baseType: !836, size: 192, offset: 1152)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !701, file: !111, line: 1452, baseType: !3170, size: 64, offset: 1536)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !701, file: !111, line: 1453, baseType: !3441, size: 64, offset: 1600)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !111, line: 1453, flags: DIFlagFwdDecl)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !701, file: !111, line: 1454, baseType: !747, size: 128, offset: 1664)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !701, file: !111, line: 1455, baseType: !7, size: 32, offset: 1792)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !701, file: !111, line: 1456, baseType: !3446, size: 2432, offset: 1856)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !105, line: 518, size: 2432, elements: !3447)
!3447 = !{!3448, !3449, !3450, !3452, !3484}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3446, file: !105, line: 519, baseType: !7, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3446, file: !105, line: 520, baseType: !1302, size: 256, offset: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3446, file: !105, line: 521, baseType: !3451, size: 192, offset: 320)
!3451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 192, elements: !759)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3446, file: !105, line: 522, baseType: !3453, size: 1728, offset: 512)
!3453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3454, size: 1728, elements: !759)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !105, line: 222, size: 576, elements: !3455)
!3455 = !{!3456, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3454, file: !105, line: 223, baseType: !3457, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !105, line: 443, size: 256, elements: !3459)
!3459 = !{!3460, !3461, !3474, !3475}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3458, file: !105, line: 444, baseType: !182, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3458, file: !105, line: 445, baseType: !3462, size: 64, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3464)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !105, line: 310, size: 512, elements: !3465)
!3465 = !{!3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3464, file: !105, line: 311, baseType: !795, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3464, file: !105, line: 312, baseType: !795, size: 64, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3464, file: !105, line: 313, baseType: !795, size: 64, offset: 128)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3464, file: !105, line: 314, baseType: !795, size: 64, offset: 192)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3464, file: !105, line: 315, baseType: !1499, size: 64, offset: 256)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3464, file: !105, line: 316, baseType: !1499, size: 64, offset: 320)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3464, file: !105, line: 317, baseType: !1499, size: 64, offset: 384)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3464, file: !105, line: 318, baseType: !1571, size: 64, offset: 448)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3458, file: !105, line: 446, baseType: !738, size: 64, offset: 128)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3458, file: !105, line: 447, baseType: !3457, size: 64, offset: 192)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3454, file: !105, line: 224, baseType: !182, size: 32, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3454, file: !105, line: 226, baseType: !281, size: 128, offset: 128)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3454, file: !105, line: 227, baseType: !198, size: 64, offset: 256)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3454, file: !105, line: 228, baseType: !7, size: 32, offset: 320)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3454, file: !105, line: 229, baseType: !7, size: 32, offset: 352)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3454, file: !105, line: 230, baseType: !1535, size: 64, offset: 384)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3454, file: !105, line: 231, baseType: !1535, size: 64, offset: 448)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3454, file: !105, line: 232, baseType: !183, size: 64, offset: 512)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3446, file: !105, line: 523, baseType: !3485, size: 192, offset: 2240)
!3485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3462, size: 192, elements: !759)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !701, file: !111, line: 1458, baseType: !3487, size: 2112, offset: 4288)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !111, line: 1410, size: 2112, elements: !3488)
!3488 = !{!3489, !3490, !3491}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3487, file: !111, line: 1411, baseType: !182, size: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3487, file: !111, line: 1412, baseType: !1078, size: 128, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3487, file: !111, line: 1413, baseType: !3492, size: 1920, offset: 192)
!3492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3493, size: 1920, elements: !759)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3494, line: 12, size: 640, elements: !3495)
!3494 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3495 = !{!3496, !3504, !3505, !3510, !3511}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3493, file: !3494, line: 13, baseType: !3497, size: 320)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3498, line: 17, size: 320, elements: !3499)
!3498 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3499 = !{!3500, !3501, !3502, !3503}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3497, file: !3498, line: 18, baseType: !182, size: 32)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3497, file: !3498, line: 19, baseType: !182, size: 32, offset: 32)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3497, file: !3498, line: 20, baseType: !1078, size: 128, offset: 64)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3497, file: !3498, line: 22, baseType: !886, size: 128, align: 64, offset: 192)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3493, file: !3494, line: 14, baseType: !3118, size: 64, offset: 320)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3493, file: !3494, line: 15, baseType: !3506, size: 64, offset: 384)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3507, line: 16, size: 64, elements: !3508)
!3507 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3508 = !{!3509}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3506, file: !3507, line: 17, baseType: !229, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3493, file: !3494, line: 16, baseType: !1078, size: 128, offset: 448)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3493, file: !3494, line: 17, baseType: !249, size: 32, offset: 576)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !701, file: !111, line: 1465, baseType: !183, size: 64, offset: 6400)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !701, file: !111, line: 1468, baseType: !187, size: 32, offset: 6464)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !701, file: !111, line: 1470, baseType: !1317, size: 64, offset: 6528)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !701, file: !111, line: 1471, baseType: !1317, size: 64, offset: 6592)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !701, file: !111, line: 1473, baseType: !189, size: 32, offset: 6656)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !701, file: !111, line: 1474, baseType: !3518, size: 64, offset: 6720)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !111, line: 603, flags: DIFlagFwdDecl)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !701, file: !111, line: 1477, baseType: !2118, size: 256, offset: 6784)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !701, file: !111, line: 1478, baseType: !3522, size: 128, offset: 7040)
!3522 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3523, line: 18, baseType: !3524)
!3523 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3523, line: 16, size: 128, elements: !3525)
!3525 = !{!3526}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3524, file: !3523, line: 17, baseType: !3527, size: 128)
!3527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 128, elements: !222)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !701, file: !111, line: 1480, baseType: !7, size: 32, offset: 7168)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !701, file: !111, line: 1481, baseType: !1222, size: 32, offset: 7200)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !701, file: !111, line: 1487, baseType: !836, size: 192, offset: 7232)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !701, file: !111, line: 1493, baseType: !648, size: 64, offset: 7424)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !701, file: !111, line: 1495, baseType: !628, size: 64, offset: 7488)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !701, file: !111, line: 1500, baseType: !182, size: 32, offset: 7552)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !701, file: !111, line: 1502, baseType: !3535, size: 448, offset: 7616)
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1483, line: 60, size: 448, elements: !3536)
!3536 = !{!3537, !3542, !3543, !3544, !3545, !3546, !3547}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3535, file: !1483, line: 61, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!198, !3541, !1481}
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3535, file: !1483, line: 63, baseType: !3538, size: 64, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3535, file: !1483, line: 66, baseType: !241, size: 64, offset: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3535, file: !1483, line: 67, baseType: !182, size: 32, offset: 192)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3535, file: !1483, line: 68, baseType: !7, size: 32, offset: 224)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3535, file: !1483, line: 71, baseType: !281, size: 128, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3535, file: !1483, line: 77, baseType: !3548, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !701, file: !111, line: 1505, baseType: !840, size: 64, offset: 8064)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !701, file: !111, line: 1508, baseType: !840, size: 64, offset: 8128)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !701, file: !111, line: 1511, baseType: !182, size: 32, offset: 8192)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !701, file: !111, line: 1514, baseType: !1466, size: 32, offset: 8224)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !701, file: !111, line: 1517, baseType: !2518, size: 64, offset: 8256)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !701, file: !111, line: 1518, baseType: !743, size: 64, offset: 8320)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !701, file: !111, line: 1525, baseType: !1434, size: 64, offset: 8384)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !701, file: !111, line: 1532, baseType: !3557, size: 64, offset: 8448)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3558, line: 52, size: 64, elements: !3559)
!3558 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3559 = !{!3560}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3557, file: !3558, line: 53, baseType: !3561, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3558, line: 40, size: 256, elements: !3563)
!3563 = !{!3564, !3565, !3570}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3562, file: !3558, line: 42, baseType: !619)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3562, file: !3558, line: 44, baseType: !3566, size: 192)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3558, line: 28, size: 192, elements: !3567)
!3567 = !{!3568, !3569}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3566, file: !3558, line: 29, baseType: !281, size: 128)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3566, file: !3558, line: 31, baseType: !241, size: 64, offset: 128)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3562, file: !3558, line: 49, baseType: !241, size: 64, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !701, file: !111, line: 1533, baseType: !3557, size: 64, offset: 8512)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !701, file: !111, line: 1534, baseType: !886, size: 128, align: 64, offset: 8576)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !701, file: !111, line: 1535, baseType: !2266, size: 256, offset: 8704)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !701, file: !111, line: 1537, baseType: !836, size: 192, offset: 8960)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !701, file: !111, line: 1542, baseType: !182, size: 32, offset: 9152)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !701, file: !111, line: 1545, baseType: !619, offset: 9184)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !701, file: !111, line: 1546, baseType: !281, size: 128, offset: 9216)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !701, file: !111, line: 1548, baseType: !619, offset: 9344)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !701, file: !111, line: 1549, baseType: !281, size: 128, offset: 9344)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !570, file: !571, line: 104, baseType: !198, size: 64, offset: 896)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !570, file: !571, line: 105, baseType: !183, size: 64, offset: 960)
!3582 = !DIDerivedType(tag: DW_TAG_member, scope: !570, file: !571, line: 107, baseType: !3583, size: 128, offset: 1024)
!3583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !570, file: !571, line: 107, size: 128, elements: !3584)
!3584 = !{!3585, !3586}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3583, file: !571, line: 108, baseType: !281, size: 128)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3583, file: !571, line: 109, baseType: !3587, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !570, file: !571, line: 111, baseType: !281, size: 128, offset: 1152)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !570, file: !571, line: 112, baseType: !281, size: 128, offset: 1280)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !570, file: !571, line: 120, baseType: !3591, size: 128, offset: 1408)
!3591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !570, file: !571, line: 116, size: 128, elements: !3592)
!3592 = !{!3593, !3594, !3595}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3591, file: !571, line: 117, baseType: !747, size: 128)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3591, file: !571, line: 118, baseType: !580, size: 128)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3591, file: !571, line: 119, baseType: !886, size: 128, align: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !563, file: !111, line: 1866, baseType: !3597, size: 64, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!648, !569, !538, !3600}
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !3602, line: 10, size: 128, elements: !3603)
!3602 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!3603 = !{!3604, !3605}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3601, file: !3602, line: 11, baseType: !1874, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3601, file: !3602, line: 12, baseType: !183, size: 64, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !563, file: !111, line: 1867, baseType: !3607, size: 64, offset: 128)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!182, !538, !182}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !563, file: !111, line: 1868, baseType: !3611, size: 64, offset: 192)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!3614, !538, !182}
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !111, line: 581, flags: DIFlagFwdDecl)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !563, file: !111, line: 1870, baseType: !3617, size: 64, offset: 256)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!182, !569, !196, !182}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !563, file: !111, line: 1872, baseType: !3621, size: 64, offset: 320)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 64)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!182, !538, !569, !542, !691}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !563, file: !111, line: 1873, baseType: !3625, size: 64, offset: 384)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!182, !569, !538, !569}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !563, file: !111, line: 1874, baseType: !3629, size: 64, offset: 448)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!182, !538, !569}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !563, file: !111, line: 1875, baseType: !3633, size: 64, offset: 512)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!182, !538, !569, !648}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !563, file: !111, line: 1876, baseType: !3637, size: 64, offset: 576)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!182, !538, !569, !542}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !563, file: !111, line: 1877, baseType: !3629, size: 64, offset: 640)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !563, file: !111, line: 1878, baseType: !3642, size: 64, offset: 704)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!182, !538, !569, !542, !705}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !563, file: !111, line: 1879, baseType: !3646, size: 64, offset: 768)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!182, !538, !569, !538, !569, !7}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !563, file: !111, line: 1881, baseType: !3650, size: 64, offset: 832)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!182, !569, !3653}
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !111, line: 219, size: 640, elements: !3655)
!3655 = !{!3656, !3657, !3658, !3659, !3660, !3661, !3666, !3667, !3668}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !3654, file: !111, line: 220, baseType: !7, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !3654, file: !111, line: 221, baseType: !542, size: 16, offset: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !3654, file: !111, line: 222, baseType: !545, size: 32, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !3654, file: !111, line: 223, baseType: !553, size: 32, offset: 96)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !3654, file: !111, line: 224, baseType: !710, size: 64, offset: 128)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !3654, file: !111, line: 225, baseType: !3662, size: 128, offset: 192)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1318, line: 13, size: 128, elements: !3663)
!3663 = !{!3664, !3665}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3662, file: !1318, line: 14, baseType: !1317, size: 64)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3662, file: !1318, line: 15, baseType: !241, size: 64, offset: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !3654, file: !111, line: 226, baseType: !3662, size: 128, offset: 320)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !3654, file: !111, line: 227, baseType: !3662, size: 128, offset: 448)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !3654, file: !111, line: 234, baseType: !906, size: 64, offset: 576)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !563, file: !111, line: 1882, baseType: !3670, size: 64, offset: 896)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!182, !689, !3673, !187, !7}
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !3675, line: 22, size: 1152, elements: !3676)
!3675 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!3676 = !{!3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !3674, file: !3675, line: 23, baseType: !187, size: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3674, file: !3675, line: 24, baseType: !542, size: 16, offset: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !3674, file: !3675, line: 25, baseType: !7, size: 32, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !3674, file: !3675, line: 26, baseType: !186, size: 32, offset: 96)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3674, file: !3675, line: 27, baseType: !288, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !3674, file: !3675, line: 28, baseType: !288, size: 64, offset: 192)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3674, file: !3675, line: 37, baseType: !288, size: 64, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3674, file: !3675, line: 38, baseType: !705, size: 32, offset: 320)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !3674, file: !3675, line: 39, baseType: !705, size: 32, offset: 352)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3674, file: !3675, line: 40, baseType: !545, size: 32, offset: 384)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3674, file: !3675, line: 41, baseType: !553, size: 32, offset: 416)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3674, file: !3675, line: 42, baseType: !710, size: 64, offset: 448)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !3674, file: !3675, line: 43, baseType: !3662, size: 128, offset: 512)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !3674, file: !3675, line: 44, baseType: !3662, size: 128, offset: 640)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3674, file: !3675, line: 45, baseType: !3662, size: 128, offset: 768)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !3674, file: !3675, line: 46, baseType: !3662, size: 128, offset: 896)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3674, file: !3675, line: 47, baseType: !288, size: 64, offset: 1024)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !3674, file: !3675, line: 48, baseType: !288, size: 64, offset: 1088)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !563, file: !111, line: 1883, baseType: !3696, size: 64, offset: 960)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!911, !569, !196, !827}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !563, file: !111, line: 1884, baseType: !3700, size: 64, offset: 1024)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!182, !538, !3703, !288, !288}
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !111, line: 50, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !563, file: !111, line: 1886, baseType: !3706, size: 64, offset: 1088)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!182, !538, !3709, !182}
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !563, file: !111, line: 1887, baseType: !3711, size: 64, offset: 1152)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!182, !538, !569, !906, !7, !542}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !563, file: !111, line: 1890, baseType: !3637, size: 64, offset: 1216)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !563, file: !111, line: 1891, baseType: !3716, size: 64, offset: 1280)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!182, !538, !3614, !182}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !539, file: !111, line: 623, baseType: !700, size: 64, offset: 192)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !539, file: !111, line: 624, baseType: !534, size: 64, offset: 256)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !539, file: !111, line: 631, baseType: !198, size: 64, offset: 320)
!3722 = !DIDerivedType(tag: DW_TAG_member, scope: !539, file: !111, line: 639, baseType: !3723, size: 32, offset: 384)
!3723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !539, file: !111, line: 639, size: 32, elements: !3724)
!3724 = !{!3725, !3726}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3723, file: !111, line: 640, baseType: !3048, size: 32)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3723, file: !111, line: 641, baseType: !7, size: 32)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !539, file: !111, line: 643, baseType: !705, size: 32, offset: 416)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !539, file: !111, line: 644, baseType: !710, size: 64, offset: 448)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !539, file: !111, line: 645, baseType: !3662, size: 128, offset: 512)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !539, file: !111, line: 646, baseType: !3662, size: 128, offset: 640)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !539, file: !111, line: 647, baseType: !3662, size: 128, offset: 768)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !539, file: !111, line: 648, baseType: !619, offset: 896)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !539, file: !111, line: 649, baseType: !194, size: 16, offset: 896)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !539, file: !111, line: 650, baseType: !206, size: 8, offset: 912)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !539, file: !111, line: 651, baseType: !206, size: 8, offset: 920)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !539, file: !111, line: 652, baseType: !1655, size: 64, offset: 960)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !539, file: !111, line: 659, baseType: !198, size: 64, offset: 1024)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !539, file: !111, line: 660, baseType: !1302, size: 256, offset: 1088)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !539, file: !111, line: 662, baseType: !198, size: 64, offset: 1344)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !539, file: !111, line: 663, baseType: !198, size: 64, offset: 1408)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !539, file: !111, line: 665, baseType: !747, size: 128, offset: 1472)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !539, file: !111, line: 666, baseType: !281, size: 128, offset: 1600)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !539, file: !111, line: 675, baseType: !281, size: 128, offset: 1728)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !539, file: !111, line: 676, baseType: !281, size: 128, offset: 1856)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !539, file: !111, line: 677, baseType: !281, size: 128, offset: 1984)
!3746 = !DIDerivedType(tag: DW_TAG_member, scope: !539, file: !111, line: 678, baseType: !3747, size: 128, offset: 2112)
!3747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !539, file: !111, line: 678, size: 128, elements: !3748)
!3748 = !{!3749, !3750}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3747, file: !111, line: 679, baseType: !743, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3747, file: !111, line: 680, baseType: !886, size: 128, align: 64)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !539, file: !111, line: 682, baseType: !842, size: 64, offset: 2240)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !539, file: !111, line: 683, baseType: !842, size: 64, offset: 2304)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !539, file: !111, line: 684, baseType: !249, size: 32, offset: 2368)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !539, file: !111, line: 685, baseType: !249, size: 32, offset: 2400)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !539, file: !111, line: 686, baseType: !249, size: 32, offset: 2432)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !539, file: !111, line: 688, baseType: !249, size: 32, offset: 2464)
!3757 = !DIDerivedType(tag: DW_TAG_member, scope: !539, file: !111, line: 690, baseType: !3758, size: 64, offset: 2496)
!3758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !539, file: !111, line: 690, size: 64, elements: !3759)
!3759 = !{!3760, !3761}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3758, file: !111, line: 691, baseType: !897, size: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3758, file: !111, line: 692, baseType: !774, size: 64)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !539, file: !111, line: 694, baseType: !3763, size: 64, offset: 2560)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !111, line: 1100, size: 384, elements: !3765)
!3765 = !{!3766, !3767, !3768, !3769}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3764, file: !111, line: 1101, baseType: !619)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3764, file: !111, line: 1102, baseType: !281, size: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3764, file: !111, line: 1103, baseType: !281, size: 128, offset: 128)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3764, file: !111, line: 1104, baseType: !281, size: 128, offset: 256)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !539, file: !111, line: 695, baseType: !535, size: 1216, align: 64, offset: 2624)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !539, file: !111, line: 696, baseType: !281, size: 128, offset: 3840)
!3772 = !DIDerivedType(tag: DW_TAG_member, scope: !539, file: !111, line: 697, baseType: !3773, size: 64, offset: 3968)
!3773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !539, file: !111, line: 697, size: 64, elements: !3774)
!3774 = !{!3775, !3776, !3777, !3780, !3781}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3773, file: !111, line: 698, baseType: !995, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3773, file: !111, line: 699, baseType: !1680, size: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3773, file: !111, line: 700, baseType: !3778, size: 64)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !111, line: 700, flags: DIFlagFwdDecl)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3773, file: !111, line: 701, baseType: !196, size: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3773, file: !111, line: 702, baseType: !7, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !539, file: !111, line: 705, baseType: !189, size: 32, offset: 4032)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !539, file: !111, line: 708, baseType: !189, size: 32, offset: 4064)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !539, file: !111, line: 709, baseType: !3518, size: 64, offset: 4096)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !539, file: !111, line: 720, baseType: !183, size: 64, offset: 4160)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !535, file: !111, line: 453, baseType: !1917, size: 128, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !535, file: !111, line: 454, baseType: !184, size: 32, offset: 192)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !535, file: !111, line: 455, baseType: !249, size: 32, offset: 224)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !535, file: !111, line: 460, baseType: !397, size: 128, offset: 256)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !535, file: !111, line: 461, baseType: !1302, size: 256, offset: 384)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !535, file: !111, line: 462, baseType: !198, size: 64, offset: 640)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !535, file: !111, line: 463, baseType: !198, size: 64, offset: 704)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !535, file: !111, line: 464, baseType: !198, size: 64, offset: 768)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !535, file: !111, line: 465, baseType: !3795, size: 64, offset: 832)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3797)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !111, line: 367, size: 1408, elements: !3798)
!3798 = !{!3799, !3803, !3807, !3811, !3815, !3819, !3831, !3836, !3840, !3844, !3848, !3852, !3856, !3857, !3861, !3867, !3868, !3869, !3873, !3878, !3882, !3889}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !3797, file: !111, line: 368, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!182, !522, !786}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !3797, file: !111, line: 369, baseType: !3804, size: 64, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!182, !906, !522}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !3797, file: !111, line: 372, baseType: !3808, size: 64, offset: 128)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!182, !534, !786}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !3797, file: !111, line: 375, baseType: !3812, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!182, !522}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !3797, file: !111, line: 381, baseType: !3816, size: 64, offset: 256)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!182, !906, !534, !284, !7}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !3797, file: !111, line: 383, baseType: !3820, size: 64, offset: 320)
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{null, !3823}
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !942, line: 795, size: 256, elements: !3825)
!3825 = !{!3826, !3827, !3828, !3829, !3830}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3824, file: !942, line: 796, baseType: !906, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !3824, file: !942, line: 797, baseType: !534, size: 64, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !3824, file: !942, line: 799, baseType: !198, size: 64, offset: 128)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !3824, file: !942, line: 800, baseType: !7, size: 32, offset: 192)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !3824, file: !942, line: 801, baseType: !7, size: 32, offset: 224)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !3797, file: !111, line: 385, baseType: !3832, size: 64, offset: 384)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!182, !906, !534, !710, !7, !7, !3835, !1148}
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !3797, file: !111, line: 388, baseType: !3837, size: 64, offset: 448)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!182, !906, !534, !710, !7, !7, !522, !183}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !3797, file: !111, line: 393, baseType: !3841, size: 64, offset: 512)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!1702, !534, !1702}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !3797, file: !111, line: 394, baseType: !3845, size: 64, offset: 576)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{null, !522, !7, !7}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !3797, file: !111, line: 395, baseType: !3849, size: 64, offset: 640)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!182, !522, !184}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !3797, file: !111, line: 396, baseType: !3853, size: 64, offset: 704)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{null, !522}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !3797, file: !111, line: 397, baseType: !919, size: 64, offset: 768)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !3797, file: !111, line: 402, baseType: !3858, size: 64, offset: 832)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!182, !534, !522, !522, !5}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !3797, file: !111, line: 404, baseType: !3862, size: 64, offset: 896)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!691, !522, !3865}
!3865 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3866, line: 305, baseType: !7)
!3866 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !3797, file: !111, line: 405, baseType: !3853, size: 64, offset: 960)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !3797, file: !111, line: 406, baseType: !3812, size: 64, offset: 1024)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !3797, file: !111, line: 407, baseType: !3870, size: 64, offset: 1088)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!182, !522, !198, !198}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !3797, file: !111, line: 409, baseType: !3874, size: 64, offset: 1152)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{null, !522, !3877, !3877}
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !3797, file: !111, line: 410, baseType: !3879, size: 64, offset: 1216)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!182, !534, !522}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !3797, file: !111, line: 413, baseType: !3883, size: 64, offset: 1280)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!182, !3886, !906, !3888}
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !111, line: 61, flags: DIFlagFwdDecl)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !3797, file: !111, line: 415, baseType: !3890, size: 64, offset: 1344)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !906}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !535, file: !111, line: 466, baseType: !198, size: 64, offset: 896)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !535, file: !111, line: 467, baseType: !1466, size: 32, offset: 960)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !535, file: !111, line: 468, baseType: !619, offset: 992)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !535, file: !111, line: 469, baseType: !281, size: 128, offset: 1024)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !535, file: !111, line: 470, baseType: !183, size: 64, offset: 1152)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !530, file: !436, line: 87, baseType: !198, size: 64, offset: 192)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !530, file: !436, line: 94, baseType: !198, size: 64, offset: 256)
!3900 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 96, baseType: !3901, size: 64)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 96, size: 64, elements: !3902)
!3902 = !{!3903}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3901, file: !436, line: 101, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !185, line: 143, baseType: !288)
!3905 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 103, baseType: !3906, size: 320)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 103, size: 320, elements: !3907)
!3907 = !{!3908, !3918, !3919, !3920}
!3908 = !DIDerivedType(tag: DW_TAG_member, scope: !3906, file: !436, line: 104, baseType: !3909, size: 128)
!3909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3906, file: !436, line: 104, size: 128, elements: !3910)
!3910 = !{!3911, !3912}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3909, file: !436, line: 105, baseType: !281, size: 128)
!3912 = !DIDerivedType(tag: DW_TAG_member, scope: !3909, file: !436, line: 106, baseType: !3913, size: 128)
!3913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3909, file: !436, line: 106, size: 128, elements: !3914)
!3914 = !{!3915, !3916, !3917}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3913, file: !436, line: 107, baseType: !522, size: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3913, file: !436, line: 109, baseType: !182, size: 32, offset: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3913, file: !436, line: 110, baseType: !182, size: 32, offset: 96)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3906, file: !436, line: 117, baseType: !2609, size: 64, offset: 128)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3906, file: !436, line: 119, baseType: !183, size: 64, offset: 192)
!3920 = !DIDerivedType(tag: DW_TAG_member, scope: !3906, file: !436, line: 120, baseType: !3921, size: 64, offset: 256)
!3921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3906, file: !436, line: 120, size: 64, elements: !3922)
!3922 = !{!3923, !3924, !3925}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3921, file: !436, line: 121, baseType: !183, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3921, file: !436, line: 122, baseType: !198, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, scope: !3921, file: !436, line: 123, baseType: !3926, size: 32)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3921, file: !436, line: 123, size: 32, elements: !3927)
!3927 = !{!3928, !3929, !3930}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3926, file: !436, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3926, file: !436, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3926, file: !436, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3931 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 130, baseType: !3932, size: 192)
!3932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 130, size: 192, elements: !3933)
!3933 = !{!3934, !3935, !3936, !3937, !3938}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3932, file: !436, line: 131, baseType: !198, size: 64)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3932, file: !436, line: 134, baseType: !208, size: 8, offset: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3932, file: !436, line: 135, baseType: !208, size: 8, offset: 72)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3932, file: !436, line: 136, baseType: !249, size: 32, offset: 96)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3932, file: !436, line: 137, baseType: !7, size: 32, offset: 128)
!3939 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 139, baseType: !3940, size: 256)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 139, size: 256, elements: !3941)
!3941 = !{!3942, !3943, !3944}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3940, file: !436, line: 140, baseType: !198, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3940, file: !436, line: 141, baseType: !249, size: 32, offset: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3940, file: !436, line: 143, baseType: !281, size: 128, offset: 128)
!3945 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 145, baseType: !3946, size: 256)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 145, size: 256, elements: !3947)
!3947 = !{!3948, !3949, !3951, !3952, !3957}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3946, file: !436, line: 146, baseType: !198, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3946, file: !436, line: 147, baseType: !3950, size: 64, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !454, line: 509, baseType: !522)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3946, file: !436, line: 148, baseType: !198, size: 64, offset: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, scope: !3946, file: !436, line: 149, baseType: !3953, size: 64, offset: 192)
!3953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3946, file: !436, line: 149, size: 64, elements: !3954)
!3954 = !{!3955, !3956}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3953, file: !436, line: 150, baseType: !434, size: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3953, file: !436, line: 151, baseType: !249, size: 32)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3946, file: !436, line: 156, baseType: !619, offset: 256)
!3958 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !436, line: 159, baseType: !3959, size: 128)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !436, line: 159, size: 128, elements: !3960)
!3960 = !{!3961, !4005}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3959, file: !436, line: 161, baseType: !3962, size: 64)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !98, line: 110, size: 1152, elements: !3964)
!3964 = !{!3965, !3975, !3976, !3977, !3978, !3979, !3980, !3992, !3993, !3994}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3963, file: !98, line: 111, baseType: !3966, size: 384)
!3966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !98, line: 19, size: 384, elements: !3967)
!3967 = !{!3968, !3970, !3971, !3972, !3973, !3974}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3966, file: !98, line: 20, baseType: !3969, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3966, file: !98, line: 21, baseType: !3969, size: 64, offset: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3966, file: !98, line: 22, baseType: !3969, size: 64, offset: 128)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3966, file: !98, line: 23, baseType: !198, size: 64, offset: 192)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3966, file: !98, line: 24, baseType: !198, size: 64, offset: 256)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3966, file: !98, line: 25, baseType: !198, size: 64, offset: 320)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3963, file: !98, line: 112, baseType: !1723, size: 64, offset: 384)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3963, file: !98, line: 113, baseType: !1709, size: 128, offset: 448)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3963, file: !98, line: 114, baseType: !2210, size: 192, offset: 576)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3963, file: !98, line: 115, baseType: !97, size: 32, offset: 768)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3963, file: !98, line: 116, baseType: !7, size: 32, offset: 800)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3963, file: !98, line: 117, baseType: !3981, size: 64, offset: 832)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3983)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !98, line: 67, size: 256, elements: !3984)
!3984 = !{!3985, !3986, !3990, !3991}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3983, file: !98, line: 73, baseType: !3853, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3983, file: !98, line: 78, baseType: !3987, size: 64, offset: 64)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{null, !3962}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3983, file: !98, line: 83, baseType: !3987, size: 64, offset: 128)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3983, file: !98, line: 89, baseType: !489, size: 64, offset: 192)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3963, file: !98, line: 118, baseType: !183, size: 64, offset: 896)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3963, file: !98, line: 119, baseType: !182, size: 32, offset: 960)
!3994 = !DIDerivedType(tag: DW_TAG_member, scope: !3963, file: !98, line: 120, baseType: !3995, size: 128, offset: 1024)
!3995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3963, file: !98, line: 120, size: 128, elements: !3996)
!3996 = !{!3997, !4003}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3995, file: !98, line: 121, baseType: !3998, size: 128)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3999, line: 6, size: 128, elements: !4000)
!3999 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4000 = !{!4001, !4002}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3998, file: !3999, line: 7, baseType: !288, size: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3998, file: !3999, line: 8, baseType: !288, size: 64, offset: 64)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3995, file: !98, line: 122, baseType: !4004)
!4004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3998, elements: !1444)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3959, file: !436, line: 162, baseType: !183, size: 64, offset: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !527, file: !436, line: 176, baseType: !886, size: 128, align: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, scope: !523, file: !436, line: 179, baseType: !4008, size: 32, offset: 384)
!4008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !523, file: !436, line: 179, size: 32, elements: !4009)
!4009 = !{!4010, !4011, !4012, !4013}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4008, file: !436, line: 184, baseType: !249, size: 32)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4008, file: !436, line: 192, baseType: !7, size: 32)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4008, file: !436, line: 194, baseType: !7, size: 32)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4008, file: !436, line: 195, baseType: !182, size: 32)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !523, file: !436, line: 199, baseType: !249, size: 32, offset: 416)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !494, file: !14, line: 522, baseType: !522, size: 64, offset: 512)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !494, file: !14, line: 528, baseType: !4017, size: 64, offset: 576)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !494, file: !14, line: 532, baseType: !4019, size: 64, offset: 640)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !494, file: !14, line: 536, baseType: !3950, size: 64, offset: 704)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !473, file: !14, line: 563, baseType: !4022, size: 64, offset: 320)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!492, !493, !13}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !473, file: !14, line: 565, baseType: !4026, size: 64, offset: 384)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{null, !493, !198, !198}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !473, file: !14, line: 567, baseType: !4030, size: 64, offset: 448)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!198, !442}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !473, file: !14, line: 571, baseType: !489, size: 64, offset: 512)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !473, file: !14, line: 574, baseType: !489, size: 64, offset: 576)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !473, file: !14, line: 579, baseType: !4036, size: 64, offset: 640)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!182, !442, !198, !183, !182, !182}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !473, file: !14, line: 585, baseType: !4040, size: 64, offset: 704)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!648, !442}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !473, file: !14, line: 615, baseType: !4044, size: 64, offset: 768)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!522, !442, !198}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !443, file: !436, line: 359, baseType: !198, size: 64, offset: 1216)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !443, file: !436, line: 361, baseType: !906, size: 64, offset: 1280)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !443, file: !436, line: 362, baseType: !183, size: 64, offset: 1344)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !443, file: !436, line: 365, baseType: !840, size: 64, offset: 1408)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !443, file: !436, line: 373, baseType: !4052, offset: 1472)
!4052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !436, line: 296, elements: !297)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !439, file: !436, line: 391, baseType: !400, size: 64, offset: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !439, file: !436, line: 392, baseType: !288, size: 64, offset: 128)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !439, file: !436, line: 394, baseType: !1179, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !439, file: !436, line: 398, baseType: !198, size: 64, offset: 256)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !439, file: !436, line: 399, baseType: !198, size: 64, offset: 320)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !439, file: !436, line: 405, baseType: !198, size: 64, offset: 384)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !439, file: !436, line: 406, baseType: !198, size: 64, offset: 448)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !439, file: !436, line: 407, baseType: !4061, size: 64, offset: 512)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !454, line: 286, baseType: !4063)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 286, size: 64, elements: !4064)
!4064 = !{!4065}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !4063, file: !454, line: 286, baseType: !4066, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !459, line: 18, baseType: !198)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !439, file: !436, line: 416, baseType: !249, size: 32, offset: 576)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !439, file: !436, line: 428, baseType: !249, size: 32, offset: 608)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !439, file: !436, line: 437, baseType: !249, size: 32, offset: 640)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !439, file: !436, line: 447, baseType: !249, size: 32, offset: 672)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !439, file: !436, line: 450, baseType: !840, size: 64, offset: 704)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !439, file: !436, line: 452, baseType: !182, size: 32, offset: 768)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !439, file: !436, line: 454, baseType: !619, offset: 800)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !439, file: !436, line: 457, baseType: !1302, size: 256, offset: 832)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !439, file: !436, line: 459, baseType: !281, size: 128, offset: 1088)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !439, file: !436, line: 466, baseType: !198, size: 64, offset: 1216)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !439, file: !436, line: 467, baseType: !198, size: 64, offset: 1280)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !439, file: !436, line: 469, baseType: !198, size: 64, offset: 1344)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !439, file: !436, line: 470, baseType: !198, size: 64, offset: 1408)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !439, file: !436, line: 471, baseType: !842, size: 64, offset: 1472)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !439, file: !436, line: 472, baseType: !198, size: 64, offset: 1536)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !439, file: !436, line: 473, baseType: !198, size: 64, offset: 1600)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !439, file: !436, line: 474, baseType: !198, size: 64, offset: 1664)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !439, file: !436, line: 475, baseType: !198, size: 64, offset: 1728)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !439, file: !436, line: 477, baseType: !619, offset: 1792)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !439, file: !436, line: 478, baseType: !198, size: 64, offset: 1792)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !439, file: !436, line: 478, baseType: !198, size: 64, offset: 1856)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !439, file: !436, line: 478, baseType: !198, size: 64, offset: 1920)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !439, file: !436, line: 478, baseType: !198, size: 64, offset: 1984)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !439, file: !436, line: 479, baseType: !198, size: 64, offset: 2048)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !439, file: !436, line: 479, baseType: !198, size: 64, offset: 2112)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !439, file: !436, line: 479, baseType: !198, size: 64, offset: 2176)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !439, file: !436, line: 480, baseType: !198, size: 64, offset: 2240)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !439, file: !436, line: 480, baseType: !198, size: 64, offset: 2304)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !439, file: !436, line: 480, baseType: !198, size: 64, offset: 2368)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !439, file: !436, line: 480, baseType: !198, size: 64, offset: 2432)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !439, file: !436, line: 482, baseType: !4098, size: 2816, offset: 2496)
!4098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 2816, elements: !4099)
!4099 = !{!4100}
!4100 = !DISubrange(count: 44)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !439, file: !436, line: 488, baseType: !4102, size: 256, offset: 5312)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !4103, line: 60, size: 256, elements: !4104)
!4103 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!4104 = !{!4105}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4102, file: !4103, line: 61, baseType: !4106, size: 256)
!4106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 256, elements: !1238)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !439, file: !436, line: 490, baseType: !4108, size: 64, offset: 5568)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !436, line: 490, flags: DIFlagFwdDecl)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !439, file: !436, line: 493, baseType: !4111, size: 896, offset: 5632)
!4111 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !4112, line: 53, baseType: !4113)
!4112 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4112, line: 13, size: 896, elements: !4114)
!4114 = !{!4115, !4116, !4117, !4118, !4121, !4122, !4123, !4124, !4144, !4145, !4146}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !4113, file: !4112, line: 18, baseType: !288, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !4113, file: !4112, line: 28, baseType: !842, size: 64, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !4113, file: !4112, line: 31, baseType: !1302, size: 256, offset: 128)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !4113, file: !4112, line: 32, baseType: !4119, size: 64, offset: 384)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !4112, line: 32, flags: DIFlagFwdDecl)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !4113, file: !4112, line: 37, baseType: !194, size: 16, offset: 448)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4113, file: !4112, line: 40, baseType: !836, size: 192, offset: 512)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !4113, file: !4112, line: 41, baseType: !183, size: 64, offset: 704)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !4113, file: !4112, line: 42, baseType: !4125, size: 64, offset: 768)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4127)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !4128, line: 13, size: 896, elements: !4129)
!4128 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!4129 = !{!4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4127, file: !4128, line: 14, baseType: !183, size: 64)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4127, file: !4128, line: 15, baseType: !198, size: 64, offset: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !4127, file: !4128, line: 17, baseType: !198, size: 64, offset: 128)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !4127, file: !4128, line: 17, baseType: !198, size: 64, offset: 192)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !4127, file: !4128, line: 19, baseType: !241, size: 64, offset: 256)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !4127, file: !4128, line: 21, baseType: !241, size: 64, offset: 320)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !4127, file: !4128, line: 22, baseType: !241, size: 64, offset: 384)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !4127, file: !4128, line: 23, baseType: !241, size: 64, offset: 448)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !4127, file: !4128, line: 24, baseType: !241, size: 64, offset: 512)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !4127, file: !4128, line: 25, baseType: !241, size: 64, offset: 576)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !4127, file: !4128, line: 26, baseType: !241, size: 64, offset: 640)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !4127, file: !4128, line: 27, baseType: !241, size: 64, offset: 704)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !4127, file: !4128, line: 28, baseType: !241, size: 64, offset: 768)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !4127, file: !4128, line: 29, baseType: !241, size: 64, offset: 832)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !4113, file: !4112, line: 44, baseType: !249, size: 32, offset: 832)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !4113, file: !4112, line: 50, baseType: !216, size: 16, offset: 864)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !4113, file: !4112, line: 51, baseType: !4147, size: 16, offset: 880)
!4147 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !188, line: 18, baseType: !4148)
!4148 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !190, line: 23, baseType: !1328)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !439, file: !436, line: 495, baseType: !198, size: 64, offset: 6528)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !439, file: !436, line: 497, baseType: !4151, size: 64, offset: 6592)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !436, line: 381, size: 384, elements: !4153)
!4153 = !{!4154, !4155, !4161}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4152, file: !436, line: 382, baseType: !249, size: 32)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !4152, file: !436, line: 383, baseType: !4156, size: 128, offset: 64)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !436, line: 376, size: 128, elements: !4157)
!4157 = !{!4158, !4159}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4156, file: !436, line: 377, baseType: !229, size: 64)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4156, file: !436, line: 378, baseType: !4160, size: 64, offset: 64)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4152, file: !436, line: 384, baseType: !2210, size: 192, offset: 192)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !439, file: !436, line: 500, baseType: !619, offset: 6656)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !439, file: !436, line: 501, baseType: !4164, size: 64, offset: 6656)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !436, line: 387, flags: DIFlagFwdDecl)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !439, file: !436, line: 516, baseType: !1434, size: 64, offset: 6720)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !439, file: !436, line: 519, baseType: !906, size: 64, offset: 6784)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !439, file: !436, line: 521, baseType: !4169, size: 64, offset: 6848)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !436, line: 521, flags: DIFlagFwdDecl)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !439, file: !436, line: 545, baseType: !249, size: 32, offset: 6912)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !439, file: !436, line: 548, baseType: !691, size: 8, offset: 6944)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !439, file: !436, line: 550, baseType: !4174, offset: 6952)
!4174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4175, line: 142, elements: !297)
!4175 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !439, file: !436, line: 554, baseType: !2266, size: 256, offset: 6976)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !439, file: !436, line: 557, baseType: !187, size: 32, offset: 7232)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !435, file: !436, line: 565, baseType: !4179, offset: 7296)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, elements: !2541)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !230, file: !231, line: 758, baseType: !434, size: 64, offset: 3968)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !230, file: !231, line: 761, baseType: !4182, size: 320, offset: 4032)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !4103, line: 34, size: 320, elements: !4183)
!4183 = !{!4184, !4185}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !4182, file: !4103, line: 35, baseType: !288, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !4182, file: !4103, line: 36, baseType: !4186, size: 256, offset: 64)
!4186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 256, elements: !1238)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !230, file: !231, line: 766, baseType: !182, size: 32, offset: 4352)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !230, file: !231, line: 767, baseType: !182, size: 32, offset: 4384)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !230, file: !231, line: 768, baseType: !182, size: 32, offset: 4416)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !230, file: !231, line: 770, baseType: !182, size: 32, offset: 4448)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !230, file: !231, line: 772, baseType: !198, size: 64, offset: 4480)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !230, file: !231, line: 775, baseType: !7, size: 32, offset: 4544)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !230, file: !231, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !230, file: !231, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !230, file: !231, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !230, file: !231, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !230, file: !231, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !230, file: !231, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !230, file: !231, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !230, file: !231, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !230, file: !231, line: 831, baseType: !198, size: 64, offset: 4672)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !230, file: !231, line: 833, baseType: !4203, size: 384, offset: 4736)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !4204)
!4204 = !{!4205, !4210}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4203, file: !25, line: 26, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DISubroutineType(types: !4208)
!4208 = !{!241, !4209}
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, scope: !4203, file: !25, line: 27, baseType: !4211, size: 320, offset: 64)
!4211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4203, file: !25, line: 27, size: 320, elements: !4212)
!4212 = !{!4213, !4223, !4248}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !4211, file: !25, line: 36, baseType: !4214, size: 320)
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4211, file: !25, line: 29, size: 320, elements: !4215)
!4215 = !{!4216, !4218, !4219, !4220, !4221, !4222}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !4214, file: !25, line: 30, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4214, file: !25, line: 31, baseType: !187, size: 32, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4214, file: !25, line: 32, baseType: !187, size: 32, offset: 96)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !4214, file: !25, line: 33, baseType: !187, size: 32, offset: 128)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4214, file: !25, line: 34, baseType: !288, size: 64, offset: 192)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !4214, file: !25, line: 35, baseType: !4217, size: 64, offset: 256)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !4211, file: !25, line: 46, baseType: !4224, size: 192)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4211, file: !25, line: 38, size: 192, elements: !4225)
!4225 = !{!4226, !4227, !4228, !4247}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !4224, file: !25, line: 39, baseType: !379, size: 32)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4224, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!4228 = !DIDerivedType(tag: DW_TAG_member, scope: !4224, file: !25, line: 41, baseType: !4229, size: 64, offset: 64)
!4229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4224, file: !25, line: 41, size: 64, elements: !4230)
!4230 = !{!4231, !4239}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !4229, file: !25, line: 42, baseType: !4232, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !4234, line: 7, size: 128, elements: !4235)
!4234 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!4235 = !{!4236, !4238}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4233, file: !4234, line: 8, baseType: !4237, size: 64)
!4237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !381, line: 93, baseType: !321)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4233, file: !4234, line: 9, baseType: !321, size: 64, offset: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !4229, file: !25, line: 43, baseType: !4240, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !4242, line: 7, size: 64, elements: !4243)
!4242 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!4243 = !{!4244, !4246}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4241, file: !4242, line: 8, baseType: !4245, size: 32)
!4245 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !4242, line: 5, baseType: !1294)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4241, file: !4242, line: 9, baseType: !1294, size: 32, offset: 32)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4224, file: !25, line: 45, baseType: !288, size: 64, offset: 128)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4211, file: !25, line: 54, baseType: !4249, size: 256)
!4249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4211, file: !25, line: 48, size: 256, elements: !4250)
!4250 = !{!4251, !4254, !4255, !4256, !4257}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !4249, file: !25, line: 49, baseType: !4252, size: 64)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !4249, file: !25, line: 50, baseType: !182, size: 32, offset: 64)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !4249, file: !25, line: 51, baseType: !182, size: 32, offset: 96)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4249, file: !25, line: 52, baseType: !198, size: 64, offset: 128)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4249, file: !25, line: 53, baseType: !198, size: 64, offset: 192)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !230, file: !231, line: 835, baseType: !4259, size: 32, offset: 5120)
!4259 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !185, line: 22, baseType: !4260)
!4260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !381, line: 28, baseType: !182)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !230, file: !231, line: 836, baseType: !4259, size: 32, offset: 5152)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !230, file: !231, line: 840, baseType: !198, size: 64, offset: 5184)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !230, file: !231, line: 849, baseType: !229, size: 64, offset: 5248)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !230, file: !231, line: 852, baseType: !229, size: 64, offset: 5312)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !230, file: !231, line: 857, baseType: !281, size: 128, offset: 5376)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !230, file: !231, line: 858, baseType: !281, size: 128, offset: 5504)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !230, file: !231, line: 859, baseType: !229, size: 64, offset: 5632)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !230, file: !231, line: 867, baseType: !281, size: 128, offset: 5696)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !230, file: !231, line: 868, baseType: !281, size: 128, offset: 5824)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !230, file: !231, line: 871, baseType: !1230, size: 64, offset: 5952)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !230, file: !231, line: 872, baseType: !4272, size: 512, offset: 6016)
!4272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !747, size: 512, elements: !1238)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !230, file: !231, line: 873, baseType: !281, size: 128, offset: 6528)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !230, file: !231, line: 874, baseType: !281, size: 128, offset: 6656)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !230, file: !231, line: 876, baseType: !4276, size: 64, offset: 6784)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !230, file: !231, line: 879, baseType: !815, size: 64, offset: 6848)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !230, file: !231, line: 882, baseType: !815, size: 64, offset: 6912)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !230, file: !231, line: 884, baseType: !288, size: 64, offset: 6976)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !230, file: !231, line: 885, baseType: !288, size: 64, offset: 7040)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !230, file: !231, line: 890, baseType: !288, size: 64, offset: 7104)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !230, file: !231, line: 891, baseType: !4283, size: 128, offset: 7168)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !231, line: 242, size: 128, elements: !4284)
!4284 = !{!4285, !4286, !4287}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4283, file: !231, line: 244, baseType: !288, size: 64)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4283, file: !231, line: 245, baseType: !288, size: 64, offset: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4283, file: !231, line: 246, baseType: !354, offset: 128)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !230, file: !231, line: 900, baseType: !198, size: 64, offset: 7296)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !230, file: !231, line: 901, baseType: !198, size: 64, offset: 7360)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !230, file: !231, line: 904, baseType: !288, size: 64, offset: 7424)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !230, file: !231, line: 907, baseType: !288, size: 64, offset: 7488)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !230, file: !231, line: 910, baseType: !198, size: 64, offset: 7552)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !230, file: !231, line: 911, baseType: !198, size: 64, offset: 7616)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !230, file: !231, line: 914, baseType: !4295, size: 640, offset: 7680)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !4296, line: 123, size: 640, elements: !4297)
!4296 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!4297 = !{!4298, !4304, !4305}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !4295, file: !4296, line: 124, baseType: !4299, size: 576)
!4299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4300, size: 576, elements: !759)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !4296, line: 108, size: 192, elements: !4301)
!4301 = !{!4302, !4303}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !4300, file: !4296, line: 109, baseType: !288, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !4300, file: !4296, line: 110, baseType: !394, size: 128, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !4295, file: !4296, line: 125, baseType: !7, size: 32, offset: 576)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !4295, file: !4296, line: 126, baseType: !7, size: 32, offset: 608)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !230, file: !231, line: 917, baseType: !4307, size: 192, offset: 8320)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !4296, line: 134, size: 192, elements: !4308)
!4308 = !{!4309, !4310}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4307, file: !4296, line: 135, baseType: !886, size: 128, align: 64)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !4307, file: !4296, line: 136, baseType: !7, size: 32, offset: 128)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !230, file: !231, line: 923, baseType: !1256, size: 64, offset: 8512)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !230, file: !231, line: 926, baseType: !1256, size: 64, offset: 8576)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !230, file: !231, line: 929, baseType: !1256, size: 64, offset: 8640)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !230, file: !231, line: 933, baseType: !1286, size: 64, offset: 8704)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !230, file: !231, line: 943, baseType: !4316, size: 128, offset: 8768)
!4316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 128, elements: !222)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !230, file: !231, line: 945, baseType: !4318, size: 64, offset: 8896)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !231, line: 49, flags: DIFlagFwdDecl)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !230, file: !231, line: 956, baseType: !4321, size: 64, offset: 8960)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !231, line: 45, flags: DIFlagFwdDecl)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !230, file: !231, line: 959, baseType: !4324, size: 64, offset: 9024)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!4325 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !231, line: 959, flags: DIFlagFwdDecl)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !230, file: !231, line: 962, baseType: !4327, size: 64, offset: 9088)
!4327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4328, size: 64)
!4328 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !231, line: 66, flags: DIFlagFwdDecl)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !230, file: !231, line: 966, baseType: !4330, size: 64, offset: 9152)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !231, line: 50, flags: DIFlagFwdDecl)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !230, file: !231, line: 969, baseType: !4333, size: 64, offset: 9216)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4335, line: 82, size: 7296, elements: !4336)
!4335 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4336 = !{!4337, !4338, !4339, !4340, !4341, !4342, !4343, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4372, !4381, !4382, !4384, !4385, !4386, !4389, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4419, !4420, !4427, !4428, !4429, !4430, !4431, !4432}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4334, file: !4335, line: 83, baseType: !244, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4334, file: !4335, line: 84, baseType: !249, size: 32, offset: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4334, file: !4335, line: 85, baseType: !182, size: 32, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4334, file: !4335, line: 86, baseType: !281, size: 128, offset: 128)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4334, file: !4335, line: 88, baseType: !1078, size: 128, offset: 256)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4334, file: !4335, line: 91, baseType: !229, size: 64, offset: 384)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4334, file: !4335, line: 94, baseType: !4344, size: 192, offset: 448)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4345, line: 30, size: 192, elements: !4346)
!4345 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4346 = !{!4347, !4348}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4344, file: !4345, line: 31, baseType: !281, size: 128)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4344, file: !4345, line: 32, baseType: !4349, size: 64, offset: 128)
!4349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4350, line: 25, baseType: !4351)
!4350 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4350, line: 23, size: 64, elements: !4352)
!4352 = !{!4353}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4351, file: !4350, line: 24, baseType: !426, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4334, file: !4335, line: 97, baseType: !743, size: 64, offset: 640)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4334, file: !4335, line: 100, baseType: !182, size: 32, offset: 704)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4334, file: !4335, line: 106, baseType: !182, size: 32, offset: 736)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4334, file: !4335, line: 107, baseType: !229, size: 64, offset: 768)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4334, file: !4335, line: 110, baseType: !182, size: 32, offset: 832)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4334, file: !4335, line: 111, baseType: !7, size: 32, offset: 864)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4334, file: !4335, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4334, file: !4335, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4334, file: !4335, line: 128, baseType: !182, size: 32, offset: 928)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4334, file: !4335, line: 129, baseType: !281, size: 128, offset: 960)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4334, file: !4335, line: 132, baseType: !329, size: 512, offset: 1088)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4334, file: !4335, line: 133, baseType: !337, size: 64, offset: 1600)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4334, file: !4335, line: 140, baseType: !4367, size: 256, offset: 1664)
!4367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4368, size: 256, elements: !1278)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4335, line: 38, size: 128, elements: !4369)
!4369 = !{!4370, !4371}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4368, file: !4335, line: 39, baseType: !288, size: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4368, file: !4335, line: 40, baseType: !288, size: 64, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4334, file: !4335, line: 146, baseType: !4373, size: 192, offset: 1920)
!4373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4335, line: 66, size: 192, elements: !4374)
!4374 = !{!4375}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4373, file: !4335, line: 67, baseType: !4376, size: 192)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4335, line: 47, size: 192, elements: !4377)
!4377 = !{!4378, !4379, !4380}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4376, file: !4335, line: 48, baseType: !842, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4376, file: !4335, line: 49, baseType: !842, size: 64, offset: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4376, file: !4335, line: 50, baseType: !842, size: 64, offset: 128)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4334, file: !4335, line: 150, baseType: !4295, size: 640, offset: 2112)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4334, file: !4335, line: 153, baseType: !4383, size: 256, offset: 2752)
!4383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 256, elements: !1238)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4334, file: !4335, line: 159, baseType: !1230, size: 64, offset: 3008)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4334, file: !4335, line: 162, baseType: !182, size: 32, offset: 3072)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4334, file: !4335, line: 164, baseType: !4387, size: 64, offset: 3136)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4335, line: 164, flags: DIFlagFwdDecl)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4334, file: !4335, line: 175, baseType: !4390, size: 32, offset: 3200)
!4390 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !384, line: 805, baseType: !4391)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !384, line: 798, size: 32, elements: !4392)
!4392 = !{!4393, !4394}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !4391, file: !384, line: 803, baseType: !575, size: 32)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4391, file: !384, line: 804, baseType: !619, offset: 32)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4334, file: !4335, line: 176, baseType: !288, size: 64, offset: 3264)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4334, file: !4335, line: 176, baseType: !288, size: 64, offset: 3328)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4334, file: !4335, line: 176, baseType: !288, size: 64, offset: 3392)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4334, file: !4335, line: 176, baseType: !288, size: 64, offset: 3456)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4334, file: !4335, line: 177, baseType: !288, size: 64, offset: 3520)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4334, file: !4335, line: 178, baseType: !288, size: 64, offset: 3584)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4334, file: !4335, line: 179, baseType: !4283, size: 128, offset: 3648)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4334, file: !4335, line: 180, baseType: !198, size: 64, offset: 3776)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4334, file: !4335, line: 180, baseType: !198, size: 64, offset: 3840)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4334, file: !4335, line: 180, baseType: !198, size: 64, offset: 3904)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4334, file: !4335, line: 180, baseType: !198, size: 64, offset: 3968)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4334, file: !4335, line: 181, baseType: !198, size: 64, offset: 4032)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4334, file: !4335, line: 181, baseType: !198, size: 64, offset: 4096)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4334, file: !4335, line: 181, baseType: !198, size: 64, offset: 4160)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4334, file: !4335, line: 181, baseType: !198, size: 64, offset: 4224)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4334, file: !4335, line: 182, baseType: !198, size: 64, offset: 4288)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4334, file: !4335, line: 182, baseType: !198, size: 64, offset: 4352)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4334, file: !4335, line: 182, baseType: !198, size: 64, offset: 4416)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4334, file: !4335, line: 182, baseType: !198, size: 64, offset: 4480)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4334, file: !4335, line: 183, baseType: !198, size: 64, offset: 4544)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4334, file: !4335, line: 183, baseType: !198, size: 64, offset: 4608)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4334, file: !4335, line: 184, baseType: !4417, offset: 4672)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4418, line: 12, elements: !297)
!4418 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4334, file: !4335, line: 192, baseType: !290, size: 64, offset: 4672)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4334, file: !4335, line: 203, baseType: !4421, size: 2048, offset: 4736)
!4421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4422, size: 2048, elements: !222)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4423, line: 43, size: 128, elements: !4424)
!4423 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4424 = !{!4425, !4426}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4422, file: !4423, line: 44, baseType: !829, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4422, file: !4423, line: 45, baseType: !829, size: 64, offset: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4334, file: !4335, line: 220, baseType: !691, size: 8, offset: 6784)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4334, file: !4335, line: 221, baseType: !1328, size: 16, offset: 6800)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4334, file: !4335, line: 222, baseType: !1328, size: 16, offset: 6816)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4334, file: !4335, line: 224, baseType: !434, size: 64, offset: 6848)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4334, file: !4335, line: 227, baseType: !836, size: 192, offset: 6912)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4334, file: !4335, line: 233, baseType: !836, size: 192, offset: 7104)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !230, file: !231, line: 970, baseType: !4434, size: 64, offset: 9280)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4335, line: 20, size: 16576, elements: !4436)
!4436 = !{!4437, !4438, !4439, !4440}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4435, file: !4335, line: 21, baseType: !619)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4435, file: !4335, line: 22, baseType: !244, size: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4435, file: !4335, line: 23, baseType: !1078, size: 128, offset: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4435, file: !4335, line: 24, baseType: !4441, size: 16384, offset: 192)
!4441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4442, size: 16384, elements: !1774)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4345, line: 49, size: 256, elements: !4443)
!4443 = !{!4444}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4442, file: !4345, line: 50, baseType: !4445, size: 256)
!4445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4345, line: 35, size: 256, elements: !4446)
!4446 = !{!4447, !4454, !4455, !4461}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4445, file: !4345, line: 37, baseType: !4448, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4449, line: 19, baseType: !4450)
!4449 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4449, line: 18, baseType: !4452)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{null, !182}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4445, file: !4345, line: 38, baseType: !198, size: 64, offset: 64)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4445, file: !4345, line: 44, baseType: !4456, size: 64, offset: 128)
!4456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4449, line: 22, baseType: !4457)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4449, line: 21, baseType: !4459)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{null}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4445, file: !4345, line: 46, baseType: !4349, size: 64, offset: 192)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !230, file: !231, line: 971, baseType: !4349, size: 64, offset: 9344)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !230, file: !231, line: 972, baseType: !4349, size: 64, offset: 9408)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !230, file: !231, line: 974, baseType: !4349, size: 64, offset: 9472)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !230, file: !231, line: 975, baseType: !4344, size: 192, offset: 9536)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !230, file: !231, line: 976, baseType: !198, size: 64, offset: 9728)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !230, file: !231, line: 977, baseType: !827, size: 64, offset: 9792)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !230, file: !231, line: 978, baseType: !7, size: 32, offset: 9856)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !230, file: !231, line: 980, baseType: !889, size: 64, offset: 9920)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !230, file: !231, line: 989, baseType: !4471, size: 128, offset: 9984)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4472, line: 35, size: 128, elements: !4473)
!4472 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4473 = !{!4474, !4475, !4476}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4471, file: !4472, line: 36, baseType: !182, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4471, file: !4472, line: 37, baseType: !249, size: 32, offset: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4471, file: !4472, line: 38, baseType: !4477, size: 64, offset: 64)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4472, line: 23, flags: DIFlagFwdDecl)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !230, file: !231, line: 992, baseType: !288, size: 64, offset: 10112)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !230, file: !231, line: 993, baseType: !288, size: 64, offset: 10176)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !230, file: !231, line: 996, baseType: !619, offset: 10240)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !230, file: !231, line: 999, baseType: !354, offset: 10240)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !230, file: !231, line: 1001, baseType: !4484, size: 64, offset: 10240)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !231, line: 636, size: 64, elements: !4485)
!4485 = !{!4486}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4484, file: !231, line: 637, baseType: !4487, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !230, file: !231, line: 1005, baseType: !397, size: 128, offset: 10304)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !230, file: !231, line: 1007, baseType: !229, size: 64, offset: 10432)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !230, file: !231, line: 1009, baseType: !4491, size: 64, offset: 10496)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !231, line: 1009, flags: DIFlagFwdDecl)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !230, file: !231, line: 1043, baseType: !183, size: 64, offset: 10560)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !230, file: !231, line: 1046, baseType: !4495, size: 64, offset: 10624)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !230, file: !231, line: 1050, baseType: !4497, size: 64, offset: 10688)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !76, line: 1236, size: 320, elements: !4499)
!4499 = !{!4500, !4501, !4502, !4503, !4504}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !4498, file: !76, line: 1237, baseType: !281, size: 128)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4498, file: !76, line: 1238, baseType: !281, size: 128, offset: 128)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !4498, file: !76, line: 1239, baseType: !194, size: 16, offset: 256)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !4498, file: !76, line: 1240, baseType: !691, size: 8, offset: 272)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !4498, file: !76, line: 1241, baseType: !691, size: 8, offset: 280)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !230, file: !231, line: 1054, baseType: !4506, size: 64, offset: 10752)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !231, line: 55, flags: DIFlagFwdDecl)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !230, file: !231, line: 1056, baseType: !3170, size: 64, offset: 10816)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !230, file: !231, line: 1058, baseType: !2856, size: 64, offset: 10880)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !230, file: !231, line: 1061, baseType: !4511, size: 64, offset: 10944)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !231, line: 43, flags: DIFlagFwdDecl)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !230, file: !231, line: 1064, baseType: !198, size: 64, offset: 11008)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !230, file: !231, line: 1065, baseType: !4515, size: 64, offset: 11072)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4345, line: 14, baseType: !4517)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4345, line: 12, size: 384, elements: !4518)
!4518 = !{!4519}
!4519 = !DIDerivedType(tag: DW_TAG_member, scope: !4517, file: !4345, line: 13, baseType: !4520, size: 384)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4517, file: !4345, line: 13, size: 384, elements: !4521)
!4521 = !{!4522, !4523, !4524, !4525}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4520, file: !4345, line: 13, baseType: !182, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4520, file: !4345, line: 13, baseType: !182, size: 32, offset: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4520, file: !4345, line: 13, baseType: !182, size: 32, offset: 64)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4520, file: !4345, line: 13, baseType: !4526, size: 256, offset: 128)
!4526 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4527, line: 32, size: 256, elements: !4528)
!4527 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4528 = !{!4529, !4534, !4547, !4553, !4562, !4582, !4587}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4526, file: !4527, line: 37, baseType: !4530, size: 64)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 34, size: 64, elements: !4531)
!4531 = !{!4532, !4533}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4530, file: !4527, line: 35, baseType: !4260, size: 32)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4530, file: !4527, line: 36, baseType: !551, size: 32, offset: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4526, file: !4527, line: 45, baseType: !4535, size: 192)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 40, size: 192, elements: !4536)
!4536 = !{!4537, !4539, !4540, !4546}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4535, file: !4527, line: 41, baseType: !4538, size: 32)
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !381, line: 95, baseType: !182)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4535, file: !4527, line: 42, baseType: !182, size: 32, offset: 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4535, file: !4527, line: 43, baseType: !4541, size: 64, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4527, line: 11, baseType: !4542)
!4542 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4527, line: 8, size: 64, elements: !4543)
!4543 = !{!4544, !4545}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4542, file: !4527, line: 9, baseType: !182, size: 32)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4542, file: !4527, line: 10, baseType: !183, size: 64)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4535, file: !4527, line: 44, baseType: !182, size: 32, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4526, file: !4527, line: 52, baseType: !4548, size: 128)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 48, size: 128, elements: !4549)
!4549 = !{!4550, !4551, !4552}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4548, file: !4527, line: 49, baseType: !4260, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4548, file: !4527, line: 50, baseType: !551, size: 32, offset: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4548, file: !4527, line: 51, baseType: !4541, size: 64, offset: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4526, file: !4527, line: 61, baseType: !4554, size: 256)
!4554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 55, size: 256, elements: !4555)
!4555 = !{!4556, !4557, !4558, !4559, !4561}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4554, file: !4527, line: 56, baseType: !4260, size: 32)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4554, file: !4527, line: 57, baseType: !551, size: 32, offset: 32)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4554, file: !4527, line: 58, baseType: !182, size: 32, offset: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4554, file: !4527, line: 59, baseType: !4560, size: 64, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !381, line: 94, baseType: !913)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4554, file: !4527, line: 60, baseType: !4560, size: 64, offset: 192)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4526, file: !4527, line: 95, baseType: !4563, size: 256)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 64, size: 256, elements: !4564)
!4564 = !{!4565, !4566}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4563, file: !4527, line: 65, baseType: !183, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, scope: !4563, file: !4527, line: 77, baseType: !4567, size: 192, offset: 64)
!4567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4563, file: !4527, line: 77, size: 192, elements: !4568)
!4568 = !{!4569, !4570, !4577}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4567, file: !4527, line: 82, baseType: !1328, size: 16)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4567, file: !4527, line: 88, baseType: !4571, size: 192)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4567, file: !4527, line: 84, size: 192, elements: !4572)
!4572 = !{!4573, !4575, !4576}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4571, file: !4527, line: 85, baseType: !4574, size: 64)
!4574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 64, elements: !375)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4571, file: !4527, line: 86, baseType: !183, size: 64, offset: 64)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4571, file: !4527, line: 87, baseType: !183, size: 64, offset: 128)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4567, file: !4527, line: 93, baseType: !4578, size: 96)
!4578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4567, file: !4527, line: 90, size: 96, elements: !4579)
!4579 = !{!4580, !4581}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4578, file: !4527, line: 91, baseType: !4574, size: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4578, file: !4527, line: 92, baseType: !189, size: 32, offset: 64)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4526, file: !4527, line: 101, baseType: !4583, size: 128)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 98, size: 128, elements: !4584)
!4584 = !{!4585, !4586}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4583, file: !4527, line: 99, baseType: !241, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4583, file: !4527, line: 100, baseType: !182, size: 32, offset: 64)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4526, file: !4527, line: 108, baseType: !4588, size: 128)
!4588 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4526, file: !4527, line: 104, size: 128, elements: !4589)
!4589 = !{!4590, !4591, !4592}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4588, file: !4527, line: 105, baseType: !183, size: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4588, file: !4527, line: 106, baseType: !182, size: 32, offset: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4588, file: !4527, line: 107, baseType: !7, size: 32, offset: 96)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !230, file: !231, line: 1067, baseType: !4417, offset: 11136)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !230, file: !231, line: 1099, baseType: !4595, size: 64, offset: 11136)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !231, line: 56, flags: DIFlagFwdDecl)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !230, file: !231, line: 1103, baseType: !281, size: 128, offset: 11200)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !230, file: !231, line: 1104, baseType: !4599, size: 64, offset: 11328)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !231, line: 46, flags: DIFlagFwdDecl)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !230, file: !231, line: 1105, baseType: !836, size: 192, offset: 11392)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !230, file: !231, line: 1106, baseType: !7, size: 32, offset: 11584)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !230, file: !231, line: 1109, baseType: !4604, size: 128, offset: 11648)
!4604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4605, size: 128, elements: !1278)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !231, line: 51, flags: DIFlagFwdDecl)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !230, file: !231, line: 1110, baseType: !836, size: 192, offset: 11776)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !230, file: !231, line: 1111, baseType: !281, size: 128, offset: 11968)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !230, file: !231, line: 1173, baseType: !4610, size: 64, offset: 12096)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4612, line: 62, size: 256, align: 256, elements: !4613)
!4612 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4613 = !{!4614, !4615, !4616, !4621}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4611, file: !4612, line: 75, baseType: !189, size: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4611, file: !4612, line: 90, baseType: !189, size: 32, offset: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4611, file: !4612, line: 124, baseType: !4617, size: 64, offset: 64)
!4617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4611, file: !4612, line: 109, size: 64, elements: !4618)
!4618 = !{!4619, !4620}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4617, file: !4612, line: 110, baseType: !289, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4617, file: !4612, line: 112, baseType: !289, size: 64)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4611, file: !4612, line: 144, baseType: !189, size: 32, offset: 128)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !230, file: !231, line: 1174, baseType: !187, size: 32, offset: 12160)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !230, file: !231, line: 1179, baseType: !198, size: 64, offset: 12224)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !230, file: !231, line: 1182, baseType: !4625, size: 128, offset: 12288)
!4625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !4103, line: 76, size: 128, elements: !4626)
!4626 = !{!4627, !4632, !4633}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4625, file: !4103, line: 85, baseType: !4628, size: 64)
!4628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4629, line: 7, size: 64, elements: !4630)
!4629 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4630 = !{!4631}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4628, file: !4629, line: 12, baseType: !423, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4625, file: !4103, line: 88, baseType: !691, size: 8, offset: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4625, file: !4103, line: 95, baseType: !691, size: 8, offset: 72)
!4634 = !DIDerivedType(tag: DW_TAG_member, scope: !230, file: !231, line: 1184, baseType: !4635, size: 128, offset: 12416)
!4635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !230, file: !231, line: 1184, size: 128, elements: !4636)
!4636 = !{!4637, !4638}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4635, file: !231, line: 1185, baseType: !244, size: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4635, file: !231, line: 1186, baseType: !886, size: 128, align: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !230, file: !231, line: 1190, baseType: !995, size: 64, offset: 12544)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !230, file: !231, line: 1192, baseType: !4641, size: 128, offset: 12608)
!4641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !4103, line: 64, size: 128, elements: !4642)
!4642 = !{!4643, !4644, !4645}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4641, file: !4103, line: 65, baseType: !522, size: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4641, file: !4103, line: 67, baseType: !189, size: 32, offset: 64)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4641, file: !4103, line: 68, baseType: !189, size: 32, offset: 96)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !230, file: !231, line: 1206, baseType: !182, size: 32, offset: 12736)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !230, file: !231, line: 1207, baseType: !182, size: 32, offset: 12768)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !230, file: !231, line: 1209, baseType: !198, size: 64, offset: 12800)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !230, file: !231, line: 1219, baseType: !288, size: 64, offset: 12864)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !230, file: !231, line: 1220, baseType: !288, size: 64, offset: 12928)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !230, file: !231, line: 1317, baseType: !182, size: 32, offset: 12992)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !230, file: !231, line: 1319, baseType: !229, size: 64, offset: 13056)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !230, file: !231, line: 1322, baseType: !4654, size: 64, offset: 13120)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4656, line: 56, size: 512, elements: !4657)
!4656 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !{!4658, !4659, !4660, !4661, !4662, !4663, !4664, !4666}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4655, file: !4656, line: 57, baseType: !4654, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4655, file: !4656, line: 58, baseType: !183, size: 64, offset: 64)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4655, file: !4656, line: 59, baseType: !198, size: 64, offset: 128)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4655, file: !4656, line: 60, baseType: !198, size: 64, offset: 192)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4655, file: !4656, line: 61, baseType: !3835, size: 64, offset: 256)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4655, file: !4656, line: 62, baseType: !7, size: 32, offset: 320)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4655, file: !4656, line: 63, baseType: !4665, size: 64, offset: 384)
!4665 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !185, line: 153, baseType: !288)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4655, file: !4656, line: 64, baseType: !1865, size: 64, offset: 448)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !230, file: !231, line: 1326, baseType: !244, size: 32, offset: 13184)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !230, file: !231, line: 1342, baseType: !183, size: 64, offset: 13248)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !230, file: !231, line: 1343, baseType: !289, size: 64, offset: 13312)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !230, file: !231, line: 1344, baseType: !288, size: 64, offset: 13376)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !230, file: !231, line: 1345, baseType: !289, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !230, file: !231, line: 1346, baseType: !289, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !230, file: !231, line: 1347, baseType: !289, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !230, file: !231, line: 1348, baseType: !886, size: 128, align: 64, offset: 13504)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !230, file: !231, line: 1358, baseType: !4676, size: 34816, offset: 13824)
!4676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4677, line: 485, size: 34816, elements: !4678)
!4677 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4678 = !{!4679, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4708, !4709, !4710, !4711, !4712, !4713, !4716, !4717, !4718}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4676, file: !4677, line: 487, baseType: !4680, size: 192)
!4680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4681, size: 192, elements: !759)
!4681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4682, line: 16, size: 64, elements: !4683)
!4682 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4683 = !{!4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4681, file: !4682, line: 17, baseType: !216, size: 16)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4681, file: !4682, line: 18, baseType: !216, size: 16, offset: 16)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4681, file: !4682, line: 19, baseType: !216, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4681, file: !4682, line: 19, baseType: !216, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4681, file: !4682, line: 19, baseType: !216, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4681, file: !4682, line: 19, baseType: !216, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4681, file: !4682, line: 19, baseType: !216, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4681, file: !4682, line: 20, baseType: !216, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4681, file: !4682, line: 20, baseType: !216, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4681, file: !4682, line: 20, baseType: !216, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4681, file: !4682, line: 20, baseType: !216, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4681, file: !4682, line: 20, baseType: !216, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4681, file: !4682, line: 20, baseType: !216, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4676, file: !4677, line: 491, baseType: !198, size: 64, offset: 192)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4676, file: !4677, line: 495, baseType: !194, size: 16, offset: 256)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4676, file: !4677, line: 496, baseType: !194, size: 16, offset: 272)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4676, file: !4677, line: 497, baseType: !194, size: 16, offset: 288)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4676, file: !4677, line: 498, baseType: !194, size: 16, offset: 304)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4676, file: !4677, line: 502, baseType: !198, size: 64, offset: 320)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4676, file: !4677, line: 503, baseType: !198, size: 64, offset: 384)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4676, file: !4677, line: 514, baseType: !4705, size: 256, offset: 448)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4706, size: 256, elements: !1238)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4677, line: 483, flags: DIFlagFwdDecl)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4676, file: !4677, line: 516, baseType: !198, size: 64, offset: 704)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4676, file: !4677, line: 518, baseType: !198, size: 64, offset: 768)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4676, file: !4677, line: 520, baseType: !198, size: 64, offset: 832)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4676, file: !4677, line: 521, baseType: !198, size: 64, offset: 896)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4676, file: !4677, line: 522, baseType: !198, size: 64, offset: 960)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4676, file: !4677, line: 528, baseType: !4714, size: 64, offset: 1024)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4677, line: 10, flags: DIFlagFwdDecl)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4676, file: !4677, line: 535, baseType: !198, size: 64, offset: 1088)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4676, file: !4677, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4676, file: !4677, line: 540, baseType: !4719, size: 33280, offset: 1536)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4720, line: 317, size: 33280, elements: !4721)
!4720 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4721 = !{!4722, !4723, !4724}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4719, file: !4720, line: 330, baseType: !7, size: 32)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4719, file: !4720, line: 337, baseType: !198, size: 64, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4719, file: !4720, line: 348, baseType: !4725, size: 32768, offset: 512)
!4725 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4720, line: 304, size: 32768, elements: !4726)
!4726 = !{!4727, !4742, !4779, !4829, !4842}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4725, file: !4720, line: 305, baseType: !4728, size: 896)
!4728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4720, line: 12, size: 896, elements: !4729)
!4729 = !{!4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4741}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4728, file: !4720, line: 13, baseType: !187, size: 32)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4728, file: !4720, line: 14, baseType: !187, size: 32, offset: 32)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4728, file: !4720, line: 15, baseType: !187, size: 32, offset: 64)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4728, file: !4720, line: 16, baseType: !187, size: 32, offset: 96)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4728, file: !4720, line: 17, baseType: !187, size: 32, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4728, file: !4720, line: 18, baseType: !187, size: 32, offset: 160)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4728, file: !4720, line: 19, baseType: !187, size: 32, offset: 192)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4728, file: !4720, line: 22, baseType: !4738, size: 640, offset: 224)
!4738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 640, elements: !4739)
!4739 = !{!4740}
!4740 = !DISubrange(count: 20)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4728, file: !4720, line: 25, baseType: !187, size: 32, offset: 864)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4725, file: !4720, line: 306, baseType: !4743, size: 4096, align: 128)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4720, line: 34, size: 4096, align: 128, elements: !4744)
!4744 = !{!4745, !4746, !4747, !4748, !4749, !4764, !4765, !4766, !4768, !4770, !4774}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4743, file: !4720, line: 35, baseType: !216, size: 16)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4743, file: !4720, line: 36, baseType: !216, size: 16, offset: 16)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4743, file: !4720, line: 37, baseType: !216, size: 16, offset: 32)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4743, file: !4720, line: 38, baseType: !216, size: 16, offset: 48)
!4749 = !DIDerivedType(tag: DW_TAG_member, scope: !4743, file: !4720, line: 39, baseType: !4750, size: 128, offset: 64)
!4750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4743, file: !4720, line: 39, size: 128, elements: !4751)
!4751 = !{!4752, !4757}
!4752 = !DIDerivedType(tag: DW_TAG_member, scope: !4750, file: !4720, line: 40, baseType: !4753, size: 128)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4750, file: !4720, line: 40, size: 128, elements: !4754)
!4754 = !{!4755, !4756}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4753, file: !4720, line: 41, baseType: !288, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4753, file: !4720, line: 42, baseType: !288, size: 64, offset: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, scope: !4750, file: !4720, line: 44, baseType: !4758, size: 128)
!4758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4750, file: !4720, line: 44, size: 128, elements: !4759)
!4759 = !{!4760, !4761, !4762, !4763}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4758, file: !4720, line: 45, baseType: !187, size: 32)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4758, file: !4720, line: 46, baseType: !187, size: 32, offset: 32)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4758, file: !4720, line: 47, baseType: !187, size: 32, offset: 64)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4758, file: !4720, line: 48, baseType: !187, size: 32, offset: 96)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4743, file: !4720, line: 51, baseType: !187, size: 32, offset: 192)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4743, file: !4720, line: 52, baseType: !187, size: 32, offset: 224)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4743, file: !4720, line: 55, baseType: !4767, size: 1024, offset: 256)
!4767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 1024, elements: !606)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4743, file: !4720, line: 58, baseType: !4769, size: 2048, offset: 1280)
!4769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 2048, elements: !1774)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4743, file: !4720, line: 60, baseType: !4771, size: 384, offset: 3328)
!4771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 384, elements: !4772)
!4772 = !{!4773}
!4773 = !DISubrange(count: 12)
!4774 = !DIDerivedType(tag: DW_TAG_member, scope: !4743, file: !4720, line: 62, baseType: !4775, size: 384, offset: 3712)
!4775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4743, file: !4720, line: 62, size: 384, elements: !4776)
!4776 = !{!4777, !4778}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4775, file: !4720, line: 63, baseType: !4771, size: 384)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4775, file: !4720, line: 64, baseType: !4771, size: 384)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4725, file: !4720, line: 307, baseType: !4780, size: 1088)
!4780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4720, line: 79, size: 1088, elements: !4781)
!4781 = !{!4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4828}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4780, file: !4720, line: 80, baseType: !187, size: 32)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4780, file: !4720, line: 81, baseType: !187, size: 32, offset: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4780, file: !4720, line: 82, baseType: !187, size: 32, offset: 64)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4780, file: !4720, line: 83, baseType: !187, size: 32, offset: 96)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4780, file: !4720, line: 84, baseType: !187, size: 32, offset: 128)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4780, file: !4720, line: 85, baseType: !187, size: 32, offset: 160)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4780, file: !4720, line: 86, baseType: !187, size: 32, offset: 192)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4780, file: !4720, line: 88, baseType: !4738, size: 640, offset: 224)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4780, file: !4720, line: 89, baseType: !206, size: 8, offset: 864)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4780, file: !4720, line: 90, baseType: !206, size: 8, offset: 872)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4780, file: !4720, line: 91, baseType: !206, size: 8, offset: 880)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4780, file: !4720, line: 92, baseType: !206, size: 8, offset: 888)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4780, file: !4720, line: 93, baseType: !206, size: 8, offset: 896)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4780, file: !4720, line: 94, baseType: !206, size: 8, offset: 904)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4780, file: !4720, line: 95, baseType: !4797, size: 64, offset: 960)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4799, line: 11, size: 128, elements: !4800)
!4799 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4800 = !{!4801, !4802}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4798, file: !4799, line: 12, baseType: !241, size: 64)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4798, file: !4799, line: 13, baseType: !4803, size: 64, offset: 64)
!4803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4805, line: 56, size: 1344, elements: !4806)
!4805 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4806 = !{!4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4804, file: !4805, line: 61, baseType: !198, size: 64)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4804, file: !4805, line: 62, baseType: !198, size: 64, offset: 64)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4804, file: !4805, line: 63, baseType: !198, size: 64, offset: 128)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4804, file: !4805, line: 64, baseType: !198, size: 64, offset: 192)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4804, file: !4805, line: 65, baseType: !198, size: 64, offset: 256)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4804, file: !4805, line: 66, baseType: !198, size: 64, offset: 320)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4804, file: !4805, line: 68, baseType: !198, size: 64, offset: 384)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4804, file: !4805, line: 69, baseType: !198, size: 64, offset: 448)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4804, file: !4805, line: 70, baseType: !198, size: 64, offset: 512)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4804, file: !4805, line: 71, baseType: !198, size: 64, offset: 576)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4804, file: !4805, line: 72, baseType: !198, size: 64, offset: 640)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4804, file: !4805, line: 73, baseType: !198, size: 64, offset: 704)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4804, file: !4805, line: 74, baseType: !198, size: 64, offset: 768)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4804, file: !4805, line: 75, baseType: !198, size: 64, offset: 832)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4804, file: !4805, line: 76, baseType: !198, size: 64, offset: 896)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4804, file: !4805, line: 81, baseType: !198, size: 64, offset: 960)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4804, file: !4805, line: 83, baseType: !198, size: 64, offset: 1024)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4804, file: !4805, line: 84, baseType: !198, size: 64, offset: 1088)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4804, file: !4805, line: 85, baseType: !198, size: 64, offset: 1152)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4804, file: !4805, line: 86, baseType: !198, size: 64, offset: 1216)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4804, file: !4805, line: 87, baseType: !198, size: 64, offset: 1280)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4780, file: !4720, line: 96, baseType: !187, size: 32, offset: 1024)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4725, file: !4720, line: 308, baseType: !4830, size: 4608, align: 512)
!4830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4720, line: 289, size: 4608, align: 512, elements: !4831)
!4831 = !{!4832, !4833, !4840}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4830, file: !4720, line: 290, baseType: !4743, size: 4096, align: 128)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4830, file: !4720, line: 291, baseType: !4834, size: 512, offset: 4096)
!4834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4720, line: 268, size: 512, elements: !4835)
!4835 = !{!4836, !4837, !4838}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4834, file: !4720, line: 269, baseType: !288, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4834, file: !4720, line: 270, baseType: !288, size: 64, offset: 64)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4834, file: !4720, line: 271, baseType: !4839, size: 384, offset: 128)
!4839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 384, elements: !1346)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4830, file: !4720, line: 292, baseType: !4841, offset: 4608)
!4841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, elements: !1444)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4725, file: !4720, line: 309, baseType: !4843, size: 32768)
!4843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 32768, elements: !4844)
!4844 = !{!4845}
!4845 = !DISubrange(count: 4096)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_scb_t", file: !201, line: 1089, baseType: !4850)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_scb", file: !201, line: 1064, size: 1728, elements: !4851)
!4851 = !{!4852, !5045, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5100, !5533, !5535, !6106, !6107, !6108}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4850, file: !201, line: 1065, baseType: !4853, size: 192)
!4853 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_HOST_COMMAND", file: !201, line: 598, baseType: !4854)
!4854 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !201, line: 583, size: 192, elements: !4855)
!4855 = !{!4856, !4871, !4883, !4894, !4908, !4921, !4934, !4947, !4960, !4973, !4991, !5004, !5015, !5025}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "basic_io", scope: !4854, file: !201, line: 584, baseType: !4857, size: 192)
!4857 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_IO_CMD", file: !201, line: 420, baseType: !4858)
!4858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 408, size: 192, elements: !4859)
!4859 = !{!4860, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4858, file: !201, line: 409, baseType: !205, size: 8)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4858, file: !201, line: 410, baseType: !205, size: 8, offset: 8)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "log_drv", scope: !4858, file: !201, line: 411, baseType: !205, size: 8, offset: 16)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !4858, file: !201, line: 412, baseType: !205, size: 8, offset: 24)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "lba", scope: !4858, file: !201, line: 413, baseType: !186, size: 32, offset: 32)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "sg_addr", scope: !4858, file: !201, line: 414, baseType: !186, size: 32, offset: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "sector_count", scope: !4858, file: !201, line: 415, baseType: !215, size: 16, offset: 96)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "segment_4G", scope: !4858, file: !201, line: 416, baseType: !205, size: 8, offset: 112)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_sg", scope: !4858, file: !201, line: 417, baseType: !205, size: 8, offset: 120)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4858, file: !201, line: 418, baseType: !186, size: 32, offset: 128)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4858, file: !201, line: 419, baseType: !186, size: 32, offset: 160)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "logical_info", scope: !4854, file: !201, line: 585, baseType: !4872, size: 192)
!4872 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_LD_CMD", file: !201, line: 431, baseType: !4873)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 422, size: 192, elements: !4874)
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4873, file: !201, line: 423, baseType: !205, size: 8)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4873, file: !201, line: 424, baseType: !205, size: 8, offset: 8)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4873, file: !201, line: 425, baseType: !215, size: 16, offset: 16)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4873, file: !201, line: 426, baseType: !186, size: 32, offset: 32)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !4873, file: !201, line: 427, baseType: !186, size: 32, offset: 64)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4873, file: !201, line: 428, baseType: !186, size: 32, offset: 96)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4873, file: !201, line: 429, baseType: !186, size: 32, offset: 128)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4873, file: !201, line: 430, baseType: !186, size: 32, offset: 160)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_info", scope: !4854, file: !201, line: 586, baseType: !4884, size: 128)
!4884 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_IOCTL_CMD", file: !201, line: 441, baseType: !4885)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 433, size: 128, elements: !4886)
!4886 = !{!4887, !4888, !4889, !4890, !4891, !4892, !4893}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4885, file: !201, line: 434, baseType: !205, size: 8)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4885, file: !201, line: 435, baseType: !205, size: 8, offset: 8)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4885, file: !201, line: 436, baseType: !205, size: 8, offset: 16)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4885, file: !201, line: 437, baseType: !205, size: 8, offset: 24)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4885, file: !201, line: 438, baseType: !186, size: 32, offset: 32)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !4885, file: !201, line: 439, baseType: !186, size: 32, offset: 64)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !4885, file: !201, line: 440, baseType: !186, size: 32, offset: 96)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb", scope: !4854, file: !201, line: 587, baseType: !4895, size: 192)
!4895 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_DCDB_CMD", file: !201, line: 473, baseType: !4896)
!4896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 462, size: 192, elements: !4897)
!4897 = !{!4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4906, !4907}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4896, file: !201, line: 463, baseType: !205, size: 8)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4896, file: !201, line: 464, baseType: !205, size: 8, offset: 8)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4896, file: !201, line: 465, baseType: !215, size: 16, offset: 16)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4896, file: !201, line: 466, baseType: !186, size: 32, offset: 32)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb_address", scope: !4896, file: !201, line: 467, baseType: !186, size: 32, offset: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4896, file: !201, line: 468, baseType: !215, size: 16, offset: 96)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "segment_4G", scope: !4896, file: !201, line: 469, baseType: !205, size: 8, offset: 112)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_sg", scope: !4896, file: !201, line: 470, baseType: !205, size: 8, offset: 120)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4896, file: !201, line: 471, baseType: !186, size: 32, offset: 128)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4896, file: !201, line: 472, baseType: !186, size: 32, offset: 160)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "config_sync", scope: !4854, file: !201, line: 588, baseType: !4909, size: 192)
!4909 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_CS_CMD", file: !201, line: 485, baseType: !4910)
!4910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 475, size: 192, elements: !4911)
!4911 = !{!4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4910, file: !201, line: 476, baseType: !205, size: 8)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4910, file: !201, line: 477, baseType: !205, size: 8, offset: 8)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4910, file: !201, line: 478, baseType: !205, size: 8, offset: 16)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "source_target", scope: !4910, file: !201, line: 479, baseType: !205, size: 8, offset: 24)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4910, file: !201, line: 480, baseType: !186, size: 32, offset: 32)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4910, file: !201, line: 481, baseType: !186, size: 32, offset: 64)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4910, file: !201, line: 482, baseType: !186, size: 32, offset: 96)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4910, file: !201, line: 483, baseType: !186, size: 32, offset: 128)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4910, file: !201, line: 484, baseType: !186, size: 32, offset: 160)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_stripe", scope: !4854, file: !201, line: 589, baseType: !4922, size: 192)
!4922 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_US_CMD", file: !201, line: 497, baseType: !4923)
!4923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 487, size: 192, elements: !4924)
!4924 = !{!4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4923, file: !201, line: 488, baseType: !205, size: 8)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4923, file: !201, line: 489, baseType: !205, size: 8, offset: 8)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "log_drv", scope: !4923, file: !201, line: 490, baseType: !205, size: 8, offset: 16)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !4923, file: !201, line: 491, baseType: !205, size: 8, offset: 24)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4923, file: !201, line: 492, baseType: !186, size: 32, offset: 32)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4923, file: !201, line: 493, baseType: !186, size: 32, offset: 64)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4923, file: !201, line: 494, baseType: !186, size: 32, offset: 96)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4923, file: !201, line: 495, baseType: !186, size: 32, offset: 128)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4923, file: !201, line: 496, baseType: !186, size: 32, offset: 160)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "flush_cache", scope: !4854, file: !201, line: 590, baseType: !4935, size: 192)
!4935 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_FC_CMD", file: !201, line: 509, baseType: !4936)
!4936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 499, size: 192, elements: !4937)
!4937 = !{!4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4936, file: !201, line: 500, baseType: !205, size: 8)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4936, file: !201, line: 501, baseType: !205, size: 8, offset: 8)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4936, file: !201, line: 502, baseType: !205, size: 8, offset: 16)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4936, file: !201, line: 503, baseType: !205, size: 8, offset: 24)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4936, file: !201, line: 504, baseType: !186, size: 32, offset: 32)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4936, file: !201, line: 505, baseType: !186, size: 32, offset: 64)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !4936, file: !201, line: 506, baseType: !186, size: 32, offset: 96)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4936, file: !201, line: 507, baseType: !186, size: 32, offset: 128)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4936, file: !201, line: 508, baseType: !186, size: 32, offset: 160)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4854, file: !201, line: 591, baseType: !4948, size: 192)
!4948 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_STATUS_CMD", file: !201, line: 521, baseType: !4949)
!4949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 511, size: 192, elements: !4950)
!4950 = !{!4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4949, file: !201, line: 512, baseType: !205, size: 8)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4949, file: !201, line: 513, baseType: !205, size: 8, offset: 8)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4949, file: !201, line: 514, baseType: !205, size: 8, offset: 16)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4949, file: !201, line: 515, baseType: !205, size: 8, offset: 24)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4949, file: !201, line: 516, baseType: !186, size: 32, offset: 32)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !4949, file: !201, line: 517, baseType: !186, size: 32, offset: 64)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4949, file: !201, line: 518, baseType: !186, size: 32, offset: 96)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4949, file: !201, line: 519, baseType: !186, size: 32, offset: 128)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4949, file: !201, line: 520, baseType: !186, size: 32, offset: 160)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "nvram", scope: !4854, file: !201, line: 592, baseType: !4961, size: 192)
!4961 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_NVRAM_CMD", file: !201, line: 533, baseType: !4962)
!4962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 523, size: 192, elements: !4963)
!4963 = !{!4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4962, file: !201, line: 524, baseType: !205, size: 8)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4962, file: !201, line: 525, baseType: !205, size: 8, offset: 8)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4962, file: !201, line: 526, baseType: !205, size: 8, offset: 16)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4962, file: !201, line: 527, baseType: !205, size: 8, offset: 24)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4962, file: !201, line: 528, baseType: !186, size: 32, offset: 32)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !4962, file: !201, line: 529, baseType: !186, size: 32, offset: 64)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4962, file: !201, line: 530, baseType: !186, size: 32, offset: 96)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "ccsar", scope: !4962, file: !201, line: 531, baseType: !186, size: 32, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4962, file: !201, line: 532, baseType: !186, size: 32, offset: 160)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "ffdc", scope: !4854, file: !201, line: 593, baseType: !4974, size: 128)
!4974 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_FFDC_CMD", file: !201, line: 559, baseType: !4975)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 545, size: 128, elements: !4976)
!4976 = !{!4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984, !4985, !4987, !4988, !4989, !4990}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4975, file: !201, line: 546, baseType: !205, size: 8)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4975, file: !201, line: 547, baseType: !205, size: 8, offset: 8)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "reset_count", scope: !4975, file: !201, line: 548, baseType: !205, size: 8, offset: 16)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "reset_type", scope: !4975, file: !201, line: 549, baseType: !205, size: 8, offset: 24)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !4975, file: !201, line: 550, baseType: !205, size: 8, offset: 32)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "minute", scope: !4975, file: !201, line: 551, baseType: !205, size: 8, offset: 40)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "hour", scope: !4975, file: !201, line: 552, baseType: !205, size: 8, offset: 48)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "day", scope: !4975, file: !201, line: 553, baseType: !205, size: 8, offset: 56)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4975, file: !201, line: 554, baseType: !4986, size: 32, offset: 64)
!4986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 32, elements: !1238)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !4975, file: !201, line: 555, baseType: !205, size: 8, offset: 96)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "yearH", scope: !4975, file: !201, line: 556, baseType: !205, size: 8, offset: 104)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "yearL", scope: !4975, file: !201, line: 557, baseType: !205, size: 8, offset: 112)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4975, file: !201, line: 558, baseType: !205, size: 8, offset: 120)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "flashfw", scope: !4854, file: !201, line: 594, baseType: !4992, size: 128)
!4992 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_FLASHFW_CMD", file: !201, line: 571, baseType: !4993)
!4993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 561, size: 128, elements: !4994)
!4994 = !{!4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4993, file: !201, line: 562, baseType: !205, size: 8)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !4993, file: !201, line: 563, baseType: !205, size: 8, offset: 8)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4993, file: !201, line: 564, baseType: !205, size: 8, offset: 16)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4993, file: !201, line: 565, baseType: !205, size: 8, offset: 24)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4993, file: !201, line: 566, baseType: !186, size: 32, offset: 32)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !4993, file: !201, line: 567, baseType: !186, size: 32, offset: 64)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "total_packets", scope: !4993, file: !201, line: 568, baseType: !205, size: 8, offset: 96)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "packet_num", scope: !4993, file: !201, line: 569, baseType: !205, size: 8, offset: 104)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4993, file: !201, line: 570, baseType: !215, size: 16, offset: 112)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "flashbios", scope: !4854, file: !201, line: 595, baseType: !5005, size: 128)
!5005 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_FLASHBIOS_CMD", file: !201, line: 581, baseType: !5006)
!5006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 573, size: 128, elements: !5007)
!5007 = !{!5008, !5009, !5010, !5011, !5012, !5013, !5014}
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !5006, file: !201, line: 574, baseType: !205, size: 8)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !5006, file: !201, line: 575, baseType: !205, size: 8, offset: 8)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5006, file: !201, line: 576, baseType: !205, size: 8, offset: 16)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !5006, file: !201, line: 577, baseType: !205, size: 8, offset: 24)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5006, file: !201, line: 578, baseType: !186, size: 32, offset: 32)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !5006, file: !201, line: 579, baseType: !186, size: 32, offset: 64)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5006, file: !201, line: 580, baseType: !186, size: 32, offset: 96)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "version_info", scope: !4854, file: !201, line: 596, baseType: !5016, size: 128)
!5016 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_VERSION_INFO", file: !201, line: 543, baseType: !5017)
!5017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 535, size: 128, elements: !5018)
!5018 = !{!5019, !5020, !5021, !5022, !5023, !5024}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !5017, file: !201, line: 537, baseType: !205, size: 8)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !5017, file: !201, line: 538, baseType: !205, size: 8, offset: 8)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5017, file: !201, line: 539, baseType: !215, size: 16, offset: 16)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5017, file: !201, line: 540, baseType: !186, size: 32, offset: 32)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_addr", scope: !5017, file: !201, line: 541, baseType: !186, size: 32, offset: 64)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5017, file: !201, line: 542, baseType: !186, size: 32, offset: 96)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4854, file: !201, line: 597, baseType: !5026, size: 128)
!5026 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_RESET_CMD", file: !201, line: 460, baseType: !5027)
!5027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 443, size: 128, elements: !5028)
!5028 = !{!5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042, !5043, !5044}
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !5027, file: !201, line: 444, baseType: !205, size: 8)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !5027, file: !201, line: 445, baseType: !205, size: 8, offset: 8)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5027, file: !201, line: 446, baseType: !205, size: 8, offset: 16)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !5027, file: !201, line: 447, baseType: !205, size: 8, offset: 24)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !5027, file: !201, line: 448, baseType: !205, size: 8, offset: 32)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !5027, file: !201, line: 449, baseType: !205, size: 8, offset: 40)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "reserved6", scope: !5027, file: !201, line: 450, baseType: !205, size: 8, offset: 48)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "reserved7", scope: !5027, file: !201, line: 451, baseType: !205, size: 8, offset: 56)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "reserved8", scope: !5027, file: !201, line: 452, baseType: !205, size: 8, offset: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "reserved9", scope: !5027, file: !201, line: 453, baseType: !205, size: 8, offset: 72)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "reserved10", scope: !5027, file: !201, line: 454, baseType: !205, size: 8, offset: 80)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "reserved11", scope: !5027, file: !201, line: 455, baseType: !205, size: 8, offset: 88)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "reserved12", scope: !5027, file: !201, line: 456, baseType: !205, size: 8, offset: 96)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "reserved13", scope: !5027, file: !201, line: 457, baseType: !205, size: 8, offset: 104)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "reserved14", scope: !5027, file: !201, line: 458, baseType: !205, size: 8, offset: 112)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_flag", scope: !5027, file: !201, line: 459, baseType: !205, size: 8, offset: 120)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb", scope: !4850, file: !201, line: 1066, baseType: !5046, size: 736, offset: 192)
!5046 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_DCDB_TABLE", file: !201, line: 627, baseType: !5047)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 614, size: 736, elements: !5048)
!5048 = !{!5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5059, !5061, !5062}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "device_address", scope: !5047, file: !201, line: 615, baseType: !205, size: 8)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_attribute", scope: !5047, file: !201, line: 616, baseType: !205, size: 8, offset: 8)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !5047, file: !201, line: 617, baseType: !215, size: 16, offset: 16)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pointer", scope: !5047, file: !201, line: 618, baseType: !186, size: 32, offset: 32)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_length", scope: !5047, file: !201, line: 619, baseType: !205, size: 8, offset: 64)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "sense_length", scope: !5047, file: !201, line: 620, baseType: !205, size: 8, offset: 72)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !5047, file: !201, line: 621, baseType: !205, size: 8, offset: 80)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5047, file: !201, line: 622, baseType: !205, size: 8, offset: 88)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cdb", scope: !5047, file: !201, line: 623, baseType: !5058, size: 96, offset: 96)
!5058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 96, elements: !4772)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "sense_info", scope: !5047, file: !201, line: 624, baseType: !5060, size: 512, offset: 192)
!5060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 512, elements: !1774)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_status", scope: !5047, file: !201, line: 625, baseType: !205, size: 8, offset: 704)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5047, file: !201, line: 626, baseType: !5063, size: 24, offset: 712)
!5063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 24, elements: !759)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "target_id", scope: !4850, file: !201, line: 1067, baseType: !205, size: 8, offset: 928)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4850, file: !201, line: 1068, baseType: !205, size: 8, offset: 936)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !4850, file: !201, line: 1069, baseType: !205, size: 8, offset: 944)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !4850, file: !201, line: 1070, baseType: !5058, size: 96, offset: 952)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "scb_busaddr", scope: !4850, file: !201, line: 1071, baseType: !186, size: 32, offset: 1056)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "old_data_busaddr", scope: !4850, file: !201, line: 1072, baseType: !186, size: 32, offset: 1088)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4850, file: !201, line: 1073, baseType: !186, size: 32, offset: 1120)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "basic_status", scope: !4850, file: !201, line: 1074, baseType: !205, size: 8, offset: 1152)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "extended_status", scope: !4850, file: !201, line: 1075, baseType: !205, size: 8, offset: 1160)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "breakup", scope: !4850, file: !201, line: 1076, baseType: !205, size: 8, offset: 1168)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "sg_break", scope: !4850, file: !201, line: 1077, baseType: !205, size: 8, offset: 1176)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !4850, file: !201, line: 1078, baseType: !186, size: 32, offset: 1184)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !4850, file: !201, line: 1079, baseType: !186, size: 32, offset: 1216)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4850, file: !201, line: 1080, baseType: !186, size: 32, offset: 1248)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !4850, file: !201, line: 1081, baseType: !186, size: 32, offset: 1280)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !4850, file: !201, line: 1082, baseType: !5080, size: 64, offset: 1344)
!5080 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SG_LIST", file: !201, line: 941, baseType: !5081)
!5081 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !201, line: 937, size: 64, elements: !5082)
!5082 = !{!5083, !5084, !5091}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5081, file: !201, line: 938, baseType: !183, size: 64)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "std_list", scope: !5081, file: !201, line: 939, baseType: !5085, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 64)
!5086 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_STD_SG_LIST", file: !201, line: 928, baseType: !5087)
!5087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_sglist", file: !201, line: 925, size: 64, elements: !5088)
!5088 = !{!5089, !5090}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5087, file: !201, line: 926, baseType: !186, size: 32)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5087, file: !201, line: 927, baseType: !186, size: 32, offset: 32)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "enh_list", scope: !5081, file: !201, line: 940, baseType: !5092, size: 64)
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5093 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_ENH_SG_LIST", file: !201, line: 935, baseType: !5094)
!5094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_enh_sglist", file: !201, line: 930, size: 128, elements: !5095)
!5095 = !{!5096, !5097, !5098, !5099}
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !5094, file: !201, line: 931, baseType: !186, size: 32)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !5094, file: !201, line: 932, baseType: !186, size: 32, offset: 32)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5094, file: !201, line: 933, baseType: !186, size: 32, offset: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5094, file: !201, line: 934, baseType: !186, size: 32, offset: 96)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cmd", scope: !4850, file: !201, line: 1083, baseType: !5101, size: 64, offset: 1408)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !5103, line: 68, size: 3136, elements: !5104)
!5103 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!5104 = !{!5105, !5119, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5503, !5505, !5506, !5507, !5508, !5509, !5513, !5527, !5528, !5529, !5530, !5531, !5532}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !5102, file: !5103, line: 69, baseType: !5106, size: 448)
!5106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !5107, line: 9, size: 448, elements: !5108)
!5107 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!5108 = !{!5109, !5111, !5113, !5114, !5115, !5116, !5117, !5118}
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !5106, file: !5107, line: 10, baseType: !5110, size: 128)
!5110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 128, elements: !222)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5106, file: !5107, line: 11, baseType: !5112, size: 64, offset: 128)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5106, file: !5107, line: 12, baseType: !194, size: 16, offset: 192)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5106, file: !5107, line: 13, baseType: !182, size: 32, offset: 224)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5106, file: !5107, line: 14, baseType: !7, size: 32, offset: 256)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !5106, file: !5107, line: 15, baseType: !7, size: 32, offset: 288)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5106, file: !5107, line: 16, baseType: !182, size: 32, offset: 320)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !5106, file: !5107, line: 17, baseType: !183, size: 64, offset: 384)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5102, file: !5103, line: 70, baseType: !5120, size: 64, offset: 448)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !5122)
!5122 = !{!5123, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5388, !5389, !5390, !5391, !5392, !5393, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5459, !5460, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5121, file: !128, line: 102, baseType: !5124, size: 64)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !136, line: 524, size: 16256, elements: !5126)
!5126 = !{!5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5296, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349}
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !5125, file: !136, line: 533, baseType: !281, size: 128)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !5125, file: !136, line: 534, baseType: !281, size: 128, offset: 128)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !5125, file: !136, line: 536, baseType: !281, size: 128, offset: 256)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !5125, file: !136, line: 538, baseType: !619, offset: 384)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !5125, file: !136, line: 539, baseType: !4019, size: 64, offset: 384)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !5125, file: !136, line: 541, baseType: !836, size: 192, offset: 448)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !5125, file: !136, line: 543, baseType: !281, size: 128, offset: 640)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !5125, file: !136, line: 544, baseType: !229, size: 64, offset: 768)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5125, file: !136, line: 545, baseType: !4276, size: 64, offset: 832)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !5125, file: !136, line: 547, baseType: !1078, size: 128, offset: 896)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !5125, file: !136, line: 548, baseType: !5138, size: 64, offset: 1024)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !136, line: 32, size: 2880, elements: !5140)
!5140 = !{!5141, !5142, !5143, !5147, !5151, !5155, !5156, !5157, !5161, !5165, !5166, !5167, !5168, !5169, !5173, !5174, !5178, !5205, !5209, !5213, !5217, !5221, !5225, !5229, !5233, !5234, !5238, !5242, !5246, !5250, !5251, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5288, !5289, !5290, !5291, !5292, !5295}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5139, file: !136, line: 33, baseType: !738, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5139, file: !136, line: 34, baseType: !648, size: 64, offset: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5139, file: !136, line: 43, baseType: !5144, size: 64, offset: 128)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{!648, !5124}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5139, file: !136, line: 50, baseType: !5148, size: 64, offset: 192)
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = !DISubroutineType(types: !5150)
!5150 = !{!182, !5120, !7, !183}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5139, file: !136, line: 65, baseType: !5152, size: 64, offset: 256)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!182, !5124, !5101}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5139, file: !136, line: 66, baseType: !5152, size: 64, offset: 320)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5139, file: !136, line: 102, baseType: !5152, size: 64, offset: 384)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5139, file: !136, line: 112, baseType: !5158, size: 64, offset: 448)
!5158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 64)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{null, !5124, !216}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5139, file: !136, line: 132, baseType: !5162, size: 64, offset: 512)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!182, !5101}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5139, file: !136, line: 133, baseType: !5162, size: 64, offset: 576)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5139, file: !136, line: 134, baseType: !5162, size: 64, offset: 640)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5139, file: !136, line: 135, baseType: !5162, size: 64, offset: 704)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5139, file: !136, line: 136, baseType: !5162, size: 64, offset: 768)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5139, file: !136, line: 164, baseType: !5170, size: 64, offset: 832)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{!182, !5120}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5139, file: !136, line: 195, baseType: !5170, size: 64, offset: 896)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5139, file: !136, line: 206, baseType: !5175, size: 64, offset: 960)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{null, !5120}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5139, file: !136, line: 220, baseType: !5179, size: 64, offset: 1024)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!182, !5182}
!5182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5183, size: 64)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !5184)
!5184 = !{!5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !5183, file: !128, line: 290, baseType: !5120, size: 64)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5183, file: !128, line: 291, baseType: !281, size: 128, offset: 64)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5183, file: !128, line: 292, baseType: !281, size: 128, offset: 192)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5183, file: !128, line: 293, baseType: !1730, size: 5568, offset: 320)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !5183, file: !128, line: 294, baseType: !2021, size: 32, offset: 5888)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5183, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5183, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !5183, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !5183, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !5183, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !5183, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !5183, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !5183, file: !128, line: 310, baseType: !249, size: 32, offset: 6016)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !5183, file: !128, line: 311, baseType: !249, size: 32, offset: 6048)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5183, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !5183, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5183, file: !128, line: 321, baseType: !197, size: 8, offset: 6144)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5183, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5183, file: !128, line: 323, baseType: !183, size: 64, offset: 6208)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !5183, file: !128, line: 324, baseType: !4179, offset: 6272)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5139, file: !136, line: 230, baseType: !5206, size: 64, offset: 1088)
!5206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5207, size: 64)
!5207 = !DISubroutineType(types: !5208)
!5208 = !{null, !5182}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5139, file: !136, line: 241, baseType: !5210, size: 64, offset: 1152)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{!182, !5124, !198}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5139, file: !136, line: 250, baseType: !5214, size: 64, offset: 1216)
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5215, size: 64)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{null, !5124}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5139, file: !136, line: 263, baseType: !5218, size: 64, offset: 1280)
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!182, !5120, !182}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5139, file: !136, line: 271, baseType: !5222, size: 64, offset: 1344)
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 64)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!182, !5124}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5139, file: !136, line: 278, baseType: !5226, size: 64, offset: 1408)
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 64)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{!691, !2724}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5139, file: !136, line: 288, baseType: !5230, size: 64, offset: 1472)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 64)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!182, !5120, !1680, !1702, !815}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5139, file: !136, line: 297, baseType: !5175, size: 64, offset: 1536)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5139, file: !136, line: 306, baseType: !5235, size: 64, offset: 1600)
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!182, !821, !5124}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5139, file: !136, line: 307, baseType: !5239, size: 64, offset: 1664)
!5239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!182, !5124, !196, !182}
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5139, file: !136, line: 316, baseType: !5243, size: 64, offset: 1728)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 64)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!88, !5101}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5139, file: !136, line: 326, baseType: !5247, size: 64, offset: 1792)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!182, !5124, !182}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5139, file: !136, line: 334, baseType: !648, size: 64, offset: 1856)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5139, file: !136, line: 340, baseType: !5252, size: 64, offset: 1920)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5253 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !5254, line: 123, flags: DIFlagFwdDecl)
!5254 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5139, file: !136, line: 347, baseType: !182, size: 32, offset: 1984)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5139, file: !136, line: 356, baseType: !182, size: 32, offset: 2016)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5139, file: !136, line: 362, baseType: !194, size: 16, offset: 2048)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5139, file: !136, line: 363, baseType: !194, size: 16, offset: 2064)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5139, file: !136, line: 368, baseType: !7, size: 32, offset: 2080)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5139, file: !136, line: 373, baseType: !7, size: 32, offset: 2112)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5139, file: !136, line: 379, baseType: !198, size: 64, offset: 2176)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5139, file: !136, line: 381, baseType: !198, size: 64, offset: 2240)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5139, file: !136, line: 400, baseType: !1328, size: 16, offset: 2304)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5139, file: !136, line: 406, baseType: !208, size: 8, offset: 2320)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5139, file: !136, line: 409, baseType: !182, size: 32, offset: 2336)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5139, file: !136, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5139, file: !136, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5139, file: !136, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5139, file: !136, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5139, file: !136, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5139, file: !136, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5139, file: !136, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5139, file: !136, line: 445, baseType: !7, size: 32, offset: 2400)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5139, file: !136, line: 459, baseType: !5275, size: 64, offset: 2432)
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5276, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 64)
!5277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !37, line: 99, size: 256, elements: !5278)
!5278 = !{!5279, !5280, !5284}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5277, file: !37, line: 100, baseType: !1801, size: 128)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5277, file: !37, line: 101, baseType: !5281, size: 64, offset: 128)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!911, !2031, !5276, !196}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5277, file: !37, line: 103, baseType: !5285, size: 64, offset: 192)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!911, !2031, !5276, !648, !827}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5139, file: !136, line: 464, baseType: !5275, size: 64, offset: 2496)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5139, file: !136, line: 470, baseType: !1812, size: 64, offset: 2560)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5139, file: !136, line: 479, baseType: !288, size: 64, offset: 2624)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5139, file: !136, line: 484, baseType: !7, size: 32, offset: 2688)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5139, file: !136, line: 485, baseType: !5293, size: 64, offset: 2752)
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5294 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !136, line: 19, flags: DIFlagFwdDecl)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5139, file: !136, line: 488, baseType: !182, size: 32, offset: 2816)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !5125, file: !136, line: 549, baseType: !5297, size: 64, offset: 1088)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5298 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !136, line: 23, flags: DIFlagFwdDecl)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5125, file: !136, line: 552, baseType: !3111, size: 2304, offset: 1152)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !5125, file: !136, line: 554, baseType: !249, size: 32, offset: 3456)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !5125, file: !136, line: 556, baseType: !7, size: 32, offset: 3488)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !5125, file: !136, line: 558, baseType: !7, size: 32, offset: 3520)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !5125, file: !136, line: 560, baseType: !7, size: 32, offset: 3552)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !5125, file: !136, line: 563, baseType: !182, size: 32, offset: 3584)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !5125, file: !136, line: 564, baseType: !198, size: 64, offset: 3648)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !5125, file: !136, line: 573, baseType: !7, size: 32, offset: 3712)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !5125, file: !136, line: 574, baseType: !7, size: 32, offset: 3744)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !5125, file: !136, line: 575, baseType: !288, size: 64, offset: 3776)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5125, file: !136, line: 584, baseType: !7, size: 32, offset: 3840)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !5125, file: !136, line: 593, baseType: !194, size: 16, offset: 3872)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5125, file: !136, line: 595, baseType: !182, size: 32, offset: 3904)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5125, file: !136, line: 596, baseType: !182, size: 32, offset: 3936)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5125, file: !136, line: 597, baseType: !1328, size: 16, offset: 3968)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5125, file: !136, line: 598, baseType: !194, size: 16, offset: 3984)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5125, file: !136, line: 599, baseType: !194, size: 16, offset: 4000)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5125, file: !136, line: 600, baseType: !7, size: 32, offset: 4032)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5125, file: !136, line: 601, baseType: !7, size: 32, offset: 4064)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5125, file: !136, line: 602, baseType: !198, size: 64, offset: 4096)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5125, file: !136, line: 603, baseType: !198, size: 64, offset: 4160)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5125, file: !136, line: 612, baseType: !7, size: 32, offset: 4224)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !5125, file: !136, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5125, file: !136, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !5125, file: !136, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !5125, file: !136, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !5125, file: !136, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !5125, file: !136, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !5125, file: !136, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5125, file: !136, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5125, file: !136, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !5125, file: !136, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !5125, file: !136, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5125, file: !136, line: 653, baseType: !5333, size: 160, offset: 4272)
!5333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 160, elements: !4739)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5125, file: !136, line: 654, baseType: !2518, size: 64, offset: 4480)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !5125, file: !136, line: 659, baseType: !2518, size: 64, offset: 4544)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5125, file: !136, line: 664, baseType: !7, size: 32, offset: 4608)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !5125, file: !136, line: 667, baseType: !7, size: 32, offset: 4640)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !5125, file: !136, line: 668, baseType: !208, size: 8, offset: 4672)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5125, file: !136, line: 671, baseType: !198, size: 64, offset: 4736)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !5125, file: !136, line: 672, baseType: !198, size: 64, offset: 4800)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !5125, file: !136, line: 673, baseType: !208, size: 8, offset: 4864)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !5125, file: !136, line: 674, baseType: !208, size: 8, offset: 4872)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5125, file: !136, line: 675, baseType: !7, size: 32, offset: 4896)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !5125, file: !136, line: 678, baseType: !135, size: 32, offset: 4928)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !5125, file: !136, line: 681, baseType: !1730, size: 5568, offset: 4992)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !5125, file: !136, line: 681, baseType: !1730, size: 5568, offset: 10560)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !5125, file: !136, line: 687, baseType: !183, size: 64, offset: 16128)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !5125, file: !136, line: 693, baseType: !2031, size: 64, offset: 16192)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5125, file: !136, line: 700, baseType: !4179, align: 64, offset: 16256)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5121, file: !128, line: 103, baseType: !2720, size: 64, offset: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5121, file: !128, line: 106, baseType: !281, size: 128, offset: 128)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5121, file: !128, line: 107, baseType: !281, size: 128, offset: 256)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5121, file: !128, line: 109, baseType: !249, size: 32, offset: 384)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5121, file: !128, line: 110, baseType: !249, size: 32, offset: 416)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5121, file: !128, line: 112, baseType: !249, size: 32, offset: 448)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5121, file: !128, line: 113, baseType: !619, offset: 480)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5121, file: !128, line: 114, baseType: !281, size: 128, offset: 512)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5121, file: !128, line: 115, baseType: !194, size: 16, offset: 640)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5121, file: !128, line: 116, baseType: !194, size: 16, offset: 656)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5121, file: !128, line: 117, baseType: !194, size: 16, offset: 672)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5121, file: !128, line: 118, baseType: !194, size: 16, offset: 688)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5121, file: !128, line: 119, baseType: !198, size: 64, offset: 704)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5121, file: !128, line: 120, baseType: !198, size: 64, offset: 768)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5121, file: !128, line: 123, baseType: !198, size: 64, offset: 832)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5121, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5121, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5121, file: !128, line: 126, baseType: !288, size: 64, offset: 960)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5121, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5121, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5121, file: !128, line: 131, baseType: !183, size: 64, offset: 1088)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5121, file: !128, line: 132, baseType: !208, size: 8, offset: 1152)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5121, file: !128, line: 133, baseType: !197, size: 8, offset: 1160)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5121, file: !128, line: 134, baseType: !197, size: 8, offset: 1168)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5121, file: !128, line: 135, baseType: !836, size: 192, offset: 1216)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5121, file: !128, line: 136, baseType: !208, size: 8, offset: 1408)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5121, file: !128, line: 137, baseType: !5112, size: 64, offset: 1472)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5121, file: !128, line: 138, baseType: !648, size: 64, offset: 1536)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5121, file: !128, line: 139, baseType: !648, size: 64, offset: 1600)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5121, file: !128, line: 140, baseType: !648, size: 64, offset: 1664)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5121, file: !128, line: 143, baseType: !5381, size: 64, offset: 1728)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !5383)
!5383 = !{!5384, !5385, !5386}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5382, file: !128, line: 96, baseType: !886, size: 128, align: 64)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5382, file: !128, line: 97, baseType: !182, size: 32, offset: 128)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5382, file: !128, line: 98, baseType: !5387, offset: 160)
!5387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, elements: !2541)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5121, file: !128, line: 144, baseType: !5381, size: 64, offset: 1792)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5121, file: !128, line: 145, baseType: !5381, size: 64, offset: 1856)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5121, file: !128, line: 146, baseType: !5381, size: 64, offset: 1920)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5121, file: !128, line: 147, baseType: !208, size: 8, offset: 1984)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5121, file: !128, line: 148, baseType: !5182, size: 64, offset: 2048)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5121, file: !128, line: 150, baseType: !5394, size: 64, offset: 2112)
!5394 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !289)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5121, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5121, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5121, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5121, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5121, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5121, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5121, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5121, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5121, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5121, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5121, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5121, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5121, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5121, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5121, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5121, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5121, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5121, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5121, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5121, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5121, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5121, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5121, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5121, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5121, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5121, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5121, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5121, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5121, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5121, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5121, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5121, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5121, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5121, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5121, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5121, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5121, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5121, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5121, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5121, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5121, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5121, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5121, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5121, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5121, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5121, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5121, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5121, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5121, file: !128, line: 208, baseType: !691, size: 8, offset: 2256)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5121, file: !128, line: 210, baseType: !249, size: 32, offset: 2272)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5121, file: !128, line: 212, baseType: !426, size: 64, offset: 2304)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5121, file: !128, line: 213, baseType: !426, size: 64, offset: 2368)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5121, file: !128, line: 214, baseType: !281, size: 128, offset: 2432)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5121, file: !128, line: 215, baseType: !2266, size: 256, offset: 2560)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5121, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5121, file: !128, line: 220, baseType: !249, size: 32, offset: 2848)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5121, file: !128, line: 221, baseType: !249, size: 32, offset: 2880)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5121, file: !128, line: 222, baseType: !249, size: 32, offset: 2912)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5121, file: !128, line: 224, baseType: !1730, size: 5568, offset: 2944)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5121, file: !128, line: 225, baseType: !1730, size: 5568, offset: 8512)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5121, file: !128, line: 227, baseType: !5456, size: 256, offset: 14080)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !2267, line: 168, size: 256, elements: !5457)
!5457 = !{!5458}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5456, file: !2267, line: 169, baseType: !2266, size: 256)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5121, file: !128, line: 228, baseType: !2266, size: 256, offset: 14336)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5121, file: !128, line: 230, baseType: !5461, size: 64, offset: 14592)
!5461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5462, size: 64)
!5462 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5121, file: !128, line: 231, baseType: !183, size: 64, offset: 14656)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5121, file: !128, line: 233, baseType: !827, size: 64, offset: 14720)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5121, file: !128, line: 234, baseType: !183, size: 64, offset: 14784)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5121, file: !128, line: 236, baseType: !208, size: 8, offset: 14848)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5121, file: !128, line: 237, baseType: !836, size: 192, offset: 14912)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5121, file: !128, line: 238, baseType: !145, size: 32, offset: 15104)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5121, file: !128, line: 239, baseType: !229, size: 64, offset: 15168)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5121, file: !128, line: 240, baseType: !4179, offset: 15232)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !5102, file: !5103, line: 71, baseType: !281, size: 128, offset: 512)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !5102, file: !5103, line: 72, baseType: !2743, size: 704, offset: 640)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5102, file: !5103, line: 74, baseType: !886, size: 128, align: 64, offset: 1344)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !5102, file: !5103, line: 76, baseType: !182, size: 32, offset: 1472)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !5102, file: !5103, line: 83, baseType: !198, size: 64, offset: 1536)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5102, file: !5103, line: 85, baseType: !182, size: 32, offset: 1600)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !5102, file: !5103, line: 86, baseType: !182, size: 32, offset: 1632)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !5102, file: !5103, line: 88, baseType: !208, size: 8, offset: 1664)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !5102, file: !5103, line: 89, baseType: !208, size: 8, offset: 1672)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !5102, file: !5103, line: 90, baseType: !208, size: 8, offset: 1680)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5102, file: !5103, line: 92, baseType: !194, size: 16, offset: 1696)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !5102, file: !5103, line: 93, baseType: !156, size: 32, offset: 1728)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !5102, file: !5103, line: 96, baseType: !5112, size: 64, offset: 1792)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !5102, file: !5103, line: 100, baseType: !5485, size: 192, offset: 1856)
!5485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !5103, line: 35, size: 192, elements: !5486)
!5486 = !{!5487, !5502}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5485, file: !5103, line: 36, baseType: !5488, size: 128)
!5488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5489, line: 42, size: 128, elements: !5490)
!5489 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5490 = !{!5491, !5500, !5501}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5488, file: !5489, line: 43, baseType: !5492, size: 64)
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 64)
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5489, line: 11, size: 256, elements: !5494)
!5494 = !{!5495, !5496, !5497, !5498, !5499}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5493, file: !5489, line: 12, baseType: !198, size: 64)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5493, file: !5489, line: 13, baseType: !7, size: 32, offset: 64)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5493, file: !5489, line: 14, baseType: !7, size: 32, offset: 96)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5493, file: !5489, line: 15, baseType: !3904, size: 64, offset: 128)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5493, file: !5489, line: 17, baseType: !7, size: 32, offset: 192)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5488, file: !5489, line: 44, baseType: !7, size: 32, offset: 64)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5488, file: !5489, line: 45, baseType: !7, size: 32, offset: 96)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5485, file: !5103, line: 37, baseType: !7, size: 32, offset: 128)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !5102, file: !5103, line: 101, baseType: !5504, size: 64, offset: 2048)
!5504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !5102, file: !5103, line: 103, baseType: !7, size: 32, offset: 2112)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !5102, file: !5103, line: 106, baseType: !7, size: 32, offset: 2144)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5102, file: !5103, line: 112, baseType: !2724, size: 64, offset: 2176)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !5102, file: !5103, line: 115, baseType: !5112, size: 64, offset: 2240)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !5102, file: !5103, line: 123, baseType: !5510, size: 64, offset: 2304)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{null, !5101}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !5102, file: !5103, line: 129, baseType: !5514, size: 512, offset: 2368)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !5103, line: 41, size: 512, elements: !5515)
!5515 = !{!5516, !5517, !5518, !5519, !5520, !5521, !5523, !5524, !5525, !5526}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5514, file: !5103, line: 42, baseType: !196, size: 64)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5514, file: !5103, line: 43, baseType: !182, size: 32, offset: 64)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5514, file: !5103, line: 44, baseType: !5492, size: 64, offset: 128)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5514, file: !5103, line: 45, baseType: !182, size: 32, offset: 192)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5514, file: !5103, line: 47, baseType: !3904, size: 64, offset: 256)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5514, file: !5103, line: 49, baseType: !5522, size: 32, offset: 320)
!5522 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !182)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5514, file: !5103, line: 50, baseType: !5522, size: 32, offset: 352)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5514, file: !5103, line: 51, baseType: !5522, size: 32, offset: 384)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5514, file: !5103, line: 52, baseType: !5522, size: 32, offset: 416)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5514, file: !5103, line: 53, baseType: !5522, size: 32, offset: 448)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !5102, file: !5103, line: 131, baseType: !5112, size: 64, offset: 2880)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5102, file: !5103, line: 139, baseType: !182, size: 32, offset: 2944)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5102, file: !5103, line: 140, baseType: !182, size: 32, offset: 2976)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5102, file: !5103, line: 141, baseType: !198, size: 64, offset: 3008)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5102, file: !5103, line: 143, baseType: !208, size: 8, offset: 3072)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !5102, file: !5103, line: 144, baseType: !7, size: 32, offset: 3104)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "q_next", scope: !4850, file: !201, line: 1084, baseType: !5534, size: 64, offset: 1472)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4850, file: !201, line: 1085, baseType: !5536, size: 64, offset: 1536)
!5536 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_scb_callback", file: !201, line: 1059, baseType: !5537)
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{null, !5540, !5534}
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_ha_t", file: !201, line: 1057, baseType: !5542)
!5542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_ha", file: !201, line: 1005, size: 3712, elements: !5543)
!5543 = !{!5544, !5546, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5564, !5565, !5566, !5573, !5585, !5592, !5594, !5624, !5641, !5642, !5672, !5741, !5766, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5823, !6100, !6101, !6102, !6103, !6104, !6105}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "ha_id", scope: !5542, file: !201, line: 1006, baseType: !5545, size: 40)
!5545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 40, elements: !3415)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb_active", scope: !5542, file: !201, line: 1007, baseType: !5547, size: 128, offset: 64)
!5547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 128, elements: !1238)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "io_addr", scope: !5542, file: !201, line: 1008, baseType: !186, size: 32, offset: 192)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "ntargets", scope: !5542, file: !201, line: 1009, baseType: !205, size: 8, offset: 224)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "nbus", scope: !5542, file: !201, line: 1010, baseType: !205, size: 8, offset: 232)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "nlun", scope: !5542, file: !201, line: 1011, baseType: !205, size: 8, offset: 240)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "ad_type", scope: !5542, file: !201, line: 1012, baseType: !215, size: 16, offset: 256)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "host_num", scope: !5542, file: !201, line: 1013, baseType: !215, size: 16, offset: 272)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "max_xfer", scope: !5542, file: !201, line: 1014, baseType: !186, size: 32, offset: 288)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmds", scope: !5542, file: !201, line: 1015, baseType: !186, size: 32, offset: 320)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "num_ioctl", scope: !5542, file: !201, line: 1016, baseType: !186, size: 32, offset: 352)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5542, file: !201, line: 1017, baseType: !5558, size: 192, offset: 384)
!5558 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_stat_t", file: !201, line: 956, baseType: !5559)
!5559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_stat", file: !201, line: 952, size: 192, elements: !5560)
!5560 = !{!5561, !5562, !5563}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "residue_len", scope: !5559, file: !201, line: 953, baseType: !186, size: 32)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "scb_addr", scope: !5559, file: !201, line: 954, baseType: !183, size: 64, offset: 64)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5559, file: !201, line: 955, baseType: !4986, size: 32, offset: 128)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "scbs", scope: !5542, file: !201, line: 1018, baseType: !5534, size: 64, offset: 576)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "scb_freelist", scope: !5542, file: !201, line: 1019, baseType: !5534, size: 64, offset: 640)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "scb_waitlist", scope: !5542, file: !201, line: 1020, baseType: !5567, size: 192, offset: 704)
!5567 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_wait_queue_entry_t", file: !201, line: 974, baseType: !5568)
!5568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_wait_queue", file: !201, line: 970, size: 192, elements: !5569)
!5569 = !{!5570, !5571, !5572}
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5568, file: !201, line: 971, baseType: !5101, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5568, file: !201, line: 972, baseType: !5101, size: 64, offset: 64)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5568, file: !201, line: 973, baseType: !182, size: 32, offset: 128)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "copp_waitlist", scope: !5542, file: !201, line: 1021, baseType: !5574, size: 192, offset: 896)
!5574 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_copp_queue_t", file: !201, line: 985, baseType: !5575)
!5575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_copp_queue", file: !201, line: 981, size: 192, elements: !5576)
!5576 = !{!5577, !5583, !5584}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5575, file: !201, line: 982, baseType: !5578, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5579, size: 64)
!5579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_copp_wait_item", file: !201, line: 976, size: 128, elements: !5580)
!5580 = !{!5581, !5582}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cmd", scope: !5579, file: !201, line: 977, baseType: !5101, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5579, file: !201, line: 978, baseType: !5578, size: 64, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5575, file: !201, line: 983, baseType: !5578, size: 64, offset: 64)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5575, file: !201, line: 984, baseType: !182, size: 32, offset: 128)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "scb_activelist", scope: !5542, file: !201, line: 1022, baseType: !5586, size: 192, offset: 1088)
!5586 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_scb_queue_t", file: !201, line: 965, baseType: !5587)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_scb_queue", file: !201, line: 961, size: 192, elements: !5588)
!5588 = !{!5589, !5590, !5591}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5587, file: !201, line: 962, baseType: !5534, size: 64)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5587, file: !201, line: 963, baseType: !5534, size: 64, offset: 64)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5587, file: !201, line: 964, baseType: !182, size: 32, offset: 128)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !5542, file: !201, line: 1023, baseType: !5593, size: 64, offset: 1280)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "adapt", scope: !5542, file: !201, line: 1024, baseType: !5595, size: 64, offset: 1344)
!5595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5596, size: 64)
!5596 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_ADAPTER", file: !201, line: 662, baseType: !5597)
!5597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 655, size: 4416, elements: !5598)
!5598 = !{!5599, !5616, !5620, !5621, !5622, !5623}
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5597, file: !201, line: 656, baseType: !5600, size: 4128)
!5600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5601, size: 4128, elements: !5614)
!5601 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_STATUS", file: !201, line: 653, baseType: !5602)
!5602 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !201, line: 644, size: 32, elements: !5603)
!5603 = !{!5604, !5612}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !5602, file: !201, line: 650, baseType: !5605, size: 32)
!5605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5602, file: !201, line: 645, size: 32, elements: !5606)
!5606 = !{!5607, !5609, !5610, !5611}
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5605, file: !201, line: 646, baseType: !5608, size: 8)
!5608 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !205)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "command_id", scope: !5605, file: !201, line: 647, baseType: !5608, size: 8, offset: 8)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "basic_status", scope: !5605, file: !201, line: 648, baseType: !5608, size: 8, offset: 16)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "extended_status", scope: !5605, file: !201, line: 649, baseType: !5608, size: 8, offset: 24)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5602, file: !201, line: 652, baseType: !5613, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !186)
!5614 = !{!5615}
!5615 = !DISubrange(count: 129)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "p_status_start", scope: !5597, file: !201, line: 657, baseType: !5617, size: 64, offset: 4160)
!5617 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5618)
!5618 = !DIDerivedType(tag: DW_TAG_typedef, name: "PIPS_STATUS", file: !201, line: 653, baseType: !5619)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "p_status_end", scope: !5597, file: !201, line: 658, baseType: !5617, size: 64, offset: 4224)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "p_status_tail", scope: !5597, file: !201, line: 659, baseType: !5617, size: 64, offset: 4288)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "hw_status_start", scope: !5597, file: !201, line: 660, baseType: !5613, size: 32, offset: 4352)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "hw_status_tail", scope: !5597, file: !201, line: 661, baseType: !5613, size: 32, offset: 4384)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "logical_drive_info", scope: !5542, file: !201, line: 1025, baseType: !5625, size: 64, offset: 1408)
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 64)
!5626 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_LD_INFO", file: !201, line: 612, baseType: !5627)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 608, size: 544, elements: !5628)
!5628 = !{!5629, !5630, !5631}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "no_of_log_drive", scope: !5627, file: !201, line: 609, baseType: !205, size: 8)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5627, file: !201, line: 610, baseType: !5063, size: 24, offset: 8)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "drive_info", scope: !5627, file: !201, line: 611, baseType: !5632, size: 512, offset: 32)
!5632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5633, size: 512, elements: !375)
!5633 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_DRIVE_INFO", file: !201, line: 606, baseType: !5634)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 600, size: 64, elements: !5635)
!5635 = !{!5636, !5637, !5638, !5639, !5640}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "logical_id", scope: !5634, file: !201, line: 601, baseType: !205, size: 8)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5634, file: !201, line: 602, baseType: !205, size: 8, offset: 8)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "raid_level", scope: !5634, file: !201, line: 603, baseType: !205, size: 8, offset: 16)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5634, file: !201, line: 604, baseType: !205, size: 8, offset: 24)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "sector_count", scope: !5634, file: !201, line: 605, baseType: !186, size: 32, offset: 32)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "logical_drive_info_dma_addr", scope: !5542, file: !201, line: 1026, baseType: !3904, size: 64, offset: 1472)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "enq", scope: !5542, file: !201, line: 1027, baseType: !5643, size: 64, offset: 1536)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_ENQ", file: !201, line: 687, baseType: !5645)
!5645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 664, size: 1568, elements: !5646)
!5646 = !{!5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5657, !5658, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "ucLogDriveCount", scope: !5645, file: !201, line: 665, baseType: !205, size: 8)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "ucMiscFlag", scope: !5645, file: !201, line: 666, baseType: !205, size: 8, offset: 8)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "ucSLTFlag", scope: !5645, file: !201, line: 667, baseType: !205, size: 8, offset: 16)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "ucBSTFlag", scope: !5645, file: !201, line: 668, baseType: !205, size: 8, offset: 24)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "ucPwrChgCnt", scope: !5645, file: !201, line: 669, baseType: !205, size: 8, offset: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "ucWrongAdrCnt", scope: !5645, file: !201, line: 670, baseType: !205, size: 8, offset: 40)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "ucUnidentCnt", scope: !5645, file: !201, line: 671, baseType: !205, size: 8, offset: 48)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "ucNVramDevChgCnt", scope: !5645, file: !201, line: 672, baseType: !205, size: 8, offset: 56)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "CodeBlkVersion", scope: !5645, file: !201, line: 673, baseType: !5656, size: 64, offset: 64)
!5656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 64, elements: !375)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "BootBlkVersion", scope: !5645, file: !201, line: 674, baseType: !5656, size: 64, offset: 128)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "ulDriveSize", scope: !5645, file: !201, line: 675, baseType: !5659, size: 256, offset: 192)
!5659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 256, elements: !375)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "ucConcurrentCmdCount", scope: !5645, file: !201, line: 676, baseType: !205, size: 8, offset: 448)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "ucMaxPhysicalDevices", scope: !5645, file: !201, line: 677, baseType: !205, size: 8, offset: 456)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "usFlashRepgmCount", scope: !5645, file: !201, line: 678, baseType: !215, size: 16, offset: 464)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "ucDefunctDiskCount", scope: !5645, file: !201, line: 679, baseType: !205, size: 8, offset: 480)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "ucRebuildFlag", scope: !5645, file: !201, line: 680, baseType: !205, size: 8, offset: 488)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "ucOfflineLogDrvCount", scope: !5645, file: !201, line: 681, baseType: !205, size: 8, offset: 496)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "ucCriticalDrvCount", scope: !5645, file: !201, line: 682, baseType: !205, size: 8, offset: 504)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "usConfigUpdateCount", scope: !5645, file: !201, line: 683, baseType: !215, size: 16, offset: 512)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "ucBlkFlag", scope: !5645, file: !201, line: 684, baseType: !205, size: 8, offset: 528)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5645, file: !201, line: 685, baseType: !205, size: 8, offset: 536)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "usAddrDeadDisk", scope: !5645, file: !201, line: 686, baseType: !5671, size: 1024, offset: 544)
!5671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 1024, elements: !1774)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "conf", scope: !5542, file: !201, line: 1028, baseType: !5673, size: 64, offset: 1600)
!5673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5674 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_CONF", file: !201, line: 744, baseType: !5675)
!5675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 728, size: 36064, elements: !5676)
!5676 = !{!5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5699, !5722, !5737}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "ucLogDriveCount", scope: !5675, file: !201, line: 729, baseType: !205, size: 8)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "ucDateD", scope: !5675, file: !201, line: 730, baseType: !205, size: 8, offset: 8)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "ucDateM", scope: !5675, file: !201, line: 731, baseType: !205, size: 8, offset: 16)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "ucDateY", scope: !5675, file: !201, line: 732, baseType: !205, size: 8, offset: 24)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "init_id", scope: !5675, file: !201, line: 733, baseType: !4986, size: 32, offset: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "host_id", scope: !5675, file: !201, line: 734, baseType: !5058, size: 96, offset: 64)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "time_sign", scope: !5675, file: !201, line: 735, baseType: !5656, size: 64, offset: 160)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "UserOpt", scope: !5675, file: !201, line: 736, baseType: !186, size: 32, offset: 224)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "user_field", scope: !5675, file: !201, line: 737, baseType: !215, size: 16, offset: 256)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "ucRebuildRate", scope: !5675, file: !201, line: 738, baseType: !205, size: 8, offset: 272)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "ucReserve", scope: !5675, file: !201, line: 739, baseType: !205, size: 8, offset: 280)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_disc", scope: !5675, file: !201, line: 740, baseType: !5689, size: 192, offset: 288)
!5689 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_HARDWARE", file: !201, line: 726, baseType: !5690)
!5690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 718, size: 192, elements: !5691)
!5691 = !{!5692, !5693, !5694, !5695, !5696, !5697, !5698}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "board_disc", scope: !5690, file: !201, line: 719, baseType: !5656, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !5690, file: !201, line: 720, baseType: !5656, size: 64, offset: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "ucNoChanType", scope: !5690, file: !201, line: 721, baseType: !205, size: 8, offset: 128)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "ucNoHostIntType", scope: !5690, file: !201, line: 722, baseType: !205, size: 8, offset: 136)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "ucCompression", scope: !5690, file: !201, line: 723, baseType: !205, size: 8, offset: 144)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "ucNvramType", scope: !5690, file: !201, line: 724, baseType: !205, size: 8, offset: 152)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "ulNvramSize", scope: !5690, file: !201, line: 725, baseType: !186, size: 32, offset: 160)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "logical_drive", scope: !5675, file: !201, line: 741, baseType: !5700, size: 13056, offset: 480)
!5700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5701, size: 13056, elements: !375)
!5701 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_LD", file: !201, line: 716, baseType: !5702)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 706, size: 1632, elements: !5703)
!5703 = !{!5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "ucUserField", scope: !5702, file: !201, line: 707, baseType: !215, size: 16)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "ucState", scope: !5702, file: !201, line: 708, baseType: !205, size: 8, offset: 16)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "ucRaidCacheParam", scope: !5702, file: !201, line: 709, baseType: !205, size: 8, offset: 24)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "ucNoOfChunkUnits", scope: !5702, file: !201, line: 710, baseType: !205, size: 8, offset: 32)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "ucStripeSize", scope: !5702, file: !201, line: 711, baseType: !205, size: 8, offset: 40)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "ucParams", scope: !5702, file: !201, line: 712, baseType: !205, size: 8, offset: 48)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "ucReserved", scope: !5702, file: !201, line: 713, baseType: !205, size: 8, offset: 56)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "ulLogDrvSize", scope: !5702, file: !201, line: 714, baseType: !186, size: 32, offset: 64)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !5702, file: !201, line: 715, baseType: !5713, size: 1536, offset: 96)
!5713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5714, size: 1536, elements: !222)
!5714 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_CHUNK", file: !201, line: 704, baseType: !5715)
!5715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 698, size: 96, elements: !5716)
!5716 = !{!5717, !5718, !5719, !5720, !5721}
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "ucChn", scope: !5715, file: !201, line: 699, baseType: !205, size: 8)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "ucTgt", scope: !5715, file: !201, line: 700, baseType: !205, size: 8, offset: 8)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "ucReserved", scope: !5715, file: !201, line: 701, baseType: !215, size: 16, offset: 16)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "ulStartSect", scope: !5715, file: !201, line: 702, baseType: !186, size: 32, offset: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "ulNoOfSects", scope: !5715, file: !201, line: 703, baseType: !186, size: 32, offset: 64)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5675, file: !201, line: 742, baseType: !5723, size: 18432, offset: 13536)
!5723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5724, size: 18432, elements: !5736)
!5724 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_DEVSTATE", file: !201, line: 696, baseType: !5725)
!5725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 689, size: 288, elements: !5726)
!5726 = !{!5727, !5728, !5729, !5730, !5731, !5732}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "ucInitiator", scope: !5725, file: !201, line: 690, baseType: !205, size: 8)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "ucParameters", scope: !5725, file: !201, line: 691, baseType: !205, size: 8, offset: 8)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "ucMiscFlag", scope: !5725, file: !201, line: 692, baseType: !205, size: 8, offset: 16)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "ucState", scope: !5725, file: !201, line: 693, baseType: !205, size: 8, offset: 24)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "ulBlockCount", scope: !5725, file: !201, line: 694, baseType: !186, size: 32, offset: 32)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "ucDeviceId", scope: !5725, file: !201, line: 695, baseType: !5733, size: 224, offset: 64)
!5733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 224, elements: !5734)
!5734 = !{!5735}
!5735 = !DISubrange(count: 28)
!5736 = !{!1239, !223}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5675, file: !201, line: 743, baseType: !5738, size: 4096, offset: 31968)
!5738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 4096, elements: !5739)
!5739 = !{!5740}
!5740 = !DISubrange(count: 512)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "nvram", scope: !5542, file: !201, line: 1029, baseType: !5742, size: 64, offset: 1664)
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5743, size: 64)
!5743 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_NVRAM_P5", file: !201, line: 764, baseType: !5744)
!5744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 746, size: 1024, elements: !5745)
!5745 = !{!5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5760, !5761, !5762}
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !5744, file: !201, line: 747, baseType: !186, size: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5744, file: !201, line: 748, baseType: !205, size: 8, offset: 32)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_slot", scope: !5744, file: !201, line: 749, baseType: !205, size: 8, offset: 40)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_type", scope: !5744, file: !201, line: 750, baseType: !215, size: 16, offset: 48)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_bios", scope: !5744, file: !201, line: 751, baseType: !5656, size: 64, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "versioning", scope: !5744, file: !201, line: 752, baseType: !205, size: 8, offset: 128)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "version_mismatch", scope: !5744, file: !201, line: 753, baseType: !205, size: 8, offset: 136)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5744, file: !201, line: 754, baseType: !205, size: 8, offset: 144)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "operating_system", scope: !5744, file: !201, line: 755, baseType: !205, size: 8, offset: 152)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "driver_high", scope: !5744, file: !201, line: 756, baseType: !4986, size: 32, offset: 160)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "driver_low", scope: !5744, file: !201, line: 757, baseType: !4986, size: 32, offset: 192)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "BiosCompatibilityID", scope: !5744, file: !201, line: 758, baseType: !5656, size: 64, offset: 224)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "ReservedForOS2", scope: !5744, file: !201, line: 759, baseType: !5656, size: 64, offset: 288)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "bios_high", scope: !5744, file: !201, line: 760, baseType: !4986, size: 32, offset: 352)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "bios_low", scope: !5744, file: !201, line: 761, baseType: !4986, size: 32, offset: 384)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_order", scope: !5744, file: !201, line: 762, baseType: !221, size: 128, offset: 416)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "Filler", scope: !5744, file: !201, line: 763, baseType: !5763, size: 480, offset: 544)
!5763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 480, elements: !5764)
!5764 = !{!5765}
!5765 = !DISubrange(count: 60)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "subsys", scope: !5542, file: !201, line: 1030, baseType: !5767, size: 64, offset: 1728)
!5767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5768, size: 64)
!5768 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SUBSYS", file: !201, line: 788, baseType: !5769)
!5769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IPS_SUBSYS", file: !201, line: 786, size: 4096, elements: !5770)
!5770 = !{!5771}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5769, file: !201, line: 787, baseType: !5772, size: 4096)
!5772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 4096, elements: !2122)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_data", scope: !5542, file: !201, line: 1031, baseType: !196, size: 64, offset: 1792)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_datasize", scope: !5542, file: !201, line: 1032, baseType: !186, size: 32, offset: 1856)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_in_progress", scope: !5542, file: !201, line: 1033, baseType: !186, size: 32, offset: 1888)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5542, file: !201, line: 1034, baseType: !182, size: 32, offset: 1920)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "waitflag", scope: !5542, file: !201, line: 1035, baseType: !205, size: 8, offset: 1952)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5542, file: !201, line: 1036, baseType: !205, size: 8, offset: 1960)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_reset", scope: !5542, file: !201, line: 1037, baseType: !182, size: 32, offset: 1984)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "reset_count", scope: !5542, file: !201, line: 1038, baseType: !215, size: 16, offset: 2016)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "last_ffdc", scope: !5542, file: !201, line: 1039, baseType: !1317, size: 64, offset: 2048)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "slot_num", scope: !5542, file: !201, line: 1040, baseType: !205, size: 8, offset: 2112)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_len", scope: !5542, file: !201, line: 1041, baseType: !182, size: 32, offset: 2144)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_busaddr", scope: !5542, file: !201, line: 1042, baseType: !3904, size: 64, offset: 2176)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "bios_version", scope: !5542, file: !201, line: 1043, baseType: !5656, size: 64, offset: 2240)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "mem_addr", scope: !5542, file: !201, line: 1044, baseType: !186, size: 32, offset: 2304)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "io_len", scope: !5542, file: !201, line: 1045, baseType: !186, size: 32, offset: 2336)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "mem_len", scope: !5542, file: !201, line: 1046, baseType: !186, size: 32, offset: 2368)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "mem_ptr", scope: !5542, file: !201, line: 1047, baseType: !196, size: 64, offset: 2432)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "ioremap_ptr", scope: !5542, file: !201, line: 1048, baseType: !196, size: 64, offset: 2496)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5542, file: !201, line: 1049, baseType: !5792, size: 768, offset: 2560)
!5792 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_hw_func_t", file: !201, line: 1003, baseType: !5793)
!5793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 990, size: 768, elements: !5794)
!5794 = !{!5795, !5800, !5804, !5805, !5806, !5807, !5808, !5812, !5813, !5817, !5818, !5819}
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5793, file: !201, line: 991, baseType: !5796, size: 64)
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5797, size: 64)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!182, !5799}
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 64)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "issue", scope: !5793, file: !201, line: 992, baseType: !5801, size: 64, offset: 64)
!5801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5802, size: 64)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{!182, !5799, !5534}
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "isinit", scope: !5793, file: !201, line: 993, baseType: !5796, size: 64, offset: 128)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "isintr", scope: !5793, file: !201, line: 994, baseType: !5796, size: 64, offset: 192)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5793, file: !201, line: 995, baseType: !5796, size: 64, offset: 256)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "erasebios", scope: !5793, file: !201, line: 996, baseType: !5796, size: 64, offset: 320)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "programbios", scope: !5793, file: !201, line: 997, baseType: !5809, size: 64, offset: 384)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = !DISubroutineType(types: !5811)
!5811 = !{!182, !5799, !196, !186, !186}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "verifybios", scope: !5793, file: !201, line: 998, baseType: !5809, size: 64, offset: 448)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "statinit", scope: !5793, file: !201, line: 999, baseType: !5814, size: 64, offset: 512)
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5815, size: 64)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{null, !5799}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "intr", scope: !5793, file: !201, line: 1000, baseType: !5796, size: 64, offset: 576)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "enableint", scope: !5793, file: !201, line: 1001, baseType: !5814, size: 64, offset: 640)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "statupd", scope: !5793, file: !201, line: 1002, baseType: !5820, size: 64, offset: 704)
!5820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 64)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!186, !5799}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "pcidev", scope: !5542, file: !201, line: 1050, baseType: !5824, size: 64, offset: 3328)
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !5826, line: 309, size: 19264, elements: !5827)
!5826 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!5827 = !{!5828, !5829, !5901, !5902, !5903, !5904, !5915, !5916, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5932, !5997, !5998, !5999, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6073, !6074, !6076, !6077, !6078, !6079, !6081, !6082, !6083, !6086, !6093, !6094, !6095, !6096, !6097, !6098, !6099}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !5825, file: !5826, line: 310, baseType: !281, size: 128)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5825, file: !5826, line: 311, baseType: !5830, size: 64, offset: 128)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !5826, line: 605, size: 8064, elements: !5832)
!5832 = !{!5833, !5834, !5835, !5836, !5837, !5838, !5839, !5854, !5855, !5856, !5880, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5893, !5894, !5896, !5897, !5898, !5899, !5900}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5831, file: !5826, line: 606, baseType: !281, size: 128)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5831, file: !5826, line: 607, baseType: !5830, size: 64, offset: 128)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5831, file: !5826, line: 608, baseType: !281, size: 128, offset: 192)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5831, file: !5826, line: 609, baseType: !281, size: 128, offset: 320)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !5831, file: !5826, line: 610, baseType: !5824, size: 64, offset: 448)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !5831, file: !5826, line: 611, baseType: !281, size: 128, offset: 512)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5831, file: !5826, line: 613, baseType: !5840, size: 256, offset: 640)
!5840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5841, size: 256, elements: !1238)
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 64)
!5842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !5843, line: 20, size: 512, elements: !5844)
!5843 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!5844 = !{!5845, !5847, !5848, !5849, !5850, !5851, !5852, !5853}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5842, file: !5843, line: 21, baseType: !5846, size: 64)
!5846 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !185, line: 158, baseType: !4665)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5842, file: !5843, line: 22, baseType: !5846, size: 64, offset: 64)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5842, file: !5843, line: 23, baseType: !648, size: 64, offset: 128)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5842, file: !5843, line: 24, baseType: !198, size: 64, offset: 192)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5842, file: !5843, line: 25, baseType: !198, size: 64, offset: 256)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5842, file: !5843, line: 26, baseType: !5841, size: 64, offset: 320)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5842, file: !5843, line: 26, baseType: !5841, size: 64, offset: 384)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5842, file: !5843, line: 26, baseType: !5841, size: 64, offset: 448)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !5831, file: !5826, line: 614, baseType: !281, size: 128, offset: 896)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !5831, file: !5826, line: 615, baseType: !5842, size: 512, offset: 1024)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5831, file: !5826, line: 617, baseType: !5857, size: 64, offset: 1536)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !5826, line: 731, size: 320, elements: !5859)
!5859 = !{!5860, !5864, !5868, !5872, !5876}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !5858, file: !5826, line: 732, baseType: !5861, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 64)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!182, !5830}
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !5858, file: !5826, line: 733, baseType: !5865, size: 64, offset: 64)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{null, !5830}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !5858, file: !5826, line: 734, baseType: !5869, size: 64, offset: 128)
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!183, !5830, !7, !182}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5858, file: !5826, line: 735, baseType: !5873, size: 64, offset: 192)
!5873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5874, size: 64)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!182, !5830, !7, !182, !182, !4217}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5858, file: !5826, line: 736, baseType: !5877, size: 64, offset: 256)
!5877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5878, size: 64)
!5878 = !DISubroutineType(types: !5879)
!5879 = !{!182, !5830, !7, !182, !182, !187}
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !5831, file: !5826, line: 618, baseType: !5881, size: 64, offset: 1600)
!5881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5882, size: 64)
!5882 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !5826, line: 537, flags: DIFlagFwdDecl)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5831, file: !5826, line: 619, baseType: !183, size: 64, offset: 1664)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !5831, file: !5826, line: 620, baseType: !5252, size: 64, offset: 1728)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5831, file: !5826, line: 622, baseType: !208, size: 8, offset: 1792)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !5831, file: !5826, line: 623, baseType: !208, size: 8, offset: 1800)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !5831, file: !5826, line: 624, baseType: !208, size: 8, offset: 1808)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !5831, file: !5826, line: 625, baseType: !208, size: 8, offset: 1816)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5831, file: !5826, line: 630, baseType: !5890, size: 384, offset: 1824)
!5890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 384, elements: !5891)
!5891 = !{!5892}
!5892 = !DISubrange(count: 48)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !5831, file: !5826, line: 632, baseType: !194, size: 16, offset: 2208)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !5831, file: !5826, line: 633, baseType: !5895, size: 16, offset: 2224)
!5895 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !5826, line: 237, baseType: !194)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !5831, file: !5826, line: 634, baseType: !2031, size: 64, offset: 2240)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5831, file: !5826, line: 635, baseType: !1730, size: 5568, offset: 2304)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !5831, file: !5826, line: 636, baseType: !1826, size: 64, offset: 7872)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !5831, file: !5826, line: 637, baseType: !1826, size: 64, offset: 7936)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !5831, file: !5826, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !5825, file: !5826, line: 312, baseType: !5830, size: 64, offset: 192)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5825, file: !5826, line: 314, baseType: !183, size: 64, offset: 256)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !5825, file: !5826, line: 315, baseType: !5252, size: 64, offset: 320)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5825, file: !5826, line: 316, baseType: !5905, size: 64, offset: 384)
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !5826, line: 69, size: 832, elements: !5907)
!5907 = !{!5908, !5909, !5910, !5913, !5914}
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5906, file: !5826, line: 70, baseType: !5830, size: 64)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5906, file: !5826, line: 71, baseType: !281, size: 128, offset: 64)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5906, file: !5826, line: 72, baseType: !5911, size: 64, offset: 192)
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 64)
!5912 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !5826, line: 72, flags: DIFlagFwdDecl)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5906, file: !5826, line: 73, baseType: !208, size: 8, offset: 256)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5906, file: !5826, line: 74, baseType: !1733, size: 512, offset: 320)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !5825, file: !5826, line: 318, baseType: !7, size: 32, offset: 448)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5825, file: !5826, line: 319, baseType: !194, size: 16, offset: 480)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5825, file: !5826, line: 320, baseType: !194, size: 16, offset: 496)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !5825, file: !5826, line: 321, baseType: !194, size: 16, offset: 512)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !5825, file: !5826, line: 322, baseType: !194, size: 16, offset: 528)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5825, file: !5826, line: 323, baseType: !7, size: 32, offset: 544)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !5825, file: !5826, line: 324, baseType: !206, size: 8, offset: 576)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !5825, file: !5826, line: 325, baseType: !206, size: 8, offset: 584)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !5825, file: !5826, line: 330, baseType: !206, size: 8, offset: 592)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !5825, file: !5826, line: 331, baseType: !206, size: 8, offset: 600)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !5825, file: !5826, line: 332, baseType: !206, size: 8, offset: 608)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !5825, file: !5826, line: 333, baseType: !206, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !5825, file: !5826, line: 334, baseType: !206, size: 8, offset: 624)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !5825, file: !5826, line: 335, baseType: !206, size: 8, offset: 632)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !5825, file: !5826, line: 336, baseType: !216, size: 16, offset: 640)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !5825, file: !5826, line: 337, baseType: !5931, size: 64, offset: 704)
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5825, file: !5826, line: 339, baseType: !5933, size: 64, offset: 768)
!5933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5934, size: 64)
!5934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !5826, line: 858, size: 2048, elements: !5935)
!5935 = !{!5936, !5937, !5938, !5950, !5954, !5958, !5962, !5966, !5967, !5971, !5990, !5991, !5992}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5934, file: !5826, line: 859, baseType: !281, size: 128)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5934, file: !5826, line: 860, baseType: !648, size: 64, offset: 128)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5934, file: !5826, line: 861, baseType: !5939, size: 64, offset: 192)
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5940, size: 64)
!5940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5941)
!5941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !2115, line: 38, size: 256, elements: !5942)
!5942 = !{!5943, !5944, !5945, !5946, !5947, !5948, !5949}
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5941, file: !2115, line: 39, baseType: !189, size: 32)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5941, file: !2115, line: 39, baseType: !189, size: 32, offset: 32)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !5941, file: !2115, line: 40, baseType: !189, size: 32, offset: 64)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !5941, file: !2115, line: 40, baseType: !189, size: 32, offset: 96)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5941, file: !2115, line: 41, baseType: !189, size: 32, offset: 128)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !5941, file: !2115, line: 41, baseType: !189, size: 32, offset: 160)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5941, file: !2115, line: 42, baseType: !2135, size: 64, offset: 192)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5934, file: !5826, line: 862, baseType: !5951, size: 64, offset: 256)
!5951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!182, !5824, !5939}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5934, file: !5826, line: 863, baseType: !5955, size: 64, offset: 320)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{null, !5824}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5934, file: !5826, line: 864, baseType: !5959, size: 64, offset: 384)
!5959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5960, size: 64)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!182, !5824, !2146}
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5934, file: !5826, line: 865, baseType: !5963, size: 64, offset: 448)
!5963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5964, size: 64)
!5964 = !DISubroutineType(types: !5965)
!5965 = !{!182, !5824}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5934, file: !5826, line: 866, baseType: !5955, size: 64, offset: 512)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !5934, file: !5826, line: 867, baseType: !5968, size: 64, offset: 576)
!5968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5969, size: 64)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{!182, !5824, !182}
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !5934, file: !5826, line: 868, baseType: !5972, size: 64, offset: 640)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 64)
!5973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5974)
!5974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !5826, line: 795, size: 384, elements: !5975)
!5975 = !{!5976, !5982, !5986, !5987, !5988, !5989}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !5974, file: !5826, line: 797, baseType: !5977, size: 64)
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!5980, !5824, !5981}
!5980 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !5826, line: 772, baseType: !7)
!5981 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !5826, line: 180, baseType: !7)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !5974, file: !5826, line: 801, baseType: !5983, size: 64, offset: 64)
!5983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5984, size: 64)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{!5980, !5824}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !5974, file: !5826, line: 804, baseType: !5983, size: 64, offset: 128)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !5974, file: !5826, line: 807, baseType: !5955, size: 64, offset: 192)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5974, file: !5826, line: 808, baseType: !5955, size: 64, offset: 256)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5974, file: !5826, line: 811, baseType: !5955, size: 64, offset: 320)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5934, file: !5826, line: 869, baseType: !1812, size: 64, offset: 704)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5934, file: !5826, line: 870, baseType: !2103, size: 1152, offset: 768)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5934, file: !5826, line: 871, baseType: !5993, size: 128, offset: 1920)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !5826, line: 759, size: 128, elements: !5994)
!5994 = !{!5995, !5996}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5993, file: !5826, line: 760, baseType: !619)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5993, file: !5826, line: 761, baseType: !281, size: 128)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !5825, file: !5826, line: 340, baseType: !288, size: 64, offset: 832)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5825, file: !5826, line: 346, baseType: !2349, size: 128, offset: 896)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !5825, file: !5826, line: 348, baseType: !6000, size: 32, offset: 1024)
!6000 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !5826, line: 155, baseType: !182)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !5825, file: !5826, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !5825, file: !5826, line: 352, baseType: !206, size: 8, offset: 1064)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !5825, file: !5826, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !5825, file: !5826, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !5825, file: !5826, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !5825, file: !5826, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !5825, file: !5826, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !5825, file: !5826, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !5825, file: !5826, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !5825, file: !5826, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !5825, file: !5826, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !5825, file: !5826, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !5825, file: !5826, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !5825, file: !5826, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !5825, file: !5826, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !5825, file: !5826, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !5825, file: !5826, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !5825, file: !5826, line: 376, baseType: !7, size: 32, offset: 1120)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !5825, file: !5826, line: 377, baseType: !7, size: 32, offset: 1152)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !5825, file: !5826, line: 380, baseType: !6021, size: 64, offset: 1216)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !5826, line: 303, flags: DIFlagFwdDecl)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !5825, file: !5826, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !5825, file: !5826, line: 383, baseType: !182, size: 32, offset: 1312)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !5825, file: !5826, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !5825, file: !5826, line: 387, baseType: !5981, size: 32, offset: 1376)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5825, file: !5826, line: 388, baseType: !1730, size: 5568, offset: 1408)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !5825, file: !5826, line: 390, baseType: !182, size: 32, offset: 6976)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5825, file: !5826, line: 396, baseType: !7, size: 32, offset: 7008)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5825, file: !5826, line: 397, baseType: !6031, size: 8704, offset: 7040)
!6031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5842, size: 8704, elements: !6032)
!6032 = !{!6033}
!6033 = !DISubrange(count: 17)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !5825, file: !5826, line: 399, baseType: !691, size: 8, offset: 15744)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !5825, file: !5826, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !5825, file: !5826, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !5825, file: !5826, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !5825, file: !5826, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !5825, file: !5826, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !5825, file: !5826, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !5825, file: !5826, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !5825, file: !5826, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !5825, file: !5826, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !5825, file: !5826, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !5825, file: !5826, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !5825, file: !5826, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !5825, file: !5826, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !5825, file: !5826, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !5825, file: !5826, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !5825, file: !5826, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !5825, file: !5826, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !5825, file: !5826, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !5825, file: !5826, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !5825, file: !5826, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !5825, file: !5826, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !5825, file: !5826, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !5825, file: !5826, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !5825, file: !5826, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !5825, file: !5826, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !5825, file: !5826, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !5825, file: !5826, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !5825, file: !5826, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !5825, file: !5826, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !5825, file: !5826, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !5825, file: !5826, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !5825, file: !5826, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !5825, file: !5826, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !5825, file: !5826, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !5825, file: !5826, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !5825, file: !5826, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !5825, file: !5826, line: 450, baseType: !6072, size: 16, offset: 15792)
!6072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !5826, line: 206, baseType: !194)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !5825, file: !5826, line: 451, baseType: !249, size: 32, offset: 15808)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !5825, file: !5826, line: 453, baseType: !6075, size: 512, offset: 15840)
!6075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 512, elements: !222)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !5825, file: !5826, line: 454, baseType: !743, size: 64, offset: 16384)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !5825, file: !5826, line: 455, baseType: !1826, size: 64, offset: 16448)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !5825, file: !5826, line: 456, baseType: !182, size: 32, offset: 16512)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !5825, file: !5826, line: 457, baseType: !6080, size: 1088, offset: 16576)
!6080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1088, elements: !6032)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !5825, file: !5826, line: 458, baseType: !6080, size: 1088, offset: 17664)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !5825, file: !5826, line: 469, baseType: !1812, size: 64, offset: 18752)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !5825, file: !5826, line: 471, baseType: !6084, size: 64, offset: 18816)
!6084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6085, size: 64)
!6085 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !5826, line: 304, flags: DIFlagFwdDecl)
!6086 = !DIDerivedType(tag: DW_TAG_member, scope: !5825, file: !5826, line: 478, baseType: !6087, size: 64, offset: 18880)
!6087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5825, file: !5826, line: 478, size: 64, elements: !6088)
!6088 = !{!6089, !6092}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !6087, file: !5826, line: 479, baseType: !6090, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6091, size: 64)
!6091 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !5826, line: 305, flags: DIFlagFwdDecl)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !6087, file: !5826, line: 480, baseType: !5824, size: 64)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !5825, file: !5826, line: 482, baseType: !216, size: 16, offset: 18944)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !5825, file: !5826, line: 483, baseType: !206, size: 8, offset: 18960)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !5825, file: !5826, line: 497, baseType: !216, size: 16, offset: 18976)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !5825, file: !5826, line: 498, baseType: !4665, size: 64, offset: 19008)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !5825, file: !5826, line: 499, baseType: !827, size: 64, offset: 19072)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !5825, file: !5826, line: 500, baseType: !196, size: 64, offset: 19136)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !5825, file: !5826, line: 502, baseType: !198, size: 64, offset: 19200)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "flash_data", scope: !5542, file: !201, line: 1051, baseType: !196, size: 64, offset: 3392)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "flash_len", scope: !5542, file: !201, line: 1052, baseType: !182, size: 32, offset: 3456)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "flash_datasize", scope: !5542, file: !201, line: 1053, baseType: !187, size: 32, offset: 3488)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "flash_busaddr", scope: !5542, file: !201, line: 1054, baseType: !3904, size: 64, offset: 3520)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "enq_busaddr", scope: !5542, file: !201, line: 1055, baseType: !3904, size: 64, offset: 3584)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "requires_esl", scope: !5542, file: !201, line: 1056, baseType: !205, size: 8, offset: 3648)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "sg_busaddr", scope: !4850, file: !201, line: 1086, baseType: !186, size: 32, offset: 1600)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !4850, file: !201, line: 1087, baseType: !182, size: 32, offset: 1632)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "data_busaddr", scope: !4850, file: !201, line: 1088, baseType: !3904, size: 64, offset: 1664)
!6109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !192, line: 30, baseType: !193)
!6110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !192, line: 32, baseType: !189)
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 64)
!6112 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 64)
!6114 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_passthru_t", file: !201, line: 1129, baseType: !6115)
!6115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 1117, size: 1920, elements: !6116)
!6116 = !{!6117, !6118, !6119, !6120, !6122, !6123, !6148, !6149, !6150, !6151, !6152}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "CoppID", scope: !6115, file: !201, line: 1118, baseType: !4986, size: 32)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "CoppCmd", scope: !6115, file: !201, line: 1119, baseType: !186, size: 32, offset: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "PtBuffer", scope: !6115, file: !201, line: 1120, baseType: !186, size: 32, offset: 64)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "CmdBuffer", scope: !6115, file: !201, line: 1121, baseType: !6121, size: 64, offset: 128)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "CmdBSize", scope: !6115, file: !201, line: 1122, baseType: !186, size: 32, offset: 192)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "CoppCP", scope: !6115, file: !201, line: 1123, baseType: !6124, size: 1600, offset: 256)
!6124 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_scb_pt_t", file: !201, line: 1112, baseType: !6125)
!6125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ips_scb_pt", file: !201, line: 1091, size: 1600, elements: !6126)
!6126 = !{!6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6145, !6146, !6147}
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6125, file: !201, line: 1092, baseType: !4853, size: 192)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb", scope: !6125, file: !201, line: 1093, baseType: !5046, size: 736, offset: 192)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "target_id", scope: !6125, file: !201, line: 1094, baseType: !205, size: 8, offset: 928)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6125, file: !201, line: 1095, baseType: !205, size: 8, offset: 936)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !6125, file: !201, line: 1096, baseType: !205, size: 8, offset: 944)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !6125, file: !201, line: 1097, baseType: !5058, size: 96, offset: 952)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "scb_busaddr", scope: !6125, file: !201, line: 1098, baseType: !186, size: 32, offset: 1056)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "data_busaddr", scope: !6125, file: !201, line: 1099, baseType: !186, size: 32, offset: 1088)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6125, file: !201, line: 1100, baseType: !186, size: 32, offset: 1120)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "basic_status", scope: !6125, file: !201, line: 1101, baseType: !205, size: 8, offset: 1152)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "extended_status", scope: !6125, file: !201, line: 1102, baseType: !205, size: 8, offset: 1160)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "breakup", scope: !6125, file: !201, line: 1103, baseType: !215, size: 16, offset: 1168)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !6125, file: !201, line: 1104, baseType: !186, size: 32, offset: 1184)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !6125, file: !201, line: 1105, baseType: !186, size: 32, offset: 1216)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6125, file: !201, line: 1106, baseType: !186, size: 32, offset: 1248)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "op_code", scope: !6125, file: !201, line: 1107, baseType: !186, size: 32, offset: 1280)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !6125, file: !201, line: 1108, baseType: !6144, size: 64, offset: 1344)
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5080, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cmd", scope: !6125, file: !201, line: 1109, baseType: !5101, size: 64, offset: 1408)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "q_next", scope: !6125, file: !201, line: 1110, baseType: !5534, size: 64, offset: 1472)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !6125, file: !201, line: 1111, baseType: !5536, size: 64, offset: 1536)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "TimeOut", scope: !6115, file: !201, line: 1124, baseType: !186, size: 32, offset: 1856)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "BasicStatus", scope: !6115, file: !201, line: 1125, baseType: !205, size: 8, offset: 1888)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "ExtendedStatus", scope: !6115, file: !201, line: 1126, baseType: !205, size: 8, offset: 1896)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "AdapterType", scope: !6115, file: !201, line: 1127, baseType: !205, size: 8, offset: 1904)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6115, file: !201, line: 1128, baseType: !205, size: 8, offset: 1912)
!6153 = !{!6154, !6165, !6167, !6171, !6176, !6179, !6184, !6187, !0, !6232, !6243, !6245, !6247, !6249, !6251, !6253, !6255, !6258, !6261, !6263, !6265, !6267, !6269, !6275, !6280, !6283, !6285, !6287, !6289, !6295, !6301, !6304, !6306, !6308, !6311, !6313, !6326}
!6154 = !DIGlobalVariableExpression(var: !6155, expr: !DIExpression())
!6155 = distinct !DIGlobalVariable(name: "__setup_ips_setup", scope: !2, file: !3, line: 539, type: !6156, isLocal: true, isDefinition: true, align: 64)
!6156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !6157, line: 241, size: 192, elements: !6158)
!6157 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6158 = !{!6159, !6160, !6164}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6156, file: !6157, line: 242, baseType: !648, size: 64)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !6156, file: !6157, line: 243, baseType: !6161, size: 64, offset: 64)
!6161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6162, size: 64)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{!182, !196}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !6156, file: !6157, line: 244, baseType: !182, size: 32, offset: 128)
!6165 = !DIGlobalVariableExpression(var: !6166, expr: !DIExpression())
!6166 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ips_module_init302", scope: !2, file: !3, line: 6762, type: !183, isLocal: true, isDefinition: true)
!6167 = !DIGlobalVariableExpression(var: !6168, expr: !DIExpression())
!6168 = distinct !DIGlobalVariable(name: "__exitcall_ips_module_exit", scope: !2, file: !3, line: 6763, type: !6169, isLocal: true, isDefinition: true)
!6169 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6157, line: 117, baseType: !6170)
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!6171 = !DIGlobalVariableExpression(var: !6172, expr: !DIExpression())
!6172 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file303", scope: !2, file: !3, line: 7094, type: !6173, isLocal: true, isDefinition: true, align: 8)
!6173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 208, elements: !6174)
!6174 = !{!6175}
!6175 = !DISubrange(count: 26)
!6176 = !DIGlobalVariableExpression(var: !6177, expr: !DIExpression())
!6177 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license304", scope: !2, file: !3, line: 7094, type: !6178, isLocal: true, isDefinition: true, align: 8)
!6178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 128, elements: !222)
!6179 = !DIGlobalVariableExpression(var: !6180, expr: !DIExpression())
!6180 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description305", scope: !2, file: !3, line: 7095, type: !6181, isLocal: true, isDefinition: true, align: 8)
!6181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 424, elements: !6182)
!6182 = !{!6183}
!6183 = !DISubrange(count: 53)
!6184 = !DIGlobalVariableExpression(var: !6185, expr: !DIExpression())
!6185 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version306", scope: !2, file: !3, line: 7096, type: !6186, isLocal: true, isDefinition: true, align: 8)
!6186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 160, elements: !4739)
!6187 = !DIGlobalVariableExpression(var: !6188, expr: !DIExpression())
!6188 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 7096, type: !6189, isLocal: true, isDefinition: true)
!6189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6190)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 64)
!6191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6192)
!6192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !6193, line: 65, size: 576, align: 64, elements: !6194)
!6193 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!6194 = !{!6195, !6230, !6231}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !6192, file: !6193, line: 66, baseType: !6196, size: 448)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !6193, line: 54, size: 448, elements: !6197)
!6197 = !{!6198, !6199, !6214, !6218, !6222, !6226}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6196, file: !6193, line: 55, baseType: !1801, size: 128)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6196, file: !6193, line: 56, baseType: !6200, size: 64, offset: 128)
!6200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6201, size: 64)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{!911, !6203, !6204, !196}
!6203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 64)
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !6193, line: 46, size: 768, elements: !6206)
!6206 = !{!6207, !6208, !6209, !6210, !6213}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6205, file: !6193, line: 47, baseType: !1733, size: 512)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !6205, file: !6193, line: 48, baseType: !738, size: 64, offset: 512)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !6205, file: !6193, line: 49, baseType: !1739, size: 64, offset: 576)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !6205, file: !6193, line: 50, baseType: !6211, size: 64, offset: 640)
!6211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6212, size: 64)
!6212 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !6193, line: 50, flags: DIFlagFwdDecl)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !6205, file: !6193, line: 51, baseType: !4276, size: 64, offset: 704)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6196, file: !6193, line: 58, baseType: !6215, size: 64, offset: 192)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!911, !6203, !6204, !648, !827}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !6196, file: !6193, line: 60, baseType: !6219, size: 64, offset: 256)
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6220, size: 64)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{null, !738, !648}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !6196, file: !6193, line: 61, baseType: !6223, size: 64, offset: 320)
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6224, size: 64)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{!182, !738}
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6196, file: !6193, line: 62, baseType: !6227, size: 64, offset: 384)
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6228, size: 64)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{null, !738}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !6192, file: !6193, line: 67, baseType: !648, size: 64, offset: 448)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6192, file: !6193, line: 68, baseType: !648, size: 64, offset: 512)
!6232 = !DIGlobalVariableExpression(var: !6233, expr: !DIExpression())
!6233 = distinct !DIGlobalVariable(name: "options", scope: !6234, file: !3, line: 501, type: !6235, isLocal: true, isDefinition: true)
!6234 = distinct !DISubprogram(name: "ips_setup", scope: !3, file: !3, line: 495, type: !6162, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6236, size: 960, elements: !3415)
!6236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6237)
!6237 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_OPTION", file: !201, line: 947, baseType: !6238)
!6238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 943, size: 192, elements: !6239)
!6239 = !{!6240, !6241, !6242}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "option_name", scope: !6238, file: !201, line: 944, baseType: !196, size: 64)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "option_flag", scope: !6238, file: !201, line: 945, baseType: !815, size: 64, offset: 64)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "option_value", scope: !6238, file: !201, line: 946, baseType: !182, size: 32, offset: 128)
!6243 = !DIGlobalVariableExpression(var: !6244, expr: !DIExpression())
!6244 = distinct !DIGlobalVariable(name: "ips_force_i2o", scope: !2, file: !3, line: 348, type: !182, isLocal: true, isDefinition: true)
!6245 = !DIGlobalVariableExpression(var: !6246, expr: !DIExpression())
!6246 = distinct !DIGlobalVariable(name: "ips_force_memio", scope: !2, file: !3, line: 347, type: !182, isLocal: true, isDefinition: true)
!6247 = !DIGlobalVariableExpression(var: !6248, expr: !DIExpression())
!6248 = distinct !DIGlobalVariable(name: "ips_ioctlsize", scope: !2, file: !3, line: 349, type: !182, isLocal: true, isDefinition: true)
!6249 = !DIGlobalVariableExpression(var: !6250, expr: !DIExpression())
!6250 = distinct !DIGlobalVariable(name: "ips_cd_boot", scope: !2, file: !3, line: 350, type: !182, isLocal: true, isDefinition: true)
!6251 = !DIGlobalVariableExpression(var: !6252, expr: !DIExpression())
!6252 = distinct !DIGlobalVariable(name: "MaxLiteCmds", scope: !2, file: !3, line: 354, type: !186, isLocal: true, isDefinition: true)
!6253 = !DIGlobalVariableExpression(var: !6254, expr: !DIExpression())
!6254 = distinct !DIGlobalVariable(name: "ips_pci_driver", scope: !2, file: !3, line: 387, type: !5934, isLocal: true, isDefinition: true)
!6255 = !DIGlobalVariableExpression(var: !6256, expr: !DIExpression())
!6256 = distinct !DIGlobalVariable(name: "ips_hot_plug_name", scope: !2, file: !3, line: 382, type: !6257, isLocal: true, isDefinition: true)
!6257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 32, elements: !1238)
!6258 = !DIGlobalVariableExpression(var: !6259, expr: !DIExpression())
!6259 = distinct !DIGlobalVariable(name: "ips_pci_table", scope: !2, file: !3, line: 373, type: !6260, isLocal: true, isDefinition: true)
!6260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5941, size: 1024, elements: !1238)
!6261 = !DIGlobalVariableExpression(var: !6262, expr: !DIExpression())
!6262 = distinct !DIGlobalVariable(name: "ips_FlashData", scope: !2, file: !3, line: 351, type: !196, isLocal: true, isDefinition: true)
!6263 = !DIGlobalVariableExpression(var: !6264, expr: !DIExpression())
!6264 = distinct !DIGlobalVariable(name: "ips_flashbusaddr", scope: !2, file: !3, line: 352, type: !3904, isLocal: true, isDefinition: true)
!6265 = !DIGlobalVariableExpression(var: !6266, expr: !DIExpression())
!6266 = distinct !DIGlobalVariable(name: "ips_cmd_timeout", scope: !2, file: !3, line: 345, type: !182, isLocal: true, isDefinition: true)
!6267 = !DIGlobalVariableExpression(var: !6268, expr: !DIExpression())
!6268 = distinct !DIGlobalVariable(name: "ips_FlashDataInUse", scope: !2, file: !3, line: 353, type: !241, isLocal: true, isDefinition: true)
!6269 = !DIGlobalVariableExpression(var: !6270, expr: !DIExpression())
!6270 = distinct !DIGlobalVariable(name: "__warned", scope: !6271, file: !6272, line: 275, type: !691, isLocal: true, isDefinition: true)
!6271 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !6272, file: !6272, line: 271, type: !6273, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6272 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!6273 = !DISubroutineType(types: !6274)
!6274 = !{!3904, !2031, !183, !827, !156, !198}
!6275 = !DIGlobalVariableExpression(var: !6276, expr: !DIExpression())
!6276 = distinct !DIGlobalVariable(name: "ips_command_direction", scope: !2, file: !3, line: 430, type: !6277, isLocal: true, isDefinition: true)
!6277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2040, elements: !6278)
!6278 = !{!6279}
!6279 = !DISubrange(count: 255)
!6280 = !DIGlobalVariableExpression(var: !6281, expr: !DIExpression())
!6281 = distinct !DIGlobalVariable(name: "ips_name", scope: !2, file: !3, line: 338, type: !6282, isLocal: true, isDefinition: true)
!6282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 32, elements: !1238)
!6283 = !DIGlobalVariableExpression(var: !6284, expr: !DIExpression())
!6284 = distinct !DIGlobalVariable(name: "ips_reset_timeout", scope: !2, file: !3, line: 346, type: !182, isLocal: true, isDefinition: true)
!6285 = !DIGlobalVariableExpression(var: !6286, expr: !DIExpression())
!6286 = distinct !DIGlobalVariable(name: "ips_hotplug", scope: !2, file: !3, line: 344, type: !182, isLocal: true, isDefinition: true)
!6287 = !DIGlobalVariableExpression(var: !6288, expr: !DIExpression())
!6288 = distinct !DIGlobalVariable(name: "ips_driver_template", scope: !2, file: !3, line: 355, type: !5139, isLocal: true, isDefinition: true)
!6289 = !DIGlobalVariableExpression(var: !6290, expr: !DIExpression())
!6290 = distinct !DIGlobalVariable(name: "buffer", scope: !6291, file: !3, line: 1399, type: !6292, isLocal: true, isDefinition: true)
!6291 = distinct !DISubprogram(name: "ips_info", scope: !3, file: !3, line: 1397, type: !5145, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2048, elements: !6293)
!6293 = !{!6294}
!6294 = !DISubrange(count: 256)
!6295 = !DIGlobalVariableExpression(var: !6296, expr: !DIExpression())
!6296 = distinct !DIGlobalVariable(name: "ips_adapter_name", scope: !2, file: !3, line: 402, type: !6297, isLocal: true, isDefinition: true)
!6297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 4320, elements: !6298)
!6298 = !{!6299, !6300}
!6299 = !DISubrange(count: 18)
!6300 = !DISubrange(count: 30)
!6301 = !DIGlobalVariableExpression(var: !6302, expr: !DIExpression())
!6302 = distinct !DIGlobalVariable(name: "ips_ha", scope: !2, file: !3, line: 340, type: !6303, isLocal: true, isDefinition: true)
!6303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5540, size: 1024, elements: !222)
!6304 = !DIGlobalVariableExpression(var: !6305, expr: !DIExpression())
!6305 = distinct !DIGlobalVariable(name: "ips_num_controllers", scope: !2, file: !3, line: 342, type: !7, isLocal: true, isDefinition: true)
!6306 = !DIGlobalVariableExpression(var: !6307, expr: !DIExpression())
!6307 = distinct !DIGlobalVariable(name: "ips_next_controller", scope: !2, file: !3, line: 341, type: !7, isLocal: true, isDefinition: true)
!6308 = !DIGlobalVariableExpression(var: !6309, expr: !DIExpression())
!6309 = distinct !DIGlobalVariable(name: "ips_sh", scope: !2, file: !3, line: 339, type: !6310, isLocal: true, isDefinition: true)
!6310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5124, size: 1024, elements: !222)
!6311 = !DIGlobalVariableExpression(var: !6312, expr: !DIExpression())
!6312 = distinct !DIGlobalVariable(name: "ips_released_controllers", scope: !2, file: !3, line: 343, type: !7, isLocal: true, isDefinition: true)
!6313 = !DIGlobalVariableExpression(var: !6314, expr: !DIExpression())
!6314 = distinct !DIGlobalVariable(name: "ips_notifier", scope: !2, file: !3, line: 423, type: !6315, isLocal: true, isDefinition: true)
!6315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !6316, line: 54, size: 192, elements: !6317)
!6316 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!6317 = !{!6318, !6324, !6325}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !6315, file: !6316, line: 55, baseType: !6319, size: 64)
!6319 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !6316, line: 51, baseType: !6320)
!6320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6321, size: 64)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{!182, !6323, !198, !183}
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6315, size: 64)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6315, file: !6316, line: 56, baseType: !6323, size: 64, offset: 64)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !6315, file: !6316, line: 57, baseType: !182, size: 32, offset: 128)
!6326 = !DIGlobalVariableExpression(var: !6327, expr: !DIExpression())
!6327 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 7096, type: !6192, isLocal: true, isDefinition: true)
!6328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 40, elements: !3415)
!6329 = !{!"rsp"}
!6330 = !{i32 7, !"Dwarf Version", i32 4}
!6331 = !{i32 2, !"Debug Info Version", i32 3}
!6332 = !{i32 1, !"wchar_size", i32 2}
!6333 = !{i32 1, !"Code Model", i32 2}
!6334 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6335 = !DILocalVariable(name: "ips_str", arg: 1, scope: !6234, file: !3, line: 495, type: !196)
!6336 = !DILocation(line: 495, column: 17, scope: !6234)
!6337 = !DILocalVariable(name: "i", scope: !6234, file: !3, line: 498, type: !182)
!6338 = !DILocation(line: 498, column: 6, scope: !6234)
!6339 = !DILocalVariable(name: "key", scope: !6234, file: !3, line: 499, type: !196)
!6340 = !DILocation(line: 499, column: 8, scope: !6234)
!6341 = !DILocalVariable(name: "value", scope: !6234, file: !3, line: 500, type: !196)
!6342 = !DILocation(line: 500, column: 8, scope: !6234)
!6343 = !DILocation(line: 511, column: 2, scope: !6234)
!6344 = !DILocation(line: 511, column: 16, scope: !6234)
!6345 = !DILocation(line: 511, column: 14, scope: !6234)
!6346 = !DILocation(line: 512, column: 9, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 512, column: 7)
!6348 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 511, column: 41)
!6349 = !DILocation(line: 512, column: 8, scope: !6347)
!6350 = !DILocation(line: 512, column: 7, scope: !6348)
!6351 = !DILocation(line: 513, column: 4, scope: !6347)
!6352 = distinct !{!6352, !6343, !6353}
!6353 = !DILocation(line: 534, column: 2, scope: !6234)
!6354 = !DILocation(line: 514, column: 18, scope: !6348)
!6355 = !DILocation(line: 514, column: 11, scope: !6348)
!6356 = !DILocation(line: 514, column: 9, scope: !6348)
!6357 = !DILocation(line: 515, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 515, column: 7)
!6359 = !DILocation(line: 515, column: 7, scope: !6348)
!6360 = !DILocation(line: 516, column: 10, scope: !6358)
!6361 = !DILocation(line: 516, column: 13, scope: !6358)
!6362 = !DILocation(line: 516, column: 4, scope: !6358)
!6363 = !DILocation(line: 521, column: 10, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 521, column: 3)
!6365 = !DILocation(line: 521, column: 8, scope: !6364)
!6366 = !DILocation(line: 521, column: 15, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 521, column: 3)
!6368 = !DILocation(line: 521, column: 17, scope: !6367)
!6369 = !DILocation(line: 521, column: 3, scope: !6364)
!6370 = !DILocation(line: 523, column: 9, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 522, column: 8)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 521, column: 45)
!6373 = !DILocation(line: 523, column: 22, scope: !6371)
!6374 = !DILocation(line: 523, column: 14, scope: !6371)
!6375 = !DILocation(line: 523, column: 25, scope: !6371)
!6376 = !DILocation(line: 524, column: 24, scope: !6371)
!6377 = !DILocation(line: 524, column: 16, scope: !6371)
!6378 = !DILocation(line: 524, column: 27, scope: !6371)
!6379 = !DILocation(line: 524, column: 9, scope: !6371)
!6380 = !DILocation(line: 522, column: 8, scope: !6371)
!6381 = !DILocation(line: 524, column: 41, scope: !6371)
!6382 = !DILocation(line: 522, column: 8, scope: !6372)
!6383 = !DILocation(line: 525, column: 9, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 525, column: 9)
!6385 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 524, column: 47)
!6386 = !DILocation(line: 525, column: 9, scope: !6385)
!6387 = !DILocation(line: 527, column: 25, scope: !6384)
!6388 = !DILocation(line: 527, column: 10, scope: !6384)
!6389 = !DILocation(line: 526, column: 15, scope: !6384)
!6390 = !DILocation(line: 526, column: 7, scope: !6384)
!6391 = !DILocation(line: 526, column: 18, scope: !6384)
!6392 = !DILocation(line: 526, column: 30, scope: !6384)
!6393 = !DILocation(line: 526, column: 6, scope: !6384)
!6394 = !DILocation(line: 530, column: 18, scope: !6384)
!6395 = !DILocation(line: 530, column: 10, scope: !6384)
!6396 = !DILocation(line: 530, column: 21, scope: !6384)
!6397 = !DILocation(line: 529, column: 15, scope: !6384)
!6398 = !DILocation(line: 529, column: 7, scope: !6384)
!6399 = !DILocation(line: 529, column: 18, scope: !6384)
!6400 = !DILocation(line: 529, column: 30, scope: !6384)
!6401 = !DILocation(line: 531, column: 5, scope: !6385)
!6402 = !DILocation(line: 533, column: 3, scope: !6372)
!6403 = !DILocation(line: 521, column: 41, scope: !6367)
!6404 = !DILocation(line: 521, column: 3, scope: !6367)
!6405 = distinct !{!6405, !6369, !6406}
!6406 = !DILocation(line: 533, column: 3, scope: !6364)
!6407 = !DILocation(line: 536, column: 2, scope: !6234)
!6408 = distinct !DISubprogram(name: "ips_module_exit", scope: !3, file: !3, line: 6756, type: !4459, scopeLine: 6757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6409 = !DILocation(line: 6758, column: 2, scope: !6408)
!6410 = !DILocation(line: 6759, column: 2, scope: !6408)
!6411 = !DILocation(line: 6760, column: 1, scope: !6408)
!6412 = distinct !DISubprogram(name: "ips_module_init", scope: !3, file: !3, line: 6729, type: !6413, scopeLine: 6730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{!182}
!6415 = !DILocation(line: 6736, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 6736, column: 6)
!6417 = !DILocation(line: 6736, column: 43, scope: !6416)
!6418 = !DILocation(line: 6736, column: 6, scope: !6412)
!6419 = !DILocation(line: 6737, column: 3, scope: !6416)
!6420 = !DILocation(line: 6738, column: 29, scope: !6412)
!6421 = !DILocation(line: 6739, column: 2, scope: !6412)
!6422 = !DILocation(line: 6740, column: 7, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 6740, column: 6)
!6424 = !DILocation(line: 6740, column: 6, scope: !6412)
!6425 = !DILocation(line: 6741, column: 3, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 6740, column: 41)
!6427 = !DILocation(line: 6742, column: 3, scope: !6426)
!6428 = !DILocation(line: 6744, column: 2, scope: !6412)
!6429 = !DILocation(line: 6745, column: 2, scope: !6412)
!6430 = !DILocation(line: 6746, column: 1, scope: !6412)
!6431 = distinct !DISubprogram(name: "ips_insert_device", scope: !3, file: !3, line: 6775, type: !5952, scopeLine: 6776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6432 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !6431, file: !3, line: 6775, type: !5824)
!6433 = !DILocation(line: 6775, column: 35, scope: !6431)
!6434 = !DILocalVariable(name: "ent", arg: 2, scope: !6431, file: !3, line: 6775, type: !5939)
!6435 = !DILocation(line: 6775, column: 72, scope: !6431)
!6436 = !DILocalVariable(name: "index", scope: !6431, file: !3, line: 6777, type: !182)
!6437 = !DILocation(line: 6777, column: 6, scope: !6431)
!6438 = !DILocalVariable(name: "rc", scope: !6431, file: !3, line: 6778, type: !182)
!6439 = !DILocation(line: 6778, column: 6, scope: !6431)
!6440 = !DILocation(line: 6781, column: 25, scope: !6431)
!6441 = !DILocation(line: 6781, column: 7, scope: !6431)
!6442 = !DILocation(line: 6781, column: 5, scope: !6431)
!6443 = !DILocation(line: 6782, column: 6, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 6782, column: 6)
!6445 = !DILocation(line: 6782, column: 6, scope: !6431)
!6446 = !DILocation(line: 6783, column: 10, scope: !6444)
!6447 = !DILocation(line: 6783, column: 3, scope: !6444)
!6448 = !DILocation(line: 6785, column: 27, scope: !6431)
!6449 = !DILocation(line: 6785, column: 7, scope: !6431)
!6450 = !DILocation(line: 6785, column: 5, scope: !6431)
!6451 = !DILocation(line: 6786, column: 6, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 6786, column: 6)
!6453 = !DILocation(line: 6786, column: 6, scope: !6431)
!6454 = !DILocation(line: 6787, column: 3, scope: !6452)
!6455 = !DILocation(line: 6789, column: 23, scope: !6431)
!6456 = !DILocation(line: 6789, column: 7, scope: !6431)
!6457 = !DILocation(line: 6789, column: 5, scope: !6431)
!6458 = !DILocation(line: 6790, column: 6, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 6790, column: 6)
!6460 = !DILocation(line: 6790, column: 9, scope: !6459)
!6461 = !DILocation(line: 6790, column: 6, scope: !6431)
!6462 = !DILocation(line: 6791, column: 24, scope: !6459)
!6463 = !DILocation(line: 6791, column: 8, scope: !6459)
!6464 = !DILocation(line: 6791, column: 6, scope: !6459)
!6465 = !DILocation(line: 6791, column: 3, scope: !6459)
!6466 = !DILocation(line: 6793, column: 6, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 6793, column: 6)
!6468 = !DILocation(line: 6793, column: 6, scope: !6431)
!6469 = !DILocation(line: 6794, column: 25, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 6794, column: 7)
!6471 = !DILocation(line: 6794, column: 7, scope: !6470)
!6472 = !DILocation(line: 6794, column: 7, scope: !6467)
!6473 = !DILocation(line: 6795, column: 20, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 6794, column: 33)
!6475 = !DILocation(line: 6795, column: 13, scope: !6474)
!6476 = !DILocation(line: 6795, column: 4, scope: !6474)
!6477 = !DILocation(line: 6796, column: 7, scope: !6474)
!6478 = !DILocation(line: 6797, column: 3, scope: !6474)
!6479 = !DILocation(line: 6794, column: 30, scope: !6470)
!6480 = !DILocation(line: 6799, column: 6, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 6799, column: 6)
!6482 = !DILocation(line: 6799, column: 9, scope: !6481)
!6483 = !DILocation(line: 6799, column: 6, scope: !6431)
!6484 = !DILocation(line: 6800, column: 22, scope: !6481)
!6485 = !DILocation(line: 6800, column: 3, scope: !6481)
!6486 = !DILocation(line: 6802, column: 24, scope: !6431)
!6487 = !DILocation(line: 6802, column: 22, scope: !6431)
!6488 = !DILocation(line: 6804, column: 6, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 6804, column: 6)
!6490 = !DILocation(line: 6804, column: 9, scope: !6489)
!6491 = !DILocation(line: 6804, column: 6, scope: !6431)
!6492 = !DILocation(line: 6805, column: 6, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 6804, column: 14)
!6494 = !DILocation(line: 6806, column: 3, scope: !6493)
!6495 = !DILocation(line: 6809, column: 18, scope: !6431)
!6496 = !DILocation(line: 6809, column: 34, scope: !6431)
!6497 = !DILocation(line: 6809, column: 27, scope: !6431)
!6498 = !DILocation(line: 6809, column: 2, scope: !6431)
!6499 = !DILocation(line: 6810, column: 2, scope: !6431)
!6500 = !DILabel(scope: !6431, name: "err_out_regions", file: !3, line: 6812)
!6501 = !DILocation(line: 6812, column: 1, scope: !6431)
!6502 = !DILocation(line: 6813, column: 22, scope: !6431)
!6503 = !DILocation(line: 6813, column: 2, scope: !6431)
!6504 = !DILabel(scope: !6431, name: "err_out", file: !3, line: 6814)
!6505 = !DILocation(line: 6814, column: 1, scope: !6431)
!6506 = !DILocation(line: 6815, column: 21, scope: !6431)
!6507 = !DILocation(line: 6815, column: 2, scope: !6431)
!6508 = !DILocation(line: 6816, column: 9, scope: !6431)
!6509 = !DILocation(line: 6816, column: 2, scope: !6431)
!6510 = !DILocation(line: 6817, column: 1, scope: !6431)
!6511 = distinct !DISubprogram(name: "ips_remove_device", scope: !3, file: !3, line: 6709, type: !5956, scopeLine: 6710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6512 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !6511, file: !3, line: 6709, type: !5824)
!6513 = !DILocation(line: 6709, column: 35, scope: !6511)
!6514 = !DILocalVariable(name: "sh", scope: !6511, file: !3, line: 6711, type: !5124)
!6515 = !DILocation(line: 6711, column: 20, scope: !6511)
!6516 = !DILocation(line: 6711, column: 41, scope: !6511)
!6517 = !DILocation(line: 6711, column: 25, scope: !6511)
!6518 = !DILocation(line: 6713, column: 18, scope: !6511)
!6519 = !DILocation(line: 6713, column: 2, scope: !6511)
!6520 = !DILocation(line: 6715, column: 14, scope: !6511)
!6521 = !DILocation(line: 6715, column: 2, scope: !6511)
!6522 = !DILocation(line: 6717, column: 22, scope: !6511)
!6523 = !DILocation(line: 6717, column: 2, scope: !6511)
!6524 = !DILocation(line: 6718, column: 21, scope: !6511)
!6525 = !DILocation(line: 6718, column: 2, scope: !6511)
!6526 = !DILocation(line: 6719, column: 1, scope: !6511)
!6527 = distinct !DISubprogram(name: "ips_init_phase1", scope: !3, file: !3, line: 6829, type: !6528, scopeLine: 6830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!182, !5824, !815}
!6530 = !DILocalVariable(name: "s", arg: 1, scope: !6531, file: !164, line: 445, type: !2609)
!6531 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !164, file: !164, line: 445, type: !6532, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6532 = !DISubroutineType(types: !6533)
!6533 = !{!183, !2609, !184, !827}
!6534 = !DILocation(line: 445, column: 72, scope: !6531, inlinedAt: !6535)
!6535 = distinct !DILocation(line: 552, column: 10, scope: !6536, inlinedAt: !6541)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !164, line: 540, column: 34)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !164, line: 540, column: 6)
!6538 = distinct !DISubprogram(name: "kmalloc", scope: !164, file: !164, line: 538, type: !6539, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!183, !827, !184}
!6541 = distinct !DILocation(line: 6980, column: 15, scope: !6527)
!6542 = !DILocalVariable(name: "flags", arg: 2, scope: !6531, file: !164, line: 446, type: !184)
!6543 = !DILocation(line: 446, column: 9, scope: !6531, inlinedAt: !6535)
!6544 = !DILocalVariable(name: "size", arg: 3, scope: !6531, file: !164, line: 446, type: !827)
!6545 = !DILocation(line: 446, column: 23, scope: !6531, inlinedAt: !6535)
!6546 = !DILocalVariable(name: "ret", scope: !6531, file: !164, line: 448, type: !183)
!6547 = !DILocation(line: 448, column: 8, scope: !6531, inlinedAt: !6535)
!6548 = !DILocalVariable(name: "flags", arg: 1, scope: !6549, file: !164, line: 318, type: !184)
!6549 = distinct !DISubprogram(name: "kmalloc_type", scope: !164, file: !164, line: 318, type: !6550, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{!163, !184}
!6552 = !DILocation(line: 318, column: 67, scope: !6549, inlinedAt: !6553)
!6553 = distinct !DILocation(line: 553, column: 20, scope: !6536, inlinedAt: !6541)
!6554 = !DILocalVariable(name: "size", arg: 1, scope: !6555, file: !164, line: 346, type: !827)
!6555 = distinct !DISubprogram(name: "kmalloc_index", scope: !164, file: !164, line: 346, type: !6556, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!7, !827}
!6558 = !DILocation(line: 346, column: 58, scope: !6555, inlinedAt: !6559)
!6559 = distinct !DILocation(line: 547, column: 11, scope: !6536, inlinedAt: !6541)
!6560 = !DILocalVariable(name: "size", arg: 1, scope: !6561, file: !164, line: 472, type: !827)
!6561 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !164, file: !164, line: 472, type: !6562, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{!183, !827, !184, !7}
!6564 = !DILocation(line: 472, column: 28, scope: !6561, inlinedAt: !6565)
!6565 = distinct !DILocation(line: 481, column: 9, scope: !6566, inlinedAt: !6567)
!6566 = distinct !DISubprogram(name: "kmalloc_large", scope: !164, file: !164, line: 478, type: !6539, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!6567 = distinct !DILocation(line: 545, column: 11, scope: !6568, inlinedAt: !6541)
!6568 = distinct !DILexicalBlock(scope: !6536, file: !164, line: 544, column: 7)
!6569 = !DILocalVariable(name: "flags", arg: 2, scope: !6561, file: !164, line: 472, type: !184)
!6570 = !DILocation(line: 472, column: 40, scope: !6561, inlinedAt: !6565)
!6571 = !DILocalVariable(name: "order", arg: 3, scope: !6561, file: !164, line: 472, type: !7)
!6572 = !DILocation(line: 472, column: 60, scope: !6561, inlinedAt: !6565)
!6573 = !DILocalVariable(name: "size", arg: 1, scope: !6566, file: !164, line: 478, type: !827)
!6574 = !DILocation(line: 478, column: 51, scope: !6566, inlinedAt: !6567)
!6575 = !DILocalVariable(name: "flags", arg: 2, scope: !6566, file: !164, line: 478, type: !184)
!6576 = !DILocation(line: 478, column: 63, scope: !6566, inlinedAt: !6567)
!6577 = !DILocalVariable(name: "order", scope: !6566, file: !164, line: 480, type: !7)
!6578 = !DILocation(line: 480, column: 15, scope: !6566, inlinedAt: !6567)
!6579 = !DILocalVariable(name: "size", arg: 1, scope: !6538, file: !164, line: 538, type: !827)
!6580 = !DILocation(line: 538, column: 45, scope: !6538, inlinedAt: !6541)
!6581 = !DILocalVariable(name: "flags", arg: 2, scope: !6538, file: !164, line: 538, type: !184)
!6582 = !DILocation(line: 538, column: 57, scope: !6538, inlinedAt: !6541)
!6583 = !DILocalVariable(name: "index", scope: !6536, file: !164, line: 542, type: !7)
!6584 = !DILocation(line: 542, column: 16, scope: !6536, inlinedAt: !6541)
!6585 = !DILocation(line: 445, column: 72, scope: !6531, inlinedAt: !6586)
!6586 = distinct !DILocation(line: 552, column: 10, scope: !6536, inlinedAt: !6587)
!6587 = distinct !DILocation(line: 6972, column: 14, scope: !6527)
!6588 = !DILocation(line: 446, column: 9, scope: !6531, inlinedAt: !6586)
!6589 = !DILocation(line: 446, column: 23, scope: !6531, inlinedAt: !6586)
!6590 = !DILocation(line: 448, column: 8, scope: !6531, inlinedAt: !6586)
!6591 = !DILocation(line: 318, column: 67, scope: !6549, inlinedAt: !6592)
!6592 = distinct !DILocation(line: 553, column: 20, scope: !6536, inlinedAt: !6587)
!6593 = !DILocation(line: 346, column: 58, scope: !6555, inlinedAt: !6594)
!6594 = distinct !DILocation(line: 547, column: 11, scope: !6536, inlinedAt: !6587)
!6595 = !DILocation(line: 472, column: 28, scope: !6561, inlinedAt: !6596)
!6596 = distinct !DILocation(line: 481, column: 9, scope: !6566, inlinedAt: !6597)
!6597 = distinct !DILocation(line: 545, column: 11, scope: !6568, inlinedAt: !6587)
!6598 = !DILocation(line: 472, column: 40, scope: !6561, inlinedAt: !6596)
!6599 = !DILocation(line: 472, column: 60, scope: !6561, inlinedAt: !6596)
!6600 = !DILocation(line: 478, column: 51, scope: !6566, inlinedAt: !6597)
!6601 = !DILocation(line: 478, column: 63, scope: !6566, inlinedAt: !6597)
!6602 = !DILocation(line: 480, column: 15, scope: !6566, inlinedAt: !6597)
!6603 = !DILocation(line: 538, column: 45, scope: !6538, inlinedAt: !6587)
!6604 = !DILocation(line: 538, column: 57, scope: !6538, inlinedAt: !6587)
!6605 = !DILocation(line: 542, column: 16, scope: !6536, inlinedAt: !6587)
!6606 = !DILocation(line: 445, column: 72, scope: !6531, inlinedAt: !6607)
!6607 = distinct !DILocation(line: 552, column: 10, scope: !6536, inlinedAt: !6608)
!6608 = distinct !DILocation(line: 6964, column: 13, scope: !6527)
!6609 = !DILocation(line: 446, column: 9, scope: !6531, inlinedAt: !6607)
!6610 = !DILocation(line: 446, column: 23, scope: !6531, inlinedAt: !6607)
!6611 = !DILocation(line: 448, column: 8, scope: !6531, inlinedAt: !6607)
!6612 = !DILocation(line: 318, column: 67, scope: !6549, inlinedAt: !6613)
!6613 = distinct !DILocation(line: 553, column: 20, scope: !6536, inlinedAt: !6608)
!6614 = !DILocation(line: 346, column: 58, scope: !6555, inlinedAt: !6615)
!6615 = distinct !DILocation(line: 547, column: 11, scope: !6536, inlinedAt: !6608)
!6616 = !DILocation(line: 472, column: 28, scope: !6561, inlinedAt: !6617)
!6617 = distinct !DILocation(line: 481, column: 9, scope: !6566, inlinedAt: !6618)
!6618 = distinct !DILocation(line: 545, column: 11, scope: !6568, inlinedAt: !6608)
!6619 = !DILocation(line: 472, column: 40, scope: !6561, inlinedAt: !6617)
!6620 = !DILocation(line: 472, column: 60, scope: !6561, inlinedAt: !6617)
!6621 = !DILocation(line: 478, column: 51, scope: !6566, inlinedAt: !6618)
!6622 = !DILocation(line: 478, column: 63, scope: !6566, inlinedAt: !6618)
!6623 = !DILocation(line: 480, column: 15, scope: !6566, inlinedAt: !6618)
!6624 = !DILocation(line: 538, column: 45, scope: !6538, inlinedAt: !6608)
!6625 = !DILocation(line: 538, column: 57, scope: !6538, inlinedAt: !6608)
!6626 = !DILocation(line: 542, column: 16, scope: !6536, inlinedAt: !6608)
!6627 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !6527, file: !3, line: 6829, type: !5824)
!6628 = !DILocation(line: 6829, column: 33, scope: !6527)
!6629 = !DILocalVariable(name: "indexPtr", arg: 2, scope: !6527, file: !3, line: 6829, type: !815)
!6630 = !DILocation(line: 6829, column: 47, scope: !6527)
!6631 = !DILocalVariable(name: "ha", scope: !6527, file: !3, line: 6831, type: !5540)
!6632 = !DILocation(line: 6831, column: 12, scope: !6527)
!6633 = !DILocalVariable(name: "io_addr", scope: !6527, file: !3, line: 6832, type: !186)
!6634 = !DILocation(line: 6832, column: 11, scope: !6527)
!6635 = !DILocalVariable(name: "mem_addr", scope: !6527, file: !3, line: 6833, type: !186)
!6636 = !DILocation(line: 6833, column: 11, scope: !6527)
!6637 = !DILocalVariable(name: "io_len", scope: !6527, file: !3, line: 6834, type: !186)
!6638 = !DILocation(line: 6834, column: 11, scope: !6527)
!6639 = !DILocalVariable(name: "mem_len", scope: !6527, file: !3, line: 6835, type: !186)
!6640 = !DILocation(line: 6835, column: 11, scope: !6527)
!6641 = !DILocalVariable(name: "j", scope: !6527, file: !3, line: 6836, type: !182)
!6642 = !DILocation(line: 6836, column: 6, scope: !6527)
!6643 = !DILocalVariable(name: "index", scope: !6527, file: !3, line: 6837, type: !182)
!6644 = !DILocation(line: 6837, column: 6, scope: !6527)
!6645 = !DILocalVariable(name: "dma_address", scope: !6527, file: !3, line: 6838, type: !3904)
!6646 = !DILocation(line: 6838, column: 13, scope: !6527)
!6647 = !DILocalVariable(name: "ioremap_ptr", scope: !6527, file: !3, line: 6839, type: !196)
!6648 = !DILocation(line: 6839, column: 16, scope: !6527)
!6649 = !DILocalVariable(name: "mem_ptr", scope: !6527, file: !3, line: 6840, type: !196)
!6650 = !DILocation(line: 6840, column: 16, scope: !6527)
!6651 = !DILocalVariable(name: "IsDead", scope: !6527, file: !3, line: 6841, type: !186)
!6652 = !DILocation(line: 6841, column: 11, scope: !6527)
!6653 = !DILocation(line: 6844, column: 8, scope: !6527)
!6654 = !DILocation(line: 6845, column: 9, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6845, column: 2)
!6656 = !DILocation(line: 6845, column: 7, scope: !6655)
!6657 = !DILocation(line: 6845, column: 14, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 6845, column: 2)
!6659 = !DILocation(line: 6845, column: 16, scope: !6658)
!6660 = !DILocation(line: 6845, column: 2, scope: !6655)
!6661 = !DILocation(line: 6846, column: 14, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 6846, column: 7)
!6663 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 6845, column: 41)
!6664 = !DILocation(line: 6846, column: 7, scope: !6662)
!6665 = !DILocation(line: 6846, column: 17, scope: !6662)
!6666 = !DILocation(line: 6846, column: 7, scope: !6663)
!6667 = !DILocation(line: 6847, column: 12, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 6846, column: 26)
!6669 = !DILocation(line: 6847, column: 10, scope: !6668)
!6670 = !DILocation(line: 6848, column: 4, scope: !6668)
!6671 = !DILocation(line: 6850, column: 2, scope: !6663)
!6672 = !DILocation(line: 6845, column: 37, scope: !6658)
!6673 = !DILocation(line: 6845, column: 2, scope: !6658)
!6674 = distinct !{!6674, !6660, !6675}
!6675 = !DILocation(line: 6850, column: 2, scope: !6655)
!6676 = !DILocation(line: 6852, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6852, column: 6)
!6678 = !DILocation(line: 6852, column: 12, scope: !6677)
!6679 = !DILocation(line: 6852, column: 6, scope: !6527)
!6680 = !DILocation(line: 6853, column: 3, scope: !6677)
!6681 = !DILocation(line: 6856, column: 11, scope: !6527)
!6682 = !DILocation(line: 6857, column: 10, scope: !6527)
!6683 = !DILocation(line: 6858, column: 10, scope: !6527)
!6684 = !DILocation(line: 6859, column: 9, scope: !6527)
!6685 = !DILocation(line: 6861, column: 9, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6861, column: 2)
!6687 = !DILocation(line: 6861, column: 7, scope: !6686)
!6688 = !DILocation(line: 6861, column: 14, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 6861, column: 2)
!6690 = !DILocation(line: 6861, column: 16, scope: !6689)
!6691 = !DILocation(line: 6861, column: 2, scope: !6686)
!6692 = !DILocation(line: 6862, column: 8, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 6862, column: 7)
!6694 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 6861, column: 26)
!6695 = !DILocation(line: 6862, column: 7, scope: !6694)
!6696 = !DILocation(line: 6863, column: 4, scope: !6693)
!6697 = !DILocation(line: 6865, column: 7, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 6865, column: 7)
!6699 = !DILocation(line: 6865, column: 38, scope: !6698)
!6700 = !DILocation(line: 6865, column: 7, scope: !6694)
!6701 = !DILocation(line: 6866, column: 14, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 6865, column: 55)
!6703 = !DILocation(line: 6866, column: 12, scope: !6702)
!6704 = !DILocation(line: 6867, column: 13, scope: !6702)
!6705 = !DILocation(line: 6867, column: 11, scope: !6702)
!6706 = !DILocation(line: 6868, column: 3, scope: !6702)
!6707 = !DILocation(line: 6869, column: 15, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 6868, column: 10)
!6709 = !DILocation(line: 6869, column: 13, scope: !6708)
!6710 = !DILocation(line: 6870, column: 14, scope: !6708)
!6711 = !DILocation(line: 6870, column: 12, scope: !6708)
!6712 = !DILocation(line: 6872, column: 2, scope: !6694)
!6713 = !DILocation(line: 6861, column: 22, scope: !6689)
!6714 = !DILocation(line: 6861, column: 2, scope: !6689)
!6715 = distinct !{!6715, !6691, !6716}
!6716 = !DILocation(line: 6872, column: 2, scope: !6686)
!6717 = !DILocation(line: 6875, column: 6, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6875, column: 6)
!6719 = !DILocation(line: 6875, column: 6, scope: !6527)
!6720 = !DILocalVariable(name: "base", scope: !6721, file: !3, line: 6876, type: !186)
!6721 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 6875, column: 16)
!6722 = !DILocation(line: 6876, column: 12, scope: !6721)
!6723 = !DILocalVariable(name: "offs", scope: !6721, file: !3, line: 6877, type: !186)
!6724 = !DILocation(line: 6877, column: 12, scope: !6721)
!6725 = !DILocation(line: 6879, column: 10, scope: !6721)
!6726 = !DILocation(line: 6879, column: 19, scope: !6721)
!6727 = !DILocation(line: 6879, column: 8, scope: !6721)
!6728 = !DILocation(line: 6880, column: 10, scope: !6721)
!6729 = !DILocation(line: 6880, column: 21, scope: !6721)
!6730 = !DILocation(line: 6880, column: 19, scope: !6721)
!6731 = !DILocation(line: 6880, column: 8, scope: !6721)
!6732 = !DILocation(line: 6881, column: 25, scope: !6721)
!6733 = !DILocation(line: 6881, column: 17, scope: !6721)
!6734 = !DILocation(line: 6881, column: 15, scope: !6721)
!6735 = !DILocation(line: 6882, column: 8, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 6882, column: 7)
!6737 = !DILocation(line: 6882, column: 7, scope: !6721)
!6738 = !DILocation(line: 6883, column: 4, scope: !6736)
!6739 = !DILocation(line: 6884, column: 13, scope: !6721)
!6740 = !DILocation(line: 6884, column: 27, scope: !6721)
!6741 = !DILocation(line: 6884, column: 25, scope: !6721)
!6742 = !DILocation(line: 6884, column: 11, scope: !6721)
!6743 = !DILocation(line: 6885, column: 2, scope: !6721)
!6744 = !DILocation(line: 6886, column: 15, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 6885, column: 9)
!6746 = !DILocation(line: 6887, column: 11, scope: !6745)
!6747 = !DILocation(line: 6891, column: 7, scope: !6527)
!6748 = !DILocation(line: 6891, column: 5, scope: !6527)
!6749 = !DILocation(line: 6892, column: 6, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6892, column: 6)
!6751 = !DILocation(line: 6892, column: 9, scope: !6750)
!6752 = !DILocation(line: 6892, column: 6, scope: !6527)
!6753 = !DILocation(line: 6893, column: 3, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 6892, column: 18)
!6755 = !DILocation(line: 6895, column: 3, scope: !6754)
!6756 = !DILocation(line: 6898, column: 9, scope: !6527)
!6757 = !DILocation(line: 6898, column: 2, scope: !6527)
!6758 = !DILocation(line: 6898, column: 16, scope: !6527)
!6759 = !DILocation(line: 6899, column: 18, scope: !6527)
!6760 = !DILocation(line: 6899, column: 9, scope: !6527)
!6761 = !DILocation(line: 6899, column: 2, scope: !6527)
!6762 = !DILocation(line: 6899, column: 16, scope: !6527)
!6763 = !DILocation(line: 6900, column: 2, scope: !6527)
!6764 = !DILocation(line: 6900, column: 6, scope: !6527)
!6765 = !DILocation(line: 6900, column: 13, scope: !6527)
!6766 = !DILocation(line: 6903, column: 16, scope: !6527)
!6767 = !DILocation(line: 6903, column: 2, scope: !6527)
!6768 = !DILocation(line: 6903, column: 6, scope: !6527)
!6769 = !DILocation(line: 6903, column: 14, scope: !6527)
!6770 = !DILocation(line: 6904, column: 15, scope: !6527)
!6771 = !DILocation(line: 6904, column: 2, scope: !6527)
!6772 = !DILocation(line: 6904, column: 6, scope: !6527)
!6773 = !DILocation(line: 6904, column: 13, scope: !6527)
!6774 = !DILocation(line: 6905, column: 17, scope: !6527)
!6775 = !DILocation(line: 6905, column: 2, scope: !6527)
!6776 = !DILocation(line: 6905, column: 6, scope: !6527)
!6777 = !DILocation(line: 6905, column: 15, scope: !6527)
!6778 = !DILocation(line: 6906, column: 16, scope: !6527)
!6779 = !DILocation(line: 6906, column: 2, scope: !6527)
!6780 = !DILocation(line: 6906, column: 6, scope: !6527)
!6781 = !DILocation(line: 6906, column: 14, scope: !6527)
!6782 = !DILocation(line: 6907, column: 16, scope: !6527)
!6783 = !DILocation(line: 6907, column: 2, scope: !6527)
!6784 = !DILocation(line: 6907, column: 6, scope: !6527)
!6785 = !DILocation(line: 6907, column: 14, scope: !6527)
!6786 = !DILocation(line: 6908, column: 20, scope: !6527)
!6787 = !DILocation(line: 6908, column: 2, scope: !6527)
!6788 = !DILocation(line: 6908, column: 6, scope: !6527)
!6789 = !DILocation(line: 6908, column: 18, scope: !6527)
!6790 = !DILocation(line: 6909, column: 28, scope: !6527)
!6791 = !DILocation(line: 6909, column: 17, scope: !6527)
!6792 = !DILocation(line: 6909, column: 2, scope: !6527)
!6793 = !DILocation(line: 6909, column: 6, scope: !6527)
!6794 = !DILocation(line: 6909, column: 15, scope: !6527)
!6795 = !DILocation(line: 6910, column: 17, scope: !6527)
!6796 = !DILocation(line: 6910, column: 2, scope: !6527)
!6797 = !DILocation(line: 6910, column: 6, scope: !6527)
!6798 = !DILocation(line: 6910, column: 15, scope: !6527)
!6799 = !DILocation(line: 6911, column: 15, scope: !6527)
!6800 = !DILocation(line: 6911, column: 2, scope: !6527)
!6801 = !DILocation(line: 6911, column: 6, scope: !6527)
!6802 = !DILocation(line: 6911, column: 13, scope: !6527)
!6803 = !DILocation(line: 6919, column: 32, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6919, column: 6)
!6805 = !DILocation(line: 6919, column: 55, scope: !6804)
!6806 = !DILocation(line: 6920, column: 21, scope: !6804)
!6807 = !DILocation(line: 6920, column: 25, scope: !6804)
!6808 = !DILocation(line: 6920, column: 33, scope: !6804)
!6809 = !DILocation(line: 6920, column: 7, scope: !6804)
!6810 = !DILocation(line: 6919, column: 6, scope: !6527)
!6811 = !DILocation(line: 6921, column: 4, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 6920, column: 57)
!6813 = !DILocation(line: 6921, column: 9, scope: !6812)
!6814 = !DILocation(line: 6921, column: 15, scope: !6812)
!6815 = !DILocation(line: 6922, column: 2, scope: !6812)
!6816 = !DILocation(line: 6923, column: 21, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 6923, column: 7)
!6818 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 6922, column: 9)
!6819 = !DILocation(line: 6923, column: 25, scope: !6817)
!6820 = !DILocation(line: 6923, column: 33, scope: !6817)
!6821 = !DILocation(line: 6923, column: 7, scope: !6817)
!6822 = !DILocation(line: 6923, column: 56, scope: !6817)
!6823 = !DILocation(line: 6923, column: 7, scope: !6818)
!6824 = !DILocation(line: 6924, column: 4, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 6923, column: 62)
!6826 = !DILocation(line: 6925, column: 26, scope: !6825)
!6827 = !DILocation(line: 6925, column: 30, scope: !6825)
!6828 = !DILocation(line: 6925, column: 11, scope: !6825)
!6829 = !DILocation(line: 6925, column: 4, scope: !6825)
!6830 = !DILocation(line: 6928, column: 5, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6928, column: 5)
!6832 = !DILocation(line: 6928, column: 17, scope: !6831)
!6833 = !DILocation(line: 6928, column: 21, scope: !6831)
!6834 = !DILocation(line: 6928, column: 5, scope: !6527)
!6835 = !DILocation(line: 6929, column: 39, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 6928, column: 35)
!6837 = !DILocation(line: 6929, column: 48, scope: !6836)
!6838 = !DILocation(line: 6929, column: 19, scope: !6836)
!6839 = !DILocation(line: 6929, column: 17, scope: !6836)
!6840 = !DILocation(line: 6931, column: 2, scope: !6836)
!6841 = !DILocation(line: 6933, column: 32, scope: !6527)
!6842 = !DILocation(line: 6933, column: 41, scope: !6527)
!6843 = !DILocation(line: 6934, column: 5, scope: !6527)
!6844 = !DILocation(line: 6934, column: 9, scope: !6527)
!6845 = !DILocation(line: 6933, column: 12, scope: !6527)
!6846 = !DILocation(line: 6933, column: 2, scope: !6527)
!6847 = !DILocation(line: 6933, column: 6, scope: !6527)
!6848 = !DILocation(line: 6933, column: 10, scope: !6527)
!6849 = !DILocation(line: 6935, column: 7, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6935, column: 6)
!6851 = !DILocation(line: 6935, column: 11, scope: !6850)
!6852 = !DILocation(line: 6935, column: 6, scope: !6527)
!6853 = !DILocation(line: 6936, column: 3, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 6935, column: 16)
!6855 = !DILocation(line: 6938, column: 25, scope: !6854)
!6856 = !DILocation(line: 6938, column: 29, scope: !6854)
!6857 = !DILocation(line: 6938, column: 10, scope: !6854)
!6858 = !DILocation(line: 6938, column: 3, scope: !6854)
!6859 = !DILocation(line: 6941, column: 34, scope: !6527)
!6860 = !DILocation(line: 6941, column: 43, scope: !6527)
!6861 = !DILocation(line: 6941, column: 14, scope: !6527)
!6862 = !DILocation(line: 6941, column: 2, scope: !6527)
!6863 = !DILocation(line: 6941, column: 6, scope: !6527)
!6864 = !DILocation(line: 6941, column: 12, scope: !6527)
!6865 = !DILocation(line: 6944, column: 7, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6944, column: 6)
!6867 = !DILocation(line: 6944, column: 11, scope: !6866)
!6868 = !DILocation(line: 6944, column: 6, scope: !6527)
!6869 = !DILocation(line: 6945, column: 3, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 6944, column: 18)
!6871 = !DILocation(line: 6947, column: 25, scope: !6870)
!6872 = !DILocation(line: 6947, column: 29, scope: !6870)
!6873 = !DILocation(line: 6947, column: 10, scope: !6870)
!6874 = !DILocation(line: 6947, column: 3, scope: !6870)
!6875 = !DILocation(line: 6949, column: 31, scope: !6527)
!6876 = !DILocation(line: 6949, column: 2, scope: !6527)
!6877 = !DILocation(line: 6949, column: 6, scope: !6527)
!6878 = !DILocation(line: 6949, column: 13, scope: !6527)
!6879 = !DILocation(line: 6949, column: 29, scope: !6527)
!6880 = !DILocation(line: 6950, column: 24, scope: !6527)
!6881 = !DILocation(line: 6950, column: 28, scope: !6527)
!6882 = !DILocation(line: 6950, column: 34, scope: !6527)
!6883 = !DILocation(line: 6950, column: 14, scope: !6527)
!6884 = !DILocation(line: 6950, column: 2, scope: !6527)
!6885 = !DILocation(line: 6950, column: 6, scope: !6527)
!6886 = !DILocation(line: 6950, column: 12, scope: !6527)
!6887 = !DILocation(line: 6954, column: 47, scope: !6527)
!6888 = !DILocation(line: 6954, column: 56, scope: !6527)
!6889 = !DILocation(line: 6954, column: 27, scope: !6527)
!6890 = !DILocation(line: 6954, column: 2, scope: !6527)
!6891 = !DILocation(line: 6954, column: 6, scope: !6527)
!6892 = !DILocation(line: 6954, column: 25, scope: !6527)
!6893 = !DILocation(line: 6956, column: 7, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6956, column: 6)
!6895 = !DILocation(line: 6956, column: 11, scope: !6894)
!6896 = !DILocation(line: 6956, column: 6, scope: !6527)
!6897 = !DILocation(line: 6957, column: 3, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 6956, column: 31)
!6899 = !DILocation(line: 6959, column: 25, scope: !6898)
!6900 = !DILocation(line: 6959, column: 29, scope: !6898)
!6901 = !DILocation(line: 6959, column: 10, scope: !6898)
!6902 = !DILocation(line: 6959, column: 3, scope: !6898)
!6903 = !DILocation(line: 6961, column: 36, scope: !6527)
!6904 = !DILocation(line: 6961, column: 2, scope: !6527)
!6905 = !DILocation(line: 6961, column: 6, scope: !6527)
!6906 = !DILocation(line: 6961, column: 34, scope: !6527)
!6907 = !DILocation(line: 540, column: 27, scope: !6537, inlinedAt: !6608)
!6908 = !DILocation(line: 540, column: 6, scope: !6537, inlinedAt: !6608)
!6909 = !DILocation(line: 540, column: 6, scope: !6538, inlinedAt: !6608)
!6910 = !DILocation(line: 544, column: 7, scope: !6568, inlinedAt: !6608)
!6911 = !DILocation(line: 544, column: 12, scope: !6568, inlinedAt: !6608)
!6912 = !DILocation(line: 544, column: 7, scope: !6536, inlinedAt: !6608)
!6913 = !DILocation(line: 545, column: 25, scope: !6568, inlinedAt: !6608)
!6914 = !DILocation(line: 545, column: 31, scope: !6568, inlinedAt: !6608)
!6915 = !DILocation(line: 480, column: 33, scope: !6566, inlinedAt: !6618)
!6916 = !DILocation(line: 480, column: 23, scope: !6566, inlinedAt: !6618)
!6917 = !DILocation(line: 481, column: 29, scope: !6566, inlinedAt: !6618)
!6918 = !DILocation(line: 481, column: 35, scope: !6566, inlinedAt: !6618)
!6919 = !DILocation(line: 481, column: 42, scope: !6566, inlinedAt: !6618)
!6920 = !DILocation(line: 474, column: 23, scope: !6561, inlinedAt: !6617)
!6921 = !DILocation(line: 474, column: 29, scope: !6561, inlinedAt: !6617)
!6922 = !DILocation(line: 474, column: 36, scope: !6561, inlinedAt: !6617)
!6923 = !DILocation(line: 474, column: 9, scope: !6561, inlinedAt: !6617)
!6924 = !DILocation(line: 545, column: 4, scope: !6568, inlinedAt: !6608)
!6925 = !DILocation(line: 547, column: 25, scope: !6536, inlinedAt: !6608)
!6926 = !DILocation(line: 348, column: 7, scope: !6927, inlinedAt: !6615)
!6927 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 348, column: 6)
!6928 = !DILocation(line: 348, column: 6, scope: !6555, inlinedAt: !6615)
!6929 = !DILocation(line: 349, column: 3, scope: !6927, inlinedAt: !6615)
!6930 = !DILocation(line: 351, column: 6, scope: !6931, inlinedAt: !6615)
!6931 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 351, column: 6)
!6932 = !DILocation(line: 351, column: 11, scope: !6931, inlinedAt: !6615)
!6933 = !DILocation(line: 351, column: 6, scope: !6555, inlinedAt: !6615)
!6934 = !DILocation(line: 352, column: 3, scope: !6931, inlinedAt: !6615)
!6935 = !DILocation(line: 354, column: 32, scope: !6936, inlinedAt: !6615)
!6936 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 354, column: 6)
!6937 = !DILocation(line: 354, column: 37, scope: !6936, inlinedAt: !6615)
!6938 = !DILocation(line: 354, column: 42, scope: !6936, inlinedAt: !6615)
!6939 = !DILocation(line: 354, column: 45, scope: !6936, inlinedAt: !6615)
!6940 = !DILocation(line: 354, column: 50, scope: !6936, inlinedAt: !6615)
!6941 = !DILocation(line: 354, column: 6, scope: !6555, inlinedAt: !6615)
!6942 = !DILocation(line: 355, column: 3, scope: !6936, inlinedAt: !6615)
!6943 = !DILocation(line: 356, column: 32, scope: !6944, inlinedAt: !6615)
!6944 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 356, column: 6)
!6945 = !DILocation(line: 356, column: 37, scope: !6944, inlinedAt: !6615)
!6946 = !DILocation(line: 356, column: 43, scope: !6944, inlinedAt: !6615)
!6947 = !DILocation(line: 356, column: 46, scope: !6944, inlinedAt: !6615)
!6948 = !DILocation(line: 356, column: 51, scope: !6944, inlinedAt: !6615)
!6949 = !DILocation(line: 356, column: 6, scope: !6555, inlinedAt: !6615)
!6950 = !DILocation(line: 357, column: 3, scope: !6944, inlinedAt: !6615)
!6951 = !DILocation(line: 358, column: 6, scope: !6952, inlinedAt: !6615)
!6952 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 358, column: 6)
!6953 = !DILocation(line: 358, column: 11, scope: !6952, inlinedAt: !6615)
!6954 = !DILocation(line: 358, column: 6, scope: !6555, inlinedAt: !6615)
!6955 = !DILocation(line: 358, column: 26, scope: !6952, inlinedAt: !6615)
!6956 = !DILocation(line: 359, column: 6, scope: !6957, inlinedAt: !6615)
!6957 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 359, column: 6)
!6958 = !DILocation(line: 359, column: 11, scope: !6957, inlinedAt: !6615)
!6959 = !DILocation(line: 359, column: 6, scope: !6555, inlinedAt: !6615)
!6960 = !DILocation(line: 359, column: 26, scope: !6957, inlinedAt: !6615)
!6961 = !DILocation(line: 360, column: 6, scope: !6962, inlinedAt: !6615)
!6962 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 360, column: 6)
!6963 = !DILocation(line: 360, column: 11, scope: !6962, inlinedAt: !6615)
!6964 = !DILocation(line: 360, column: 6, scope: !6555, inlinedAt: !6615)
!6965 = !DILocation(line: 360, column: 26, scope: !6962, inlinedAt: !6615)
!6966 = !DILocation(line: 361, column: 6, scope: !6967, inlinedAt: !6615)
!6967 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 361, column: 6)
!6968 = !DILocation(line: 361, column: 11, scope: !6967, inlinedAt: !6615)
!6969 = !DILocation(line: 361, column: 6, scope: !6555, inlinedAt: !6615)
!6970 = !DILocation(line: 361, column: 26, scope: !6967, inlinedAt: !6615)
!6971 = !DILocation(line: 362, column: 6, scope: !6972, inlinedAt: !6615)
!6972 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 362, column: 6)
!6973 = !DILocation(line: 362, column: 11, scope: !6972, inlinedAt: !6615)
!6974 = !DILocation(line: 362, column: 6, scope: !6555, inlinedAt: !6615)
!6975 = !DILocation(line: 362, column: 26, scope: !6972, inlinedAt: !6615)
!6976 = !DILocation(line: 363, column: 6, scope: !6977, inlinedAt: !6615)
!6977 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 363, column: 6)
!6978 = !DILocation(line: 363, column: 11, scope: !6977, inlinedAt: !6615)
!6979 = !DILocation(line: 363, column: 6, scope: !6555, inlinedAt: !6615)
!6980 = !DILocation(line: 363, column: 26, scope: !6977, inlinedAt: !6615)
!6981 = !DILocation(line: 364, column: 6, scope: !6982, inlinedAt: !6615)
!6982 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 364, column: 6)
!6983 = !DILocation(line: 364, column: 11, scope: !6982, inlinedAt: !6615)
!6984 = !DILocation(line: 364, column: 6, scope: !6555, inlinedAt: !6615)
!6985 = !DILocation(line: 364, column: 26, scope: !6982, inlinedAt: !6615)
!6986 = !DILocation(line: 365, column: 6, scope: !6987, inlinedAt: !6615)
!6987 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 365, column: 6)
!6988 = !DILocation(line: 365, column: 11, scope: !6987, inlinedAt: !6615)
!6989 = !DILocation(line: 365, column: 6, scope: !6555, inlinedAt: !6615)
!6990 = !DILocation(line: 365, column: 26, scope: !6987, inlinedAt: !6615)
!6991 = !DILocation(line: 366, column: 6, scope: !6992, inlinedAt: !6615)
!6992 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 366, column: 6)
!6993 = !DILocation(line: 366, column: 11, scope: !6992, inlinedAt: !6615)
!6994 = !DILocation(line: 366, column: 6, scope: !6555, inlinedAt: !6615)
!6995 = !DILocation(line: 366, column: 26, scope: !6992, inlinedAt: !6615)
!6996 = !DILocation(line: 367, column: 6, scope: !6997, inlinedAt: !6615)
!6997 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 367, column: 6)
!6998 = !DILocation(line: 367, column: 11, scope: !6997, inlinedAt: !6615)
!6999 = !DILocation(line: 367, column: 6, scope: !6555, inlinedAt: !6615)
!7000 = !DILocation(line: 367, column: 26, scope: !6997, inlinedAt: !6615)
!7001 = !DILocation(line: 368, column: 6, scope: !7002, inlinedAt: !6615)
!7002 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 368, column: 6)
!7003 = !DILocation(line: 368, column: 11, scope: !7002, inlinedAt: !6615)
!7004 = !DILocation(line: 368, column: 6, scope: !6555, inlinedAt: !6615)
!7005 = !DILocation(line: 368, column: 26, scope: !7002, inlinedAt: !6615)
!7006 = !DILocation(line: 369, column: 6, scope: !7007, inlinedAt: !6615)
!7007 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 369, column: 6)
!7008 = !DILocation(line: 369, column: 11, scope: !7007, inlinedAt: !6615)
!7009 = !DILocation(line: 369, column: 6, scope: !6555, inlinedAt: !6615)
!7010 = !DILocation(line: 369, column: 26, scope: !7007, inlinedAt: !6615)
!7011 = !DILocation(line: 370, column: 6, scope: !7012, inlinedAt: !6615)
!7012 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 370, column: 6)
!7013 = !DILocation(line: 370, column: 11, scope: !7012, inlinedAt: !6615)
!7014 = !DILocation(line: 370, column: 6, scope: !6555, inlinedAt: !6615)
!7015 = !DILocation(line: 370, column: 26, scope: !7012, inlinedAt: !6615)
!7016 = !DILocation(line: 371, column: 6, scope: !7017, inlinedAt: !6615)
!7017 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 371, column: 6)
!7018 = !DILocation(line: 371, column: 11, scope: !7017, inlinedAt: !6615)
!7019 = !DILocation(line: 371, column: 6, scope: !6555, inlinedAt: !6615)
!7020 = !DILocation(line: 371, column: 26, scope: !7017, inlinedAt: !6615)
!7021 = !DILocation(line: 372, column: 6, scope: !7022, inlinedAt: !6615)
!7022 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 372, column: 6)
!7023 = !DILocation(line: 372, column: 11, scope: !7022, inlinedAt: !6615)
!7024 = !DILocation(line: 372, column: 6, scope: !6555, inlinedAt: !6615)
!7025 = !DILocation(line: 372, column: 26, scope: !7022, inlinedAt: !6615)
!7026 = !DILocation(line: 373, column: 6, scope: !7027, inlinedAt: !6615)
!7027 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 373, column: 6)
!7028 = !DILocation(line: 373, column: 11, scope: !7027, inlinedAt: !6615)
!7029 = !DILocation(line: 373, column: 6, scope: !6555, inlinedAt: !6615)
!7030 = !DILocation(line: 373, column: 26, scope: !7027, inlinedAt: !6615)
!7031 = !DILocation(line: 374, column: 6, scope: !7032, inlinedAt: !6615)
!7032 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 374, column: 6)
!7033 = !DILocation(line: 374, column: 11, scope: !7032, inlinedAt: !6615)
!7034 = !DILocation(line: 374, column: 6, scope: !6555, inlinedAt: !6615)
!7035 = !DILocation(line: 374, column: 26, scope: !7032, inlinedAt: !6615)
!7036 = !DILocation(line: 375, column: 6, scope: !7037, inlinedAt: !6615)
!7037 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 375, column: 6)
!7038 = !DILocation(line: 375, column: 11, scope: !7037, inlinedAt: !6615)
!7039 = !DILocation(line: 375, column: 6, scope: !6555, inlinedAt: !6615)
!7040 = !DILocation(line: 375, column: 27, scope: !7037, inlinedAt: !6615)
!7041 = !DILocation(line: 376, column: 6, scope: !7042, inlinedAt: !6615)
!7042 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 376, column: 6)
!7043 = !DILocation(line: 376, column: 11, scope: !7042, inlinedAt: !6615)
!7044 = !DILocation(line: 376, column: 6, scope: !6555, inlinedAt: !6615)
!7045 = !DILocation(line: 376, column: 32, scope: !7042, inlinedAt: !6615)
!7046 = !DILocation(line: 377, column: 6, scope: !7047, inlinedAt: !6615)
!7047 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 377, column: 6)
!7048 = !DILocation(line: 377, column: 11, scope: !7047, inlinedAt: !6615)
!7049 = !DILocation(line: 377, column: 6, scope: !6555, inlinedAt: !6615)
!7050 = !DILocation(line: 377, column: 32, scope: !7047, inlinedAt: !6615)
!7051 = !DILocation(line: 378, column: 6, scope: !7052, inlinedAt: !6615)
!7052 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 378, column: 6)
!7053 = !DILocation(line: 378, column: 11, scope: !7052, inlinedAt: !6615)
!7054 = !DILocation(line: 378, column: 6, scope: !6555, inlinedAt: !6615)
!7055 = !DILocation(line: 378, column: 32, scope: !7052, inlinedAt: !6615)
!7056 = !DILocation(line: 379, column: 6, scope: !7057, inlinedAt: !6615)
!7057 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 379, column: 6)
!7058 = !DILocation(line: 379, column: 11, scope: !7057, inlinedAt: !6615)
!7059 = !DILocation(line: 379, column: 6, scope: !6555, inlinedAt: !6615)
!7060 = !DILocation(line: 379, column: 33, scope: !7057, inlinedAt: !6615)
!7061 = !DILocation(line: 380, column: 6, scope: !7062, inlinedAt: !6615)
!7062 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 380, column: 6)
!7063 = !DILocation(line: 380, column: 11, scope: !7062, inlinedAt: !6615)
!7064 = !DILocation(line: 380, column: 6, scope: !6555, inlinedAt: !6615)
!7065 = !DILocation(line: 380, column: 33, scope: !7062, inlinedAt: !6615)
!7066 = !DILocation(line: 381, column: 6, scope: !7067, inlinedAt: !6615)
!7067 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 381, column: 6)
!7068 = !DILocation(line: 381, column: 11, scope: !7067, inlinedAt: !6615)
!7069 = !DILocation(line: 381, column: 6, scope: !6555, inlinedAt: !6615)
!7070 = !DILocation(line: 381, column: 33, scope: !7067, inlinedAt: !6615)
!7071 = !DILocation(line: 382, column: 2, scope: !7072, inlinedAt: !6615)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !164, line: 382, column: 2)
!7073 = distinct !DILexicalBlock(scope: !6555, file: !164, line: 382, column: 2)
!7074 = !{i32 -2144322103, i32 -2144322074, i32 -2144322028, i32 -2144321970, i32 -2144321916, i32 -2144321862, i32 -2144321807, i32 -2144321776}
!7075 = !DILocation(line: 382, column: 2, scope: !7076, inlinedAt: !6615)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !164, line: 382, column: 2)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !164, line: 382, column: 2)
!7078 = !{i32 -2144321333, i32 -2144321326, i32 -2144321272, i32 -2144321241, i32 -2144321211}
!7079 = !DILocation(line: 382, column: 2, scope: !7077, inlinedAt: !6615)
!7080 = !DILocation(line: 386, column: 1, scope: !6555, inlinedAt: !6615)
!7081 = !DILocation(line: 547, column: 9, scope: !6536, inlinedAt: !6608)
!7082 = !DILocation(line: 549, column: 8, scope: !7083, inlinedAt: !6608)
!7083 = distinct !DILexicalBlock(scope: !6536, file: !164, line: 549, column: 7)
!7084 = !DILocation(line: 549, column: 7, scope: !6536, inlinedAt: !6608)
!7085 = !DILocation(line: 550, column: 4, scope: !7083, inlinedAt: !6608)
!7086 = !DILocation(line: 553, column: 33, scope: !6536, inlinedAt: !6608)
!7087 = !DILocation(line: 325, column: 6, scope: !7088, inlinedAt: !6613)
!7088 = distinct !DILexicalBlock(scope: !6549, file: !164, line: 325, column: 6)
!7089 = !DILocation(line: 325, column: 6, scope: !6549, inlinedAt: !6613)
!7090 = !DILocation(line: 326, column: 3, scope: !7088, inlinedAt: !6613)
!7091 = !DILocation(line: 332, column: 9, scope: !6549, inlinedAt: !6613)
!7092 = !DILocation(line: 332, column: 15, scope: !6549, inlinedAt: !6613)
!7093 = !DILocation(line: 332, column: 2, scope: !6549, inlinedAt: !6613)
!7094 = !DILocation(line: 336, column: 1, scope: !6549, inlinedAt: !6613)
!7095 = !DILocation(line: 553, column: 5, scope: !6536, inlinedAt: !6608)
!7096 = !DILocation(line: 553, column: 41, scope: !6536, inlinedAt: !6608)
!7097 = !DILocation(line: 554, column: 5, scope: !6536, inlinedAt: !6608)
!7098 = !DILocation(line: 554, column: 12, scope: !6536, inlinedAt: !6608)
!7099 = !DILocation(line: 448, column: 31, scope: !6531, inlinedAt: !6607)
!7100 = !DILocation(line: 448, column: 34, scope: !6531, inlinedAt: !6607)
!7101 = !DILocation(line: 448, column: 14, scope: !6531, inlinedAt: !6607)
!7102 = !DILocation(line: 450, column: 22, scope: !6531, inlinedAt: !6607)
!7103 = !DILocation(line: 450, column: 25, scope: !6531, inlinedAt: !6607)
!7104 = !DILocation(line: 450, column: 30, scope: !6531, inlinedAt: !6607)
!7105 = !DILocation(line: 450, column: 36, scope: !6531, inlinedAt: !6607)
!7106 = !DILocation(line: 450, column: 8, scope: !6531, inlinedAt: !6607)
!7107 = !DILocation(line: 450, column: 6, scope: !6531, inlinedAt: !6607)
!7108 = !DILocation(line: 451, column: 9, scope: !6531, inlinedAt: !6607)
!7109 = !DILocation(line: 552, column: 3, scope: !6536, inlinedAt: !6608)
!7110 = !DILocation(line: 557, column: 19, scope: !6538, inlinedAt: !6608)
!7111 = !DILocation(line: 557, column: 25, scope: !6538, inlinedAt: !6608)
!7112 = !DILocation(line: 557, column: 9, scope: !6538, inlinedAt: !6608)
!7113 = !DILocation(line: 557, column: 2, scope: !6538, inlinedAt: !6608)
!7114 = !DILocation(line: 558, column: 1, scope: !6538, inlinedAt: !6608)
!7115 = !DILocation(line: 6964, column: 13, scope: !6527)
!7116 = !DILocation(line: 6964, column: 2, scope: !6527)
!7117 = !DILocation(line: 6964, column: 6, scope: !6527)
!7118 = !DILocation(line: 6964, column: 11, scope: !6527)
!7119 = !DILocation(line: 6966, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6966, column: 6)
!7121 = !DILocation(line: 6966, column: 11, scope: !7120)
!7122 = !DILocation(line: 6966, column: 6, scope: !6527)
!7123 = !DILocation(line: 6967, column: 3, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 6966, column: 17)
!7125 = !DILocation(line: 6969, column: 25, scope: !7124)
!7126 = !DILocation(line: 6969, column: 29, scope: !7124)
!7127 = !DILocation(line: 6969, column: 10, scope: !7124)
!7128 = !DILocation(line: 6969, column: 3, scope: !7124)
!7129 = !DILocation(line: 540, column: 27, scope: !6537, inlinedAt: !6587)
!7130 = !DILocation(line: 540, column: 6, scope: !6537, inlinedAt: !6587)
!7131 = !DILocation(line: 540, column: 6, scope: !6538, inlinedAt: !6587)
!7132 = !DILocation(line: 544, column: 7, scope: !6568, inlinedAt: !6587)
!7133 = !DILocation(line: 544, column: 12, scope: !6568, inlinedAt: !6587)
!7134 = !DILocation(line: 544, column: 7, scope: !6536, inlinedAt: !6587)
!7135 = !DILocation(line: 545, column: 25, scope: !6568, inlinedAt: !6587)
!7136 = !DILocation(line: 545, column: 31, scope: !6568, inlinedAt: !6587)
!7137 = !DILocation(line: 480, column: 33, scope: !6566, inlinedAt: !6597)
!7138 = !DILocation(line: 480, column: 23, scope: !6566, inlinedAt: !6597)
!7139 = !DILocation(line: 481, column: 29, scope: !6566, inlinedAt: !6597)
!7140 = !DILocation(line: 481, column: 35, scope: !6566, inlinedAt: !6597)
!7141 = !DILocation(line: 481, column: 42, scope: !6566, inlinedAt: !6597)
!7142 = !DILocation(line: 474, column: 23, scope: !6561, inlinedAt: !6596)
!7143 = !DILocation(line: 474, column: 29, scope: !6561, inlinedAt: !6596)
!7144 = !DILocation(line: 474, column: 36, scope: !6561, inlinedAt: !6596)
!7145 = !DILocation(line: 474, column: 9, scope: !6561, inlinedAt: !6596)
!7146 = !DILocation(line: 545, column: 4, scope: !6568, inlinedAt: !6587)
!7147 = !DILocation(line: 547, column: 25, scope: !6536, inlinedAt: !6587)
!7148 = !DILocation(line: 348, column: 7, scope: !6927, inlinedAt: !6594)
!7149 = !DILocation(line: 348, column: 6, scope: !6555, inlinedAt: !6594)
!7150 = !DILocation(line: 349, column: 3, scope: !6927, inlinedAt: !6594)
!7151 = !DILocation(line: 351, column: 6, scope: !6931, inlinedAt: !6594)
!7152 = !DILocation(line: 351, column: 11, scope: !6931, inlinedAt: !6594)
!7153 = !DILocation(line: 351, column: 6, scope: !6555, inlinedAt: !6594)
!7154 = !DILocation(line: 352, column: 3, scope: !6931, inlinedAt: !6594)
!7155 = !DILocation(line: 354, column: 32, scope: !6936, inlinedAt: !6594)
!7156 = !DILocation(line: 354, column: 37, scope: !6936, inlinedAt: !6594)
!7157 = !DILocation(line: 354, column: 42, scope: !6936, inlinedAt: !6594)
!7158 = !DILocation(line: 354, column: 45, scope: !6936, inlinedAt: !6594)
!7159 = !DILocation(line: 354, column: 50, scope: !6936, inlinedAt: !6594)
!7160 = !DILocation(line: 354, column: 6, scope: !6555, inlinedAt: !6594)
!7161 = !DILocation(line: 355, column: 3, scope: !6936, inlinedAt: !6594)
!7162 = !DILocation(line: 356, column: 32, scope: !6944, inlinedAt: !6594)
!7163 = !DILocation(line: 356, column: 37, scope: !6944, inlinedAt: !6594)
!7164 = !DILocation(line: 356, column: 43, scope: !6944, inlinedAt: !6594)
!7165 = !DILocation(line: 356, column: 46, scope: !6944, inlinedAt: !6594)
!7166 = !DILocation(line: 356, column: 51, scope: !6944, inlinedAt: !6594)
!7167 = !DILocation(line: 356, column: 6, scope: !6555, inlinedAt: !6594)
!7168 = !DILocation(line: 357, column: 3, scope: !6944, inlinedAt: !6594)
!7169 = !DILocation(line: 358, column: 6, scope: !6952, inlinedAt: !6594)
!7170 = !DILocation(line: 358, column: 11, scope: !6952, inlinedAt: !6594)
!7171 = !DILocation(line: 358, column: 6, scope: !6555, inlinedAt: !6594)
!7172 = !DILocation(line: 358, column: 26, scope: !6952, inlinedAt: !6594)
!7173 = !DILocation(line: 359, column: 6, scope: !6957, inlinedAt: !6594)
!7174 = !DILocation(line: 359, column: 11, scope: !6957, inlinedAt: !6594)
!7175 = !DILocation(line: 359, column: 6, scope: !6555, inlinedAt: !6594)
!7176 = !DILocation(line: 359, column: 26, scope: !6957, inlinedAt: !6594)
!7177 = !DILocation(line: 360, column: 6, scope: !6962, inlinedAt: !6594)
!7178 = !DILocation(line: 360, column: 11, scope: !6962, inlinedAt: !6594)
!7179 = !DILocation(line: 360, column: 6, scope: !6555, inlinedAt: !6594)
!7180 = !DILocation(line: 360, column: 26, scope: !6962, inlinedAt: !6594)
!7181 = !DILocation(line: 361, column: 6, scope: !6967, inlinedAt: !6594)
!7182 = !DILocation(line: 361, column: 11, scope: !6967, inlinedAt: !6594)
!7183 = !DILocation(line: 361, column: 6, scope: !6555, inlinedAt: !6594)
!7184 = !DILocation(line: 361, column: 26, scope: !6967, inlinedAt: !6594)
!7185 = !DILocation(line: 362, column: 6, scope: !6972, inlinedAt: !6594)
!7186 = !DILocation(line: 362, column: 11, scope: !6972, inlinedAt: !6594)
!7187 = !DILocation(line: 362, column: 6, scope: !6555, inlinedAt: !6594)
!7188 = !DILocation(line: 362, column: 26, scope: !6972, inlinedAt: !6594)
!7189 = !DILocation(line: 363, column: 6, scope: !6977, inlinedAt: !6594)
!7190 = !DILocation(line: 363, column: 11, scope: !6977, inlinedAt: !6594)
!7191 = !DILocation(line: 363, column: 6, scope: !6555, inlinedAt: !6594)
!7192 = !DILocation(line: 363, column: 26, scope: !6977, inlinedAt: !6594)
!7193 = !DILocation(line: 364, column: 6, scope: !6982, inlinedAt: !6594)
!7194 = !DILocation(line: 364, column: 11, scope: !6982, inlinedAt: !6594)
!7195 = !DILocation(line: 364, column: 6, scope: !6555, inlinedAt: !6594)
!7196 = !DILocation(line: 364, column: 26, scope: !6982, inlinedAt: !6594)
!7197 = !DILocation(line: 365, column: 6, scope: !6987, inlinedAt: !6594)
!7198 = !DILocation(line: 365, column: 11, scope: !6987, inlinedAt: !6594)
!7199 = !DILocation(line: 365, column: 6, scope: !6555, inlinedAt: !6594)
!7200 = !DILocation(line: 365, column: 26, scope: !6987, inlinedAt: !6594)
!7201 = !DILocation(line: 366, column: 6, scope: !6992, inlinedAt: !6594)
!7202 = !DILocation(line: 366, column: 11, scope: !6992, inlinedAt: !6594)
!7203 = !DILocation(line: 366, column: 6, scope: !6555, inlinedAt: !6594)
!7204 = !DILocation(line: 366, column: 26, scope: !6992, inlinedAt: !6594)
!7205 = !DILocation(line: 367, column: 6, scope: !6997, inlinedAt: !6594)
!7206 = !DILocation(line: 367, column: 11, scope: !6997, inlinedAt: !6594)
!7207 = !DILocation(line: 367, column: 6, scope: !6555, inlinedAt: !6594)
!7208 = !DILocation(line: 367, column: 26, scope: !6997, inlinedAt: !6594)
!7209 = !DILocation(line: 368, column: 6, scope: !7002, inlinedAt: !6594)
!7210 = !DILocation(line: 368, column: 11, scope: !7002, inlinedAt: !6594)
!7211 = !DILocation(line: 368, column: 6, scope: !6555, inlinedAt: !6594)
!7212 = !DILocation(line: 368, column: 26, scope: !7002, inlinedAt: !6594)
!7213 = !DILocation(line: 369, column: 6, scope: !7007, inlinedAt: !6594)
!7214 = !DILocation(line: 369, column: 11, scope: !7007, inlinedAt: !6594)
!7215 = !DILocation(line: 369, column: 6, scope: !6555, inlinedAt: !6594)
!7216 = !DILocation(line: 369, column: 26, scope: !7007, inlinedAt: !6594)
!7217 = !DILocation(line: 370, column: 6, scope: !7012, inlinedAt: !6594)
!7218 = !DILocation(line: 370, column: 11, scope: !7012, inlinedAt: !6594)
!7219 = !DILocation(line: 370, column: 6, scope: !6555, inlinedAt: !6594)
!7220 = !DILocation(line: 370, column: 26, scope: !7012, inlinedAt: !6594)
!7221 = !DILocation(line: 371, column: 6, scope: !7017, inlinedAt: !6594)
!7222 = !DILocation(line: 371, column: 11, scope: !7017, inlinedAt: !6594)
!7223 = !DILocation(line: 371, column: 6, scope: !6555, inlinedAt: !6594)
!7224 = !DILocation(line: 371, column: 26, scope: !7017, inlinedAt: !6594)
!7225 = !DILocation(line: 372, column: 6, scope: !7022, inlinedAt: !6594)
!7226 = !DILocation(line: 372, column: 11, scope: !7022, inlinedAt: !6594)
!7227 = !DILocation(line: 372, column: 6, scope: !6555, inlinedAt: !6594)
!7228 = !DILocation(line: 372, column: 26, scope: !7022, inlinedAt: !6594)
!7229 = !DILocation(line: 373, column: 6, scope: !7027, inlinedAt: !6594)
!7230 = !DILocation(line: 373, column: 11, scope: !7027, inlinedAt: !6594)
!7231 = !DILocation(line: 373, column: 6, scope: !6555, inlinedAt: !6594)
!7232 = !DILocation(line: 373, column: 26, scope: !7027, inlinedAt: !6594)
!7233 = !DILocation(line: 374, column: 6, scope: !7032, inlinedAt: !6594)
!7234 = !DILocation(line: 374, column: 11, scope: !7032, inlinedAt: !6594)
!7235 = !DILocation(line: 374, column: 6, scope: !6555, inlinedAt: !6594)
!7236 = !DILocation(line: 374, column: 26, scope: !7032, inlinedAt: !6594)
!7237 = !DILocation(line: 375, column: 6, scope: !7037, inlinedAt: !6594)
!7238 = !DILocation(line: 375, column: 11, scope: !7037, inlinedAt: !6594)
!7239 = !DILocation(line: 375, column: 6, scope: !6555, inlinedAt: !6594)
!7240 = !DILocation(line: 375, column: 27, scope: !7037, inlinedAt: !6594)
!7241 = !DILocation(line: 376, column: 6, scope: !7042, inlinedAt: !6594)
!7242 = !DILocation(line: 376, column: 11, scope: !7042, inlinedAt: !6594)
!7243 = !DILocation(line: 376, column: 6, scope: !6555, inlinedAt: !6594)
!7244 = !DILocation(line: 376, column: 32, scope: !7042, inlinedAt: !6594)
!7245 = !DILocation(line: 377, column: 6, scope: !7047, inlinedAt: !6594)
!7246 = !DILocation(line: 377, column: 11, scope: !7047, inlinedAt: !6594)
!7247 = !DILocation(line: 377, column: 6, scope: !6555, inlinedAt: !6594)
!7248 = !DILocation(line: 377, column: 32, scope: !7047, inlinedAt: !6594)
!7249 = !DILocation(line: 378, column: 6, scope: !7052, inlinedAt: !6594)
!7250 = !DILocation(line: 378, column: 11, scope: !7052, inlinedAt: !6594)
!7251 = !DILocation(line: 378, column: 6, scope: !6555, inlinedAt: !6594)
!7252 = !DILocation(line: 378, column: 32, scope: !7052, inlinedAt: !6594)
!7253 = !DILocation(line: 379, column: 6, scope: !7057, inlinedAt: !6594)
!7254 = !DILocation(line: 379, column: 11, scope: !7057, inlinedAt: !6594)
!7255 = !DILocation(line: 379, column: 6, scope: !6555, inlinedAt: !6594)
!7256 = !DILocation(line: 379, column: 33, scope: !7057, inlinedAt: !6594)
!7257 = !DILocation(line: 380, column: 6, scope: !7062, inlinedAt: !6594)
!7258 = !DILocation(line: 380, column: 11, scope: !7062, inlinedAt: !6594)
!7259 = !DILocation(line: 380, column: 6, scope: !6555, inlinedAt: !6594)
!7260 = !DILocation(line: 380, column: 33, scope: !7062, inlinedAt: !6594)
!7261 = !DILocation(line: 381, column: 6, scope: !7067, inlinedAt: !6594)
!7262 = !DILocation(line: 381, column: 11, scope: !7067, inlinedAt: !6594)
!7263 = !DILocation(line: 381, column: 6, scope: !6555, inlinedAt: !6594)
!7264 = !DILocation(line: 381, column: 33, scope: !7067, inlinedAt: !6594)
!7265 = !DILocation(line: 382, column: 2, scope: !7072, inlinedAt: !6594)
!7266 = !DILocation(line: 382, column: 2, scope: !7076, inlinedAt: !6594)
!7267 = !DILocation(line: 382, column: 2, scope: !7077, inlinedAt: !6594)
!7268 = !DILocation(line: 386, column: 1, scope: !6555, inlinedAt: !6594)
!7269 = !DILocation(line: 547, column: 9, scope: !6536, inlinedAt: !6587)
!7270 = !DILocation(line: 549, column: 8, scope: !7083, inlinedAt: !6587)
!7271 = !DILocation(line: 549, column: 7, scope: !6536, inlinedAt: !6587)
!7272 = !DILocation(line: 550, column: 4, scope: !7083, inlinedAt: !6587)
!7273 = !DILocation(line: 553, column: 33, scope: !6536, inlinedAt: !6587)
!7274 = !DILocation(line: 325, column: 6, scope: !7088, inlinedAt: !6592)
!7275 = !DILocation(line: 325, column: 6, scope: !6549, inlinedAt: !6592)
!7276 = !DILocation(line: 326, column: 3, scope: !7088, inlinedAt: !6592)
!7277 = !DILocation(line: 332, column: 9, scope: !6549, inlinedAt: !6592)
!7278 = !DILocation(line: 332, column: 15, scope: !6549, inlinedAt: !6592)
!7279 = !DILocation(line: 332, column: 2, scope: !6549, inlinedAt: !6592)
!7280 = !DILocation(line: 336, column: 1, scope: !6549, inlinedAt: !6592)
!7281 = !DILocation(line: 553, column: 5, scope: !6536, inlinedAt: !6587)
!7282 = !DILocation(line: 553, column: 41, scope: !6536, inlinedAt: !6587)
!7283 = !DILocation(line: 554, column: 5, scope: !6536, inlinedAt: !6587)
!7284 = !DILocation(line: 554, column: 12, scope: !6536, inlinedAt: !6587)
!7285 = !DILocation(line: 448, column: 31, scope: !6531, inlinedAt: !6586)
!7286 = !DILocation(line: 448, column: 34, scope: !6531, inlinedAt: !6586)
!7287 = !DILocation(line: 448, column: 14, scope: !6531, inlinedAt: !6586)
!7288 = !DILocation(line: 450, column: 22, scope: !6531, inlinedAt: !6586)
!7289 = !DILocation(line: 450, column: 25, scope: !6531, inlinedAt: !6586)
!7290 = !DILocation(line: 450, column: 30, scope: !6531, inlinedAt: !6586)
!7291 = !DILocation(line: 450, column: 36, scope: !6531, inlinedAt: !6586)
!7292 = !DILocation(line: 450, column: 8, scope: !6531, inlinedAt: !6586)
!7293 = !DILocation(line: 450, column: 6, scope: !6531, inlinedAt: !6586)
!7294 = !DILocation(line: 451, column: 9, scope: !6531, inlinedAt: !6586)
!7295 = !DILocation(line: 552, column: 3, scope: !6536, inlinedAt: !6587)
!7296 = !DILocation(line: 557, column: 19, scope: !6538, inlinedAt: !6587)
!7297 = !DILocation(line: 557, column: 25, scope: !6538, inlinedAt: !6587)
!7298 = !DILocation(line: 557, column: 9, scope: !6538, inlinedAt: !6587)
!7299 = !DILocation(line: 557, column: 2, scope: !6538, inlinedAt: !6587)
!7300 = !DILocation(line: 558, column: 1, scope: !6538, inlinedAt: !6587)
!7301 = !DILocation(line: 6972, column: 14, scope: !6527)
!7302 = !DILocation(line: 6972, column: 2, scope: !6527)
!7303 = !DILocation(line: 6972, column: 6, scope: !6527)
!7304 = !DILocation(line: 6972, column: 12, scope: !6527)
!7305 = !DILocation(line: 6974, column: 7, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6974, column: 6)
!7307 = !DILocation(line: 6974, column: 11, scope: !7306)
!7308 = !DILocation(line: 6974, column: 6, scope: !6527)
!7309 = !DILocation(line: 6975, column: 3, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 6974, column: 18)
!7311 = !DILocation(line: 6977, column: 25, scope: !7310)
!7312 = !DILocation(line: 6977, column: 29, scope: !7310)
!7313 = !DILocation(line: 6977, column: 10, scope: !7310)
!7314 = !DILocation(line: 6977, column: 3, scope: !7310)
!7315 = !DILocation(line: 540, column: 27, scope: !6537, inlinedAt: !6541)
!7316 = !DILocation(line: 540, column: 6, scope: !6537, inlinedAt: !6541)
!7317 = !DILocation(line: 540, column: 6, scope: !6538, inlinedAt: !6541)
!7318 = !DILocation(line: 544, column: 7, scope: !6568, inlinedAt: !6541)
!7319 = !DILocation(line: 544, column: 12, scope: !6568, inlinedAt: !6541)
!7320 = !DILocation(line: 544, column: 7, scope: !6536, inlinedAt: !6541)
!7321 = !DILocation(line: 545, column: 25, scope: !6568, inlinedAt: !6541)
!7322 = !DILocation(line: 545, column: 31, scope: !6568, inlinedAt: !6541)
!7323 = !DILocation(line: 480, column: 33, scope: !6566, inlinedAt: !6567)
!7324 = !DILocation(line: 480, column: 23, scope: !6566, inlinedAt: !6567)
!7325 = !DILocation(line: 481, column: 29, scope: !6566, inlinedAt: !6567)
!7326 = !DILocation(line: 481, column: 35, scope: !6566, inlinedAt: !6567)
!7327 = !DILocation(line: 481, column: 42, scope: !6566, inlinedAt: !6567)
!7328 = !DILocation(line: 474, column: 23, scope: !6561, inlinedAt: !6565)
!7329 = !DILocation(line: 474, column: 29, scope: !6561, inlinedAt: !6565)
!7330 = !DILocation(line: 474, column: 36, scope: !6561, inlinedAt: !6565)
!7331 = !DILocation(line: 474, column: 9, scope: !6561, inlinedAt: !6565)
!7332 = !DILocation(line: 545, column: 4, scope: !6568, inlinedAt: !6541)
!7333 = !DILocation(line: 547, column: 25, scope: !6536, inlinedAt: !6541)
!7334 = !DILocation(line: 348, column: 7, scope: !6927, inlinedAt: !6559)
!7335 = !DILocation(line: 348, column: 6, scope: !6555, inlinedAt: !6559)
!7336 = !DILocation(line: 349, column: 3, scope: !6927, inlinedAt: !6559)
!7337 = !DILocation(line: 351, column: 6, scope: !6931, inlinedAt: !6559)
!7338 = !DILocation(line: 351, column: 11, scope: !6931, inlinedAt: !6559)
!7339 = !DILocation(line: 351, column: 6, scope: !6555, inlinedAt: !6559)
!7340 = !DILocation(line: 352, column: 3, scope: !6931, inlinedAt: !6559)
!7341 = !DILocation(line: 354, column: 32, scope: !6936, inlinedAt: !6559)
!7342 = !DILocation(line: 354, column: 37, scope: !6936, inlinedAt: !6559)
!7343 = !DILocation(line: 354, column: 42, scope: !6936, inlinedAt: !6559)
!7344 = !DILocation(line: 354, column: 45, scope: !6936, inlinedAt: !6559)
!7345 = !DILocation(line: 354, column: 50, scope: !6936, inlinedAt: !6559)
!7346 = !DILocation(line: 354, column: 6, scope: !6555, inlinedAt: !6559)
!7347 = !DILocation(line: 355, column: 3, scope: !6936, inlinedAt: !6559)
!7348 = !DILocation(line: 356, column: 32, scope: !6944, inlinedAt: !6559)
!7349 = !DILocation(line: 356, column: 37, scope: !6944, inlinedAt: !6559)
!7350 = !DILocation(line: 356, column: 43, scope: !6944, inlinedAt: !6559)
!7351 = !DILocation(line: 356, column: 46, scope: !6944, inlinedAt: !6559)
!7352 = !DILocation(line: 356, column: 51, scope: !6944, inlinedAt: !6559)
!7353 = !DILocation(line: 356, column: 6, scope: !6555, inlinedAt: !6559)
!7354 = !DILocation(line: 357, column: 3, scope: !6944, inlinedAt: !6559)
!7355 = !DILocation(line: 358, column: 6, scope: !6952, inlinedAt: !6559)
!7356 = !DILocation(line: 358, column: 11, scope: !6952, inlinedAt: !6559)
!7357 = !DILocation(line: 358, column: 6, scope: !6555, inlinedAt: !6559)
!7358 = !DILocation(line: 358, column: 26, scope: !6952, inlinedAt: !6559)
!7359 = !DILocation(line: 359, column: 6, scope: !6957, inlinedAt: !6559)
!7360 = !DILocation(line: 359, column: 11, scope: !6957, inlinedAt: !6559)
!7361 = !DILocation(line: 359, column: 6, scope: !6555, inlinedAt: !6559)
!7362 = !DILocation(line: 359, column: 26, scope: !6957, inlinedAt: !6559)
!7363 = !DILocation(line: 360, column: 6, scope: !6962, inlinedAt: !6559)
!7364 = !DILocation(line: 360, column: 11, scope: !6962, inlinedAt: !6559)
!7365 = !DILocation(line: 360, column: 6, scope: !6555, inlinedAt: !6559)
!7366 = !DILocation(line: 360, column: 26, scope: !6962, inlinedAt: !6559)
!7367 = !DILocation(line: 361, column: 6, scope: !6967, inlinedAt: !6559)
!7368 = !DILocation(line: 361, column: 11, scope: !6967, inlinedAt: !6559)
!7369 = !DILocation(line: 361, column: 6, scope: !6555, inlinedAt: !6559)
!7370 = !DILocation(line: 361, column: 26, scope: !6967, inlinedAt: !6559)
!7371 = !DILocation(line: 362, column: 6, scope: !6972, inlinedAt: !6559)
!7372 = !DILocation(line: 362, column: 11, scope: !6972, inlinedAt: !6559)
!7373 = !DILocation(line: 362, column: 6, scope: !6555, inlinedAt: !6559)
!7374 = !DILocation(line: 362, column: 26, scope: !6972, inlinedAt: !6559)
!7375 = !DILocation(line: 363, column: 6, scope: !6977, inlinedAt: !6559)
!7376 = !DILocation(line: 363, column: 11, scope: !6977, inlinedAt: !6559)
!7377 = !DILocation(line: 363, column: 6, scope: !6555, inlinedAt: !6559)
!7378 = !DILocation(line: 363, column: 26, scope: !6977, inlinedAt: !6559)
!7379 = !DILocation(line: 364, column: 6, scope: !6982, inlinedAt: !6559)
!7380 = !DILocation(line: 364, column: 11, scope: !6982, inlinedAt: !6559)
!7381 = !DILocation(line: 364, column: 6, scope: !6555, inlinedAt: !6559)
!7382 = !DILocation(line: 364, column: 26, scope: !6982, inlinedAt: !6559)
!7383 = !DILocation(line: 365, column: 6, scope: !6987, inlinedAt: !6559)
!7384 = !DILocation(line: 365, column: 11, scope: !6987, inlinedAt: !6559)
!7385 = !DILocation(line: 365, column: 6, scope: !6555, inlinedAt: !6559)
!7386 = !DILocation(line: 365, column: 26, scope: !6987, inlinedAt: !6559)
!7387 = !DILocation(line: 366, column: 6, scope: !6992, inlinedAt: !6559)
!7388 = !DILocation(line: 366, column: 11, scope: !6992, inlinedAt: !6559)
!7389 = !DILocation(line: 366, column: 6, scope: !6555, inlinedAt: !6559)
!7390 = !DILocation(line: 366, column: 26, scope: !6992, inlinedAt: !6559)
!7391 = !DILocation(line: 367, column: 6, scope: !6997, inlinedAt: !6559)
!7392 = !DILocation(line: 367, column: 11, scope: !6997, inlinedAt: !6559)
!7393 = !DILocation(line: 367, column: 6, scope: !6555, inlinedAt: !6559)
!7394 = !DILocation(line: 367, column: 26, scope: !6997, inlinedAt: !6559)
!7395 = !DILocation(line: 368, column: 6, scope: !7002, inlinedAt: !6559)
!7396 = !DILocation(line: 368, column: 11, scope: !7002, inlinedAt: !6559)
!7397 = !DILocation(line: 368, column: 6, scope: !6555, inlinedAt: !6559)
!7398 = !DILocation(line: 368, column: 26, scope: !7002, inlinedAt: !6559)
!7399 = !DILocation(line: 369, column: 6, scope: !7007, inlinedAt: !6559)
!7400 = !DILocation(line: 369, column: 11, scope: !7007, inlinedAt: !6559)
!7401 = !DILocation(line: 369, column: 6, scope: !6555, inlinedAt: !6559)
!7402 = !DILocation(line: 369, column: 26, scope: !7007, inlinedAt: !6559)
!7403 = !DILocation(line: 370, column: 6, scope: !7012, inlinedAt: !6559)
!7404 = !DILocation(line: 370, column: 11, scope: !7012, inlinedAt: !6559)
!7405 = !DILocation(line: 370, column: 6, scope: !6555, inlinedAt: !6559)
!7406 = !DILocation(line: 370, column: 26, scope: !7012, inlinedAt: !6559)
!7407 = !DILocation(line: 371, column: 6, scope: !7017, inlinedAt: !6559)
!7408 = !DILocation(line: 371, column: 11, scope: !7017, inlinedAt: !6559)
!7409 = !DILocation(line: 371, column: 6, scope: !6555, inlinedAt: !6559)
!7410 = !DILocation(line: 371, column: 26, scope: !7017, inlinedAt: !6559)
!7411 = !DILocation(line: 372, column: 6, scope: !7022, inlinedAt: !6559)
!7412 = !DILocation(line: 372, column: 11, scope: !7022, inlinedAt: !6559)
!7413 = !DILocation(line: 372, column: 6, scope: !6555, inlinedAt: !6559)
!7414 = !DILocation(line: 372, column: 26, scope: !7022, inlinedAt: !6559)
!7415 = !DILocation(line: 373, column: 6, scope: !7027, inlinedAt: !6559)
!7416 = !DILocation(line: 373, column: 11, scope: !7027, inlinedAt: !6559)
!7417 = !DILocation(line: 373, column: 6, scope: !6555, inlinedAt: !6559)
!7418 = !DILocation(line: 373, column: 26, scope: !7027, inlinedAt: !6559)
!7419 = !DILocation(line: 374, column: 6, scope: !7032, inlinedAt: !6559)
!7420 = !DILocation(line: 374, column: 11, scope: !7032, inlinedAt: !6559)
!7421 = !DILocation(line: 374, column: 6, scope: !6555, inlinedAt: !6559)
!7422 = !DILocation(line: 374, column: 26, scope: !7032, inlinedAt: !6559)
!7423 = !DILocation(line: 375, column: 6, scope: !7037, inlinedAt: !6559)
!7424 = !DILocation(line: 375, column: 11, scope: !7037, inlinedAt: !6559)
!7425 = !DILocation(line: 375, column: 6, scope: !6555, inlinedAt: !6559)
!7426 = !DILocation(line: 375, column: 27, scope: !7037, inlinedAt: !6559)
!7427 = !DILocation(line: 376, column: 6, scope: !7042, inlinedAt: !6559)
!7428 = !DILocation(line: 376, column: 11, scope: !7042, inlinedAt: !6559)
!7429 = !DILocation(line: 376, column: 6, scope: !6555, inlinedAt: !6559)
!7430 = !DILocation(line: 376, column: 32, scope: !7042, inlinedAt: !6559)
!7431 = !DILocation(line: 377, column: 6, scope: !7047, inlinedAt: !6559)
!7432 = !DILocation(line: 377, column: 11, scope: !7047, inlinedAt: !6559)
!7433 = !DILocation(line: 377, column: 6, scope: !6555, inlinedAt: !6559)
!7434 = !DILocation(line: 377, column: 32, scope: !7047, inlinedAt: !6559)
!7435 = !DILocation(line: 378, column: 6, scope: !7052, inlinedAt: !6559)
!7436 = !DILocation(line: 378, column: 11, scope: !7052, inlinedAt: !6559)
!7437 = !DILocation(line: 378, column: 6, scope: !6555, inlinedAt: !6559)
!7438 = !DILocation(line: 378, column: 32, scope: !7052, inlinedAt: !6559)
!7439 = !DILocation(line: 379, column: 6, scope: !7057, inlinedAt: !6559)
!7440 = !DILocation(line: 379, column: 11, scope: !7057, inlinedAt: !6559)
!7441 = !DILocation(line: 379, column: 6, scope: !6555, inlinedAt: !6559)
!7442 = !DILocation(line: 379, column: 33, scope: !7057, inlinedAt: !6559)
!7443 = !DILocation(line: 380, column: 6, scope: !7062, inlinedAt: !6559)
!7444 = !DILocation(line: 380, column: 11, scope: !7062, inlinedAt: !6559)
!7445 = !DILocation(line: 380, column: 6, scope: !6555, inlinedAt: !6559)
!7446 = !DILocation(line: 380, column: 33, scope: !7062, inlinedAt: !6559)
!7447 = !DILocation(line: 381, column: 6, scope: !7067, inlinedAt: !6559)
!7448 = !DILocation(line: 381, column: 11, scope: !7067, inlinedAt: !6559)
!7449 = !DILocation(line: 381, column: 6, scope: !6555, inlinedAt: !6559)
!7450 = !DILocation(line: 381, column: 33, scope: !7067, inlinedAt: !6559)
!7451 = !DILocation(line: 382, column: 2, scope: !7072, inlinedAt: !6559)
!7452 = !DILocation(line: 382, column: 2, scope: !7076, inlinedAt: !6559)
!7453 = !DILocation(line: 382, column: 2, scope: !7077, inlinedAt: !6559)
!7454 = !DILocation(line: 386, column: 1, scope: !6555, inlinedAt: !6559)
!7455 = !DILocation(line: 547, column: 9, scope: !6536, inlinedAt: !6541)
!7456 = !DILocation(line: 549, column: 8, scope: !7083, inlinedAt: !6541)
!7457 = !DILocation(line: 549, column: 7, scope: !6536, inlinedAt: !6541)
!7458 = !DILocation(line: 550, column: 4, scope: !7083, inlinedAt: !6541)
!7459 = !DILocation(line: 553, column: 33, scope: !6536, inlinedAt: !6541)
!7460 = !DILocation(line: 325, column: 6, scope: !7088, inlinedAt: !6553)
!7461 = !DILocation(line: 325, column: 6, scope: !6549, inlinedAt: !6553)
!7462 = !DILocation(line: 326, column: 3, scope: !7088, inlinedAt: !6553)
!7463 = !DILocation(line: 332, column: 9, scope: !6549, inlinedAt: !6553)
!7464 = !DILocation(line: 332, column: 15, scope: !6549, inlinedAt: !6553)
!7465 = !DILocation(line: 332, column: 2, scope: !6549, inlinedAt: !6553)
!7466 = !DILocation(line: 336, column: 1, scope: !6549, inlinedAt: !6553)
!7467 = !DILocation(line: 553, column: 5, scope: !6536, inlinedAt: !6541)
!7468 = !DILocation(line: 553, column: 41, scope: !6536, inlinedAt: !6541)
!7469 = !DILocation(line: 554, column: 5, scope: !6536, inlinedAt: !6541)
!7470 = !DILocation(line: 554, column: 12, scope: !6536, inlinedAt: !6541)
!7471 = !DILocation(line: 448, column: 31, scope: !6531, inlinedAt: !6535)
!7472 = !DILocation(line: 448, column: 34, scope: !6531, inlinedAt: !6535)
!7473 = !DILocation(line: 448, column: 14, scope: !6531, inlinedAt: !6535)
!7474 = !DILocation(line: 450, column: 22, scope: !6531, inlinedAt: !6535)
!7475 = !DILocation(line: 450, column: 25, scope: !6531, inlinedAt: !6535)
!7476 = !DILocation(line: 450, column: 30, scope: !6531, inlinedAt: !6535)
!7477 = !DILocation(line: 450, column: 36, scope: !6531, inlinedAt: !6535)
!7478 = !DILocation(line: 450, column: 8, scope: !6531, inlinedAt: !6535)
!7479 = !DILocation(line: 450, column: 6, scope: !6531, inlinedAt: !6535)
!7480 = !DILocation(line: 451, column: 9, scope: !6531, inlinedAt: !6535)
!7481 = !DILocation(line: 552, column: 3, scope: !6536, inlinedAt: !6541)
!7482 = !DILocation(line: 557, column: 19, scope: !6538, inlinedAt: !6541)
!7483 = !DILocation(line: 557, column: 25, scope: !6538, inlinedAt: !6541)
!7484 = !DILocation(line: 557, column: 9, scope: !6538, inlinedAt: !6541)
!7485 = !DILocation(line: 557, column: 2, scope: !6538, inlinedAt: !6541)
!7486 = !DILocation(line: 558, column: 1, scope: !6538, inlinedAt: !6541)
!7487 = !DILocation(line: 6980, column: 15, scope: !6527)
!7488 = !DILocation(line: 6980, column: 2, scope: !6527)
!7489 = !DILocation(line: 6980, column: 6, scope: !6527)
!7490 = !DILocation(line: 6980, column: 13, scope: !6527)
!7491 = !DILocation(line: 6982, column: 7, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6982, column: 6)
!7493 = !DILocation(line: 6982, column: 11, scope: !7492)
!7494 = !DILocation(line: 6982, column: 6, scope: !6527)
!7495 = !DILocation(line: 6983, column: 3, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 6982, column: 19)
!7497 = !DILocation(line: 6985, column: 25, scope: !7496)
!7498 = !DILocation(line: 6985, column: 29, scope: !7496)
!7499 = !DILocation(line: 6985, column: 10, scope: !7496)
!7500 = !DILocation(line: 6985, column: 3, scope: !7496)
!7501 = !DILocation(line: 6990, column: 6, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6990, column: 6)
!7503 = !DILocation(line: 6990, column: 20, scope: !7502)
!7504 = !DILocation(line: 6990, column: 6, scope: !6527)
!7505 = !DILocation(line: 6991, column: 17, scope: !7502)
!7506 = !DILocation(line: 6991, column: 3, scope: !7502)
!7507 = !DILocation(line: 6993, column: 39, scope: !6527)
!7508 = !DILocation(line: 6993, column: 48, scope: !6527)
!7509 = !DILocation(line: 6993, column: 53, scope: !6527)
!7510 = !DILocation(line: 6994, column: 5, scope: !6527)
!7511 = !DILocation(line: 6994, column: 9, scope: !6527)
!7512 = !DILocation(line: 6993, column: 19, scope: !6527)
!7513 = !DILocation(line: 6993, column: 2, scope: !6527)
!7514 = !DILocation(line: 6993, column: 6, scope: !6527)
!7515 = !DILocation(line: 6993, column: 17, scope: !6527)
!7516 = !DILocation(line: 6995, column: 18, scope: !6527)
!7517 = !DILocation(line: 6995, column: 2, scope: !6527)
!7518 = !DILocation(line: 6995, column: 6, scope: !6527)
!7519 = !DILocation(line: 6995, column: 16, scope: !6527)
!7520 = !DILocation(line: 6996, column: 7, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 6996, column: 6)
!7522 = !DILocation(line: 6996, column: 11, scope: !7521)
!7523 = !DILocation(line: 6996, column: 6, scope: !6527)
!7524 = !DILocation(line: 6997, column: 3, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 6996, column: 23)
!7526 = !DILocation(line: 6999, column: 25, scope: !7525)
!7527 = !DILocation(line: 6999, column: 29, scope: !7525)
!7528 = !DILocation(line: 6999, column: 10, scope: !7525)
!7529 = !DILocation(line: 6999, column: 3, scope: !7525)
!7530 = !DILocation(line: 7005, column: 21, scope: !6527)
!7531 = !DILocation(line: 7005, column: 2, scope: !6527)
!7532 = !DILocation(line: 7007, column: 7, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 7007, column: 6)
!7534 = !DILocation(line: 7007, column: 28, scope: !7533)
!7535 = !DILocation(line: 7007, column: 32, scope: !7533)
!7536 = !DILocation(line: 7007, column: 6, scope: !6527)
!7537 = !DILocation(line: 7009, column: 18, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 7007, column: 51)
!7539 = !DILocation(line: 7009, column: 22, scope: !7538)
!7540 = !DILocation(line: 7009, column: 30, scope: !7538)
!7541 = !DILocation(line: 7009, column: 12, scope: !7538)
!7542 = !DILocation(line: 7009, column: 10, scope: !7538)
!7543 = !DILocation(line: 7010, column: 7, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 7010, column: 7)
!7545 = !DILocation(line: 7010, column: 14, scope: !7544)
!7546 = !DILocation(line: 7010, column: 7, scope: !7538)
!7547 = !DILocation(line: 7011, column: 23, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 7010, column: 29)
!7549 = !DILocation(line: 7011, column: 4, scope: !7548)
!7550 = !DILocation(line: 7012, column: 3, scope: !7548)
!7551 = !DILocation(line: 7013, column: 2, scope: !7538)
!7552 = !DILocation(line: 7019, column: 9, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 7019, column: 6)
!7554 = !DILocation(line: 7019, column: 13, scope: !7553)
!7555 = !DILocation(line: 7019, column: 18, scope: !7553)
!7556 = !DILocation(line: 7019, column: 27, scope: !7553)
!7557 = !DILocation(line: 7019, column: 7, scope: !7553)
!7558 = !DILocation(line: 7019, column: 6, scope: !6527)
!7559 = !DILocation(line: 7020, column: 10, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 7020, column: 7)
!7561 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 7019, column: 32)
!7562 = !DILocation(line: 7020, column: 14, scope: !7560)
!7563 = !DILocation(line: 7020, column: 19, scope: !7560)
!7564 = !DILocation(line: 7020, column: 26, scope: !7560)
!7565 = !DILocation(line: 7020, column: 8, scope: !7560)
!7566 = !DILocation(line: 7020, column: 7, scope: !7561)
!7567 = !DILocation(line: 7024, column: 4, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 7020, column: 31)
!7569 = !DILocation(line: 7026, column: 26, scope: !7568)
!7570 = !DILocation(line: 7026, column: 30, scope: !7568)
!7571 = !DILocation(line: 7026, column: 11, scope: !7568)
!7572 = !DILocation(line: 7026, column: 4, scope: !7568)
!7573 = !DILocation(line: 7028, column: 2, scope: !7561)
!7574 = !DILocation(line: 7030, column: 14, scope: !6527)
!7575 = !DILocation(line: 7030, column: 3, scope: !6527)
!7576 = !DILocation(line: 7030, column: 12, scope: !6527)
!7577 = !DILocation(line: 7031, column: 2, scope: !6527)
!7578 = !DILocation(line: 7032, column: 1, scope: !6527)
!7579 = distinct !DISubprogram(name: "ips_init_phase2", scope: !3, file: !3, line: 7044, type: !1184, scopeLine: 7045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!7580 = !DILocalVariable(name: "index", arg: 1, scope: !7579, file: !3, line: 7044, type: !182)
!7581 = !DILocation(line: 7044, column: 21, scope: !7579)
!7582 = !DILocalVariable(name: "ha", scope: !7579, file: !3, line: 7046, type: !5540)
!7583 = !DILocation(line: 7046, column: 12, scope: !7579)
!7584 = !DILocation(line: 7048, column: 14, scope: !7579)
!7585 = !DILocation(line: 7048, column: 7, scope: !7579)
!7586 = !DILocation(line: 7048, column: 5, scope: !7579)
!7587 = !DILocation(line: 7051, column: 7, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 7051, column: 6)
!7589 = !DILocation(line: 7051, column: 11, scope: !7588)
!7590 = !DILocation(line: 7051, column: 6, scope: !7579)
!7591 = !DILocation(line: 7052, column: 10, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 7051, column: 19)
!7593 = !DILocation(line: 7052, column: 3, scope: !7592)
!7594 = !DILocation(line: 7052, column: 17, scope: !7592)
!7595 = !DILocation(line: 7053, column: 3, scope: !7592)
!7596 = !DILocation(line: 7057, column: 18, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 7057, column: 6)
!7598 = !DILocation(line: 7057, column: 22, scope: !7597)
!7599 = !DILocation(line: 7057, column: 30, scope: !7597)
!7600 = !DILocation(line: 7057, column: 70, scope: !7597)
!7601 = !DILocation(line: 7057, column: 6, scope: !7597)
!7602 = !DILocation(line: 7057, column: 6, scope: !7579)
!7603 = !DILocation(line: 7058, column: 3, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 7057, column: 75)
!7605 = !DILocation(line: 7060, column: 25, scope: !7604)
!7606 = !DILocation(line: 7060, column: 29, scope: !7604)
!7607 = !DILocation(line: 7060, column: 10, scope: !7604)
!7608 = !DILocation(line: 7060, column: 3, scope: !7604)
!7609 = !DILocation(line: 7066, column: 2, scope: !7579)
!7610 = !DILocation(line: 7066, column: 6, scope: !7579)
!7611 = !DILocation(line: 7066, column: 15, scope: !7579)
!7612 = !DILocation(line: 7067, column: 24, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 7067, column: 6)
!7614 = !DILocation(line: 7067, column: 7, scope: !7613)
!7615 = !DILocation(line: 7067, column: 6, scope: !7579)
!7616 = !DILocation(line: 7068, column: 3, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 7067, column: 29)
!7618 = !DILocation(line: 7070, column: 12, scope: !7617)
!7619 = !DILocation(line: 7070, column: 16, scope: !7617)
!7620 = !DILocation(line: 7070, column: 24, scope: !7617)
!7621 = !DILocation(line: 7070, column: 29, scope: !7617)
!7622 = !DILocation(line: 7070, column: 3, scope: !7617)
!7623 = !DILocation(line: 7071, column: 25, scope: !7617)
!7624 = !DILocation(line: 7071, column: 29, scope: !7617)
!7625 = !DILocation(line: 7071, column: 10, scope: !7617)
!7626 = !DILocation(line: 7071, column: 3, scope: !7617)
!7627 = !DILocation(line: 7074, column: 18, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 7074, column: 6)
!7629 = !DILocation(line: 7074, column: 7, scope: !7628)
!7630 = !DILocation(line: 7074, column: 6, scope: !7579)
!7631 = !DILocation(line: 7075, column: 3, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 7074, column: 23)
!7633 = !DILocation(line: 7077, column: 12, scope: !7632)
!7634 = !DILocation(line: 7077, column: 16, scope: !7632)
!7635 = !DILocation(line: 7077, column: 24, scope: !7632)
!7636 = !DILocation(line: 7077, column: 29, scope: !7632)
!7637 = !DILocation(line: 7077, column: 3, scope: !7632)
!7638 = !DILocation(line: 7078, column: 25, scope: !7632)
!7639 = !DILocation(line: 7078, column: 29, scope: !7632)
!7640 = !DILocation(line: 7078, column: 10, scope: !7632)
!7641 = !DILocation(line: 7078, column: 3, scope: !7632)
!7642 = !DILocation(line: 7081, column: 21, scope: !7579)
!7643 = !DILocation(line: 7081, column: 2, scope: !7579)
!7644 = !DILocation(line: 7084, column: 24, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 7084, column: 6)
!7646 = !DILocation(line: 7084, column: 7, scope: !7645)
!7647 = !DILocation(line: 7084, column: 6, scope: !7579)
!7648 = !DILocation(line: 7085, column: 3, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 7084, column: 29)
!7650 = !DILocation(line: 7087, column: 12, scope: !7649)
!7651 = !DILocation(line: 7087, column: 16, scope: !7649)
!7652 = !DILocation(line: 7087, column: 24, scope: !7649)
!7653 = !DILocation(line: 7087, column: 29, scope: !7649)
!7654 = !DILocation(line: 7087, column: 3, scope: !7649)
!7655 = !DILocation(line: 7088, column: 25, scope: !7649)
!7656 = !DILocation(line: 7088, column: 29, scope: !7649)
!7657 = !DILocation(line: 7088, column: 10, scope: !7649)
!7658 = !DILocation(line: 7088, column: 3, scope: !7649)
!7659 = !DILocation(line: 7091, column: 2, scope: !7579)
!7660 = !DILocation(line: 7092, column: 1, scope: !7579)
!7661 = distinct !DISubprogram(name: "ips_register_scsi", scope: !3, file: !3, line: 6651, type: !1184, scopeLine: 6652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!7662 = !DILocalVariable(name: "index", arg: 1, scope: !7661, file: !3, line: 6651, type: !182)
!7663 = !DILocation(line: 6651, column: 23, scope: !7661)
!7664 = !DILocalVariable(name: "sh", scope: !7661, file: !3, line: 6653, type: !5124)
!7665 = !DILocation(line: 6653, column: 20, scope: !7661)
!7666 = !DILocalVariable(name: "ha", scope: !7661, file: !3, line: 6654, type: !5540)
!7667 = !DILocation(line: 6654, column: 12, scope: !7661)
!7668 = !DILocalVariable(name: "oldha", scope: !7661, file: !3, line: 6654, type: !5540)
!7669 = !DILocation(line: 6654, column: 17, scope: !7661)
!7670 = !DILocation(line: 6654, column: 32, scope: !7661)
!7671 = !DILocation(line: 6654, column: 25, scope: !7661)
!7672 = !DILocation(line: 6655, column: 7, scope: !7661)
!7673 = !DILocation(line: 6655, column: 5, scope: !7661)
!7674 = !DILocation(line: 6656, column: 7, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 6656, column: 6)
!7676 = !DILocation(line: 6656, column: 6, scope: !7661)
!7677 = !DILocation(line: 6657, column: 3, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 6656, column: 11)
!7679 = !DILocation(line: 6659, column: 3, scope: !7678)
!7680 = !DILocation(line: 6661, column: 7, scope: !7661)
!7681 = !DILocation(line: 6661, column: 5, scope: !7661)
!7682 = !DILocation(line: 6662, column: 9, scope: !7661)
!7683 = !DILocation(line: 6662, column: 2, scope: !7661)
!7684 = !DILocation(line: 6662, column: 13, scope: !7661)
!7685 = !DILocation(line: 6663, column: 11, scope: !7661)
!7686 = !DILocation(line: 6663, column: 18, scope: !7661)
!7687 = !DILocation(line: 6663, column: 26, scope: !7661)
!7688 = !DILocation(line: 6663, column: 31, scope: !7661)
!7689 = !DILocation(line: 6663, column: 2, scope: !7661)
!7690 = !DILocation(line: 6665, column: 18, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 6665, column: 6)
!7692 = !DILocation(line: 6665, column: 22, scope: !7691)
!7693 = !DILocation(line: 6665, column: 30, scope: !7691)
!7694 = !DILocation(line: 6665, column: 70, scope: !7691)
!7695 = !DILocation(line: 6665, column: 6, scope: !7691)
!7696 = !DILocation(line: 6665, column: 6, scope: !7661)
!7697 = !DILocation(line: 6666, column: 3, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 6665, column: 75)
!7699 = !DILocation(line: 6668, column: 3, scope: !7698)
!7700 = !DILocation(line: 6671, column: 8, scope: !7661)
!7701 = !DILocation(line: 6671, column: 2, scope: !7661)
!7702 = !DILocation(line: 6674, column: 19, scope: !7661)
!7703 = !DILocation(line: 6674, column: 23, scope: !7661)
!7704 = !DILocation(line: 6674, column: 18, scope: !7661)
!7705 = !DILocation(line: 6674, column: 34, scope: !7661)
!7706 = !DILocation(line: 6674, column: 38, scope: !7661)
!7707 = !DILocation(line: 6674, column: 48, scope: !7661)
!7708 = !DILocation(line: 6674, column: 52, scope: !7661)
!7709 = !DILocation(line: 6674, column: 2, scope: !7661)
!7710 = !DILocation(line: 6674, column: 6, scope: !7661)
!7711 = !DILocation(line: 6674, column: 16, scope: !7661)
!7712 = !DILocation(line: 6675, column: 21, scope: !7661)
!7713 = !DILocation(line: 6675, column: 25, scope: !7661)
!7714 = !DILocation(line: 6675, column: 32, scope: !7661)
!7715 = !DILocation(line: 6675, column: 2, scope: !7661)
!7716 = !DILocation(line: 6675, column: 6, scope: !7661)
!7717 = !DILocation(line: 6675, column: 19, scope: !7661)
!7718 = !DILocation(line: 6676, column: 18, scope: !7661)
!7719 = !DILocation(line: 6676, column: 22, scope: !7661)
!7720 = !DILocation(line: 6676, column: 29, scope: !7661)
!7721 = !DILocation(line: 6676, column: 2, scope: !7661)
!7722 = !DILocation(line: 6676, column: 6, scope: !7661)
!7723 = !DILocation(line: 6676, column: 16, scope: !7661)
!7724 = !DILocation(line: 6677, column: 20, scope: !7661)
!7725 = !DILocation(line: 6677, column: 24, scope: !7661)
!7726 = !DILocation(line: 6677, column: 31, scope: !7661)
!7727 = !DILocation(line: 6677, column: 2, scope: !7661)
!7728 = !DILocation(line: 6677, column: 6, scope: !7661)
!7729 = !DILocation(line: 6677, column: 18, scope: !7661)
!7730 = !DILocation(line: 6678, column: 2, scope: !7661)
!7731 = !DILocation(line: 6678, column: 6, scope: !7661)
!7732 = !DILocation(line: 6678, column: 18, scope: !7661)
!7733 = !DILocation(line: 6680, column: 15, scope: !7661)
!7734 = !DILocation(line: 6680, column: 19, scope: !7661)
!7735 = !DILocation(line: 6680, column: 2, scope: !7661)
!7736 = !DILocation(line: 6680, column: 6, scope: !7661)
!7737 = !DILocation(line: 6680, column: 13, scope: !7661)
!7738 = !DILocation(line: 6681, column: 16, scope: !7661)
!7739 = !DILocation(line: 6681, column: 20, scope: !7661)
!7740 = !DILocation(line: 6681, column: 2, scope: !7661)
!7741 = !DILocation(line: 6681, column: 6, scope: !7661)
!7742 = !DILocation(line: 6681, column: 14, scope: !7661)
!7743 = !DILocation(line: 6682, column: 20, scope: !7661)
!7744 = !DILocation(line: 6682, column: 24, scope: !7661)
!7745 = !DILocation(line: 6682, column: 29, scope: !7661)
!7746 = !DILocation(line: 6682, column: 2, scope: !7661)
!7747 = !DILocation(line: 6682, column: 6, scope: !7661)
!7748 = !DILocation(line: 6682, column: 18, scope: !7661)
!7749 = !DILocation(line: 6683, column: 18, scope: !7661)
!7750 = !DILocation(line: 6683, column: 22, scope: !7661)
!7751 = !DILocation(line: 6683, column: 31, scope: !7661)
!7752 = !DILocation(line: 6683, column: 2, scope: !7661)
!7753 = !DILocation(line: 6683, column: 6, scope: !7661)
!7754 = !DILocation(line: 6683, column: 16, scope: !7661)
!7755 = !DILocation(line: 6685, column: 20, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 6685, column: 6)
!7757 = !DILocation(line: 6685, column: 25, scope: !7756)
!7758 = !DILocation(line: 6685, column: 29, scope: !7756)
!7759 = !DILocation(line: 6685, column: 37, scope: !7756)
!7760 = !DILocation(line: 6685, column: 6, scope: !7756)
!7761 = !DILocation(line: 6685, column: 6, scope: !7661)
!7762 = !DILocation(line: 6686, column: 3, scope: !7756)
!7763 = !DILocation(line: 6688, column: 18, scope: !7661)
!7764 = !DILocation(line: 6688, column: 9, scope: !7661)
!7765 = !DILocation(line: 6688, column: 2, scope: !7661)
!7766 = !DILocation(line: 6688, column: 16, scope: !7661)
!7767 = !DILocation(line: 6689, column: 18, scope: !7661)
!7768 = !DILocation(line: 6689, column: 9, scope: !7661)
!7769 = !DILocation(line: 6689, column: 2, scope: !7661)
!7770 = !DILocation(line: 6689, column: 16, scope: !7661)
!7771 = !DILocation(line: 6691, column: 17, scope: !7661)
!7772 = !DILocation(line: 6691, column: 2, scope: !7661)
!7773 = !DILocation(line: 6693, column: 2, scope: !7661)
!7774 = !DILabel(scope: !7661, name: "err_out", file: !3, line: 6695)
!7775 = !DILocation(line: 6695, column: 1, scope: !7661)
!7776 = !DILocation(line: 6696, column: 11, scope: !7661)
!7777 = !DILocation(line: 6696, column: 15, scope: !7661)
!7778 = !DILocation(line: 6696, column: 23, scope: !7661)
!7779 = !DILocation(line: 6696, column: 28, scope: !7661)
!7780 = !DILocation(line: 6696, column: 2, scope: !7661)
!7781 = !DILabel(scope: !7661, name: "err_out_sh", file: !3, line: 6697)
!7782 = !DILocation(line: 6697, column: 1, scope: !7661)
!7783 = !DILocation(line: 6698, column: 16, scope: !7661)
!7784 = !DILocation(line: 6698, column: 2, scope: !7661)
!7785 = !DILocation(line: 6699, column: 2, scope: !7661)
!7786 = !DILocation(line: 6700, column: 1, scope: !7661)
!7787 = distinct !DISubprogram(name: "ips_free", scope: !3, file: !3, line: 4208, type: !7788, scopeLine: 4209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!7788 = !DISubroutineType(types: !7789)
!7789 = !{null, !5540}
!7790 = !DILocalVariable(name: "ha", arg: 1, scope: !7787, file: !3, line: 4208, type: !5540)
!7791 = !DILocation(line: 4208, column: 21, scope: !7787)
!7792 = !DILocation(line: 4213, column: 6, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 4213, column: 6)
!7794 = !DILocation(line: 4213, column: 6, scope: !7787)
!7795 = !DILocation(line: 4214, column: 7, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4214, column: 7)
!7797 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 4213, column: 10)
!7798 = !DILocation(line: 4214, column: 11, scope: !7796)
!7799 = !DILocation(line: 4214, column: 7, scope: !7797)
!7800 = !DILocation(line: 4215, column: 23, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 4214, column: 16)
!7802 = !DILocation(line: 4215, column: 27, scope: !7801)
!7803 = !DILocation(line: 4215, column: 35, scope: !7801)
!7804 = !DILocation(line: 4216, column: 10, scope: !7801)
!7805 = !DILocation(line: 4216, column: 14, scope: !7801)
!7806 = !DILocation(line: 4216, column: 19, scope: !7801)
!7807 = !DILocation(line: 4216, column: 23, scope: !7801)
!7808 = !DILocation(line: 4215, column: 4, scope: !7801)
!7809 = !DILocation(line: 4217, column: 4, scope: !7801)
!7810 = !DILocation(line: 4217, column: 8, scope: !7801)
!7811 = !DILocation(line: 4217, column: 12, scope: !7801)
!7812 = !DILocation(line: 4218, column: 3, scope: !7801)
!7813 = !DILocation(line: 4220, column: 9, scope: !7797)
!7814 = !DILocation(line: 4220, column: 13, scope: !7797)
!7815 = !DILocation(line: 4220, column: 3, scope: !7797)
!7816 = !DILocation(line: 4221, column: 3, scope: !7797)
!7817 = !DILocation(line: 4221, column: 7, scope: !7797)
!7818 = !DILocation(line: 4221, column: 12, scope: !7797)
!7819 = !DILocation(line: 4223, column: 7, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4223, column: 7)
!7821 = !DILocation(line: 4223, column: 11, scope: !7820)
!7822 = !DILocation(line: 4223, column: 7, scope: !7797)
!7823 = !DILocation(line: 4224, column: 23, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7820, file: !3, line: 4223, column: 18)
!7825 = !DILocation(line: 4224, column: 27, scope: !7824)
!7826 = !DILocation(line: 4224, column: 35, scope: !7824)
!7827 = !DILocation(line: 4226, column: 31, scope: !7824)
!7828 = !DILocation(line: 4226, column: 35, scope: !7824)
!7829 = !DILocation(line: 4227, column: 10, scope: !7824)
!7830 = !DILocation(line: 4227, column: 14, scope: !7824)
!7831 = !DILocation(line: 4227, column: 21, scope: !7824)
!7832 = !DILocation(line: 4224, column: 4, scope: !7824)
!7833 = !DILocation(line: 4228, column: 4, scope: !7824)
!7834 = !DILocation(line: 4228, column: 8, scope: !7824)
!7835 = !DILocation(line: 4228, column: 14, scope: !7824)
!7836 = !DILocation(line: 4229, column: 3, scope: !7824)
!7837 = !DILocation(line: 4231, column: 7, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4231, column: 7)
!7839 = !DILocation(line: 4231, column: 11, scope: !7838)
!7840 = !DILocation(line: 4231, column: 7, scope: !7797)
!7841 = !DILocation(line: 4232, column: 23, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 4231, column: 31)
!7843 = !DILocation(line: 4232, column: 27, scope: !7842)
!7844 = !DILocation(line: 4232, column: 35, scope: !7842)
!7845 = !DILocation(line: 4234, column: 10, scope: !7842)
!7846 = !DILocation(line: 4234, column: 14, scope: !7842)
!7847 = !DILocation(line: 4235, column: 10, scope: !7842)
!7848 = !DILocation(line: 4235, column: 14, scope: !7842)
!7849 = !DILocation(line: 4232, column: 4, scope: !7842)
!7850 = !DILocation(line: 4236, column: 4, scope: !7842)
!7851 = !DILocation(line: 4236, column: 8, scope: !7842)
!7852 = !DILocation(line: 4236, column: 27, scope: !7842)
!7853 = !DILocation(line: 4237, column: 3, scope: !7842)
!7854 = !DILocation(line: 4239, column: 9, scope: !7797)
!7855 = !DILocation(line: 4239, column: 13, scope: !7797)
!7856 = !DILocation(line: 4239, column: 3, scope: !7797)
!7857 = !DILocation(line: 4240, column: 3, scope: !7797)
!7858 = !DILocation(line: 4240, column: 7, scope: !7797)
!7859 = !DILocation(line: 4240, column: 13, scope: !7797)
!7860 = !DILocation(line: 4242, column: 9, scope: !7797)
!7861 = !DILocation(line: 4242, column: 13, scope: !7797)
!7862 = !DILocation(line: 4242, column: 3, scope: !7797)
!7863 = !DILocation(line: 4243, column: 3, scope: !7797)
!7864 = !DILocation(line: 4243, column: 7, scope: !7797)
!7865 = !DILocation(line: 4243, column: 14, scope: !7797)
!7866 = !DILocation(line: 4245, column: 7, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4245, column: 7)
!7868 = !DILocation(line: 4245, column: 11, scope: !7867)
!7869 = !DILocation(line: 4245, column: 7, scope: !7797)
!7870 = !DILocation(line: 4246, column: 23, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 4245, column: 23)
!7872 = !DILocation(line: 4246, column: 27, scope: !7871)
!7873 = !DILocation(line: 4246, column: 35, scope: !7871)
!7874 = !DILocation(line: 4246, column: 40, scope: !7871)
!7875 = !DILocation(line: 4246, column: 44, scope: !7871)
!7876 = !DILocation(line: 4247, column: 10, scope: !7871)
!7877 = !DILocation(line: 4247, column: 14, scope: !7871)
!7878 = !DILocation(line: 4247, column: 26, scope: !7871)
!7879 = !DILocation(line: 4247, column: 30, scope: !7871)
!7880 = !DILocation(line: 4246, column: 4, scope: !7871)
!7881 = !DILocation(line: 4248, column: 4, scope: !7871)
!7882 = !DILocation(line: 4248, column: 8, scope: !7871)
!7883 = !DILocation(line: 4248, column: 19, scope: !7871)
!7884 = !DILocation(line: 4249, column: 4, scope: !7871)
!7885 = !DILocation(line: 4249, column: 8, scope: !7871)
!7886 = !DILocation(line: 4249, column: 23, scope: !7871)
!7887 = !DILocation(line: 4250, column: 4, scope: !7871)
!7888 = !DILocation(line: 4250, column: 8, scope: !7871)
!7889 = !DILocation(line: 4250, column: 18, scope: !7871)
!7890 = !DILocation(line: 4251, column: 3, scope: !7871)
!7891 = !DILocation(line: 4252, column: 22, scope: !7797)
!7892 = !DILocation(line: 4252, column: 26, scope: !7797)
!7893 = !DILocation(line: 4252, column: 30, scope: !7797)
!7894 = !DILocation(line: 4252, column: 3, scope: !7797)
!7895 = !DILocation(line: 4255, column: 7, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4255, column: 7)
!7897 = !DILocation(line: 4255, column: 11, scope: !7896)
!7898 = !DILocation(line: 4255, column: 7, scope: !7797)
!7899 = !DILocation(line: 4256, column: 12, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 4255, column: 20)
!7901 = !DILocation(line: 4256, column: 16, scope: !7900)
!7902 = !DILocation(line: 4256, column: 4, scope: !7900)
!7903 = !DILocation(line: 4257, column: 4, scope: !7900)
!7904 = !DILocation(line: 4257, column: 8, scope: !7900)
!7905 = !DILocation(line: 4257, column: 20, scope: !7900)
!7906 = !DILocation(line: 4258, column: 4, scope: !7900)
!7907 = !DILocation(line: 4258, column: 8, scope: !7900)
!7908 = !DILocation(line: 4258, column: 16, scope: !7900)
!7909 = !DILocation(line: 4259, column: 3, scope: !7900)
!7910 = !DILocation(line: 4261, column: 3, scope: !7797)
!7911 = !DILocation(line: 4261, column: 7, scope: !7797)
!7912 = !DILocation(line: 4261, column: 16, scope: !7797)
!7913 = !DILocation(line: 4263, column: 2, scope: !7797)
!7914 = !DILocation(line: 4264, column: 1, scope: !7787)
!7915 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !5826, file: !5826, line: 1870, type: !7916, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!7916 = !DISubroutineType(types: !7917)
!7917 = !{null, !5824, !183}
!7918 = !DILocalVariable(name: "pdev", arg: 1, scope: !7915, file: !5826, line: 1870, type: !5824)
!7919 = !DILocation(line: 1870, column: 52, scope: !7915)
!7920 = !DILocalVariable(name: "data", arg: 2, scope: !7915, file: !5826, line: 1870, type: !183)
!7921 = !DILocation(line: 1870, column: 64, scope: !7915)
!7922 = !DILocation(line: 1872, column: 19, scope: !7915)
!7923 = !DILocation(line: 1872, column: 25, scope: !7915)
!7924 = !DILocation(line: 1872, column: 30, scope: !7915)
!7925 = !DILocation(line: 1872, column: 2, scope: !7915)
!7926 = !DILocation(line: 1873, column: 1, scope: !7915)
!7927 = distinct !DISubprogram(name: "kzalloc", scope: !164, file: !164, line: 662, type: !6539, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!7928 = !DILocation(line: 445, column: 72, scope: !6531, inlinedAt: !7929)
!7929 = distinct !DILocation(line: 552, column: 10, scope: !6536, inlinedAt: !7930)
!7930 = distinct !DILocation(line: 664, column: 9, scope: !7927)
!7931 = !DILocation(line: 446, column: 9, scope: !6531, inlinedAt: !7929)
!7932 = !DILocation(line: 446, column: 23, scope: !6531, inlinedAt: !7929)
!7933 = !DILocation(line: 448, column: 8, scope: !6531, inlinedAt: !7929)
!7934 = !DILocation(line: 318, column: 67, scope: !6549, inlinedAt: !7935)
!7935 = distinct !DILocation(line: 553, column: 20, scope: !6536, inlinedAt: !7930)
!7936 = !DILocation(line: 346, column: 58, scope: !6555, inlinedAt: !7937)
!7937 = distinct !DILocation(line: 547, column: 11, scope: !6536, inlinedAt: !7930)
!7938 = !DILocation(line: 472, column: 28, scope: !6561, inlinedAt: !7939)
!7939 = distinct !DILocation(line: 481, column: 9, scope: !6566, inlinedAt: !7940)
!7940 = distinct !DILocation(line: 545, column: 11, scope: !6568, inlinedAt: !7930)
!7941 = !DILocation(line: 472, column: 40, scope: !6561, inlinedAt: !7939)
!7942 = !DILocation(line: 472, column: 60, scope: !6561, inlinedAt: !7939)
!7943 = !DILocation(line: 478, column: 51, scope: !6566, inlinedAt: !7940)
!7944 = !DILocation(line: 478, column: 63, scope: !6566, inlinedAt: !7940)
!7945 = !DILocation(line: 480, column: 15, scope: !6566, inlinedAt: !7940)
!7946 = !DILocation(line: 538, column: 45, scope: !6538, inlinedAt: !7930)
!7947 = !DILocation(line: 538, column: 57, scope: !6538, inlinedAt: !7930)
!7948 = !DILocation(line: 542, column: 16, scope: !6536, inlinedAt: !7930)
!7949 = !DILocalVariable(name: "size", arg: 1, scope: !7927, file: !164, line: 662, type: !827)
!7950 = !DILocation(line: 662, column: 36, scope: !7927)
!7951 = !DILocalVariable(name: "flags", arg: 2, scope: !7927, file: !164, line: 662, type: !184)
!7952 = !DILocation(line: 662, column: 48, scope: !7927)
!7953 = !DILocation(line: 664, column: 17, scope: !7927)
!7954 = !DILocation(line: 664, column: 23, scope: !7927)
!7955 = !DILocation(line: 664, column: 29, scope: !7927)
!7956 = !DILocation(line: 540, column: 27, scope: !6537, inlinedAt: !7930)
!7957 = !DILocation(line: 540, column: 6, scope: !6537, inlinedAt: !7930)
!7958 = !DILocation(line: 540, column: 6, scope: !6538, inlinedAt: !7930)
!7959 = !DILocation(line: 544, column: 7, scope: !6568, inlinedAt: !7930)
!7960 = !DILocation(line: 544, column: 12, scope: !6568, inlinedAt: !7930)
!7961 = !DILocation(line: 544, column: 7, scope: !6536, inlinedAt: !7930)
!7962 = !DILocation(line: 545, column: 25, scope: !6568, inlinedAt: !7930)
!7963 = !DILocation(line: 545, column: 31, scope: !6568, inlinedAt: !7930)
!7964 = !DILocation(line: 480, column: 33, scope: !6566, inlinedAt: !7940)
!7965 = !DILocation(line: 480, column: 23, scope: !6566, inlinedAt: !7940)
!7966 = !DILocation(line: 481, column: 29, scope: !6566, inlinedAt: !7940)
!7967 = !DILocation(line: 481, column: 35, scope: !6566, inlinedAt: !7940)
!7968 = !DILocation(line: 481, column: 42, scope: !6566, inlinedAt: !7940)
!7969 = !DILocation(line: 474, column: 23, scope: !6561, inlinedAt: !7939)
!7970 = !DILocation(line: 474, column: 29, scope: !6561, inlinedAt: !7939)
!7971 = !DILocation(line: 474, column: 36, scope: !6561, inlinedAt: !7939)
!7972 = !DILocation(line: 474, column: 9, scope: !6561, inlinedAt: !7939)
!7973 = !DILocation(line: 545, column: 4, scope: !6568, inlinedAt: !7930)
!7974 = !DILocation(line: 547, column: 25, scope: !6536, inlinedAt: !7930)
!7975 = !DILocation(line: 348, column: 7, scope: !6927, inlinedAt: !7937)
!7976 = !DILocation(line: 348, column: 6, scope: !6555, inlinedAt: !7937)
!7977 = !DILocation(line: 349, column: 3, scope: !6927, inlinedAt: !7937)
!7978 = !DILocation(line: 351, column: 6, scope: !6931, inlinedAt: !7937)
!7979 = !DILocation(line: 351, column: 11, scope: !6931, inlinedAt: !7937)
!7980 = !DILocation(line: 351, column: 6, scope: !6555, inlinedAt: !7937)
!7981 = !DILocation(line: 352, column: 3, scope: !6931, inlinedAt: !7937)
!7982 = !DILocation(line: 354, column: 32, scope: !6936, inlinedAt: !7937)
!7983 = !DILocation(line: 354, column: 37, scope: !6936, inlinedAt: !7937)
!7984 = !DILocation(line: 354, column: 42, scope: !6936, inlinedAt: !7937)
!7985 = !DILocation(line: 354, column: 45, scope: !6936, inlinedAt: !7937)
!7986 = !DILocation(line: 354, column: 50, scope: !6936, inlinedAt: !7937)
!7987 = !DILocation(line: 354, column: 6, scope: !6555, inlinedAt: !7937)
!7988 = !DILocation(line: 355, column: 3, scope: !6936, inlinedAt: !7937)
!7989 = !DILocation(line: 356, column: 32, scope: !6944, inlinedAt: !7937)
!7990 = !DILocation(line: 356, column: 37, scope: !6944, inlinedAt: !7937)
!7991 = !DILocation(line: 356, column: 43, scope: !6944, inlinedAt: !7937)
!7992 = !DILocation(line: 356, column: 46, scope: !6944, inlinedAt: !7937)
!7993 = !DILocation(line: 356, column: 51, scope: !6944, inlinedAt: !7937)
!7994 = !DILocation(line: 356, column: 6, scope: !6555, inlinedAt: !7937)
!7995 = !DILocation(line: 357, column: 3, scope: !6944, inlinedAt: !7937)
!7996 = !DILocation(line: 358, column: 6, scope: !6952, inlinedAt: !7937)
!7997 = !DILocation(line: 358, column: 11, scope: !6952, inlinedAt: !7937)
!7998 = !DILocation(line: 358, column: 6, scope: !6555, inlinedAt: !7937)
!7999 = !DILocation(line: 358, column: 26, scope: !6952, inlinedAt: !7937)
!8000 = !DILocation(line: 359, column: 6, scope: !6957, inlinedAt: !7937)
!8001 = !DILocation(line: 359, column: 11, scope: !6957, inlinedAt: !7937)
!8002 = !DILocation(line: 359, column: 6, scope: !6555, inlinedAt: !7937)
!8003 = !DILocation(line: 359, column: 26, scope: !6957, inlinedAt: !7937)
!8004 = !DILocation(line: 360, column: 6, scope: !6962, inlinedAt: !7937)
!8005 = !DILocation(line: 360, column: 11, scope: !6962, inlinedAt: !7937)
!8006 = !DILocation(line: 360, column: 6, scope: !6555, inlinedAt: !7937)
!8007 = !DILocation(line: 360, column: 26, scope: !6962, inlinedAt: !7937)
!8008 = !DILocation(line: 361, column: 6, scope: !6967, inlinedAt: !7937)
!8009 = !DILocation(line: 361, column: 11, scope: !6967, inlinedAt: !7937)
!8010 = !DILocation(line: 361, column: 6, scope: !6555, inlinedAt: !7937)
!8011 = !DILocation(line: 361, column: 26, scope: !6967, inlinedAt: !7937)
!8012 = !DILocation(line: 362, column: 6, scope: !6972, inlinedAt: !7937)
!8013 = !DILocation(line: 362, column: 11, scope: !6972, inlinedAt: !7937)
!8014 = !DILocation(line: 362, column: 6, scope: !6555, inlinedAt: !7937)
!8015 = !DILocation(line: 362, column: 26, scope: !6972, inlinedAt: !7937)
!8016 = !DILocation(line: 363, column: 6, scope: !6977, inlinedAt: !7937)
!8017 = !DILocation(line: 363, column: 11, scope: !6977, inlinedAt: !7937)
!8018 = !DILocation(line: 363, column: 6, scope: !6555, inlinedAt: !7937)
!8019 = !DILocation(line: 363, column: 26, scope: !6977, inlinedAt: !7937)
!8020 = !DILocation(line: 364, column: 6, scope: !6982, inlinedAt: !7937)
!8021 = !DILocation(line: 364, column: 11, scope: !6982, inlinedAt: !7937)
!8022 = !DILocation(line: 364, column: 6, scope: !6555, inlinedAt: !7937)
!8023 = !DILocation(line: 364, column: 26, scope: !6982, inlinedAt: !7937)
!8024 = !DILocation(line: 365, column: 6, scope: !6987, inlinedAt: !7937)
!8025 = !DILocation(line: 365, column: 11, scope: !6987, inlinedAt: !7937)
!8026 = !DILocation(line: 365, column: 6, scope: !6555, inlinedAt: !7937)
!8027 = !DILocation(line: 365, column: 26, scope: !6987, inlinedAt: !7937)
!8028 = !DILocation(line: 366, column: 6, scope: !6992, inlinedAt: !7937)
!8029 = !DILocation(line: 366, column: 11, scope: !6992, inlinedAt: !7937)
!8030 = !DILocation(line: 366, column: 6, scope: !6555, inlinedAt: !7937)
!8031 = !DILocation(line: 366, column: 26, scope: !6992, inlinedAt: !7937)
!8032 = !DILocation(line: 367, column: 6, scope: !6997, inlinedAt: !7937)
!8033 = !DILocation(line: 367, column: 11, scope: !6997, inlinedAt: !7937)
!8034 = !DILocation(line: 367, column: 6, scope: !6555, inlinedAt: !7937)
!8035 = !DILocation(line: 367, column: 26, scope: !6997, inlinedAt: !7937)
!8036 = !DILocation(line: 368, column: 6, scope: !7002, inlinedAt: !7937)
!8037 = !DILocation(line: 368, column: 11, scope: !7002, inlinedAt: !7937)
!8038 = !DILocation(line: 368, column: 6, scope: !6555, inlinedAt: !7937)
!8039 = !DILocation(line: 368, column: 26, scope: !7002, inlinedAt: !7937)
!8040 = !DILocation(line: 369, column: 6, scope: !7007, inlinedAt: !7937)
!8041 = !DILocation(line: 369, column: 11, scope: !7007, inlinedAt: !7937)
!8042 = !DILocation(line: 369, column: 6, scope: !6555, inlinedAt: !7937)
!8043 = !DILocation(line: 369, column: 26, scope: !7007, inlinedAt: !7937)
!8044 = !DILocation(line: 370, column: 6, scope: !7012, inlinedAt: !7937)
!8045 = !DILocation(line: 370, column: 11, scope: !7012, inlinedAt: !7937)
!8046 = !DILocation(line: 370, column: 6, scope: !6555, inlinedAt: !7937)
!8047 = !DILocation(line: 370, column: 26, scope: !7012, inlinedAt: !7937)
!8048 = !DILocation(line: 371, column: 6, scope: !7017, inlinedAt: !7937)
!8049 = !DILocation(line: 371, column: 11, scope: !7017, inlinedAt: !7937)
!8050 = !DILocation(line: 371, column: 6, scope: !6555, inlinedAt: !7937)
!8051 = !DILocation(line: 371, column: 26, scope: !7017, inlinedAt: !7937)
!8052 = !DILocation(line: 372, column: 6, scope: !7022, inlinedAt: !7937)
!8053 = !DILocation(line: 372, column: 11, scope: !7022, inlinedAt: !7937)
!8054 = !DILocation(line: 372, column: 6, scope: !6555, inlinedAt: !7937)
!8055 = !DILocation(line: 372, column: 26, scope: !7022, inlinedAt: !7937)
!8056 = !DILocation(line: 373, column: 6, scope: !7027, inlinedAt: !7937)
!8057 = !DILocation(line: 373, column: 11, scope: !7027, inlinedAt: !7937)
!8058 = !DILocation(line: 373, column: 6, scope: !6555, inlinedAt: !7937)
!8059 = !DILocation(line: 373, column: 26, scope: !7027, inlinedAt: !7937)
!8060 = !DILocation(line: 374, column: 6, scope: !7032, inlinedAt: !7937)
!8061 = !DILocation(line: 374, column: 11, scope: !7032, inlinedAt: !7937)
!8062 = !DILocation(line: 374, column: 6, scope: !6555, inlinedAt: !7937)
!8063 = !DILocation(line: 374, column: 26, scope: !7032, inlinedAt: !7937)
!8064 = !DILocation(line: 375, column: 6, scope: !7037, inlinedAt: !7937)
!8065 = !DILocation(line: 375, column: 11, scope: !7037, inlinedAt: !7937)
!8066 = !DILocation(line: 375, column: 6, scope: !6555, inlinedAt: !7937)
!8067 = !DILocation(line: 375, column: 27, scope: !7037, inlinedAt: !7937)
!8068 = !DILocation(line: 376, column: 6, scope: !7042, inlinedAt: !7937)
!8069 = !DILocation(line: 376, column: 11, scope: !7042, inlinedAt: !7937)
!8070 = !DILocation(line: 376, column: 6, scope: !6555, inlinedAt: !7937)
!8071 = !DILocation(line: 376, column: 32, scope: !7042, inlinedAt: !7937)
!8072 = !DILocation(line: 377, column: 6, scope: !7047, inlinedAt: !7937)
!8073 = !DILocation(line: 377, column: 11, scope: !7047, inlinedAt: !7937)
!8074 = !DILocation(line: 377, column: 6, scope: !6555, inlinedAt: !7937)
!8075 = !DILocation(line: 377, column: 32, scope: !7047, inlinedAt: !7937)
!8076 = !DILocation(line: 378, column: 6, scope: !7052, inlinedAt: !7937)
!8077 = !DILocation(line: 378, column: 11, scope: !7052, inlinedAt: !7937)
!8078 = !DILocation(line: 378, column: 6, scope: !6555, inlinedAt: !7937)
!8079 = !DILocation(line: 378, column: 32, scope: !7052, inlinedAt: !7937)
!8080 = !DILocation(line: 379, column: 6, scope: !7057, inlinedAt: !7937)
!8081 = !DILocation(line: 379, column: 11, scope: !7057, inlinedAt: !7937)
!8082 = !DILocation(line: 379, column: 6, scope: !6555, inlinedAt: !7937)
!8083 = !DILocation(line: 379, column: 33, scope: !7057, inlinedAt: !7937)
!8084 = !DILocation(line: 380, column: 6, scope: !7062, inlinedAt: !7937)
!8085 = !DILocation(line: 380, column: 11, scope: !7062, inlinedAt: !7937)
!8086 = !DILocation(line: 380, column: 6, scope: !6555, inlinedAt: !7937)
!8087 = !DILocation(line: 380, column: 33, scope: !7062, inlinedAt: !7937)
!8088 = !DILocation(line: 381, column: 6, scope: !7067, inlinedAt: !7937)
!8089 = !DILocation(line: 381, column: 11, scope: !7067, inlinedAt: !7937)
!8090 = !DILocation(line: 381, column: 6, scope: !6555, inlinedAt: !7937)
!8091 = !DILocation(line: 381, column: 33, scope: !7067, inlinedAt: !7937)
!8092 = !DILocation(line: 382, column: 2, scope: !7072, inlinedAt: !7937)
!8093 = !DILocation(line: 382, column: 2, scope: !7076, inlinedAt: !7937)
!8094 = !DILocation(line: 382, column: 2, scope: !7077, inlinedAt: !7937)
!8095 = !DILocation(line: 386, column: 1, scope: !6555, inlinedAt: !7937)
!8096 = !DILocation(line: 547, column: 9, scope: !6536, inlinedAt: !7930)
!8097 = !DILocation(line: 549, column: 8, scope: !7083, inlinedAt: !7930)
!8098 = !DILocation(line: 549, column: 7, scope: !6536, inlinedAt: !7930)
!8099 = !DILocation(line: 550, column: 4, scope: !7083, inlinedAt: !7930)
!8100 = !DILocation(line: 553, column: 33, scope: !6536, inlinedAt: !7930)
!8101 = !DILocation(line: 325, column: 6, scope: !7088, inlinedAt: !7935)
!8102 = !DILocation(line: 325, column: 6, scope: !6549, inlinedAt: !7935)
!8103 = !DILocation(line: 326, column: 3, scope: !7088, inlinedAt: !7935)
!8104 = !DILocation(line: 332, column: 9, scope: !6549, inlinedAt: !7935)
!8105 = !DILocation(line: 332, column: 15, scope: !6549, inlinedAt: !7935)
!8106 = !DILocation(line: 332, column: 2, scope: !6549, inlinedAt: !7935)
!8107 = !DILocation(line: 336, column: 1, scope: !6549, inlinedAt: !7935)
!8108 = !DILocation(line: 553, column: 5, scope: !6536, inlinedAt: !7930)
!8109 = !DILocation(line: 553, column: 41, scope: !6536, inlinedAt: !7930)
!8110 = !DILocation(line: 554, column: 5, scope: !6536, inlinedAt: !7930)
!8111 = !DILocation(line: 554, column: 12, scope: !6536, inlinedAt: !7930)
!8112 = !DILocation(line: 448, column: 31, scope: !6531, inlinedAt: !7929)
!8113 = !DILocation(line: 448, column: 34, scope: !6531, inlinedAt: !7929)
!8114 = !DILocation(line: 448, column: 14, scope: !6531, inlinedAt: !7929)
!8115 = !DILocation(line: 450, column: 22, scope: !6531, inlinedAt: !7929)
!8116 = !DILocation(line: 450, column: 25, scope: !6531, inlinedAt: !7929)
!8117 = !DILocation(line: 450, column: 30, scope: !6531, inlinedAt: !7929)
!8118 = !DILocation(line: 450, column: 36, scope: !6531, inlinedAt: !7929)
!8119 = !DILocation(line: 450, column: 8, scope: !6531, inlinedAt: !7929)
!8120 = !DILocation(line: 450, column: 6, scope: !6531, inlinedAt: !7929)
!8121 = !DILocation(line: 451, column: 9, scope: !6531, inlinedAt: !7929)
!8122 = !DILocation(line: 552, column: 3, scope: !6536, inlinedAt: !7930)
!8123 = !DILocation(line: 557, column: 19, scope: !6538, inlinedAt: !7930)
!8124 = !DILocation(line: 557, column: 25, scope: !6538, inlinedAt: !7930)
!8125 = !DILocation(line: 557, column: 9, scope: !6538, inlinedAt: !7930)
!8126 = !DILocation(line: 557, column: 2, scope: !6538, inlinedAt: !7930)
!8127 = !DILocation(line: 558, column: 1, scope: !6538, inlinedAt: !7930)
!8128 = !DILocation(line: 664, column: 2, scope: !7927)
!8129 = distinct !DISubprogram(name: "ips_abort_init", scope: !3, file: !3, line: 6515, type: !8130, scopeLine: 6516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{!182, !5540, !182}
!8132 = !DILocalVariable(name: "ha", arg: 1, scope: !8129, file: !3, line: 6515, type: !5540)
!8133 = !DILocation(line: 6515, column: 27, scope: !8129)
!8134 = !DILocalVariable(name: "index", arg: 2, scope: !8129, file: !3, line: 6515, type: !182)
!8135 = !DILocation(line: 6515, column: 35, scope: !8129)
!8136 = !DILocation(line: 6517, column: 2, scope: !8129)
!8137 = !DILocation(line: 6517, column: 6, scope: !8129)
!8138 = !DILocation(line: 6517, column: 13, scope: !8129)
!8139 = !DILocation(line: 6518, column: 11, scope: !8129)
!8140 = !DILocation(line: 6518, column: 2, scope: !8129)
!8141 = !DILocation(line: 6519, column: 9, scope: !8129)
!8142 = !DILocation(line: 6519, column: 2, scope: !8129)
!8143 = !DILocation(line: 6519, column: 16, scope: !8129)
!8144 = !DILocation(line: 6520, column: 9, scope: !8129)
!8145 = !DILocation(line: 6520, column: 2, scope: !8129)
!8146 = !DILocation(line: 6520, column: 16, scope: !8129)
!8147 = !DILocation(line: 6521, column: 2, scope: !8129)
!8148 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !6272, file: !6272, line: 392, type: !8149, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{!183, !2031, !827, !8151, !184}
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!8152 = !DILocalVariable(name: "dev", arg: 1, scope: !8148, file: !6272, line: 392, type: !2031)
!8153 = !DILocation(line: 392, column: 55, scope: !8148)
!8154 = !DILocalVariable(name: "size", arg: 2, scope: !8148, file: !6272, line: 392, type: !827)
!8155 = !DILocation(line: 392, column: 67, scope: !8148)
!8156 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !8148, file: !6272, line: 393, type: !8151)
!8157 = !DILocation(line: 393, column: 15, scope: !8148)
!8158 = !DILocalVariable(name: "gfp", arg: 4, scope: !8148, file: !6272, line: 393, type: !184)
!8159 = !DILocation(line: 393, column: 33, scope: !8148)
!8160 = !DILocation(line: 396, column: 25, scope: !8148)
!8161 = !DILocation(line: 396, column: 30, scope: !8148)
!8162 = !DILocation(line: 396, column: 36, scope: !8148)
!8163 = !DILocation(line: 396, column: 48, scope: !8148)
!8164 = !DILocation(line: 397, column: 5, scope: !8148)
!8165 = !DILocation(line: 397, column: 9, scope: !8148)
!8166 = !DILocation(line: 397, column: 4, scope: !8148)
!8167 = !DILocation(line: 396, column: 9, scope: !8148)
!8168 = !DILocation(line: 396, column: 2, scope: !8148)
!8169 = distinct !DISubprogram(name: "ips_setup_funclist", scope: !3, file: !3, line: 578, type: !7788, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8170 = !DILocalVariable(name: "ha", arg: 1, scope: !8169, file: !3, line: 578, type: !5540)
!8171 = !DILocation(line: 578, column: 31, scope: !8169)
!8172 = !DILocation(line: 584, column: 6, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 584, column: 6)
!8174 = !DILocation(line: 584, column: 26, scope: !8173)
!8175 = !DILocation(line: 584, column: 29, scope: !8173)
!8176 = !DILocation(line: 584, column: 6, scope: !8169)
!8177 = !DILocation(line: 586, column: 3, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 584, column: 47)
!8179 = !DILocation(line: 586, column: 7, scope: !8178)
!8180 = !DILocation(line: 586, column: 12, scope: !8178)
!8181 = !DILocation(line: 586, column: 19, scope: !8178)
!8182 = !DILocation(line: 587, column: 3, scope: !8178)
!8183 = !DILocation(line: 587, column: 7, scope: !8178)
!8184 = !DILocation(line: 587, column: 12, scope: !8178)
!8185 = !DILocation(line: 587, column: 19, scope: !8178)
!8186 = !DILocation(line: 588, column: 3, scope: !8178)
!8187 = !DILocation(line: 588, column: 7, scope: !8178)
!8188 = !DILocation(line: 588, column: 12, scope: !8178)
!8189 = !DILocation(line: 588, column: 18, scope: !8178)
!8190 = !DILocation(line: 589, column: 3, scope: !8178)
!8191 = !DILocation(line: 589, column: 7, scope: !8178)
!8192 = !DILocation(line: 589, column: 12, scope: !8178)
!8193 = !DILocation(line: 589, column: 17, scope: !8178)
!8194 = !DILocation(line: 590, column: 3, scope: !8178)
!8195 = !DILocation(line: 590, column: 7, scope: !8178)
!8196 = !DILocation(line: 590, column: 12, scope: !8178)
!8197 = !DILocation(line: 590, column: 20, scope: !8178)
!8198 = !DILocation(line: 591, column: 3, scope: !8178)
!8199 = !DILocation(line: 591, column: 7, scope: !8178)
!8200 = !DILocation(line: 591, column: 12, scope: !8178)
!8201 = !DILocation(line: 591, column: 18, scope: !8178)
!8202 = !DILocation(line: 592, column: 3, scope: !8178)
!8203 = !DILocation(line: 592, column: 7, scope: !8178)
!8204 = !DILocation(line: 592, column: 12, scope: !8178)
!8205 = !DILocation(line: 592, column: 17, scope: !8178)
!8206 = !DILocation(line: 593, column: 3, scope: !8178)
!8207 = !DILocation(line: 593, column: 7, scope: !8178)
!8208 = !DILocation(line: 593, column: 12, scope: !8178)
!8209 = !DILocation(line: 593, column: 22, scope: !8178)
!8210 = !DILocation(line: 594, column: 2, scope: !8178)
!8211 = !DILocation(line: 594, column: 13, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 594, column: 13)
!8213 = !DILocation(line: 594, column: 13, scope: !8173)
!8214 = !DILocation(line: 596, column: 3, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 594, column: 32)
!8216 = !DILocation(line: 596, column: 7, scope: !8215)
!8217 = !DILocation(line: 596, column: 12, scope: !8215)
!8218 = !DILocation(line: 596, column: 19, scope: !8215)
!8219 = !DILocation(line: 597, column: 3, scope: !8215)
!8220 = !DILocation(line: 597, column: 7, scope: !8215)
!8221 = !DILocation(line: 597, column: 12, scope: !8215)
!8222 = !DILocation(line: 597, column: 19, scope: !8215)
!8223 = !DILocation(line: 598, column: 3, scope: !8215)
!8224 = !DILocation(line: 598, column: 7, scope: !8215)
!8225 = !DILocation(line: 598, column: 12, scope: !8215)
!8226 = !DILocation(line: 598, column: 17, scope: !8215)
!8227 = !DILocation(line: 599, column: 3, scope: !8215)
!8228 = !DILocation(line: 599, column: 7, scope: !8215)
!8229 = !DILocation(line: 599, column: 12, scope: !8215)
!8230 = !DILocation(line: 599, column: 20, scope: !8215)
!8231 = !DILocation(line: 600, column: 3, scope: !8215)
!8232 = !DILocation(line: 600, column: 7, scope: !8215)
!8233 = !DILocation(line: 600, column: 12, scope: !8215)
!8234 = !DILocation(line: 600, column: 21, scope: !8215)
!8235 = !DILocation(line: 601, column: 3, scope: !8215)
!8236 = !DILocation(line: 601, column: 7, scope: !8215)
!8237 = !DILocation(line: 601, column: 12, scope: !8215)
!8238 = !DILocation(line: 601, column: 18, scope: !8215)
!8239 = !DILocation(line: 602, column: 3, scope: !8215)
!8240 = !DILocation(line: 602, column: 7, scope: !8215)
!8241 = !DILocation(line: 602, column: 12, scope: !8215)
!8242 = !DILocation(line: 602, column: 17, scope: !8215)
!8243 = !DILocation(line: 603, column: 3, scope: !8215)
!8244 = !DILocation(line: 603, column: 7, scope: !8215)
!8245 = !DILocation(line: 603, column: 12, scope: !8215)
!8246 = !DILocation(line: 603, column: 22, scope: !8215)
!8247 = !DILocation(line: 604, column: 3, scope: !8215)
!8248 = !DILocation(line: 604, column: 7, scope: !8215)
!8249 = !DILocation(line: 604, column: 12, scope: !8215)
!8250 = !DILocation(line: 604, column: 24, scope: !8215)
!8251 = !DILocation(line: 605, column: 3, scope: !8215)
!8252 = !DILocation(line: 605, column: 7, scope: !8215)
!8253 = !DILocation(line: 605, column: 12, scope: !8215)
!8254 = !DILocation(line: 605, column: 23, scope: !8215)
!8255 = !DILocation(line: 606, column: 3, scope: !8215)
!8256 = !DILocation(line: 606, column: 7, scope: !8215)
!8257 = !DILocation(line: 606, column: 12, scope: !8215)
!8258 = !DILocation(line: 606, column: 22, scope: !8215)
!8259 = !DILocation(line: 607, column: 7, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 607, column: 7)
!8261 = !DILocation(line: 607, column: 7, scope: !8215)
!8262 = !DILocation(line: 608, column: 4, scope: !8260)
!8263 = !DILocation(line: 608, column: 8, scope: !8260)
!8264 = !DILocation(line: 608, column: 13, scope: !8260)
!8265 = !DILocation(line: 608, column: 19, scope: !8260)
!8266 = !DILocation(line: 610, column: 4, scope: !8260)
!8267 = !DILocation(line: 610, column: 8, scope: !8260)
!8268 = !DILocation(line: 610, column: 13, scope: !8260)
!8269 = !DILocation(line: 610, column: 19, scope: !8260)
!8270 = !DILocation(line: 611, column: 2, scope: !8215)
!8271 = !DILocation(line: 613, column: 3, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 611, column: 9)
!8273 = !DILocation(line: 613, column: 7, scope: !8272)
!8274 = !DILocation(line: 613, column: 12, scope: !8272)
!8275 = !DILocation(line: 613, column: 19, scope: !8272)
!8276 = !DILocation(line: 614, column: 3, scope: !8272)
!8277 = !DILocation(line: 614, column: 7, scope: !8272)
!8278 = !DILocation(line: 614, column: 12, scope: !8272)
!8279 = !DILocation(line: 614, column: 19, scope: !8272)
!8280 = !DILocation(line: 615, column: 3, scope: !8272)
!8281 = !DILocation(line: 615, column: 7, scope: !8272)
!8282 = !DILocation(line: 615, column: 12, scope: !8272)
!8283 = !DILocation(line: 615, column: 17, scope: !8272)
!8284 = !DILocation(line: 616, column: 3, scope: !8272)
!8285 = !DILocation(line: 616, column: 7, scope: !8272)
!8286 = !DILocation(line: 616, column: 12, scope: !8272)
!8287 = !DILocation(line: 616, column: 20, scope: !8272)
!8288 = !DILocation(line: 617, column: 3, scope: !8272)
!8289 = !DILocation(line: 617, column: 7, scope: !8272)
!8290 = !DILocation(line: 617, column: 12, scope: !8272)
!8291 = !DILocation(line: 617, column: 21, scope: !8272)
!8292 = !DILocation(line: 618, column: 3, scope: !8272)
!8293 = !DILocation(line: 618, column: 7, scope: !8272)
!8294 = !DILocation(line: 618, column: 12, scope: !8272)
!8295 = !DILocation(line: 618, column: 18, scope: !8272)
!8296 = !DILocation(line: 619, column: 3, scope: !8272)
!8297 = !DILocation(line: 619, column: 7, scope: !8272)
!8298 = !DILocation(line: 619, column: 12, scope: !8272)
!8299 = !DILocation(line: 619, column: 17, scope: !8272)
!8300 = !DILocation(line: 620, column: 3, scope: !8272)
!8301 = !DILocation(line: 620, column: 7, scope: !8272)
!8302 = !DILocation(line: 620, column: 12, scope: !8272)
!8303 = !DILocation(line: 620, column: 22, scope: !8272)
!8304 = !DILocation(line: 621, column: 3, scope: !8272)
!8305 = !DILocation(line: 621, column: 7, scope: !8272)
!8306 = !DILocation(line: 621, column: 12, scope: !8272)
!8307 = !DILocation(line: 621, column: 24, scope: !8272)
!8308 = !DILocation(line: 622, column: 3, scope: !8272)
!8309 = !DILocation(line: 622, column: 7, scope: !8272)
!8310 = !DILocation(line: 622, column: 12, scope: !8272)
!8311 = !DILocation(line: 622, column: 23, scope: !8272)
!8312 = !DILocation(line: 623, column: 3, scope: !8272)
!8313 = !DILocation(line: 623, column: 7, scope: !8272)
!8314 = !DILocation(line: 623, column: 12, scope: !8272)
!8315 = !DILocation(line: 623, column: 22, scope: !8272)
!8316 = !DILocation(line: 625, column: 7, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 625, column: 7)
!8318 = !DILocation(line: 625, column: 7, scope: !8272)
!8319 = !DILocation(line: 626, column: 4, scope: !8317)
!8320 = !DILocation(line: 626, column: 8, scope: !8317)
!8321 = !DILocation(line: 626, column: 13, scope: !8317)
!8322 = !DILocation(line: 626, column: 19, scope: !8317)
!8323 = !DILocation(line: 628, column: 4, scope: !8317)
!8324 = !DILocation(line: 628, column: 8, scope: !8317)
!8325 = !DILocation(line: 628, column: 13, scope: !8317)
!8326 = !DILocation(line: 628, column: 19, scope: !8317)
!8327 = !DILocation(line: 630, column: 1, scope: !8169)
!8328 = distinct !DISubprogram(name: "readl", scope: !8329, file: !8329, line: 59, type: !8330, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8329 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8330 = !DISubroutineType(types: !8331)
!8331 = !{!7, !8332}
!8332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8333, size: 64)
!8333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8334)
!8334 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!8335 = !DILocalVariable(name: "addr", arg: 1, scope: !8328, file: !8329, line: 59, type: !8332)
!8336 = !DILocation(line: 59, column: 1, scope: !8328)
!8337 = !DILocalVariable(name: "ret", scope: !8328, file: !8329, line: 59, type: !7)
!8338 = !{i32 -2146306395}
!8339 = distinct !DISubprogram(name: "ips_reset_morpheus", scope: !3, file: !3, line: 5089, type: !8340, scopeLine: 5090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!182, !5540}
!8342 = !DILocalVariable(name: "ha", arg: 1, scope: !8339, file: !3, line: 5089, type: !5540)
!8343 = !DILocation(line: 5089, column: 31, scope: !8339)
!8344 = !DILocalVariable(name: "reset_counter", scope: !8339, file: !3, line: 5091, type: !182)
!8345 = !DILocation(line: 5091, column: 6, scope: !8339)
!8346 = !DILocalVariable(name: "junk", scope: !8339, file: !3, line: 5092, type: !205)
!8347 = !DILocation(line: 5092, column: 10, scope: !8339)
!8348 = !DILocation(line: 5099, column: 16, scope: !8339)
!8349 = !DILocation(line: 5101, column: 2, scope: !8339)
!8350 = !DILocation(line: 5101, column: 9, scope: !8339)
!8351 = !DILocation(line: 5101, column: 23, scope: !8339)
!8352 = !DILocation(line: 5102, column: 16, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 5101, column: 28)
!8354 = !DILocation(line: 5104, column: 22, scope: !8353)
!8355 = !DILocation(line: 5104, column: 26, scope: !8353)
!8356 = !DILocation(line: 5104, column: 34, scope: !8353)
!8357 = !DILocation(line: 5104, column: 3, scope: !8353)
!8358 = !DILocation(line: 5107, column: 3, scope: !8353)
!8359 = !DILocalVariable(name: "__ms", scope: !8360, file: !3, line: 5107, type: !198)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 5107, column: 3)
!8361 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 5107, column: 3)
!8362 = !DILocation(line: 5107, column: 3, scope: !8360)
!8363 = !DILocation(line: 5107, column: 3, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 5107, column: 3)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 5107, column: 3)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 5107, column: 3)
!8367 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 5107, column: 3)
!8368 = distinct !{!8368, !8362, !8362}
!8369 = !DILocation(line: 5107, column: 3, scope: !8361)
!8370 = !DILocation(line: 5110, column: 24, scope: !8353)
!8371 = !DILocation(line: 5110, column: 28, scope: !8353)
!8372 = !DILocation(line: 5110, column: 3, scope: !8353)
!8373 = !DILocation(line: 5112, column: 9, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 5112, column: 7)
!8375 = !DILocation(line: 5112, column: 13, scope: !8374)
!8376 = !DILocation(line: 5112, column: 18, scope: !8374)
!8377 = !DILocation(line: 5112, column: 25, scope: !8374)
!8378 = !DILocation(line: 5112, column: 7, scope: !8374)
!8379 = !DILocation(line: 5112, column: 7, scope: !8353)
!8380 = !DILocation(line: 5113, column: 4, scope: !8374)
!8381 = !DILocation(line: 5114, column: 12, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 5114, column: 12)
!8383 = !DILocation(line: 5114, column: 26, scope: !8382)
!8384 = !DILocation(line: 5114, column: 12, scope: !8374)
!8385 = !DILocation(line: 5116, column: 4, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 5114, column: 32)
!8387 = distinct !{!8387, !8349, !8388}
!8388 = !DILocation(line: 5118, column: 2, scope: !8339)
!8389 = !DILocation(line: 5120, column: 2, scope: !8339)
!8390 = !DILocation(line: 5121, column: 1, scope: !8339)
!8391 = distinct !DISubprogram(name: "get_order", scope: !8392, file: !8392, line: 29, type: !8393, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8392 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8393 = !DISubroutineType(types: !8394)
!8394 = !{!182, !198}
!8395 = !DILocalVariable(name: "x", arg: 1, scope: !8396, file: !8397, line: 366, type: !289)
!8396 = distinct !DISubprogram(name: "fls64", scope: !8397, file: !8397, line: 366, type: !8398, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8397 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!182, !289}
!8400 = !DILocation(line: 366, column: 40, scope: !8396, inlinedAt: !8401)
!8401 = distinct !DILocation(line: 46, column: 9, scope: !8391)
!8402 = !DILocalVariable(name: "bitpos", scope: !8396, file: !8397, line: 368, type: !182)
!8403 = !DILocation(line: 368, column: 6, scope: !8396, inlinedAt: !8401)
!8404 = !DILocalVariable(name: "size", arg: 1, scope: !8391, file: !8392, line: 29, type: !198)
!8405 = !DILocation(line: 29, column: 63, scope: !8391)
!8406 = !DILocation(line: 31, column: 27, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8391, file: !8392, line: 31, column: 6)
!8408 = !DILocation(line: 31, column: 6, scope: !8407)
!8409 = !DILocation(line: 31, column: 6, scope: !8391)
!8410 = !DILocation(line: 32, column: 8, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !8392, line: 32, column: 7)
!8412 = distinct !DILexicalBlock(scope: !8407, file: !8392, line: 31, column: 34)
!8413 = !DILocation(line: 32, column: 7, scope: !8412)
!8414 = !DILocation(line: 33, column: 4, scope: !8411)
!8415 = !DILocation(line: 35, column: 7, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8412, file: !8392, line: 35, column: 7)
!8417 = !DILocation(line: 35, column: 12, scope: !8416)
!8418 = !DILocation(line: 35, column: 7, scope: !8412)
!8419 = !DILocation(line: 36, column: 4, scope: !8416)
!8420 = !DILocation(line: 38, column: 10, scope: !8412)
!8421 = !DILocation(line: 38, column: 28, scope: !8412)
!8422 = !DILocation(line: 38, column: 41, scope: !8412)
!8423 = !DILocation(line: 38, column: 3, scope: !8412)
!8424 = !DILocation(line: 41, column: 6, scope: !8391)
!8425 = !DILocation(line: 42, column: 7, scope: !8391)
!8426 = !DILocation(line: 46, column: 15, scope: !8391)
!8427 = !DILocation(line: 374, column: 2, scope: !8396, inlinedAt: !8401)
!8428 = !DILocation(line: 376, column: 14, scope: !8396, inlinedAt: !8401)
!8429 = !{i32 881724}
!8430 = !DILocation(line: 377, column: 9, scope: !8396, inlinedAt: !8401)
!8431 = !DILocation(line: 377, column: 16, scope: !8396, inlinedAt: !8401)
!8432 = !DILocation(line: 46, column: 2, scope: !8391)
!8433 = !DILocation(line: 48, column: 1, scope: !8391)
!8434 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8435, file: !8435, line: 30, type: !8436, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8435 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8436 = !DISubroutineType(types: !8437)
!8437 = !{!182, !288}
!8438 = !DILocation(line: 366, column: 40, scope: !8396, inlinedAt: !8439)
!8439 = distinct !DILocation(line: 32, column: 9, scope: !8434)
!8440 = !DILocation(line: 368, column: 6, scope: !8396, inlinedAt: !8439)
!8441 = !DILocalVariable(name: "n", arg: 1, scope: !8434, file: !8435, line: 30, type: !288)
!8442 = !DILocation(line: 30, column: 21, scope: !8434)
!8443 = !DILocation(line: 32, column: 15, scope: !8434)
!8444 = !DILocation(line: 374, column: 2, scope: !8396, inlinedAt: !8439)
!8445 = !DILocation(line: 376, column: 14, scope: !8396, inlinedAt: !8439)
!8446 = !DILocation(line: 377, column: 9, scope: !8396, inlinedAt: !8439)
!8447 = !DILocation(line: 377, column: 16, scope: !8396, inlinedAt: !8439)
!8448 = !DILocation(line: 32, column: 18, scope: !8434)
!8449 = !DILocation(line: 32, column: 2, scope: !8434)
!8450 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8451, file: !8451, line: 137, type: !8452, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8451 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8452 = !DISubroutineType(types: !8453)
!8453 = !{!183, !2609, !1865, !827, !184}
!8454 = !DILocalVariable(name: "s", arg: 1, scope: !8450, file: !8451, line: 137, type: !2609)
!8455 = !DILocation(line: 137, column: 54, scope: !8450)
!8456 = !DILocalVariable(name: "object", arg: 2, scope: !8450, file: !8451, line: 137, type: !1865)
!8457 = !DILocation(line: 137, column: 69, scope: !8450)
!8458 = !DILocalVariable(name: "size", arg: 3, scope: !8450, file: !8451, line: 138, type: !827)
!8459 = !DILocation(line: 138, column: 12, scope: !8450)
!8460 = !DILocalVariable(name: "flags", arg: 4, scope: !8450, file: !8451, line: 138, type: !184)
!8461 = !DILocation(line: 138, column: 24, scope: !8450)
!8462 = !DILocation(line: 140, column: 17, scope: !8450)
!8463 = !DILocation(line: 140, column: 2, scope: !8450)
!8464 = distinct !DISubprogram(name: "ips_isintr_morpheus", scope: !3, file: !3, line: 5507, type: !8340, scopeLine: 5508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8465 = !DILocalVariable(name: "ha", arg: 1, scope: !8464, file: !3, line: 5507, type: !5540)
!8466 = !DILocation(line: 5507, column: 32, scope: !8464)
!8467 = !DILocalVariable(name: "Isr", scope: !8464, file: !3, line: 5509, type: !186)
!8468 = !DILocation(line: 5509, column: 11, scope: !8464)
!8469 = !DILocation(line: 5513, column: 14, scope: !8464)
!8470 = !DILocation(line: 5513, column: 18, scope: !8464)
!8471 = !DILocation(line: 5513, column: 26, scope: !8464)
!8472 = !DILocation(line: 5513, column: 8, scope: !8464)
!8473 = !DILocation(line: 5513, column: 6, scope: !8464)
!8474 = !DILocation(line: 5515, column: 6, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 5515, column: 6)
!8476 = !DILocation(line: 5515, column: 10, scope: !8475)
!8477 = !DILocation(line: 5515, column: 6, scope: !8464)
!8478 = !DILocation(line: 5516, column: 3, scope: !8475)
!8479 = !DILocation(line: 5518, column: 3, scope: !8475)
!8480 = !DILocation(line: 5519, column: 1, scope: !8464)
!8481 = distinct !DISubprogram(name: "ips_isinit_morpheus", scope: !3, file: !3, line: 4520, type: !8340, scopeLine: 4521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8482 = !DILocalVariable(name: "ha", arg: 1, scope: !8481, file: !3, line: 4520, type: !5540)
!8483 = !DILocation(line: 4520, column: 32, scope: !8481)
!8484 = !DILocalVariable(name: "post", scope: !8481, file: !3, line: 4522, type: !186)
!8485 = !DILocation(line: 4522, column: 11, scope: !8481)
!8486 = !DILocalVariable(name: "bits", scope: !8481, file: !3, line: 4523, type: !186)
!8487 = !DILocation(line: 4523, column: 11, scope: !8481)
!8488 = !DILocation(line: 4527, column: 26, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 4527, column: 6)
!8490 = !DILocation(line: 4527, column: 6, scope: !8489)
!8491 = !DILocation(line: 4527, column: 6, scope: !8481)
!8492 = !DILocation(line: 4528, column: 26, scope: !8489)
!8493 = !DILocation(line: 4528, column: 6, scope: !8489)
!8494 = !DILocation(line: 4530, column: 15, scope: !8481)
!8495 = !DILocation(line: 4530, column: 19, scope: !8481)
!8496 = !DILocation(line: 4530, column: 27, scope: !8481)
!8497 = !DILocation(line: 4530, column: 9, scope: !8481)
!8498 = !DILocation(line: 4530, column: 7, scope: !8481)
!8499 = !DILocation(line: 4531, column: 15, scope: !8481)
!8500 = !DILocation(line: 4531, column: 19, scope: !8481)
!8501 = !DILocation(line: 4531, column: 27, scope: !8481)
!8502 = !DILocation(line: 4531, column: 9, scope: !8481)
!8503 = !DILocation(line: 4531, column: 7, scope: !8481)
!8504 = !DILocation(line: 4533, column: 6, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 4533, column: 6)
!8506 = !DILocation(line: 4533, column: 11, scope: !8505)
!8507 = !DILocation(line: 4533, column: 6, scope: !8481)
!8508 = !DILocation(line: 4534, column: 3, scope: !8505)
!8509 = !DILocation(line: 4535, column: 11, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 4535, column: 11)
!8511 = !DILocation(line: 4535, column: 16, scope: !8510)
!8512 = !DILocation(line: 4535, column: 11, scope: !8505)
!8513 = !DILocation(line: 4536, column: 3, scope: !8510)
!8514 = !DILocation(line: 4538, column: 3, scope: !8510)
!8515 = !DILocation(line: 4539, column: 1, scope: !8481)
!8516 = distinct !DISubprogram(name: "ips_issue_i2o_memio", scope: !3, file: !3, line: 5409, type: !8517, scopeLine: 5410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{!182, !5540, !4848}
!8519 = !DILocalVariable(name: "ha", arg: 1, scope: !8516, file: !3, line: 5409, type: !5540)
!8520 = !DILocation(line: 5409, column: 32, scope: !8516)
!8521 = !DILocalVariable(name: "scb", arg: 2, scope: !8516, file: !3, line: 5409, type: !4848)
!8522 = !DILocation(line: 5409, column: 48, scope: !8516)
!8523 = !DILocation(line: 5414, column: 6, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 5414, column: 6)
!8525 = !DILocation(line: 5414, column: 11, scope: !8524)
!8526 = !DILocation(line: 5414, column: 6, scope: !8516)
!8527 = !DILocation(line: 5421, column: 2, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 5414, column: 21)
!8529 = !DILocation(line: 5426, column: 9, scope: !8516)
!8530 = !DILocation(line: 5426, column: 14, scope: !8516)
!8531 = !DILocation(line: 5426, column: 27, scope: !8516)
!8532 = !DILocation(line: 5426, column: 31, scope: !8516)
!8533 = !DILocation(line: 5426, column: 39, scope: !8516)
!8534 = !DILocation(line: 5426, column: 2, scope: !8516)
!8535 = !DILocation(line: 5428, column: 2, scope: !8516)
!8536 = distinct !DISubprogram(name: "ips_init_morpheus", scope: !3, file: !3, line: 4882, type: !8340, scopeLine: 4883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8537 = !DILocalVariable(name: "ha", arg: 1, scope: !8536, file: !3, line: 4882, type: !5540)
!8538 = !DILocation(line: 4882, column: 30, scope: !8536)
!8539 = !DILocalVariable(name: "Post", scope: !8536, file: !3, line: 4884, type: !186)
!8540 = !DILocation(line: 4884, column: 11, scope: !8536)
!8541 = !DILocalVariable(name: "Config", scope: !8536, file: !3, line: 4885, type: !186)
!8542 = !DILocation(line: 4885, column: 11, scope: !8536)
!8543 = !DILocalVariable(name: "Isr", scope: !8536, file: !3, line: 4886, type: !186)
!8544 = !DILocation(line: 4886, column: 11, scope: !8536)
!8545 = !DILocalVariable(name: "Oimr", scope: !8536, file: !3, line: 4887, type: !186)
!8546 = !DILocation(line: 4887, column: 11, scope: !8536)
!8547 = !DILocalVariable(name: "i", scope: !8536, file: !3, line: 4888, type: !182)
!8548 = !DILocation(line: 4888, column: 6, scope: !8536)
!8549 = !DILocation(line: 4893, column: 9, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4893, column: 2)
!8551 = !DILocation(line: 4893, column: 7, scope: !8550)
!8552 = !DILocation(line: 4893, column: 14, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4893, column: 2)
!8554 = !DILocation(line: 4893, column: 16, scope: !8553)
!8555 = !DILocation(line: 4893, column: 2, scope: !8550)
!8556 = !DILocation(line: 4894, column: 15, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4893, column: 27)
!8558 = !DILocation(line: 4894, column: 19, scope: !8557)
!8559 = !DILocation(line: 4894, column: 27, scope: !8557)
!8560 = !DILocation(line: 4894, column: 9, scope: !8557)
!8561 = !DILocation(line: 4894, column: 7, scope: !8557)
!8562 = !DILocation(line: 4896, column: 7, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 4896, column: 7)
!8564 = !DILocation(line: 4896, column: 11, scope: !8563)
!8565 = !DILocation(line: 4896, column: 7, scope: !8557)
!8566 = !DILocation(line: 4897, column: 4, scope: !8563)
!8567 = !DILocation(line: 4900, column: 3, scope: !8557)
!8568 = !DILocalVariable(name: "__ms", scope: !8569, file: !3, line: 4900, type: !198)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4900, column: 3)
!8570 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 4900, column: 3)
!8571 = !DILocation(line: 4900, column: 3, scope: !8569)
!8572 = !DILocation(line: 4900, column: 3, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 4900, column: 3)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 4900, column: 3)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 4900, column: 3)
!8576 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 4900, column: 3)
!8577 = distinct !{!8577, !8571, !8571}
!8578 = !DILocation(line: 4900, column: 3, scope: !8570)
!8579 = !DILocation(line: 4901, column: 2, scope: !8557)
!8580 = !DILocation(line: 4893, column: 23, scope: !8553)
!8581 = !DILocation(line: 4893, column: 2, scope: !8553)
!8582 = distinct !{!8582, !8555, !8583}
!8583 = !DILocation(line: 4901, column: 2, scope: !8550)
!8584 = !DILocation(line: 4903, column: 6, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4903, column: 6)
!8586 = !DILocation(line: 4903, column: 8, scope: !8585)
!8587 = !DILocation(line: 4903, column: 6, scope: !8536)
!8588 = !DILocation(line: 4905, column: 3, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4903, column: 15)
!8590 = !DILocation(line: 4908, column: 3, scope: !8589)
!8591 = !DILocation(line: 4911, column: 15, scope: !8536)
!8592 = !DILocation(line: 4911, column: 19, scope: !8536)
!8593 = !DILocation(line: 4911, column: 27, scope: !8536)
!8594 = !DILocation(line: 4911, column: 9, scope: !8536)
!8595 = !DILocation(line: 4911, column: 7, scope: !8536)
!8596 = !DILocation(line: 4913, column: 6, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4913, column: 6)
!8598 = !DILocation(line: 4913, column: 11, scope: !8597)
!8599 = !DILocation(line: 4913, column: 6, scope: !8536)
!8600 = !DILocation(line: 4914, column: 3, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4913, column: 22)
!8602 = !DILocation(line: 4918, column: 7, scope: !8601)
!8603 = !DILocation(line: 4919, column: 10, scope: !8601)
!8604 = !DILocation(line: 4919, column: 15, scope: !8601)
!8605 = !DILocation(line: 4919, column: 19, scope: !8601)
!8606 = !DILocation(line: 4919, column: 27, scope: !8601)
!8607 = !DILocation(line: 4919, column: 3, scope: !8601)
!8608 = !DILocation(line: 4921, column: 10, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4921, column: 3)
!8610 = !DILocation(line: 4921, column: 8, scope: !8609)
!8611 = !DILocation(line: 4921, column: 15, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 4921, column: 3)
!8613 = !DILocation(line: 4921, column: 17, scope: !8612)
!8614 = !DILocation(line: 4921, column: 3, scope: !8609)
!8615 = !DILocation(line: 4922, column: 17, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 4921, column: 29)
!8617 = !DILocation(line: 4922, column: 21, scope: !8616)
!8618 = !DILocation(line: 4922, column: 29, scope: !8616)
!8619 = !DILocation(line: 4922, column: 11, scope: !8616)
!8620 = !DILocation(line: 4922, column: 9, scope: !8616)
!8621 = !DILocation(line: 4923, column: 8, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 4923, column: 8)
!8623 = !DILocation(line: 4923, column: 13, scope: !8622)
!8624 = !DILocation(line: 4923, column: 8, scope: !8616)
!8625 = !DILocation(line: 4924, column: 5, scope: !8622)
!8626 = !DILocation(line: 4926, column: 4, scope: !8616)
!8627 = !DILocalVariable(name: "__ms", scope: !8628, file: !3, line: 4926, type: !198)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 4926, column: 4)
!8629 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 4926, column: 4)
!8630 = !DILocation(line: 4926, column: 4, scope: !8628)
!8631 = !DILocation(line: 4926, column: 4, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 4926, column: 4)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 4926, column: 4)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 4926, column: 4)
!8635 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 4926, column: 4)
!8636 = distinct !{!8636, !8630, !8630}
!8637 = !DILocation(line: 4926, column: 4, scope: !8629)
!8638 = !DILocation(line: 4927, column: 3, scope: !8616)
!8639 = !DILocation(line: 4921, column: 25, scope: !8612)
!8640 = !DILocation(line: 4921, column: 3, scope: !8612)
!8641 = distinct !{!8641, !8614, !8642}
!8642 = !DILocation(line: 4927, column: 3, scope: !8609)
!8643 = !DILocation(line: 4929, column: 7, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4929, column: 7)
!8645 = !DILocation(line: 4929, column: 9, scope: !8644)
!8646 = !DILocation(line: 4929, column: 7, scope: !8601)
!8647 = !DILocation(line: 4930, column: 4, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 4929, column: 17)
!8649 = !DILocation(line: 4932, column: 4, scope: !8648)
!8650 = !DILocation(line: 4935, column: 2, scope: !8601)
!8651 = !DILocation(line: 4938, column: 6, scope: !8536)
!8652 = !DILocation(line: 4939, column: 9, scope: !8536)
!8653 = !DILocation(line: 4939, column: 14, scope: !8536)
!8654 = !DILocation(line: 4939, column: 18, scope: !8536)
!8655 = !DILocation(line: 4939, column: 26, scope: !8536)
!8656 = !DILocation(line: 4939, column: 2, scope: !8536)
!8657 = !DILocation(line: 4941, column: 6, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4941, column: 6)
!8659 = !DILocation(line: 4941, column: 11, scope: !8658)
!8660 = !DILocation(line: 4941, column: 6, scope: !8536)
!8661 = !DILocation(line: 4942, column: 3, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 4941, column: 42)
!8663 = !DILocation(line: 4945, column: 3, scope: !8662)
!8664 = !DILocation(line: 4949, column: 9, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4949, column: 2)
!8666 = !DILocation(line: 4949, column: 7, scope: !8665)
!8667 = !DILocation(line: 4949, column: 14, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 4949, column: 2)
!8669 = !DILocation(line: 4949, column: 16, scope: !8668)
!8670 = !DILocation(line: 4949, column: 2, scope: !8665)
!8671 = !DILocation(line: 4950, column: 15, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 4949, column: 28)
!8673 = !DILocation(line: 4950, column: 19, scope: !8672)
!8674 = !DILocation(line: 4950, column: 27, scope: !8672)
!8675 = !DILocation(line: 4950, column: 9, scope: !8672)
!8676 = !DILocation(line: 4950, column: 7, scope: !8672)
!8677 = !DILocation(line: 4952, column: 7, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 4952, column: 7)
!8679 = !DILocation(line: 4952, column: 11, scope: !8678)
!8680 = !DILocation(line: 4952, column: 7, scope: !8672)
!8681 = !DILocation(line: 4953, column: 4, scope: !8678)
!8682 = !DILocation(line: 4956, column: 3, scope: !8672)
!8683 = !DILocalVariable(name: "__ms", scope: !8684, file: !3, line: 4956, type: !198)
!8684 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 4956, column: 3)
!8685 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 4956, column: 3)
!8686 = !DILocation(line: 4956, column: 3, scope: !8684)
!8687 = !DILocation(line: 4956, column: 3, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 4956, column: 3)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4956, column: 3)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 4956, column: 3)
!8691 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 4956, column: 3)
!8692 = distinct !{!8692, !8686, !8686}
!8693 = !DILocation(line: 4956, column: 3, scope: !8685)
!8694 = !DILocation(line: 4957, column: 2, scope: !8672)
!8695 = !DILocation(line: 4949, column: 24, scope: !8668)
!8696 = !DILocation(line: 4949, column: 2, scope: !8668)
!8697 = distinct !{!8697, !8670, !8698}
!8698 = !DILocation(line: 4957, column: 2, scope: !8665)
!8699 = !DILocation(line: 4959, column: 6, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4959, column: 6)
!8701 = !DILocation(line: 4959, column: 8, scope: !8700)
!8702 = !DILocation(line: 4959, column: 6, scope: !8536)
!8703 = !DILocation(line: 4961, column: 3, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 4959, column: 16)
!8705 = !DILocation(line: 4964, column: 3, scope: !8704)
!8706 = !DILocation(line: 4967, column: 17, scope: !8536)
!8707 = !DILocation(line: 4967, column: 21, scope: !8536)
!8708 = !DILocation(line: 4967, column: 29, scope: !8536)
!8709 = !DILocation(line: 4967, column: 11, scope: !8536)
!8710 = !DILocation(line: 4967, column: 9, scope: !8536)
!8711 = !DILocation(line: 4970, column: 6, scope: !8536)
!8712 = !DILocation(line: 4971, column: 9, scope: !8536)
!8713 = !DILocation(line: 4971, column: 14, scope: !8536)
!8714 = !DILocation(line: 4971, column: 18, scope: !8536)
!8715 = !DILocation(line: 4971, column: 26, scope: !8536)
!8716 = !DILocation(line: 4971, column: 2, scope: !8536)
!8717 = !DILocation(line: 4974, column: 15, scope: !8536)
!8718 = !DILocation(line: 4974, column: 19, scope: !8536)
!8719 = !DILocation(line: 4974, column: 27, scope: !8536)
!8720 = !DILocation(line: 4974, column: 9, scope: !8536)
!8721 = !DILocation(line: 4974, column: 7, scope: !8536)
!8722 = !DILocation(line: 4975, column: 7, scope: !8536)
!8723 = !DILocation(line: 4976, column: 9, scope: !8536)
!8724 = !DILocation(line: 4976, column: 15, scope: !8536)
!8725 = !DILocation(line: 4976, column: 19, scope: !8536)
!8726 = !DILocation(line: 4976, column: 27, scope: !8536)
!8727 = !DILocation(line: 4976, column: 2, scope: !8536)
!8728 = !DILocation(line: 4981, column: 6, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4981, column: 6)
!8730 = !DILocation(line: 4981, column: 11, scope: !8729)
!8731 = !DILocation(line: 4981, column: 6, scope: !8536)
!8732 = !DILocation(line: 4982, column: 8, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 4982, column: 7)
!8734 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 4981, column: 22)
!8735 = !DILocation(line: 4982, column: 15, scope: !8733)
!8736 = !DILocation(line: 4982, column: 26, scope: !8733)
!8737 = !DILocation(line: 4982, column: 30, scope: !8733)
!8738 = !DILocation(line: 4982, column: 37, scope: !8733)
!8739 = !DILocation(line: 4982, column: 7, scope: !8734)
!8740 = !DILocation(line: 4983, column: 4, scope: !8733)
!8741 = !DILocation(line: 4983, column: 8, scope: !8733)
!8742 = !DILocation(line: 4983, column: 21, scope: !8733)
!8743 = !DILocation(line: 4984, column: 2, scope: !8734)
!8744 = !DILocation(line: 4986, column: 2, scope: !8536)
!8745 = !DILocation(line: 4987, column: 1, scope: !8536)
!8746 = distinct !DISubprogram(name: "ips_statupd_morpheus", scope: !3, file: !3, line: 5249, type: !8747, scopeLine: 5250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8747 = !DISubroutineType(types: !8748)
!8748 = !{!186, !5540}
!8749 = !DILocalVariable(name: "ha", arg: 1, scope: !8746, file: !3, line: 5249, type: !5540)
!8750 = !DILocation(line: 5249, column: 33, scope: !8746)
!8751 = !DILocalVariable(name: "val", scope: !8746, file: !3, line: 5251, type: !186)
!8752 = !DILocation(line: 5251, column: 11, scope: !8746)
!8753 = !DILocation(line: 5255, column: 14, scope: !8746)
!8754 = !DILocation(line: 5255, column: 18, scope: !8746)
!8755 = !DILocation(line: 5255, column: 26, scope: !8746)
!8756 = !DILocation(line: 5255, column: 8, scope: !8746)
!8757 = !DILocation(line: 5255, column: 6, scope: !8746)
!8758 = !DILocation(line: 5257, column: 10, scope: !8746)
!8759 = !DILocation(line: 5257, column: 2, scope: !8746)
!8760 = distinct !DISubprogram(name: "ips_intr_morpheus", scope: !3, file: !3, line: 1329, type: !8340, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8761 = !DILocalVariable(name: "ha", arg: 1, scope: !8760, file: !3, line: 1329, type: !5540)
!8762 = !DILocation(line: 1329, column: 30, scope: !8760)
!8763 = !DILocalVariable(name: "sp", scope: !8760, file: !3, line: 1331, type: !8764)
!8764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 64)
!8765 = !DILocation(line: 1331, column: 14, scope: !8760)
!8766 = !DILocalVariable(name: "scb", scope: !8760, file: !3, line: 1332, type: !4848)
!8767 = !DILocation(line: 1332, column: 13, scope: !8760)
!8768 = !DILocalVariable(name: "cstatus", scope: !8760, file: !3, line: 1333, type: !5601)
!8769 = !DILocation(line: 1333, column: 13, scope: !8760)
!8770 = !DILocalVariable(name: "intrstatus", scope: !8760, file: !3, line: 1334, type: !182)
!8771 = !DILocation(line: 1334, column: 6, scope: !8760)
!8772 = !DILocation(line: 1338, column: 7, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 1338, column: 6)
!8774 = !DILocation(line: 1338, column: 6, scope: !8760)
!8775 = !DILocation(line: 1339, column: 3, scope: !8773)
!8776 = !DILocation(line: 1341, column: 7, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 1341, column: 6)
!8778 = !DILocation(line: 1341, column: 11, scope: !8777)
!8779 = !DILocation(line: 1341, column: 6, scope: !8760)
!8780 = !DILocation(line: 1342, column: 3, scope: !8777)
!8781 = !DILocation(line: 1344, column: 17, scope: !8760)
!8782 = !DILocation(line: 1344, column: 21, scope: !8760)
!8783 = !DILocation(line: 1344, column: 26, scope: !8760)
!8784 = !DILocation(line: 1344, column: 35, scope: !8760)
!8785 = !DILocation(line: 1344, column: 15, scope: !8760)
!8786 = !DILocation(line: 1344, column: 13, scope: !8760)
!8787 = !DILocation(line: 1346, column: 7, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 1346, column: 6)
!8789 = !DILocation(line: 1346, column: 6, scope: !8760)
!8790 = !DILocation(line: 1351, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 1346, column: 19)
!8792 = !DILocation(line: 1354, column: 2, scope: !8760)
!8793 = !DILocation(line: 1355, column: 9, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 1354, column: 15)
!8795 = !DILocation(line: 1355, column: 13, scope: !8794)
!8796 = !DILocation(line: 1355, column: 6, scope: !8794)
!8797 = !DILocation(line: 1357, column: 18, scope: !8794)
!8798 = !DILocation(line: 1357, column: 22, scope: !8794)
!8799 = !DILocation(line: 1357, column: 27, scope: !8794)
!8800 = !DILocation(line: 1357, column: 36, scope: !8794)
!8801 = !DILocation(line: 1357, column: 16, scope: !8794)
!8802 = !DILocation(line: 1357, column: 14, scope: !8794)
!8803 = !DILocation(line: 1359, column: 8, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 1359, column: 7)
!8805 = !DILocation(line: 1359, column: 7, scope: !8794)
!8806 = !DILocation(line: 1360, column: 4, scope: !8804)
!8807 = !DILocation(line: 1362, column: 22, scope: !8804)
!8808 = !DILocation(line: 1362, column: 26, scope: !8804)
!8809 = !DILocation(line: 1362, column: 31, scope: !8804)
!8810 = !DILocation(line: 1362, column: 41, scope: !8804)
!8811 = !DILocation(line: 1362, column: 20, scope: !8804)
!8812 = !DILocation(line: 1362, column: 12, scope: !8804)
!8813 = !DILocation(line: 1362, column: 18, scope: !8804)
!8814 = !DILocation(line: 1364, column: 15, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 1364, column: 7)
!8816 = !DILocation(line: 1364, column: 21, scope: !8815)
!8817 = !DILocation(line: 1364, column: 7, scope: !8794)
!8818 = !DILocation(line: 1366, column: 4, scope: !8815)
!8819 = !DILocation(line: 1368, column: 15, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 1368, column: 7)
!8821 = !DILocation(line: 1368, column: 22, scope: !8820)
!8822 = !DILocation(line: 1368, column: 7, scope: !8820)
!8823 = !DILocation(line: 1368, column: 33, scope: !8820)
!8824 = !DILocation(line: 1368, column: 7, scope: !8794)
!8825 = !DILocation(line: 1369, column: 4, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1368, column: 55)
!8827 = !DILocation(line: 1372, column: 4, scope: !8826)
!8828 = distinct !{!8828, !8792, !8829}
!8829 = !DILocation(line: 1383, column: 2, scope: !8760)
!8830 = !DILocation(line: 1375, column: 17, scope: !8794)
!8831 = !DILocation(line: 1375, column: 3, scope: !8794)
!8832 = !DILocation(line: 1376, column: 23, scope: !8794)
!8833 = !DILocation(line: 1376, column: 27, scope: !8794)
!8834 = !DILocation(line: 1376, column: 9, scope: !8794)
!8835 = !DILocation(line: 1376, column: 7, scope: !8794)
!8836 = !DILocation(line: 1382, column: 5, scope: !8794)
!8837 = !DILocation(line: 1382, column: 10, scope: !8794)
!8838 = !DILocation(line: 1382, column: 21, scope: !8794)
!8839 = !DILocation(line: 1382, column: 25, scope: !8794)
!8840 = !DILocation(line: 1382, column: 3, scope: !8794)
!8841 = !DILocation(line: 1384, column: 2, scope: !8760)
!8842 = !DILocation(line: 1385, column: 1, scope: !8760)
!8843 = distinct !DISubprogram(name: "ips_enable_int_morpheus", scope: !3, file: !3, line: 4673, type: !7788, scopeLine: 4674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8844 = !DILocalVariable(name: "ha", arg: 1, scope: !8843, file: !3, line: 4673, type: !5540)
!8845 = !DILocation(line: 4673, column: 36, scope: !8843)
!8846 = !DILocalVariable(name: "Oimr", scope: !8843, file: !3, line: 4675, type: !186)
!8847 = !DILocation(line: 4675, column: 11, scope: !8843)
!8848 = !DILocation(line: 4679, column: 15, scope: !8843)
!8849 = !DILocation(line: 4679, column: 19, scope: !8843)
!8850 = !DILocation(line: 4679, column: 27, scope: !8843)
!8851 = !DILocation(line: 4679, column: 9, scope: !8843)
!8852 = !DILocation(line: 4679, column: 7, scope: !8843)
!8853 = !DILocation(line: 4680, column: 7, scope: !8843)
!8854 = !DILocation(line: 4681, column: 9, scope: !8843)
!8855 = !DILocation(line: 4681, column: 15, scope: !8843)
!8856 = !DILocation(line: 4681, column: 19, scope: !8843)
!8857 = !DILocation(line: 4681, column: 27, scope: !8843)
!8858 = !DILocation(line: 4681, column: 2, scope: !8843)
!8859 = !DILocation(line: 4682, column: 8, scope: !8843)
!8860 = !DILocation(line: 4682, column: 12, scope: !8843)
!8861 = !DILocation(line: 4682, column: 20, scope: !8843)
!8862 = !DILocation(line: 4682, column: 2, scope: !8843)
!8863 = !DILocation(line: 4683, column: 1, scope: !8843)
!8864 = distinct !DISubprogram(name: "ips_isintr_copperhead_memio", scope: !3, file: !3, line: 5474, type: !8340, scopeLine: 5475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8865 = !DILocalVariable(name: "ha", arg: 1, scope: !8864, file: !3, line: 5474, type: !5540)
!8866 = !DILocation(line: 5474, column: 40, scope: !8864)
!8867 = !DILocalVariable(name: "Isr", scope: !8864, file: !3, line: 5476, type: !205)
!8868 = !DILocation(line: 5476, column: 10, scope: !8864)
!8869 = !DILocation(line: 5480, column: 14, scope: !8864)
!8870 = !DILocation(line: 5480, column: 18, scope: !8864)
!8871 = !DILocation(line: 5480, column: 26, scope: !8864)
!8872 = !DILocation(line: 5480, column: 8, scope: !8864)
!8873 = !DILocation(line: 5480, column: 6, scope: !8864)
!8874 = !DILocation(line: 5482, column: 6, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 5482, column: 6)
!8876 = !DILocation(line: 5482, column: 10, scope: !8875)
!8877 = !DILocation(line: 5482, column: 6, scope: !8864)
!8878 = !DILocation(line: 5484, column: 3, scope: !8875)
!8879 = !DILocation(line: 5486, column: 6, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 5486, column: 6)
!8881 = !DILocation(line: 5486, column: 10, scope: !8880)
!8882 = !DILocation(line: 5486, column: 6, scope: !8864)
!8883 = !DILocation(line: 5487, column: 3, scope: !8880)
!8884 = !DILocation(line: 5488, column: 11, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 5488, column: 11)
!8886 = !DILocation(line: 5488, column: 15, scope: !8885)
!8887 = !DILocation(line: 5488, column: 11, scope: !8880)
!8888 = !DILocation(line: 5491, column: 10, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 5488, column: 46)
!8890 = !DILocation(line: 5491, column: 15, scope: !8889)
!8891 = !DILocation(line: 5491, column: 19, scope: !8889)
!8892 = !DILocation(line: 5491, column: 27, scope: !8889)
!8893 = !DILocation(line: 5491, column: 3, scope: !8889)
!8894 = !DILocation(line: 5492, column: 2, scope: !8889)
!8895 = !DILocation(line: 5494, column: 2, scope: !8864)
!8896 = !DILocation(line: 5495, column: 1, scope: !8864)
!8897 = distinct !DISubprogram(name: "ips_isinit_copperhead_memio", scope: !3, file: !3, line: 4494, type: !8340, scopeLine: 4495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8898 = !DILocalVariable(name: "ha", arg: 1, scope: !8897, file: !3, line: 4494, type: !5540)
!8899 = !DILocation(line: 4494, column: 40, scope: !8897)
!8900 = !DILocalVariable(name: "isr", scope: !8897, file: !3, line: 4496, type: !205)
!8901 = !DILocation(line: 4496, column: 10, scope: !8897)
!8902 = !DILocalVariable(name: "scpr", scope: !8897, file: !3, line: 4497, type: !205)
!8903 = !DILocation(line: 4497, column: 10, scope: !8897)
!8904 = !DILocation(line: 4501, column: 14, scope: !8897)
!8905 = !DILocation(line: 4501, column: 18, scope: !8897)
!8906 = !DILocation(line: 4501, column: 26, scope: !8897)
!8907 = !DILocation(line: 4501, column: 8, scope: !8897)
!8908 = !DILocation(line: 4501, column: 6, scope: !8897)
!8909 = !DILocation(line: 4502, column: 15, scope: !8897)
!8910 = !DILocation(line: 4502, column: 19, scope: !8897)
!8911 = !DILocation(line: 4502, column: 27, scope: !8897)
!8912 = !DILocation(line: 4502, column: 9, scope: !8897)
!8913 = !DILocation(line: 4502, column: 7, scope: !8897)
!8914 = !DILocation(line: 4504, column: 8, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 4504, column: 6)
!8916 = !DILocation(line: 4504, column: 12, scope: !8915)
!8917 = !DILocation(line: 4504, column: 26, scope: !8915)
!8918 = !DILocation(line: 4504, column: 32, scope: !8915)
!8919 = !DILocation(line: 4504, column: 37, scope: !8915)
!8920 = !DILocation(line: 4504, column: 42, scope: !8915)
!8921 = !DILocation(line: 4504, column: 57, scope: !8915)
!8922 = !DILocation(line: 4504, column: 6, scope: !8897)
!8923 = !DILocation(line: 4505, column: 3, scope: !8915)
!8924 = !DILocation(line: 4507, column: 3, scope: !8915)
!8925 = !DILocation(line: 4508, column: 1, scope: !8897)
!8926 = distinct !DISubprogram(name: "ips_init_copperhead_memio", scope: !3, file: !3, line: 4788, type: !8340, scopeLine: 4789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!8927 = !DILocalVariable(name: "ha", arg: 1, scope: !8926, file: !3, line: 4788, type: !5540)
!8928 = !DILocation(line: 4788, column: 38, scope: !8926)
!8929 = !DILocalVariable(name: "Isr", scope: !8926, file: !3, line: 4790, type: !205)
!8930 = !DILocation(line: 4790, column: 10, scope: !8926)
!8931 = !DILocalVariable(name: "Cbsp", scope: !8926, file: !3, line: 4791, type: !205)
!8932 = !DILocation(line: 4791, column: 10, scope: !8926)
!8933 = !DILocalVariable(name: "PostByte", scope: !8926, file: !3, line: 4792, type: !8934)
!8934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 16, elements: !1278)
!8935 = !DILocation(line: 4792, column: 10, scope: !8926)
!8936 = !DILocalVariable(name: "i", scope: !8926, file: !3, line: 4793, type: !182)
!8937 = !DILocation(line: 4793, column: 6, scope: !8926)
!8938 = !DILocalVariable(name: "j", scope: !8926, file: !3, line: 4793, type: !182)
!8939 = !DILocation(line: 4793, column: 9, scope: !8926)
!8940 = !DILocation(line: 4797, column: 9, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4797, column: 2)
!8942 = !DILocation(line: 4797, column: 7, scope: !8941)
!8943 = !DILocation(line: 4797, column: 14, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 4797, column: 2)
!8945 = !DILocation(line: 4797, column: 16, scope: !8944)
!8946 = !DILocation(line: 4797, column: 2, scope: !8941)
!8947 = !DILocation(line: 4798, column: 10, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 4798, column: 3)
!8949 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 4797, column: 43)
!8950 = !DILocation(line: 4798, column: 8, scope: !8948)
!8951 = !DILocation(line: 4798, column: 15, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 4798, column: 3)
!8953 = !DILocation(line: 4798, column: 17, scope: !8952)
!8954 = !DILocation(line: 4798, column: 3, scope: !8948)
!8955 = !DILocation(line: 4799, column: 16, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 4798, column: 28)
!8957 = !DILocation(line: 4799, column: 20, scope: !8956)
!8958 = !DILocation(line: 4799, column: 28, scope: !8956)
!8959 = !DILocation(line: 4799, column: 10, scope: !8956)
!8960 = !DILocation(line: 4799, column: 8, scope: !8956)
!8961 = !DILocation(line: 4800, column: 8, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 4800, column: 8)
!8963 = !DILocation(line: 4800, column: 12, scope: !8962)
!8964 = !DILocation(line: 4800, column: 8, scope: !8956)
!8965 = !DILocation(line: 4801, column: 5, scope: !8962)
!8966 = !DILocation(line: 4804, column: 4, scope: !8956)
!8967 = !DILocalVariable(name: "__ms", scope: !8968, file: !3, line: 4804, type: !198)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 4804, column: 4)
!8969 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 4804, column: 4)
!8970 = !DILocation(line: 4804, column: 4, scope: !8968)
!8971 = !DILocation(line: 4804, column: 4, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 4804, column: 4)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 4804, column: 4)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 4804, column: 4)
!8975 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 4804, column: 4)
!8976 = distinct !{!8976, !8970, !8970}
!8977 = !DILocation(line: 4804, column: 4, scope: !8969)
!8978 = !DILocation(line: 4805, column: 3, scope: !8956)
!8979 = !DILocation(line: 4798, column: 24, scope: !8952)
!8980 = !DILocation(line: 4798, column: 3, scope: !8952)
!8981 = distinct !{!8981, !8954, !8982}
!8982 = !DILocation(line: 4805, column: 3, scope: !8948)
!8983 = !DILocation(line: 4807, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 4807, column: 7)
!8985 = !DILocation(line: 4807, column: 9, scope: !8984)
!8986 = !DILocation(line: 4807, column: 7, scope: !8949)
!8987 = !DILocation(line: 4809, column: 4, scope: !8984)
!8988 = !DILocation(line: 4811, column: 23, scope: !8949)
!8989 = !DILocation(line: 4811, column: 27, scope: !8949)
!8990 = !DILocation(line: 4811, column: 35, scope: !8949)
!8991 = !DILocation(line: 4811, column: 17, scope: !8949)
!8992 = !DILocation(line: 4811, column: 12, scope: !8949)
!8993 = !DILocation(line: 4811, column: 3, scope: !8949)
!8994 = !DILocation(line: 4811, column: 15, scope: !8949)
!8995 = !DILocation(line: 4812, column: 10, scope: !8949)
!8996 = !DILocation(line: 4812, column: 15, scope: !8949)
!8997 = !DILocation(line: 4812, column: 19, scope: !8949)
!8998 = !DILocation(line: 4812, column: 27, scope: !8949)
!8999 = !DILocation(line: 4812, column: 3, scope: !8949)
!9000 = !DILocation(line: 4813, column: 2, scope: !8949)
!9001 = !DILocation(line: 4797, column: 39, scope: !8944)
!9002 = !DILocation(line: 4797, column: 2, scope: !8944)
!9003 = distinct !{!9003, !8946, !9004}
!9004 = !DILocation(line: 4813, column: 2, scope: !8941)
!9005 = !DILocation(line: 4815, column: 6, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4815, column: 6)
!9007 = !DILocation(line: 4815, column: 18, scope: !9006)
!9008 = !DILocation(line: 4815, column: 6, scope: !8926)
!9009 = !DILocation(line: 4816, column: 3, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 4815, column: 42)
!9011 = !DILocation(line: 4820, column: 3, scope: !9010)
!9012 = !DILocation(line: 4823, column: 9, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4823, column: 2)
!9014 = !DILocation(line: 4823, column: 7, scope: !9013)
!9015 = !DILocation(line: 4823, column: 14, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 4823, column: 2)
!9017 = !DILocation(line: 4823, column: 16, scope: !9016)
!9018 = !DILocation(line: 4823, column: 2, scope: !9013)
!9019 = !DILocation(line: 4824, column: 10, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 4824, column: 3)
!9021 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 4823, column: 45)
!9022 = !DILocation(line: 4824, column: 8, scope: !9020)
!9023 = !DILocation(line: 4824, column: 15, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 4824, column: 3)
!9025 = !DILocation(line: 4824, column: 17, scope: !9024)
!9026 = !DILocation(line: 4824, column: 3, scope: !9020)
!9027 = !DILocation(line: 4825, column: 16, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 4824, column: 29)
!9029 = !DILocation(line: 4825, column: 20, scope: !9028)
!9030 = !DILocation(line: 4825, column: 28, scope: !9028)
!9031 = !DILocation(line: 4825, column: 10, scope: !9028)
!9032 = !DILocation(line: 4825, column: 8, scope: !9028)
!9033 = !DILocation(line: 4826, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 4826, column: 8)
!9035 = !DILocation(line: 4826, column: 12, scope: !9034)
!9036 = !DILocation(line: 4826, column: 8, scope: !9028)
!9037 = !DILocation(line: 4827, column: 5, scope: !9034)
!9038 = !DILocation(line: 4830, column: 4, scope: !9028)
!9039 = !DILocalVariable(name: "__ms", scope: !9040, file: !3, line: 4830, type: !198)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 4830, column: 4)
!9041 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 4830, column: 4)
!9042 = !DILocation(line: 4830, column: 4, scope: !9040)
!9043 = !DILocation(line: 4830, column: 4, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 4830, column: 4)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 4830, column: 4)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 4830, column: 4)
!9047 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 4830, column: 4)
!9048 = distinct !{!9048, !9042, !9042}
!9049 = !DILocation(line: 4830, column: 4, scope: !9041)
!9050 = !DILocation(line: 4831, column: 3, scope: !9028)
!9051 = !DILocation(line: 4824, column: 25, scope: !9024)
!9052 = !DILocation(line: 4824, column: 3, scope: !9024)
!9053 = distinct !{!9053, !9026, !9054}
!9054 = !DILocation(line: 4831, column: 3, scope: !9020)
!9055 = !DILocation(line: 4833, column: 7, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 4833, column: 7)
!9057 = !DILocation(line: 4833, column: 9, scope: !9056)
!9058 = !DILocation(line: 4833, column: 7, scope: !9021)
!9059 = !DILocation(line: 4835, column: 4, scope: !9056)
!9060 = !DILocation(line: 4837, column: 9, scope: !9021)
!9061 = !DILocation(line: 4837, column: 13, scope: !9021)
!9062 = !DILocation(line: 4837, column: 21, scope: !9021)
!9063 = !DILocation(line: 4837, column: 3, scope: !9021)
!9064 = !DILocation(line: 4838, column: 10, scope: !9021)
!9065 = !DILocation(line: 4838, column: 15, scope: !9021)
!9066 = !DILocation(line: 4838, column: 19, scope: !9021)
!9067 = !DILocation(line: 4838, column: 27, scope: !9021)
!9068 = !DILocation(line: 4838, column: 3, scope: !9021)
!9069 = !DILocation(line: 4839, column: 2, scope: !9021)
!9070 = !DILocation(line: 4823, column: 41, scope: !9016)
!9071 = !DILocation(line: 4823, column: 2, scope: !9016)
!9072 = distinct !{!9072, !9018, !9073}
!9073 = !DILocation(line: 4839, column: 2, scope: !9013)
!9074 = !DILocation(line: 4841, column: 9, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4841, column: 2)
!9076 = !DILocation(line: 4841, column: 7, scope: !9075)
!9077 = !DILocation(line: 4841, column: 14, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4841, column: 2)
!9079 = !DILocation(line: 4841, column: 16, scope: !9078)
!9080 = !DILocation(line: 4841, column: 2, scope: !9075)
!9081 = !DILocation(line: 4842, column: 16, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 4841, column: 28)
!9083 = !DILocation(line: 4842, column: 20, scope: !9082)
!9084 = !DILocation(line: 4842, column: 28, scope: !9082)
!9085 = !DILocation(line: 4842, column: 10, scope: !9082)
!9086 = !DILocation(line: 4842, column: 8, scope: !9082)
!9087 = !DILocation(line: 4844, column: 8, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 4844, column: 7)
!9089 = !DILocation(line: 4844, column: 13, scope: !9088)
!9090 = !DILocation(line: 4844, column: 27, scope: !9088)
!9091 = !DILocation(line: 4844, column: 7, scope: !9082)
!9092 = !DILocation(line: 4845, column: 4, scope: !9088)
!9093 = !DILocation(line: 4848, column: 3, scope: !9082)
!9094 = !DILocalVariable(name: "__ms", scope: !9095, file: !3, line: 4848, type: !198)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 4848, column: 3)
!9096 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 4848, column: 3)
!9097 = !DILocation(line: 4848, column: 3, scope: !9095)
!9098 = !DILocation(line: 4848, column: 3, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 4848, column: 3)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 4848, column: 3)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 4848, column: 3)
!9102 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 4848, column: 3)
!9103 = distinct !{!9103, !9097, !9097}
!9104 = !DILocation(line: 4848, column: 3, scope: !9096)
!9105 = !DILocation(line: 4849, column: 2, scope: !9082)
!9106 = !DILocation(line: 4841, column: 24, scope: !9078)
!9107 = !DILocation(line: 4841, column: 2, scope: !9078)
!9108 = distinct !{!9108, !9080, !9109}
!9109 = !DILocation(line: 4849, column: 2, scope: !9075)
!9110 = !DILocation(line: 4851, column: 6, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4851, column: 6)
!9112 = !DILocation(line: 4851, column: 8, scope: !9111)
!9113 = !DILocation(line: 4851, column: 6, scope: !8926)
!9114 = !DILocation(line: 4853, column: 3, scope: !9111)
!9115 = !DILocation(line: 4856, column: 17, scope: !8926)
!9116 = !DILocation(line: 4856, column: 21, scope: !8926)
!9117 = !DILocation(line: 4856, column: 29, scope: !8926)
!9118 = !DILocation(line: 4856, column: 2, scope: !8926)
!9119 = !DILocation(line: 4859, column: 22, scope: !8926)
!9120 = !DILocation(line: 4859, column: 26, scope: !8926)
!9121 = !DILocation(line: 4859, column: 34, scope: !8926)
!9122 = !DILocation(line: 4859, column: 2, scope: !8926)
!9123 = !DILocation(line: 4861, column: 6, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4861, column: 6)
!9125 = !DILocation(line: 4861, column: 10, scope: !9124)
!9126 = !DILocation(line: 4861, column: 18, scope: !9124)
!9127 = !DILocation(line: 4861, column: 27, scope: !9124)
!9128 = !DILocation(line: 4861, column: 6, scope: !8926)
!9129 = !DILocation(line: 4863, column: 13, scope: !9124)
!9130 = !DILocation(line: 4863, column: 17, scope: !9124)
!9131 = !DILocation(line: 4863, column: 25, scope: !9124)
!9132 = !DILocation(line: 4863, column: 3, scope: !9124)
!9133 = !DILocation(line: 4866, column: 21, scope: !8926)
!9134 = !DILocation(line: 4866, column: 25, scope: !8926)
!9135 = !DILocation(line: 4866, column: 33, scope: !8926)
!9136 = !DILocation(line: 4866, column: 2, scope: !8926)
!9137 = !DILocation(line: 4869, column: 2, scope: !8926)
!9138 = !DILocation(line: 4870, column: 1, scope: !8926)
!9139 = distinct !DISubprogram(name: "ips_statupd_copperhead_memio", scope: !3, file: !3, line: 5222, type: !8747, scopeLine: 5223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9140 = !DILocalVariable(name: "ha", arg: 1, scope: !9139, file: !3, line: 5222, type: !5540)
!9141 = !DILocation(line: 5222, column: 41, scope: !9139)
!9142 = !DILocation(line: 5226, column: 6, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 5226, column: 6)
!9144 = !DILocation(line: 5226, column: 10, scope: !9143)
!9145 = !DILocation(line: 5226, column: 17, scope: !9143)
!9146 = !DILocation(line: 5226, column: 34, scope: !9143)
!9147 = !DILocation(line: 5226, column: 38, scope: !9143)
!9148 = !DILocation(line: 5226, column: 45, scope: !9143)
!9149 = !DILocation(line: 5226, column: 31, scope: !9143)
!9150 = !DILocation(line: 5226, column: 6, scope: !9139)
!9151 = !DILocation(line: 5227, column: 3, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 5226, column: 59)
!9153 = !DILocation(line: 5227, column: 7, scope: !9152)
!9154 = !DILocation(line: 5227, column: 14, scope: !9152)
!9155 = !DILocation(line: 5227, column: 27, scope: !9152)
!9156 = !DILocation(line: 5228, column: 3, scope: !9152)
!9157 = !DILocation(line: 5228, column: 7, scope: !9152)
!9158 = !DILocation(line: 5228, column: 14, scope: !9152)
!9159 = !DILocation(line: 5228, column: 29, scope: !9152)
!9160 = !DILocation(line: 5229, column: 2, scope: !9152)
!9161 = !DILocation(line: 5230, column: 30, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 5229, column: 9)
!9163 = !DILocation(line: 5230, column: 34, scope: !9162)
!9164 = !DILocation(line: 5230, column: 41, scope: !9162)
!9165 = !DILocation(line: 5230, column: 3, scope: !9162)
!9166 = !DILocation(line: 5230, column: 7, scope: !9162)
!9167 = !DILocation(line: 5230, column: 14, scope: !9162)
!9168 = !DILocation(line: 5230, column: 28, scope: !9162)
!9169 = !DILocation(line: 5231, column: 31, scope: !9162)
!9170 = !DILocation(line: 5231, column: 35, scope: !9162)
!9171 = !DILocation(line: 5231, column: 42, scope: !9162)
!9172 = !DILocation(line: 5231, column: 3, scope: !9162)
!9173 = !DILocation(line: 5231, column: 7, scope: !9162)
!9174 = !DILocation(line: 5231, column: 14, scope: !9162)
!9175 = !DILocation(line: 5231, column: 29, scope: !9162)
!9176 = !DILocation(line: 5234, column: 9, scope: !9139)
!9177 = !DILocation(line: 5234, column: 13, scope: !9139)
!9178 = !DILocation(line: 5234, column: 20, scope: !9139)
!9179 = !DILocation(line: 5234, column: 36, scope: !9139)
!9180 = !DILocation(line: 5234, column: 40, scope: !9139)
!9181 = !DILocation(line: 5234, column: 48, scope: !9139)
!9182 = !DILocation(line: 5234, column: 2, scope: !9139)
!9183 = !DILocation(line: 5236, column: 10, scope: !9139)
!9184 = !DILocation(line: 5236, column: 14, scope: !9139)
!9185 = !DILocation(line: 5236, column: 21, scope: !9139)
!9186 = !DILocation(line: 5236, column: 36, scope: !9139)
!9187 = !DILocation(line: 5236, column: 2, scope: !9139)
!9188 = distinct !DISubprogram(name: "ips_statinit_memio", scope: !3, file: !3, line: 5164, type: !7788, scopeLine: 5165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9189 = !DILocalVariable(name: "ha", arg: 1, scope: !9188, file: !3, line: 5164, type: !5540)
!9190 = !DILocation(line: 5164, column: 31, scope: !9188)
!9191 = !DILocalVariable(name: "phys_status_start", scope: !9188, file: !3, line: 5166, type: !186)
!9192 = !DILocation(line: 5166, column: 11, scope: !9188)
!9193 = !DILocation(line: 5170, column: 30, scope: !9188)
!9194 = !DILocation(line: 5170, column: 34, scope: !9188)
!9195 = !DILocation(line: 5170, column: 41, scope: !9188)
!9196 = !DILocation(line: 5170, column: 2, scope: !9188)
!9197 = !DILocation(line: 5170, column: 6, scope: !9188)
!9198 = !DILocation(line: 5170, column: 13, scope: !9188)
!9199 = !DILocation(line: 5170, column: 28, scope: !9188)
!9200 = !DILocation(line: 5171, column: 28, scope: !9188)
!9201 = !DILocation(line: 5171, column: 32, scope: !9188)
!9202 = !DILocation(line: 5171, column: 39, scope: !9188)
!9203 = !DILocation(line: 5171, column: 46, scope: !9188)
!9204 = !DILocation(line: 5171, column: 2, scope: !9188)
!9205 = !DILocation(line: 5171, column: 6, scope: !9188)
!9206 = !DILocation(line: 5171, column: 13, scope: !9188)
!9207 = !DILocation(line: 5171, column: 26, scope: !9188)
!9208 = !DILocation(line: 5172, column: 29, scope: !9188)
!9209 = !DILocation(line: 5172, column: 33, scope: !9188)
!9210 = !DILocation(line: 5172, column: 40, scope: !9188)
!9211 = !DILocation(line: 5172, column: 2, scope: !9188)
!9212 = !DILocation(line: 5172, column: 6, scope: !9188)
!9213 = !DILocation(line: 5172, column: 13, scope: !9188)
!9214 = !DILocation(line: 5172, column: 27, scope: !9188)
!9215 = !DILocation(line: 5174, column: 22, scope: !9188)
!9216 = !DILocation(line: 5174, column: 26, scope: !9188)
!9217 = !DILocation(line: 5174, column: 33, scope: !9188)
!9218 = !DILocation(line: 5174, column: 20, scope: !9188)
!9219 = !DILocation(line: 5175, column: 9, scope: !9188)
!9220 = !DILocation(line: 5175, column: 28, scope: !9188)
!9221 = !DILocation(line: 5175, column: 32, scope: !9188)
!9222 = !DILocation(line: 5175, column: 40, scope: !9188)
!9223 = !DILocation(line: 5175, column: 2, scope: !9188)
!9224 = !DILocation(line: 5176, column: 9, scope: !9188)
!9225 = !DILocation(line: 5176, column: 27, scope: !9188)
!9226 = !DILocation(line: 5177, column: 9, scope: !9188)
!9227 = !DILocation(line: 5177, column: 13, scope: !9188)
!9228 = !DILocation(line: 5177, column: 21, scope: !9188)
!9229 = !DILocation(line: 5176, column: 2, scope: !9188)
!9230 = !DILocation(line: 5178, column: 9, scope: !9188)
!9231 = !DILocation(line: 5178, column: 27, scope: !9188)
!9232 = !DILocation(line: 5178, column: 46, scope: !9188)
!9233 = !DILocation(line: 5178, column: 50, scope: !9188)
!9234 = !DILocation(line: 5178, column: 58, scope: !9188)
!9235 = !DILocation(line: 5178, column: 2, scope: !9188)
!9236 = !DILocation(line: 5179, column: 9, scope: !9188)
!9237 = !DILocation(line: 5179, column: 28, scope: !9188)
!9238 = !DILocation(line: 5179, column: 32, scope: !9188)
!9239 = !DILocation(line: 5179, column: 40, scope: !9188)
!9240 = !DILocation(line: 5179, column: 2, scope: !9188)
!9241 = !DILocation(line: 5181, column: 30, scope: !9188)
!9242 = !DILocation(line: 5181, column: 2, scope: !9188)
!9243 = !DILocation(line: 5181, column: 6, scope: !9188)
!9244 = !DILocation(line: 5181, column: 13, scope: !9188)
!9245 = !DILocation(line: 5181, column: 28, scope: !9188)
!9246 = !DILocation(line: 5182, column: 1, scope: !9188)
!9247 = distinct !DISubprogram(name: "ips_reset_copperhead_memio", scope: !3, file: !3, line: 5044, type: !8340, scopeLine: 5045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9248 = !DILocalVariable(name: "ha", arg: 1, scope: !9247, file: !3, line: 5044, type: !5540)
!9249 = !DILocation(line: 5044, column: 39, scope: !9247)
!9250 = !DILocalVariable(name: "reset_counter", scope: !9247, file: !3, line: 5046, type: !182)
!9251 = !DILocation(line: 5046, column: 6, scope: !9247)
!9252 = !DILocation(line: 5053, column: 16, scope: !9247)
!9253 = !DILocation(line: 5055, column: 2, scope: !9247)
!9254 = !DILocation(line: 5055, column: 9, scope: !9247)
!9255 = !DILocation(line: 5055, column: 23, scope: !9247)
!9256 = !DILocation(line: 5056, column: 16, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 5055, column: 28)
!9258 = !DILocation(line: 5058, column: 23, scope: !9257)
!9259 = !DILocation(line: 5058, column: 27, scope: !9257)
!9260 = !DILocation(line: 5058, column: 35, scope: !9257)
!9261 = !DILocation(line: 5058, column: 3, scope: !9257)
!9262 = !DILocation(line: 5061, column: 3, scope: !9257)
!9263 = !DILocalVariable(name: "__ms", scope: !9264, file: !3, line: 5061, type: !198)
!9264 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 5061, column: 3)
!9265 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 5061, column: 3)
!9266 = !DILocation(line: 5061, column: 3, scope: !9264)
!9267 = !DILocation(line: 5061, column: 3, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 5061, column: 3)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 5061, column: 3)
!9270 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 5061, column: 3)
!9271 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 5061, column: 3)
!9272 = distinct !{!9272, !9266, !9266}
!9273 = !DILocation(line: 5061, column: 3, scope: !9265)
!9274 = !DILocation(line: 5063, column: 13, scope: !9257)
!9275 = !DILocation(line: 5063, column: 17, scope: !9257)
!9276 = !DILocation(line: 5063, column: 25, scope: !9257)
!9277 = !DILocation(line: 5063, column: 3, scope: !9257)
!9278 = !DILocation(line: 5066, column: 3, scope: !9257)
!9279 = !DILocalVariable(name: "__ms", scope: !9280, file: !3, line: 5066, type: !198)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 5066, column: 3)
!9281 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 5066, column: 3)
!9282 = !DILocation(line: 5066, column: 3, scope: !9280)
!9283 = !DILocation(line: 5066, column: 3, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 5066, column: 3)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 5066, column: 3)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 5066, column: 3)
!9287 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 5066, column: 3)
!9288 = distinct !{!9288, !9282, !9282}
!9289 = !DILocation(line: 5066, column: 3, scope: !9281)
!9290 = !DILocation(line: 5068, column: 9, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 5068, column: 7)
!9292 = !DILocation(line: 5068, column: 13, scope: !9291)
!9293 = !DILocation(line: 5068, column: 18, scope: !9291)
!9294 = !DILocation(line: 5068, column: 25, scope: !9291)
!9295 = !DILocation(line: 5068, column: 7, scope: !9291)
!9296 = !DILocation(line: 5068, column: 7, scope: !9257)
!9297 = !DILocation(line: 5069, column: 4, scope: !9291)
!9298 = !DILocation(line: 5070, column: 12, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 5070, column: 12)
!9300 = !DILocation(line: 5070, column: 26, scope: !9299)
!9301 = !DILocation(line: 5070, column: 12, scope: !9291)
!9302 = !DILocation(line: 5072, column: 4, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 5070, column: 32)
!9304 = distinct !{!9304, !9253, !9305}
!9305 = !DILocation(line: 5074, column: 2, scope: !9247)
!9306 = !DILocation(line: 5076, column: 2, scope: !9247)
!9307 = !DILocation(line: 5077, column: 1, scope: !9247)
!9308 = distinct !DISubprogram(name: "ips_intr_copperhead", scope: !3, file: !3, line: 1265, type: !8340, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9309 = !DILocalVariable(name: "ha", arg: 1, scope: !9308, file: !3, line: 1265, type: !5540)
!9310 = !DILocation(line: 1265, column: 32, scope: !9308)
!9311 = !DILocalVariable(name: "sp", scope: !9308, file: !3, line: 1267, type: !8764)
!9312 = !DILocation(line: 1267, column: 14, scope: !9308)
!9313 = !DILocalVariable(name: "scb", scope: !9308, file: !3, line: 1268, type: !4848)
!9314 = !DILocation(line: 1268, column: 13, scope: !9308)
!9315 = !DILocalVariable(name: "cstatus", scope: !9308, file: !3, line: 1269, type: !5601)
!9316 = !DILocation(line: 1269, column: 13, scope: !9308)
!9317 = !DILocalVariable(name: "intrstatus", scope: !9308, file: !3, line: 1270, type: !182)
!9318 = !DILocation(line: 1270, column: 6, scope: !9308)
!9319 = !DILocation(line: 1274, column: 7, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 1274, column: 6)
!9321 = !DILocation(line: 1274, column: 6, scope: !9308)
!9322 = !DILocation(line: 1275, column: 3, scope: !9320)
!9323 = !DILocation(line: 1277, column: 7, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 1277, column: 6)
!9325 = !DILocation(line: 1277, column: 11, scope: !9324)
!9326 = !DILocation(line: 1277, column: 6, scope: !9308)
!9327 = !DILocation(line: 1278, column: 3, scope: !9324)
!9328 = !DILocation(line: 1280, column: 17, scope: !9308)
!9329 = !DILocation(line: 1280, column: 21, scope: !9308)
!9330 = !DILocation(line: 1280, column: 26, scope: !9308)
!9331 = !DILocation(line: 1280, column: 35, scope: !9308)
!9332 = !DILocation(line: 1280, column: 15, scope: !9308)
!9333 = !DILocation(line: 1280, column: 13, scope: !9308)
!9334 = !DILocation(line: 1282, column: 7, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 1282, column: 6)
!9336 = !DILocation(line: 1282, column: 6, scope: !9308)
!9337 = !DILocation(line: 1287, column: 3, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 1282, column: 19)
!9339 = !DILocation(line: 1290, column: 2, scope: !9308)
!9340 = !DILocation(line: 1291, column: 9, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 1290, column: 15)
!9342 = !DILocation(line: 1291, column: 13, scope: !9341)
!9343 = !DILocation(line: 1291, column: 6, scope: !9341)
!9344 = !DILocation(line: 1293, column: 18, scope: !9341)
!9345 = !DILocation(line: 1293, column: 22, scope: !9341)
!9346 = !DILocation(line: 1293, column: 27, scope: !9341)
!9347 = !DILocation(line: 1293, column: 36, scope: !9341)
!9348 = !DILocation(line: 1293, column: 16, scope: !9341)
!9349 = !DILocation(line: 1293, column: 14, scope: !9341)
!9350 = !DILocation(line: 1295, column: 8, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 1295, column: 7)
!9352 = !DILocation(line: 1295, column: 7, scope: !9341)
!9353 = !DILocation(line: 1296, column: 4, scope: !9351)
!9354 = !DILocation(line: 1298, column: 22, scope: !9351)
!9355 = !DILocation(line: 1298, column: 26, scope: !9351)
!9356 = !DILocation(line: 1298, column: 31, scope: !9351)
!9357 = !DILocation(line: 1298, column: 41, scope: !9351)
!9358 = !DILocation(line: 1298, column: 20, scope: !9351)
!9359 = !DILocation(line: 1298, column: 12, scope: !9351)
!9360 = !DILocation(line: 1298, column: 18, scope: !9351)
!9361 = !DILocation(line: 1300, column: 15, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 1300, column: 7)
!9363 = !DILocation(line: 1300, column: 22, scope: !9362)
!9364 = !DILocation(line: 1300, column: 7, scope: !9362)
!9365 = !DILocation(line: 1300, column: 33, scope: !9362)
!9366 = !DILocation(line: 1300, column: 7, scope: !9341)
!9367 = !DILocation(line: 1302, column: 4, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1300, column: 55)
!9369 = distinct !{!9369, !9339, !9370}
!9370 = !DILocation(line: 1313, column: 2, scope: !9308)
!9371 = !DILocation(line: 1305, column: 17, scope: !9341)
!9372 = !DILocation(line: 1305, column: 3, scope: !9341)
!9373 = !DILocation(line: 1306, column: 23, scope: !9341)
!9374 = !DILocation(line: 1306, column: 27, scope: !9341)
!9375 = !DILocation(line: 1306, column: 9, scope: !9341)
!9376 = !DILocation(line: 1306, column: 7, scope: !9341)
!9377 = !DILocation(line: 1312, column: 5, scope: !9341)
!9378 = !DILocation(line: 1312, column: 10, scope: !9341)
!9379 = !DILocation(line: 1312, column: 21, scope: !9341)
!9380 = !DILocation(line: 1312, column: 25, scope: !9341)
!9381 = !DILocation(line: 1312, column: 3, scope: !9341)
!9382 = !DILocation(line: 1314, column: 2, scope: !9308)
!9383 = !DILocation(line: 1315, column: 1, scope: !9308)
!9384 = distinct !DISubprogram(name: "ips_erase_bios_memio", scope: !3, file: !3, line: 6123, type: !8340, scopeLine: 6124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9385 = !DILocalVariable(name: "ha", arg: 1, scope: !9384, file: !3, line: 6123, type: !5540)
!9386 = !DILocation(line: 6123, column: 33, scope: !9384)
!9387 = !DILocalVariable(name: "timeout", scope: !9384, file: !3, line: 6125, type: !182)
!9388 = !DILocation(line: 6125, column: 6, scope: !9384)
!9389 = !DILocalVariable(name: "status", scope: !9384, file: !3, line: 6126, type: !205)
!9390 = !DILocation(line: 6126, column: 10, scope: !9384)
!9391 = !DILocation(line: 6130, column: 9, scope: !9384)
!9392 = !DILocation(line: 6133, column: 12, scope: !9384)
!9393 = !DILocation(line: 6133, column: 16, scope: !9384)
!9394 = !DILocation(line: 6133, column: 24, scope: !9384)
!9395 = !DILocation(line: 6133, column: 2, scope: !9384)
!9396 = !DILocation(line: 6134, column: 6, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6134, column: 6)
!9398 = !DILocation(line: 6134, column: 10, scope: !9397)
!9399 = !DILocation(line: 6134, column: 18, scope: !9397)
!9400 = !DILocation(line: 6134, column: 27, scope: !9397)
!9401 = !DILocation(line: 6134, column: 6, scope: !9384)
!9402 = !DILocation(line: 6135, column: 3, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 6135, column: 3)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 6135, column: 3)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 6135, column: 3)
!9406 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 6135, column: 3)
!9407 = !DILocation(line: 6135, column: 3, scope: !9397)
!9408 = !DILocation(line: 6137, column: 15, scope: !9384)
!9409 = !DILocation(line: 6137, column: 19, scope: !9384)
!9410 = !DILocation(line: 6137, column: 27, scope: !9384)
!9411 = !DILocation(line: 6137, column: 2, scope: !9384)
!9412 = !DILocation(line: 6138, column: 6, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6138, column: 6)
!9414 = !DILocation(line: 6138, column: 10, scope: !9413)
!9415 = !DILocation(line: 6138, column: 18, scope: !9413)
!9416 = !DILocation(line: 6138, column: 27, scope: !9413)
!9417 = !DILocation(line: 6138, column: 6, scope: !9384)
!9418 = !DILocation(line: 6139, column: 3, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 6139, column: 3)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 6139, column: 3)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 6139, column: 3)
!9422 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 6139, column: 3)
!9423 = !DILocation(line: 6139, column: 3, scope: !9413)
!9424 = !DILocation(line: 6142, column: 15, scope: !9384)
!9425 = !DILocation(line: 6142, column: 19, scope: !9384)
!9426 = !DILocation(line: 6142, column: 27, scope: !9384)
!9427 = !DILocation(line: 6142, column: 2, scope: !9384)
!9428 = !DILocation(line: 6143, column: 6, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6143, column: 6)
!9430 = !DILocation(line: 6143, column: 10, scope: !9429)
!9431 = !DILocation(line: 6143, column: 18, scope: !9429)
!9432 = !DILocation(line: 6143, column: 27, scope: !9429)
!9433 = !DILocation(line: 6143, column: 6, scope: !9384)
!9434 = !DILocation(line: 6144, column: 3, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 6144, column: 3)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 6144, column: 3)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 6144, column: 3)
!9438 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 6144, column: 3)
!9439 = !DILocation(line: 6144, column: 3, scope: !9429)
!9440 = !DILocation(line: 6147, column: 15, scope: !9384)
!9441 = !DILocation(line: 6147, column: 19, scope: !9384)
!9442 = !DILocation(line: 6147, column: 27, scope: !9384)
!9443 = !DILocation(line: 6147, column: 2, scope: !9384)
!9444 = !DILocation(line: 6148, column: 6, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6148, column: 6)
!9446 = !DILocation(line: 6148, column: 10, scope: !9445)
!9447 = !DILocation(line: 6148, column: 18, scope: !9445)
!9448 = !DILocation(line: 6148, column: 27, scope: !9445)
!9449 = !DILocation(line: 6148, column: 6, scope: !9384)
!9450 = !DILocation(line: 6149, column: 3, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 6149, column: 3)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 6149, column: 3)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 6149, column: 3)
!9454 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 6149, column: 3)
!9455 = !DILocation(line: 6149, column: 3, scope: !9445)
!9456 = !DILocation(line: 6152, column: 15, scope: !9384)
!9457 = !DILocation(line: 6152, column: 19, scope: !9384)
!9458 = !DILocation(line: 6152, column: 27, scope: !9384)
!9459 = !DILocation(line: 6152, column: 2, scope: !9384)
!9460 = !DILocation(line: 6153, column: 6, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6153, column: 6)
!9462 = !DILocation(line: 6153, column: 10, scope: !9461)
!9463 = !DILocation(line: 6153, column: 18, scope: !9461)
!9464 = !DILocation(line: 6153, column: 27, scope: !9461)
!9465 = !DILocation(line: 6153, column: 6, scope: !9384)
!9466 = !DILocation(line: 6154, column: 3, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 6154, column: 3)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 6154, column: 3)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 6154, column: 3)
!9470 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 6154, column: 3)
!9471 = !DILocation(line: 6154, column: 3, scope: !9461)
!9472 = !DILocation(line: 6156, column: 10, scope: !9384)
!9473 = !DILocation(line: 6158, column: 2, scope: !9384)
!9474 = !DILocation(line: 6158, column: 9, scope: !9384)
!9475 = !DILocation(line: 6158, column: 17, scope: !9384)
!9476 = !DILocation(line: 6159, column: 7, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 6159, column: 7)
!9478 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6158, column: 22)
!9479 = !DILocation(line: 6159, column: 11, scope: !9477)
!9480 = !DILocation(line: 6159, column: 19, scope: !9477)
!9481 = !DILocation(line: 6159, column: 28, scope: !9477)
!9482 = !DILocation(line: 6159, column: 7, scope: !9478)
!9483 = !DILocation(line: 6160, column: 14, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 6159, column: 53)
!9485 = !DILocation(line: 6160, column: 18, scope: !9484)
!9486 = !DILocation(line: 6160, column: 26, scope: !9484)
!9487 = !DILocation(line: 6160, column: 4, scope: !9484)
!9488 = !DILocation(line: 6161, column: 4, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 6161, column: 4)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 6161, column: 4)
!9491 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 6161, column: 4)
!9492 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 6161, column: 4)
!9493 = !DILocation(line: 6162, column: 3, scope: !9484)
!9494 = !DILocation(line: 6164, column: 18, scope: !9478)
!9495 = !DILocation(line: 6164, column: 22, scope: !9478)
!9496 = !DILocation(line: 6164, column: 30, scope: !9478)
!9497 = !DILocation(line: 6164, column: 12, scope: !9478)
!9498 = !DILocation(line: 6164, column: 10, scope: !9478)
!9499 = !DILocation(line: 6166, column: 7, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 6166, column: 7)
!9501 = !DILocation(line: 6166, column: 14, scope: !9500)
!9502 = !DILocation(line: 6166, column: 7, scope: !9478)
!9503 = !DILocation(line: 6167, column: 4, scope: !9500)
!9504 = !DILocation(line: 6169, column: 3, scope: !9478)
!9505 = !DILocation(line: 6169, column: 3, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 6169, column: 3)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 6169, column: 3)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 6169, column: 3)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 6169, column: 3)
!9510 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 6169, column: 3)
!9511 = !DILocation(line: 6169, column: 3, scope: !9510)
!9512 = !DILocation(line: 6170, column: 10, scope: !9478)
!9513 = distinct !{!9513, !9473, !9514}
!9514 = !DILocation(line: 6171, column: 2, scope: !9384)
!9515 = !DILocation(line: 6174, column: 6, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6174, column: 6)
!9517 = !DILocation(line: 6174, column: 14, scope: !9516)
!9518 = !DILocation(line: 6174, column: 6, scope: !9384)
!9519 = !DILocation(line: 6178, column: 16, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 6174, column: 20)
!9521 = !DILocation(line: 6178, column: 20, scope: !9520)
!9522 = !DILocation(line: 6178, column: 28, scope: !9520)
!9523 = !DILocation(line: 6178, column: 3, scope: !9520)
!9524 = !DILocation(line: 6179, column: 7, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 6179, column: 7)
!9526 = !DILocation(line: 6179, column: 11, scope: !9525)
!9527 = !DILocation(line: 6179, column: 19, scope: !9525)
!9528 = !DILocation(line: 6179, column: 28, scope: !9525)
!9529 = !DILocation(line: 6179, column: 7, scope: !9520)
!9530 = !DILocation(line: 6180, column: 4, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 6180, column: 4)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 6180, column: 4)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 6180, column: 4)
!9534 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 6180, column: 4)
!9535 = !DILocation(line: 6180, column: 4, scope: !9525)
!9536 = !DILocation(line: 6183, column: 11, scope: !9520)
!9537 = !DILocation(line: 6184, column: 3, scope: !9520)
!9538 = !DILocation(line: 6184, column: 10, scope: !9520)
!9539 = !DILocation(line: 6184, column: 18, scope: !9520)
!9540 = !DILocation(line: 6185, column: 8, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 6185, column: 8)
!9542 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 6184, column: 23)
!9543 = !DILocation(line: 6185, column: 12, scope: !9541)
!9544 = !DILocation(line: 6185, column: 20, scope: !9541)
!9545 = !DILocation(line: 6185, column: 29, scope: !9541)
!9546 = !DILocation(line: 6185, column: 8, scope: !9542)
!9547 = !DILocation(line: 6186, column: 15, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 6185, column: 54)
!9549 = !DILocation(line: 6186, column: 19, scope: !9548)
!9550 = !DILocation(line: 6186, column: 27, scope: !9548)
!9551 = !DILocation(line: 6186, column: 5, scope: !9548)
!9552 = !DILocation(line: 6187, column: 5, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 6187, column: 5)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 6187, column: 5)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 6187, column: 5)
!9556 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 6187, column: 5)
!9557 = !DILocation(line: 6188, column: 4, scope: !9548)
!9558 = !DILocation(line: 6190, column: 19, scope: !9542)
!9559 = !DILocation(line: 6190, column: 23, scope: !9542)
!9560 = !DILocation(line: 6190, column: 31, scope: !9542)
!9561 = !DILocation(line: 6190, column: 13, scope: !9542)
!9562 = !DILocation(line: 6190, column: 11, scope: !9542)
!9563 = !DILocation(line: 6192, column: 8, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 6192, column: 8)
!9565 = !DILocation(line: 6192, column: 15, scope: !9564)
!9566 = !DILocation(line: 6192, column: 8, scope: !9542)
!9567 = !DILocation(line: 6193, column: 5, scope: !9564)
!9568 = !DILocation(line: 6195, column: 4, scope: !9542)
!9569 = !DILocation(line: 6195, column: 4, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 6195, column: 4)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 6195, column: 4)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 6195, column: 4)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 6195, column: 4)
!9574 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 6195, column: 4)
!9575 = !DILocation(line: 6195, column: 4, scope: !9574)
!9576 = !DILocation(line: 6196, column: 11, scope: !9542)
!9577 = distinct !{!9577, !9537, !9578}
!9578 = !DILocation(line: 6197, column: 3, scope: !9520)
!9579 = !DILocation(line: 6199, column: 3, scope: !9520)
!9580 = !DILocation(line: 6203, column: 6, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6203, column: 6)
!9582 = !DILocation(line: 6203, column: 13, scope: !9581)
!9583 = !DILocation(line: 6203, column: 6, scope: !9384)
!9584 = !DILocation(line: 6205, column: 3, scope: !9581)
!9585 = !DILocation(line: 6208, column: 6, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6208, column: 6)
!9587 = !DILocation(line: 6208, column: 13, scope: !9586)
!9588 = !DILocation(line: 6208, column: 6, scope: !9384)
!9589 = !DILocation(line: 6210, column: 3, scope: !9586)
!9590 = !DILocation(line: 6214, column: 15, scope: !9384)
!9591 = !DILocation(line: 6214, column: 19, scope: !9384)
!9592 = !DILocation(line: 6214, column: 27, scope: !9384)
!9593 = !DILocation(line: 6214, column: 2, scope: !9384)
!9594 = !DILocation(line: 6215, column: 6, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6215, column: 6)
!9596 = !DILocation(line: 6215, column: 10, scope: !9595)
!9597 = !DILocation(line: 6215, column: 18, scope: !9595)
!9598 = !DILocation(line: 6215, column: 27, scope: !9595)
!9599 = !DILocation(line: 6215, column: 6, scope: !9384)
!9600 = !DILocation(line: 6216, column: 3, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 6216, column: 3)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 6216, column: 3)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 6216, column: 3)
!9604 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 6216, column: 3)
!9605 = !DILocation(line: 6216, column: 3, scope: !9595)
!9606 = !DILocation(line: 6219, column: 15, scope: !9384)
!9607 = !DILocation(line: 6219, column: 19, scope: !9384)
!9608 = !DILocation(line: 6219, column: 27, scope: !9384)
!9609 = !DILocation(line: 6219, column: 2, scope: !9384)
!9610 = !DILocation(line: 6220, column: 6, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 6220, column: 6)
!9612 = !DILocation(line: 6220, column: 10, scope: !9611)
!9613 = !DILocation(line: 6220, column: 18, scope: !9611)
!9614 = !DILocation(line: 6220, column: 27, scope: !9611)
!9615 = !DILocation(line: 6220, column: 6, scope: !9384)
!9616 = !DILocation(line: 6221, column: 3, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 6221, column: 3)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 6221, column: 3)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 6221, column: 3)
!9620 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 6221, column: 3)
!9621 = !DILocation(line: 6221, column: 3, scope: !9611)
!9622 = !DILocation(line: 6223, column: 2, scope: !9384)
!9623 = !DILocation(line: 6224, column: 1, scope: !9384)
!9624 = distinct !DISubprogram(name: "ips_program_bios_memio", scope: !3, file: !3, line: 6326, type: !9625, scopeLine: 6328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!182, !5540, !196, !186, !186}
!9627 = !DILocalVariable(name: "ha", arg: 1, scope: !9624, file: !3, line: 6326, type: !5540)
!9628 = !DILocation(line: 6326, column: 35, scope: !9624)
!9629 = !DILocalVariable(name: "buffer", arg: 2, scope: !9624, file: !3, line: 6326, type: !196)
!9630 = !DILocation(line: 6326, column: 45, scope: !9624)
!9631 = !DILocalVariable(name: "buffersize", arg: 3, scope: !9624, file: !3, line: 6326, type: !186)
!9632 = !DILocation(line: 6326, column: 62, scope: !9624)
!9633 = !DILocalVariable(name: "offset", arg: 4, scope: !9624, file: !3, line: 6327, type: !186)
!9634 = !DILocation(line: 6327, column: 19, scope: !9624)
!9635 = !DILocalVariable(name: "i", scope: !9624, file: !3, line: 6329, type: !182)
!9636 = !DILocation(line: 6329, column: 6, scope: !9624)
!9637 = !DILocalVariable(name: "timeout", scope: !9624, file: !3, line: 6330, type: !182)
!9638 = !DILocation(line: 6330, column: 6, scope: !9624)
!9639 = !DILocalVariable(name: "status", scope: !9624, file: !3, line: 6331, type: !205)
!9640 = !DILocation(line: 6331, column: 10, scope: !9624)
!9641 = !DILocation(line: 6335, column: 9, scope: !9624)
!9642 = !DILocation(line: 6337, column: 9, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 6337, column: 2)
!9644 = !DILocation(line: 6337, column: 7, scope: !9643)
!9645 = !DILocation(line: 6337, column: 14, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 6337, column: 2)
!9647 = !DILocation(line: 6337, column: 18, scope: !9646)
!9648 = !DILocation(line: 6337, column: 16, scope: !9646)
!9649 = !DILocation(line: 6337, column: 2, scope: !9643)
!9650 = !DILocation(line: 6339, column: 10, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 6337, column: 35)
!9652 = !DILocation(line: 6339, column: 14, scope: !9651)
!9653 = !DILocation(line: 6339, column: 12, scope: !9651)
!9654 = !DILocation(line: 6339, column: 22, scope: !9651)
!9655 = !DILocation(line: 6339, column: 26, scope: !9651)
!9656 = !DILocation(line: 6339, column: 34, scope: !9651)
!9657 = !DILocation(line: 6339, column: 3, scope: !9651)
!9658 = !DILocation(line: 6340, column: 7, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 6340, column: 7)
!9660 = !DILocation(line: 6340, column: 11, scope: !9659)
!9661 = !DILocation(line: 6340, column: 19, scope: !9659)
!9662 = !DILocation(line: 6340, column: 28, scope: !9659)
!9663 = !DILocation(line: 6340, column: 7, scope: !9651)
!9664 = !DILocation(line: 6341, column: 4, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 6341, column: 4)
!9666 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 6341, column: 4)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 6341, column: 4)
!9668 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 6341, column: 4)
!9669 = !DILocation(line: 6341, column: 4, scope: !9659)
!9670 = !DILocation(line: 6343, column: 16, scope: !9651)
!9671 = !DILocation(line: 6343, column: 20, scope: !9651)
!9672 = !DILocation(line: 6343, column: 28, scope: !9651)
!9673 = !DILocation(line: 6343, column: 3, scope: !9651)
!9674 = !DILocation(line: 6344, column: 7, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 6344, column: 7)
!9676 = !DILocation(line: 6344, column: 11, scope: !9675)
!9677 = !DILocation(line: 6344, column: 19, scope: !9675)
!9678 = !DILocation(line: 6344, column: 28, scope: !9675)
!9679 = !DILocation(line: 6344, column: 7, scope: !9651)
!9680 = !DILocation(line: 6345, column: 4, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 6345, column: 4)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 6345, column: 4)
!9683 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 6345, column: 4)
!9684 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 6345, column: 4)
!9685 = !DILocation(line: 6345, column: 4, scope: !9675)
!9686 = !DILocation(line: 6347, column: 10, scope: !9651)
!9687 = !DILocation(line: 6347, column: 17, scope: !9651)
!9688 = !DILocation(line: 6347, column: 21, scope: !9651)
!9689 = !DILocation(line: 6347, column: 25, scope: !9651)
!9690 = !DILocation(line: 6347, column: 33, scope: !9651)
!9691 = !DILocation(line: 6347, column: 3, scope: !9651)
!9692 = !DILocation(line: 6348, column: 7, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 6348, column: 7)
!9694 = !DILocation(line: 6348, column: 11, scope: !9693)
!9695 = !DILocation(line: 6348, column: 19, scope: !9693)
!9696 = !DILocation(line: 6348, column: 28, scope: !9693)
!9697 = !DILocation(line: 6348, column: 7, scope: !9651)
!9698 = !DILocation(line: 6349, column: 4, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 6349, column: 4)
!9700 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 6349, column: 4)
!9701 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 6349, column: 4)
!9702 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 6349, column: 4)
!9703 = !DILocation(line: 6349, column: 4, scope: !9693)
!9704 = !DILocation(line: 6352, column: 11, scope: !9651)
!9705 = !DILocation(line: 6353, column: 3, scope: !9651)
!9706 = !DILocation(line: 6353, column: 10, scope: !9651)
!9707 = !DILocation(line: 6353, column: 18, scope: !9651)
!9708 = !DILocation(line: 6354, column: 8, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 6354, column: 8)
!9710 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 6353, column: 23)
!9711 = !DILocation(line: 6354, column: 12, scope: !9709)
!9712 = !DILocation(line: 6354, column: 20, scope: !9709)
!9713 = !DILocation(line: 6354, column: 29, scope: !9709)
!9714 = !DILocation(line: 6354, column: 8, scope: !9710)
!9715 = !DILocation(line: 6355, column: 15, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 6354, column: 54)
!9717 = !DILocation(line: 6355, column: 19, scope: !9716)
!9718 = !DILocation(line: 6355, column: 27, scope: !9716)
!9719 = !DILocation(line: 6355, column: 5, scope: !9716)
!9720 = !DILocation(line: 6356, column: 5, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 6356, column: 5)
!9722 = distinct !DILexicalBlock(scope: !9723, file: !3, line: 6356, column: 5)
!9723 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 6356, column: 5)
!9724 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 6356, column: 5)
!9725 = !DILocation(line: 6357, column: 4, scope: !9716)
!9726 = !DILocation(line: 6359, column: 19, scope: !9710)
!9727 = !DILocation(line: 6359, column: 23, scope: !9710)
!9728 = !DILocation(line: 6359, column: 31, scope: !9710)
!9729 = !DILocation(line: 6359, column: 13, scope: !9710)
!9730 = !DILocation(line: 6359, column: 11, scope: !9710)
!9731 = !DILocation(line: 6361, column: 8, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 6361, column: 8)
!9733 = !DILocation(line: 6361, column: 15, scope: !9732)
!9734 = !DILocation(line: 6361, column: 8, scope: !9710)
!9735 = !DILocation(line: 6362, column: 5, scope: !9732)
!9736 = !DILocation(line: 6364, column: 4, scope: !9710)
!9737 = !DILocation(line: 6364, column: 4, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 6364, column: 4)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 6364, column: 4)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 6364, column: 4)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 6364, column: 4)
!9742 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 6364, column: 4)
!9743 = !DILocation(line: 6364, column: 4, scope: !9742)
!9744 = !DILocation(line: 6365, column: 11, scope: !9710)
!9745 = distinct !{!9745, !9705, !9746}
!9746 = !DILocation(line: 6366, column: 3, scope: !9651)
!9747 = !DILocation(line: 6368, column: 7, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 6368, column: 7)
!9749 = !DILocation(line: 6368, column: 15, scope: !9748)
!9750 = !DILocation(line: 6368, column: 7, scope: !9651)
!9751 = !DILocation(line: 6370, column: 14, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 6368, column: 21)
!9753 = !DILocation(line: 6370, column: 18, scope: !9752)
!9754 = !DILocation(line: 6370, column: 26, scope: !9752)
!9755 = !DILocation(line: 6370, column: 4, scope: !9752)
!9756 = !DILocation(line: 6371, column: 8, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 6371, column: 8)
!9758 = !DILocation(line: 6371, column: 12, scope: !9757)
!9759 = !DILocation(line: 6371, column: 20, scope: !9757)
!9760 = !DILocation(line: 6371, column: 29, scope: !9757)
!9761 = !DILocation(line: 6371, column: 8, scope: !9752)
!9762 = !DILocation(line: 6372, column: 5, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 6372, column: 5)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 6372, column: 5)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 6372, column: 5)
!9766 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 6372, column: 5)
!9767 = !DILocation(line: 6372, column: 5, scope: !9757)
!9768 = !DILocation(line: 6374, column: 17, scope: !9752)
!9769 = !DILocation(line: 6374, column: 21, scope: !9752)
!9770 = !DILocation(line: 6374, column: 29, scope: !9752)
!9771 = !DILocation(line: 6374, column: 4, scope: !9752)
!9772 = !DILocation(line: 6375, column: 8, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 6375, column: 8)
!9774 = !DILocation(line: 6375, column: 12, scope: !9773)
!9775 = !DILocation(line: 6375, column: 20, scope: !9773)
!9776 = !DILocation(line: 6375, column: 29, scope: !9773)
!9777 = !DILocation(line: 6375, column: 8, scope: !9752)
!9778 = !DILocation(line: 6376, column: 5, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 6376, column: 5)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 6376, column: 5)
!9781 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 6376, column: 5)
!9782 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 6376, column: 5)
!9783 = !DILocation(line: 6376, column: 5, scope: !9773)
!9784 = !DILocation(line: 6378, column: 4, scope: !9752)
!9785 = !DILocation(line: 6382, column: 7, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 6382, column: 7)
!9787 = !DILocation(line: 6382, column: 14, scope: !9786)
!9788 = !DILocation(line: 6382, column: 7, scope: !9651)
!9789 = !DILocation(line: 6384, column: 14, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 6382, column: 22)
!9791 = !DILocation(line: 6384, column: 18, scope: !9790)
!9792 = !DILocation(line: 6384, column: 26, scope: !9790)
!9793 = !DILocation(line: 6384, column: 4, scope: !9790)
!9794 = !DILocation(line: 6385, column: 8, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 6385, column: 8)
!9796 = !DILocation(line: 6385, column: 12, scope: !9795)
!9797 = !DILocation(line: 6385, column: 20, scope: !9795)
!9798 = !DILocation(line: 6385, column: 29, scope: !9795)
!9799 = !DILocation(line: 6385, column: 8, scope: !9790)
!9800 = !DILocation(line: 6386, column: 5, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 6386, column: 5)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 6386, column: 5)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 6386, column: 5)
!9804 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 6386, column: 5)
!9805 = !DILocation(line: 6386, column: 5, scope: !9795)
!9806 = !DILocation(line: 6388, column: 17, scope: !9790)
!9807 = !DILocation(line: 6388, column: 21, scope: !9790)
!9808 = !DILocation(line: 6388, column: 29, scope: !9790)
!9809 = !DILocation(line: 6388, column: 4, scope: !9790)
!9810 = !DILocation(line: 6389, column: 8, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 6389, column: 8)
!9812 = !DILocation(line: 6389, column: 12, scope: !9811)
!9813 = !DILocation(line: 6389, column: 20, scope: !9811)
!9814 = !DILocation(line: 6389, column: 29, scope: !9811)
!9815 = !DILocation(line: 6389, column: 8, scope: !9790)
!9816 = !DILocation(line: 6390, column: 5, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 6390, column: 5)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 6390, column: 5)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 6390, column: 5)
!9820 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 6390, column: 5)
!9821 = !DILocation(line: 6390, column: 5, scope: !9811)
!9822 = !DILocation(line: 6392, column: 4, scope: !9790)
!9823 = !DILocation(line: 6394, column: 2, scope: !9651)
!9824 = !DILocation(line: 6337, column: 31, scope: !9646)
!9825 = !DILocation(line: 6337, column: 2, scope: !9646)
!9826 = distinct !{!9826, !9649, !9827}
!9827 = !DILocation(line: 6394, column: 2, scope: !9643)
!9828 = !DILocation(line: 6397, column: 12, scope: !9624)
!9829 = !DILocation(line: 6397, column: 16, scope: !9624)
!9830 = !DILocation(line: 6397, column: 24, scope: !9624)
!9831 = !DILocation(line: 6397, column: 2, scope: !9624)
!9832 = !DILocation(line: 6398, column: 6, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 6398, column: 6)
!9834 = !DILocation(line: 6398, column: 10, scope: !9833)
!9835 = !DILocation(line: 6398, column: 18, scope: !9833)
!9836 = !DILocation(line: 6398, column: 27, scope: !9833)
!9837 = !DILocation(line: 6398, column: 6, scope: !9624)
!9838 = !DILocation(line: 6399, column: 3, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 6399, column: 3)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !3, line: 6399, column: 3)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 6399, column: 3)
!9842 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 6399, column: 3)
!9843 = !DILocation(line: 6399, column: 3, scope: !9833)
!9844 = !DILocation(line: 6401, column: 15, scope: !9624)
!9845 = !DILocation(line: 6401, column: 19, scope: !9624)
!9846 = !DILocation(line: 6401, column: 27, scope: !9624)
!9847 = !DILocation(line: 6401, column: 2, scope: !9624)
!9848 = !DILocation(line: 6402, column: 6, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 6402, column: 6)
!9850 = !DILocation(line: 6402, column: 10, scope: !9849)
!9851 = !DILocation(line: 6402, column: 18, scope: !9849)
!9852 = !DILocation(line: 6402, column: 27, scope: !9849)
!9853 = !DILocation(line: 6402, column: 6, scope: !9624)
!9854 = !DILocation(line: 6403, column: 3, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9856, file: !3, line: 6403, column: 3)
!9856 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 6403, column: 3)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 6403, column: 3)
!9858 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 6403, column: 3)
!9859 = !DILocation(line: 6403, column: 3, scope: !9849)
!9860 = !DILocation(line: 6405, column: 2, scope: !9624)
!9861 = !DILocation(line: 6406, column: 1, scope: !9624)
!9862 = distinct !DISubprogram(name: "ips_verify_bios_memio", scope: !3, file: !3, line: 6466, type: !9625, scopeLine: 6468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9863 = !DILocalVariable(name: "ha", arg: 1, scope: !9862, file: !3, line: 6466, type: !5540)
!9864 = !DILocation(line: 6466, column: 34, scope: !9862)
!9865 = !DILocalVariable(name: "buffer", arg: 2, scope: !9862, file: !3, line: 6466, type: !196)
!9866 = !DILocation(line: 6466, column: 44, scope: !9862)
!9867 = !DILocalVariable(name: "buffersize", arg: 3, scope: !9862, file: !3, line: 6466, type: !186)
!9868 = !DILocation(line: 6466, column: 61, scope: !9862)
!9869 = !DILocalVariable(name: "offset", arg: 4, scope: !9862, file: !3, line: 6467, type: !186)
!9870 = !DILocation(line: 6467, column: 18, scope: !9862)
!9871 = !DILocalVariable(name: "checksum", scope: !9862, file: !3, line: 6469, type: !205)
!9872 = !DILocation(line: 6469, column: 10, scope: !9862)
!9873 = !DILocalVariable(name: "i", scope: !9862, file: !3, line: 6470, type: !182)
!9874 = !DILocation(line: 6470, column: 6, scope: !9862)
!9875 = !DILocation(line: 6475, column: 12, scope: !9862)
!9876 = !DILocation(line: 6475, column: 16, scope: !9862)
!9877 = !DILocation(line: 6475, column: 24, scope: !9862)
!9878 = !DILocation(line: 6475, column: 2, scope: !9862)
!9879 = !DILocation(line: 6476, column: 6, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 6476, column: 6)
!9881 = !DILocation(line: 6476, column: 10, scope: !9880)
!9882 = !DILocation(line: 6476, column: 18, scope: !9880)
!9883 = !DILocation(line: 6476, column: 27, scope: !9880)
!9884 = !DILocation(line: 6476, column: 6, scope: !9862)
!9885 = !DILocation(line: 6477, column: 3, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 6477, column: 3)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 6477, column: 3)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 6477, column: 3)
!9889 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 6477, column: 3)
!9890 = !DILocation(line: 6477, column: 3, scope: !9880)
!9891 = !DILocation(line: 6479, column: 12, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 6479, column: 6)
!9893 = !DILocation(line: 6479, column: 16, scope: !9892)
!9894 = !DILocation(line: 6479, column: 24, scope: !9892)
!9895 = !DILocation(line: 6479, column: 6, scope: !9892)
!9896 = !DILocation(line: 6479, column: 40, scope: !9892)
!9897 = !DILocation(line: 6479, column: 6, scope: !9862)
!9898 = !DILocation(line: 6480, column: 3, scope: !9892)
!9899 = !DILocation(line: 6482, column: 12, scope: !9862)
!9900 = !DILocation(line: 6482, column: 16, scope: !9862)
!9901 = !DILocation(line: 6482, column: 24, scope: !9862)
!9902 = !DILocation(line: 6482, column: 2, scope: !9862)
!9903 = !DILocation(line: 6483, column: 6, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 6483, column: 6)
!9905 = !DILocation(line: 6483, column: 10, scope: !9904)
!9906 = !DILocation(line: 6483, column: 18, scope: !9904)
!9907 = !DILocation(line: 6483, column: 27, scope: !9904)
!9908 = !DILocation(line: 6483, column: 6, scope: !9862)
!9909 = !DILocation(line: 6484, column: 3, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 6484, column: 3)
!9911 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 6484, column: 3)
!9912 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 6484, column: 3)
!9913 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 6484, column: 3)
!9914 = !DILocation(line: 6484, column: 3, scope: !9904)
!9915 = !DILocation(line: 6485, column: 12, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 6485, column: 6)
!9917 = !DILocation(line: 6485, column: 16, scope: !9916)
!9918 = !DILocation(line: 6485, column: 24, scope: !9916)
!9919 = !DILocation(line: 6485, column: 6, scope: !9916)
!9920 = !DILocation(line: 6485, column: 40, scope: !9916)
!9921 = !DILocation(line: 6485, column: 6, scope: !9862)
!9922 = !DILocation(line: 6486, column: 3, scope: !9916)
!9923 = !DILocation(line: 6488, column: 11, scope: !9862)
!9924 = !DILocation(line: 6489, column: 9, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 6489, column: 2)
!9926 = !DILocation(line: 6489, column: 7, scope: !9925)
!9927 = !DILocation(line: 6489, column: 14, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 6489, column: 2)
!9929 = !DILocation(line: 6489, column: 18, scope: !9928)
!9930 = !DILocation(line: 6489, column: 16, scope: !9928)
!9931 = !DILocation(line: 6489, column: 2, scope: !9925)
!9932 = !DILocation(line: 6491, column: 10, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 6489, column: 35)
!9934 = !DILocation(line: 6491, column: 14, scope: !9933)
!9935 = !DILocation(line: 6491, column: 12, scope: !9933)
!9936 = !DILocation(line: 6491, column: 22, scope: !9933)
!9937 = !DILocation(line: 6491, column: 26, scope: !9933)
!9938 = !DILocation(line: 6491, column: 34, scope: !9933)
!9939 = !DILocation(line: 6491, column: 3, scope: !9933)
!9940 = !DILocation(line: 6492, column: 7, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 6492, column: 7)
!9942 = !DILocation(line: 6492, column: 11, scope: !9941)
!9943 = !DILocation(line: 6492, column: 19, scope: !9941)
!9944 = !DILocation(line: 6492, column: 28, scope: !9941)
!9945 = !DILocation(line: 6492, column: 7, scope: !9933)
!9946 = !DILocation(line: 6493, column: 4, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 6493, column: 4)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 6493, column: 4)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 6493, column: 4)
!9950 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 6493, column: 4)
!9951 = !DILocation(line: 6493, column: 4, scope: !9941)
!9952 = !DILocation(line: 6496, column: 17, scope: !9933)
!9953 = !DILocation(line: 6496, column: 7, scope: !9933)
!9954 = !DILocation(line: 6496, column: 34, scope: !9933)
!9955 = !DILocation(line: 6496, column: 38, scope: !9933)
!9956 = !DILocation(line: 6496, column: 46, scope: !9933)
!9957 = !DILocation(line: 6496, column: 28, scope: !9933)
!9958 = !DILocation(line: 6496, column: 26, scope: !9933)
!9959 = !DILocation(line: 6495, column: 12, scope: !9933)
!9960 = !DILocation(line: 6497, column: 2, scope: !9933)
!9961 = !DILocation(line: 6489, column: 31, scope: !9928)
!9962 = !DILocation(line: 6489, column: 2, scope: !9928)
!9963 = distinct !{!9963, !9931, !9964}
!9964 = !DILocation(line: 6497, column: 2, scope: !9925)
!9965 = !DILocation(line: 6499, column: 6, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 6499, column: 6)
!9967 = !DILocation(line: 6499, column: 15, scope: !9966)
!9968 = !DILocation(line: 6499, column: 6, scope: !9862)
!9969 = !DILocation(line: 6501, column: 3, scope: !9966)
!9970 = !DILocation(line: 6504, column: 3, scope: !9966)
!9971 = !DILocation(line: 6505, column: 1, scope: !9862)
!9972 = distinct !DISubprogram(name: "ips_enable_int_copperhead_memio", scope: !3, file: !3, line: 4656, type: !7788, scopeLine: 4657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9973 = !DILocalVariable(name: "ha", arg: 1, scope: !9972, file: !3, line: 4656, type: !5540)
!9974 = !DILocation(line: 4656, column: 44, scope: !9972)
!9975 = !DILocation(line: 4660, column: 21, scope: !9972)
!9976 = !DILocation(line: 4660, column: 25, scope: !9972)
!9977 = !DILocation(line: 4660, column: 33, scope: !9972)
!9978 = !DILocation(line: 4660, column: 2, scope: !9972)
!9979 = !DILocation(line: 4661, column: 8, scope: !9972)
!9980 = !DILocation(line: 4661, column: 12, scope: !9972)
!9981 = !DILocation(line: 4661, column: 20, scope: !9972)
!9982 = !DILocation(line: 4661, column: 2, scope: !9972)
!9983 = !DILocation(line: 4662, column: 1, scope: !9972)
!9984 = distinct !DISubprogram(name: "ips_issue_copperhead_memio", scope: !3, file: !3, line: 5324, type: !8517, scopeLine: 5325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!9985 = !DILocalVariable(name: "ha", arg: 1, scope: !9984, file: !3, line: 5324, type: !5540)
!9986 = !DILocation(line: 5324, column: 39, scope: !9984)
!9987 = !DILocalVariable(name: "scb", arg: 2, scope: !9984, file: !3, line: 5324, type: !4848)
!9988 = !DILocation(line: 5324, column: 55, scope: !9984)
!9989 = !DILocalVariable(name: "TimeOut", scope: !9984, file: !3, line: 5326, type: !186)
!9990 = !DILocation(line: 5326, column: 11, scope: !9984)
!9991 = !DILocalVariable(name: "val", scope: !9984, file: !3, line: 5327, type: !186)
!9992 = !DILocation(line: 5327, column: 11, scope: !9984)
!9993 = !DILocation(line: 5331, column: 6, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 5331, column: 6)
!9995 = !DILocation(line: 5331, column: 11, scope: !9994)
!9996 = !DILocation(line: 5331, column: 6, scope: !9984)
!9997 = !DILocation(line: 5338, column: 2, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 5331, column: 21)
!9999 = !DILocation(line: 5343, column: 10, scope: !9984)
!10000 = !DILocation(line: 5345, column: 2, scope: !9984)
!10001 = !DILocation(line: 5345, column: 22, scope: !9984)
!10002 = !DILocation(line: 5345, column: 26, scope: !9984)
!10003 = !DILocation(line: 5345, column: 34, scope: !9984)
!10004 = !DILocation(line: 5345, column: 16, scope: !9984)
!10005 = !DILocation(line: 5345, column: 14, scope: !9984)
!10006 = !DILocation(line: 5345, column: 51, scope: !9984)
!10007 = !DILocation(line: 5346, column: 3, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 5346, column: 3)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 5346, column: 3)
!10010 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 5346, column: 3)
!10011 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 5346, column: 3)
!10012 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 5345, column: 66)
!10013 = !DILocation(line: 5348, column: 7, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 5348, column: 7)
!10015 = !DILocation(line: 5348, column: 17, scope: !10014)
!10016 = !DILocation(line: 5348, column: 7, scope: !10012)
!10017 = !DILocation(line: 5349, column: 10, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 5349, column: 8)
!10019 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 5348, column: 37)
!10020 = !DILocation(line: 5349, column: 14, scope: !10018)
!10021 = !DILocation(line: 5349, column: 8, scope: !10019)
!10022 = !DILocation(line: 5350, column: 5, scope: !10018)
!10023 = !DILocation(line: 5352, column: 4, scope: !10019)
!10024 = !DILocation(line: 5354, column: 4, scope: !10019)
!10025 = !DILocation(line: 5357, column: 4, scope: !10019)
!10026 = distinct !{!10026, !10000, !10027}
!10027 = !DILocation(line: 5359, column: 2, scope: !9984)
!10028 = !DILocation(line: 5361, column: 9, scope: !9984)
!10029 = !DILocation(line: 5361, column: 14, scope: !9984)
!10030 = !DILocation(line: 5361, column: 27, scope: !9984)
!10031 = !DILocation(line: 5361, column: 31, scope: !9984)
!10032 = !DILocation(line: 5361, column: 39, scope: !9984)
!10033 = !DILocation(line: 5361, column: 2, scope: !9984)
!10034 = !DILocation(line: 5362, column: 28, scope: !9984)
!10035 = !DILocation(line: 5362, column: 32, scope: !9984)
!10036 = !DILocation(line: 5362, column: 40, scope: !9984)
!10037 = !DILocation(line: 5362, column: 2, scope: !9984)
!10038 = !DILocation(line: 5364, column: 2, scope: !9984)
!10039 = !DILocation(line: 5365, column: 1, scope: !9984)
!10040 = distinct !DISubprogram(name: "ips_isintr_copperhead", scope: !3, file: !3, line: 5441, type: !8340, scopeLine: 5442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10041 = !DILocalVariable(name: "ha", arg: 1, scope: !10040, file: !3, line: 5441, type: !5540)
!10042 = !DILocation(line: 5441, column: 34, scope: !10040)
!10043 = !DILocalVariable(name: "Isr", scope: !10040, file: !3, line: 5443, type: !205)
!10044 = !DILocation(line: 5443, column: 10, scope: !10040)
!10045 = !DILocation(line: 5447, column: 12, scope: !10040)
!10046 = !DILocation(line: 5447, column: 16, scope: !10040)
!10047 = !DILocation(line: 5447, column: 24, scope: !10040)
!10048 = !DILocation(line: 5447, column: 8, scope: !10040)
!10049 = !DILocation(line: 5447, column: 6, scope: !10040)
!10050 = !DILocation(line: 5449, column: 6, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 5449, column: 6)
!10052 = !DILocation(line: 5449, column: 10, scope: !10051)
!10053 = !DILocation(line: 5449, column: 6, scope: !10040)
!10054 = !DILocation(line: 5451, column: 3, scope: !10051)
!10055 = !DILocation(line: 5453, column: 6, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 5453, column: 6)
!10057 = !DILocation(line: 5453, column: 10, scope: !10056)
!10058 = !DILocation(line: 5453, column: 6, scope: !10040)
!10059 = !DILocation(line: 5454, column: 3, scope: !10056)
!10060 = !DILocation(line: 5455, column: 11, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 5455, column: 11)
!10062 = !DILocation(line: 5455, column: 15, scope: !10061)
!10063 = !DILocation(line: 5455, column: 11, scope: !10056)
!10064 = !DILocation(line: 5458, column: 8, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 5455, column: 46)
!10066 = !DILocation(line: 5458, column: 13, scope: !10065)
!10067 = !DILocation(line: 5458, column: 17, scope: !10065)
!10068 = !DILocation(line: 5458, column: 25, scope: !10065)
!10069 = !DILocation(line: 5458, column: 3, scope: !10065)
!10070 = !DILocation(line: 5459, column: 2, scope: !10065)
!10071 = !DILocation(line: 5461, column: 2, scope: !10040)
!10072 = !DILocation(line: 5462, column: 1, scope: !10040)
!10073 = distinct !DISubprogram(name: "ips_isinit_copperhead", scope: !3, file: !3, line: 4468, type: !8340, scopeLine: 4469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10074 = !DILocalVariable(name: "ha", arg: 1, scope: !10073, file: !3, line: 4468, type: !5540)
!10075 = !DILocation(line: 4468, column: 34, scope: !10073)
!10076 = !DILocalVariable(name: "scpr", scope: !10073, file: !3, line: 4470, type: !205)
!10077 = !DILocation(line: 4470, column: 10, scope: !10073)
!10078 = !DILocalVariable(name: "isr", scope: !10073, file: !3, line: 4471, type: !205)
!10079 = !DILocation(line: 4471, column: 10, scope: !10073)
!10080 = !DILocation(line: 4475, column: 12, scope: !10073)
!10081 = !DILocation(line: 4475, column: 16, scope: !10073)
!10082 = !DILocation(line: 4475, column: 24, scope: !10073)
!10083 = !DILocation(line: 4475, column: 8, scope: !10073)
!10084 = !DILocation(line: 4475, column: 6, scope: !10073)
!10085 = !DILocation(line: 4476, column: 13, scope: !10073)
!10086 = !DILocation(line: 4476, column: 17, scope: !10073)
!10087 = !DILocation(line: 4476, column: 25, scope: !10073)
!10088 = !DILocation(line: 4476, column: 9, scope: !10073)
!10089 = !DILocation(line: 4476, column: 7, scope: !10073)
!10090 = !DILocation(line: 4478, column: 8, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 4478, column: 6)
!10092 = !DILocation(line: 4478, column: 12, scope: !10091)
!10093 = !DILocation(line: 4478, column: 26, scope: !10091)
!10094 = !DILocation(line: 4478, column: 32, scope: !10091)
!10095 = !DILocation(line: 4478, column: 37, scope: !10091)
!10096 = !DILocation(line: 4478, column: 42, scope: !10091)
!10097 = !DILocation(line: 4478, column: 57, scope: !10091)
!10098 = !DILocation(line: 4478, column: 6, scope: !10073)
!10099 = !DILocation(line: 4479, column: 3, scope: !10091)
!10100 = !DILocation(line: 4481, column: 3, scope: !10091)
!10101 = !DILocation(line: 4482, column: 1, scope: !10073)
!10102 = distinct !DISubprogram(name: "ips_init_copperhead", scope: !3, file: !3, line: 4695, type: !8340, scopeLine: 4696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10103 = !DILocalVariable(name: "ha", arg: 1, scope: !10102, file: !3, line: 4695, type: !5540)
!10104 = !DILocation(line: 4695, column: 32, scope: !10102)
!10105 = !DILocalVariable(name: "Isr", scope: !10102, file: !3, line: 4697, type: !205)
!10106 = !DILocation(line: 4697, column: 10, scope: !10102)
!10107 = !DILocalVariable(name: "Cbsp", scope: !10102, file: !3, line: 4698, type: !205)
!10108 = !DILocation(line: 4698, column: 10, scope: !10102)
!10109 = !DILocalVariable(name: "PostByte", scope: !10102, file: !3, line: 4699, type: !8934)
!10110 = !DILocation(line: 4699, column: 10, scope: !10102)
!10111 = !DILocalVariable(name: "i", scope: !10102, file: !3, line: 4700, type: !182)
!10112 = !DILocation(line: 4700, column: 6, scope: !10102)
!10113 = !DILocalVariable(name: "j", scope: !10102, file: !3, line: 4700, type: !182)
!10114 = !DILocation(line: 4700, column: 9, scope: !10102)
!10115 = !DILocation(line: 4704, column: 9, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4704, column: 2)
!10117 = !DILocation(line: 4704, column: 7, scope: !10116)
!10118 = !DILocation(line: 4704, column: 14, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 4704, column: 2)
!10120 = !DILocation(line: 4704, column: 16, scope: !10119)
!10121 = !DILocation(line: 4704, column: 2, scope: !10116)
!10122 = !DILocation(line: 4705, column: 10, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 4705, column: 3)
!10124 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 4704, column: 43)
!10125 = !DILocation(line: 4705, column: 8, scope: !10123)
!10126 = !DILocation(line: 4705, column: 15, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 4705, column: 3)
!10128 = !DILocation(line: 4705, column: 17, scope: !10127)
!10129 = !DILocation(line: 4705, column: 3, scope: !10123)
!10130 = !DILocation(line: 4706, column: 14, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 4705, column: 28)
!10132 = !DILocation(line: 4706, column: 18, scope: !10131)
!10133 = !DILocation(line: 4706, column: 26, scope: !10131)
!10134 = !DILocation(line: 4706, column: 10, scope: !10131)
!10135 = !DILocation(line: 4706, column: 8, scope: !10131)
!10136 = !DILocation(line: 4707, column: 8, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 4707, column: 8)
!10138 = !DILocation(line: 4707, column: 12, scope: !10137)
!10139 = !DILocation(line: 4707, column: 8, scope: !10131)
!10140 = !DILocation(line: 4708, column: 5, scope: !10137)
!10141 = !DILocation(line: 4711, column: 4, scope: !10131)
!10142 = !DILocalVariable(name: "__ms", scope: !10143, file: !3, line: 4711, type: !198)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 4711, column: 4)
!10144 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 4711, column: 4)
!10145 = !DILocation(line: 4711, column: 4, scope: !10143)
!10146 = !DILocation(line: 4711, column: 4, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 4711, column: 4)
!10148 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 4711, column: 4)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 4711, column: 4)
!10150 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 4711, column: 4)
!10151 = distinct !{!10151, !10145, !10145}
!10152 = !DILocation(line: 4711, column: 4, scope: !10144)
!10153 = !DILocation(line: 4712, column: 3, scope: !10131)
!10154 = !DILocation(line: 4705, column: 24, scope: !10127)
!10155 = !DILocation(line: 4705, column: 3, scope: !10127)
!10156 = distinct !{!10156, !10129, !10157}
!10157 = !DILocation(line: 4712, column: 3, scope: !10123)
!10158 = !DILocation(line: 4714, column: 7, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 4714, column: 7)
!10160 = !DILocation(line: 4714, column: 9, scope: !10159)
!10161 = !DILocation(line: 4714, column: 7, scope: !10124)
!10162 = !DILocation(line: 4716, column: 4, scope: !10159)
!10163 = !DILocation(line: 4718, column: 21, scope: !10124)
!10164 = !DILocation(line: 4718, column: 25, scope: !10124)
!10165 = !DILocation(line: 4718, column: 33, scope: !10124)
!10166 = !DILocation(line: 4718, column: 17, scope: !10124)
!10167 = !DILocation(line: 4718, column: 12, scope: !10124)
!10168 = !DILocation(line: 4718, column: 3, scope: !10124)
!10169 = !DILocation(line: 4718, column: 15, scope: !10124)
!10170 = !DILocation(line: 4719, column: 8, scope: !10124)
!10171 = !DILocation(line: 4719, column: 13, scope: !10124)
!10172 = !DILocation(line: 4719, column: 17, scope: !10124)
!10173 = !DILocation(line: 4719, column: 25, scope: !10124)
!10174 = !DILocation(line: 4719, column: 3, scope: !10124)
!10175 = !DILocation(line: 4720, column: 2, scope: !10124)
!10176 = !DILocation(line: 4704, column: 39, scope: !10119)
!10177 = !DILocation(line: 4704, column: 2, scope: !10119)
!10178 = distinct !{!10178, !10121, !10179}
!10179 = !DILocation(line: 4720, column: 2, scope: !10116)
!10180 = !DILocation(line: 4722, column: 6, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4722, column: 6)
!10182 = !DILocation(line: 4722, column: 18, scope: !10181)
!10183 = !DILocation(line: 4722, column: 6, scope: !10102)
!10184 = !DILocation(line: 4723, column: 3, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10181, file: !3, line: 4722, column: 42)
!10186 = !DILocation(line: 4727, column: 3, scope: !10185)
!10187 = !DILocation(line: 4730, column: 9, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4730, column: 2)
!10189 = !DILocation(line: 4730, column: 7, scope: !10188)
!10190 = !DILocation(line: 4730, column: 14, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4730, column: 2)
!10192 = !DILocation(line: 4730, column: 16, scope: !10191)
!10193 = !DILocation(line: 4730, column: 2, scope: !10188)
!10194 = !DILocation(line: 4731, column: 10, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 4731, column: 3)
!10196 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 4730, column: 45)
!10197 = !DILocation(line: 4731, column: 8, scope: !10195)
!10198 = !DILocation(line: 4731, column: 15, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 4731, column: 3)
!10200 = !DILocation(line: 4731, column: 17, scope: !10199)
!10201 = !DILocation(line: 4731, column: 3, scope: !10195)
!10202 = !DILocation(line: 4732, column: 14, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10199, file: !3, line: 4731, column: 29)
!10204 = !DILocation(line: 4732, column: 18, scope: !10203)
!10205 = !DILocation(line: 4732, column: 26, scope: !10203)
!10206 = !DILocation(line: 4732, column: 10, scope: !10203)
!10207 = !DILocation(line: 4732, column: 8, scope: !10203)
!10208 = !DILocation(line: 4733, column: 8, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 4733, column: 8)
!10210 = !DILocation(line: 4733, column: 12, scope: !10209)
!10211 = !DILocation(line: 4733, column: 8, scope: !10203)
!10212 = !DILocation(line: 4734, column: 5, scope: !10209)
!10213 = !DILocation(line: 4737, column: 4, scope: !10203)
!10214 = !DILocalVariable(name: "__ms", scope: !10215, file: !3, line: 4737, type: !198)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 4737, column: 4)
!10216 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 4737, column: 4)
!10217 = !DILocation(line: 4737, column: 4, scope: !10215)
!10218 = !DILocation(line: 4737, column: 4, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 4737, column: 4)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 4737, column: 4)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 4737, column: 4)
!10222 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 4737, column: 4)
!10223 = distinct !{!10223, !10217, !10217}
!10224 = !DILocation(line: 4737, column: 4, scope: !10216)
!10225 = !DILocation(line: 4738, column: 3, scope: !10203)
!10226 = !DILocation(line: 4731, column: 25, scope: !10199)
!10227 = !DILocation(line: 4731, column: 3, scope: !10199)
!10228 = distinct !{!10228, !10201, !10229}
!10229 = !DILocation(line: 4738, column: 3, scope: !10195)
!10230 = !DILocation(line: 4740, column: 7, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 4740, column: 7)
!10232 = !DILocation(line: 4740, column: 9, scope: !10231)
!10233 = !DILocation(line: 4740, column: 7, scope: !10196)
!10234 = !DILocation(line: 4742, column: 4, scope: !10231)
!10235 = !DILocation(line: 4744, column: 7, scope: !10196)
!10236 = !DILocation(line: 4744, column: 11, scope: !10196)
!10237 = !DILocation(line: 4744, column: 19, scope: !10196)
!10238 = !DILocation(line: 4744, column: 3, scope: !10196)
!10239 = !DILocation(line: 4745, column: 8, scope: !10196)
!10240 = !DILocation(line: 4745, column: 13, scope: !10196)
!10241 = !DILocation(line: 4745, column: 17, scope: !10196)
!10242 = !DILocation(line: 4745, column: 25, scope: !10196)
!10243 = !DILocation(line: 4745, column: 3, scope: !10196)
!10244 = !DILocation(line: 4746, column: 2, scope: !10196)
!10245 = !DILocation(line: 4730, column: 41, scope: !10191)
!10246 = !DILocation(line: 4730, column: 2, scope: !10191)
!10247 = distinct !{!10247, !10193, !10248}
!10248 = !DILocation(line: 4746, column: 2, scope: !10188)
!10249 = !DILocation(line: 4748, column: 9, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4748, column: 2)
!10251 = !DILocation(line: 4748, column: 7, scope: !10250)
!10252 = !DILocation(line: 4748, column: 14, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10250, file: !3, line: 4748, column: 2)
!10254 = !DILocation(line: 4748, column: 16, scope: !10253)
!10255 = !DILocation(line: 4748, column: 2, scope: !10250)
!10256 = !DILocation(line: 4749, column: 14, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10253, file: !3, line: 4748, column: 28)
!10258 = !DILocation(line: 4749, column: 18, scope: !10257)
!10259 = !DILocation(line: 4749, column: 26, scope: !10257)
!10260 = !DILocation(line: 4749, column: 10, scope: !10257)
!10261 = !DILocation(line: 4749, column: 8, scope: !10257)
!10262 = !DILocation(line: 4751, column: 8, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 4751, column: 7)
!10264 = !DILocation(line: 4751, column: 13, scope: !10263)
!10265 = !DILocation(line: 4751, column: 27, scope: !10263)
!10266 = !DILocation(line: 4751, column: 7, scope: !10257)
!10267 = !DILocation(line: 4752, column: 4, scope: !10263)
!10268 = !DILocation(line: 4755, column: 3, scope: !10257)
!10269 = !DILocalVariable(name: "__ms", scope: !10270, file: !3, line: 4755, type: !198)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 4755, column: 3)
!10271 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 4755, column: 3)
!10272 = !DILocation(line: 4755, column: 3, scope: !10270)
!10273 = !DILocation(line: 4755, column: 3, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 4755, column: 3)
!10275 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 4755, column: 3)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 4755, column: 3)
!10277 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 4755, column: 3)
!10278 = distinct !{!10278, !10272, !10272}
!10279 = !DILocation(line: 4755, column: 3, scope: !10271)
!10280 = !DILocation(line: 4756, column: 2, scope: !10257)
!10281 = !DILocation(line: 4748, column: 24, scope: !10253)
!10282 = !DILocation(line: 4748, column: 2, scope: !10253)
!10283 = distinct !{!10283, !10255, !10284}
!10284 = !DILocation(line: 4756, column: 2, scope: !10250)
!10285 = !DILocation(line: 4758, column: 6, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4758, column: 6)
!10287 = !DILocation(line: 4758, column: 8, scope: !10286)
!10288 = !DILocation(line: 4758, column: 6, scope: !10102)
!10289 = !DILocation(line: 4760, column: 3, scope: !10286)
!10290 = !DILocation(line: 4763, column: 15, scope: !10102)
!10291 = !DILocation(line: 4763, column: 19, scope: !10102)
!10292 = !DILocation(line: 4763, column: 27, scope: !10102)
!10293 = !DILocation(line: 4763, column: 2, scope: !10102)
!10294 = !DILocation(line: 4766, column: 20, scope: !10102)
!10295 = !DILocation(line: 4766, column: 24, scope: !10102)
!10296 = !DILocation(line: 4766, column: 32, scope: !10102)
!10297 = !DILocation(line: 4766, column: 2, scope: !10102)
!10298 = !DILocation(line: 4768, column: 6, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 4768, column: 6)
!10300 = !DILocation(line: 4768, column: 10, scope: !10299)
!10301 = !DILocation(line: 4768, column: 18, scope: !10299)
!10302 = !DILocation(line: 4768, column: 27, scope: !10299)
!10303 = !DILocation(line: 4768, column: 6, scope: !10102)
!10304 = !DILocation(line: 4770, column: 11, scope: !10299)
!10305 = !DILocation(line: 4770, column: 15, scope: !10299)
!10306 = !DILocation(line: 4770, column: 23, scope: !10299)
!10307 = !DILocation(line: 4770, column: 3, scope: !10299)
!10308 = !DILocation(line: 4773, column: 19, scope: !10102)
!10309 = !DILocation(line: 4773, column: 23, scope: !10102)
!10310 = !DILocation(line: 4773, column: 31, scope: !10102)
!10311 = !DILocation(line: 4773, column: 2, scope: !10102)
!10312 = !DILocation(line: 4775, column: 2, scope: !10102)
!10313 = !DILocation(line: 4776, column: 1, scope: !10102)
!10314 = distinct !DISubprogram(name: "ips_statupd_copperhead", scope: !3, file: !3, line: 5194, type: !8747, scopeLine: 5195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10315 = !DILocalVariable(name: "ha", arg: 1, scope: !10314, file: !3, line: 5194, type: !5540)
!10316 = !DILocation(line: 5194, column: 35, scope: !10314)
!10317 = !DILocation(line: 5198, column: 6, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 5198, column: 6)
!10319 = !DILocation(line: 5198, column: 10, scope: !10318)
!10320 = !DILocation(line: 5198, column: 17, scope: !10318)
!10321 = !DILocation(line: 5198, column: 34, scope: !10318)
!10322 = !DILocation(line: 5198, column: 38, scope: !10318)
!10323 = !DILocation(line: 5198, column: 45, scope: !10318)
!10324 = !DILocation(line: 5198, column: 31, scope: !10318)
!10325 = !DILocation(line: 5198, column: 6, scope: !10314)
!10326 = !DILocation(line: 5199, column: 3, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 5198, column: 59)
!10328 = !DILocation(line: 5199, column: 7, scope: !10327)
!10329 = !DILocation(line: 5199, column: 14, scope: !10327)
!10330 = !DILocation(line: 5199, column: 27, scope: !10327)
!10331 = !DILocation(line: 5200, column: 3, scope: !10327)
!10332 = !DILocation(line: 5200, column: 7, scope: !10327)
!10333 = !DILocation(line: 5200, column: 14, scope: !10327)
!10334 = !DILocation(line: 5200, column: 29, scope: !10327)
!10335 = !DILocation(line: 5201, column: 2, scope: !10327)
!10336 = !DILocation(line: 5202, column: 30, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 5201, column: 9)
!10338 = !DILocation(line: 5202, column: 34, scope: !10337)
!10339 = !DILocation(line: 5202, column: 41, scope: !10337)
!10340 = !DILocation(line: 5202, column: 3, scope: !10337)
!10341 = !DILocation(line: 5202, column: 7, scope: !10337)
!10342 = !DILocation(line: 5202, column: 14, scope: !10337)
!10343 = !DILocation(line: 5202, column: 28, scope: !10337)
!10344 = !DILocation(line: 5203, column: 31, scope: !10337)
!10345 = !DILocation(line: 5203, column: 35, scope: !10337)
!10346 = !DILocation(line: 5203, column: 42, scope: !10337)
!10347 = !DILocation(line: 5203, column: 3, scope: !10337)
!10348 = !DILocation(line: 5203, column: 7, scope: !10337)
!10349 = !DILocation(line: 5203, column: 14, scope: !10337)
!10350 = !DILocation(line: 5203, column: 29, scope: !10337)
!10351 = !DILocation(line: 5206, column: 7, scope: !10314)
!10352 = !DILocation(line: 5206, column: 11, scope: !10314)
!10353 = !DILocation(line: 5206, column: 18, scope: !10314)
!10354 = !DILocation(line: 5207, column: 7, scope: !10314)
!10355 = !DILocation(line: 5207, column: 11, scope: !10314)
!10356 = !DILocation(line: 5207, column: 19, scope: !10314)
!10357 = !DILocation(line: 5206, column: 2, scope: !10314)
!10358 = !DILocation(line: 5209, column: 10, scope: !10314)
!10359 = !DILocation(line: 5209, column: 14, scope: !10314)
!10360 = !DILocation(line: 5209, column: 21, scope: !10314)
!10361 = !DILocation(line: 5209, column: 36, scope: !10314)
!10362 = !DILocation(line: 5209, column: 2, scope: !10314)
!10363 = distinct !DISubprogram(name: "ips_statinit", scope: !3, file: !3, line: 5133, type: !7788, scopeLine: 5134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10364 = !DILocalVariable(name: "ha", arg: 1, scope: !10363, file: !3, line: 5133, type: !5540)
!10365 = !DILocation(line: 5133, column: 25, scope: !10363)
!10366 = !DILocalVariable(name: "phys_status_start", scope: !10363, file: !3, line: 5135, type: !186)
!10367 = !DILocation(line: 5135, column: 11, scope: !10363)
!10368 = !DILocation(line: 5139, column: 30, scope: !10363)
!10369 = !DILocation(line: 5139, column: 34, scope: !10363)
!10370 = !DILocation(line: 5139, column: 41, scope: !10363)
!10371 = !DILocation(line: 5139, column: 2, scope: !10363)
!10372 = !DILocation(line: 5139, column: 6, scope: !10363)
!10373 = !DILocation(line: 5139, column: 13, scope: !10363)
!10374 = !DILocation(line: 5139, column: 28, scope: !10363)
!10375 = !DILocation(line: 5140, column: 28, scope: !10363)
!10376 = !DILocation(line: 5140, column: 32, scope: !10363)
!10377 = !DILocation(line: 5140, column: 39, scope: !10363)
!10378 = !DILocation(line: 5140, column: 46, scope: !10363)
!10379 = !DILocation(line: 5140, column: 2, scope: !10363)
!10380 = !DILocation(line: 5140, column: 6, scope: !10363)
!10381 = !DILocation(line: 5140, column: 13, scope: !10363)
!10382 = !DILocation(line: 5140, column: 26, scope: !10363)
!10383 = !DILocation(line: 5141, column: 29, scope: !10363)
!10384 = !DILocation(line: 5141, column: 33, scope: !10363)
!10385 = !DILocation(line: 5141, column: 40, scope: !10363)
!10386 = !DILocation(line: 5141, column: 2, scope: !10363)
!10387 = !DILocation(line: 5141, column: 6, scope: !10363)
!10388 = !DILocation(line: 5141, column: 13, scope: !10363)
!10389 = !DILocation(line: 5141, column: 27, scope: !10363)
!10390 = !DILocation(line: 5143, column: 22, scope: !10363)
!10391 = !DILocation(line: 5143, column: 26, scope: !10363)
!10392 = !DILocation(line: 5143, column: 33, scope: !10363)
!10393 = !DILocation(line: 5143, column: 20, scope: !10363)
!10394 = !DILocation(line: 5144, column: 7, scope: !10363)
!10395 = !DILocation(line: 5144, column: 26, scope: !10363)
!10396 = !DILocation(line: 5144, column: 30, scope: !10363)
!10397 = !DILocation(line: 5144, column: 38, scope: !10363)
!10398 = !DILocation(line: 5144, column: 2, scope: !10363)
!10399 = !DILocation(line: 5145, column: 7, scope: !10363)
!10400 = !DILocation(line: 5145, column: 25, scope: !10363)
!10401 = !DILocation(line: 5146, column: 7, scope: !10363)
!10402 = !DILocation(line: 5146, column: 11, scope: !10363)
!10403 = !DILocation(line: 5146, column: 19, scope: !10363)
!10404 = !DILocation(line: 5145, column: 2, scope: !10363)
!10405 = !DILocation(line: 5147, column: 7, scope: !10363)
!10406 = !DILocation(line: 5147, column: 25, scope: !10363)
!10407 = !DILocation(line: 5148, column: 7, scope: !10363)
!10408 = !DILocation(line: 5148, column: 11, scope: !10363)
!10409 = !DILocation(line: 5148, column: 19, scope: !10363)
!10410 = !DILocation(line: 5147, column: 2, scope: !10363)
!10411 = !DILocation(line: 5149, column: 7, scope: !10363)
!10412 = !DILocation(line: 5149, column: 26, scope: !10363)
!10413 = !DILocation(line: 5149, column: 30, scope: !10363)
!10414 = !DILocation(line: 5149, column: 38, scope: !10363)
!10415 = !DILocation(line: 5149, column: 2, scope: !10363)
!10416 = !DILocation(line: 5151, column: 30, scope: !10363)
!10417 = !DILocation(line: 5151, column: 2, scope: !10363)
!10418 = !DILocation(line: 5151, column: 6, scope: !10363)
!10419 = !DILocation(line: 5151, column: 13, scope: !10363)
!10420 = !DILocation(line: 5151, column: 28, scope: !10363)
!10421 = !DILocation(line: 5152, column: 1, scope: !10363)
!10422 = distinct !DISubprogram(name: "ips_reset_copperhead", scope: !3, file: !3, line: 4999, type: !8340, scopeLine: 5000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10423 = !DILocalVariable(name: "ha", arg: 1, scope: !10422, file: !3, line: 4999, type: !5540)
!10424 = !DILocation(line: 4999, column: 33, scope: !10422)
!10425 = !DILocalVariable(name: "reset_counter", scope: !10422, file: !3, line: 5001, type: !182)
!10426 = !DILocation(line: 5001, column: 6, scope: !10422)
!10427 = !DILocation(line: 5008, column: 16, scope: !10422)
!10428 = !DILocation(line: 5010, column: 2, scope: !10422)
!10429 = !DILocation(line: 5010, column: 9, scope: !10422)
!10430 = !DILocation(line: 5010, column: 23, scope: !10422)
!10431 = !DILocation(line: 5011, column: 16, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 5010, column: 28)
!10433 = !DILocation(line: 5013, column: 21, scope: !10432)
!10434 = !DILocation(line: 5013, column: 25, scope: !10432)
!10435 = !DILocation(line: 5013, column: 33, scope: !10432)
!10436 = !DILocation(line: 5013, column: 3, scope: !10432)
!10437 = !DILocation(line: 5016, column: 3, scope: !10432)
!10438 = !DILocalVariable(name: "__ms", scope: !10439, file: !3, line: 5016, type: !198)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 5016, column: 3)
!10440 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 5016, column: 3)
!10441 = !DILocation(line: 5016, column: 3, scope: !10439)
!10442 = !DILocation(line: 5016, column: 3, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 5016, column: 3)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 5016, column: 3)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 5016, column: 3)
!10446 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 5016, column: 3)
!10447 = distinct !{!10447, !10441, !10441}
!10448 = !DILocation(line: 5016, column: 3, scope: !10440)
!10449 = !DILocation(line: 5018, column: 11, scope: !10432)
!10450 = !DILocation(line: 5018, column: 15, scope: !10432)
!10451 = !DILocation(line: 5018, column: 23, scope: !10432)
!10452 = !DILocation(line: 5018, column: 3, scope: !10432)
!10453 = !DILocation(line: 5021, column: 3, scope: !10432)
!10454 = !DILocalVariable(name: "__ms", scope: !10455, file: !3, line: 5021, type: !198)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 5021, column: 3)
!10456 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 5021, column: 3)
!10457 = !DILocation(line: 5021, column: 3, scope: !10455)
!10458 = !DILocation(line: 5021, column: 3, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 5021, column: 3)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 5021, column: 3)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 5021, column: 3)
!10462 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 5021, column: 3)
!10463 = distinct !{!10463, !10457, !10457}
!10464 = !DILocation(line: 5021, column: 3, scope: !10456)
!10465 = !DILocation(line: 5023, column: 9, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 5023, column: 7)
!10467 = !DILocation(line: 5023, column: 13, scope: !10466)
!10468 = !DILocation(line: 5023, column: 18, scope: !10466)
!10469 = !DILocation(line: 5023, column: 25, scope: !10466)
!10470 = !DILocation(line: 5023, column: 7, scope: !10466)
!10471 = !DILocation(line: 5023, column: 7, scope: !10432)
!10472 = !DILocation(line: 5024, column: 4, scope: !10466)
!10473 = !DILocation(line: 5025, column: 12, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 5025, column: 12)
!10475 = !DILocation(line: 5025, column: 26, scope: !10474)
!10476 = !DILocation(line: 5025, column: 12, scope: !10466)
!10477 = !DILocation(line: 5027, column: 4, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 5025, column: 32)
!10479 = distinct !{!10479, !10428, !10480}
!10480 = !DILocation(line: 5029, column: 2, scope: !10422)
!10481 = !DILocation(line: 5031, column: 2, scope: !10422)
!10482 = !DILocation(line: 5032, column: 1, scope: !10422)
!10483 = distinct !DISubprogram(name: "ips_erase_bios", scope: !3, file: !3, line: 6011, type: !8340, scopeLine: 6012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10484 = !DILocalVariable(name: "ha", arg: 1, scope: !10483, file: !3, line: 6011, type: !5540)
!10485 = !DILocation(line: 6011, column: 27, scope: !10483)
!10486 = !DILocalVariable(name: "timeout", scope: !10483, file: !3, line: 6013, type: !182)
!10487 = !DILocation(line: 6013, column: 6, scope: !10483)
!10488 = !DILocalVariable(name: "status", scope: !10483, file: !3, line: 6014, type: !205)
!10489 = !DILocation(line: 6014, column: 10, scope: !10483)
!10490 = !DILocation(line: 6018, column: 9, scope: !10483)
!10491 = !DILocation(line: 6021, column: 10, scope: !10483)
!10492 = !DILocation(line: 6021, column: 14, scope: !10483)
!10493 = !DILocation(line: 6021, column: 22, scope: !10483)
!10494 = !DILocation(line: 6021, column: 2, scope: !10483)
!10495 = !DILocation(line: 6022, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6022, column: 6)
!10497 = !DILocation(line: 6022, column: 10, scope: !10496)
!10498 = !DILocation(line: 6022, column: 18, scope: !10496)
!10499 = !DILocation(line: 6022, column: 27, scope: !10496)
!10500 = !DILocation(line: 6022, column: 6, scope: !10483)
!10501 = !DILocation(line: 6023, column: 3, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 6023, column: 3)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 6023, column: 3)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 6023, column: 3)
!10505 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 6023, column: 3)
!10506 = !DILocation(line: 6023, column: 3, scope: !10496)
!10507 = !DILocation(line: 6025, column: 13, scope: !10483)
!10508 = !DILocation(line: 6025, column: 17, scope: !10483)
!10509 = !DILocation(line: 6025, column: 25, scope: !10483)
!10510 = !DILocation(line: 6025, column: 2, scope: !10483)
!10511 = !DILocation(line: 6026, column: 6, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6026, column: 6)
!10513 = !DILocation(line: 6026, column: 10, scope: !10512)
!10514 = !DILocation(line: 6026, column: 18, scope: !10512)
!10515 = !DILocation(line: 6026, column: 27, scope: !10512)
!10516 = !DILocation(line: 6026, column: 6, scope: !10483)
!10517 = !DILocation(line: 6027, column: 3, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 6027, column: 3)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 6027, column: 3)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 6027, column: 3)
!10521 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 6027, column: 3)
!10522 = !DILocation(line: 6027, column: 3, scope: !10512)
!10523 = !DILocation(line: 6030, column: 13, scope: !10483)
!10524 = !DILocation(line: 6030, column: 17, scope: !10483)
!10525 = !DILocation(line: 6030, column: 25, scope: !10483)
!10526 = !DILocation(line: 6030, column: 2, scope: !10483)
!10527 = !DILocation(line: 6031, column: 6, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6031, column: 6)
!10529 = !DILocation(line: 6031, column: 10, scope: !10528)
!10530 = !DILocation(line: 6031, column: 18, scope: !10528)
!10531 = !DILocation(line: 6031, column: 27, scope: !10528)
!10532 = !DILocation(line: 6031, column: 6, scope: !10483)
!10533 = !DILocation(line: 6032, column: 3, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 6032, column: 3)
!10535 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 6032, column: 3)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 6032, column: 3)
!10537 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 6032, column: 3)
!10538 = !DILocation(line: 6032, column: 3, scope: !10528)
!10539 = !DILocation(line: 6035, column: 13, scope: !10483)
!10540 = !DILocation(line: 6035, column: 17, scope: !10483)
!10541 = !DILocation(line: 6035, column: 25, scope: !10483)
!10542 = !DILocation(line: 6035, column: 2, scope: !10483)
!10543 = !DILocation(line: 6036, column: 6, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6036, column: 6)
!10545 = !DILocation(line: 6036, column: 10, scope: !10544)
!10546 = !DILocation(line: 6036, column: 18, scope: !10544)
!10547 = !DILocation(line: 6036, column: 27, scope: !10544)
!10548 = !DILocation(line: 6036, column: 6, scope: !10483)
!10549 = !DILocation(line: 6037, column: 3, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 6037, column: 3)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 6037, column: 3)
!10552 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 6037, column: 3)
!10553 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 6037, column: 3)
!10554 = !DILocation(line: 6037, column: 3, scope: !10544)
!10555 = !DILocation(line: 6040, column: 13, scope: !10483)
!10556 = !DILocation(line: 6040, column: 17, scope: !10483)
!10557 = !DILocation(line: 6040, column: 25, scope: !10483)
!10558 = !DILocation(line: 6040, column: 2, scope: !10483)
!10559 = !DILocation(line: 6041, column: 6, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6041, column: 6)
!10561 = !DILocation(line: 6041, column: 10, scope: !10560)
!10562 = !DILocation(line: 6041, column: 18, scope: !10560)
!10563 = !DILocation(line: 6041, column: 27, scope: !10560)
!10564 = !DILocation(line: 6041, column: 6, scope: !10483)
!10565 = !DILocation(line: 6042, column: 3, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 6042, column: 3)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 6042, column: 3)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 6042, column: 3)
!10569 = distinct !DILexicalBlock(scope: !10560, file: !3, line: 6042, column: 3)
!10570 = !DILocation(line: 6042, column: 3, scope: !10560)
!10571 = !DILocation(line: 6044, column: 10, scope: !10483)
!10572 = !DILocation(line: 6046, column: 2, scope: !10483)
!10573 = !DILocation(line: 6046, column: 9, scope: !10483)
!10574 = !DILocation(line: 6046, column: 17, scope: !10483)
!10575 = !DILocation(line: 6047, column: 7, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 6047, column: 7)
!10577 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6046, column: 22)
!10578 = !DILocation(line: 6047, column: 11, scope: !10576)
!10579 = !DILocation(line: 6047, column: 19, scope: !10576)
!10580 = !DILocation(line: 6047, column: 28, scope: !10576)
!10581 = !DILocation(line: 6047, column: 7, scope: !10577)
!10582 = !DILocation(line: 6048, column: 12, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 6047, column: 53)
!10584 = !DILocation(line: 6048, column: 16, scope: !10583)
!10585 = !DILocation(line: 6048, column: 24, scope: !10583)
!10586 = !DILocation(line: 6048, column: 4, scope: !10583)
!10587 = !DILocation(line: 6049, column: 4, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 6049, column: 4)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 6049, column: 4)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 6049, column: 4)
!10591 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 6049, column: 4)
!10592 = !DILocation(line: 6050, column: 3, scope: !10583)
!10593 = !DILocation(line: 6052, column: 16, scope: !10577)
!10594 = !DILocation(line: 6052, column: 20, scope: !10577)
!10595 = !DILocation(line: 6052, column: 28, scope: !10577)
!10596 = !DILocation(line: 6052, column: 12, scope: !10577)
!10597 = !DILocation(line: 6052, column: 10, scope: !10577)
!10598 = !DILocation(line: 6054, column: 7, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 6054, column: 7)
!10600 = !DILocation(line: 6054, column: 14, scope: !10599)
!10601 = !DILocation(line: 6054, column: 7, scope: !10577)
!10602 = !DILocation(line: 6055, column: 4, scope: !10599)
!10603 = !DILocation(line: 6057, column: 3, scope: !10577)
!10604 = !DILocation(line: 6057, column: 3, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 6057, column: 3)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 6057, column: 3)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 6057, column: 3)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 6057, column: 3)
!10609 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 6057, column: 3)
!10610 = !DILocation(line: 6057, column: 3, scope: !10609)
!10611 = !DILocation(line: 6058, column: 10, scope: !10577)
!10612 = distinct !{!10612, !10572, !10613}
!10613 = !DILocation(line: 6059, column: 2, scope: !10483)
!10614 = !DILocation(line: 6062, column: 6, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6062, column: 6)
!10616 = !DILocation(line: 6062, column: 14, scope: !10615)
!10617 = !DILocation(line: 6062, column: 6, scope: !10483)
!10618 = !DILocation(line: 6066, column: 14, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 6062, column: 20)
!10620 = !DILocation(line: 6066, column: 18, scope: !10619)
!10621 = !DILocation(line: 6066, column: 26, scope: !10619)
!10622 = !DILocation(line: 6066, column: 3, scope: !10619)
!10623 = !DILocation(line: 6067, column: 7, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 6067, column: 7)
!10625 = !DILocation(line: 6067, column: 11, scope: !10624)
!10626 = !DILocation(line: 6067, column: 19, scope: !10624)
!10627 = !DILocation(line: 6067, column: 28, scope: !10624)
!10628 = !DILocation(line: 6067, column: 7, scope: !10619)
!10629 = !DILocation(line: 6068, column: 4, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 6068, column: 4)
!10631 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 6068, column: 4)
!10632 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 6068, column: 4)
!10633 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 6068, column: 4)
!10634 = !DILocation(line: 6068, column: 4, scope: !10624)
!10635 = !DILocation(line: 6071, column: 11, scope: !10619)
!10636 = !DILocation(line: 6072, column: 3, scope: !10619)
!10637 = !DILocation(line: 6072, column: 10, scope: !10619)
!10638 = !DILocation(line: 6072, column: 18, scope: !10619)
!10639 = !DILocation(line: 6073, column: 8, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 6073, column: 8)
!10641 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 6072, column: 23)
!10642 = !DILocation(line: 6073, column: 12, scope: !10640)
!10643 = !DILocation(line: 6073, column: 20, scope: !10640)
!10644 = !DILocation(line: 6073, column: 29, scope: !10640)
!10645 = !DILocation(line: 6073, column: 8, scope: !10641)
!10646 = !DILocation(line: 6074, column: 13, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 6073, column: 54)
!10648 = !DILocation(line: 6074, column: 17, scope: !10647)
!10649 = !DILocation(line: 6074, column: 25, scope: !10647)
!10650 = !DILocation(line: 6074, column: 5, scope: !10647)
!10651 = !DILocation(line: 6075, column: 5, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 6075, column: 5)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 6075, column: 5)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 6075, column: 5)
!10655 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 6075, column: 5)
!10656 = !DILocation(line: 6076, column: 4, scope: !10647)
!10657 = !DILocation(line: 6078, column: 17, scope: !10641)
!10658 = !DILocation(line: 6078, column: 21, scope: !10641)
!10659 = !DILocation(line: 6078, column: 29, scope: !10641)
!10660 = !DILocation(line: 6078, column: 13, scope: !10641)
!10661 = !DILocation(line: 6078, column: 11, scope: !10641)
!10662 = !DILocation(line: 6080, column: 8, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 6080, column: 8)
!10664 = !DILocation(line: 6080, column: 15, scope: !10663)
!10665 = !DILocation(line: 6080, column: 8, scope: !10641)
!10666 = !DILocation(line: 6081, column: 5, scope: !10663)
!10667 = !DILocation(line: 6083, column: 4, scope: !10641)
!10668 = !DILocation(line: 6083, column: 4, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 6083, column: 4)
!10670 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 6083, column: 4)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 6083, column: 4)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 6083, column: 4)
!10673 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 6083, column: 4)
!10674 = !DILocation(line: 6083, column: 4, scope: !10673)
!10675 = !DILocation(line: 6084, column: 11, scope: !10641)
!10676 = distinct !{!10676, !10636, !10677}
!10677 = !DILocation(line: 6085, column: 3, scope: !10619)
!10678 = !DILocation(line: 6087, column: 3, scope: !10619)
!10679 = !DILocation(line: 6091, column: 6, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6091, column: 6)
!10681 = !DILocation(line: 6091, column: 13, scope: !10680)
!10682 = !DILocation(line: 6091, column: 6, scope: !10483)
!10683 = !DILocation(line: 6093, column: 3, scope: !10680)
!10684 = !DILocation(line: 6096, column: 6, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6096, column: 6)
!10686 = !DILocation(line: 6096, column: 13, scope: !10685)
!10687 = !DILocation(line: 6096, column: 6, scope: !10483)
!10688 = !DILocation(line: 6098, column: 3, scope: !10685)
!10689 = !DILocation(line: 6102, column: 13, scope: !10483)
!10690 = !DILocation(line: 6102, column: 17, scope: !10483)
!10691 = !DILocation(line: 6102, column: 25, scope: !10483)
!10692 = !DILocation(line: 6102, column: 2, scope: !10483)
!10693 = !DILocation(line: 6103, column: 6, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6103, column: 6)
!10695 = !DILocation(line: 6103, column: 10, scope: !10694)
!10696 = !DILocation(line: 6103, column: 18, scope: !10694)
!10697 = !DILocation(line: 6103, column: 27, scope: !10694)
!10698 = !DILocation(line: 6103, column: 6, scope: !10483)
!10699 = !DILocation(line: 6104, column: 3, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 6104, column: 3)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 6104, column: 3)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 6104, column: 3)
!10703 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 6104, column: 3)
!10704 = !DILocation(line: 6104, column: 3, scope: !10694)
!10705 = !DILocation(line: 6107, column: 13, scope: !10483)
!10706 = !DILocation(line: 6107, column: 17, scope: !10483)
!10707 = !DILocation(line: 6107, column: 25, scope: !10483)
!10708 = !DILocation(line: 6107, column: 2, scope: !10483)
!10709 = !DILocation(line: 6108, column: 6, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 6108, column: 6)
!10711 = !DILocation(line: 6108, column: 10, scope: !10710)
!10712 = !DILocation(line: 6108, column: 18, scope: !10710)
!10713 = !DILocation(line: 6108, column: 27, scope: !10710)
!10714 = !DILocation(line: 6108, column: 6, scope: !10483)
!10715 = !DILocation(line: 6109, column: 3, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 6109, column: 3)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 6109, column: 3)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 6109, column: 3)
!10719 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 6109, column: 3)
!10720 = !DILocation(line: 6109, column: 3, scope: !10710)
!10721 = !DILocation(line: 6111, column: 2, scope: !10483)
!10722 = !DILocation(line: 6112, column: 1, scope: !10483)
!10723 = distinct !DISubprogram(name: "ips_program_bios", scope: !3, file: !3, line: 6235, type: !9625, scopeLine: 6237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10724 = !DILocalVariable(name: "ha", arg: 1, scope: !10723, file: !3, line: 6235, type: !5540)
!10725 = !DILocation(line: 6235, column: 29, scope: !10723)
!10726 = !DILocalVariable(name: "buffer", arg: 2, scope: !10723, file: !3, line: 6235, type: !196)
!10727 = !DILocation(line: 6235, column: 39, scope: !10723)
!10728 = !DILocalVariable(name: "buffersize", arg: 3, scope: !10723, file: !3, line: 6235, type: !186)
!10729 = !DILocation(line: 6235, column: 56, scope: !10723)
!10730 = !DILocalVariable(name: "offset", arg: 4, scope: !10723, file: !3, line: 6236, type: !186)
!10731 = !DILocation(line: 6236, column: 13, scope: !10723)
!10732 = !DILocalVariable(name: "i", scope: !10723, file: !3, line: 6238, type: !182)
!10733 = !DILocation(line: 6238, column: 6, scope: !10723)
!10734 = !DILocalVariable(name: "timeout", scope: !10723, file: !3, line: 6239, type: !182)
!10735 = !DILocation(line: 6239, column: 6, scope: !10723)
!10736 = !DILocalVariable(name: "status", scope: !10723, file: !3, line: 6240, type: !205)
!10737 = !DILocation(line: 6240, column: 10, scope: !10723)
!10738 = !DILocation(line: 6244, column: 9, scope: !10723)
!10739 = !DILocation(line: 6246, column: 9, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 6246, column: 2)
!10741 = !DILocation(line: 6246, column: 7, scope: !10740)
!10742 = !DILocation(line: 6246, column: 14, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10740, file: !3, line: 6246, column: 2)
!10744 = !DILocation(line: 6246, column: 18, scope: !10743)
!10745 = !DILocation(line: 6246, column: 16, scope: !10743)
!10746 = !DILocation(line: 6246, column: 2, scope: !10740)
!10747 = !DILocation(line: 6248, column: 8, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 6246, column: 35)
!10749 = !DILocation(line: 6248, column: 12, scope: !10748)
!10750 = !DILocation(line: 6248, column: 10, scope: !10748)
!10751 = !DILocation(line: 6248, column: 20, scope: !10748)
!10752 = !DILocation(line: 6248, column: 24, scope: !10748)
!10753 = !DILocation(line: 6248, column: 32, scope: !10748)
!10754 = !DILocation(line: 6248, column: 3, scope: !10748)
!10755 = !DILocation(line: 6249, column: 7, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 6249, column: 7)
!10757 = !DILocation(line: 6249, column: 11, scope: !10756)
!10758 = !DILocation(line: 6249, column: 19, scope: !10756)
!10759 = !DILocation(line: 6249, column: 28, scope: !10756)
!10760 = !DILocation(line: 6249, column: 7, scope: !10748)
!10761 = !DILocation(line: 6250, column: 4, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 6250, column: 4)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 6250, column: 4)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 6250, column: 4)
!10765 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 6250, column: 4)
!10766 = !DILocation(line: 6250, column: 4, scope: !10756)
!10767 = !DILocation(line: 6252, column: 14, scope: !10748)
!10768 = !DILocation(line: 6252, column: 18, scope: !10748)
!10769 = !DILocation(line: 6252, column: 26, scope: !10748)
!10770 = !DILocation(line: 6252, column: 3, scope: !10748)
!10771 = !DILocation(line: 6253, column: 7, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 6253, column: 7)
!10773 = !DILocation(line: 6253, column: 11, scope: !10772)
!10774 = !DILocation(line: 6253, column: 19, scope: !10772)
!10775 = !DILocation(line: 6253, column: 28, scope: !10772)
!10776 = !DILocation(line: 6253, column: 7, scope: !10748)
!10777 = !DILocation(line: 6254, column: 4, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !3, line: 6254, column: 4)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !3, line: 6254, column: 4)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 6254, column: 4)
!10781 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 6254, column: 4)
!10782 = !DILocation(line: 6254, column: 4, scope: !10772)
!10783 = !DILocation(line: 6256, column: 8, scope: !10748)
!10784 = !DILocation(line: 6256, column: 15, scope: !10748)
!10785 = !DILocation(line: 6256, column: 19, scope: !10748)
!10786 = !DILocation(line: 6256, column: 23, scope: !10748)
!10787 = !DILocation(line: 6256, column: 31, scope: !10748)
!10788 = !DILocation(line: 6256, column: 3, scope: !10748)
!10789 = !DILocation(line: 6257, column: 7, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 6257, column: 7)
!10791 = !DILocation(line: 6257, column: 11, scope: !10790)
!10792 = !DILocation(line: 6257, column: 19, scope: !10790)
!10793 = !DILocation(line: 6257, column: 28, scope: !10790)
!10794 = !DILocation(line: 6257, column: 7, scope: !10748)
!10795 = !DILocation(line: 6258, column: 4, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 6258, column: 4)
!10797 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 6258, column: 4)
!10798 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 6258, column: 4)
!10799 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 6258, column: 4)
!10800 = !DILocation(line: 6258, column: 4, scope: !10790)
!10801 = !DILocation(line: 6261, column: 11, scope: !10748)
!10802 = !DILocation(line: 6262, column: 3, scope: !10748)
!10803 = !DILocation(line: 6262, column: 10, scope: !10748)
!10804 = !DILocation(line: 6262, column: 18, scope: !10748)
!10805 = !DILocation(line: 6263, column: 8, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 6263, column: 8)
!10807 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 6262, column: 23)
!10808 = !DILocation(line: 6263, column: 12, scope: !10806)
!10809 = !DILocation(line: 6263, column: 20, scope: !10806)
!10810 = !DILocation(line: 6263, column: 29, scope: !10806)
!10811 = !DILocation(line: 6263, column: 8, scope: !10807)
!10812 = !DILocation(line: 6264, column: 13, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 6263, column: 54)
!10814 = !DILocation(line: 6264, column: 17, scope: !10813)
!10815 = !DILocation(line: 6264, column: 25, scope: !10813)
!10816 = !DILocation(line: 6264, column: 5, scope: !10813)
!10817 = !DILocation(line: 6265, column: 5, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 6265, column: 5)
!10819 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 6265, column: 5)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 6265, column: 5)
!10821 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 6265, column: 5)
!10822 = !DILocation(line: 6266, column: 4, scope: !10813)
!10823 = !DILocation(line: 6268, column: 17, scope: !10807)
!10824 = !DILocation(line: 6268, column: 21, scope: !10807)
!10825 = !DILocation(line: 6268, column: 29, scope: !10807)
!10826 = !DILocation(line: 6268, column: 13, scope: !10807)
!10827 = !DILocation(line: 6268, column: 11, scope: !10807)
!10828 = !DILocation(line: 6270, column: 8, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 6270, column: 8)
!10830 = !DILocation(line: 6270, column: 15, scope: !10829)
!10831 = !DILocation(line: 6270, column: 8, scope: !10807)
!10832 = !DILocation(line: 6271, column: 5, scope: !10829)
!10833 = !DILocation(line: 6273, column: 4, scope: !10807)
!10834 = !DILocation(line: 6273, column: 4, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 6273, column: 4)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 6273, column: 4)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 6273, column: 4)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 6273, column: 4)
!10839 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 6273, column: 4)
!10840 = !DILocation(line: 6273, column: 4, scope: !10839)
!10841 = !DILocation(line: 6274, column: 11, scope: !10807)
!10842 = distinct !{!10842, !10802, !10843}
!10843 = !DILocation(line: 6275, column: 3, scope: !10748)
!10844 = !DILocation(line: 6277, column: 7, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 6277, column: 7)
!10846 = !DILocation(line: 6277, column: 15, scope: !10845)
!10847 = !DILocation(line: 6277, column: 7, scope: !10748)
!10848 = !DILocation(line: 6279, column: 12, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 6277, column: 21)
!10850 = !DILocation(line: 6279, column: 16, scope: !10849)
!10851 = !DILocation(line: 6279, column: 24, scope: !10849)
!10852 = !DILocation(line: 6279, column: 4, scope: !10849)
!10853 = !DILocation(line: 6280, column: 8, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 6280, column: 8)
!10855 = !DILocation(line: 6280, column: 12, scope: !10854)
!10856 = !DILocation(line: 6280, column: 20, scope: !10854)
!10857 = !DILocation(line: 6280, column: 29, scope: !10854)
!10858 = !DILocation(line: 6280, column: 8, scope: !10849)
!10859 = !DILocation(line: 6281, column: 5, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 6281, column: 5)
!10861 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 6281, column: 5)
!10862 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 6281, column: 5)
!10863 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 6281, column: 5)
!10864 = !DILocation(line: 6281, column: 5, scope: !10854)
!10865 = !DILocation(line: 6283, column: 15, scope: !10849)
!10866 = !DILocation(line: 6283, column: 19, scope: !10849)
!10867 = !DILocation(line: 6283, column: 27, scope: !10849)
!10868 = !DILocation(line: 6283, column: 4, scope: !10849)
!10869 = !DILocation(line: 6284, column: 8, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 6284, column: 8)
!10871 = !DILocation(line: 6284, column: 12, scope: !10870)
!10872 = !DILocation(line: 6284, column: 20, scope: !10870)
!10873 = !DILocation(line: 6284, column: 29, scope: !10870)
!10874 = !DILocation(line: 6284, column: 8, scope: !10849)
!10875 = !DILocation(line: 6285, column: 5, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 6285, column: 5)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 6285, column: 5)
!10878 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 6285, column: 5)
!10879 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 6285, column: 5)
!10880 = !DILocation(line: 6285, column: 5, scope: !10870)
!10881 = !DILocation(line: 6287, column: 4, scope: !10849)
!10882 = !DILocation(line: 6291, column: 7, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 6291, column: 7)
!10884 = !DILocation(line: 6291, column: 14, scope: !10883)
!10885 = !DILocation(line: 6291, column: 7, scope: !10748)
!10886 = !DILocation(line: 6293, column: 12, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10883, file: !3, line: 6291, column: 22)
!10888 = !DILocation(line: 6293, column: 16, scope: !10887)
!10889 = !DILocation(line: 6293, column: 24, scope: !10887)
!10890 = !DILocation(line: 6293, column: 4, scope: !10887)
!10891 = !DILocation(line: 6294, column: 8, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 6294, column: 8)
!10893 = !DILocation(line: 6294, column: 12, scope: !10892)
!10894 = !DILocation(line: 6294, column: 20, scope: !10892)
!10895 = !DILocation(line: 6294, column: 29, scope: !10892)
!10896 = !DILocation(line: 6294, column: 8, scope: !10887)
!10897 = !DILocation(line: 6295, column: 5, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 6295, column: 5)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 6295, column: 5)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 6295, column: 5)
!10901 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 6295, column: 5)
!10902 = !DILocation(line: 6295, column: 5, scope: !10892)
!10903 = !DILocation(line: 6297, column: 15, scope: !10887)
!10904 = !DILocation(line: 6297, column: 19, scope: !10887)
!10905 = !DILocation(line: 6297, column: 27, scope: !10887)
!10906 = !DILocation(line: 6297, column: 4, scope: !10887)
!10907 = !DILocation(line: 6298, column: 8, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 6298, column: 8)
!10909 = !DILocation(line: 6298, column: 12, scope: !10908)
!10910 = !DILocation(line: 6298, column: 20, scope: !10908)
!10911 = !DILocation(line: 6298, column: 29, scope: !10908)
!10912 = !DILocation(line: 6298, column: 8, scope: !10887)
!10913 = !DILocation(line: 6299, column: 5, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 6299, column: 5)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 6299, column: 5)
!10916 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 6299, column: 5)
!10917 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 6299, column: 5)
!10918 = !DILocation(line: 6299, column: 5, scope: !10908)
!10919 = !DILocation(line: 6301, column: 4, scope: !10887)
!10920 = !DILocation(line: 6303, column: 2, scope: !10748)
!10921 = !DILocation(line: 6246, column: 31, scope: !10743)
!10922 = !DILocation(line: 6246, column: 2, scope: !10743)
!10923 = distinct !{!10923, !10746, !10924}
!10924 = !DILocation(line: 6303, column: 2, scope: !10740)
!10925 = !DILocation(line: 6306, column: 10, scope: !10723)
!10926 = !DILocation(line: 6306, column: 14, scope: !10723)
!10927 = !DILocation(line: 6306, column: 22, scope: !10723)
!10928 = !DILocation(line: 6306, column: 2, scope: !10723)
!10929 = !DILocation(line: 6307, column: 6, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 6307, column: 6)
!10931 = !DILocation(line: 6307, column: 10, scope: !10930)
!10932 = !DILocation(line: 6307, column: 18, scope: !10930)
!10933 = !DILocation(line: 6307, column: 27, scope: !10930)
!10934 = !DILocation(line: 6307, column: 6, scope: !10723)
!10935 = !DILocation(line: 6308, column: 3, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !3, line: 6308, column: 3)
!10937 = distinct !DILexicalBlock(scope: !10938, file: !3, line: 6308, column: 3)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 6308, column: 3)
!10939 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 6308, column: 3)
!10940 = !DILocation(line: 6308, column: 3, scope: !10930)
!10941 = !DILocation(line: 6310, column: 13, scope: !10723)
!10942 = !DILocation(line: 6310, column: 17, scope: !10723)
!10943 = !DILocation(line: 6310, column: 25, scope: !10723)
!10944 = !DILocation(line: 6310, column: 2, scope: !10723)
!10945 = !DILocation(line: 6311, column: 6, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 6311, column: 6)
!10947 = !DILocation(line: 6311, column: 10, scope: !10946)
!10948 = !DILocation(line: 6311, column: 18, scope: !10946)
!10949 = !DILocation(line: 6311, column: 27, scope: !10946)
!10950 = !DILocation(line: 6311, column: 6, scope: !10723)
!10951 = !DILocation(line: 6312, column: 3, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 6312, column: 3)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 6312, column: 3)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 6312, column: 3)
!10955 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 6312, column: 3)
!10956 = !DILocation(line: 6312, column: 3, scope: !10946)
!10957 = !DILocation(line: 6314, column: 2, scope: !10723)
!10958 = !DILocation(line: 6315, column: 1, scope: !10723)
!10959 = distinct !DISubprogram(name: "ips_verify_bios", scope: !3, file: !3, line: 6417, type: !9625, scopeLine: 6419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!10960 = !DILocalVariable(name: "ha", arg: 1, scope: !10959, file: !3, line: 6417, type: !5540)
!10961 = !DILocation(line: 6417, column: 28, scope: !10959)
!10962 = !DILocalVariable(name: "buffer", arg: 2, scope: !10959, file: !3, line: 6417, type: !196)
!10963 = !DILocation(line: 6417, column: 38, scope: !10959)
!10964 = !DILocalVariable(name: "buffersize", arg: 3, scope: !10959, file: !3, line: 6417, type: !186)
!10965 = !DILocation(line: 6417, column: 55, scope: !10959)
!10966 = !DILocalVariable(name: "offset", arg: 4, scope: !10959, file: !3, line: 6418, type: !186)
!10967 = !DILocation(line: 6418, column: 12, scope: !10959)
!10968 = !DILocalVariable(name: "checksum", scope: !10959, file: !3, line: 6420, type: !205)
!10969 = !DILocation(line: 6420, column: 10, scope: !10959)
!10970 = !DILocalVariable(name: "i", scope: !10959, file: !3, line: 6421, type: !182)
!10971 = !DILocation(line: 6421, column: 6, scope: !10959)
!10972 = !DILocation(line: 6426, column: 10, scope: !10959)
!10973 = !DILocation(line: 6426, column: 14, scope: !10959)
!10974 = !DILocation(line: 6426, column: 22, scope: !10959)
!10975 = !DILocation(line: 6426, column: 2, scope: !10959)
!10976 = !DILocation(line: 6427, column: 6, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 6427, column: 6)
!10978 = !DILocation(line: 6427, column: 10, scope: !10977)
!10979 = !DILocation(line: 6427, column: 18, scope: !10977)
!10980 = !DILocation(line: 6427, column: 27, scope: !10977)
!10981 = !DILocation(line: 6427, column: 6, scope: !10959)
!10982 = !DILocation(line: 6428, column: 3, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 6428, column: 3)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 6428, column: 3)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !3, line: 6428, column: 3)
!10986 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 6428, column: 3)
!10987 = !DILocation(line: 6428, column: 3, scope: !10977)
!10988 = !DILocation(line: 6430, column: 10, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 6430, column: 6)
!10990 = !DILocation(line: 6430, column: 14, scope: !10989)
!10991 = !DILocation(line: 6430, column: 22, scope: !10989)
!10992 = !DILocation(line: 6430, column: 6, scope: !10989)
!10993 = !DILocation(line: 6430, column: 38, scope: !10989)
!10994 = !DILocation(line: 6430, column: 6, scope: !10959)
!10995 = !DILocation(line: 6431, column: 3, scope: !10989)
!10996 = !DILocation(line: 6433, column: 10, scope: !10959)
!10997 = !DILocation(line: 6433, column: 14, scope: !10959)
!10998 = !DILocation(line: 6433, column: 22, scope: !10959)
!10999 = !DILocation(line: 6433, column: 2, scope: !10959)
!11000 = !DILocation(line: 6434, column: 6, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 6434, column: 6)
!11002 = !DILocation(line: 6434, column: 10, scope: !11001)
!11003 = !DILocation(line: 6434, column: 18, scope: !11001)
!11004 = !DILocation(line: 6434, column: 27, scope: !11001)
!11005 = !DILocation(line: 6434, column: 6, scope: !10959)
!11006 = !DILocation(line: 6435, column: 3, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 6435, column: 3)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 6435, column: 3)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 6435, column: 3)
!11010 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 6435, column: 3)
!11011 = !DILocation(line: 6435, column: 3, scope: !11001)
!11012 = !DILocation(line: 6436, column: 10, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 6436, column: 6)
!11014 = !DILocation(line: 6436, column: 14, scope: !11013)
!11015 = !DILocation(line: 6436, column: 22, scope: !11013)
!11016 = !DILocation(line: 6436, column: 6, scope: !11013)
!11017 = !DILocation(line: 6436, column: 38, scope: !11013)
!11018 = !DILocation(line: 6436, column: 6, scope: !10959)
!11019 = !DILocation(line: 6437, column: 3, scope: !11013)
!11020 = !DILocation(line: 6439, column: 11, scope: !10959)
!11021 = !DILocation(line: 6440, column: 9, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 6440, column: 2)
!11023 = !DILocation(line: 6440, column: 7, scope: !11022)
!11024 = !DILocation(line: 6440, column: 14, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 6440, column: 2)
!11026 = !DILocation(line: 6440, column: 18, scope: !11025)
!11027 = !DILocation(line: 6440, column: 16, scope: !11025)
!11028 = !DILocation(line: 6440, column: 2, scope: !11022)
!11029 = !DILocation(line: 6442, column: 8, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 6440, column: 35)
!11031 = !DILocation(line: 6442, column: 12, scope: !11030)
!11032 = !DILocation(line: 6442, column: 10, scope: !11030)
!11033 = !DILocation(line: 6442, column: 20, scope: !11030)
!11034 = !DILocation(line: 6442, column: 24, scope: !11030)
!11035 = !DILocation(line: 6442, column: 32, scope: !11030)
!11036 = !DILocation(line: 6442, column: 3, scope: !11030)
!11037 = !DILocation(line: 6443, column: 7, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11030, file: !3, line: 6443, column: 7)
!11039 = !DILocation(line: 6443, column: 11, scope: !11038)
!11040 = !DILocation(line: 6443, column: 19, scope: !11038)
!11041 = !DILocation(line: 6443, column: 28, scope: !11038)
!11042 = !DILocation(line: 6443, column: 7, scope: !11030)
!11043 = !DILocation(line: 6444, column: 4, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 6444, column: 4)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 6444, column: 4)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !3, line: 6444, column: 4)
!11047 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 6444, column: 4)
!11048 = !DILocation(line: 6444, column: 4, scope: !11038)
!11049 = !DILocation(line: 6446, column: 24, scope: !11030)
!11050 = !DILocation(line: 6446, column: 14, scope: !11030)
!11051 = !DILocation(line: 6446, column: 39, scope: !11030)
!11052 = !DILocation(line: 6446, column: 43, scope: !11030)
!11053 = !DILocation(line: 6446, column: 51, scope: !11030)
!11054 = !DILocation(line: 6446, column: 35, scope: !11030)
!11055 = !DILocation(line: 6446, column: 33, scope: !11030)
!11056 = !DILocation(line: 6446, column: 12, scope: !11030)
!11057 = !DILocation(line: 6447, column: 2, scope: !11030)
!11058 = !DILocation(line: 6440, column: 31, scope: !11025)
!11059 = !DILocation(line: 6440, column: 2, scope: !11025)
!11060 = distinct !{!11060, !11028, !11061}
!11061 = !DILocation(line: 6447, column: 2, scope: !11022)
!11062 = !DILocation(line: 6449, column: 6, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 6449, column: 6)
!11064 = !DILocation(line: 6449, column: 15, scope: !11063)
!11065 = !DILocation(line: 6449, column: 6, scope: !10959)
!11066 = !DILocation(line: 6451, column: 3, scope: !11063)
!11067 = !DILocation(line: 6454, column: 3, scope: !11063)
!11068 = !DILocation(line: 6455, column: 1, scope: !10959)
!11069 = distinct !DISubprogram(name: "ips_enable_int_copperhead", scope: !3, file: !3, line: 4639, type: !7788, scopeLine: 4640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!11070 = !DILocalVariable(name: "ha", arg: 1, scope: !11069, file: !3, line: 4639, type: !5540)
!11071 = !DILocation(line: 4639, column: 38, scope: !11069)
!11072 = !DILocation(line: 4643, column: 7, scope: !11069)
!11073 = !DILocation(line: 4643, column: 11, scope: !11069)
!11074 = !DILocation(line: 4643, column: 19, scope: !11069)
!11075 = !DILocation(line: 4643, column: 2, scope: !11069)
!11076 = !DILocation(line: 4644, column: 6, scope: !11069)
!11077 = !DILocation(line: 4644, column: 10, scope: !11069)
!11078 = !DILocation(line: 4644, column: 18, scope: !11069)
!11079 = !DILocation(line: 4644, column: 2, scope: !11069)
!11080 = !DILocation(line: 4645, column: 1, scope: !11069)
!11081 = distinct !DISubprogram(name: "ips_issue_i2o", scope: !3, file: !3, line: 5377, type: !8517, scopeLine: 5378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!11082 = !DILocalVariable(name: "ha", arg: 1, scope: !11081, file: !3, line: 5377, type: !5540)
!11083 = !DILocation(line: 5377, column: 26, scope: !11081)
!11084 = !DILocalVariable(name: "scb", arg: 2, scope: !11081, file: !3, line: 5377, type: !4848)
!11085 = !DILocation(line: 5377, column: 42, scope: !11081)
!11086 = !DILocation(line: 5382, column: 6, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 5382, column: 6)
!11088 = !DILocation(line: 5382, column: 11, scope: !11087)
!11089 = !DILocation(line: 5382, column: 6, scope: !11081)
!11090 = !DILocation(line: 5389, column: 2, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 5382, column: 21)
!11092 = !DILocation(line: 5394, column: 7, scope: !11081)
!11093 = !DILocation(line: 5394, column: 12, scope: !11081)
!11094 = !DILocation(line: 5394, column: 25, scope: !11081)
!11095 = !DILocation(line: 5394, column: 29, scope: !11081)
!11096 = !DILocation(line: 5394, column: 37, scope: !11081)
!11097 = !DILocation(line: 5394, column: 2, scope: !11081)
!11098 = !DILocation(line: 5396, column: 2, scope: !11081)
!11099 = distinct !DISubprogram(name: "ips_issue_copperhead", scope: !3, file: !3, line: 5270, type: !8517, scopeLine: 5271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!11100 = !DILocalVariable(name: "ha", arg: 1, scope: !11099, file: !3, line: 5270, type: !5540)
!11101 = !DILocation(line: 5270, column: 33, scope: !11099)
!11102 = !DILocalVariable(name: "scb", arg: 2, scope: !11099, file: !3, line: 5270, type: !4848)
!11103 = !DILocation(line: 5270, column: 49, scope: !11099)
!11104 = !DILocalVariable(name: "TimeOut", scope: !11099, file: !3, line: 5272, type: !186)
!11105 = !DILocation(line: 5272, column: 11, scope: !11099)
!11106 = !DILocalVariable(name: "val", scope: !11099, file: !3, line: 5273, type: !186)
!11107 = !DILocation(line: 5273, column: 11, scope: !11099)
!11108 = !DILocation(line: 5277, column: 6, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 5277, column: 6)
!11110 = !DILocation(line: 5277, column: 11, scope: !11109)
!11111 = !DILocation(line: 5277, column: 6, scope: !11099)
!11112 = !DILocation(line: 5284, column: 2, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 5277, column: 21)
!11114 = !DILocation(line: 5289, column: 10, scope: !11099)
!11115 = !DILocation(line: 5291, column: 2, scope: !11099)
!11116 = !DILocation(line: 5292, column: 3, scope: !11099)
!11117 = !DILocation(line: 5291, column: 14, scope: !11099)
!11118 = !DILocation(line: 5292, column: 49, scope: !11099)
!11119 = !DILocation(line: 5293, column: 3, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 5293, column: 3)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 5293, column: 3)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 5293, column: 3)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 5293, column: 3)
!11124 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 5292, column: 64)
!11125 = !DILocation(line: 5295, column: 7, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 5295, column: 7)
!11127 = !DILocation(line: 5295, column: 17, scope: !11126)
!11128 = !DILocation(line: 5295, column: 7, scope: !11124)
!11129 = !DILocation(line: 5296, column: 10, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !3, line: 5296, column: 8)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 5295, column: 37)
!11132 = !DILocation(line: 5296, column: 14, scope: !11130)
!11133 = !DILocation(line: 5296, column: 8, scope: !11131)
!11134 = !DILocation(line: 5297, column: 5, scope: !11130)
!11135 = !DILocation(line: 5299, column: 4, scope: !11131)
!11136 = !DILocation(line: 5301, column: 4, scope: !11131)
!11137 = !DILocation(line: 5304, column: 4, scope: !11131)
!11138 = distinct !{!11138, !11115, !11139}
!11139 = !DILocation(line: 5306, column: 2, scope: !11099)
!11140 = !DILocation(line: 5308, column: 7, scope: !11099)
!11141 = !DILocation(line: 5308, column: 12, scope: !11099)
!11142 = !DILocation(line: 5308, column: 25, scope: !11099)
!11143 = !DILocation(line: 5308, column: 29, scope: !11099)
!11144 = !DILocation(line: 5308, column: 37, scope: !11099)
!11145 = !DILocation(line: 5308, column: 2, scope: !11099)
!11146 = !DILocation(line: 5309, column: 26, scope: !11099)
!11147 = !DILocation(line: 5309, column: 30, scope: !11099)
!11148 = !DILocation(line: 5309, column: 38, scope: !11099)
!11149 = !DILocation(line: 5309, column: 2, scope: !11099)
!11150 = !DILocation(line: 5311, column: 2, scope: !11099)
!11151 = !DILocation(line: 5312, column: 1, scope: !11099)
!11152 = distinct !DISubprogram(name: "ips_flush_and_reset", scope: !3, file: !3, line: 4552, type: !7788, scopeLine: 4553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!11153 = !DILocalVariable(name: "ha", arg: 1, scope: !11152, file: !3, line: 4552, type: !5540)
!11154 = !DILocation(line: 4552, column: 31, scope: !11152)
!11155 = !DILocalVariable(name: "scb", scope: !11152, file: !3, line: 4554, type: !4848)
!11156 = !DILocation(line: 4554, column: 13, scope: !11152)
!11157 = !DILocalVariable(name: "ret", scope: !11152, file: !3, line: 4555, type: !182)
!11158 = !DILocation(line: 4555, column: 7, scope: !11152)
!11159 = !DILocalVariable(name: "time", scope: !11152, file: !3, line: 4556, type: !182)
!11160 = !DILocation(line: 4556, column: 8, scope: !11152)
!11161 = !DILocalVariable(name: "done", scope: !11152, file: !3, line: 4557, type: !182)
!11162 = !DILocation(line: 4557, column: 7, scope: !11152)
!11163 = !DILocalVariable(name: "command_dma", scope: !11152, file: !3, line: 4558, type: !3904)
!11164 = !DILocation(line: 4558, column: 13, scope: !11152)
!11165 = !DILocation(line: 4561, column: 28, scope: !11152)
!11166 = !DILocation(line: 4561, column: 32, scope: !11152)
!11167 = !DILocation(line: 4561, column: 40, scope: !11152)
!11168 = !DILocation(line: 4561, column: 8, scope: !11152)
!11169 = !DILocation(line: 4561, column: 6, scope: !11152)
!11170 = !DILocation(line: 4563, column: 6, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 4563, column: 6)
!11172 = !DILocation(line: 4563, column: 6, scope: !11152)
!11173 = !DILocation(line: 4564, column: 13, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 4563, column: 11)
!11175 = !DILocation(line: 4564, column: 6, scope: !11174)
!11176 = !DILocation(line: 4565, column: 19, scope: !11174)
!11177 = !DILocation(line: 4565, column: 23, scope: !11174)
!11178 = !DILocation(line: 4565, column: 6, scope: !11174)
!11179 = !DILocation(line: 4566, column: 25, scope: !11174)
!11180 = !DILocation(line: 4566, column: 6, scope: !11174)
!11181 = !DILocation(line: 4566, column: 11, scope: !11174)
!11182 = !DILocation(line: 4566, column: 23, scope: !11174)
!11183 = !DILocation(line: 4568, column: 21, scope: !11174)
!11184 = !DILocation(line: 4568, column: 6, scope: !11174)
!11185 = !DILocation(line: 4568, column: 11, scope: !11174)
!11186 = !DILocation(line: 4568, column: 19, scope: !11174)
!11187 = !DILocation(line: 4569, column: 6, scope: !11174)
!11188 = !DILocation(line: 4569, column: 11, scope: !11174)
!11189 = !DILocation(line: 4569, column: 18, scope: !11174)
!11190 = !DILocation(line: 4571, column: 6, scope: !11174)
!11191 = !DILocation(line: 4571, column: 11, scope: !11174)
!11192 = !DILocation(line: 4571, column: 15, scope: !11174)
!11193 = !DILocation(line: 4571, column: 27, scope: !11174)
!11194 = !DILocation(line: 4571, column: 35, scope: !11174)
!11195 = !DILocation(line: 4572, column: 6, scope: !11174)
!11196 = !DILocation(line: 4572, column: 11, scope: !11174)
!11197 = !DILocation(line: 4572, column: 15, scope: !11174)
!11198 = !DILocation(line: 4572, column: 27, scope: !11174)
!11199 = !DILocation(line: 4572, column: 38, scope: !11174)
!11200 = !DILocation(line: 4573, column: 6, scope: !11174)
!11201 = !DILocation(line: 4573, column: 11, scope: !11174)
!11202 = !DILocation(line: 4573, column: 15, scope: !11174)
!11203 = !DILocation(line: 4573, column: 27, scope: !11174)
!11204 = !DILocation(line: 4573, column: 33, scope: !11174)
!11205 = !DILocation(line: 4574, column: 6, scope: !11174)
!11206 = !DILocation(line: 4574, column: 11, scope: !11174)
!11207 = !DILocation(line: 4574, column: 15, scope: !11174)
!11208 = !DILocation(line: 4574, column: 27, scope: !11174)
!11209 = !DILocation(line: 4574, column: 36, scope: !11174)
!11210 = !DILocation(line: 4575, column: 6, scope: !11174)
!11211 = !DILocation(line: 4575, column: 11, scope: !11174)
!11212 = !DILocation(line: 4575, column: 15, scope: !11174)
!11213 = !DILocation(line: 4575, column: 27, scope: !11174)
!11214 = !DILocation(line: 4575, column: 37, scope: !11174)
!11215 = !DILocation(line: 4576, column: 6, scope: !11174)
!11216 = !DILocation(line: 4576, column: 11, scope: !11174)
!11217 = !DILocation(line: 4576, column: 15, scope: !11174)
!11218 = !DILocation(line: 4576, column: 27, scope: !11174)
!11219 = !DILocation(line: 4576, column: 37, scope: !11174)
!11220 = !DILocation(line: 4577, column: 6, scope: !11174)
!11221 = !DILocation(line: 4577, column: 11, scope: !11174)
!11222 = !DILocation(line: 4577, column: 15, scope: !11174)
!11223 = !DILocation(line: 4577, column: 27, scope: !11174)
!11224 = !DILocation(line: 4577, column: 37, scope: !11174)
!11225 = !DILocation(line: 4579, column: 25, scope: !11174)
!11226 = !DILocation(line: 4579, column: 29, scope: !11174)
!11227 = !DILocation(line: 4579, column: 12, scope: !11174)
!11228 = !DILocation(line: 4579, column: 10, scope: !11174)
!11229 = !DILocation(line: 4581, column: 10, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 4581, column: 10)
!11231 = !DILocation(line: 4581, column: 14, scope: !11230)
!11232 = !DILocation(line: 4581, column: 10, scope: !11174)
!11233 = !DILocation(line: 4582, column: 15, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11230, file: !3, line: 4581, column: 30)
!11235 = !DILocation(line: 4583, column: 15, scope: !11234)
!11236 = !DILocation(line: 4585, column: 10, scope: !11234)
!11237 = !DILocation(line: 4585, column: 18, scope: !11234)
!11238 = !DILocation(line: 4585, column: 23, scope: !11234)
!11239 = !DILocation(line: 4585, column: 28, scope: !11234)
!11240 = !DILocation(line: 4585, column: 33, scope: !11234)
!11241 = !DILocation(line: 4585, column: 32, scope: !11234)
!11242 = !DILocation(line: 0, scope: !11234)
!11243 = !DILocation(line: 4586, column: 41, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4585, column: 40)
!11245 = !DILocation(line: 4586, column: 13, scope: !11244)
!11246 = !DILocation(line: 4586, column: 11, scope: !11244)
!11247 = !DILocation(line: 4588, column: 13, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 4588, column: 13)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 4588, column: 13)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 4588, column: 13)
!11251 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 4588, column: 13)
!11252 = !DILocation(line: 4589, column: 17, scope: !11244)
!11253 = distinct !{!11253, !11236, !11254}
!11254 = !DILocation(line: 4590, column: 10, scope: !11234)
!11255 = !DILocation(line: 4591, column: 9, scope: !11234)
!11256 = !DILocation(line: 4592, column: 2, scope: !11174)
!11257 = !DILocation(line: 4595, column: 4, scope: !11152)
!11258 = !DILocation(line: 4595, column: 8, scope: !11152)
!11259 = !DILocation(line: 4595, column: 13, scope: !11152)
!11260 = !DILocation(line: 4595, column: 21, scope: !11152)
!11261 = !DILocation(line: 4595, column: 2, scope: !11152)
!11262 = !DILocation(line: 4597, column: 21, scope: !11152)
!11263 = !DILocation(line: 4597, column: 25, scope: !11152)
!11264 = !DILocation(line: 4597, column: 33, scope: !11152)
!11265 = !DILocation(line: 4597, column: 57, scope: !11152)
!11266 = !DILocation(line: 4597, column: 62, scope: !11152)
!11267 = !DILocation(line: 4597, column: 2, scope: !11152)
!11268 = !DILocation(line: 4598, column: 2, scope: !11152)
!11269 = distinct !DISubprogram(name: "ips_init_scb", scope: !3, file: !3, line: 4364, type: !11270, scopeLine: 4365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!11270 = !DISubroutineType(types: !11271)
!11271 = !{null, !5540, !4848}
!11272 = !DILocalVariable(name: "ha", arg: 1, scope: !11269, file: !3, line: 4364, type: !5540)
!11273 = !DILocation(line: 4364, column: 25, scope: !11269)
!11274 = !DILocalVariable(name: "scb", arg: 2, scope: !11269, file: !3, line: 4364, type: !4848)
!11275 = !DILocation(line: 4364, column: 41, scope: !11269)
!11276 = !DILocalVariable(name: "sg_list", scope: !11269, file: !3, line: 4366, type: !5080)
!11277 = !DILocation(line: 4366, column: 14, scope: !11269)
!11278 = !DILocalVariable(name: "cmd_busaddr", scope: !11269, file: !3, line: 4367, type: !186)
!11279 = !DILocation(line: 4367, column: 11, scope: !11269)
!11280 = !DILocalVariable(name: "sg_busaddr", scope: !11269, file: !3, line: 4367, type: !186)
!11281 = !DILocation(line: 4367, column: 24, scope: !11269)
!11282 = !DILocation(line: 4370, column: 6, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 4370, column: 6)
!11284 = !DILocation(line: 4370, column: 10, scope: !11283)
!11285 = !DILocation(line: 4370, column: 6, scope: !11269)
!11286 = !DILocation(line: 4371, column: 3, scope: !11283)
!11287 = !DILocation(line: 4373, column: 17, scope: !11269)
!11288 = !DILocation(line: 4373, column: 22, scope: !11269)
!11289 = !DILocation(line: 4373, column: 30, scope: !11269)
!11290 = !DILocation(line: 4373, column: 10, scope: !11269)
!11291 = !DILocation(line: 4373, column: 15, scope: !11269)
!11292 = !DILocation(line: 4374, column: 16, scope: !11269)
!11293 = !DILocation(line: 4374, column: 21, scope: !11269)
!11294 = !DILocation(line: 4374, column: 14, scope: !11269)
!11295 = !DILocation(line: 4375, column: 15, scope: !11269)
!11296 = !DILocation(line: 4375, column: 20, scope: !11269)
!11297 = !DILocation(line: 4375, column: 13, scope: !11269)
!11298 = !DILocation(line: 4377, column: 9, scope: !11269)
!11299 = !DILocation(line: 4377, column: 2, scope: !11269)
!11300 = !DILocation(line: 4378, column: 9, scope: !11269)
!11301 = !DILocation(line: 4378, column: 13, scope: !11269)
!11302 = !DILocation(line: 4378, column: 2, scope: !11269)
!11303 = !DILocation(line: 4381, column: 2, scope: !11269)
!11304 = !DILocation(line: 4381, column: 6, scope: !11269)
!11305 = !DILocation(line: 4381, column: 13, scope: !11269)
!11306 = !DILocation(line: 4381, column: 21, scope: !11269)
!11307 = !DILocation(line: 4382, column: 21, scope: !11269)
!11308 = !DILocation(line: 4382, column: 2, scope: !11269)
!11309 = !DILocation(line: 4382, column: 6, scope: !11269)
!11310 = !DILocation(line: 4382, column: 13, scope: !11269)
!11311 = !DILocation(line: 4382, column: 19, scope: !11269)
!11312 = !DILocation(line: 4384, column: 2, scope: !11269)
!11313 = !DILocation(line: 4384, column: 6, scope: !11269)
!11314 = !DILocation(line: 4384, column: 13, scope: !11269)
!11315 = !DILocation(line: 4384, column: 24, scope: !11269)
!11316 = !DILocation(line: 4387, column: 21, scope: !11269)
!11317 = !DILocation(line: 4387, column: 2, scope: !11269)
!11318 = !DILocation(line: 4387, column: 7, scope: !11269)
!11319 = !DILocation(line: 4387, column: 19, scope: !11269)
!11320 = !DILocation(line: 4388, column: 20, scope: !11269)
!11321 = !DILocation(line: 4388, column: 2, scope: !11269)
!11322 = !DILocation(line: 4388, column: 7, scope: !11269)
!11323 = !DILocation(line: 4388, column: 18, scope: !11269)
!11324 = !DILocation(line: 4389, column: 30, scope: !11269)
!11325 = !DILocation(line: 4389, column: 2, scope: !11269)
!11326 = !DILocation(line: 4389, column: 7, scope: !11269)
!11327 = !DILocation(line: 4389, column: 15, scope: !11269)
!11328 = !DILocation(line: 4389, column: 20, scope: !11269)
!11329 = !DILocation(line: 4392, column: 2, scope: !11269)
!11330 = !DILocation(line: 4392, column: 7, scope: !11269)
!11331 = !DILocation(line: 4392, column: 11, scope: !11269)
!11332 = !DILocation(line: 4392, column: 20, scope: !11269)
!11333 = !DILocation(line: 4392, column: 25, scope: !11269)
!11334 = !DILocation(line: 4393, column: 28, scope: !11269)
!11335 = !DILocation(line: 4393, column: 2, scope: !11269)
!11336 = !DILocation(line: 4393, column: 7, scope: !11269)
!11337 = !DILocation(line: 4393, column: 11, scope: !11269)
!11338 = !DILocation(line: 4393, column: 20, scope: !11269)
!11339 = !DILocation(line: 4393, column: 26, scope: !11269)
!11340 = !DILocation(line: 4395, column: 1, scope: !11269)
!11341 = distinct !DISubprogram(name: "ips_send_cmd", scope: !3, file: !3, line: 3447, type: !8517, scopeLine: 3448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!11342 = !DILocalVariable(name: "ha", arg: 1, scope: !11341, file: !3, line: 3447, type: !5540)
!11343 = !DILocation(line: 3447, column: 25, scope: !11341)
!11344 = !DILocalVariable(name: "scb", arg: 2, scope: !11341, file: !3, line: 3447, type: !4848)
!11345 = !DILocation(line: 3447, column: 41, scope: !11341)
!11346 = !DILocalVariable(name: "ret", scope: !11341, file: !3, line: 3449, type: !182)
!11347 = !DILocation(line: 3449, column: 6, scope: !11341)
!11348 = !DILocalVariable(name: "sp", scope: !11341, file: !3, line: 3450, type: !196)
!11349 = !DILocation(line: 3450, column: 8, scope: !11341)
!11350 = !DILocalVariable(name: "device_error", scope: !11341, file: !3, line: 3451, type: !182)
!11351 = !DILocation(line: 3451, column: 6, scope: !11341)
!11352 = !DILocalVariable(name: "tapeDCDB", scope: !11341, file: !3, line: 3452, type: !199)
!11353 = !DILocation(line: 3452, column: 23, scope: !11341)
!11354 = !DILocalVariable(name: "TimeOut", scope: !11341, file: !3, line: 3453, type: !182)
!11355 = !DILocation(line: 3453, column: 6, scope: !11341)
!11356 = !DILocation(line: 3457, column: 6, scope: !11341)
!11357 = !DILocation(line: 3459, column: 7, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 3459, column: 6)
!11359 = !DILocation(line: 3459, column: 12, scope: !11358)
!11360 = !DILocation(line: 3459, column: 6, scope: !11341)
!11361 = !DILocation(line: 3462, column: 7, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3462, column: 7)
!11363 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 3459, column: 22)
!11364 = !DILocation(line: 3462, column: 12, scope: !11362)
!11365 = !DILocation(line: 3462, column: 16, scope: !11362)
!11366 = !DILocation(line: 3462, column: 7, scope: !11363)
!11367 = !DILocation(line: 3465, column: 9, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 3465, column: 8)
!11369 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 3462, column: 21)
!11370 = !DILocation(line: 3465, column: 13, scope: !11368)
!11371 = !DILocation(line: 3465, column: 22, scope: !11368)
!11372 = !DILocation(line: 3465, column: 31, scope: !11368)
!11373 = !DILocation(line: 3466, column: 9, scope: !11368)
!11374 = !DILocation(line: 3466, column: 13, scope: !11368)
!11375 = !DILocation(line: 3466, column: 32, scope: !11368)
!11376 = !DILocation(line: 3466, column: 37, scope: !11368)
!11377 = !DILocation(line: 3466, column: 29, scope: !11368)
!11378 = !DILocation(line: 3465, column: 8, scope: !11369)
!11379 = !DILocation(line: 3467, column: 5, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 3466, column: 46)
!11381 = !DILocation(line: 3467, column: 9, scope: !11380)
!11382 = !DILocation(line: 3467, column: 18, scope: !11380)
!11383 = !DILocation(line: 3468, column: 4, scope: !11380)
!11384 = !DILocation(line: 3470, column: 4, scope: !11369)
!11385 = !DILocation(line: 3472, column: 2, scope: !11363)
!11386 = !DILocation(line: 3472, column: 14, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 3472, column: 13)
!11388 = !DILocation(line: 3472, column: 19, scope: !11387)
!11389 = !DILocation(line: 3472, column: 23, scope: !11387)
!11390 = !DILocation(line: 3472, column: 29, scope: !11387)
!11391 = !DILocation(line: 3472, column: 50, scope: !11387)
!11392 = !DILocation(line: 3472, column: 55, scope: !11387)
!11393 = !DILocation(line: 3472, column: 34, scope: !11387)
!11394 = !DILocation(line: 3472, column: 13, scope: !11358)
!11395 = !DILocation(line: 3474, column: 7, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 3472, column: 67)
!11397 = !DILocation(line: 3476, column: 11, scope: !11396)
!11398 = !DILocation(line: 3476, column: 16, scope: !11396)
!11399 = !DILocation(line: 3476, column: 26, scope: !11396)
!11400 = !DILocation(line: 3476, column: 3, scope: !11396)
!11401 = !DILocation(line: 3482, column: 4, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11396, file: !3, line: 3476, column: 35)
!11403 = !DILocation(line: 3482, column: 9, scope: !11402)
!11404 = !DILocation(line: 3482, column: 19, scope: !11402)
!11405 = !DILocation(line: 3482, column: 26, scope: !11402)
!11406 = !DILocation(line: 3483, column: 4, scope: !11402)
!11407 = !DILocation(line: 3486, column: 4, scope: !11402)
!11408 = !DILocation(line: 3486, column: 9, scope: !11402)
!11409 = !DILocation(line: 3486, column: 19, scope: !11402)
!11410 = !DILocation(line: 3486, column: 26, scope: !11402)
!11411 = !DILocation(line: 3487, column: 4, scope: !11402)
!11412 = !DILocation(line: 3491, column: 8, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3491, column: 8)
!11414 = !DILocation(line: 3491, column: 13, scope: !11413)
!11415 = !DILocation(line: 3491, column: 23, scope: !11413)
!11416 = !DILocation(line: 3491, column: 8, scope: !11402)
!11417 = !DILocation(line: 3496, column: 9, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 3496, column: 9)
!11419 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 3491, column: 42)
!11420 = !DILocation(line: 3496, column: 14, scope: !11418)
!11421 = !DILocation(line: 3496, column: 24, scope: !11418)
!11422 = !DILocation(line: 3496, column: 32, scope: !11418)
!11423 = !DILocation(line: 3496, column: 9, scope: !11419)
!11424 = !DILocation(line: 3497, column: 6, scope: !11418)
!11425 = !DILocation(line: 3497, column: 11, scope: !11418)
!11426 = !DILocation(line: 3497, column: 21, scope: !11418)
!11427 = !DILocation(line: 3497, column: 28, scope: !11418)
!11428 = !DILocation(line: 3499, column: 9, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 3499, column: 9)
!11430 = !DILocation(line: 3499, column: 14, scope: !11429)
!11431 = !DILocation(line: 3499, column: 24, scope: !11429)
!11432 = !DILocation(line: 3499, column: 32, scope: !11429)
!11433 = !DILocation(line: 3499, column: 9, scope: !11419)
!11434 = !DILocalVariable(name: "inquiry", scope: !11435, file: !3, line: 3500, type: !11436)
!11435 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 3499, column: 44)
!11436 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_INQ_DATA", file: !201, line: 809, baseType: !11437)
!11437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 797, size: 296, elements: !11438)
!11438 = !{!11439, !11440, !11441, !11442, !11443, !11444, !11445, !11446, !11447, !11448, !11449}
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !11437, file: !201, line: 798, baseType: !205, size: 8)
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceTypeQualifier", scope: !11437, file: !201, line: 799, baseType: !205, size: 8, offset: 8)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "Version", scope: !11437, file: !201, line: 800, baseType: !205, size: 8, offset: 16)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "ResponseDataFormat", scope: !11437, file: !201, line: 801, baseType: !205, size: 8, offset: 24)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "AdditionalLength", scope: !11437, file: !201, line: 802, baseType: !205, size: 8, offset: 32)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !11437, file: !201, line: 803, baseType: !205, size: 8, offset: 40)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", scope: !11437, file: !201, line: 804, baseType: !8934, size: 16, offset: 48)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "VendorId", scope: !11437, file: !201, line: 805, baseType: !5656, size: 64, offset: 64)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "ProductId", scope: !11437, file: !201, line: 806, baseType: !221, size: 128, offset: 128)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "ProductRevisionLevel", scope: !11437, file: !201, line: 807, baseType: !4986, size: 32, offset: 256)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !11437, file: !201, line: 808, baseType: !205, size: 8, offset: 288)
!11450 = !DILocation(line: 3500, column: 24, scope: !11435)
!11451 = !DILocation(line: 3502, column: 6, scope: !11435)
!11452 = !DILocation(line: 3505, column: 14, scope: !11435)
!11453 = !DILocation(line: 3505, column: 25, scope: !11435)
!11454 = !DILocation(line: 3507, column: 14, scope: !11435)
!11455 = !DILocation(line: 3507, column: 34, scope: !11435)
!11456 = !DILocation(line: 3509, column: 14, scope: !11435)
!11457 = !DILocation(line: 3509, column: 22, scope: !11435)
!11458 = !DILocation(line: 3510, column: 14, scope: !11435)
!11459 = !DILocation(line: 3510, column: 33, scope: !11435)
!11460 = !DILocation(line: 3512, column: 14, scope: !11435)
!11461 = !DILocation(line: 3512, column: 31, scope: !11435)
!11462 = !DILocation(line: 3513, column: 14, scope: !11435)
!11463 = !DILocation(line: 3513, column: 6, scope: !11435)
!11464 = !DILocation(line: 3513, column: 23, scope: !11435)
!11465 = !DILocation(line: 3515, column: 14, scope: !11435)
!11466 = !DILocation(line: 3515, column: 6, scope: !11435)
!11467 = !DILocation(line: 3515, column: 23, scope: !11435)
!11468 = !DILocation(line: 3518, column: 21, scope: !11435)
!11469 = !DILocation(line: 3518, column: 6, scope: !11435)
!11470 = !DILocation(line: 3520, column: 21, scope: !11435)
!11471 = !DILocation(line: 3520, column: 6, scope: !11435)
!11472 = !DILocation(line: 3522, column: 21, scope: !11435)
!11473 = !DILocation(line: 3522, column: 6, scope: !11435)
!11474 = !DILocation(line: 3525, column: 25, scope: !11435)
!11475 = !DILocation(line: 3525, column: 30, scope: !11435)
!11476 = !DILocation(line: 3526, column: 11, scope: !11435)
!11477 = !DILocation(line: 3525, column: 6, scope: !11435)
!11478 = !DILocation(line: 3529, column: 6, scope: !11435)
!11479 = !DILocation(line: 3529, column: 11, scope: !11435)
!11480 = !DILocation(line: 3529, column: 21, scope: !11435)
!11481 = !DILocation(line: 3529, column: 28, scope: !11435)
!11482 = !DILocation(line: 3530, column: 5, scope: !11435)
!11483 = !DILocation(line: 3531, column: 4, scope: !11419)
!11484 = !DILocation(line: 3532, column: 5, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 3531, column: 11)
!11486 = !DILocation(line: 3532, column: 10, scope: !11485)
!11487 = !DILocation(line: 3532, column: 14, scope: !11485)
!11488 = !DILocation(line: 3532, column: 27, scope: !11485)
!11489 = !DILocation(line: 3532, column: 35, scope: !11485)
!11490 = !DILocation(line: 3533, column: 40, scope: !11485)
!11491 = !DILocation(line: 3533, column: 5, scope: !11485)
!11492 = !DILocation(line: 3533, column: 10, scope: !11485)
!11493 = !DILocation(line: 3533, column: 14, scope: !11485)
!11494 = !DILocation(line: 3533, column: 27, scope: !11485)
!11495 = !DILocation(line: 3533, column: 38, scope: !11485)
!11496 = !DILocation(line: 3534, column: 5, scope: !11485)
!11497 = !DILocation(line: 3534, column: 10, scope: !11485)
!11498 = !DILocation(line: 3534, column: 14, scope: !11485)
!11499 = !DILocation(line: 3534, column: 27, scope: !11485)
!11500 = !DILocation(line: 3534, column: 36, scope: !11485)
!11501 = !DILocation(line: 3535, column: 5, scope: !11485)
!11502 = !DILocation(line: 3535, column: 10, scope: !11485)
!11503 = !DILocation(line: 3535, column: 14, scope: !11485)
!11504 = !DILocation(line: 3535, column: 27, scope: !11485)
!11505 = !DILocation(line: 3535, column: 37, scope: !11485)
!11506 = !DILocation(line: 3536, column: 5, scope: !11485)
!11507 = !DILocation(line: 3536, column: 10, scope: !11485)
!11508 = !DILocation(line: 3536, column: 19, scope: !11485)
!11509 = !DILocation(line: 3537, column: 25, scope: !11485)
!11510 = !DILocation(line: 3537, column: 29, scope: !11485)
!11511 = !DILocation(line: 3537, column: 5, scope: !11485)
!11512 = !DILocation(line: 3537, column: 10, scope: !11485)
!11513 = !DILocation(line: 3537, column: 23, scope: !11485)
!11514 = !DILocation(line: 3538, column: 5, scope: !11485)
!11515 = !DILocation(line: 3538, column: 10, scope: !11485)
!11516 = !DILocation(line: 3538, column: 16, scope: !11485)
!11517 = !DILocation(line: 3539, column: 41, scope: !11485)
!11518 = !DILocation(line: 3539, column: 46, scope: !11485)
!11519 = !DILocation(line: 3539, column: 5, scope: !11485)
!11520 = !DILocation(line: 3539, column: 10, scope: !11485)
!11521 = !DILocation(line: 3539, column: 14, scope: !11485)
!11522 = !DILocation(line: 3539, column: 27, scope: !11485)
!11523 = !DILocation(line: 3539, column: 39, scope: !11485)
!11524 = !DILocation(line: 3540, column: 9, scope: !11485)
!11525 = !DILocation(line: 3543, column: 4, scope: !11402)
!11526 = !DILocation(line: 3546, column: 15, scope: !11402)
!11527 = !DILocation(line: 3546, column: 19, scope: !11402)
!11528 = !DILocation(line: 3546, column: 4, scope: !11402)
!11529 = !DILocation(line: 3547, column: 4, scope: !11402)
!11530 = !DILocation(line: 3547, column: 9, scope: !11402)
!11531 = !DILocation(line: 3547, column: 19, scope: !11402)
!11532 = !DILocation(line: 3547, column: 26, scope: !11402)
!11533 = !DILocation(line: 3548, column: 4, scope: !11402)
!11534 = !DILocation(line: 3552, column: 9, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3552, column: 8)
!11536 = !DILocation(line: 3552, column: 14, scope: !11535)
!11537 = !DILocation(line: 3552, column: 8, scope: !11402)
!11538 = !DILocation(line: 3554, column: 10, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 3552, column: 22)
!11540 = !DILocation(line: 3554, column: 15, scope: !11539)
!11541 = !DILocation(line: 3554, column: 25, scope: !11539)
!11542 = !DILocation(line: 3554, column: 33, scope: !11539)
!11543 = !DILocation(line: 3554, column: 9, scope: !11539)
!11544 = !DILocation(line: 3553, column: 5, scope: !11539)
!11545 = !DILocation(line: 3553, column: 10, scope: !11539)
!11546 = !DILocation(line: 3553, column: 14, scope: !11539)
!11547 = !DILocation(line: 3553, column: 23, scope: !11539)
!11548 = !DILocation(line: 3553, column: 31, scope: !11539)
!11549 = !DILocation(line: 3556, column: 5, scope: !11539)
!11550 = !DILocation(line: 3556, column: 10, scope: !11539)
!11551 = !DILocation(line: 3556, column: 14, scope: !11539)
!11552 = !DILocation(line: 3556, column: 23, scope: !11539)
!11553 = !DILocation(line: 3556, column: 35, scope: !11539)
!11554 = !DILocation(line: 3558, column: 9, scope: !11539)
!11555 = !DILocation(line: 3557, column: 5, scope: !11539)
!11556 = !DILocation(line: 3557, column: 10, scope: !11539)
!11557 = !DILocation(line: 3557, column: 14, scope: !11539)
!11558 = !DILocation(line: 3557, column: 23, scope: !11539)
!11559 = !DILocation(line: 3557, column: 31, scope: !11539)
!11560 = !DILocation(line: 3559, column: 4, scope: !11539)
!11561 = !DILocation(line: 3561, column: 10, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 3559, column: 11)
!11563 = !DILocation(line: 3561, column: 15, scope: !11562)
!11564 = !DILocation(line: 3561, column: 25, scope: !11562)
!11565 = !DILocation(line: 3561, column: 33, scope: !11562)
!11566 = !DILocation(line: 3561, column: 9, scope: !11562)
!11567 = !DILocation(line: 3560, column: 5, scope: !11562)
!11568 = !DILocation(line: 3560, column: 10, scope: !11562)
!11569 = !DILocation(line: 3560, column: 14, scope: !11562)
!11570 = !DILocation(line: 3560, column: 23, scope: !11562)
!11571 = !DILocation(line: 3560, column: 31, scope: !11562)
!11572 = !DILocation(line: 3565, column: 9, scope: !11562)
!11573 = !DILocation(line: 3564, column: 5, scope: !11562)
!11574 = !DILocation(line: 3564, column: 10, scope: !11562)
!11575 = !DILocation(line: 3564, column: 14, scope: !11562)
!11576 = !DILocation(line: 3564, column: 23, scope: !11562)
!11577 = !DILocation(line: 3564, column: 35, scope: !11562)
!11578 = !DILocation(line: 3567, column: 9, scope: !11562)
!11579 = !DILocation(line: 3566, column: 5, scope: !11562)
!11580 = !DILocation(line: 3566, column: 10, scope: !11562)
!11581 = !DILocation(line: 3566, column: 14, scope: !11562)
!11582 = !DILocation(line: 3566, column: 23, scope: !11562)
!11583 = !DILocation(line: 3566, column: 31, scope: !11562)
!11584 = !DILocation(line: 3570, column: 4, scope: !11402)
!11585 = !DILocation(line: 3570, column: 9, scope: !11402)
!11586 = !DILocation(line: 3570, column: 13, scope: !11402)
!11587 = !DILocation(line: 3570, column: 22, scope: !11402)
!11588 = !DILocation(line: 3570, column: 33, scope: !11402)
!11589 = !DILocation(line: 3571, column: 35, scope: !11402)
!11590 = !DILocation(line: 3571, column: 4, scope: !11402)
!11591 = !DILocation(line: 3571, column: 9, scope: !11402)
!11592 = !DILocation(line: 3571, column: 13, scope: !11402)
!11593 = !DILocation(line: 3571, column: 22, scope: !11402)
!11594 = !DILocation(line: 3571, column: 33, scope: !11402)
!11595 = !DILocation(line: 3572, column: 32, scope: !11402)
!11596 = !DILocation(line: 3572, column: 37, scope: !11402)
!11597 = !DILocation(line: 3572, column: 4, scope: !11402)
!11598 = !DILocation(line: 3572, column: 9, scope: !11402)
!11599 = !DILocation(line: 3572, column: 13, scope: !11402)
!11600 = !DILocation(line: 3572, column: 22, scope: !11402)
!11601 = !DILocation(line: 3572, column: 30, scope: !11402)
!11602 = !DILocation(line: 3573, column: 33, scope: !11402)
!11603 = !DILocation(line: 3573, column: 38, scope: !11402)
!11604 = !DILocation(line: 3573, column: 4, scope: !11402)
!11605 = !DILocation(line: 3573, column: 9, scope: !11402)
!11606 = !DILocation(line: 3573, column: 13, scope: !11402)
!11607 = !DILocation(line: 3573, column: 22, scope: !11402)
!11608 = !DILocation(line: 3573, column: 31, scope: !11402)
!11609 = !DILocation(line: 3575, column: 8, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3575, column: 8)
!11611 = !DILocation(line: 3575, column: 13, scope: !11610)
!11612 = !DILocation(line: 3575, column: 17, scope: !11610)
!11613 = !DILocation(line: 3575, column: 26, scope: !11610)
!11614 = !DILocation(line: 3575, column: 8, scope: !11402)
!11615 = !DILocation(line: 3576, column: 19, scope: !11610)
!11616 = !DILocation(line: 3576, column: 24, scope: !11610)
!11617 = !DILocation(line: 3576, column: 28, scope: !11610)
!11618 = !DILocation(line: 3576, column: 37, scope: !11610)
!11619 = !DILocation(line: 3577, column: 7, scope: !11610)
!11620 = !DILocation(line: 3576, column: 5, scope: !11610)
!11621 = !DILocation(line: 3581, column: 12, scope: !11610)
!11622 = !DILocation(line: 3581, column: 17, scope: !11610)
!11623 = !DILocation(line: 3582, column: 12, scope: !11610)
!11624 = !DILocation(line: 3582, column: 20, scope: !11610)
!11625 = !DILocation(line: 3582, column: 28, scope: !11610)
!11626 = !DILocation(line: 3582, column: 38, scope: !11610)
!11627 = !DILocation(line: 3582, column: 43, scope: !11610)
!11628 = !DILocation(line: 3583, column: 10, scope: !11610)
!11629 = !DILocation(line: 3583, column: 18, scope: !11610)
!11630 = !DILocation(line: 3582, column: 35, scope: !11610)
!11631 = !DILocation(line: 3584, column: 11, scope: !11610)
!11632 = !DILocation(line: 3584, column: 16, scope: !11610)
!11633 = !DILocation(line: 3584, column: 26, scope: !11610)
!11634 = !DILocation(line: 3584, column: 10, scope: !11610)
!11635 = !DILocation(line: 3583, column: 24, scope: !11610)
!11636 = !DILocation(line: 3580, column: 5, scope: !11610)
!11637 = !DILocation(line: 3580, column: 10, scope: !11610)
!11638 = !DILocation(line: 3580, column: 14, scope: !11610)
!11639 = !DILocation(line: 3580, column: 23, scope: !11610)
!11640 = !DILocation(line: 3580, column: 27, scope: !11610)
!11641 = !DILocation(line: 3587, column: 8, scope: !11402)
!11642 = !DILocation(line: 3586, column: 4, scope: !11402)
!11643 = !DILocation(line: 3586, column: 9, scope: !11402)
!11644 = !DILocation(line: 3586, column: 13, scope: !11402)
!11645 = !DILocation(line: 3586, column: 22, scope: !11402)
!11646 = !DILocation(line: 3586, column: 35, scope: !11402)
!11647 = !DILocation(line: 3589, column: 8, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3589, column: 8)
!11649 = !DILocation(line: 3589, column: 52, scope: !11648)
!11650 = !DILocation(line: 3589, column: 8, scope: !11402)
!11651 = !DILocation(line: 3590, column: 5, scope: !11648)
!11652 = !DILocation(line: 3590, column: 10, scope: !11648)
!11653 = !DILocation(line: 3590, column: 14, scope: !11648)
!11654 = !DILocation(line: 3590, column: 23, scope: !11648)
!11655 = !DILocation(line: 3590, column: 36, scope: !11648)
!11656 = !DILocation(line: 3593, column: 8, scope: !11402)
!11657 = !DILocation(line: 3594, column: 4, scope: !11402)
!11658 = !DILocation(line: 3598, column: 9, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3598, column: 8)
!11660 = !DILocation(line: 3598, column: 14, scope: !11659)
!11661 = !DILocation(line: 3598, column: 8, scope: !11402)
!11662 = !DILocation(line: 3600, column: 10, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 3598, column: 22)
!11664 = !DILocation(line: 3600, column: 15, scope: !11663)
!11665 = !DILocation(line: 3600, column: 25, scope: !11663)
!11666 = !DILocation(line: 3600, column: 33, scope: !11663)
!11667 = !DILocation(line: 3600, column: 9, scope: !11663)
!11668 = !DILocation(line: 3599, column: 5, scope: !11663)
!11669 = !DILocation(line: 3599, column: 10, scope: !11663)
!11670 = !DILocation(line: 3599, column: 14, scope: !11663)
!11671 = !DILocation(line: 3599, column: 23, scope: !11663)
!11672 = !DILocation(line: 3599, column: 31, scope: !11663)
!11673 = !DILocation(line: 3602, column: 5, scope: !11663)
!11674 = !DILocation(line: 3602, column: 10, scope: !11663)
!11675 = !DILocation(line: 3602, column: 14, scope: !11663)
!11676 = !DILocation(line: 3602, column: 23, scope: !11663)
!11677 = !DILocation(line: 3602, column: 35, scope: !11663)
!11678 = !DILocation(line: 3604, column: 9, scope: !11663)
!11679 = !DILocation(line: 3603, column: 5, scope: !11663)
!11680 = !DILocation(line: 3603, column: 10, scope: !11663)
!11681 = !DILocation(line: 3603, column: 14, scope: !11663)
!11682 = !DILocation(line: 3603, column: 23, scope: !11663)
!11683 = !DILocation(line: 3603, column: 31, scope: !11663)
!11684 = !DILocation(line: 3605, column: 4, scope: !11663)
!11685 = !DILocation(line: 3607, column: 10, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 3605, column: 11)
!11687 = !DILocation(line: 3607, column: 15, scope: !11686)
!11688 = !DILocation(line: 3607, column: 25, scope: !11686)
!11689 = !DILocation(line: 3607, column: 33, scope: !11686)
!11690 = !DILocation(line: 3607, column: 9, scope: !11686)
!11691 = !DILocation(line: 3606, column: 5, scope: !11686)
!11692 = !DILocation(line: 3606, column: 10, scope: !11686)
!11693 = !DILocation(line: 3606, column: 14, scope: !11686)
!11694 = !DILocation(line: 3606, column: 23, scope: !11686)
!11695 = !DILocation(line: 3606, column: 31, scope: !11686)
!11696 = !DILocation(line: 3611, column: 9, scope: !11686)
!11697 = !DILocation(line: 3610, column: 5, scope: !11686)
!11698 = !DILocation(line: 3610, column: 10, scope: !11686)
!11699 = !DILocation(line: 3610, column: 14, scope: !11686)
!11700 = !DILocation(line: 3610, column: 23, scope: !11686)
!11701 = !DILocation(line: 3610, column: 35, scope: !11686)
!11702 = !DILocation(line: 3613, column: 9, scope: !11686)
!11703 = !DILocation(line: 3612, column: 5, scope: !11686)
!11704 = !DILocation(line: 3612, column: 10, scope: !11686)
!11705 = !DILocation(line: 3612, column: 14, scope: !11686)
!11706 = !DILocation(line: 3612, column: 23, scope: !11686)
!11707 = !DILocation(line: 3612, column: 31, scope: !11686)
!11708 = !DILocation(line: 3616, column: 4, scope: !11402)
!11709 = !DILocation(line: 3616, column: 9, scope: !11402)
!11710 = !DILocation(line: 3616, column: 13, scope: !11402)
!11711 = !DILocation(line: 3616, column: 22, scope: !11402)
!11712 = !DILocation(line: 3616, column: 33, scope: !11402)
!11713 = !DILocation(line: 3617, column: 35, scope: !11402)
!11714 = !DILocation(line: 3617, column: 4, scope: !11402)
!11715 = !DILocation(line: 3617, column: 9, scope: !11402)
!11716 = !DILocation(line: 3617, column: 13, scope: !11402)
!11717 = !DILocation(line: 3617, column: 22, scope: !11402)
!11718 = !DILocation(line: 3617, column: 33, scope: !11402)
!11719 = !DILocation(line: 3618, column: 32, scope: !11402)
!11720 = !DILocation(line: 3618, column: 37, scope: !11402)
!11721 = !DILocation(line: 3618, column: 4, scope: !11402)
!11722 = !DILocation(line: 3618, column: 9, scope: !11402)
!11723 = !DILocation(line: 3618, column: 13, scope: !11402)
!11724 = !DILocation(line: 3618, column: 22, scope: !11402)
!11725 = !DILocation(line: 3618, column: 30, scope: !11402)
!11726 = !DILocation(line: 3619, column: 33, scope: !11402)
!11727 = !DILocation(line: 3619, column: 38, scope: !11402)
!11728 = !DILocation(line: 3619, column: 4, scope: !11402)
!11729 = !DILocation(line: 3619, column: 9, scope: !11402)
!11730 = !DILocation(line: 3619, column: 13, scope: !11402)
!11731 = !DILocation(line: 3619, column: 22, scope: !11402)
!11732 = !DILocation(line: 3619, column: 31, scope: !11402)
!11733 = !DILocation(line: 3621, column: 8, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3621, column: 8)
!11735 = !DILocation(line: 3621, column: 13, scope: !11734)
!11736 = !DILocation(line: 3621, column: 17, scope: !11734)
!11737 = !DILocation(line: 3621, column: 26, scope: !11734)
!11738 = !DILocation(line: 3621, column: 8, scope: !11402)
!11739 = !DILocation(line: 3622, column: 19, scope: !11734)
!11740 = !DILocation(line: 3622, column: 24, scope: !11734)
!11741 = !DILocation(line: 3622, column: 28, scope: !11734)
!11742 = !DILocation(line: 3622, column: 37, scope: !11734)
!11743 = !DILocation(line: 3623, column: 7, scope: !11734)
!11744 = !DILocation(line: 3622, column: 5, scope: !11734)
!11745 = !DILocation(line: 3627, column: 11, scope: !11734)
!11746 = !DILocation(line: 3627, column: 16, scope: !11734)
!11747 = !DILocation(line: 3627, column: 26, scope: !11734)
!11748 = !DILocation(line: 3627, column: 34, scope: !11734)
!11749 = !DILocation(line: 3627, column: 44, scope: !11734)
!11750 = !DILocation(line: 3628, column: 16, scope: !11734)
!11751 = !DILocation(line: 3629, column: 16, scope: !11734)
!11752 = !DILocation(line: 3630, column: 16, scope: !11734)
!11753 = !DILocation(line: 3627, column: 41, scope: !11734)
!11754 = !DILocation(line: 3631, column: 11, scope: !11734)
!11755 = !DILocation(line: 3631, column: 16, scope: !11734)
!11756 = !DILocation(line: 3631, column: 26, scope: !11734)
!11757 = !DILocation(line: 3631, column: 34, scope: !11734)
!11758 = !DILocation(line: 3630, column: 23, scope: !11734)
!11759 = !DILocation(line: 3631, column: 42, scope: !11734)
!11760 = !DILocation(line: 3632, column: 10, scope: !11734)
!11761 = !DILocation(line: 3632, column: 20, scope: !11734)
!11762 = !DILocation(line: 3631, column: 40, scope: !11734)
!11763 = !DILocation(line: 3626, column: 5, scope: !11734)
!11764 = !DILocation(line: 3626, column: 10, scope: !11734)
!11765 = !DILocation(line: 3626, column: 14, scope: !11734)
!11766 = !DILocation(line: 3626, column: 23, scope: !11734)
!11767 = !DILocation(line: 3626, column: 27, scope: !11734)
!11768 = !DILocation(line: 3635, column: 8, scope: !11402)
!11769 = !DILocation(line: 3634, column: 4, scope: !11402)
!11770 = !DILocation(line: 3634, column: 9, scope: !11402)
!11771 = !DILocation(line: 3634, column: 13, scope: !11402)
!11772 = !DILocation(line: 3634, column: 22, scope: !11402)
!11773 = !DILocation(line: 3634, column: 35, scope: !11402)
!11774 = !DILocation(line: 3637, column: 8, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3637, column: 8)
!11776 = !DILocation(line: 3637, column: 52, scope: !11775)
!11777 = !DILocation(line: 3637, column: 8, scope: !11402)
!11778 = !DILocation(line: 3643, column: 5, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 3637, column: 58)
!11780 = !DILocation(line: 3643, column: 10, scope: !11779)
!11781 = !DILocation(line: 3643, column: 20, scope: !11779)
!11782 = !DILocation(line: 3643, column: 27, scope: !11779)
!11783 = !DILocation(line: 3644, column: 4, scope: !11779)
!11784 = !DILocation(line: 3645, column: 9, scope: !11775)
!11785 = !DILocation(line: 3647, column: 4, scope: !11402)
!11786 = !DILocation(line: 3651, column: 4, scope: !11402)
!11787 = !DILocation(line: 3651, column: 9, scope: !11402)
!11788 = !DILocation(line: 3651, column: 19, scope: !11402)
!11789 = !DILocation(line: 3651, column: 26, scope: !11402)
!11790 = !DILocation(line: 3652, column: 4, scope: !11402)
!11791 = !DILocation(line: 3655, column: 4, scope: !11402)
!11792 = !DILocation(line: 3655, column: 9, scope: !11402)
!11793 = !DILocation(line: 3655, column: 13, scope: !11402)
!11794 = !DILocation(line: 3655, column: 22, scope: !11402)
!11795 = !DILocation(line: 3655, column: 30, scope: !11402)
!11796 = !DILocation(line: 3656, column: 35, scope: !11402)
!11797 = !DILocation(line: 3656, column: 4, scope: !11402)
!11798 = !DILocation(line: 3656, column: 9, scope: !11402)
!11799 = !DILocation(line: 3656, column: 13, scope: !11402)
!11800 = !DILocation(line: 3656, column: 22, scope: !11402)
!11801 = !DILocation(line: 3656, column: 33, scope: !11402)
!11802 = !DILocation(line: 3657, column: 4, scope: !11402)
!11803 = !DILocation(line: 3657, column: 9, scope: !11402)
!11804 = !DILocation(line: 3657, column: 13, scope: !11402)
!11805 = !DILocation(line: 3657, column: 22, scope: !11402)
!11806 = !DILocation(line: 3657, column: 33, scope: !11402)
!11807 = !DILocation(line: 3658, column: 4, scope: !11402)
!11808 = !DILocation(line: 3658, column: 9, scope: !11402)
!11809 = !DILocation(line: 3658, column: 13, scope: !11402)
!11810 = !DILocation(line: 3658, column: 22, scope: !11402)
!11811 = !DILocation(line: 3658, column: 34, scope: !11402)
!11812 = !DILocation(line: 3659, column: 4, scope: !11402)
!11813 = !DILocation(line: 3659, column: 9, scope: !11402)
!11814 = !DILocation(line: 3659, column: 18, scope: !11402)
!11815 = !DILocation(line: 3660, column: 32, scope: !11402)
!11816 = !DILocation(line: 3660, column: 36, scope: !11402)
!11817 = !DILocation(line: 3660, column: 4, scope: !11402)
!11818 = !DILocation(line: 3660, column: 9, scope: !11402)
!11819 = !DILocation(line: 3660, column: 13, scope: !11402)
!11820 = !DILocation(line: 3660, column: 22, scope: !11402)
!11821 = !DILocation(line: 3660, column: 30, scope: !11402)
!11822 = !DILocation(line: 3661, column: 8, scope: !11402)
!11823 = !DILocation(line: 3662, column: 4, scope: !11402)
!11824 = !DILocation(line: 3665, column: 4, scope: !11402)
!11825 = !DILocation(line: 3665, column: 9, scope: !11402)
!11826 = !DILocation(line: 3665, column: 13, scope: !11402)
!11827 = !DILocation(line: 3665, column: 26, scope: !11402)
!11828 = !DILocation(line: 3665, column: 34, scope: !11402)
!11829 = !DILocation(line: 3666, column: 39, scope: !11402)
!11830 = !DILocation(line: 3666, column: 4, scope: !11402)
!11831 = !DILocation(line: 3666, column: 9, scope: !11402)
!11832 = !DILocation(line: 3666, column: 13, scope: !11402)
!11833 = !DILocation(line: 3666, column: 26, scope: !11402)
!11834 = !DILocation(line: 3666, column: 37, scope: !11402)
!11835 = !DILocation(line: 3667, column: 4, scope: !11402)
!11836 = !DILocation(line: 3667, column: 9, scope: !11402)
!11837 = !DILocation(line: 3667, column: 13, scope: !11402)
!11838 = !DILocation(line: 3667, column: 26, scope: !11402)
!11839 = !DILocation(line: 3667, column: 35, scope: !11402)
!11840 = !DILocation(line: 3668, column: 4, scope: !11402)
!11841 = !DILocation(line: 3668, column: 9, scope: !11402)
!11842 = !DILocation(line: 3668, column: 13, scope: !11402)
!11843 = !DILocation(line: 3668, column: 26, scope: !11402)
!11844 = !DILocation(line: 3668, column: 36, scope: !11402)
!11845 = !DILocation(line: 3669, column: 4, scope: !11402)
!11846 = !DILocation(line: 3669, column: 9, scope: !11402)
!11847 = !DILocation(line: 3669, column: 13, scope: !11402)
!11848 = !DILocation(line: 3669, column: 26, scope: !11402)
!11849 = !DILocation(line: 3669, column: 36, scope: !11402)
!11850 = !DILocation(line: 3670, column: 4, scope: !11402)
!11851 = !DILocation(line: 3670, column: 9, scope: !11402)
!11852 = !DILocation(line: 3670, column: 18, scope: !11402)
!11853 = !DILocation(line: 3671, column: 24, scope: !11402)
!11854 = !DILocation(line: 3671, column: 28, scope: !11402)
!11855 = !DILocation(line: 3671, column: 4, scope: !11402)
!11856 = !DILocation(line: 3671, column: 9, scope: !11402)
!11857 = !DILocation(line: 3671, column: 22, scope: !11402)
!11858 = !DILocation(line: 3672, column: 4, scope: !11402)
!11859 = !DILocation(line: 3672, column: 9, scope: !11402)
!11860 = !DILocation(line: 3672, column: 15, scope: !11402)
!11861 = !DILocation(line: 3673, column: 40, scope: !11402)
!11862 = !DILocation(line: 3673, column: 45, scope: !11402)
!11863 = !DILocation(line: 3673, column: 4, scope: !11402)
!11864 = !DILocation(line: 3673, column: 9, scope: !11402)
!11865 = !DILocation(line: 3673, column: 13, scope: !11402)
!11866 = !DILocation(line: 3673, column: 26, scope: !11402)
!11867 = !DILocation(line: 3673, column: 38, scope: !11402)
!11868 = !DILocation(line: 3674, column: 8, scope: !11402)
!11869 = !DILocation(line: 3675, column: 4, scope: !11402)
!11870 = !DILocation(line: 3685, column: 4, scope: !11402)
!11871 = !DILocation(line: 3685, column: 9, scope: !11402)
!11872 = !DILocation(line: 3685, column: 19, scope: !11402)
!11873 = !DILocation(line: 3685, column: 26, scope: !11402)
!11874 = !DILocation(line: 3686, column: 4, scope: !11402)
!11875 = !DILocation(line: 3692, column: 18, scope: !11402)
!11876 = !DILocation(line: 3692, column: 23, scope: !11402)
!11877 = !DILocation(line: 3692, column: 33, scope: !11402)
!11878 = !DILocation(line: 3692, column: 7, scope: !11402)
!11879 = !DILocation(line: 3694, column: 4, scope: !11402)
!11880 = !DILocation(line: 3694, column: 10, scope: !11402)
!11881 = !DILocation(line: 3695, column: 4, scope: !11402)
!11882 = !DILocation(line: 3695, column: 10, scope: !11402)
!11883 = !DILocation(line: 3696, column: 4, scope: !11402)
!11884 = !DILocation(line: 3696, column: 10, scope: !11402)
!11885 = !DILocation(line: 3697, column: 4, scope: !11402)
!11886 = !DILocation(line: 3697, column: 11, scope: !11402)
!11887 = !DILocation(line: 3698, column: 4, scope: !11402)
!11888 = !DILocation(line: 3698, column: 11, scope: !11402)
!11889 = !DILocation(line: 3700, column: 17, scope: !11402)
!11890 = !DILocation(line: 3701, column: 28, scope: !11402)
!11891 = !DILocation(line: 3701, column: 4, scope: !11402)
!11892 = !DILocation(line: 3701, column: 9, scope: !11402)
!11893 = !DILocation(line: 3701, column: 19, scope: !11402)
!11894 = !DILocation(line: 3701, column: 26, scope: !11402)
!11895 = !DILocation(line: 3702, column: 4, scope: !11402)
!11896 = !DILocation(line: 3704, column: 2, scope: !11396)
!11897 = !DILocation(line: 3706, column: 6, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 3706, column: 6)
!11899 = !DILocation(line: 3706, column: 10, scope: !11898)
!11900 = !DILocation(line: 3706, column: 6, scope: !11341)
!11901 = !DILocation(line: 3707, column: 11, scope: !11898)
!11902 = !DILocation(line: 3707, column: 3, scope: !11898)
!11903 = !DILocation(line: 3710, column: 6, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 3710, column: 6)
!11905 = !DILocation(line: 3710, column: 11, scope: !11904)
!11906 = !DILocation(line: 3710, column: 15, scope: !11904)
!11907 = !DILocation(line: 3710, column: 6, scope: !11341)
!11908 = !DILocation(line: 3714, column: 7, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 3714, column: 7)
!11910 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 3710, column: 20)
!11911 = !DILocation(line: 3714, column: 11, scope: !11909)
!11912 = !DILocation(line: 3714, column: 17, scope: !11909)
!11913 = !DILocation(line: 3714, column: 21, scope: !11909)
!11914 = !DILocation(line: 3714, column: 26, scope: !11909)
!11915 = !DILocation(line: 3714, column: 30, scope: !11909)
!11916 = !DILocation(line: 3714, column: 35, scope: !11909)
!11917 = !DILocation(line: 3714, column: 40, scope: !11909)
!11918 = !DILocation(line: 3714, column: 51, scope: !11909)
!11919 = !DILocation(line: 3714, column: 59, scope: !11909)
!11920 = !DILocation(line: 3714, column: 7, scope: !11910)
!11921 = !DILocation(line: 3715, column: 4, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 3714, column: 65)
!11923 = !DILocation(line: 3715, column: 9, scope: !11922)
!11924 = !DILocation(line: 3715, column: 19, scope: !11922)
!11925 = !DILocation(line: 3715, column: 26, scope: !11922)
!11926 = !DILocation(line: 3716, column: 4, scope: !11922)
!11927 = !DILocation(line: 3719, column: 42, scope: !11910)
!11928 = !DILocation(line: 3719, column: 47, scope: !11910)
!11929 = !DILocation(line: 3719, column: 39, scope: !11910)
!11930 = !DILocation(line: 3719, column: 3, scope: !11910)
!11931 = !DILocation(line: 3719, column: 7, scope: !11910)
!11932 = !DILocation(line: 3719, column: 19, scope: !11910)
!11933 = !DILocation(line: 3719, column: 24, scope: !11910)
!11934 = !DILocation(line: 3719, column: 28, scope: !11910)
!11935 = !DILocation(line: 3719, column: 33, scope: !11910)
!11936 = !DILocation(line: 3720, column: 30, scope: !11910)
!11937 = !DILocation(line: 3720, column: 3, scope: !11910)
!11938 = !DILocation(line: 3720, column: 8, scope: !11910)
!11939 = !DILocation(line: 3720, column: 12, scope: !11910)
!11940 = !DILocation(line: 3720, column: 17, scope: !11910)
!11941 = !DILocation(line: 3720, column: 28, scope: !11910)
!11942 = !DILocation(line: 3721, column: 32, scope: !11910)
!11943 = !DILocation(line: 3721, column: 3, scope: !11910)
!11944 = !DILocation(line: 3721, column: 8, scope: !11910)
!11945 = !DILocation(line: 3721, column: 12, scope: !11910)
!11946 = !DILocation(line: 3721, column: 17, scope: !11910)
!11947 = !DILocation(line: 3721, column: 30, scope: !11910)
!11948 = !DILocation(line: 3725, column: 3, scope: !11910)
!11949 = !DILocation(line: 3725, column: 8, scope: !11910)
!11950 = !DILocation(line: 3725, column: 12, scope: !11910)
!11951 = !DILocation(line: 3725, column: 17, scope: !11910)
!11952 = !DILocation(line: 3725, column: 26, scope: !11910)
!11953 = !DILocation(line: 3726, column: 3, scope: !11910)
!11954 = !DILocation(line: 3726, column: 8, scope: !11910)
!11955 = !DILocation(line: 3726, column: 12, scope: !11910)
!11956 = !DILocation(line: 3726, column: 17, scope: !11910)
!11957 = !DILocation(line: 3726, column: 27, scope: !11910)
!11958 = !DILocation(line: 3727, column: 3, scope: !11910)
!11959 = !DILocation(line: 3727, column: 8, scope: !11910)
!11960 = !DILocation(line: 3727, column: 12, scope: !11910)
!11961 = !DILocation(line: 3727, column: 17, scope: !11910)
!11962 = !DILocation(line: 3727, column: 27, scope: !11910)
!11963 = !DILocation(line: 3728, column: 3, scope: !11910)
!11964 = !DILocation(line: 3728, column: 8, scope: !11910)
!11965 = !DILocation(line: 3728, column: 12, scope: !11910)
!11966 = !DILocation(line: 3728, column: 17, scope: !11910)
!11967 = !DILocation(line: 3728, column: 28, scope: !11910)
!11968 = !DILocation(line: 3729, column: 3, scope: !11910)
!11969 = !DILocation(line: 3729, column: 8, scope: !11910)
!11970 = !DILocation(line: 3729, column: 12, scope: !11910)
!11971 = !DILocation(line: 3729, column: 17, scope: !11910)
!11972 = !DILocation(line: 3729, column: 29, scope: !11910)
!11973 = !DILocation(line: 3731, column: 13, scope: !11910)
!11974 = !DILocation(line: 3731, column: 18, scope: !11910)
!11975 = !DILocation(line: 3731, column: 28, scope: !11910)
!11976 = !DILocation(line: 3731, column: 37, scope: !11910)
!11977 = !DILocation(line: 3731, column: 11, scope: !11910)
!11978 = !DILocation(line: 3733, column: 7, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 3733, column: 7)
!11980 = !DILocation(line: 3733, column: 11, scope: !11979)
!11981 = !DILocation(line: 3733, column: 19, scope: !11979)
!11982 = !DILocation(line: 3733, column: 28, scope: !11979)
!11983 = !DILocation(line: 3733, column: 7, scope: !11910)
!11984 = !DILocation(line: 3734, column: 9, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 3734, column: 8)
!11986 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3733, column: 42)
!11987 = !DILocation(line: 3734, column: 14, scope: !11985)
!11988 = !DILocation(line: 3734, column: 8, scope: !11986)
!11989 = !DILocation(line: 3735, column: 5, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 3734, column: 22)
!11991 = !DILocation(line: 3735, column: 10, scope: !11990)
!11992 = !DILocation(line: 3735, column: 14, scope: !11990)
!11993 = !DILocation(line: 3735, column: 19, scope: !11990)
!11994 = !DILocation(line: 3735, column: 27, scope: !11990)
!11995 = !DILocation(line: 3736, column: 4, scope: !11990)
!11996 = !DILocation(line: 3737, column: 5, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 3736, column: 11)
!11998 = !DILocation(line: 3737, column: 10, scope: !11997)
!11999 = !DILocation(line: 3737, column: 14, scope: !11997)
!12000 = !DILocation(line: 3737, column: 19, scope: !11997)
!12001 = !DILocation(line: 3737, column: 27, scope: !11997)
!12002 = !DILocation(line: 3740, column: 9, scope: !11997)
!12003 = !DILocation(line: 3739, column: 5, scope: !11997)
!12004 = !DILocation(line: 3739, column: 10, scope: !11997)
!12005 = !DILocation(line: 3739, column: 14, scope: !11997)
!12006 = !DILocation(line: 3739, column: 19, scope: !11997)
!12007 = !DILocation(line: 3739, column: 31, scope: !11997)
!12008 = !DILocation(line: 3743, column: 41, scope: !11986)
!12009 = !DILocation(line: 3743, column: 46, scope: !11986)
!12010 = !DILocation(line: 3743, column: 15, scope: !11986)
!12011 = !DILocation(line: 3743, column: 13, scope: !11986)
!12012 = !DILocation(line: 3745, column: 10, scope: !11986)
!12013 = !DILocation(line: 3745, column: 15, scope: !11986)
!12014 = !DILocation(line: 3745, column: 19, scope: !11986)
!12015 = !DILocation(line: 3745, column: 24, scope: !11986)
!12016 = !DILocation(line: 3745, column: 32, scope: !11986)
!12017 = !DILocation(line: 3745, column: 37, scope: !11986)
!12018 = !DILocation(line: 3745, column: 30, scope: !11986)
!12019 = !DILocation(line: 3745, column: 8, scope: !11986)
!12020 = !DILocation(line: 3744, column: 4, scope: !11986)
!12021 = !DILocation(line: 3744, column: 14, scope: !11986)
!12022 = !DILocation(line: 3744, column: 29, scope: !11986)
!12023 = !DILocation(line: 3746, column: 4, scope: !11986)
!12024 = !DILocation(line: 3746, column: 14, scope: !11986)
!12025 = !DILocation(line: 3746, column: 28, scope: !11986)
!12026 = !DILocation(line: 3747, column: 4, scope: !11986)
!12027 = !DILocation(line: 3747, column: 14, scope: !11986)
!12028 = !DILocation(line: 3747, column: 28, scope: !11986)
!12029 = !DILocation(line: 3749, column: 8, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 3749, column: 8)
!12031 = !DILocation(line: 3749, column: 8, scope: !11986)
!12032 = !DILocation(line: 3750, column: 9, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 3750, column: 9)
!12034 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 3749, column: 17)
!12035 = !DILocation(line: 3750, column: 17, scope: !12033)
!12036 = !DILocation(line: 3750, column: 9, scope: !12034)
!12037 = !DILocation(line: 3751, column: 6, scope: !12033)
!12038 = !DILocation(line: 3751, column: 16, scope: !12033)
!12039 = !DILocation(line: 3751, column: 30, scope: !12033)
!12040 = !DILocation(line: 3752, column: 14, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 3752, column: 14)
!12042 = !DILocation(line: 3752, column: 22, scope: !12041)
!12043 = !DILocation(line: 3752, column: 14, scope: !12033)
!12044 = !DILocation(line: 3753, column: 6, scope: !12041)
!12045 = !DILocation(line: 3753, column: 16, scope: !12041)
!12046 = !DILocation(line: 3753, column: 30, scope: !12041)
!12047 = !DILocation(line: 3754, column: 14, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 3754, column: 14)
!12049 = !DILocation(line: 3754, column: 22, scope: !12048)
!12050 = !DILocation(line: 3754, column: 14, scope: !12041)
!12051 = !DILocation(line: 3755, column: 6, scope: !12048)
!12052 = !DILocation(line: 3755, column: 16, scope: !12048)
!12053 = !DILocation(line: 3755, column: 30, scope: !12048)
!12054 = !DILocation(line: 3756, column: 4, scope: !12034)
!12055 = !DILocation(line: 3758, column: 27, scope: !11986)
!12056 = !DILocation(line: 3758, column: 32, scope: !11986)
!12057 = !DILocation(line: 3758, column: 42, scope: !11986)
!12058 = !DILocation(line: 3758, column: 4, scope: !11986)
!12059 = !DILocation(line: 3758, column: 14, scope: !11986)
!12060 = !DILocation(line: 3758, column: 25, scope: !11986)
!12061 = !DILocation(line: 3759, column: 4, scope: !11986)
!12062 = !DILocation(line: 3759, column: 14, scope: !11986)
!12063 = !DILocation(line: 3759, column: 31, scope: !11986)
!12064 = !DILocation(line: 3760, column: 32, scope: !11986)
!12065 = !DILocation(line: 3760, column: 37, scope: !11986)
!12066 = !DILocation(line: 3760, column: 4, scope: !11986)
!12067 = !DILocation(line: 3760, column: 14, scope: !11986)
!12068 = !DILocation(line: 3760, column: 30, scope: !11986)
!12069 = !DILocation(line: 3761, column: 8, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 3761, column: 8)
!12071 = !DILocation(line: 3761, column: 13, scope: !12070)
!12072 = !DILocation(line: 3761, column: 17, scope: !12070)
!12073 = !DILocation(line: 3761, column: 22, scope: !12070)
!12074 = !DILocation(line: 3761, column: 30, scope: !12070)
!12075 = !DILocation(line: 3761, column: 8, scope: !11986)
!12076 = !DILocation(line: 3763, column: 9, scope: !12070)
!12077 = !DILocation(line: 3762, column: 5, scope: !12070)
!12078 = !DILocation(line: 3762, column: 15, scope: !12070)
!12079 = !DILocation(line: 3762, column: 30, scope: !12070)
!12080 = !DILocation(line: 3766, column: 9, scope: !12070)
!12081 = !DILocation(line: 3765, column: 5, scope: !12070)
!12082 = !DILocation(line: 3765, column: 15, scope: !12070)
!12083 = !DILocation(line: 3765, column: 30, scope: !12070)
!12084 = !DILocation(line: 3767, column: 25, scope: !11986)
!12085 = !DILocation(line: 3767, column: 30, scope: !11986)
!12086 = !DILocation(line: 3767, column: 4, scope: !11986)
!12087 = !DILocation(line: 3767, column: 14, scope: !11986)
!12088 = !DILocation(line: 3767, column: 23, scope: !11986)
!12089 = !DILocation(line: 3768, column: 4, scope: !11986)
!12090 = !DILocation(line: 3768, column: 14, scope: !11986)
!12091 = !DILocation(line: 3768, column: 27, scope: !11986)
!12092 = !DILocation(line: 3769, column: 4, scope: !11986)
!12093 = !DILocation(line: 3769, column: 14, scope: !11986)
!12094 = !DILocation(line: 3769, column: 26, scope: !11986)
!12095 = !DILocation(line: 3770, column: 4, scope: !11986)
!12096 = !DILocation(line: 3770, column: 14, scope: !11986)
!12097 = !DILocation(line: 3770, column: 23, scope: !11986)
!12098 = !DILocation(line: 3771, column: 11, scope: !11986)
!12099 = !DILocation(line: 3771, column: 21, scope: !11986)
!12100 = !DILocation(line: 3771, column: 4, scope: !11986)
!12101 = !DILocation(line: 3771, column: 31, scope: !11986)
!12102 = !DILocation(line: 3771, column: 36, scope: !11986)
!12103 = !DILocation(line: 3771, column: 46, scope: !11986)
!12104 = !DILocation(line: 3772, column: 11, scope: !11986)
!12105 = !DILocation(line: 3772, column: 16, scope: !11986)
!12106 = !DILocation(line: 3772, column: 26, scope: !11986)
!12107 = !DILocation(line: 3773, column: 3, scope: !11986)
!12108 = !DILocation(line: 3774, column: 9, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 3774, column: 8)
!12110 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3773, column: 10)
!12111 = !DILocation(line: 3774, column: 14, scope: !12109)
!12112 = !DILocation(line: 3774, column: 8, scope: !12110)
!12113 = !DILocation(line: 3775, column: 5, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 3774, column: 22)
!12115 = !DILocation(line: 3775, column: 10, scope: !12114)
!12116 = !DILocation(line: 3775, column: 14, scope: !12114)
!12117 = !DILocation(line: 3775, column: 19, scope: !12114)
!12118 = !DILocation(line: 3775, column: 27, scope: !12114)
!12119 = !DILocation(line: 3776, column: 4, scope: !12114)
!12120 = !DILocation(line: 3777, column: 5, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 3776, column: 11)
!12122 = !DILocation(line: 3777, column: 10, scope: !12121)
!12123 = !DILocation(line: 3777, column: 14, scope: !12121)
!12124 = !DILocation(line: 3777, column: 19, scope: !12121)
!12125 = !DILocation(line: 3777, column: 27, scope: !12121)
!12126 = !DILocation(line: 3779, column: 9, scope: !12121)
!12127 = !DILocation(line: 3778, column: 5, scope: !12121)
!12128 = !DILocation(line: 3778, column: 10, scope: !12121)
!12129 = !DILocation(line: 3778, column: 14, scope: !12121)
!12130 = !DILocation(line: 3778, column: 19, scope: !12121)
!12131 = !DILocation(line: 3778, column: 31, scope: !12121)
!12132 = !DILocation(line: 3783, column: 10, scope: !12110)
!12133 = !DILocation(line: 3783, column: 15, scope: !12110)
!12134 = !DILocation(line: 3783, column: 19, scope: !12110)
!12135 = !DILocation(line: 3783, column: 24, scope: !12110)
!12136 = !DILocation(line: 3783, column: 32, scope: !12110)
!12137 = !DILocation(line: 3783, column: 37, scope: !12110)
!12138 = !DILocation(line: 3783, column: 30, scope: !12110)
!12139 = !DILocation(line: 3783, column: 8, scope: !12110)
!12140 = !DILocation(line: 3782, column: 4, scope: !12110)
!12141 = !DILocation(line: 3782, column: 9, scope: !12110)
!12142 = !DILocation(line: 3782, column: 14, scope: !12110)
!12143 = !DILocation(line: 3782, column: 29, scope: !12110)
!12144 = !DILocation(line: 3784, column: 4, scope: !12110)
!12145 = !DILocation(line: 3784, column: 9, scope: !12110)
!12146 = !DILocation(line: 3784, column: 14, scope: !12110)
!12147 = !DILocation(line: 3784, column: 28, scope: !12110)
!12148 = !DILocation(line: 3786, column: 8, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 3786, column: 8)
!12150 = !DILocation(line: 3786, column: 8, scope: !12110)
!12151 = !DILocation(line: 3787, column: 9, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 3787, column: 9)
!12153 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 3786, column: 17)
!12154 = !DILocation(line: 3787, column: 17, scope: !12152)
!12155 = !DILocation(line: 3787, column: 9, scope: !12153)
!12156 = !DILocation(line: 3788, column: 6, scope: !12152)
!12157 = !DILocation(line: 3788, column: 11, scope: !12152)
!12158 = !DILocation(line: 3788, column: 16, scope: !12152)
!12159 = !DILocation(line: 3788, column: 30, scope: !12152)
!12160 = !DILocation(line: 3789, column: 14, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 3789, column: 14)
!12162 = !DILocation(line: 3789, column: 22, scope: !12161)
!12163 = !DILocation(line: 3789, column: 14, scope: !12152)
!12164 = !DILocation(line: 3790, column: 6, scope: !12161)
!12165 = !DILocation(line: 3790, column: 11, scope: !12161)
!12166 = !DILocation(line: 3790, column: 16, scope: !12161)
!12167 = !DILocation(line: 3790, column: 30, scope: !12161)
!12168 = !DILocation(line: 3791, column: 14, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 3791, column: 14)
!12170 = !DILocation(line: 3791, column: 22, scope: !12169)
!12171 = !DILocation(line: 3791, column: 14, scope: !12161)
!12172 = !DILocation(line: 3792, column: 6, scope: !12169)
!12173 = !DILocation(line: 3792, column: 11, scope: !12169)
!12174 = !DILocation(line: 3792, column: 16, scope: !12169)
!12175 = !DILocation(line: 3792, column: 30, scope: !12169)
!12176 = !DILocation(line: 3793, column: 4, scope: !12153)
!12177 = !DILocation(line: 3795, column: 32, scope: !12110)
!12178 = !DILocation(line: 3795, column: 37, scope: !12110)
!12179 = !DILocation(line: 3795, column: 4, scope: !12110)
!12180 = !DILocation(line: 3795, column: 9, scope: !12110)
!12181 = !DILocation(line: 3795, column: 14, scope: !12110)
!12182 = !DILocation(line: 3795, column: 30, scope: !12110)
!12183 = !DILocation(line: 3796, column: 8, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 3796, column: 8)
!12185 = !DILocation(line: 3796, column: 13, scope: !12184)
!12186 = !DILocation(line: 3796, column: 18, scope: !12184)
!12187 = !DILocation(line: 3796, column: 32, scope: !12184)
!12188 = !DILocation(line: 3796, column: 8, scope: !12110)
!12189 = !DILocation(line: 3797, column: 5, scope: !12184)
!12190 = !DILocation(line: 3797, column: 10, scope: !12184)
!12191 = !DILocation(line: 3797, column: 15, scope: !12184)
!12192 = !DILocation(line: 3797, column: 31, scope: !12184)
!12193 = !DILocation(line: 3798, column: 8, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 3798, column: 8)
!12195 = !DILocation(line: 3798, column: 13, scope: !12194)
!12196 = !DILocation(line: 3798, column: 17, scope: !12194)
!12197 = !DILocation(line: 3798, column: 22, scope: !12194)
!12198 = !DILocation(line: 3798, column: 30, scope: !12194)
!12199 = !DILocation(line: 3798, column: 8, scope: !12110)
!12200 = !DILocation(line: 3800, column: 9, scope: !12194)
!12201 = !DILocation(line: 3799, column: 5, scope: !12194)
!12202 = !DILocation(line: 3799, column: 10, scope: !12194)
!12203 = !DILocation(line: 3799, column: 15, scope: !12194)
!12204 = !DILocation(line: 3799, column: 30, scope: !12194)
!12205 = !DILocation(line: 3803, column: 9, scope: !12194)
!12206 = !DILocation(line: 3802, column: 5, scope: !12194)
!12207 = !DILocation(line: 3802, column: 10, scope: !12194)
!12208 = !DILocation(line: 3802, column: 15, scope: !12194)
!12209 = !DILocation(line: 3802, column: 30, scope: !12194)
!12210 = !DILocation(line: 3804, column: 27, scope: !12110)
!12211 = !DILocation(line: 3804, column: 32, scope: !12110)
!12212 = !DILocation(line: 3804, column: 42, scope: !12110)
!12213 = !DILocation(line: 3804, column: 4, scope: !12110)
!12214 = !DILocation(line: 3804, column: 9, scope: !12110)
!12215 = !DILocation(line: 3804, column: 14, scope: !12110)
!12216 = !DILocation(line: 3804, column: 25, scope: !12110)
!12217 = !DILocation(line: 3805, column: 4, scope: !12110)
!12218 = !DILocation(line: 3805, column: 9, scope: !12110)
!12219 = !DILocation(line: 3805, column: 14, scope: !12110)
!12220 = !DILocation(line: 3805, column: 27, scope: !12110)
!12221 = !DILocation(line: 3806, column: 25, scope: !12110)
!12222 = !DILocation(line: 3806, column: 30, scope: !12110)
!12223 = !DILocation(line: 3806, column: 4, scope: !12110)
!12224 = !DILocation(line: 3806, column: 9, scope: !12110)
!12225 = !DILocation(line: 3806, column: 14, scope: !12110)
!12226 = !DILocation(line: 3806, column: 23, scope: !12110)
!12227 = !DILocation(line: 3807, column: 4, scope: !12110)
!12228 = !DILocation(line: 3807, column: 9, scope: !12110)
!12229 = !DILocation(line: 3807, column: 14, scope: !12110)
!12230 = !DILocation(line: 3807, column: 23, scope: !12110)
!12231 = !DILocation(line: 3808, column: 11, scope: !12110)
!12232 = !DILocation(line: 3808, column: 16, scope: !12110)
!12233 = !DILocation(line: 3808, column: 21, scope: !12110)
!12234 = !DILocation(line: 3808, column: 4, scope: !12110)
!12235 = !DILocation(line: 3808, column: 31, scope: !12110)
!12236 = !DILocation(line: 3808, column: 36, scope: !12110)
!12237 = !DILocation(line: 3808, column: 46, scope: !12110)
!12238 = !DILocation(line: 3809, column: 11, scope: !12110)
!12239 = !DILocation(line: 3809, column: 16, scope: !12110)
!12240 = !DILocation(line: 3809, column: 26, scope: !12110)
!12241 = !DILocation(line: 3810, column: 4, scope: !12110)
!12242 = !DILocation(line: 3810, column: 9, scope: !12110)
!12243 = !DILocation(line: 3810, column: 14, scope: !12110)
!12244 = !DILocation(line: 3810, column: 26, scope: !12110)
!12245 = !DILocation(line: 3811, column: 4, scope: !12110)
!12246 = !DILocation(line: 3811, column: 9, scope: !12110)
!12247 = !DILocation(line: 3811, column: 14, scope: !12110)
!12248 = !DILocation(line: 3811, column: 27, scope: !12110)
!12249 = !DILocation(line: 3812, column: 4, scope: !12110)
!12250 = !DILocation(line: 3812, column: 9, scope: !12110)
!12251 = !DILocation(line: 3812, column: 14, scope: !12110)
!12252 = !DILocation(line: 3812, column: 27, scope: !12110)
!12253 = !DILocation(line: 3813, column: 4, scope: !12110)
!12254 = !DILocation(line: 3813, column: 9, scope: !12110)
!12255 = !DILocation(line: 3813, column: 14, scope: !12110)
!12256 = !DILocation(line: 3813, column: 27, scope: !12110)
!12257 = !DILocation(line: 3815, column: 2, scope: !11910)
!12258 = !DILocation(line: 3817, column: 12, scope: !11341)
!12259 = !DILocation(line: 3817, column: 16, scope: !11341)
!12260 = !DILocation(line: 3817, column: 21, scope: !11341)
!12261 = !DILocation(line: 3817, column: 29, scope: !11341)
!12262 = !DILocation(line: 3817, column: 33, scope: !11341)
!12263 = !DILocation(line: 3817, column: 10, scope: !11341)
!12264 = !DILocation(line: 3817, column: 2, scope: !11341)
!12265 = !DILocation(line: 3818, column: 1, scope: !11341)
!12266 = distinct !DISubprogram(name: "ips_poll_for_flush_complete", scope: !3, file: !3, line: 4612, type: !8340, scopeLine: 4613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12267 = !DILocalVariable(name: "ha", arg: 1, scope: !12266, file: !3, line: 4612, type: !5540)
!12268 = !DILocation(line: 4612, column: 40, scope: !12266)
!12269 = !DILocalVariable(name: "cstatus", scope: !12266, file: !3, line: 4614, type: !5601)
!12270 = !DILocation(line: 4614, column: 13, scope: !12266)
!12271 = !DILocation(line: 4616, column: 2, scope: !12266)
!12272 = !DILocation(line: 4617, column: 24, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 4616, column: 15)
!12274 = !DILocation(line: 4617, column: 28, scope: !12273)
!12275 = !DILocation(line: 4617, column: 33, scope: !12273)
!12276 = !DILocation(line: 4617, column: 43, scope: !12273)
!12277 = !DILocation(line: 4617, column: 22, scope: !12273)
!12278 = !DILocation(line: 4617, column: 14, scope: !12273)
!12279 = !DILocation(line: 4617, column: 20, scope: !12273)
!12280 = !DILocation(line: 4619, column: 18, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12273, file: !3, line: 4619, column: 10)
!12282 = !DILocation(line: 4619, column: 24, scope: !12281)
!12283 = !DILocation(line: 4619, column: 10, scope: !12273)
!12284 = !DILocation(line: 4620, column: 4, scope: !12281)
!12285 = !DILocation(line: 4623, column: 18, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12273, file: !3, line: 4623, column: 10)
!12287 = !DILocation(line: 4623, column: 25, scope: !12286)
!12288 = !DILocation(line: 4623, column: 10, scope: !12286)
!12289 = !DILocation(line: 4623, column: 36, scope: !12286)
!12290 = !DILocation(line: 4623, column: 10, scope: !12273)
!12291 = !DILocation(line: 4624, column: 10, scope: !12286)
!12292 = distinct !{!12292, !12271, !12293}
!12293 = !DILocation(line: 4625, column: 3, scope: !12266)
!12294 = !DILocation(line: 4627, column: 2, scope: !12266)
!12295 = !DILocation(line: 4628, column: 1, scope: !12266)
!12296 = distinct !DISubprogram(name: "dma_free_coherent", scope: !6272, file: !6272, line: 400, type: !12297, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12297 = !DISubroutineType(types: !12298)
!12298 = !{null, !2031, !827, !183, !3904}
!12299 = !DILocalVariable(name: "dev", arg: 1, scope: !12296, file: !6272, line: 400, type: !2031)
!12300 = !DILocation(line: 400, column: 53, scope: !12296)
!12301 = !DILocalVariable(name: "size", arg: 2, scope: !12296, file: !6272, line: 400, type: !827)
!12302 = !DILocation(line: 400, column: 65, scope: !12296)
!12303 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !12296, file: !6272, line: 401, type: !183)
!12304 = !DILocation(line: 401, column: 9, scope: !12296)
!12305 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !12296, file: !6272, line: 401, type: !3904)
!12306 = !DILocation(line: 401, column: 30, scope: !12296)
!12307 = !DILocation(line: 403, column: 24, scope: !12296)
!12308 = !DILocation(line: 403, column: 29, scope: !12296)
!12309 = !DILocation(line: 403, column: 35, scope: !12296)
!12310 = !DILocation(line: 403, column: 45, scope: !12296)
!12311 = !DILocation(line: 403, column: 9, scope: !12296)
!12312 = !DILocation(line: 403, column: 2, scope: !12296)
!12313 = distinct !DISubprogram(name: "ips_is_passthru", scope: !3, file: !3, line: 1482, type: !5163, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12314 = !DILocalVariable(name: "SC", arg: 1, scope: !12313, file: !3, line: 1482, type: !5101)
!12315 = !DILocation(line: 1482, column: 46, scope: !12313)
!12316 = !DILocalVariable(name: "flags", scope: !12313, file: !3, line: 1484, type: !198)
!12317 = !DILocation(line: 1484, column: 16, scope: !12313)
!12318 = !DILocation(line: 1488, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 1488, column: 6)
!12320 = !DILocation(line: 1488, column: 6, scope: !12313)
!12321 = !DILocation(line: 1489, column: 3, scope: !12319)
!12322 = !DILocation(line: 1491, column: 7, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 1491, column: 6)
!12324 = !DILocation(line: 1491, column: 11, scope: !12323)
!12325 = !DILocation(line: 1491, column: 19, scope: !12323)
!12326 = !DILocation(line: 1491, column: 41, scope: !12323)
!12327 = !DILocation(line: 1492, column: 7, scope: !12323)
!12328 = !DILocation(line: 1492, column: 11, scope: !12323)
!12329 = !DILocation(line: 1492, column: 19, scope: !12323)
!12330 = !DILocation(line: 1492, column: 27, scope: !12323)
!12331 = !DILocation(line: 1492, column: 33, scope: !12323)
!12332 = !DILocation(line: 1493, column: 7, scope: !12323)
!12333 = !DILocation(line: 1493, column: 11, scope: !12323)
!12334 = !DILocation(line: 1493, column: 19, scope: !12323)
!12335 = !DILocation(line: 1493, column: 22, scope: !12323)
!12336 = !DILocation(line: 1493, column: 41, scope: !12323)
!12337 = !DILocation(line: 1494, column: 7, scope: !12323)
!12338 = !DILocation(line: 1494, column: 11, scope: !12323)
!12339 = !DILocation(line: 1494, column: 19, scope: !12323)
!12340 = !DILocation(line: 1494, column: 23, scope: !12323)
!12341 = !DILocation(line: 1494, column: 29, scope: !12323)
!12342 = !DILocation(line: 1494, column: 44, scope: !12323)
!12343 = !DILocation(line: 1494, column: 32, scope: !12323)
!12344 = !DILocation(line: 1491, column: 6, scope: !12313)
!12345 = !DILocalVariable(name: "sg", scope: !12346, file: !3, line: 1495, type: !5492)
!12346 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 1494, column: 49)
!12347 = !DILocation(line: 1495, column: 37, scope: !12346)
!12348 = !DILocation(line: 1495, column: 54, scope: !12346)
!12349 = !DILocation(line: 1495, column: 42, scope: !12346)
!12350 = !DILocalVariable(name: "buffer", scope: !12346, file: !3, line: 1496, type: !196)
!12351 = !DILocation(line: 1496, column: 24, scope: !12346)
!12352 = !DILocation(line: 1500, column: 17, scope: !12346)
!12353 = !DILocation(line: 1500, column: 17, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 1500, column: 17)
!12355 = !DILocalVariable(name: "__dummy", scope: !12356, file: !3, line: 1500, type: !198)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 1500, column: 17)
!12357 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 1500, column: 17)
!12358 = !DILocation(line: 1500, column: 17, scope: !12356)
!12359 = !DILocalVariable(name: "__dummy2", scope: !12356, file: !3, line: 1500, type: !198)
!12360 = !DILocation(line: 1500, column: 17, scope: !12357)
!12361 = !DILocation(line: 1501, column: 46, scope: !12346)
!12362 = !DILocation(line: 1501, column: 38, scope: !12346)
!12363 = !DILocation(line: 1501, column: 26, scope: !12346)
!12364 = !DILocation(line: 1501, column: 53, scope: !12346)
!12365 = !DILocation(line: 1501, column: 57, scope: !12346)
!12366 = !DILocation(line: 1501, column: 51, scope: !12346)
!12367 = !DILocation(line: 1501, column: 24, scope: !12346)
!12368 = !DILocation(line: 1502, column: 21, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 1502, column: 21)
!12370 = !DILocation(line: 1502, column: 28, scope: !12369)
!12371 = !DILocation(line: 1502, column: 31, scope: !12369)
!12372 = !DILocation(line: 1502, column: 41, scope: !12369)
!12373 = !DILocation(line: 1502, column: 48, scope: !12369)
!12374 = !DILocation(line: 1502, column: 51, scope: !12369)
!12375 = !DILocation(line: 1502, column: 61, scope: !12369)
!12376 = !DILocation(line: 1502, column: 68, scope: !12369)
!12377 = !DILocation(line: 1503, column: 21, scope: !12369)
!12378 = !DILocation(line: 1503, column: 31, scope: !12369)
!12379 = !DILocation(line: 1503, column: 38, scope: !12369)
!12380 = !DILocation(line: 1503, column: 41, scope: !12369)
!12381 = !DILocation(line: 1503, column: 51, scope: !12369)
!12382 = !DILocation(line: 1502, column: 21, scope: !12346)
!12383 = !DILocation(line: 1504, column: 25, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 1503, column: 59)
!12385 = !DILocation(line: 1504, column: 25, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 1504, column: 25)
!12387 = !DILocation(line: 1504, column: 25, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 1504, column: 25)
!12389 = !{i32 -2140628463}
!12390 = !DILocation(line: 1505, column: 25, scope: !12384)
!12391 = !DILocation(line: 1505, column: 25, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 1505, column: 25)
!12393 = !DILocalVariable(name: "__dummy", scope: !12394, file: !3, line: 1505, type: !198)
!12394 = distinct !DILexicalBlock(scope: !12395, file: !3, line: 1505, column: 25)
!12395 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 1505, column: 25)
!12396 = !DILocation(line: 1505, column: 25, scope: !12394)
!12397 = !DILocalVariable(name: "__dummy2", scope: !12394, file: !3, line: 1505, type: !198)
!12398 = !DILocation(line: 1505, column: 25, scope: !12395)
!12399 = !DILocation(line: 1506, column: 25, scope: !12384)
!12400 = !DILocation(line: 1508, column: 17, scope: !12346)
!12401 = !DILocation(line: 1508, column: 17, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 1508, column: 17)
!12403 = !DILocation(line: 1508, column: 17, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 1508, column: 17)
!12405 = !{i32 -2140626782}
!12406 = !DILocation(line: 1509, column: 17, scope: !12346)
!12407 = !DILocation(line: 1509, column: 17, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 1509, column: 17)
!12409 = !DILocalVariable(name: "__dummy", scope: !12410, file: !3, line: 1509, type: !198)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 1509, column: 17)
!12411 = distinct !DILexicalBlock(scope: !12408, file: !3, line: 1509, column: 17)
!12412 = !DILocation(line: 1509, column: 17, scope: !12410)
!12413 = !DILocalVariable(name: "__dummy2", scope: !12410, file: !3, line: 1509, type: !198)
!12414 = !DILocation(line: 1509, column: 17, scope: !12411)
!12415 = !DILocation(line: 1510, column: 2, scope: !12346)
!12416 = !DILocation(line: 1511, column: 2, scope: !12313)
!12417 = !DILocation(line: 1512, column: 1, scope: !12313)
!12418 = distinct !DISubprogram(name: "ips_scmd_buf_write", scope: !3, file: !3, line: 3411, type: !12419, scopeLine: 3412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{null, !5101, !183, !7}
!12421 = !DILocalVariable(name: "scmd", arg: 1, scope: !12418, file: !3, line: 3411, type: !5101)
!12422 = !DILocation(line: 3411, column: 38, scope: !12418)
!12423 = !DILocalVariable(name: "data", arg: 2, scope: !12418, file: !3, line: 3411, type: !183)
!12424 = !DILocation(line: 3411, column: 50, scope: !12418)
!12425 = !DILocalVariable(name: "count", arg: 3, scope: !12418, file: !3, line: 3411, type: !7)
!12426 = !DILocation(line: 3411, column: 69, scope: !12418)
!12427 = !DILocalVariable(name: "flags", scope: !12418, file: !3, line: 3413, type: !198)
!12428 = !DILocation(line: 3413, column: 16, scope: !12418)
!12429 = !DILocation(line: 3415, column: 2, scope: !12418)
!12430 = !DILocation(line: 3415, column: 2, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 3415, column: 2)
!12432 = !DILocalVariable(name: "__dummy", scope: !12433, file: !3, line: 3415, type: !198)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !3, line: 3415, column: 2)
!12434 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 3415, column: 2)
!12435 = !DILocation(line: 3415, column: 2, scope: !12433)
!12436 = !DILocalVariable(name: "__dummy2", scope: !12433, file: !3, line: 3415, type: !198)
!12437 = !DILocation(line: 3415, column: 2, scope: !12434)
!12438 = !DILocation(line: 3416, column: 27, scope: !12418)
!12439 = !DILocation(line: 3416, column: 33, scope: !12418)
!12440 = !DILocation(line: 3416, column: 39, scope: !12418)
!12441 = !DILocation(line: 3416, column: 2, scope: !12418)
!12442 = !DILocation(line: 3417, column: 2, scope: !12418)
!12443 = !DILocation(line: 3417, column: 2, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 3417, column: 2)
!12445 = !DILocalVariable(name: "__dummy", scope: !12446, file: !3, line: 3417, type: !198)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 3417, column: 2)
!12447 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 3417, column: 2)
!12448 = !DILocation(line: 3417, column: 2, scope: !12446)
!12449 = !DILocalVariable(name: "__dummy2", scope: !12446, file: !3, line: 3417, type: !198)
!12450 = !DILocation(line: 3417, column: 2, scope: !12447)
!12451 = !DILocation(line: 3418, column: 1, scope: !12418)
!12452 = distinct !DISubprogram(name: "ips_reqsen", scope: !3, file: !3, line: 4179, type: !8517, scopeLine: 4180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12453 = !DILocalVariable(name: "ha", arg: 1, scope: !12452, file: !3, line: 4179, type: !5540)
!12454 = !DILocation(line: 4179, column: 23, scope: !12452)
!12455 = !DILocalVariable(name: "scb", arg: 2, scope: !12452, file: !3, line: 4179, type: !4848)
!12456 = !DILocation(line: 4179, column: 39, scope: !12452)
!12457 = !DILocalVariable(name: "reqsen", scope: !12452, file: !3, line: 4181, type: !12458)
!12458 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_REQSEN", file: !201, line: 833, baseType: !12459)
!12459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 822, size: 144, elements: !12460)
!12460 = !{!12461, !12462, !12463, !12464, !12465, !12466, !12467, !12468, !12469, !12470}
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "ResponseCode", scope: !12459, file: !201, line: 823, baseType: !205, size: 8)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "SegmentNumber", scope: !12459, file: !201, line: 824, baseType: !205, size: 8, offset: 8)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", scope: !12459, file: !201, line: 825, baseType: !205, size: 8, offset: 16)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "Information", scope: !12459, file: !201, line: 826, baseType: !4986, size: 32, offset: 24)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "AdditionalLength", scope: !12459, file: !201, line: 827, baseType: !205, size: 8, offset: 56)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "CommandSpecific", scope: !12459, file: !201, line: 828, baseType: !4986, size: 32, offset: 64)
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "AdditionalSenseCode", scope: !12459, file: !201, line: 829, baseType: !205, size: 8, offset: 96)
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "AdditionalSenseCodeQual", scope: !12459, file: !201, line: 830, baseType: !205, size: 8, offset: 104)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "FRUCode", scope: !12459, file: !201, line: 831, baseType: !205, size: 8, offset: 112)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "SenseKeySpecific", scope: !12459, file: !201, line: 832, baseType: !5063, size: 24, offset: 120)
!12471 = !DILocation(line: 4181, column: 18, scope: !12452)
!12472 = !DILocation(line: 4185, column: 2, scope: !12452)
!12473 = !DILocation(line: 4187, column: 9, scope: !12452)
!12474 = !DILocation(line: 4187, column: 22, scope: !12452)
!12475 = !DILocation(line: 4189, column: 9, scope: !12452)
!12476 = !DILocation(line: 4189, column: 26, scope: !12452)
!12477 = !DILocation(line: 4190, column: 9, scope: !12452)
!12478 = !DILocation(line: 4190, column: 29, scope: !12452)
!12479 = !DILocation(line: 4191, column: 9, scope: !12452)
!12480 = !DILocation(line: 4191, column: 33, scope: !12452)
!12481 = !DILocation(line: 4193, column: 21, scope: !12452)
!12482 = !DILocation(line: 4193, column: 26, scope: !12452)
!12483 = !DILocation(line: 4193, column: 36, scope: !12452)
!12484 = !DILocation(line: 4193, column: 2, scope: !12452)
!12485 = !DILocation(line: 4195, column: 2, scope: !12452)
!12486 = distinct !DISubprogram(name: "le32_add_cpu", scope: !12487, file: !12487, line: 149, type: !12488, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12487 = !DIFile(filename: "./include/linux/byteorder/generic.h", directory: "/home/lizy2001/genbc/linux")
!12488 = !DISubroutineType(types: !12489)
!12489 = !{null, !12490, !187}
!12490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!12491 = !DILocalVariable(name: "var", arg: 1, scope: !12486, file: !12487, line: 149, type: !12490)
!12492 = !DILocation(line: 149, column: 41, scope: !12486)
!12493 = !DILocalVariable(name: "val", arg: 2, scope: !12486, file: !12487, line: 149, type: !187)
!12494 = !DILocation(line: 149, column: 50, scope: !12486)
!12495 = !DILocation(line: 151, column: 9, scope: !12486)
!12496 = !DILocation(line: 151, column: 3, scope: !12486)
!12497 = !DILocation(line: 151, column: 7, scope: !12486)
!12498 = !DILocation(line: 152, column: 1, scope: !12486)
!12499 = distinct !DISubprogram(name: "scsi_sglist", scope: !5103, file: !5103, line: 184, type: !12500, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{!5492, !5101}
!12502 = !DILocalVariable(name: "cmd", arg: 1, scope: !12499, file: !5103, line: 184, type: !5101)
!12503 = !DILocation(line: 184, column: 65, scope: !12499)
!12504 = !DILocation(line: 186, column: 9, scope: !12499)
!12505 = !DILocation(line: 186, column: 14, scope: !12499)
!12506 = !DILocation(line: 186, column: 18, scope: !12499)
!12507 = !DILocation(line: 186, column: 24, scope: !12499)
!12508 = !DILocation(line: 186, column: 2, scope: !12499)
!12509 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !12510, file: !12510, line: 666, type: !12511, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12510 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!12511 = !DISubroutineType(types: !12512)
!12512 = !{!198}
!12513 = !DILocalVariable(name: "f", scope: !12509, file: !12510, line: 668, type: !198)
!12514 = !DILocation(line: 668, column: 16, scope: !12509)
!12515 = !DILocation(line: 670, column: 6, scope: !12509)
!12516 = !DILocation(line: 670, column: 4, scope: !12509)
!12517 = !DILocation(line: 671, column: 2, scope: !12509)
!12518 = !DILocation(line: 672, column: 9, scope: !12509)
!12519 = !DILocation(line: 672, column: 2, scope: !12509)
!12520 = distinct !DISubprogram(name: "kmap_atomic", scope: !12521, file: !12521, line: 154, type: !12522, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12521 = !DIFile(filename: "./include/linux/highmem.h", directory: "/home/lizy2001/genbc/linux")
!12522 = !DISubroutineType(types: !12523)
!12523 = !{!183, !522}
!12524 = !DILocalVariable(name: "page", arg: 1, scope: !12525, file: !14, line: 1514, type: !12528)
!12525 = distinct !DISubprogram(name: "lowmem_page_address", scope: !14, file: !14, line: 1514, type: !12526, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12526 = !DISubroutineType(types: !12527)
!12527 = !{!183, !12528}
!12528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12529, size: 64)
!12529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !523)
!12530 = !DILocation(line: 1514, column: 69, scope: !12525, inlinedAt: !12531)
!12531 = distinct !DILocation(line: 158, column: 9, scope: !12520)
!12532 = !DILocalVariable(name: "page", arg: 1, scope: !12520, file: !12521, line: 154, type: !522)
!12533 = !DILocation(line: 154, column: 46, scope: !12520)
!12534 = !DILocation(line: 156, column: 2, scope: !12520)
!12535 = !{i32 -2141455100}
!12536 = !DILocation(line: 157, column: 2, scope: !12520)
!12537 = !DILocation(line: 158, column: 9, scope: !12520)
!12538 = !DILocation(line: 1516, column: 9, scope: !12525, inlinedAt: !12531)
!12539 = !DILocation(line: 158, column: 2, scope: !12520)
!12540 = distinct !DISubprogram(name: "sg_page", scope: !5489, file: !5489, line: 124, type: !12541, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12541 = !DISubroutineType(types: !12542)
!12542 = !{!522, !5492}
!12543 = !DILocalVariable(name: "sg", arg: 1, scope: !12540, file: !5489, line: 124, type: !5492)
!12544 = !DILocation(line: 124, column: 56, scope: !12540)
!12545 = !DILocation(line: 129, column: 26, scope: !12540)
!12546 = !DILocation(line: 129, column: 31, scope: !12540)
!12547 = !DILocation(line: 129, column: 41, scope: !12540)
!12548 = !DILocation(line: 129, column: 9, scope: !12540)
!12549 = !DILocation(line: 129, column: 2, scope: !12540)
!12550 = distinct !DISubprogram(name: "kunmap_atomic_high", scope: !12521, file: !12521, line: 162, type: !1875, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12551 = !DILocalVariable(name: "addr", arg: 1, scope: !12550, file: !12521, line: 162, type: !183)
!12552 = !DILocation(line: 162, column: 45, scope: !12550)
!12553 = !DILocation(line: 171, column: 1, scope: !12550)
!12554 = distinct !DISubprogram(name: "pagefault_enable", scope: !12555, file: !12555, line: 254, type: !4459, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12555 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!12556 = !DILocalVariable(name: "pscr_ret__", scope: !12557, file: !12558, line: 15, type: !229)
!12557 = distinct !DILexicalBlock(scope: !12559, file: !12558, line: 15, column: 9)
!12558 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!12559 = distinct !DISubprogram(name: "get_current", scope: !12558, file: !12558, line: 13, type: !12560, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12560 = !DISubroutineType(types: !12561)
!12561 = !{!229}
!12562 = !DILocation(line: 15, column: 9, scope: !12557, inlinedAt: !12563)
!12563 = distinct !DILocation(line: 234, column: 2, scope: !12564, inlinedAt: !12565)
!12564 = distinct !DISubprogram(name: "pagefault_disabled_dec", scope: !12555, file: !12555, line: 232, type: !4459, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12565 = distinct !DILocation(line: 261, column: 2, scope: !12554)
!12566 = !DILocalVariable(name: "__vpp_verify", scope: !12567, file: !12558, line: 15, type: !1865)
!12567 = distinct !DILexicalBlock(scope: !12557, file: !12558, line: 15, column: 9)
!12568 = !DILocation(line: 15, column: 9, scope: !12567, inlinedAt: !12563)
!12569 = !DILocalVariable(name: "pfo_val__", scope: !12570, file: !12558, line: 15, type: !288)
!12570 = distinct !DILexicalBlock(scope: !12557, file: !12558, line: 15, column: 9)
!12571 = !DILocation(line: 15, column: 9, scope: !12570, inlinedAt: !12563)
!12572 = !DILocation(line: 260, column: 2, scope: !12554)
!12573 = !{i32 -2142671834}
!12574 = !{i32 -2145574893}
!12575 = !DILocation(line: 234, column: 11, scope: !12564, inlinedAt: !12565)
!12576 = !DILocation(line: 234, column: 29, scope: !12564, inlinedAt: !12565)
!12577 = !DILocation(line: 262, column: 1, scope: !12554)
!12578 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !12510, file: !12510, line: 651, type: !12579, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12579 = !DISubroutineType(types: !12580)
!12580 = !{null, !198}
!12581 = !DILocalVariable(name: "f", arg: 1, scope: !12578, file: !12510, line: 651, type: !198)
!12582 = !DILocation(line: 651, column: 65, scope: !12578)
!12583 = !DILocalVariable(name: "__edi", scope: !12584, file: !12510, line: 653, type: !198)
!12584 = distinct !DILexicalBlock(scope: !12578, file: !12510, line: 653, column: 2)
!12585 = !DILocation(line: 653, column: 2, scope: !12584)
!12586 = !DILocalVariable(name: "__esi", scope: !12584, file: !12510, line: 653, type: !198)
!12587 = !DILocalVariable(name: "__edx", scope: !12584, file: !12510, line: 653, type: !198)
!12588 = !DILocalVariable(name: "__ecx", scope: !12584, file: !12510, line: 653, type: !198)
!12589 = !DILocalVariable(name: "__eax", scope: !12584, file: !12510, line: 653, type: !198)
!12590 = !{i32 -2145816663, i32 -2145815913, i32 -2145815679, i32 -2145815628, i32 -2145815600, i32 -2145815575, i32 -2145815891, i32 -2145815878, i32 -2145815440, i32 -2145815321, i32 -2145815786, i32 -2145815759, i32 -2145815731, i32 -2145815701}
!12591 = !DILocation(line: 654, column: 1, scope: !12578)
!12592 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !12510, file: !12510, line: 646, type: !12511, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12593 = !DILocalVariable(name: "__ret", scope: !12594, file: !12510, line: 648, type: !198)
!12594 = distinct !DILexicalBlock(scope: !12592, file: !12510, line: 648, column: 9)
!12595 = !DILocation(line: 648, column: 9, scope: !12594)
!12596 = !DILocalVariable(name: "__edi", scope: !12594, file: !12510, line: 648, type: !198)
!12597 = !DILocalVariable(name: "__esi", scope: !12594, file: !12510, line: 648, type: !198)
!12598 = !DILocalVariable(name: "__edx", scope: !12594, file: !12510, line: 648, type: !198)
!12599 = !DILocalVariable(name: "__ecx", scope: !12594, file: !12510, line: 648, type: !198)
!12600 = !DILocalVariable(name: "__eax", scope: !12594, file: !12510, line: 648, type: !198)
!12601 = !DILocation(line: 648, column: 9, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12603, file: !12510, line: 648, column: 9)
!12603 = distinct !DILexicalBlock(scope: !12594, file: !12510, line: 648, column: 9)
!12604 = !{i32 -2145821130, i32 -2145818815, i32 -2145818581, i32 -2145818530, i32 -2145818502, i32 -2145818477, i32 -2145818793, i32 -2145818780, i32 -2145818342, i32 -2145818223, i32 -2145818688, i32 -2145818661, i32 -2145818633, i32 -2145818603}
!12605 = !DILocalVariable(name: "__mask", scope: !12606, file: !12510, line: 648, type: !198)
!12606 = distinct !DILexicalBlock(scope: !12602, file: !12510, line: 648, column: 9)
!12607 = !DILocation(line: 648, column: 9, scope: !12606)
!12608 = !DILocation(line: 648, column: 9, scope: !12603)
!12609 = !DILocation(line: 648, column: 2, scope: !12592)
!12610 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !12510, file: !12510, line: 656, type: !4459, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12611 = !DILocalVariable(name: "__edi", scope: !12612, file: !12510, line: 658, type: !198)
!12612 = distinct !DILexicalBlock(scope: !12610, file: !12510, line: 658, column: 2)
!12613 = !DILocation(line: 658, column: 2, scope: !12612)
!12614 = !DILocalVariable(name: "__esi", scope: !12612, file: !12510, line: 658, type: !198)
!12615 = !DILocalVariable(name: "__edx", scope: !12612, file: !12510, line: 658, type: !198)
!12616 = !DILocalVariable(name: "__ecx", scope: !12612, file: !12510, line: 658, type: !198)
!12617 = !DILocalVariable(name: "__eax", scope: !12612, file: !12510, line: 658, type: !198)
!12618 = !{i32 -2145814036, i32 -2145813304, i32 -2145813070, i32 -2145813019, i32 -2145812991, i32 -2145812966, i32 -2145813282, i32 -2145813269, i32 -2145812831, i32 -2145812712, i32 -2145813177, i32 -2145813150, i32 -2145813122, i32 -2145813092}
!12619 = !DILocation(line: 659, column: 1, scope: !12610)
!12620 = distinct !DISubprogram(name: "pagefault_disable", scope: !12555, file: !12555, line: 244, type: !4459, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12621 = !DILocation(line: 15, column: 9, scope: !12557, inlinedAt: !12622)
!12622 = distinct !DILocation(line: 229, column: 2, scope: !12623, inlinedAt: !12624)
!12623 = distinct !DISubprogram(name: "pagefault_disabled_inc", scope: !12555, file: !12555, line: 227, type: !4459, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12624 = distinct !DILocation(line: 246, column: 2, scope: !12620)
!12625 = !DILocation(line: 15, column: 9, scope: !12567, inlinedAt: !12622)
!12626 = !DILocation(line: 15, column: 9, scope: !12570, inlinedAt: !12622)
!12627 = !DILocation(line: 229, column: 11, scope: !12623, inlinedAt: !12624)
!12628 = !DILocation(line: 229, column: 29, scope: !12623, inlinedAt: !12624)
!12629 = !DILocation(line: 251, column: 2, scope: !12620)
!12630 = !{i32 -2142672037}
!12631 = !DILocation(line: 252, column: 1, scope: !12620)
!12632 = distinct !DISubprogram(name: "scsi_sg_copy_from_buffer", scope: !5103, file: !5103, line: 207, type: !12633, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{!182, !5101, !183, !182}
!12635 = !DILocalVariable(name: "cmd", arg: 1, scope: !12632, file: !5103, line: 207, type: !5101)
!12636 = !DILocation(line: 207, column: 62, scope: !12632)
!12637 = !DILocalVariable(name: "buf", arg: 2, scope: !12632, file: !5103, line: 208, type: !183)
!12638 = !DILocation(line: 208, column: 15, scope: !12632)
!12639 = !DILocalVariable(name: "buflen", arg: 3, scope: !12632, file: !5103, line: 208, type: !182)
!12640 = !DILocation(line: 208, column: 24, scope: !12632)
!12641 = !DILocation(line: 210, column: 41, scope: !12632)
!12642 = !DILocation(line: 210, column: 29, scope: !12632)
!12643 = !DILocation(line: 210, column: 61, scope: !12632)
!12644 = !DILocation(line: 210, column: 47, scope: !12632)
!12645 = !DILocation(line: 211, column: 8, scope: !12632)
!12646 = !DILocation(line: 211, column: 13, scope: !12632)
!12647 = !DILocation(line: 210, column: 9, scope: !12632)
!12648 = !DILocation(line: 210, column: 2, scope: !12632)
!12649 = distinct !DISubprogram(name: "scsi_sg_count", scope: !5103, file: !5103, line: 179, type: !12650, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{!7, !5101}
!12652 = !DILocalVariable(name: "cmd", arg: 1, scope: !12649, file: !5103, line: 179, type: !5101)
!12653 = !DILocation(line: 179, column: 56, scope: !12649)
!12654 = !DILocation(line: 181, column: 9, scope: !12649)
!12655 = !DILocation(line: 181, column: 14, scope: !12649)
!12656 = !DILocation(line: 181, column: 18, scope: !12649)
!12657 = !DILocation(line: 181, column: 24, scope: !12649)
!12658 = !DILocation(line: 181, column: 2, scope: !12649)
!12659 = distinct !DISubprogram(name: "writel", scope: !8329, file: !8329, line: 67, type: !12660, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !7, !12662}
!12662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8334, size: 64)
!12663 = !DILocalVariable(name: "val", arg: 1, scope: !12659, file: !8329, line: 67, type: !7)
!12664 = !DILocation(line: 67, column: 1, scope: !12659)
!12665 = !DILocalVariable(name: "addr", arg: 2, scope: !12659, file: !8329, line: 67, type: !12662)
!12666 = !{i32 -2146304002}
!12667 = distinct !DISubprogram(name: "touch_nmi_watchdog", scope: !12668, file: !12668, line: 132, type: !4459, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12668 = !DIFile(filename: "./include/linux/nmi.h", directory: "/home/lizy2001/genbc/linux")
!12669 = !DILocation(line: 134, column: 2, scope: !12667)
!12670 = !DILocation(line: 135, column: 2, scope: !12667)
!12671 = !DILocation(line: 136, column: 1, scope: !12667)
!12672 = distinct !DISubprogram(name: "arch_touch_nmi_watchdog", scope: !12668, file: !12668, line: 113, type: !4459, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12673 = !DILocation(line: 113, column: 51, scope: !12672)
!12674 = distinct !DISubprogram(name: "touch_softlockup_watchdog", scope: !12668, file: !12668, line: 53, type: !4459, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12675 = !DILocation(line: 53, column: 54, scope: !12674)
!12676 = distinct !DISubprogram(name: "ips_chkstatus", scope: !3, file: !3, line: 3830, type: !12677, scopeLine: 3831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{null, !5540, !12679}
!12679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64)
!12680 = !DILocalVariable(name: "ha", arg: 1, scope: !12676, file: !3, line: 3830, type: !5540)
!12681 = !DILocation(line: 3830, column: 26, scope: !12676)
!12682 = !DILocalVariable(name: "pstatus", arg: 2, scope: !12676, file: !3, line: 3830, type: !12679)
!12683 = !DILocation(line: 3830, column: 43, scope: !12676)
!12684 = !DILocalVariable(name: "scb", scope: !12676, file: !3, line: 3832, type: !4848)
!12685 = !DILocation(line: 3832, column: 13, scope: !12676)
!12686 = !DILocalVariable(name: "sp", scope: !12676, file: !3, line: 3833, type: !8764)
!12687 = !DILocation(line: 3833, column: 14, scope: !12676)
!12688 = !DILocalVariable(name: "basic_status", scope: !12676, file: !3, line: 3834, type: !205)
!12689 = !DILocation(line: 3834, column: 10, scope: !12676)
!12690 = !DILocalVariable(name: "ext_status", scope: !12676, file: !3, line: 3835, type: !205)
!12691 = !DILocation(line: 3835, column: 10, scope: !12676)
!12692 = !DILocalVariable(name: "errcode", scope: !12676, file: !3, line: 3836, type: !182)
!12693 = !DILocation(line: 3836, column: 6, scope: !12676)
!12694 = !DILocalVariable(name: "inquiryData", scope: !12676, file: !3, line: 3837, type: !11436)
!12695 = !DILocation(line: 3837, column: 20, scope: !12676)
!12696 = !DILocation(line: 3841, column: 9, scope: !12676)
!12697 = !DILocation(line: 3841, column: 13, scope: !12676)
!12698 = !DILocation(line: 3841, column: 18, scope: !12676)
!12699 = !DILocation(line: 3841, column: 27, scope: !12676)
!12700 = !DILocation(line: 3841, column: 34, scope: !12676)
!12701 = !DILocation(line: 3841, column: 6, scope: !12676)
!12702 = !DILocation(line: 3843, column: 6, scope: !12676)
!12703 = !DILocation(line: 3843, column: 15, scope: !12676)
!12704 = !DILocation(line: 3843, column: 22, scope: !12676)
!12705 = !DILocation(line: 3843, column: 35, scope: !12676)
!12706 = !DILocation(line: 3842, column: 35, scope: !12676)
!12707 = !DILocation(line: 3842, column: 2, scope: !12676)
!12708 = !DILocation(line: 3842, column: 7, scope: !12676)
!12709 = !DILocation(line: 3842, column: 20, scope: !12676)
!12710 = !DILocation(line: 3844, column: 38, scope: !12676)
!12711 = !DILocation(line: 3844, column: 47, scope: !12676)
!12712 = !DILocation(line: 3844, column: 54, scope: !12676)
!12713 = !DILocation(line: 3844, column: 36, scope: !12676)
!12714 = !DILocation(line: 3844, column: 2, scope: !12676)
!12715 = !DILocation(line: 3844, column: 7, scope: !12676)
!12716 = !DILocation(line: 3844, column: 23, scope: !12676)
!12717 = !DILocation(line: 3846, column: 8, scope: !12676)
!12718 = !DILocation(line: 3846, column: 12, scope: !12676)
!12719 = !DILocation(line: 3846, column: 5, scope: !12676)
!12720 = !DILocation(line: 3847, column: 2, scope: !12676)
!12721 = !DILocation(line: 3847, column: 6, scope: !12676)
!12722 = !DILocation(line: 3847, column: 18, scope: !12676)
!12723 = !DILocation(line: 3848, column: 26, scope: !12676)
!12724 = !DILocation(line: 3848, column: 17, scope: !12676)
!12725 = !DILocation(line: 3848, column: 2, scope: !12676)
!12726 = !DILocation(line: 3848, column: 6, scope: !12676)
!12727 = !DILocation(line: 3848, column: 15, scope: !12676)
!12728 = !DILocation(line: 3851, column: 19, scope: !12676)
!12729 = !DILocation(line: 3851, column: 23, scope: !12676)
!12730 = !DILocation(line: 3851, column: 39, scope: !12676)
!12731 = !DILocation(line: 3851, column: 2, scope: !12676)
!12732 = !DILocation(line: 3853, column: 7, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 3853, column: 6)
!12734 = !DILocation(line: 3853, column: 12, scope: !12733)
!12735 = !DILocation(line: 3853, column: 6, scope: !12676)
!12736 = !DILocation(line: 3855, column: 3, scope: !12733)
!12737 = !DILocation(line: 3864, column: 7, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 3864, column: 6)
!12739 = !DILocation(line: 3864, column: 12, scope: !12738)
!12740 = !DILocation(line: 3864, column: 6, scope: !12738)
!12741 = !DILocation(line: 3864, column: 22, scope: !12738)
!12742 = !DILocation(line: 3864, column: 42, scope: !12738)
!12743 = !DILocation(line: 3864, column: 47, scope: !12738)
!12744 = !DILocation(line: 3864, column: 26, scope: !12738)
!12745 = !DILocation(line: 3864, column: 6, scope: !12676)
!12746 = !DILocation(line: 3866, column: 3, scope: !12738)
!12747 = !DILocation(line: 3868, column: 10, scope: !12676)
!12748 = !DILocation(line: 3870, column: 8, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 3870, column: 6)
!12750 = !DILocation(line: 3870, column: 21, scope: !12749)
!12751 = !DILocation(line: 3870, column: 44, scope: !12749)
!12752 = !DILocation(line: 3870, column: 64, scope: !12749)
!12753 = !DILocation(line: 3871, column: 8, scope: !12749)
!12754 = !DILocation(line: 3871, column: 21, scope: !12749)
!12755 = !DILocation(line: 3871, column: 44, scope: !12749)
!12756 = !DILocation(line: 3870, column: 6, scope: !12676)
!12757 = !DILocation(line: 3873, column: 7, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 3873, column: 7)
!12759 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 3871, column: 73)
!12760 = !DILocation(line: 3873, column: 12, scope: !12758)
!12761 = !DILocation(line: 3873, column: 16, scope: !12758)
!12762 = !DILocation(line: 3873, column: 7, scope: !12759)
!12763 = !DILocation(line: 3874, column: 9, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 3874, column: 8)
!12765 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 3873, column: 22)
!12766 = !DILocation(line: 3874, column: 22, scope: !12764)
!12767 = !DILocation(line: 3874, column: 45, scope: !12764)
!12768 = !DILocation(line: 3874, column: 8, scope: !12765)
!12769 = !DILocation(line: 3881, column: 4, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 3875, column: 33)
!12771 = !DILocation(line: 3883, column: 12, scope: !12765)
!12772 = !DILocation(line: 3883, column: 17, scope: !12765)
!12773 = !DILocation(line: 3883, column: 27, scope: !12765)
!12774 = !DILocation(line: 3883, column: 4, scope: !12765)
!12775 = !DILocation(line: 3889, column: 13, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 3883, column: 36)
!12777 = !DILocation(line: 3890, column: 5, scope: !12776)
!12778 = !DILocation(line: 3893, column: 5, scope: !12776)
!12779 = !DILocation(line: 3896, column: 21, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 3896, column: 9)
!12781 = !DILocation(line: 3896, column: 25, scope: !12780)
!12782 = !DILocation(line: 3896, column: 10, scope: !12780)
!12783 = !DILocation(line: 3896, column: 9, scope: !12776)
!12784 = !DILocation(line: 3897, column: 14, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12780, file: !3, line: 3896, column: 31)
!12786 = !DILocation(line: 3898, column: 5, scope: !12785)
!12787 = !DILocation(line: 3899, column: 5, scope: !12776)
!12788 = !DILocation(line: 3902, column: 20, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 3902, column: 9)
!12790 = !DILocation(line: 3902, column: 24, scope: !12789)
!12791 = !DILocation(line: 3902, column: 9, scope: !12789)
!12792 = !DILocation(line: 3902, column: 9, scope: !12776)
!12793 = !DILocation(line: 3903, column: 18, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 3902, column: 30)
!12795 = !DILocation(line: 3903, column: 22, scope: !12794)
!12796 = !DILocation(line: 3903, column: 6, scope: !12794)
!12797 = !DILocation(line: 3904, column: 5, scope: !12794)
!12798 = !DILocation(line: 3905, column: 14, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 3904, column: 12)
!12800 = !DILocation(line: 3907, column: 5, scope: !12776)
!12801 = !DILocation(line: 3910, column: 16, scope: !12776)
!12802 = !DILocation(line: 3910, column: 20, scope: !12776)
!12803 = !DILocation(line: 3910, column: 5, scope: !12776)
!12804 = !DILocation(line: 3911, column: 5, scope: !12776)
!12805 = !DILocation(line: 3919, column: 5, scope: !12776)
!12806 = !DILocation(line: 3922, column: 21, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 3922, column: 9)
!12808 = !DILocation(line: 3922, column: 25, scope: !12807)
!12809 = !DILocation(line: 3922, column: 10, scope: !12807)
!12810 = !DILocation(line: 3923, column: 9, scope: !12807)
!12811 = !DILocation(line: 3923, column: 24, scope: !12807)
!12812 = !DILocation(line: 3923, column: 28, scope: !12807)
!12813 = !DILocation(line: 3923, column: 13, scope: !12807)
!12814 = !DILocation(line: 3922, column: 9, scope: !12776)
!12815 = !DILocation(line: 3924, column: 14, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 3923, column: 34)
!12817 = !DILocation(line: 3925, column: 5, scope: !12816)
!12818 = !DILocation(line: 3926, column: 5, scope: !12776)
!12819 = !DILocation(line: 3929, column: 20, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 3929, column: 9)
!12821 = !DILocation(line: 3929, column: 24, scope: !12820)
!12822 = !DILocation(line: 3929, column: 9, scope: !12820)
!12823 = !DILocation(line: 3929, column: 9, scope: !12776)
!12824 = !DILocation(line: 3930, column: 16, scope: !12820)
!12825 = !DILocation(line: 3930, column: 20, scope: !12820)
!12826 = !DILocation(line: 3930, column: 6, scope: !12820)
!12827 = !DILocation(line: 3932, column: 14, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 3931, column: 10)
!12829 = !DILocation(line: 3934, column: 5, scope: !12776)
!12830 = !DILocation(line: 3938, column: 5, scope: !12776)
!12831 = !DILocation(line: 3941, column: 13, scope: !12776)
!12832 = !DILocation(line: 3942, column: 5, scope: !12776)
!12833 = !DILocation(line: 3949, column: 5, scope: !12776)
!12834 = !DILocation(line: 3952, column: 13, scope: !12776)
!12835 = !DILocation(line: 3953, column: 4, scope: !12776)
!12836 = !DILocation(line: 3955, column: 28, scope: !12765)
!12837 = !DILocation(line: 3955, column: 36, scope: !12765)
!12838 = !DILocation(line: 3955, column: 4, scope: !12765)
!12839 = !DILocation(line: 3955, column: 9, scope: !12765)
!12840 = !DILocation(line: 3955, column: 19, scope: !12765)
!12841 = !DILocation(line: 3955, column: 26, scope: !12765)
!12842 = !DILocation(line: 3956, column: 3, scope: !12765)
!12843 = !DILocation(line: 3958, column: 8, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 3958, column: 8)
!12845 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 3956, column: 10)
!12846 = !DILocation(line: 3958, column: 13, scope: !12844)
!12847 = !DILocation(line: 3958, column: 23, scope: !12844)
!12848 = !DILocation(line: 3958, column: 31, scope: !12844)
!12849 = !DILocation(line: 3958, column: 8, scope: !12845)
!12850 = !DILocation(line: 3959, column: 26, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12844, file: !3, line: 3958, column: 43)
!12852 = !DILocation(line: 3959, column: 31, scope: !12851)
!12853 = !DILocation(line: 3960, column: 35, scope: !12851)
!12854 = !DILocation(line: 3959, column: 8, scope: !12851)
!12855 = !DILocation(line: 3961, column: 25, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12851, file: !3, line: 3961, column: 12)
!12857 = !DILocation(line: 3961, column: 13, scope: !12856)
!12858 = !DILocation(line: 3961, column: 36, scope: !12856)
!12859 = !DILocation(line: 3961, column: 44, scope: !12856)
!12860 = !DILocation(line: 3961, column: 12, scope: !12851)
!12861 = !DILocation(line: 3962, column: 12, scope: !12856)
!12862 = !DILocation(line: 3962, column: 17, scope: !12856)
!12863 = !DILocation(line: 3962, column: 27, scope: !12856)
!12864 = !DILocation(line: 3962, column: 34, scope: !12856)
!12865 = !DILocation(line: 3963, column: 4, scope: !12851)
!12866 = !DILocation(line: 3965, column: 2, scope: !12759)
!12867 = !DILocation(line: 3966, column: 7, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 3966, column: 7)
!12869 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 3965, column: 9)
!12870 = !DILocation(line: 3966, column: 12, scope: !12868)
!12871 = !DILocation(line: 3966, column: 16, scope: !12868)
!12872 = !DILocation(line: 3966, column: 7, scope: !12869)
!12873 = !DILocation(line: 3972, column: 3, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12868, file: !3, line: 3966, column: 22)
!12875 = !DILocation(line: 3974, column: 18, scope: !12869)
!12876 = !DILocation(line: 3974, column: 22, scope: !12869)
!12877 = !DILocation(line: 3974, column: 27, scope: !12869)
!12878 = !DILocation(line: 3974, column: 3, scope: !12869)
!12879 = !DILocation(line: 3976, column: 1, scope: !12676)
!12880 = distinct !DISubprogram(name: "ips_removeq_scb", scope: !3, file: !3, line: 2816, type: !12881, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12881 = !DISubroutineType(types: !12882)
!12882 = !{!4848, !12883, !4848}
!12883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!12884 = !DILocalVariable(name: "queue", arg: 1, scope: !12880, file: !3, line: 2816, type: !12883)
!12885 = !DILocation(line: 2816, column: 35, scope: !12880)
!12886 = !DILocalVariable(name: "item", arg: 2, scope: !12880, file: !3, line: 2816, type: !4848)
!12887 = !DILocation(line: 2816, column: 54, scope: !12880)
!12888 = !DILocalVariable(name: "p", scope: !12880, file: !3, line: 2818, type: !4848)
!12889 = !DILocation(line: 2818, column: 13, scope: !12880)
!12890 = !DILocation(line: 2822, column: 7, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 2822, column: 6)
!12892 = !DILocation(line: 2822, column: 6, scope: !12880)
!12893 = !DILocation(line: 2823, column: 3, scope: !12891)
!12894 = !DILocation(line: 2825, column: 6, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 2825, column: 6)
!12896 = !DILocation(line: 2825, column: 14, scope: !12895)
!12897 = !DILocation(line: 2825, column: 21, scope: !12895)
!12898 = !DILocation(line: 2825, column: 11, scope: !12895)
!12899 = !DILocation(line: 2825, column: 6, scope: !12880)
!12900 = !DILocation(line: 2826, column: 32, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12895, file: !3, line: 2825, column: 27)
!12902 = !DILocation(line: 2826, column: 11, scope: !12901)
!12903 = !DILocation(line: 2826, column: 3, scope: !12901)
!12904 = !DILocation(line: 2829, column: 6, scope: !12880)
!12905 = !DILocation(line: 2829, column: 13, scope: !12880)
!12906 = !DILocation(line: 2829, column: 4, scope: !12880)
!12907 = !DILocation(line: 2831, column: 2, scope: !12880)
!12908 = !DILocation(line: 2831, column: 10, scope: !12880)
!12909 = !DILocation(line: 2831, column: 9, scope: !12880)
!12910 = !DILocation(line: 2831, column: 13, scope: !12880)
!12911 = !DILocation(line: 2831, column: 17, scope: !12880)
!12912 = !DILocation(line: 2831, column: 25, scope: !12880)
!12913 = !DILocation(line: 2831, column: 28, scope: !12880)
!12914 = !DILocation(line: 2831, column: 22, scope: !12880)
!12915 = !DILocation(line: 0, scope: !12880)
!12916 = !DILocation(line: 2832, column: 7, scope: !12880)
!12917 = !DILocation(line: 2832, column: 10, scope: !12880)
!12918 = !DILocation(line: 2832, column: 5, scope: !12880)
!12919 = distinct !{!12919, !12907, !12917}
!12920 = !DILocation(line: 2834, column: 6, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 2834, column: 6)
!12922 = !DILocation(line: 2834, column: 6, scope: !12880)
!12923 = !DILocation(line: 2836, column: 15, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2834, column: 9)
!12925 = !DILocation(line: 2836, column: 21, scope: !12924)
!12926 = !DILocation(line: 2836, column: 3, scope: !12924)
!12927 = !DILocation(line: 2836, column: 6, scope: !12924)
!12928 = !DILocation(line: 2836, column: 13, scope: !12924)
!12929 = !DILocation(line: 2838, column: 8, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12924, file: !3, line: 2838, column: 7)
!12931 = !DILocation(line: 2838, column: 14, scope: !12930)
!12932 = !DILocation(line: 2838, column: 7, scope: !12924)
!12933 = !DILocation(line: 2839, column: 18, scope: !12930)
!12934 = !DILocation(line: 2839, column: 4, scope: !12930)
!12935 = !DILocation(line: 2839, column: 11, scope: !12930)
!12936 = !DILocation(line: 2839, column: 16, scope: !12930)
!12937 = !DILocation(line: 2841, column: 3, scope: !12924)
!12938 = !DILocation(line: 2841, column: 9, scope: !12924)
!12939 = !DILocation(line: 2841, column: 16, scope: !12924)
!12940 = !DILocation(line: 2842, column: 3, scope: !12924)
!12941 = !DILocation(line: 2842, column: 10, scope: !12924)
!12942 = !DILocation(line: 2842, column: 15, scope: !12924)
!12943 = !DILocation(line: 2844, column: 11, scope: !12924)
!12944 = !DILocation(line: 2844, column: 3, scope: !12924)
!12945 = !DILocation(line: 2847, column: 2, scope: !12880)
!12946 = !DILocation(line: 2848, column: 1, scope: !12880)
!12947 = distinct !DISubprogram(name: "ips_online", scope: !3, file: !3, line: 3988, type: !8517, scopeLine: 3989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!12948 = !DILocalVariable(name: "ha", arg: 1, scope: !12947, file: !3, line: 3988, type: !5540)
!12949 = !DILocation(line: 3988, column: 23, scope: !12947)
!12950 = !DILocalVariable(name: "scb", arg: 2, scope: !12947, file: !3, line: 3988, type: !4848)
!12951 = !DILocation(line: 3988, column: 39, scope: !12947)
!12952 = !DILocation(line: 3992, column: 6, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 3992, column: 6)
!12954 = !DILocation(line: 3992, column: 11, scope: !12953)
!12955 = !DILocation(line: 3992, column: 21, scope: !12953)
!12956 = !DILocation(line: 3992, column: 6, scope: !12947)
!12957 = !DILocation(line: 3993, column: 3, scope: !12953)
!12958 = !DILocation(line: 3995, column: 7, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 3995, column: 6)
!12960 = !DILocation(line: 3995, column: 12, scope: !12959)
!12961 = !DILocation(line: 3995, column: 25, scope: !12959)
!12962 = !DILocation(line: 3995, column: 48, scope: !12959)
!12963 = !DILocation(line: 3995, column: 6, scope: !12947)
!12964 = !DILocation(line: 3996, column: 10, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12959, file: !3, line: 3995, column: 53)
!12966 = !DILocation(line: 3996, column: 14, scope: !12965)
!12967 = !DILocation(line: 3996, column: 3, scope: !12965)
!12968 = !DILocation(line: 3997, column: 3, scope: !12965)
!12969 = !DILocation(line: 4000, column: 6, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 4000, column: 6)
!12971 = !DILocation(line: 4000, column: 10, scope: !12970)
!12972 = !DILocation(line: 4000, column: 30, scope: !12970)
!12973 = !DILocation(line: 4000, column: 41, scope: !12970)
!12974 = !DILocation(line: 4000, column: 46, scope: !12970)
!12975 = !DILocation(line: 4000, column: 57, scope: !12970)
!12976 = !DILocation(line: 4000, column: 63, scope: !12970)
!12977 = !DILocation(line: 4002, column: 6, scope: !12970)
!12978 = !DILocation(line: 4002, column: 9, scope: !12970)
!12979 = !DILocation(line: 4002, column: 13, scope: !12970)
!12980 = !DILocation(line: 4002, column: 33, scope: !12970)
!12981 = !DILocation(line: 4002, column: 44, scope: !12970)
!12982 = !DILocation(line: 4002, column: 49, scope: !12970)
!12983 = !DILocation(line: 4002, column: 60, scope: !12970)
!12984 = !DILocation(line: 4002, column: 66, scope: !12970)
!12985 = !DILocation(line: 4004, column: 6, scope: !12970)
!12986 = !DILocation(line: 4004, column: 9, scope: !12970)
!12987 = !DILocation(line: 4004, column: 13, scope: !12970)
!12988 = !DILocation(line: 4004, column: 33, scope: !12970)
!12989 = !DILocation(line: 4004, column: 44, scope: !12970)
!12990 = !DILocation(line: 4004, column: 49, scope: !12970)
!12991 = !DILocation(line: 4004, column: 60, scope: !12970)
!12992 = !DILocation(line: 4004, column: 66, scope: !12970)
!12993 = !DILocation(line: 4006, column: 6, scope: !12970)
!12994 = !DILocation(line: 4006, column: 9, scope: !12970)
!12995 = !DILocation(line: 4006, column: 13, scope: !12970)
!12996 = !DILocation(line: 4006, column: 33, scope: !12970)
!12997 = !DILocation(line: 4006, column: 44, scope: !12970)
!12998 = !DILocation(line: 4006, column: 49, scope: !12970)
!12999 = !DILocation(line: 4006, column: 60, scope: !12970)
!13000 = !DILocation(line: 4006, column: 66, scope: !12970)
!13001 = !DILocation(line: 4000, column: 6, scope: !12947)
!13002 = !DILocation(line: 4008, column: 3, scope: !12970)
!13003 = !DILocation(line: 4010, column: 3, scope: !12970)
!13004 = !DILocation(line: 4011, column: 1, scope: !12947)
!13005 = distinct !DISubprogram(name: "ips_inquiry", scope: !3, file: !3, line: 4023, type: !8517, scopeLine: 4024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13006 = !DILocalVariable(name: "ha", arg: 1, scope: !13005, file: !3, line: 4023, type: !5540)
!13007 = !DILocation(line: 4023, column: 24, scope: !13005)
!13008 = !DILocalVariable(name: "scb", arg: 2, scope: !13005, file: !3, line: 4023, type: !4848)
!13009 = !DILocation(line: 4023, column: 40, scope: !13005)
!13010 = !DILocalVariable(name: "inquiry", scope: !13005, file: !3, line: 4025, type: !11436)
!13011 = !DILocation(line: 4025, column: 20, scope: !13005)
!13012 = !DILocation(line: 4029, column: 2, scope: !13005)
!13013 = !DILocation(line: 4031, column: 10, scope: !13005)
!13014 = !DILocation(line: 4031, column: 21, scope: !13005)
!13015 = !DILocation(line: 4032, column: 10, scope: !13005)
!13016 = !DILocation(line: 4032, column: 30, scope: !13005)
!13017 = !DILocation(line: 4033, column: 10, scope: !13005)
!13018 = !DILocation(line: 4033, column: 18, scope: !13005)
!13019 = !DILocation(line: 4034, column: 10, scope: !13005)
!13020 = !DILocation(line: 4034, column: 29, scope: !13005)
!13021 = !DILocation(line: 4035, column: 10, scope: !13005)
!13022 = !DILocation(line: 4035, column: 27, scope: !13005)
!13023 = !DILocation(line: 4036, column: 10, scope: !13005)
!13024 = !DILocation(line: 4036, column: 2, scope: !13005)
!13025 = !DILocation(line: 4036, column: 19, scope: !13005)
!13026 = !DILocation(line: 4037, column: 10, scope: !13005)
!13027 = !DILocation(line: 4037, column: 2, scope: !13005)
!13028 = !DILocation(line: 4037, column: 19, scope: !13005)
!13029 = !DILocation(line: 4039, column: 17, scope: !13005)
!13030 = !DILocation(line: 4039, column: 2, scope: !13005)
!13031 = !DILocation(line: 4040, column: 17, scope: !13005)
!13032 = !DILocation(line: 4040, column: 2, scope: !13005)
!13033 = !DILocation(line: 4041, column: 17, scope: !13005)
!13034 = !DILocation(line: 4041, column: 2, scope: !13005)
!13035 = !DILocation(line: 4043, column: 21, scope: !13005)
!13036 = !DILocation(line: 4043, column: 26, scope: !13005)
!13037 = !DILocation(line: 4043, column: 36, scope: !13005)
!13038 = !DILocation(line: 4043, column: 2, scope: !13005)
!13039 = !DILocation(line: 4045, column: 2, scope: !13005)
!13040 = distinct !DISubprogram(name: "ips_msense", scope: !3, file: !3, line: 4088, type: !8517, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13041 = !DILocalVariable(name: "ha", arg: 1, scope: !13040, file: !3, line: 4088, type: !5540)
!13042 = !DILocation(line: 4088, column: 23, scope: !13040)
!13043 = !DILocalVariable(name: "scb", arg: 2, scope: !13040, file: !3, line: 4088, type: !4848)
!13044 = !DILocation(line: 4088, column: 39, scope: !13040)
!13045 = !DILocalVariable(name: "heads", scope: !13040, file: !3, line: 4090, type: !215)
!13046 = !DILocation(line: 4090, column: 11, scope: !13040)
!13047 = !DILocalVariable(name: "sectors", scope: !13040, file: !3, line: 4091, type: !215)
!13048 = !DILocation(line: 4091, column: 11, scope: !13040)
!13049 = !DILocalVariable(name: "cylinders", scope: !13040, file: !3, line: 4092, type: !186)
!13050 = !DILocation(line: 4092, column: 11, scope: !13040)
!13051 = !DILocalVariable(name: "mdata", scope: !13040, file: !3, line: 4093, type: !13052)
!13052 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_MODE_PAGE_DATA", file: !201, line: 920, baseType: !13053)
!13053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 911, size: 352, elements: !13054)
!13054 = !{!13055, !13063, !13071}
!13055 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !13053, file: !201, line: 912, baseType: !13056, size: 32)
!13056 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_MODE_PAGE_HEADER", file: !201, line: 909, baseType: !13057)
!13057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 904, size: 32, elements: !13058)
!13058 = !{!13059, !13060, !13061, !13062}
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "DataLength", scope: !13057, file: !201, line: 905, baseType: !205, size: 8)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "MediumType", scope: !13057, file: !201, line: 906, baseType: !205, size: 8, offset: 8)
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !13057, file: !201, line: 907, baseType: !205, size: 8, offset: 16)
!13062 = !DIDerivedType(tag: DW_TAG_member, name: "BlockDescLength", scope: !13057, file: !201, line: 908, baseType: !205, size: 8, offset: 24)
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "blkdesc", scope: !13053, file: !201, line: 913, baseType: !13064, size: 96, offset: 32)
!13064 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_MODE_PAGE_BLKDESC", file: !201, line: 899, baseType: !13065)
!13065 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 894, size: 96, elements: !13066)
!13066 = !{!13067, !13068, !13069, !13070}
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "NumberOfBlocks", scope: !13065, file: !201, line: 895, baseType: !186, size: 32)
!13068 = !DIDerivedType(tag: DW_TAG_member, name: "DensityCode", scope: !13065, file: !201, line: 896, baseType: !205, size: 8, offset: 32)
!13069 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLengthHigh", scope: !13065, file: !201, line: 897, baseType: !215, size: 16, offset: 48)
!13070 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLengthLow", scope: !13065, file: !201, line: 898, baseType: !205, size: 8, offset: 64)
!13071 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !13053, file: !201, line: 919, baseType: !13072, size: 208, offset: 128)
!13072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13053, file: !201, line: 915, size: 208, elements: !13073)
!13073 = !{!13074, !13091, !13112}
!13074 = !DIDerivedType(tag: DW_TAG_member, name: "pg3", scope: !13072, file: !201, line: 916, baseType: !13075, size: 192)
!13075 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_MODE_PAGE3", file: !201, line: 852, baseType: !13076)
!13076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 838, size: 192, elements: !13077)
!13077 = !{!13078, !13079, !13080, !13081, !13082, !13083, !13084, !13085, !13086, !13087, !13088, !13089, !13090}
!13078 = !DIDerivedType(tag: DW_TAG_member, name: "PageCode", scope: !13076, file: !201, line: 839, baseType: !205, size: 8)
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "PageLength", scope: !13076, file: !201, line: 840, baseType: !205, size: 8, offset: 8)
!13080 = !DIDerivedType(tag: DW_TAG_member, name: "TracksPerZone", scope: !13076, file: !201, line: 841, baseType: !215, size: 16, offset: 16)
!13081 = !DIDerivedType(tag: DW_TAG_member, name: "AltSectorsPerZone", scope: !13076, file: !201, line: 842, baseType: !215, size: 16, offset: 32)
!13082 = !DIDerivedType(tag: DW_TAG_member, name: "AltTracksPerZone", scope: !13076, file: !201, line: 843, baseType: !215, size: 16, offset: 48)
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "AltTracksPerVolume", scope: !13076, file: !201, line: 844, baseType: !215, size: 16, offset: 64)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerTrack", scope: !13076, file: !201, line: 845, baseType: !215, size: 16, offset: 80)
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "BytesPerSector", scope: !13076, file: !201, line: 846, baseType: !215, size: 16, offset: 96)
!13086 = !DIDerivedType(tag: DW_TAG_member, name: "Interleave", scope: !13076, file: !201, line: 847, baseType: !215, size: 16, offset: 112)
!13087 = !DIDerivedType(tag: DW_TAG_member, name: "TrackSkew", scope: !13076, file: !201, line: 848, baseType: !215, size: 16, offset: 128)
!13088 = !DIDerivedType(tag: DW_TAG_member, name: "CylinderSkew", scope: !13076, file: !201, line: 849, baseType: !215, size: 16, offset: 144)
!13089 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13076, file: !201, line: 850, baseType: !205, size: 8, offset: 160)
!13090 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !13076, file: !201, line: 851, baseType: !5063, size: 24, offset: 168)
!13091 = !DIDerivedType(tag: DW_TAG_member, name: "pg4", scope: !13072, file: !201, line: 917, baseType: !13092, size: 208)
!13092 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_MODE_PAGE4", file: !201, line: 875, baseType: !13093)
!13093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 857, size: 208, elements: !13094)
!13094 = !{!13095, !13096, !13097, !13098, !13099, !13100, !13101, !13102, !13103, !13104, !13105, !13106, !13107, !13108, !13109, !13110, !13111}
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "PageCode", scope: !13093, file: !201, line: 858, baseType: !205, size: 8)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "PageLength", scope: !13093, file: !201, line: 859, baseType: !205, size: 8, offset: 8)
!13097 = !DIDerivedType(tag: DW_TAG_member, name: "CylindersHigh", scope: !13093, file: !201, line: 860, baseType: !215, size: 16, offset: 16)
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "CylindersLow", scope: !13093, file: !201, line: 861, baseType: !205, size: 8, offset: 32)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "Heads", scope: !13093, file: !201, line: 862, baseType: !205, size: 8, offset: 40)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "WritePrecompHigh", scope: !13093, file: !201, line: 863, baseType: !215, size: 16, offset: 48)
!13101 = !DIDerivedType(tag: DW_TAG_member, name: "WritePrecompLow", scope: !13093, file: !201, line: 864, baseType: !205, size: 8, offset: 64)
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "ReducedWriteCurrentHigh", scope: !13093, file: !201, line: 865, baseType: !215, size: 16, offset: 80)
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "ReducedWriteCurrentLow", scope: !13093, file: !201, line: 866, baseType: !205, size: 8, offset: 96)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "StepRate", scope: !13093, file: !201, line: 867, baseType: !215, size: 16, offset: 112)
!13105 = !DIDerivedType(tag: DW_TAG_member, name: "LandingZoneHigh", scope: !13093, file: !201, line: 868, baseType: !215, size: 16, offset: 128)
!13106 = !DIDerivedType(tag: DW_TAG_member, name: "LandingZoneLow", scope: !13093, file: !201, line: 869, baseType: !205, size: 8, offset: 144)
!13107 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13093, file: !201, line: 870, baseType: !205, size: 8, offset: 152)
!13108 = !DIDerivedType(tag: DW_TAG_member, name: "RotationalOffset", scope: !13093, file: !201, line: 871, baseType: !205, size: 8, offset: 160)
!13109 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !13093, file: !201, line: 872, baseType: !205, size: 8, offset: 168)
!13110 = !DIDerivedType(tag: DW_TAG_member, name: "MediumRotationRate", scope: !13093, file: !201, line: 873, baseType: !215, size: 16, offset: 176)
!13111 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !13093, file: !201, line: 874, baseType: !8934, size: 16, offset: 192)
!13112 = !DIDerivedType(tag: DW_TAG_member, name: "pg8", scope: !13072, file: !201, line: 918, baseType: !13113, size: 96)
!13113 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_MODE_PAGE8", file: !201, line: 889, baseType: !13114)
!13114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 880, size: 96, elements: !13115)
!13115 = !{!13116, !13117, !13118, !13119, !13120, !13121, !13122, !13123}
!13116 = !DIDerivedType(tag: DW_TAG_member, name: "PageCode", scope: !13114, file: !201, line: 881, baseType: !205, size: 8)
!13117 = !DIDerivedType(tag: DW_TAG_member, name: "PageLength", scope: !13114, file: !201, line: 882, baseType: !205, size: 8, offset: 8)
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13114, file: !201, line: 883, baseType: !205, size: 8, offset: 16)
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "RetentPrio", scope: !13114, file: !201, line: 884, baseType: !205, size: 8, offset: 24)
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "DisPrefetchLen", scope: !13114, file: !201, line: 885, baseType: !215, size: 16, offset: 32)
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "MinPrefetchLen", scope: !13114, file: !201, line: 886, baseType: !215, size: 16, offset: 48)
!13122 = !DIDerivedType(tag: DW_TAG_member, name: "MaxPrefetchLen", scope: !13114, file: !201, line: 887, baseType: !215, size: 16, offset: 64)
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "MaxPrefetchCeiling", scope: !13114, file: !201, line: 888, baseType: !215, size: 16, offset: 80)
!13124 = !DILocation(line: 4093, column: 26, scope: !13040)
!13125 = !DILocation(line: 4097, column: 6, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 4097, column: 6)
!13127 = !DILocation(line: 4097, column: 56, scope: !13126)
!13128 = !DILocation(line: 4097, column: 67, scope: !13126)
!13129 = !DILocation(line: 4098, column: 7, scope: !13126)
!13130 = !DILocation(line: 4098, column: 11, scope: !13126)
!13131 = !DILocation(line: 4098, column: 16, scope: !13126)
!13132 = !DILocation(line: 4098, column: 27, scope: !13126)
!13133 = !DILocation(line: 4098, column: 34, scope: !13126)
!13134 = !DILocation(line: 4097, column: 6, scope: !13040)
!13135 = !DILocation(line: 4099, column: 9, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13126, file: !3, line: 4098, column: 40)
!13137 = !DILocation(line: 4100, column: 11, scope: !13136)
!13138 = !DILocation(line: 4101, column: 2, scope: !13136)
!13139 = !DILocation(line: 4102, column: 9, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13126, file: !3, line: 4101, column: 9)
!13141 = !DILocation(line: 4103, column: 11, scope: !13140)
!13142 = !DILocation(line: 4107, column: 7, scope: !13040)
!13143 = !DILocation(line: 4107, column: 57, scope: !13040)
!13144 = !DILocation(line: 4108, column: 13, scope: !13040)
!13145 = !DILocation(line: 4108, column: 21, scope: !13040)
!13146 = !DILocation(line: 4108, column: 19, scope: !13040)
!13147 = !DILocation(line: 4108, column: 10, scope: !13040)
!13148 = !DILocation(line: 4106, column: 12, scope: !13040)
!13149 = !DILocation(line: 4110, column: 2, scope: !13040)
!13150 = !DILocation(line: 4112, column: 8, scope: !13040)
!13151 = !DILocation(line: 4112, column: 12, scope: !13040)
!13152 = !DILocation(line: 4112, column: 28, scope: !13040)
!13153 = !DILocation(line: 4114, column: 10, scope: !13040)
!13154 = !DILocation(line: 4114, column: 15, scope: !13040)
!13155 = !DILocation(line: 4114, column: 25, scope: !13040)
!13156 = !DILocation(line: 4114, column: 33, scope: !13040)
!13157 = !DILocation(line: 4114, column: 2, scope: !13040)
!13158 = !DILocation(line: 4116, column: 9, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 4114, column: 41)
!13160 = !DILocation(line: 4116, column: 15, scope: !13159)
!13161 = !DILocation(line: 4116, column: 19, scope: !13159)
!13162 = !DILocation(line: 4116, column: 28, scope: !13159)
!13163 = !DILocation(line: 4117, column: 9, scope: !13159)
!13164 = !DILocation(line: 4117, column: 15, scope: !13159)
!13165 = !DILocation(line: 4117, column: 19, scope: !13159)
!13166 = !DILocation(line: 4117, column: 30, scope: !13159)
!13167 = !DILocation(line: 4119, column: 17, scope: !13159)
!13168 = !DILocation(line: 4119, column: 21, scope: !13159)
!13169 = !DILocation(line: 4119, column: 11, scope: !13159)
!13170 = !DILocation(line: 4119, column: 9, scope: !13159)
!13171 = !DILocation(line: 4119, column: 45, scope: !13159)
!13172 = !DILocation(line: 4119, column: 51, scope: !13159)
!13173 = !DILocation(line: 4119, column: 55, scope: !13159)
!13174 = !DILocation(line: 4119, column: 39, scope: !13159)
!13175 = !DILocation(line: 4119, column: 37, scope: !13159)
!13176 = !DILocation(line: 4119, column: 7, scope: !13159)
!13177 = !DILocation(line: 4118, column: 9, scope: !13159)
!13178 = !DILocation(line: 4118, column: 13, scope: !13159)
!13179 = !DILocation(line: 4118, column: 24, scope: !13159)
!13180 = !DILocation(line: 4120, column: 9, scope: !13159)
!13181 = !DILocation(line: 4120, column: 15, scope: !13159)
!13182 = !DILocation(line: 4120, column: 19, scope: !13159)
!13183 = !DILocation(line: 4120, column: 33, scope: !13159)
!13184 = !DILocation(line: 4121, column: 9, scope: !13159)
!13185 = !DILocation(line: 4121, column: 15, scope: !13159)
!13186 = !DILocation(line: 4121, column: 19, scope: !13159)
!13187 = !DILocation(line: 4121, column: 37, scope: !13159)
!13188 = !DILocation(line: 4122, column: 9, scope: !13159)
!13189 = !DILocation(line: 4122, column: 15, scope: !13159)
!13190 = !DILocation(line: 4122, column: 19, scope: !13159)
!13191 = !DILocation(line: 4122, column: 36, scope: !13159)
!13192 = !DILocation(line: 4123, column: 9, scope: !13159)
!13193 = !DILocation(line: 4123, column: 15, scope: !13159)
!13194 = !DILocation(line: 4123, column: 19, scope: !13159)
!13195 = !DILocation(line: 4123, column: 38, scope: !13159)
!13196 = !DILocation(line: 4124, column: 37, scope: !13159)
!13197 = !DILocation(line: 4124, column: 9, scope: !13159)
!13198 = !DILocation(line: 4124, column: 15, scope: !13159)
!13199 = !DILocation(line: 4124, column: 19, scope: !13159)
!13200 = !DILocation(line: 4124, column: 35, scope: !13159)
!13201 = !DILocation(line: 4125, column: 9, scope: !13159)
!13202 = !DILocation(line: 4125, column: 15, scope: !13159)
!13203 = !DILocation(line: 4125, column: 19, scope: !13159)
!13204 = !DILocation(line: 4125, column: 34, scope: !13159)
!13205 = !DILocation(line: 4126, column: 9, scope: !13159)
!13206 = !DILocation(line: 4126, column: 15, scope: !13159)
!13207 = !DILocation(line: 4126, column: 19, scope: !13159)
!13208 = !DILocation(line: 4126, column: 30, scope: !13159)
!13209 = !DILocation(line: 4127, column: 9, scope: !13159)
!13210 = !DILocation(line: 4127, column: 15, scope: !13159)
!13211 = !DILocation(line: 4127, column: 19, scope: !13159)
!13212 = !DILocation(line: 4127, column: 29, scope: !13159)
!13213 = !DILocation(line: 4128, column: 9, scope: !13159)
!13214 = !DILocation(line: 4128, column: 15, scope: !13159)
!13215 = !DILocation(line: 4128, column: 19, scope: !13159)
!13216 = !DILocation(line: 4128, column: 32, scope: !13159)
!13217 = !DILocation(line: 4129, column: 9, scope: !13159)
!13218 = !DILocation(line: 4129, column: 15, scope: !13159)
!13219 = !DILocation(line: 4129, column: 19, scope: !13159)
!13220 = !DILocation(line: 4129, column: 25, scope: !13159)
!13221 = !DILocation(line: 4130, column: 3, scope: !13159)
!13222 = !DILocation(line: 4133, column: 9, scope: !13159)
!13223 = !DILocation(line: 4133, column: 15, scope: !13159)
!13224 = !DILocation(line: 4133, column: 19, scope: !13159)
!13225 = !DILocation(line: 4133, column: 28, scope: !13159)
!13226 = !DILocation(line: 4134, column: 9, scope: !13159)
!13227 = !DILocation(line: 4134, column: 15, scope: !13159)
!13228 = !DILocation(line: 4134, column: 19, scope: !13159)
!13229 = !DILocation(line: 4134, column: 30, scope: !13159)
!13230 = !DILocation(line: 4136, column: 17, scope: !13159)
!13231 = !DILocation(line: 4136, column: 21, scope: !13159)
!13232 = !DILocation(line: 4136, column: 11, scope: !13159)
!13233 = !DILocation(line: 4136, column: 9, scope: !13159)
!13234 = !DILocation(line: 4136, column: 45, scope: !13159)
!13235 = !DILocation(line: 4136, column: 51, scope: !13159)
!13236 = !DILocation(line: 4136, column: 55, scope: !13159)
!13237 = !DILocation(line: 4136, column: 39, scope: !13159)
!13238 = !DILocation(line: 4136, column: 37, scope: !13159)
!13239 = !DILocation(line: 4136, column: 7, scope: !13159)
!13240 = !DILocation(line: 4135, column: 9, scope: !13159)
!13241 = !DILocation(line: 4135, column: 13, scope: !13159)
!13242 = !DILocation(line: 4135, column: 24, scope: !13159)
!13243 = !DILocation(line: 4138, column: 7, scope: !13159)
!13244 = !DILocation(line: 4137, column: 9, scope: !13159)
!13245 = !DILocation(line: 4137, column: 15, scope: !13159)
!13246 = !DILocation(line: 4137, column: 19, scope: !13159)
!13247 = !DILocation(line: 4137, column: 33, scope: !13159)
!13248 = !DILocation(line: 4139, column: 35, scope: !13159)
!13249 = !DILocation(line: 4139, column: 45, scope: !13159)
!13250 = !DILocation(line: 4139, column: 34, scope: !13159)
!13251 = !DILocation(line: 4139, column: 9, scope: !13159)
!13252 = !DILocation(line: 4139, column: 15, scope: !13159)
!13253 = !DILocation(line: 4139, column: 19, scope: !13159)
!13254 = !DILocation(line: 4139, column: 32, scope: !13159)
!13255 = !DILocation(line: 4140, column: 27, scope: !13159)
!13256 = !DILocation(line: 4140, column: 9, scope: !13159)
!13257 = !DILocation(line: 4140, column: 15, scope: !13159)
!13258 = !DILocation(line: 4140, column: 19, scope: !13159)
!13259 = !DILocation(line: 4140, column: 25, scope: !13159)
!13260 = !DILocation(line: 4141, column: 9, scope: !13159)
!13261 = !DILocation(line: 4141, column: 15, scope: !13159)
!13262 = !DILocation(line: 4141, column: 19, scope: !13159)
!13263 = !DILocation(line: 4141, column: 36, scope: !13159)
!13264 = !DILocation(line: 4142, column: 9, scope: !13159)
!13265 = !DILocation(line: 4142, column: 15, scope: !13159)
!13266 = !DILocation(line: 4142, column: 19, scope: !13159)
!13267 = !DILocation(line: 4142, column: 35, scope: !13159)
!13268 = !DILocation(line: 4143, column: 9, scope: !13159)
!13269 = !DILocation(line: 4143, column: 15, scope: !13159)
!13270 = !DILocation(line: 4143, column: 19, scope: !13159)
!13271 = !DILocation(line: 4143, column: 43, scope: !13159)
!13272 = !DILocation(line: 4144, column: 9, scope: !13159)
!13273 = !DILocation(line: 4144, column: 15, scope: !13159)
!13274 = !DILocation(line: 4144, column: 19, scope: !13159)
!13275 = !DILocation(line: 4144, column: 42, scope: !13159)
!13276 = !DILocation(line: 4145, column: 9, scope: !13159)
!13277 = !DILocation(line: 4145, column: 15, scope: !13159)
!13278 = !DILocation(line: 4145, column: 19, scope: !13159)
!13279 = !DILocation(line: 4145, column: 28, scope: !13159)
!13280 = !DILocation(line: 4146, column: 9, scope: !13159)
!13281 = !DILocation(line: 4146, column: 15, scope: !13159)
!13282 = !DILocation(line: 4146, column: 19, scope: !13159)
!13283 = !DILocation(line: 4146, column: 35, scope: !13159)
!13284 = !DILocation(line: 4147, column: 9, scope: !13159)
!13285 = !DILocation(line: 4147, column: 15, scope: !13159)
!13286 = !DILocation(line: 4147, column: 19, scope: !13159)
!13287 = !DILocation(line: 4147, column: 34, scope: !13159)
!13288 = !DILocation(line: 4148, column: 9, scope: !13159)
!13289 = !DILocation(line: 4148, column: 15, scope: !13159)
!13290 = !DILocation(line: 4148, column: 19, scope: !13159)
!13291 = !DILocation(line: 4148, column: 25, scope: !13159)
!13292 = !DILocation(line: 4149, column: 9, scope: !13159)
!13293 = !DILocation(line: 4149, column: 15, scope: !13159)
!13294 = !DILocation(line: 4149, column: 19, scope: !13159)
!13295 = !DILocation(line: 4149, column: 36, scope: !13159)
!13296 = !DILocation(line: 4150, column: 9, scope: !13159)
!13297 = !DILocation(line: 4150, column: 15, scope: !13159)
!13298 = !DILocation(line: 4150, column: 19, scope: !13159)
!13299 = !DILocation(line: 4150, column: 38, scope: !13159)
!13300 = !DILocation(line: 4151, column: 3, scope: !13159)
!13301 = !DILocation(line: 4153, column: 9, scope: !13159)
!13302 = !DILocation(line: 4153, column: 15, scope: !13159)
!13303 = !DILocation(line: 4153, column: 19, scope: !13159)
!13304 = !DILocation(line: 4153, column: 28, scope: !13159)
!13305 = !DILocation(line: 4154, column: 9, scope: !13159)
!13306 = !DILocation(line: 4154, column: 15, scope: !13159)
!13307 = !DILocation(line: 4154, column: 19, scope: !13159)
!13308 = !DILocation(line: 4154, column: 30, scope: !13159)
!13309 = !DILocation(line: 4156, column: 17, scope: !13159)
!13310 = !DILocation(line: 4156, column: 21, scope: !13159)
!13311 = !DILocation(line: 4156, column: 11, scope: !13159)
!13312 = !DILocation(line: 4156, column: 9, scope: !13159)
!13313 = !DILocation(line: 4156, column: 45, scope: !13159)
!13314 = !DILocation(line: 4156, column: 51, scope: !13159)
!13315 = !DILocation(line: 4156, column: 55, scope: !13159)
!13316 = !DILocation(line: 4156, column: 39, scope: !13159)
!13317 = !DILocation(line: 4156, column: 37, scope: !13159)
!13318 = !DILocation(line: 4156, column: 7, scope: !13159)
!13319 = !DILocation(line: 4155, column: 9, scope: !13159)
!13320 = !DILocation(line: 4155, column: 13, scope: !13159)
!13321 = !DILocation(line: 4155, column: 24, scope: !13159)
!13322 = !DILocation(line: 4158, column: 3, scope: !13159)
!13323 = !DILocation(line: 4161, column: 3, scope: !13159)
!13324 = !DILocation(line: 4164, column: 21, scope: !13040)
!13325 = !DILocation(line: 4164, column: 26, scope: !13040)
!13326 = !DILocation(line: 4164, column: 36, scope: !13040)
!13327 = !DILocation(line: 4164, column: 2, scope: !13040)
!13328 = !DILocation(line: 4166, column: 2, scope: !13040)
!13329 = !DILocation(line: 4167, column: 1, scope: !13040)
!13330 = distinct !DISubprogram(name: "ips_rdcap", scope: !3, file: !3, line: 4058, type: !8517, scopeLine: 4059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13331 = !DILocalVariable(name: "ha", arg: 1, scope: !13330, file: !3, line: 4058, type: !5540)
!13332 = !DILocation(line: 4058, column: 22, scope: !13330)
!13333 = !DILocalVariable(name: "scb", arg: 2, scope: !13330, file: !3, line: 4058, type: !4848)
!13334 = !DILocation(line: 4058, column: 38, scope: !13330)
!13335 = !DILocalVariable(name: "cap", scope: !13330, file: !3, line: 4060, type: !13336)
!13336 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPS_SCSI_CAPACITY", file: !201, line: 817, baseType: !13337)
!13337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 814, size: 64, elements: !13338)
!13338 = !{!13339, !13340}
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "lba", scope: !13337, file: !201, line: 815, baseType: !186, size: 32)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !13337, file: !201, line: 816, baseType: !186, size: 32, offset: 32)
!13341 = !DILocation(line: 4060, column: 20, scope: !13330)
!13342 = !DILocation(line: 4064, column: 19, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 4064, column: 6)
!13344 = !DILocation(line: 4064, column: 24, scope: !13343)
!13345 = !DILocation(line: 4064, column: 6, scope: !13343)
!13346 = !DILocation(line: 4064, column: 34, scope: !13343)
!13347 = !DILocation(line: 4064, column: 6, scope: !13330)
!13348 = !DILocation(line: 4065, column: 3, scope: !13343)
!13349 = !DILocation(line: 4068, column: 6, scope: !13330)
!13350 = !DILocation(line: 4067, column: 6, scope: !13330)
!13351 = !DILocation(line: 4067, column: 10, scope: !13330)
!13352 = !DILocation(line: 4071, column: 6, scope: !13330)
!13353 = !DILocation(line: 4071, column: 10, scope: !13330)
!13354 = !DILocation(line: 4073, column: 21, scope: !13330)
!13355 = !DILocation(line: 4073, column: 26, scope: !13330)
!13356 = !DILocation(line: 4073, column: 36, scope: !13330)
!13357 = !DILocation(line: 4073, column: 2, scope: !13330)
!13358 = !DILocation(line: 4075, column: 2, scope: !13330)
!13359 = !DILocation(line: 4076, column: 1, scope: !13330)
!13360 = distinct !DISubprogram(name: "ips_scmd_buf_read", scope: !3, file: !3, line: 3428, type: !12419, scopeLine: 3429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13361 = !DILocalVariable(name: "scmd", arg: 1, scope: !13360, file: !3, line: 3428, type: !5101)
!13362 = !DILocation(line: 3428, column: 37, scope: !13360)
!13363 = !DILocalVariable(name: "data", arg: 2, scope: !13360, file: !3, line: 3428, type: !183)
!13364 = !DILocation(line: 3428, column: 49, scope: !13360)
!13365 = !DILocalVariable(name: "count", arg: 3, scope: !13360, file: !3, line: 3428, type: !7)
!13366 = !DILocation(line: 3428, column: 68, scope: !13360)
!13367 = !DILocalVariable(name: "flags", scope: !13360, file: !3, line: 3430, type: !198)
!13368 = !DILocation(line: 3430, column: 16, scope: !13360)
!13369 = !DILocation(line: 3432, column: 2, scope: !13360)
!13370 = !DILocation(line: 3432, column: 2, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13360, file: !3, line: 3432, column: 2)
!13372 = !DILocalVariable(name: "__dummy", scope: !13373, file: !3, line: 3432, type: !198)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 3432, column: 2)
!13374 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 3432, column: 2)
!13375 = !DILocation(line: 3432, column: 2, scope: !13373)
!13376 = !DILocalVariable(name: "__dummy2", scope: !13373, file: !3, line: 3432, type: !198)
!13377 = !DILocation(line: 3432, column: 2, scope: !13374)
!13378 = !DILocation(line: 3433, column: 25, scope: !13360)
!13379 = !DILocation(line: 3433, column: 31, scope: !13360)
!13380 = !DILocation(line: 3433, column: 37, scope: !13360)
!13381 = !DILocation(line: 3433, column: 2, scope: !13360)
!13382 = !DILocation(line: 3434, column: 2, scope: !13360)
!13383 = !DILocation(line: 3434, column: 2, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13360, file: !3, line: 3434, column: 2)
!13385 = !DILocalVariable(name: "__dummy", scope: !13386, file: !3, line: 3434, type: !198)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !3, line: 3434, column: 2)
!13387 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 3434, column: 2)
!13388 = !DILocation(line: 3434, column: 2, scope: !13386)
!13389 = !DILocalVariable(name: "__dummy2", scope: !13386, file: !3, line: 3434, type: !198)
!13390 = !DILocation(line: 3434, column: 2, scope: !13387)
!13391 = !DILocation(line: 3435, column: 1, scope: !13360)
!13392 = distinct !DISubprogram(name: "ips_map_status", scope: !3, file: !3, line: 3244, type: !13393, scopeLine: 3245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13393 = !DISubroutineType(types: !13394)
!13394 = !{!182, !5540, !4848, !8764}
!13395 = !DILocalVariable(name: "ha", arg: 1, scope: !13392, file: !3, line: 3244, type: !5540)
!13396 = !DILocation(line: 3244, column: 27, scope: !13392)
!13397 = !DILocalVariable(name: "scb", arg: 2, scope: !13392, file: !3, line: 3244, type: !4848)
!13398 = !DILocation(line: 3244, column: 43, scope: !13392)
!13399 = !DILocalVariable(name: "sp", arg: 3, scope: !13392, file: !3, line: 3244, type: !8764)
!13400 = !DILocation(line: 3244, column: 61, scope: !13392)
!13401 = !DILocalVariable(name: "errcode", scope: !13392, file: !3, line: 3246, type: !182)
!13402 = !DILocation(line: 3246, column: 6, scope: !13392)
!13403 = !DILocalVariable(name: "device_error", scope: !13392, file: !3, line: 3247, type: !182)
!13404 = !DILocation(line: 3247, column: 6, scope: !13392)
!13405 = !DILocalVariable(name: "transfer_len", scope: !13392, file: !3, line: 3248, type: !186)
!13406 = !DILocation(line: 3248, column: 11, scope: !13392)
!13407 = !DILocalVariable(name: "tapeDCDB", scope: !13392, file: !3, line: 3249, type: !199)
!13408 = !DILocation(line: 3249, column: 23, scope: !13392)
!13409 = !DILocalVariable(name: "inquiryData", scope: !13392, file: !3, line: 3250, type: !11436)
!13410 = !DILocation(line: 3250, column: 20, scope: !13392)
!13411 = !DILocation(line: 3254, column: 6, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 3254, column: 6)
!13413 = !DILocation(line: 3254, column: 11, scope: !13412)
!13414 = !DILocation(line: 3254, column: 6, scope: !13392)
!13415 = !DILocation(line: 3267, column: 2, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13412, file: !3, line: 3254, column: 16)
!13417 = !DILocation(line: 3270, column: 10, scope: !13392)
!13418 = !DILocation(line: 3271, column: 15, scope: !13392)
!13419 = !DILocation(line: 3273, column: 10, scope: !13392)
!13420 = !DILocation(line: 3273, column: 15, scope: !13392)
!13421 = !DILocation(line: 3273, column: 28, scope: !13392)
!13422 = !DILocation(line: 3273, column: 2, scope: !13392)
!13423 = !DILocation(line: 3275, column: 11, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 3273, column: 51)
!13425 = !DILocation(line: 3276, column: 3, scope: !13424)
!13426 = !DILocation(line: 3283, column: 3, scope: !13424)
!13427 = !DILocation(line: 3286, column: 11, scope: !13424)
!13428 = !DILocation(line: 3286, column: 16, scope: !13424)
!13429 = !DILocation(line: 3286, column: 3, scope: !13424)
!13430 = !DILocation(line: 3288, column: 8, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 3288, column: 8)
!13432 = distinct !DILexicalBlock(scope: !13424, file: !3, line: 3286, column: 33)
!13433 = !DILocation(line: 3288, column: 13, scope: !13431)
!13434 = !DILocation(line: 3288, column: 8, scope: !13432)
!13435 = !DILocation(line: 3289, column: 13, scope: !13431)
!13436 = !DILocation(line: 3289, column: 5, scope: !13431)
!13437 = !DILocation(line: 3291, column: 4, scope: !13432)
!13438 = !DILocation(line: 3294, column: 9, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 3294, column: 8)
!13440 = !DILocation(line: 3294, column: 14, scope: !13439)
!13441 = !DILocation(line: 3294, column: 18, scope: !13439)
!13442 = !DILocation(line: 3294, column: 23, scope: !13439)
!13443 = !DILocation(line: 3294, column: 31, scope: !13439)
!13444 = !DILocation(line: 3294, column: 57, scope: !13439)
!13445 = !DILocation(line: 3295, column: 9, scope: !13439)
!13446 = !DILocation(line: 3295, column: 14, scope: !13439)
!13447 = !DILocation(line: 3295, column: 18, scope: !13439)
!13448 = !DILocation(line: 3295, column: 23, scope: !13439)
!13449 = !DILocation(line: 3295, column: 31, scope: !13439)
!13450 = !DILocation(line: 3294, column: 8, scope: !13432)
!13451 = !DILocation(line: 3297, column: 42, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 3296, column: 36)
!13453 = !DILocation(line: 3297, column: 47, scope: !13452)
!13454 = !DILocation(line: 3297, column: 16, scope: !13452)
!13455 = !DILocation(line: 3297, column: 14, scope: !13452)
!13456 = !DILocation(line: 3298, column: 20, scope: !13452)
!13457 = !DILocation(line: 3298, column: 30, scope: !13452)
!13458 = !DILocation(line: 3298, column: 18, scope: !13452)
!13459 = !DILocation(line: 3299, column: 4, scope: !13452)
!13460 = !DILocation(line: 3301, column: 20, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 3299, column: 11)
!13462 = !DILocation(line: 3301, column: 25, scope: !13461)
!13463 = !DILocation(line: 3301, column: 30, scope: !13461)
!13464 = !DILocation(line: 3301, column: 9, scope: !13461)
!13465 = !DILocation(line: 3300, column: 18, scope: !13461)
!13466 = !DILocation(line: 3304, column: 9, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 3304, column: 8)
!13468 = !DILocation(line: 3304, column: 14, scope: !13467)
!13469 = !DILocation(line: 3304, column: 8, scope: !13467)
!13470 = !DILocation(line: 3304, column: 19, scope: !13467)
!13471 = !DILocation(line: 3304, column: 23, scope: !13467)
!13472 = !DILocation(line: 3304, column: 38, scope: !13467)
!13473 = !DILocation(line: 3304, column: 43, scope: !13467)
!13474 = !DILocation(line: 3304, column: 36, scope: !13467)
!13475 = !DILocation(line: 3304, column: 8, scope: !13432)
!13476 = !DILocation(line: 3306, column: 13, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13467, file: !3, line: 3304, column: 54)
!13478 = !DILocation(line: 3309, column: 9, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 3309, column: 9)
!13480 = !DILocation(line: 3309, column: 14, scope: !13479)
!13481 = !DILocation(line: 3309, column: 24, scope: !13479)
!13482 = !DILocation(line: 3309, column: 32, scope: !13479)
!13483 = !DILocation(line: 3309, column: 9, scope: !13477)
!13484 = !DILocation(line: 3310, column: 27, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 3309, column: 44)
!13486 = !DILocation(line: 3310, column: 32, scope: !13485)
!13487 = !DILocation(line: 3311, column: 39, scope: !13485)
!13488 = !DILocation(line: 3310, column: 9, scope: !13485)
!13489 = !DILocation(line: 3312, column: 27, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13485, file: !3, line: 3312, column: 14)
!13491 = !DILocation(line: 3312, column: 15, scope: !13490)
!13492 = !DILocation(line: 3312, column: 38, scope: !13490)
!13493 = !DILocation(line: 3312, column: 46, scope: !13490)
!13494 = !DILocation(line: 3312, column: 14, scope: !13485)
!13495 = !DILocation(line: 3313, column: 21, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 3312, column: 60)
!13497 = !DILocation(line: 3314, column: 13, scope: !13496)
!13498 = !DILocation(line: 3316, column: 5, scope: !13485)
!13499 = !DILocation(line: 3317, column: 4, scope: !13477)
!13500 = !DILocation(line: 3318, column: 13, scope: !13467)
!13501 = !DILocation(line: 3320, column: 4, scope: !13432)
!13502 = !DILocation(line: 3324, column: 8, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 3324, column: 8)
!13504 = !DILocation(line: 3324, column: 13, scope: !13503)
!13505 = !DILocation(line: 3324, column: 8, scope: !13432)
!13506 = !DILocation(line: 3325, column: 13, scope: !13503)
!13507 = !DILocation(line: 3325, column: 5, scope: !13503)
!13508 = !DILocation(line: 3327, column: 4, scope: !13432)
!13509 = !DILocation(line: 3331, column: 12, scope: !13432)
!13510 = !DILocation(line: 3332, column: 4, scope: !13432)
!13511 = !DILocation(line: 3335, column: 8, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 3335, column: 8)
!13513 = !DILocation(line: 3335, column: 13, scope: !13512)
!13514 = !DILocation(line: 3335, column: 8, scope: !13432)
!13515 = !DILocation(line: 3336, column: 10, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 3336, column: 9)
!13517 = distinct !DILexicalBlock(scope: !13512, file: !3, line: 3335, column: 18)
!13518 = !DILocation(line: 3336, column: 15, scope: !13516)
!13519 = !DILocation(line: 3336, column: 19, scope: !13516)
!13520 = !DILocation(line: 3336, column: 24, scope: !13516)
!13521 = !DILocation(line: 3336, column: 32, scope: !13516)
!13522 = !DILocation(line: 3338, column: 9, scope: !13516)
!13523 = !DILocation(line: 3338, column: 13, scope: !13516)
!13524 = !DILocation(line: 3338, column: 18, scope: !13516)
!13525 = !DILocation(line: 3338, column: 22, scope: !13516)
!13526 = !DILocation(line: 3338, column: 27, scope: !13516)
!13527 = !DILocation(line: 3338, column: 35, scope: !13516)
!13528 = !DILocation(line: 3336, column: 9, scope: !13517)
!13529 = !DILocation(line: 3341, column: 36, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 3339, column: 33)
!13531 = !DILocation(line: 3341, column: 41, scope: !13530)
!13532 = !DILocation(line: 3341, column: 10, scope: !13530)
!13533 = !DILocation(line: 3340, column: 15, scope: !13530)
!13534 = !DILocation(line: 3342, column: 13, scope: !13530)
!13535 = !DILocation(line: 3342, column: 18, scope: !13530)
!13536 = !DILocation(line: 3342, column: 28, scope: !13530)
!13537 = !DILocation(line: 3343, column: 13, scope: !13530)
!13538 = !DILocation(line: 3343, column: 23, scope: !13530)
!13539 = !DILocation(line: 3342, column: 6, scope: !13530)
!13540 = !DILocation(line: 3345, column: 5, scope: !13530)
!13541 = !DILocation(line: 3346, column: 13, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 3345, column: 12)
!13543 = !DILocation(line: 3346, column: 18, scope: !13542)
!13544 = !DILocation(line: 3346, column: 28, scope: !13542)
!13545 = !DILocation(line: 3347, column: 13, scope: !13542)
!13546 = !DILocation(line: 3347, column: 18, scope: !13542)
!13547 = !DILocation(line: 3347, column: 23, scope: !13542)
!13548 = !DILocation(line: 3346, column: 6, scope: !13542)
!13549 = !DILocation(line: 3350, column: 18, scope: !13517)
!13550 = !DILocation(line: 3351, column: 4, scope: !13517)
!13551 = !DILocation(line: 3353, column: 12, scope: !13432)
!13552 = !DILocation(line: 3355, column: 4, scope: !13432)
!13553 = !DILocation(line: 3358, column: 12, scope: !13432)
!13554 = !DILocation(line: 3359, column: 4, scope: !13432)
!13555 = !DILocation(line: 3362, column: 2, scope: !13424)
!13556 = !DILocation(line: 3364, column: 26, scope: !13392)
!13557 = !DILocation(line: 3364, column: 42, scope: !13392)
!13558 = !DILocation(line: 3364, column: 50, scope: !13392)
!13559 = !DILocation(line: 3364, column: 39, scope: !13392)
!13560 = !DILocation(line: 3364, column: 2, scope: !13392)
!13561 = !DILocation(line: 3364, column: 7, scope: !13392)
!13562 = !DILocation(line: 3364, column: 17, scope: !13392)
!13563 = !DILocation(line: 3364, column: 24, scope: !13392)
!13564 = !DILocation(line: 3366, column: 2, scope: !13392)
!13565 = distinct !DISubprogram(name: "ips_removeq_scb_head", scope: !3, file: !3, line: 2781, type: !13566, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{!4848, !12883}
!13568 = !DILocalVariable(name: "queue", arg: 1, scope: !13565, file: !3, line: 2781, type: !12883)
!13569 = !DILocation(line: 2781, column: 40, scope: !13565)
!13570 = !DILocalVariable(name: "item", scope: !13565, file: !3, line: 2783, type: !4848)
!13571 = !DILocation(line: 2783, column: 13, scope: !13565)
!13572 = !DILocation(line: 2787, column: 9, scope: !13565)
!13573 = !DILocation(line: 2787, column: 16, scope: !13565)
!13574 = !DILocation(line: 2787, column: 7, scope: !13565)
!13575 = !DILocation(line: 2789, column: 7, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 2789, column: 6)
!13577 = !DILocation(line: 2789, column: 6, scope: !13565)
!13578 = !DILocation(line: 2790, column: 3, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2789, column: 13)
!13580 = !DILocation(line: 2793, column: 16, scope: !13565)
!13581 = !DILocation(line: 2793, column: 22, scope: !13565)
!13582 = !DILocation(line: 2793, column: 2, scope: !13565)
!13583 = !DILocation(line: 2793, column: 9, scope: !13565)
!13584 = !DILocation(line: 2793, column: 14, scope: !13565)
!13585 = !DILocation(line: 2794, column: 2, scope: !13565)
!13586 = !DILocation(line: 2794, column: 8, scope: !13565)
!13587 = !DILocation(line: 2794, column: 15, scope: !13565)
!13588 = !DILocation(line: 2796, column: 6, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 2796, column: 6)
!13590 = !DILocation(line: 2796, column: 13, scope: !13589)
!13591 = !DILocation(line: 2796, column: 21, scope: !13589)
!13592 = !DILocation(line: 2796, column: 18, scope: !13589)
!13593 = !DILocation(line: 2796, column: 6, scope: !13565)
!13594 = !DILocation(line: 2797, column: 3, scope: !13589)
!13595 = !DILocation(line: 2797, column: 10, scope: !13589)
!13596 = !DILocation(line: 2797, column: 15, scope: !13589)
!13597 = !DILocation(line: 2799, column: 2, scope: !13565)
!13598 = !DILocation(line: 2799, column: 9, scope: !13565)
!13599 = !DILocation(line: 2799, column: 14, scope: !13565)
!13600 = !DILocation(line: 2801, column: 10, scope: !13565)
!13601 = !DILocation(line: 2801, column: 2, scope: !13565)
!13602 = !DILocation(line: 2802, column: 1, scope: !13565)
!13603 = distinct !DISubprogram(name: "__fswab16", scope: !13604, file: !13604, line: 48, type: !13605, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13604 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!13605 = !DISubroutineType(types: !13606)
!13606 = !{!193, !193}
!13607 = !DILocalVariable(name: "val", arg: 1, scope: !13603, file: !13604, line: 48, type: !193)
!13608 = !DILocation(line: 48, column: 57, scope: !13603)
!13609 = !DILocation(line: 53, column: 9, scope: !13603)
!13610 = !DILocation(line: 53, column: 2, scope: !13603)
!13611 = distinct !DISubprogram(name: "scsi_bufflen", scope: !5103, file: !5103, line: 189, type: !12650, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13612 = !DILocalVariable(name: "cmd", arg: 1, scope: !13611, file: !5103, line: 189, type: !5101)
!13613 = !DILocation(line: 189, column: 55, scope: !13611)
!13614 = !DILocation(line: 191, column: 9, scope: !13611)
!13615 = !DILocation(line: 191, column: 14, scope: !13611)
!13616 = !DILocation(line: 191, column: 18, scope: !13611)
!13617 = !DILocation(line: 191, column: 2, scope: !13611)
!13618 = distinct !DISubprogram(name: "__fswab32", scope: !13604, file: !13604, line: 57, type: !13619, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{!189, !189}
!13621 = !DILocalVariable(name: "val", arg: 1, scope: !13618, file: !13604, line: 57, type: !189)
!13622 = !DILocation(line: 57, column: 57, scope: !13618)
!13623 = !DILocation(line: 60, column: 23, scope: !13618)
!13624 = !DILocation(line: 60, column: 9, scope: !13618)
!13625 = !DILocation(line: 60, column: 2, scope: !13618)
!13626 = distinct !DISubprogram(name: "__arch_swab32", scope: !13627, file: !13627, line: 8, type: !13619, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13627 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!13628 = !DILocalVariable(name: "val", arg: 1, scope: !13626, file: !13627, line: 8, type: !189)
!13629 = !DILocation(line: 8, column: 61, scope: !13626)
!13630 = !DILocation(line: 10, column: 38, scope: !13626)
!13631 = !DILocation(line: 10, column: 2, scope: !13626)
!13632 = !{i32 933047}
!13633 = !DILocation(line: 11, column: 9, scope: !13626)
!13634 = !DILocation(line: 11, column: 2, scope: !13626)
!13635 = distinct !DISubprogram(name: "scsi_sg_copy_to_buffer", scope: !5103, file: !5103, line: 214, type: !12633, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13636 = !DILocalVariable(name: "cmd", arg: 1, scope: !13635, file: !5103, line: 214, type: !5101)
!13637 = !DILocation(line: 214, column: 60, scope: !13635)
!13638 = !DILocalVariable(name: "buf", arg: 2, scope: !13635, file: !5103, line: 215, type: !183)
!13639 = !DILocation(line: 215, column: 13, scope: !13635)
!13640 = !DILocalVariable(name: "buflen", arg: 3, scope: !13635, file: !5103, line: 215, type: !182)
!13641 = !DILocation(line: 215, column: 22, scope: !13635)
!13642 = !DILocation(line: 217, column: 39, scope: !13635)
!13643 = !DILocation(line: 217, column: 27, scope: !13635)
!13644 = !DILocation(line: 217, column: 59, scope: !13635)
!13645 = !DILocation(line: 217, column: 45, scope: !13635)
!13646 = !DILocation(line: 218, column: 6, scope: !13635)
!13647 = !DILocation(line: 218, column: 11, scope: !13635)
!13648 = !DILocation(line: 217, column: 9, scope: !13635)
!13649 = !DILocation(line: 217, column: 2, scope: !13635)
!13650 = distinct !DISubprogram(name: "readb", scope: !8329, file: !8329, line: 57, type: !13651, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{!208, !8332}
!13653 = !DILocalVariable(name: "addr", arg: 1, scope: !13650, file: !8329, line: 57, type: !8332)
!13654 = !DILocation(line: 57, column: 1, scope: !13650)
!13655 = !DILocalVariable(name: "ret", scope: !13650, file: !8329, line: 57, type: !208)
!13656 = !{i32 -2146307226}
!13657 = distinct !DISubprogram(name: "writeb", scope: !8329, file: !8329, line: 65, type: !13658, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13658 = !DISubroutineType(types: !13659)
!13659 = !{null, !208, !12662}
!13660 = !DILocalVariable(name: "val", arg: 1, scope: !13657, file: !8329, line: 65, type: !208)
!13661 = !DILocation(line: 65, column: 1, scope: !13657)
!13662 = !DILocalVariable(name: "addr", arg: 2, scope: !13657, file: !8329, line: 65, type: !12662)
!13663 = !{i32 -2146304772}
!13664 = distinct !DISubprogram(name: "inb", scope: !8329, file: !8329, line: 334, type: !13665, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{!208, !182}
!13667 = !DILocalVariable(name: "port", arg: 1, scope: !13664, file: !8329, line: 334, type: !182)
!13668 = !DILocation(line: 334, column: 1, scope: !13664)
!13669 = !DILocalVariable(name: "value", scope: !13664, file: !8329, line: 334, type: !208)
!13670 = !{i32 -2145808958}
!13671 = distinct !DISubprogram(name: "outb", scope: !8329, file: !8329, line: 334, type: !13672, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{null, !208, !182}
!13674 = !DILocalVariable(name: "value", arg: 1, scope: !13671, file: !8329, line: 334, type: !208)
!13675 = !DILocation(line: 334, column: 1, scope: !13671)
!13676 = !DILocalVariable(name: "port", arg: 2, scope: !13671, file: !8329, line: 334, type: !182)
!13677 = !{i32 -2145809160}
!13678 = distinct !DISubprogram(name: "outl", scope: !8329, file: !8329, line: 336, type: !13679, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13679 = !DISubroutineType(types: !13680)
!13680 = !{null, !7, !182}
!13681 = !DILocalVariable(name: "value", arg: 1, scope: !13678, file: !8329, line: 336, type: !7)
!13682 = !DILocation(line: 336, column: 1, scope: !13678)
!13683 = !DILocalVariable(name: "port", arg: 2, scope: !13678, file: !8329, line: 336, type: !182)
!13684 = !{i32 -2145803664}
!13685 = distinct !DISubprogram(name: "inl", scope: !8329, file: !8329, line: 336, type: !13686, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13686 = !DISubroutineType(types: !13687)
!13687 = !{!7, !182}
!13688 = !DILocalVariable(name: "port", arg: 1, scope: !13685, file: !8329, line: 336, type: !182)
!13689 = !DILocation(line: 336, column: 1, scope: !13685)
!13690 = !DILocalVariable(name: "value", scope: !13685, file: !8329, line: 336, type: !7)
!13691 = !{i32 -2145803462}
!13692 = distinct !DISubprogram(name: "outw", scope: !8329, file: !8329, line: 335, type: !13693, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13693 = !DISubroutineType(types: !13694)
!13694 = !{null, !194, !182}
!13695 = !DILocalVariable(name: "value", arg: 1, scope: !13692, file: !8329, line: 335, type: !194)
!13696 = !DILocation(line: 335, column: 1, scope: !13692)
!13697 = !DILocalVariable(name: "port", arg: 2, scope: !13692, file: !8329, line: 335, type: !182)
!13698 = !{i32 -2145806417}
!13699 = distinct !DISubprogram(name: "request_irq", scope: !5254, file: !5254, line: 157, type: !13700, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13700 = !DISubroutineType(types: !13701)
!13701 = !{!182, !7, !13702, !198, !648, !183}
!13702 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !5254, line: 92, baseType: !13703)
!13703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13704, size: 64)
!13704 = !DISubroutineType(types: !13705)
!13705 = !{!13706, !182, !183}
!13706 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !171, line: 17, baseType: !170)
!13707 = !DILocalVariable(name: "irq", arg: 1, scope: !13699, file: !5254, line: 157, type: !7)
!13708 = !DILocation(line: 157, column: 26, scope: !13699)
!13709 = !DILocalVariable(name: "handler", arg: 2, scope: !13699, file: !5254, line: 157, type: !13702)
!13710 = !DILocation(line: 157, column: 45, scope: !13699)
!13711 = !DILocalVariable(name: "flags", arg: 3, scope: !13699, file: !5254, line: 157, type: !198)
!13712 = !DILocation(line: 157, column: 68, scope: !13699)
!13713 = !DILocalVariable(name: "name", arg: 4, scope: !13699, file: !5254, line: 158, type: !648)
!13714 = !DILocation(line: 158, column: 18, scope: !13699)
!13715 = !DILocalVariable(name: "dev", arg: 5, scope: !13699, file: !5254, line: 158, type: !183)
!13716 = !DILocation(line: 158, column: 30, scope: !13699)
!13717 = !DILocation(line: 160, column: 30, scope: !13699)
!13718 = !DILocation(line: 160, column: 35, scope: !13699)
!13719 = !DILocation(line: 160, column: 50, scope: !13699)
!13720 = !DILocation(line: 160, column: 57, scope: !13699)
!13721 = !DILocation(line: 160, column: 63, scope: !13699)
!13722 = !DILocation(line: 160, column: 9, scope: !13699)
!13723 = !DILocation(line: 160, column: 2, scope: !13699)
!13724 = distinct !DISubprogram(name: "do_ipsintr", scope: !3, file: !3, line: 1219, type: !13704, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13725 = !DILocalVariable(name: "lock", arg: 1, scope: !13726, file: !13727, line: 392, type: !4019)
!13726 = distinct !DISubprogram(name: "spin_unlock", scope: !13727, file: !13727, line: 392, type: !13728, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13727 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!13728 = !DISubroutineType(types: !13729)
!13729 = !{null, !4019}
!13730 = !DILocation(line: 392, column: 53, scope: !13726, inlinedAt: !13731)
!13731 = distinct !DILocation(line: 1246, column: 2, scope: !13724)
!13732 = !DILocation(line: 392, column: 53, scope: !13726, inlinedAt: !13733)
!13733 = distinct !DILocation(line: 1240, column: 3, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 1239, column: 19)
!13735 = distinct !DILexicalBlock(scope: !13724, file: !3, line: 1239, column: 6)
!13736 = !DILocalVariable(name: "lock", arg: 1, scope: !13737, file: !13727, line: 352, type: !4019)
!13737 = distinct !DISubprogram(name: "spin_lock", scope: !13727, file: !13727, line: 352, type: !13728, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13738 = !DILocation(line: 352, column: 51, scope: !13737, inlinedAt: !13739)
!13739 = distinct !DILocation(line: 1237, column: 2, scope: !13724)
!13740 = !DILocalVariable(name: "irq", arg: 1, scope: !13724, file: !3, line: 1219, type: !182)
!13741 = !DILocation(line: 1219, column: 16, scope: !13724)
!13742 = !DILocalVariable(name: "dev_id", arg: 2, scope: !13724, file: !3, line: 1219, type: !183)
!13743 = !DILocation(line: 1219, column: 27, scope: !13724)
!13744 = !DILocalVariable(name: "ha", scope: !13724, file: !3, line: 1221, type: !5540)
!13745 = !DILocation(line: 1221, column: 12, scope: !13724)
!13746 = !DILocalVariable(name: "host", scope: !13724, file: !3, line: 1222, type: !5124)
!13747 = !DILocation(line: 1222, column: 20, scope: !13724)
!13748 = !DILocalVariable(name: "irqstatus", scope: !13724, file: !3, line: 1223, type: !182)
!13749 = !DILocation(line: 1223, column: 6, scope: !13724)
!13750 = !DILocation(line: 1227, column: 20, scope: !13724)
!13751 = !DILocation(line: 1227, column: 7, scope: !13724)
!13752 = !DILocation(line: 1227, column: 5, scope: !13724)
!13753 = !DILocation(line: 1228, column: 7, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13724, file: !3, line: 1228, column: 6)
!13755 = !DILocation(line: 1228, column: 6, scope: !13724)
!13756 = !DILocation(line: 1229, column: 3, scope: !13754)
!13757 = !DILocation(line: 1230, column: 16, scope: !13724)
!13758 = !DILocation(line: 1230, column: 20, scope: !13724)
!13759 = !DILocation(line: 1230, column: 9, scope: !13724)
!13760 = !DILocation(line: 1230, column: 7, scope: !13724)
!13761 = !DILocation(line: 1232, column: 7, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13724, file: !3, line: 1232, column: 6)
!13763 = !DILocation(line: 1232, column: 6, scope: !13724)
!13764 = !DILocation(line: 1233, column: 5, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 1232, column: 13)
!13766 = !DILocation(line: 1233, column: 9, scope: !13765)
!13767 = !DILocation(line: 1233, column: 14, scope: !13765)
!13768 = !DILocation(line: 1233, column: 21, scope: !13765)
!13769 = !DILocation(line: 1233, column: 3, scope: !13765)
!13770 = !DILocation(line: 1234, column: 3, scope: !13765)
!13771 = !DILocation(line: 1237, column: 12, scope: !13724)
!13772 = !DILocation(line: 1237, column: 18, scope: !13724)
!13773 = !DILocation(line: 354, column: 2, scope: !13774, inlinedAt: !13739)
!13774 = distinct !DILexicalBlock(scope: !13737, file: !13727, line: 354, column: 2)
!13775 = !{i32 -2145314196}
!13776 = !DILocation(line: 354, column: 2, scope: !13777, inlinedAt: !13739)
!13777 = distinct !DILexicalBlock(scope: !13774, file: !13727, line: 354, column: 2)
!13778 = !DILocation(line: 1239, column: 7, scope: !13735)
!13779 = !DILocation(line: 1239, column: 11, scope: !13735)
!13780 = !DILocation(line: 1239, column: 6, scope: !13724)
!13781 = !DILocation(line: 1240, column: 15, scope: !13734)
!13782 = !DILocation(line: 1240, column: 21, scope: !13734)
!13783 = !DILocation(line: 394, column: 2, scope: !13784, inlinedAt: !13733)
!13784 = distinct !DILexicalBlock(scope: !13726, file: !13727, line: 394, column: 2)
!13785 = !{i32 -2145311835}
!13786 = !DILocation(line: 394, column: 2, scope: !13787, inlinedAt: !13733)
!13787 = distinct !DILexicalBlock(scope: !13784, file: !13727, line: 394, column: 2)
!13788 = !DILocation(line: 1241, column: 3, scope: !13734)
!13789 = !DILocation(line: 1244, column: 16, scope: !13724)
!13790 = !DILocation(line: 1244, column: 20, scope: !13724)
!13791 = !DILocation(line: 1244, column: 25, scope: !13724)
!13792 = !DILocation(line: 1244, column: 32, scope: !13724)
!13793 = !DILocation(line: 1244, column: 14, scope: !13724)
!13794 = !DILocation(line: 1244, column: 12, scope: !13724)
!13795 = !DILocation(line: 1246, column: 14, scope: !13724)
!13796 = !DILocation(line: 1246, column: 20, scope: !13724)
!13797 = !DILocation(line: 394, column: 2, scope: !13784, inlinedAt: !13731)
!13798 = !DILocation(line: 394, column: 2, scope: !13787, inlinedAt: !13731)
!13799 = !DILocation(line: 1249, column: 11, scope: !13724)
!13800 = !DILocation(line: 1249, column: 2, scope: !13724)
!13801 = !DILocation(line: 1250, column: 9, scope: !13724)
!13802 = !DILocation(line: 1250, column: 2, scope: !13724)
!13803 = !DILocation(line: 1251, column: 1, scope: !13724)
!13804 = distinct !DISubprogram(name: "ips_allocatescbs", scope: !3, file: !3, line: 4300, type: !8340, scopeLine: 4301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13805 = !DILocalVariable(name: "ha", arg: 1, scope: !13804, file: !3, line: 4300, type: !5540)
!13806 = !DILocation(line: 4300, column: 29, scope: !13804)
!13807 = !DILocalVariable(name: "scb_p", scope: !13804, file: !3, line: 4302, type: !4848)
!13808 = !DILocation(line: 4302, column: 13, scope: !13804)
!13809 = !DILocalVariable(name: "ips_sg", scope: !13804, file: !3, line: 4303, type: !5080)
!13810 = !DILocation(line: 4303, column: 14, scope: !13804)
!13811 = !DILocalVariable(name: "i", scope: !13804, file: !3, line: 4304, type: !182)
!13812 = !DILocation(line: 4304, column: 6, scope: !13804)
!13813 = !DILocalVariable(name: "command_dma", scope: !13804, file: !3, line: 4305, type: !3904)
!13814 = !DILocation(line: 4305, column: 13, scope: !13804)
!13815 = !DILocalVariable(name: "sg_dma", scope: !13804, file: !3, line: 4305, type: !3904)
!13816 = !DILocation(line: 4305, column: 26, scope: !13804)
!13817 = !DILocation(line: 4310, column: 33, scope: !13804)
!13818 = !DILocation(line: 4310, column: 37, scope: !13804)
!13819 = !DILocation(line: 4310, column: 45, scope: !13804)
!13820 = !DILocation(line: 4311, column: 4, scope: !13804)
!13821 = !DILocation(line: 4311, column: 8, scope: !13804)
!13822 = !DILocation(line: 4311, column: 17, scope: !13804)
!13823 = !DILocation(line: 4310, column: 13, scope: !13804)
!13824 = !DILocation(line: 4310, column: 2, scope: !13804)
!13825 = !DILocation(line: 4310, column: 6, scope: !13804)
!13826 = !DILocation(line: 4310, column: 11, scope: !13804)
!13827 = !DILocation(line: 4313, column: 6, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 4313, column: 6)
!13829 = !DILocation(line: 4313, column: 10, scope: !13828)
!13830 = !DILocation(line: 4313, column: 15, scope: !13828)
!13831 = !DILocation(line: 4313, column: 6, scope: !13804)
!13832 = !DILocation(line: 4314, column: 3, scope: !13828)
!13833 = !DILocation(line: 4315, column: 36, scope: !13804)
!13834 = !DILocation(line: 4315, column: 40, scope: !13804)
!13835 = !DILocation(line: 4315, column: 48, scope: !13804)
!13836 = !DILocation(line: 4316, column: 4, scope: !13804)
!13837 = !DILocation(line: 4316, column: 24, scope: !13804)
!13838 = !DILocation(line: 4316, column: 39, scope: !13804)
!13839 = !DILocation(line: 4316, column: 43, scope: !13804)
!13840 = !DILocation(line: 4316, column: 37, scope: !13804)
!13841 = !DILocation(line: 4315, column: 16, scope: !13804)
!13842 = !DILocation(line: 4315, column: 9, scope: !13804)
!13843 = !DILocation(line: 4315, column: 14, scope: !13804)
!13844 = !DILocation(line: 4318, column: 13, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 4318, column: 6)
!13846 = !DILocation(line: 4318, column: 18, scope: !13845)
!13847 = !DILocation(line: 4318, column: 6, scope: !13804)
!13848 = !DILocation(line: 4319, column: 22, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 4318, column: 27)
!13850 = !DILocation(line: 4319, column: 26, scope: !13849)
!13851 = !DILocation(line: 4319, column: 34, scope: !13849)
!13852 = !DILocation(line: 4320, column: 9, scope: !13849)
!13853 = !DILocation(line: 4320, column: 13, scope: !13849)
!13854 = !DILocation(line: 4320, column: 22, scope: !13849)
!13855 = !DILocation(line: 4320, column: 44, scope: !13849)
!13856 = !DILocation(line: 4320, column: 48, scope: !13849)
!13857 = !DILocation(line: 4321, column: 9, scope: !13849)
!13858 = !DILocation(line: 4319, column: 3, scope: !13849)
!13859 = !DILocation(line: 4322, column: 3, scope: !13849)
!13860 = !DILocation(line: 4325, column: 9, scope: !13804)
!13861 = !DILocation(line: 4325, column: 13, scope: !13804)
!13862 = !DILocation(line: 4325, column: 2, scope: !13804)
!13863 = !DILocation(line: 4325, column: 22, scope: !13804)
!13864 = !DILocation(line: 4325, column: 26, scope: !13804)
!13865 = !DILocation(line: 4325, column: 35, scope: !13804)
!13866 = !DILocation(line: 4327, column: 9, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 4327, column: 2)
!13868 = !DILocation(line: 4327, column: 7, scope: !13867)
!13869 = !DILocation(line: 4327, column: 14, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 4327, column: 2)
!13871 = !DILocation(line: 4327, column: 18, scope: !13870)
!13872 = !DILocation(line: 4327, column: 22, scope: !13870)
!13873 = !DILocation(line: 4327, column: 16, scope: !13870)
!13874 = !DILocation(line: 4327, column: 2, scope: !13867)
!13875 = !DILocation(line: 4328, column: 12, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 4327, column: 37)
!13877 = !DILocation(line: 4328, column: 16, scope: !13876)
!13878 = !DILocation(line: 4328, column: 21, scope: !13876)
!13879 = !DILocation(line: 4328, column: 9, scope: !13876)
!13880 = !DILocation(line: 4329, column: 24, scope: !13876)
!13881 = !DILocation(line: 4329, column: 59, scope: !13876)
!13882 = !DILocation(line: 4329, column: 57, scope: !13876)
!13883 = !DILocation(line: 4329, column: 36, scope: !13876)
!13884 = !DILocation(line: 4329, column: 3, scope: !13876)
!13885 = !DILocation(line: 4329, column: 10, scope: !13876)
!13886 = !DILocation(line: 4329, column: 22, scope: !13876)
!13887 = !DILocation(line: 4331, column: 7, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 4331, column: 7)
!13889 = !DILocation(line: 4331, column: 7, scope: !13876)
!13890 = !DILocation(line: 4333, column: 15, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 4331, column: 31)
!13892 = !DILocation(line: 4333, column: 26, scope: !13891)
!13893 = !DILocation(line: 4333, column: 28, scope: !13891)
!13894 = !DILocation(line: 4333, column: 24, scope: !13891)
!13895 = !DILocation(line: 4332, column: 4, scope: !13891)
!13896 = !DILocation(line: 4332, column: 11, scope: !13891)
!13897 = !DILocation(line: 4332, column: 19, scope: !13891)
!13898 = !DILocation(line: 4332, column: 28, scope: !13891)
!13899 = !DILocation(line: 4335, column: 8, scope: !13891)
!13900 = !DILocation(line: 4335, column: 17, scope: !13891)
!13901 = !DILocation(line: 4335, column: 37, scope: !13891)
!13902 = !DILocation(line: 4335, column: 52, scope: !13891)
!13903 = !DILocation(line: 4335, column: 50, scope: !13891)
!13904 = !DILocation(line: 4335, column: 15, scope: !13891)
!13905 = !DILocation(line: 4334, column: 4, scope: !13891)
!13906 = !DILocation(line: 4334, column: 11, scope: !13891)
!13907 = !DILocation(line: 4334, column: 22, scope: !13891)
!13908 = !DILocation(line: 4336, column: 3, scope: !13891)
!13909 = !DILocation(line: 4338, column: 15, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 4336, column: 10)
!13911 = !DILocation(line: 4338, column: 26, scope: !13910)
!13912 = !DILocation(line: 4338, column: 28, scope: !13910)
!13913 = !DILocation(line: 4338, column: 24, scope: !13910)
!13914 = !DILocation(line: 4337, column: 4, scope: !13910)
!13915 = !DILocation(line: 4337, column: 11, scope: !13910)
!13916 = !DILocation(line: 4337, column: 19, scope: !13910)
!13917 = !DILocation(line: 4337, column: 28, scope: !13910)
!13918 = !DILocation(line: 4340, column: 8, scope: !13910)
!13919 = !DILocation(line: 4340, column: 17, scope: !13910)
!13920 = !DILocation(line: 4340, column: 37, scope: !13910)
!13921 = !DILocation(line: 4340, column: 52, scope: !13910)
!13922 = !DILocation(line: 4340, column: 50, scope: !13910)
!13923 = !DILocation(line: 4340, column: 15, scope: !13910)
!13924 = !DILocation(line: 4339, column: 4, scope: !13910)
!13925 = !DILocation(line: 4339, column: 11, scope: !13910)
!13926 = !DILocation(line: 4339, column: 22, scope: !13910)
!13927 = !DILocation(line: 4344, column: 7, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 4344, column: 7)
!13929 = !DILocation(line: 4344, column: 11, scope: !13928)
!13930 = !DILocation(line: 4344, column: 15, scope: !13928)
!13931 = !DILocation(line: 4344, column: 24, scope: !13928)
!13932 = !DILocation(line: 4344, column: 9, scope: !13928)
!13933 = !DILocation(line: 4344, column: 7, scope: !13876)
!13934 = !DILocation(line: 4345, column: 20, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 4344, column: 29)
!13936 = !DILocation(line: 4345, column: 24, scope: !13935)
!13937 = !DILocation(line: 4345, column: 4, scope: !13935)
!13938 = !DILocation(line: 4345, column: 11, scope: !13935)
!13939 = !DILocation(line: 4345, column: 18, scope: !13935)
!13940 = !DILocation(line: 4346, column: 23, scope: !13935)
!13941 = !DILocation(line: 4346, column: 4, scope: !13935)
!13942 = !DILocation(line: 4346, column: 8, scope: !13935)
!13943 = !DILocation(line: 4346, column: 21, scope: !13935)
!13944 = !DILocation(line: 4347, column: 3, scope: !13935)
!13945 = !DILocation(line: 4348, column: 2, scope: !13876)
!13946 = !DILocation(line: 4327, column: 33, scope: !13870)
!13947 = !DILocation(line: 4327, column: 2, scope: !13870)
!13948 = distinct !{!13948, !13874, !13949}
!13949 = !DILocation(line: 4348, column: 2, scope: !13867)
!13950 = !DILocation(line: 4351, column: 2, scope: !13804)
!13951 = !DILocation(line: 4352, column: 1, scope: !13804)
!13952 = distinct !DISubprogram(name: "ips_hainit", scope: !3, file: !3, line: 2388, type: !8340, scopeLine: 2389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!13953 = !DILocalVariable(name: "ha", arg: 1, scope: !13952, file: !3, line: 2388, type: !5540)
!13954 = !DILocation(line: 2388, column: 23, scope: !13952)
!13955 = !DILocalVariable(name: "i", scope: !13952, file: !3, line: 2390, type: !182)
!13956 = !DILocation(line: 2390, column: 6, scope: !13952)
!13957 = !DILocation(line: 2394, column: 7, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2394, column: 6)
!13959 = !DILocation(line: 2394, column: 6, scope: !13952)
!13960 = !DILocation(line: 2395, column: 3, scope: !13958)
!13961 = !DILocation(line: 2397, column: 6, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2397, column: 6)
!13963 = !DILocation(line: 2397, column: 10, scope: !13962)
!13964 = !DILocation(line: 2397, column: 15, scope: !13962)
!13965 = !DILocation(line: 2397, column: 6, scope: !13952)
!13966 = !DILocation(line: 2398, column: 5, scope: !13962)
!13967 = !DILocation(line: 2398, column: 9, scope: !13962)
!13968 = !DILocation(line: 2398, column: 14, scope: !13962)
!13969 = !DILocation(line: 2398, column: 25, scope: !13962)
!13970 = !DILocation(line: 2398, column: 3, scope: !13962)
!13971 = !DILocation(line: 2400, column: 6, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2400, column: 6)
!13973 = !DILocation(line: 2400, column: 10, scope: !13972)
!13974 = !DILocation(line: 2400, column: 15, scope: !13972)
!13975 = !DILocation(line: 2400, column: 6, scope: !13952)
!13976 = !DILocation(line: 2401, column: 5, scope: !13972)
!13977 = !DILocation(line: 2401, column: 9, scope: !13972)
!13978 = !DILocation(line: 2401, column: 14, scope: !13972)
!13979 = !DILocation(line: 2401, column: 26, scope: !13972)
!13980 = !DILocation(line: 2401, column: 3, scope: !13972)
!13981 = !DILocation(line: 2404, column: 2, scope: !13952)
!13982 = !DILocation(line: 2404, column: 6, scope: !13952)
!13983 = !DILocation(line: 2404, column: 18, scope: !13952)
!13984 = !DILocation(line: 2405, column: 18, scope: !13952)
!13985 = !DILocation(line: 2405, column: 2, scope: !13952)
!13986 = !DILocation(line: 2405, column: 6, scope: !13952)
!13987 = !DILocation(line: 2405, column: 16, scope: !13952)
!13988 = !DILocation(line: 2406, column: 17, scope: !13952)
!13989 = !DILocation(line: 2406, column: 2, scope: !13952)
!13990 = !DILocation(line: 2408, column: 23, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2408, column: 6)
!13992 = !DILocation(line: 2408, column: 7, scope: !13991)
!13993 = !DILocation(line: 2408, column: 6, scope: !13952)
!13994 = !DILocation(line: 2409, column: 3, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13991, file: !3, line: 2408, column: 43)
!13996 = !DILocation(line: 2412, column: 3, scope: !13995)
!13997 = !DILocation(line: 2415, column: 31, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2415, column: 6)
!13999 = !DILocation(line: 2415, column: 7, scope: !13998)
!14000 = !DILocation(line: 2415, column: 6, scope: !13952)
!14001 = !DILocation(line: 2416, column: 3, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13998, file: !3, line: 2415, column: 51)
!14003 = !DILocation(line: 2419, column: 3, scope: !14002)
!14004 = !DILocation(line: 2423, column: 26, scope: !13952)
!14005 = !DILocation(line: 2423, column: 2, scope: !13952)
!14006 = !DILocation(line: 2425, column: 37, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2425, column: 6)
!14008 = !DILocation(line: 2425, column: 7, scope: !14007)
!14009 = !DILocation(line: 2425, column: 6, scope: !13952)
!14010 = !DILocation(line: 2426, column: 3, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14007, file: !3, line: 2425, column: 57)
!14012 = !DILocation(line: 2429, column: 3, scope: !14011)
!14013 = !DILocation(line: 2433, column: 31, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2433, column: 6)
!14015 = !DILocation(line: 2433, column: 7, scope: !14014)
!14016 = !DILocation(line: 2433, column: 6, scope: !13952)
!14017 = !DILocation(line: 2434, column: 3, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 2433, column: 51)
!14019 = !DILocation(line: 2437, column: 3, scope: !14018)
!14020 = !DILocation(line: 2441, column: 7, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2441, column: 6)
!14022 = !DILocation(line: 2441, column: 11, scope: !14021)
!14023 = !DILocation(line: 2441, column: 17, scope: !14021)
!14024 = !DILocation(line: 2441, column: 33, scope: !14021)
!14025 = !DILocation(line: 2441, column: 38, scope: !14021)
!14026 = !DILocation(line: 2441, column: 42, scope: !14021)
!14027 = !DILocation(line: 2441, column: 46, scope: !14021)
!14028 = !DILocation(line: 2441, column: 59, scope: !14021)
!14029 = !DILocation(line: 2441, column: 6, scope: !13952)
!14030 = !DILocation(line: 2442, column: 21, scope: !14021)
!14031 = !DILocation(line: 2442, column: 3, scope: !14021)
!14032 = !DILocation(line: 2445, column: 2, scope: !13952)
!14033 = !DILocation(line: 2445, column: 6, scope: !13952)
!14034 = !DILocation(line: 2445, column: 15, scope: !13952)
!14035 = !DILocation(line: 2446, column: 2, scope: !13952)
!14036 = !DILocation(line: 2446, column: 6, scope: !13952)
!14037 = !DILocation(line: 2446, column: 11, scope: !13952)
!14038 = !DILocation(line: 2447, column: 14, scope: !13952)
!14039 = !DILocation(line: 2447, column: 18, scope: !13952)
!14040 = !DILocation(line: 2447, column: 23, scope: !13952)
!14041 = !DILocation(line: 2447, column: 44, scope: !13952)
!14042 = !DILocation(line: 2447, column: 63, scope: !13952)
!14043 = !DILocation(line: 2447, column: 13, scope: !13952)
!14044 = !DILocation(line: 2447, column: 2, scope: !13952)
!14045 = !DILocation(line: 2447, column: 6, scope: !13952)
!14046 = !DILocation(line: 2447, column: 11, scope: !13952)
!14047 = !DILocation(line: 2449, column: 10, scope: !13952)
!14048 = !DILocation(line: 2449, column: 14, scope: !13952)
!14049 = !DILocation(line: 2449, column: 20, scope: !13952)
!14050 = !DILocation(line: 2449, column: 37, scope: !13952)
!14051 = !DILocation(line: 2449, column: 2, scope: !13952)
!14052 = !DILocation(line: 2451, column: 3, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2449, column: 51)
!14054 = !DILocation(line: 2451, column: 7, scope: !14053)
!14055 = !DILocation(line: 2451, column: 16, scope: !14053)
!14056 = !DILocation(line: 2452, column: 3, scope: !14053)
!14057 = !DILocation(line: 2455, column: 3, scope: !14053)
!14058 = !DILocation(line: 2455, column: 7, scope: !14053)
!14059 = !DILocation(line: 2455, column: 16, scope: !14053)
!14060 = !DILocation(line: 2456, column: 3, scope: !14053)
!14061 = !DILocation(line: 2459, column: 3, scope: !14053)
!14062 = !DILocation(line: 2459, column: 7, scope: !14053)
!14063 = !DILocation(line: 2459, column: 16, scope: !14053)
!14064 = !DILocation(line: 2460, column: 3, scope: !14053)
!14065 = !DILocation(line: 2464, column: 3, scope: !14053)
!14066 = !DILocation(line: 2464, column: 7, scope: !14053)
!14067 = !DILocation(line: 2464, column: 16, scope: !14053)
!14068 = !DILocation(line: 2465, column: 3, scope: !14053)
!14069 = !DILocation(line: 2469, column: 6, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2469, column: 6)
!14071 = !DILocation(line: 2469, column: 40, scope: !14070)
!14072 = !DILocation(line: 2469, column: 6, scope: !13952)
!14073 = !DILocation(line: 2471, column: 18, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14070, file: !3, line: 2469, column: 47)
!14075 = !DILocation(line: 2471, column: 22, scope: !14074)
!14076 = !DILocation(line: 2471, column: 27, scope: !14074)
!14077 = !DILocation(line: 2471, column: 3, scope: !14074)
!14078 = !DILocation(line: 2471, column: 7, scope: !14074)
!14079 = !DILocation(line: 2471, column: 16, scope: !14074)
!14080 = !DILocation(line: 2472, column: 2, scope: !14074)
!14081 = !DILocation(line: 2474, column: 11, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14070, file: !3, line: 2472, column: 9)
!14083 = !DILocation(line: 2474, column: 15, scope: !14082)
!14084 = !DILocation(line: 2474, column: 21, scope: !14082)
!14085 = !DILocation(line: 2474, column: 38, scope: !14082)
!14086 = !DILocation(line: 2474, column: 3, scope: !14082)
!14087 = !DILocation(line: 2476, column: 4, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14082, file: !3, line: 2474, column: 52)
!14089 = !DILocation(line: 2476, column: 8, scope: !14088)
!14090 = !DILocation(line: 2476, column: 17, scope: !14088)
!14091 = !DILocation(line: 2477, column: 4, scope: !14088)
!14092 = !DILocation(line: 2480, column: 4, scope: !14088)
!14093 = !DILocation(line: 2480, column: 8, scope: !14088)
!14094 = !DILocation(line: 2480, column: 17, scope: !14088)
!14095 = !DILocation(line: 2481, column: 4, scope: !14088)
!14096 = !DILocation(line: 2484, column: 4, scope: !14088)
!14097 = !DILocation(line: 2484, column: 8, scope: !14088)
!14098 = !DILocation(line: 2484, column: 17, scope: !14088)
!14099 = !DILocation(line: 2485, column: 4, scope: !14088)
!14100 = !DILocation(line: 2489, column: 4, scope: !14088)
!14101 = !DILocation(line: 2489, column: 8, scope: !14088)
!14102 = !DILocation(line: 2489, column: 17, scope: !14088)
!14103 = !DILocation(line: 2490, column: 4, scope: !14088)
!14104 = !DILocation(line: 2495, column: 7, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2495, column: 6)
!14106 = !DILocation(line: 2495, column: 11, scope: !14105)
!14107 = !DILocation(line: 2495, column: 19, scope: !14105)
!14108 = !DILocation(line: 2495, column: 46, scope: !14105)
!14109 = !DILocation(line: 2496, column: 7, scope: !14105)
!14110 = !DILocation(line: 2496, column: 11, scope: !14105)
!14111 = !DILocation(line: 2496, column: 19, scope: !14105)
!14112 = !DILocation(line: 2496, column: 46, scope: !14105)
!14113 = !DILocation(line: 2497, column: 7, scope: !14105)
!14114 = !DILocation(line: 2497, column: 11, scope: !14105)
!14115 = !DILocation(line: 2497, column: 19, scope: !14105)
!14116 = !DILocation(line: 2495, column: 6, scope: !13952)
!14117 = !DILocation(line: 2498, column: 8, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 2498, column: 7)
!14119 = distinct !DILexicalBlock(scope: !14105, file: !3, line: 2497, column: 48)
!14120 = !DILocation(line: 2498, column: 12, scope: !14118)
!14121 = !DILocation(line: 2498, column: 23, scope: !14118)
!14122 = !DILocation(line: 2498, column: 21, scope: !14118)
!14123 = !DILocation(line: 2498, column: 36, scope: !14118)
!14124 = !DILocation(line: 2498, column: 40, scope: !14118)
!14125 = !DILocation(line: 2498, column: 39, scope: !14118)
!14126 = !DILocation(line: 2498, column: 7, scope: !14119)
!14127 = !DILocation(line: 2499, column: 19, scope: !14118)
!14128 = !DILocation(line: 2499, column: 4, scope: !14118)
!14129 = !DILocation(line: 2499, column: 8, scope: !14118)
!14130 = !DILocation(line: 2499, column: 17, scope: !14118)
!14131 = !DILocation(line: 2500, column: 2, scope: !14119)
!14132 = !DILocation(line: 2503, column: 2, scope: !13952)
!14133 = !DILocation(line: 2503, column: 6, scope: !13952)
!14134 = !DILocation(line: 2503, column: 15, scope: !13952)
!14135 = !DILocation(line: 2504, column: 9, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2504, column: 2)
!14137 = !DILocation(line: 2504, column: 7, scope: !14136)
!14138 = !DILocation(line: 2504, column: 14, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14136, file: !3, line: 2504, column: 2)
!14140 = !DILocation(line: 2504, column: 18, scope: !14139)
!14141 = !DILocation(line: 2504, column: 22, scope: !14139)
!14142 = !DILocation(line: 2504, column: 16, scope: !14139)
!14143 = !DILocation(line: 2504, column: 2, scope: !14136)
!14144 = !DILocation(line: 2505, column: 18, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2504, column: 33)
!14146 = !DILocation(line: 2505, column: 22, scope: !14145)
!14147 = !DILocation(line: 2505, column: 28, scope: !14145)
!14148 = !DILocation(line: 2505, column: 36, scope: !14145)
!14149 = !DILocation(line: 2505, column: 38, scope: !14145)
!14150 = !DILocation(line: 2505, column: 43, scope: !14145)
!14151 = !DILocation(line: 2505, column: 3, scope: !14145)
!14152 = !DILocation(line: 2505, column: 7, scope: !14145)
!14153 = !DILocation(line: 2505, column: 13, scope: !14145)
!14154 = !DILocation(line: 2505, column: 16, scope: !14145)
!14155 = !DILocation(line: 2506, column: 3, scope: !14145)
!14156 = !DILocation(line: 2506, column: 7, scope: !14145)
!14157 = !DILocation(line: 2506, column: 19, scope: !14145)
!14158 = !DILocation(line: 2506, column: 21, scope: !14145)
!14159 = !DILocation(line: 2506, column: 26, scope: !14145)
!14160 = !DILocation(line: 2507, column: 2, scope: !14145)
!14161 = !DILocation(line: 2504, column: 29, scope: !14139)
!14162 = !DILocation(line: 2504, column: 2, scope: !14139)
!14163 = distinct !{!14163, !14143, !14164}
!14164 = !DILocation(line: 2507, column: 2, scope: !14136)
!14165 = !DILocation(line: 2509, column: 2, scope: !13952)
!14166 = !DILocation(line: 2510, column: 1, scope: !13952)
!14167 = distinct !DISubprogram(name: "ips_deallocatescbs", scope: !3, file: !3, line: 4276, type: !8130, scopeLine: 4277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!14168 = !DILocalVariable(name: "ha", arg: 1, scope: !14167, file: !3, line: 4276, type: !5540)
!14169 = !DILocation(line: 4276, column: 31, scope: !14167)
!14170 = !DILocalVariable(name: "cmds", arg: 2, scope: !14167, file: !3, line: 4276, type: !182)
!14171 = !DILocation(line: 4276, column: 39, scope: !14167)
!14172 = !DILocation(line: 4278, column: 6, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14167, file: !3, line: 4278, column: 6)
!14174 = !DILocation(line: 4278, column: 10, scope: !14173)
!14175 = !DILocation(line: 4278, column: 6, scope: !14167)
!14176 = !DILocation(line: 4279, column: 22, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 4278, column: 16)
!14178 = !DILocation(line: 4279, column: 26, scope: !14177)
!14179 = !DILocation(line: 4279, column: 34, scope: !14177)
!14180 = !DILocation(line: 4280, column: 9, scope: !14177)
!14181 = !DILocation(line: 4280, column: 29, scope: !14177)
!14182 = !DILocation(line: 4280, column: 44, scope: !14177)
!14183 = !DILocation(line: 4280, column: 42, scope: !14177)
!14184 = !DILocation(line: 4281, column: 9, scope: !14177)
!14185 = !DILocation(line: 4281, column: 13, scope: !14177)
!14186 = !DILocation(line: 4281, column: 19, scope: !14177)
!14187 = !DILocation(line: 4281, column: 27, scope: !14177)
!14188 = !DILocation(line: 4282, column: 9, scope: !14177)
!14189 = !DILocation(line: 4282, column: 13, scope: !14177)
!14190 = !DILocation(line: 4282, column: 19, scope: !14177)
!14191 = !DILocation(line: 4279, column: 3, scope: !14177)
!14192 = !DILocation(line: 4283, column: 22, scope: !14177)
!14193 = !DILocation(line: 4283, column: 26, scope: !14177)
!14194 = !DILocation(line: 4283, column: 34, scope: !14177)
!14195 = !DILocation(line: 4283, column: 60, scope: !14177)
!14196 = !DILocation(line: 4283, column: 58, scope: !14177)
!14197 = !DILocation(line: 4284, column: 9, scope: !14177)
!14198 = !DILocation(line: 4284, column: 13, scope: !14177)
!14199 = !DILocation(line: 4284, column: 19, scope: !14177)
!14200 = !DILocation(line: 4284, column: 23, scope: !14177)
!14201 = !DILocation(line: 4284, column: 29, scope: !14177)
!14202 = !DILocation(line: 4283, column: 3, scope: !14177)
!14203 = !DILocation(line: 4285, column: 3, scope: !14177)
!14204 = !DILocation(line: 4285, column: 7, scope: !14177)
!14205 = !DILocation(line: 4285, column: 12, scope: !14177)
!14206 = !DILocation(line: 4286, column: 2, scope: !14177)
!14207 = !DILocation(line: 4287, column: 2, scope: !14167)
!14208 = distinct !DISubprogram(name: "ips_next", scope: !3, file: !3, line: 2522, type: !14209, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{null, !5540, !182}
!14211 = !DILocation(line: 392, column: 53, scope: !13726, inlinedAt: !14212)
!14212 = distinct !DILocation(line: 2738, column: 3, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2737, column: 6)
!14214 = !DILocation(line: 352, column: 51, scope: !13737, inlinedAt: !14215)
!14215 = distinct !DILocation(line: 2699, column: 4, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2698, column: 7)
!14217 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2628, column: 40)
!14218 = !DILocation(line: 392, column: 53, scope: !13726, inlinedAt: !14219)
!14219 = distinct !DILocation(line: 2642, column: 4, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2641, column: 7)
!14221 = !DILocation(line: 352, column: 51, scope: !13737, inlinedAt: !14222)
!14222 = distinct !DILocation(line: 2572, column: 4, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2571, column: 7)
!14224 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2560, column: 61)
!14225 = !DILocation(line: 392, column: 53, scope: !13726, inlinedAt: !14226)
!14226 = distinct !DILocation(line: 2565, column: 4, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2564, column: 7)
!14228 = !DILocation(line: 352, column: 51, scope: !13737, inlinedAt: !14229)
!14229 = distinct !DILocation(line: 2541, column: 3, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2540, column: 6)
!14231 = !DILocalVariable(name: "ha", arg: 1, scope: !14208, file: !3, line: 2522, type: !5540)
!14232 = !DILocation(line: 2522, column: 21, scope: !14208)
!14233 = !DILocalVariable(name: "intr", arg: 2, scope: !14208, file: !3, line: 2522, type: !182)
!14234 = !DILocation(line: 2522, column: 29, scope: !14208)
!14235 = !DILocalVariable(name: "scb", scope: !14208, file: !3, line: 2524, type: !4848)
!14236 = !DILocation(line: 2524, column: 13, scope: !14208)
!14237 = !DILocalVariable(name: "SC", scope: !14208, file: !3, line: 2525, type: !5101)
!14238 = !DILocation(line: 2525, column: 20, scope: !14208)
!14239 = !DILocalVariable(name: "p", scope: !14208, file: !3, line: 2526, type: !5101)
!14240 = !DILocation(line: 2526, column: 20, scope: !14208)
!14241 = !DILocalVariable(name: "q", scope: !14208, file: !3, line: 2527, type: !5101)
!14242 = !DILocation(line: 2527, column: 20, scope: !14208)
!14243 = !DILocalVariable(name: "item", scope: !14208, file: !3, line: 2528, type: !14244)
!14244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14245, size: 64)
!14245 = !DIDerivedType(tag: DW_TAG_typedef, name: "ips_copp_wait_item_t", file: !201, line: 979, baseType: !5579)
!14246 = !DILocation(line: 2528, column: 24, scope: !14208)
!14247 = !DILocalVariable(name: "ret", scope: !14208, file: !3, line: 2529, type: !182)
!14248 = !DILocation(line: 2529, column: 6, scope: !14208)
!14249 = !DILocalVariable(name: "host", scope: !14208, file: !3, line: 2530, type: !5124)
!14250 = !DILocation(line: 2530, column: 20, scope: !14208)
!14251 = !DILocation(line: 2533, column: 7, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2533, column: 6)
!14253 = !DILocation(line: 2533, column: 6, scope: !14208)
!14254 = !DILocation(line: 2534, column: 3, scope: !14252)
!14255 = !DILocation(line: 2535, column: 16, scope: !14208)
!14256 = !DILocation(line: 2535, column: 20, scope: !14208)
!14257 = !DILocation(line: 2535, column: 9, scope: !14208)
!14258 = !DILocation(line: 2535, column: 7, scope: !14208)
!14259 = !DILocation(line: 2540, column: 6, scope: !14230)
!14260 = !DILocation(line: 2540, column: 11, scope: !14230)
!14261 = !DILocation(line: 2540, column: 6, scope: !14208)
!14262 = !DILocation(line: 2541, column: 13, scope: !14230)
!14263 = !DILocation(line: 2541, column: 19, scope: !14230)
!14264 = !DILocation(line: 354, column: 2, scope: !13774, inlinedAt: !14229)
!14265 = !DILocation(line: 354, column: 2, scope: !13777, inlinedAt: !14229)
!14266 = !DILocation(line: 2541, column: 3, scope: !14230)
!14267 = !DILocation(line: 2543, column: 7, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2543, column: 6)
!14269 = !DILocation(line: 2543, column: 11, scope: !14268)
!14270 = !DILocation(line: 2543, column: 19, scope: !14268)
!14271 = !DILocation(line: 2543, column: 28, scope: !14268)
!14272 = !DILocation(line: 2544, column: 6, scope: !14268)
!14273 = !DILocation(line: 2544, column: 10, scope: !14268)
!14274 = !DILocation(line: 2544, column: 14, scope: !14268)
!14275 = !DILocation(line: 2544, column: 29, scope: !14268)
!14276 = !DILocation(line: 2544, column: 35, scope: !14268)
!14277 = !DILocation(line: 2543, column: 6, scope: !14208)
!14278 = !DILocalVariable(name: "now", scope: !14279, file: !3, line: 2545, type: !1317)
!14279 = distinct !DILexicalBlock(scope: !14268, file: !3, line: 2544, column: 42)
!14280 = !DILocation(line: 2545, column: 12, scope: !14279)
!14281 = !DILocation(line: 2545, column: 18, scope: !14279)
!14282 = !DILocation(line: 2546, column: 7, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 2546, column: 7)
!14284 = !DILocation(line: 2546, column: 13, scope: !14283)
!14285 = !DILocation(line: 2546, column: 17, scope: !14283)
!14286 = !DILocation(line: 2546, column: 11, scope: !14283)
!14287 = !DILocation(line: 2546, column: 27, scope: !14283)
!14288 = !DILocation(line: 2546, column: 7, scope: !14279)
!14289 = !DILocation(line: 2547, column: 20, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14283, file: !3, line: 2546, column: 46)
!14291 = !DILocation(line: 2547, column: 4, scope: !14290)
!14292 = !DILocation(line: 2547, column: 8, scope: !14290)
!14293 = !DILocation(line: 2547, column: 18, scope: !14290)
!14294 = !DILocation(line: 2548, column: 18, scope: !14290)
!14295 = !DILocation(line: 2548, column: 4, scope: !14290)
!14296 = !DILocation(line: 2549, column: 3, scope: !14290)
!14297 = !DILocation(line: 2550, column: 2, scope: !14279)
!14298 = !DILocation(line: 2559, column: 2, scope: !14208)
!14299 = !DILocation(line: 2559, column: 10, scope: !14208)
!14300 = !DILocation(line: 2559, column: 14, scope: !14208)
!14301 = !DILocation(line: 2559, column: 24, scope: !14208)
!14302 = !DILocation(line: 2559, column: 41, scope: !14208)
!14303 = !DILocation(line: 2560, column: 10, scope: !14208)
!14304 = !DILocation(line: 2560, column: 14, scope: !14208)
!14305 = !DILocation(line: 2560, column: 28, scope: !14208)
!14306 = !DILocation(line: 2560, column: 9, scope: !14208)
!14307 = !DILocation(line: 2560, column: 34, scope: !14208)
!14308 = !DILocation(line: 2560, column: 55, scope: !14208)
!14309 = !DILocation(line: 2560, column: 44, scope: !14208)
!14310 = !DILocation(line: 2560, column: 42, scope: !14208)
!14311 = !DILocation(line: 0, scope: !14208)
!14312 = !DILocation(line: 2562, column: 33, scope: !14224)
!14313 = !DILocation(line: 2562, column: 37, scope: !14224)
!14314 = !DILocation(line: 2562, column: 10, scope: !14224)
!14315 = !DILocation(line: 2562, column: 8, scope: !14224)
!14316 = !DILocation(line: 2563, column: 3, scope: !14224)
!14317 = !DILocation(line: 2563, column: 7, scope: !14224)
!14318 = !DILocation(line: 2563, column: 16, scope: !14224)
!14319 = !DILocation(line: 2564, column: 7, scope: !14227)
!14320 = !DILocation(line: 2564, column: 12, scope: !14227)
!14321 = !DILocation(line: 2564, column: 7, scope: !14224)
!14322 = !DILocation(line: 2565, column: 16, scope: !14227)
!14323 = !DILocation(line: 2565, column: 22, scope: !14227)
!14324 = !DILocation(line: 394, column: 2, scope: !13784, inlinedAt: !14226)
!14325 = !DILocation(line: 394, column: 2, scope: !13787, inlinedAt: !14226)
!14326 = !DILocation(line: 2565, column: 4, scope: !14227)
!14327 = !DILocation(line: 2566, column: 19, scope: !14224)
!14328 = !DILocation(line: 2566, column: 25, scope: !14224)
!14329 = !DILocation(line: 2566, column: 3, scope: !14224)
!14330 = !DILocation(line: 2566, column: 8, scope: !14224)
!14331 = !DILocation(line: 2566, column: 17, scope: !14224)
!14332 = !DILocation(line: 2567, column: 9, scope: !14224)
!14333 = !DILocation(line: 2567, column: 3, scope: !14224)
!14334 = !DILocation(line: 2569, column: 27, scope: !14224)
!14335 = !DILocation(line: 2569, column: 31, scope: !14224)
!14336 = !DILocation(line: 2569, column: 36, scope: !14224)
!14337 = !DILocation(line: 2569, column: 46, scope: !14224)
!14338 = !DILocation(line: 2569, column: 51, scope: !14224)
!14339 = !DILocation(line: 2569, column: 9, scope: !14224)
!14340 = !DILocation(line: 2569, column: 7, scope: !14224)
!14341 = !DILocation(line: 2571, column: 7, scope: !14223)
!14342 = !DILocation(line: 2571, column: 12, scope: !14223)
!14343 = !DILocation(line: 2571, column: 7, scope: !14224)
!14344 = !DILocation(line: 2572, column: 14, scope: !14223)
!14345 = !DILocation(line: 2572, column: 20, scope: !14223)
!14346 = !DILocation(line: 354, column: 2, scope: !13774, inlinedAt: !14222)
!14347 = !DILocation(line: 354, column: 2, scope: !13777, inlinedAt: !14222)
!14348 = !DILocation(line: 2572, column: 4, scope: !14223)
!14349 = !DILocation(line: 2573, column: 11, scope: !14224)
!14350 = !DILocation(line: 2573, column: 3, scope: !14224)
!14351 = !DILocation(line: 2575, column: 8, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 2575, column: 8)
!14353 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2573, column: 16)
!14354 = !DILocation(line: 2575, column: 13, scope: !14352)
!14355 = !DILocation(line: 2575, column: 8, scope: !14353)
!14356 = !DILocation(line: 2576, column: 5, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14352, file: !3, line: 2575, column: 23)
!14358 = !DILocation(line: 2576, column: 10, scope: !14357)
!14359 = !DILocation(line: 2576, column: 20, scope: !14357)
!14360 = !DILocation(line: 2576, column: 27, scope: !14357)
!14361 = !DILocation(line: 2577, column: 5, scope: !14357)
!14362 = !DILocation(line: 2577, column: 10, scope: !14357)
!14363 = !DILocation(line: 2577, column: 20, scope: !14357)
!14364 = !DILocation(line: 2577, column: 30, scope: !14357)
!14365 = !DILocation(line: 2577, column: 35, scope: !14357)
!14366 = !DILocation(line: 2578, column: 4, scope: !14357)
!14367 = !DILocation(line: 2580, column: 16, scope: !14353)
!14368 = !DILocation(line: 2580, column: 20, scope: !14353)
!14369 = !DILocation(line: 2580, column: 4, scope: !14353)
!14370 = !DILocation(line: 2581, column: 4, scope: !14353)
!14371 = !DILocation(line: 2583, column: 8, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 2583, column: 8)
!14373 = !DILocation(line: 2583, column: 13, scope: !14372)
!14374 = !DILocation(line: 2583, column: 8, scope: !14353)
!14375 = !DILocation(line: 2584, column: 5, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14372, file: !3, line: 2583, column: 23)
!14377 = !DILocation(line: 2584, column: 10, scope: !14376)
!14378 = !DILocation(line: 2584, column: 20, scope: !14376)
!14379 = !DILocation(line: 2584, column: 27, scope: !14376)
!14380 = !DILocation(line: 2585, column: 5, scope: !14376)
!14381 = !DILocation(line: 2585, column: 10, scope: !14376)
!14382 = !DILocation(line: 2585, column: 20, scope: !14376)
!14383 = !DILocation(line: 2585, column: 30, scope: !14376)
!14384 = !DILocation(line: 2585, column: 35, scope: !14376)
!14385 = !DILocation(line: 2586, column: 4, scope: !14376)
!14386 = !DILocation(line: 2588, column: 16, scope: !14353)
!14387 = !DILocation(line: 2588, column: 20, scope: !14353)
!14388 = !DILocation(line: 2588, column: 4, scope: !14353)
!14389 = !DILocation(line: 2589, column: 4, scope: !14353)
!14390 = !DILocation(line: 2591, column: 4, scope: !14353)
!14391 = !DILocation(line: 2594, column: 7, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2594, column: 7)
!14393 = !DILocation(line: 2594, column: 11, scope: !14392)
!14394 = !DILocation(line: 2594, column: 7, scope: !14224)
!14395 = !DILocation(line: 2595, column: 4, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14392, file: !3, line: 2594, column: 27)
!14397 = !DILocation(line: 2595, column: 8, scope: !14396)
!14398 = !DILocation(line: 2595, column: 17, scope: !14396)
!14399 = !DILocation(line: 2596, column: 4, scope: !14396)
!14400 = distinct !{!14400, !14298, !14401}
!14401 = !DILocation(line: 2621, column: 2, scope: !14208)
!14402 = !DILocation(line: 2599, column: 22, scope: !14224)
!14403 = !DILocation(line: 2599, column: 26, scope: !14224)
!14404 = !DILocation(line: 2599, column: 9, scope: !14224)
!14405 = !DILocation(line: 2599, column: 7, scope: !14224)
!14406 = !DILocation(line: 2601, column: 7, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2601, column: 7)
!14408 = !DILocation(line: 2601, column: 11, scope: !14407)
!14409 = !DILocation(line: 2601, column: 7, scope: !14224)
!14410 = !DILocation(line: 2602, column: 23, scope: !14407)
!14411 = !DILocation(line: 2602, column: 27, scope: !14407)
!14412 = !DILocation(line: 2602, column: 43, scope: !14407)
!14413 = !DILocation(line: 2602, column: 4, scope: !14407)
!14414 = !DILocation(line: 2604, column: 4, scope: !14407)
!14415 = !DILocation(line: 2604, column: 8, scope: !14407)
!14416 = !DILocation(line: 2604, column: 17, scope: !14407)
!14417 = !DILocation(line: 2606, column: 11, scope: !14224)
!14418 = !DILocation(line: 2606, column: 3, scope: !14224)
!14419 = !DILocation(line: 2608, column: 8, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 2608, column: 8)
!14421 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2606, column: 16)
!14422 = !DILocation(line: 2608, column: 13, scope: !14420)
!14423 = !DILocation(line: 2608, column: 8, scope: !14421)
!14424 = !DILocation(line: 2609, column: 5, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14420, file: !3, line: 2608, column: 23)
!14426 = !DILocation(line: 2609, column: 10, scope: !14425)
!14427 = !DILocation(line: 2609, column: 20, scope: !14425)
!14428 = !DILocation(line: 2609, column: 27, scope: !14425)
!14429 = !DILocation(line: 2610, column: 4, scope: !14425)
!14430 = !DILocation(line: 2612, column: 16, scope: !14421)
!14431 = !DILocation(line: 2612, column: 20, scope: !14421)
!14432 = !DILocation(line: 2612, column: 4, scope: !14421)
!14433 = !DILocation(line: 2613, column: 4, scope: !14421)
!14434 = !DILocation(line: 2615, column: 16, scope: !14421)
!14435 = !DILocation(line: 2615, column: 20, scope: !14421)
!14436 = !DILocation(line: 2615, column: 4, scope: !14421)
!14437 = !DILocation(line: 2616, column: 4, scope: !14421)
!14438 = !DILocation(line: 2618, column: 4, scope: !14421)
!14439 = !DILocation(line: 2627, column: 6, scope: !14208)
!14440 = !DILocation(line: 2627, column: 10, scope: !14208)
!14441 = !DILocation(line: 2627, column: 23, scope: !14208)
!14442 = !DILocation(line: 2627, column: 4, scope: !14208)
!14443 = !DILocation(line: 2628, column: 2, scope: !14208)
!14444 = !DILocation(line: 2628, column: 10, scope: !14208)
!14445 = !DILocation(line: 2628, column: 9, scope: !14208)
!14446 = !DILocation(line: 2628, column: 13, scope: !14208)
!14447 = !DILocation(line: 2628, column: 34, scope: !14208)
!14448 = !DILocation(line: 2628, column: 23, scope: !14208)
!14449 = !DILocation(line: 2628, column: 21, scope: !14208)
!14450 = !DILocation(line: 2629, column: 8, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2629, column: 7)
!14452 = !DILocation(line: 2629, column: 24, scope: !14451)
!14453 = !DILocation(line: 2630, column: 7, scope: !14451)
!14454 = !DILocation(line: 2630, column: 11, scope: !14451)
!14455 = !DILocation(line: 2631, column: 4, scope: !14451)
!14456 = !DILocation(line: 2631, column: 16, scope: !14451)
!14457 = !DILocation(line: 2631, column: 32, scope: !14451)
!14458 = !DILocation(line: 2632, column: 20, scope: !14451)
!14459 = !DILocation(line: 2632, column: 17, scope: !14451)
!14460 = !DILocation(line: 2632, column: 12, scope: !14451)
!14461 = !DILocation(line: 2629, column: 7, scope: !14217)
!14462 = !DILocation(line: 2633, column: 16, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14451, file: !3, line: 2632, column: 34)
!14464 = !DILocation(line: 2633, column: 20, scope: !14463)
!14465 = !DILocation(line: 2633, column: 4, scope: !14463)
!14466 = !DILocation(line: 2634, column: 29, scope: !14463)
!14467 = !DILocation(line: 2634, column: 32, scope: !14463)
!14468 = !DILocation(line: 2634, column: 8, scope: !14463)
!14469 = !DILocation(line: 2634, column: 6, scope: !14463)
!14470 = !DILocation(line: 2635, column: 4, scope: !14463)
!14471 = distinct !{!14471, !14443, !14472}
!14472 = !DILocation(line: 2735, column: 2, scope: !14208)
!14473 = !DILocation(line: 2638, column: 7, scope: !14217)
!14474 = !DILocation(line: 2638, column: 5, scope: !14217)
!14475 = !DILocation(line: 2639, column: 26, scope: !14217)
!14476 = !DILocation(line: 2639, column: 30, scope: !14217)
!14477 = !DILocation(line: 2639, column: 44, scope: !14217)
!14478 = !DILocation(line: 2639, column: 8, scope: !14217)
!14479 = !DILocation(line: 2639, column: 6, scope: !14217)
!14480 = !DILocation(line: 2641, column: 7, scope: !14220)
!14481 = !DILocation(line: 2641, column: 12, scope: !14220)
!14482 = !DILocation(line: 2641, column: 7, scope: !14217)
!14483 = !DILocation(line: 2642, column: 16, scope: !14220)
!14484 = !DILocation(line: 2642, column: 22, scope: !14220)
!14485 = !DILocation(line: 394, column: 2, scope: !13784, inlinedAt: !14219)
!14486 = !DILocation(line: 394, column: 2, scope: !13787, inlinedAt: !14219)
!14487 = !DILocation(line: 2642, column: 4, scope: !14220)
!14488 = !DILocation(line: 2644, column: 3, scope: !14217)
!14489 = !DILocation(line: 2644, column: 7, scope: !14217)
!14490 = !DILocation(line: 2644, column: 14, scope: !14217)
!14491 = !DILocation(line: 2645, column: 3, scope: !14217)
!14492 = !DILocation(line: 2645, column: 7, scope: !14217)
!14493 = !DILocation(line: 2645, column: 21, scope: !14217)
!14494 = !DILocation(line: 2647, column: 20, scope: !14217)
!14495 = !DILocation(line: 2647, column: 24, scope: !14217)
!14496 = !DILocation(line: 2647, column: 32, scope: !14217)
!14497 = !DILocation(line: 2647, column: 3, scope: !14217)
!14498 = !DILocation(line: 2647, column: 8, scope: !14217)
!14499 = !DILocation(line: 2647, column: 18, scope: !14217)
!14500 = !DILocation(line: 2648, column: 14, scope: !14217)
!14501 = !DILocation(line: 2648, column: 18, scope: !14217)
!14502 = !DILocation(line: 2648, column: 26, scope: !14217)
!14503 = !DILocation(line: 2648, column: 3, scope: !14217)
!14504 = !DILocation(line: 2648, column: 8, scope: !14217)
!14505 = !DILocation(line: 2648, column: 12, scope: !14217)
!14506 = !DILocation(line: 2649, column: 14, scope: !14217)
!14507 = !DILocation(line: 2649, column: 18, scope: !14217)
!14508 = !DILocation(line: 2649, column: 26, scope: !14217)
!14509 = !DILocation(line: 2649, column: 3, scope: !14217)
!14510 = !DILocation(line: 2649, column: 8, scope: !14217)
!14511 = !DILocation(line: 2649, column: 12, scope: !14217)
!14512 = !DILocation(line: 2650, column: 19, scope: !14217)
!14513 = !DILocation(line: 2650, column: 3, scope: !14217)
!14514 = !DILocation(line: 2650, column: 8, scope: !14217)
!14515 = !DILocation(line: 2650, column: 17, scope: !14217)
!14516 = !DILocation(line: 2651, column: 3, scope: !14217)
!14517 = !DILocation(line: 2651, column: 8, scope: !14217)
!14518 = !DILocation(line: 2651, column: 16, scope: !14217)
!14519 = !DILocation(line: 2652, column: 3, scope: !14217)
!14520 = !DILocation(line: 2652, column: 8, scope: !14217)
!14521 = !DILocation(line: 2652, column: 17, scope: !14217)
!14522 = !DILocation(line: 2653, column: 3, scope: !14217)
!14523 = !DILocation(line: 2653, column: 8, scope: !14217)
!14524 = !DILocation(line: 2653, column: 17, scope: !14217)
!14525 = !DILocation(line: 2654, column: 18, scope: !14217)
!14526 = !DILocation(line: 2654, column: 3, scope: !14217)
!14527 = !DILocation(line: 2654, column: 8, scope: !14217)
!14528 = !DILocation(line: 2654, column: 16, scope: !14217)
!14529 = !DILocation(line: 2655, column: 11, scope: !14217)
!14530 = !DILocation(line: 2655, column: 16, scope: !14217)
!14531 = !DILocation(line: 2655, column: 3, scope: !14217)
!14532 = !DILocation(line: 2658, column: 10, scope: !14217)
!14533 = !DILocation(line: 2658, column: 15, scope: !14217)
!14534 = !DILocation(line: 2658, column: 3, scope: !14217)
!14535 = !DILocation(line: 2658, column: 20, scope: !14217)
!14536 = !DILocation(line: 2658, column: 24, scope: !14217)
!14537 = !DILocation(line: 2658, column: 30, scope: !14217)
!14538 = !DILocation(line: 2658, column: 34, scope: !14217)
!14539 = !DILocation(line: 2660, column: 46, scope: !14217)
!14540 = !DILocation(line: 2660, column: 33, scope: !14217)
!14541 = !DILocation(line: 2660, column: 17, scope: !14217)
!14542 = !DILocation(line: 2660, column: 22, scope: !14217)
!14543 = !DILocation(line: 2660, column: 31, scope: !14217)
!14544 = !DILocation(line: 2661, column: 17, scope: !14217)
!14545 = !DILocation(line: 2661, column: 17, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14547, file: !3, line: 2661, column: 17)
!14547 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2661, column: 17)
!14548 = !DILocation(line: 2661, column: 17, scope: !14547)
!14549 = !DILocation(line: 2661, column: 17, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14546, file: !3, line: 2661, column: 17)
!14551 = !DILocation(line: 2661, column: 17, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2661, column: 17)
!14553 = !DILocation(line: 2661, column: 17, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2661, column: 17)
!14555 = !{i32 -2140618254, i32 -2140618225, i32 -2140618179, i32 -2140618121, i32 -2140618067, i32 -2140618013, i32 -2140617958, i32 -2140617927}
!14556 = !DILocation(line: 2661, column: 17, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2661, column: 17)
!14558 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2661, column: 17)
!14559 = !{i32 -2140617485, i32 -2140617478, i32 -2140617424, i32 -2140617393, i32 -2140617363}
!14560 = !DILocation(line: 2661, column: 17, scope: !14558)
!14561 = !DILocation(line: 2662, column: 7, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2662, column: 7)
!14563 = !DILocation(line: 2662, column: 12, scope: !14562)
!14564 = !DILocation(line: 2662, column: 7, scope: !14217)
!14565 = !DILocalVariable(name: "sg", scope: !14566, file: !3, line: 2663, type: !5492)
!14566 = distinct !DILexicalBlock(scope: !14562, file: !3, line: 2662, column: 22)
!14567 = !DILocation(line: 2663, column: 24, scope: !14566)
!14568 = !DILocalVariable(name: "i", scope: !14566, file: !3, line: 2664, type: !182)
!14569 = !DILocation(line: 2664, column: 8, scope: !14566)
!14570 = !DILocation(line: 2666, column: 4, scope: !14566)
!14571 = !DILocation(line: 2666, column: 9, scope: !14566)
!14572 = !DILocation(line: 2666, column: 15, scope: !14566)
!14573 = !DILocation(line: 2668, column: 25, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14566, file: !3, line: 2668, column: 25)
!14575 = !DILocation(line: 2668, column: 25, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14574, file: !3, line: 2668, column: 25)
!14577 = !DILocation(line: 2670, column: 10, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 2669, column: 9)
!14579 = distinct !DILexicalBlock(scope: !14576, file: !3, line: 2668, column: 68)
!14580 = !DILocation(line: 2670, column: 14, scope: !14578)
!14581 = !DILocation(line: 2670, column: 34, scope: !14578)
!14582 = !DILocation(line: 2670, column: 39, scope: !14578)
!14583 = !DILocation(line: 2671, column: 10, scope: !14578)
!14584 = !DILocation(line: 2669, column: 9, scope: !14578)
!14585 = !DILocation(line: 2671, column: 26, scope: !14578)
!14586 = !DILocation(line: 2669, column: 9, scope: !14579)
!14587 = !DILocation(line: 2672, column: 6, scope: !14578)
!14588 = !DILocation(line: 2673, column: 4, scope: !14579)
!14589 = distinct !{!14589, !14573, !14590}
!14590 = !DILocation(line: 2673, column: 4, scope: !14574)
!14591 = !DILocation(line: 2674, column: 32, scope: !14566)
!14592 = !DILocation(line: 2674, column: 37, scope: !14566)
!14593 = !DILocation(line: 2674, column: 4, scope: !14566)
!14594 = !DILocation(line: 2674, column: 9, scope: !14566)
!14595 = !DILocation(line: 2674, column: 14, scope: !14566)
!14596 = !DILocation(line: 2674, column: 30, scope: !14566)
!14597 = !DILocation(line: 2675, column: 3, scope: !14566)
!14598 = !DILocation(line: 2676, column: 25, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14562, file: !3, line: 2675, column: 10)
!14600 = !DILocation(line: 2676, column: 30, scope: !14599)
!14601 = !DILocation(line: 2676, column: 43, scope: !14599)
!14602 = !DILocation(line: 2677, column: 25, scope: !14599)
!14603 = !DILocation(line: 2677, column: 30, scope: !14599)
!14604 = !DILocation(line: 2677, column: 37, scope: !14599)
!14605 = !DILocation(line: 2678, column: 25, scope: !14599)
!14606 = !DILocation(line: 2678, column: 30, scope: !14599)
!14607 = !DILocation(line: 2678, column: 39, scope: !14599)
!14608 = !DILocation(line: 2679, column: 25, scope: !14599)
!14609 = !DILocation(line: 2679, column: 30, scope: !14599)
!14610 = !DILocation(line: 2679, column: 35, scope: !14599)
!14611 = !DILocation(line: 2679, column: 51, scope: !14599)
!14612 = !DILocation(line: 2683, column: 29, scope: !14217)
!14613 = !DILocation(line: 2683, column: 34, scope: !14217)
!14614 = !DILocation(line: 2683, column: 44, scope: !14217)
!14615 = !DILocation(line: 2683, column: 7, scope: !14217)
!14616 = !DILocation(line: 2682, column: 3, scope: !14217)
!14617 = !DILocation(line: 2682, column: 8, scope: !14217)
!14618 = !DILocation(line: 2682, column: 13, scope: !14217)
!14619 = !DILocation(line: 2682, column: 27, scope: !14217)
!14620 = !DILocation(line: 2687, column: 8, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2687, column: 7)
!14622 = !DILocation(line: 2687, column: 13, scope: !14621)
!14623 = !DILocation(line: 2687, column: 23, scope: !14621)
!14624 = !DILocation(line: 2687, column: 31, scope: !14621)
!14625 = !DILocation(line: 2687, column: 48, scope: !14621)
!14626 = !DILocation(line: 2688, column: 6, scope: !14621)
!14627 = !DILocation(line: 2688, column: 11, scope: !14621)
!14628 = !DILocation(line: 2688, column: 20, scope: !14621)
!14629 = !DILocation(line: 2687, column: 7, scope: !14217)
!14630 = !DILocation(line: 2689, column: 4, scope: !14621)
!14631 = !DILocation(line: 2689, column: 9, scope: !14621)
!14632 = !DILocation(line: 2689, column: 14, scope: !14621)
!14633 = !DILocation(line: 2689, column: 28, scope: !14621)
!14634 = !DILocation(line: 2691, column: 9, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2691, column: 7)
!14636 = !DILocation(line: 2691, column: 14, scope: !14635)
!14637 = !DILocation(line: 2691, column: 19, scope: !14635)
!14638 = !DILocation(line: 2691, column: 33, scope: !14635)
!14639 = !DILocation(line: 2691, column: 7, scope: !14217)
!14640 = !DILocation(line: 2692, column: 4, scope: !14635)
!14641 = !DILocation(line: 2692, column: 9, scope: !14635)
!14642 = !DILocation(line: 2692, column: 14, scope: !14635)
!14643 = !DILocation(line: 2692, column: 30, scope: !14635)
!14644 = !DILocation(line: 2694, column: 7, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2694, column: 7)
!14646 = !DILocation(line: 2694, column: 12, scope: !14645)
!14647 = !DILocation(line: 2694, column: 21, scope: !14645)
!14648 = !DILocation(line: 2694, column: 7, scope: !14217)
!14649 = !DILocation(line: 2695, column: 4, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 2694, column: 38)
!14651 = !DILocation(line: 2695, column: 9, scope: !14650)
!14652 = !DILocation(line: 2695, column: 14, scope: !14650)
!14653 = !DILocation(line: 2695, column: 28, scope: !14650)
!14654 = !DILocation(line: 2696, column: 4, scope: !14650)
!14655 = !DILocation(line: 2696, column: 9, scope: !14650)
!14656 = !DILocation(line: 2696, column: 14, scope: !14650)
!14657 = !DILocation(line: 2696, column: 30, scope: !14650)
!14658 = !DILocation(line: 2697, column: 3, scope: !14650)
!14659 = !DILocation(line: 2698, column: 7, scope: !14216)
!14660 = !DILocation(line: 2698, column: 12, scope: !14216)
!14661 = !DILocation(line: 2698, column: 7, scope: !14217)
!14662 = !DILocation(line: 2699, column: 14, scope: !14216)
!14663 = !DILocation(line: 2699, column: 20, scope: !14216)
!14664 = !DILocation(line: 354, column: 2, scope: !13774, inlinedAt: !14215)
!14665 = !DILocation(line: 354, column: 2, scope: !13777, inlinedAt: !14215)
!14666 = !DILocation(line: 2699, column: 4, scope: !14216)
!14667 = !DILocation(line: 2701, column: 22, scope: !14217)
!14668 = !DILocation(line: 2701, column: 26, scope: !14217)
!14669 = !DILocation(line: 2701, column: 9, scope: !14217)
!14670 = !DILocation(line: 2701, column: 7, scope: !14217)
!14671 = !DILocation(line: 2703, column: 11, scope: !14217)
!14672 = !DILocation(line: 2703, column: 3, scope: !14217)
!14673 = !DILocation(line: 2705, column: 23, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 2703, column: 16)
!14675 = !DILocation(line: 2705, column: 27, scope: !14674)
!14676 = !DILocation(line: 2705, column: 43, scope: !14674)
!14677 = !DILocation(line: 2705, column: 4, scope: !14674)
!14678 = !DILocation(line: 2706, column: 4, scope: !14674)
!14679 = !DILocation(line: 2708, column: 8, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 2708, column: 8)
!14681 = !DILocation(line: 2708, column: 13, scope: !14680)
!14682 = !DILocation(line: 2708, column: 8, scope: !14674)
!14683 = !DILocation(line: 2709, column: 5, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 2708, column: 23)
!14685 = !DILocation(line: 2709, column: 10, scope: !14684)
!14686 = !DILocation(line: 2709, column: 20, scope: !14684)
!14687 = !DILocation(line: 2709, column: 27, scope: !14684)
!14688 = !DILocation(line: 2710, column: 5, scope: !14684)
!14689 = !DILocation(line: 2710, column: 10, scope: !14684)
!14690 = !DILocation(line: 2710, column: 20, scope: !14684)
!14691 = !DILocation(line: 2710, column: 30, scope: !14684)
!14692 = !DILocation(line: 2710, column: 35, scope: !14684)
!14693 = !DILocation(line: 2711, column: 4, scope: !14684)
!14694 = !DILocation(line: 2713, column: 8, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 2713, column: 8)
!14696 = !DILocation(line: 2713, column: 13, scope: !14695)
!14697 = !DILocation(line: 2713, column: 8, scope: !14674)
!14698 = !DILocation(line: 2715, column: 16, scope: !14695)
!14699 = !DILocation(line: 2715, column: 21, scope: !14695)
!14700 = !DILocation(line: 2715, column: 13, scope: !14695)
!14701 = !DILocation(line: 2715, column: 9, scope: !14695)
!14702 = !DILocation(line: 2714, column: 5, scope: !14695)
!14703 = !DILocation(line: 2714, column: 9, scope: !14695)
!14704 = !DILocation(line: 2714, column: 21, scope: !14695)
!14705 = !DILocation(line: 2714, column: 26, scope: !14695)
!14706 = !DILocation(line: 2714, column: 30, scope: !14695)
!14707 = !DILocation(line: 2714, column: 35, scope: !14695)
!14708 = !DILocation(line: 2717, column: 16, scope: !14674)
!14709 = !DILocation(line: 2717, column: 20, scope: !14674)
!14710 = !DILocation(line: 2717, column: 4, scope: !14674)
!14711 = !DILocation(line: 2718, column: 4, scope: !14674)
!14712 = !DILocation(line: 2720, column: 8, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 2720, column: 8)
!14714 = !DILocation(line: 2720, column: 13, scope: !14713)
!14715 = !DILocation(line: 2720, column: 8, scope: !14674)
!14716 = !DILocation(line: 2721, column: 5, scope: !14713)
!14717 = !DILocation(line: 2721, column: 10, scope: !14713)
!14718 = !DILocation(line: 2721, column: 20, scope: !14713)
!14719 = !DILocation(line: 2721, column: 30, scope: !14713)
!14720 = !DILocation(line: 2721, column: 35, scope: !14713)
!14721 = !DILocation(line: 2723, column: 8, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 2723, column: 8)
!14723 = !DILocation(line: 2723, column: 13, scope: !14722)
!14724 = !DILocation(line: 2723, column: 8, scope: !14674)
!14725 = !DILocation(line: 2725, column: 16, scope: !14722)
!14726 = !DILocation(line: 2725, column: 21, scope: !14722)
!14727 = !DILocation(line: 2725, column: 13, scope: !14722)
!14728 = !DILocation(line: 2725, column: 9, scope: !14722)
!14729 = !DILocation(line: 2724, column: 5, scope: !14722)
!14730 = !DILocation(line: 2724, column: 9, scope: !14722)
!14731 = !DILocation(line: 2724, column: 21, scope: !14722)
!14732 = !DILocation(line: 2724, column: 26, scope: !14722)
!14733 = !DILocation(line: 2724, column: 30, scope: !14722)
!14734 = !DILocation(line: 2724, column: 35, scope: !14722)
!14735 = !DILocation(line: 2727, column: 16, scope: !14674)
!14736 = !DILocation(line: 2727, column: 20, scope: !14674)
!14737 = !DILocation(line: 2727, column: 4, scope: !14674)
!14738 = !DILocation(line: 2728, column: 4, scope: !14674)
!14739 = !DILocation(line: 2730, column: 4, scope: !14674)
!14740 = !DILocation(line: 2733, column: 28, scope: !14217)
!14741 = !DILocation(line: 2733, column: 31, scope: !14217)
!14742 = !DILocation(line: 2733, column: 7, scope: !14217)
!14743 = !DILocation(line: 2733, column: 5, scope: !14217)
!14744 = !DILocation(line: 2737, column: 6, scope: !14213)
!14745 = !DILocation(line: 2737, column: 11, scope: !14213)
!14746 = !DILocation(line: 2737, column: 6, scope: !14208)
!14747 = !DILocation(line: 2738, column: 15, scope: !14213)
!14748 = !DILocation(line: 2738, column: 21, scope: !14213)
!14749 = !DILocation(line: 394, column: 2, scope: !13784, inlinedAt: !14212)
!14750 = !DILocation(line: 394, column: 2, scope: !13787, inlinedAt: !14212)
!14751 = !DILocation(line: 2738, column: 3, scope: !14213)
!14752 = !DILocation(line: 2739, column: 1, scope: !14208)
!14753 = distinct !DISubprogram(name: "ips_ffdc_time", scope: !3, file: !3, line: 5946, type: !7788, scopeLine: 5947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!14754 = !DILocalVariable(name: "ha", arg: 1, scope: !14753, file: !3, line: 5946, type: !5540)
!14755 = !DILocation(line: 5946, column: 26, scope: !14753)
!14756 = !DILocalVariable(name: "scb", scope: !14753, file: !3, line: 5948, type: !4848)
!14757 = !DILocation(line: 5948, column: 13, scope: !14753)
!14758 = !DILocation(line: 5954, column: 9, scope: !14753)
!14759 = !DILocation(line: 5954, column: 13, scope: !14753)
!14760 = !DILocation(line: 5954, column: 18, scope: !14753)
!14761 = !DILocation(line: 5954, column: 22, scope: !14753)
!14762 = !DILocation(line: 5954, column: 31, scope: !14753)
!14763 = !DILocation(line: 5954, column: 6, scope: !14753)
!14764 = !DILocation(line: 5956, column: 15, scope: !14753)
!14765 = !DILocation(line: 5956, column: 19, scope: !14753)
!14766 = !DILocation(line: 5956, column: 2, scope: !14753)
!14767 = !DILocation(line: 5958, column: 17, scope: !14753)
!14768 = !DILocation(line: 5958, column: 2, scope: !14753)
!14769 = !DILocation(line: 5958, column: 7, scope: !14753)
!14770 = !DILocation(line: 5958, column: 15, scope: !14753)
!14771 = !DILocation(line: 5959, column: 2, scope: !14753)
!14772 = !DILocation(line: 5959, column: 7, scope: !14753)
!14773 = !DILocation(line: 5959, column: 14, scope: !14753)
!14774 = !DILocation(line: 5960, column: 2, scope: !14753)
!14775 = !DILocation(line: 5960, column: 7, scope: !14753)
!14776 = !DILocation(line: 5960, column: 11, scope: !14753)
!14777 = !DILocation(line: 5960, column: 16, scope: !14753)
!14778 = !DILocation(line: 5960, column: 24, scope: !14753)
!14779 = !DILocation(line: 5961, column: 29, scope: !14753)
!14780 = !DILocation(line: 5961, column: 2, scope: !14753)
!14781 = !DILocation(line: 5961, column: 7, scope: !14753)
!14782 = !DILocation(line: 5961, column: 11, scope: !14753)
!14783 = !DILocation(line: 5961, column: 16, scope: !14753)
!14784 = !DILocation(line: 5961, column: 27, scope: !14753)
!14785 = !DILocation(line: 5962, column: 2, scope: !14753)
!14786 = !DILocation(line: 5962, column: 7, scope: !14753)
!14787 = !DILocation(line: 5962, column: 11, scope: !14753)
!14788 = !DILocation(line: 5962, column: 16, scope: !14753)
!14789 = !DILocation(line: 5962, column: 28, scope: !14753)
!14790 = !DILocation(line: 5963, column: 2, scope: !14753)
!14791 = !DILocation(line: 5963, column: 7, scope: !14753)
!14792 = !DILocation(line: 5963, column: 11, scope: !14753)
!14793 = !DILocation(line: 5963, column: 16, scope: !14753)
!14794 = !DILocation(line: 5963, column: 27, scope: !14753)
!14795 = !DILocation(line: 5966, column: 20, scope: !14753)
!14796 = !DILocation(line: 5966, column: 24, scope: !14753)
!14797 = !DILocation(line: 5966, column: 29, scope: !14753)
!14798 = !DILocation(line: 5966, column: 33, scope: !14753)
!14799 = !DILocation(line: 5966, column: 2, scope: !14753)
!14800 = !DILocation(line: 5969, column: 16, scope: !14753)
!14801 = !DILocation(line: 5969, column: 20, scope: !14753)
!14802 = !DILocation(line: 5969, column: 25, scope: !14753)
!14803 = !DILocation(line: 5969, column: 2, scope: !14753)
!14804 = !DILocation(line: 5970, column: 1, scope: !14753)
!14805 = distinct !DISubprogram(name: "ips_getscb", scope: !3, file: !3, line: 4409, type: !14806, scopeLine: 4410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!14806 = !DISubroutineType(types: !14807)
!14807 = !{!4848, !5540}
!14808 = !DILocalVariable(name: "ha", arg: 1, scope: !14805, file: !3, line: 4409, type: !5540)
!14809 = !DILocation(line: 4409, column: 23, scope: !14805)
!14810 = !DILocalVariable(name: "scb", scope: !14805, file: !3, line: 4411, type: !4848)
!14811 = !DILocation(line: 4411, column: 13, scope: !14805)
!14812 = !DILocation(line: 4415, column: 13, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 4415, column: 6)
!14814 = !DILocation(line: 4415, column: 17, scope: !14813)
!14815 = !DILocation(line: 4415, column: 11, scope: !14813)
!14816 = !DILocation(line: 4415, column: 31, scope: !14813)
!14817 = !DILocation(line: 4415, column: 6, scope: !14805)
!14818 = !DILocation(line: 4417, column: 3, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 4415, column: 40)
!14820 = !DILocation(line: 4420, column: 21, scope: !14805)
!14821 = !DILocation(line: 4420, column: 26, scope: !14805)
!14822 = !DILocation(line: 4420, column: 2, scope: !14805)
!14823 = !DILocation(line: 4420, column: 6, scope: !14805)
!14824 = !DILocation(line: 4420, column: 19, scope: !14805)
!14825 = !DILocation(line: 4421, column: 2, scope: !14805)
!14826 = !DILocation(line: 4421, column: 7, scope: !14805)
!14827 = !DILocation(line: 4421, column: 13, scope: !14805)
!14828 = !DILocation(line: 4422, column: 2, scope: !14805)
!14829 = !DILocation(line: 4422, column: 7, scope: !14805)
!14830 = !DILocation(line: 4422, column: 14, scope: !14805)
!14831 = !DILocation(line: 4424, column: 15, scope: !14805)
!14832 = !DILocation(line: 4424, column: 19, scope: !14805)
!14833 = !DILocation(line: 4424, column: 2, scope: !14805)
!14834 = !DILocation(line: 4426, column: 10, scope: !14805)
!14835 = !DILocation(line: 4426, column: 2, scope: !14805)
!14836 = !DILocation(line: 4427, column: 1, scope: !14805)
!14837 = distinct !DISubprogram(name: "ips_removeq_copp_head", scope: !3, file: !3, line: 3005, type: !14838, scopeLine: 3006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!14838 = !DISubroutineType(types: !14839)
!14839 = !{!14244, !14840}
!14840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!14841 = !DILocalVariable(name: "queue", arg: 1, scope: !14837, file: !3, line: 3005, type: !14840)
!14842 = !DILocation(line: 3005, column: 42, scope: !14837)
!14843 = !DILocalVariable(name: "item", scope: !14837, file: !3, line: 3007, type: !14244)
!14844 = !DILocation(line: 3007, column: 24, scope: !14837)
!14845 = !DILocation(line: 3011, column: 9, scope: !14837)
!14846 = !DILocation(line: 3011, column: 16, scope: !14837)
!14847 = !DILocation(line: 3011, column: 7, scope: !14837)
!14848 = !DILocation(line: 3013, column: 7, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14837, file: !3, line: 3013, column: 6)
!14850 = !DILocation(line: 3013, column: 6, scope: !14837)
!14851 = !DILocation(line: 3014, column: 3, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14849, file: !3, line: 3013, column: 13)
!14853 = !DILocation(line: 3017, column: 16, scope: !14837)
!14854 = !DILocation(line: 3017, column: 22, scope: !14837)
!14855 = !DILocation(line: 3017, column: 2, scope: !14837)
!14856 = !DILocation(line: 3017, column: 9, scope: !14837)
!14857 = !DILocation(line: 3017, column: 14, scope: !14837)
!14858 = !DILocation(line: 3018, column: 2, scope: !14837)
!14859 = !DILocation(line: 3018, column: 8, scope: !14837)
!14860 = !DILocation(line: 3018, column: 13, scope: !14837)
!14861 = !DILocation(line: 3020, column: 6, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14837, file: !3, line: 3020, column: 6)
!14863 = !DILocation(line: 3020, column: 13, scope: !14862)
!14864 = !DILocation(line: 3020, column: 21, scope: !14862)
!14865 = !DILocation(line: 3020, column: 18, scope: !14862)
!14866 = !DILocation(line: 3020, column: 6, scope: !14837)
!14867 = !DILocation(line: 3021, column: 3, scope: !14862)
!14868 = !DILocation(line: 3021, column: 10, scope: !14862)
!14869 = !DILocation(line: 3021, column: 15, scope: !14862)
!14870 = !DILocation(line: 3023, column: 2, scope: !14837)
!14871 = !DILocation(line: 3023, column: 9, scope: !14837)
!14872 = !DILocation(line: 3023, column: 14, scope: !14837)
!14873 = !DILocation(line: 3025, column: 10, scope: !14837)
!14874 = !DILocation(line: 3025, column: 2, scope: !14837)
!14875 = !DILocation(line: 3026, column: 1, scope: !14837)
!14876 = distinct !DISubprogram(name: "ips_make_passthru", scope: !3, file: !3, line: 1557, type: !14877, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!14877 = !DISubroutineType(types: !14878)
!14878 = !{!182, !5540, !5101, !4848, !182}
!14879 = !DILocalVariable(name: "ha", arg: 1, scope: !14876, file: !3, line: 1557, type: !5540)
!14880 = !DILocation(line: 1557, column: 29, scope: !14876)
!14881 = !DILocalVariable(name: "SC", arg: 2, scope: !14876, file: !3, line: 1557, type: !5101)
!14882 = !DILocation(line: 1557, column: 51, scope: !14876)
!14883 = !DILocalVariable(name: "scb", arg: 3, scope: !14876, file: !3, line: 1557, type: !4848)
!14884 = !DILocation(line: 1557, column: 66, scope: !14876)
!14885 = !DILocalVariable(name: "intr", arg: 4, scope: !14876, file: !3, line: 1557, type: !182)
!14886 = !DILocation(line: 1557, column: 75, scope: !14876)
!14887 = !DILocalVariable(name: "pt", scope: !14876, file: !3, line: 1559, type: !6113)
!14888 = !DILocation(line: 1559, column: 18, scope: !14876)
!14889 = !DILocalVariable(name: "length", scope: !14876, file: !3, line: 1560, type: !182)
!14890 = !DILocation(line: 1560, column: 6, scope: !14876)
!14891 = !DILocalVariable(name: "i", scope: !14876, file: !3, line: 1561, type: !182)
!14892 = !DILocation(line: 1561, column: 6, scope: !14876)
!14893 = !DILocalVariable(name: "ret", scope: !14876, file: !3, line: 1561, type: !182)
!14894 = !DILocation(line: 1561, column: 9, scope: !14876)
!14895 = !DILocalVariable(name: "sg", scope: !14876, file: !3, line: 1562, type: !5492)
!14896 = !DILocation(line: 1562, column: 29, scope: !14876)
!14897 = !DILocation(line: 1562, column: 46, scope: !14876)
!14898 = !DILocation(line: 1562, column: 34, scope: !14876)
!14899 = !DILocation(line: 1566, column: 9, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 1566, column: 9)
!14901 = !DILocation(line: 1566, column: 9, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 1566, column: 9)
!14903 = !DILocation(line: 1567, column: 13, scope: !14902)
!14904 = !DILocation(line: 1567, column: 17, scope: !14902)
!14905 = !DILocation(line: 1567, column: 10, scope: !14902)
!14906 = !DILocation(line: 1567, column: 3, scope: !14902)
!14907 = distinct !{!14907, !14899, !14908}
!14908 = !DILocation(line: 1567, column: 17, scope: !14900)
!14909 = !DILocation(line: 1569, column: 6, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 1569, column: 6)
!14911 = !DILocation(line: 1569, column: 13, scope: !14910)
!14912 = !DILocation(line: 1569, column: 6, scope: !14876)
!14913 = !DILocation(line: 1573, column: 3, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14910, file: !3, line: 1569, column: 40)
!14915 = !DILocation(line: 1575, column: 32, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 1575, column: 6)
!14917 = !DILocation(line: 1575, column: 36, scope: !14916)
!14918 = !DILocation(line: 1575, column: 6, scope: !14916)
!14919 = !DILocation(line: 1575, column: 6, scope: !14876)
!14920 = !DILocation(line: 1578, column: 7, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14922, file: !3, line: 1578, column: 7)
!14922 = distinct !DILexicalBlock(scope: !14916, file: !3, line: 1575, column: 45)
!14923 = !DILocation(line: 1578, column: 11, scope: !14921)
!14924 = !DILocation(line: 1578, column: 7, scope: !14922)
!14925 = !DILocation(line: 1579, column: 28, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14921, file: !3, line: 1578, column: 23)
!14927 = !DILocation(line: 1579, column: 32, scope: !14926)
!14928 = !DILocation(line: 1579, column: 9, scope: !14926)
!14929 = !DILocation(line: 1579, column: 7, scope: !14926)
!14930 = !DILocation(line: 1580, column: 22, scope: !14926)
!14931 = !DILocation(line: 1580, column: 26, scope: !14926)
!14932 = !DILocation(line: 1580, column: 4, scope: !14926)
!14933 = !DILocation(line: 1581, column: 4, scope: !14926)
!14934 = !DILocation(line: 1581, column: 8, scope: !14926)
!14935 = !DILocation(line: 1581, column: 20, scope: !14926)
!14936 = !DILocation(line: 1582, column: 4, scope: !14926)
!14937 = !DILocation(line: 1582, column: 8, scope: !14926)
!14938 = !DILocation(line: 1582, column: 23, scope: !14926)
!14939 = !DILocation(line: 1583, column: 23, scope: !14926)
!14940 = !DILocation(line: 1583, column: 27, scope: !14926)
!14941 = !DILocation(line: 1583, column: 4, scope: !14926)
!14942 = !DILocation(line: 1584, column: 3, scope: !14926)
!14943 = !DILocation(line: 1585, column: 3, scope: !14922)
!14944 = !DILocation(line: 1587, column: 23, scope: !14876)
!14945 = !DILocation(line: 1587, column: 2, scope: !14876)
!14946 = !DILocation(line: 1587, column: 6, scope: !14876)
!14947 = !DILocation(line: 1587, column: 21, scope: !14876)
!14948 = !DILocation(line: 1589, column: 20, scope: !14876)
!14949 = !DILocation(line: 1589, column: 24, scope: !14876)
!14950 = !DILocation(line: 1589, column: 28, scope: !14876)
!14951 = !DILocation(line: 1589, column: 40, scope: !14876)
!14952 = !DILocation(line: 1589, column: 44, scope: !14876)
!14953 = !DILocation(line: 1589, column: 2, scope: !14876)
!14954 = !DILocation(line: 1590, column: 26, scope: !14876)
!14955 = !DILocation(line: 1590, column: 30, scope: !14876)
!14956 = !DILocation(line: 1590, column: 7, scope: !14876)
!14957 = !DILocation(line: 1590, column: 5, scope: !14876)
!14958 = !DILocation(line: 1602, column: 10, scope: !14876)
!14959 = !DILocation(line: 1602, column: 14, scope: !14876)
!14960 = !DILocation(line: 1602, column: 2, scope: !14876)
!14961 = !DILocation(line: 1604, column: 10, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 1602, column: 23)
!14963 = !DILocation(line: 1604, column: 14, scope: !14962)
!14964 = !DILocation(line: 1604, column: 25, scope: !14962)
!14965 = !DILocation(line: 1604, column: 3, scope: !14962)
!14966 = !DILocation(line: 1606, column: 22, scope: !14962)
!14967 = !DILocation(line: 1606, column: 26, scope: !14962)
!14968 = !DILocation(line: 1606, column: 30, scope: !14962)
!14969 = !DILocation(line: 1606, column: 3, scope: !14962)
!14970 = !DILocation(line: 1608, column: 3, scope: !14962)
!14971 = !DILocation(line: 1608, column: 7, scope: !14962)
!14972 = !DILocation(line: 1608, column: 14, scope: !14962)
!14973 = !DILocation(line: 1610, column: 3, scope: !14962)
!14974 = !DILocation(line: 1614, column: 7, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 1614, column: 7)
!14976 = !DILocation(line: 1614, column: 11, scope: !14975)
!14977 = !DILocation(line: 1614, column: 19, scope: !14975)
!14978 = !DILocation(line: 1614, column: 7, scope: !14962)
!14979 = !DILocation(line: 1615, column: 8, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14981, file: !3, line: 1615, column: 8)
!14981 = distinct !DILexicalBlock(scope: !14975, file: !3, line: 1614, column: 41)
!14982 = !DILocation(line: 1615, column: 44, scope: !14980)
!14983 = !DILocation(line: 1615, column: 48, scope: !14980)
!14984 = !DILocation(line: 1615, column: 42, scope: !14980)
!14985 = !DILocation(line: 1615, column: 15, scope: !14980)
!14986 = !DILocation(line: 1615, column: 8, scope: !14981)
!14987 = !DILocation(line: 1621, column: 5, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14980, file: !3, line: 1615, column: 59)
!14989 = !DILocation(line: 1624, column: 8, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14981, file: !3, line: 1624, column: 8)
!14991 = !DILocation(line: 1624, column: 12, scope: !14990)
!14992 = !DILocation(line: 1624, column: 20, scope: !14990)
!14993 = !DILocation(line: 1624, column: 27, scope: !14990)
!14994 = !DILocation(line: 1624, column: 54, scope: !14990)
!14995 = !DILocation(line: 1625, column: 8, scope: !14990)
!14996 = !DILocation(line: 1625, column: 12, scope: !14990)
!14997 = !DILocation(line: 1625, column: 19, scope: !14990)
!14998 = !DILocation(line: 1625, column: 23, scope: !14990)
!14999 = !DILocation(line: 1625, column: 31, scope: !14990)
!15000 = !DILocation(line: 1625, column: 39, scope: !14990)
!15001 = !DILocation(line: 1624, column: 8, scope: !14981)
!15002 = !DILocation(line: 1627, column: 32, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 1626, column: 27)
!15004 = !DILocation(line: 1627, column: 36, scope: !15003)
!15005 = !DILocation(line: 1627, column: 40, scope: !15003)
!15006 = !DILocation(line: 1627, column: 11, scope: !15003)
!15007 = !DILocation(line: 1627, column: 9, scope: !15003)
!15008 = !DILocation(line: 1628, column: 24, scope: !15003)
!15009 = !DILocation(line: 1628, column: 28, scope: !15003)
!15010 = !DILocation(line: 1628, column: 32, scope: !15003)
!15011 = !DILocation(line: 1628, column: 5, scope: !15003)
!15012 = !DILocation(line: 1630, column: 12, scope: !15003)
!15013 = !DILocation(line: 1630, column: 5, scope: !15003)
!15014 = !DILocation(line: 1632, column: 19, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !14981, file: !3, line: 1632, column: 8)
!15016 = !DILocation(line: 1632, column: 23, scope: !15015)
!15017 = !DILocation(line: 1632, column: 27, scope: !15015)
!15018 = !DILocation(line: 1632, column: 8, scope: !15015)
!15019 = !DILocation(line: 1632, column: 8, scope: !14981)
!15020 = !DILocation(line: 1633, column: 5, scope: !15015)
!15021 = !DILocation(line: 1635, column: 5, scope: !15015)
!15022 = !DILocation(line: 1638, column: 3, scope: !14962)
!15023 = !DILocation(line: 1642, column: 2, scope: !14876)
!15024 = !DILocation(line: 1643, column: 1, scope: !14876)
!15025 = distinct !DISubprogram(name: "ips_freescb", scope: !3, file: !3, line: 4441, type: !11270, scopeLine: 4442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15026 = !DILocalVariable(name: "ha", arg: 1, scope: !15025, file: !3, line: 4441, type: !5540)
!15027 = !DILocation(line: 4441, column: 24, scope: !15025)
!15028 = !DILocalVariable(name: "scb", arg: 2, scope: !15025, file: !3, line: 4441, type: !4848)
!15029 = !DILocation(line: 4441, column: 40, scope: !15025)
!15030 = !DILocation(line: 4445, column: 6, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15025, file: !3, line: 4445, column: 6)
!15032 = !DILocation(line: 4445, column: 11, scope: !15031)
!15033 = !DILocation(line: 4445, column: 17, scope: !15031)
!15034 = !DILocation(line: 4445, column: 6, scope: !15025)
!15035 = !DILocation(line: 4446, column: 32, scope: !15031)
!15036 = !DILocation(line: 4446, column: 37, scope: !15031)
!15037 = !DILocation(line: 4446, column: 17, scope: !15031)
!15038 = !DILocation(line: 4447, column: 11, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15031, file: !3, line: 4447, column: 11)
!15040 = !DILocation(line: 4447, column: 16, scope: !15039)
!15041 = !DILocation(line: 4447, column: 22, scope: !15039)
!15042 = !DILocation(line: 4447, column: 11, scope: !15031)
!15043 = !DILocation(line: 4448, column: 3, scope: !15039)
!15044 = !DILocation(line: 4452, column: 6, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15025, file: !3, line: 4452, column: 6)
!15046 = !DILocation(line: 4452, column: 33, scope: !15045)
!15047 = !DILocation(line: 4452, column: 37, scope: !15045)
!15048 = !DILocation(line: 4452, column: 46, scope: !15045)
!15049 = !DILocation(line: 4452, column: 30, scope: !15045)
!15050 = !DILocation(line: 4452, column: 6, scope: !15025)
!15051 = !DILocation(line: 4453, column: 17, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 4452, column: 52)
!15053 = !DILocation(line: 4453, column: 21, scope: !15052)
!15054 = !DILocation(line: 4453, column: 3, scope: !15052)
!15055 = !DILocation(line: 4453, column: 8, scope: !15052)
!15056 = !DILocation(line: 4453, column: 15, scope: !15052)
!15057 = !DILocation(line: 4454, column: 22, scope: !15052)
!15058 = !DILocation(line: 4454, column: 3, scope: !15052)
!15059 = !DILocation(line: 4454, column: 7, scope: !15052)
!15060 = !DILocation(line: 4454, column: 20, scope: !15052)
!15061 = !DILocation(line: 4455, column: 2, scope: !15052)
!15062 = !DILocation(line: 4456, column: 1, scope: !15025)
!15063 = distinct !DISubprogram(name: "ips_putq_scb_head", scope: !3, file: !3, line: 2753, type: !15064, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{null, !12883, !4848}
!15066 = !DILocalVariable(name: "queue", arg: 1, scope: !15063, file: !3, line: 2753, type: !12883)
!15067 = !DILocation(line: 2753, column: 37, scope: !15063)
!15068 = !DILocalVariable(name: "item", arg: 2, scope: !15063, file: !3, line: 2753, type: !4848)
!15069 = !DILocation(line: 2753, column: 56, scope: !15063)
!15070 = !DILocation(line: 2757, column: 7, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 2757, column: 6)
!15072 = !DILocation(line: 2757, column: 6, scope: !15063)
!15073 = !DILocation(line: 2758, column: 3, scope: !15071)
!15074 = !DILocation(line: 2760, column: 17, scope: !15063)
!15075 = !DILocation(line: 2760, column: 24, scope: !15063)
!15076 = !DILocation(line: 2760, column: 2, scope: !15063)
!15077 = !DILocation(line: 2760, column: 8, scope: !15063)
!15078 = !DILocation(line: 2760, column: 15, scope: !15063)
!15079 = !DILocation(line: 2761, column: 16, scope: !15063)
!15080 = !DILocation(line: 2761, column: 2, scope: !15063)
!15081 = !DILocation(line: 2761, column: 9, scope: !15063)
!15082 = !DILocation(line: 2761, column: 14, scope: !15063)
!15083 = !DILocation(line: 2763, column: 7, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 2763, column: 6)
!15085 = !DILocation(line: 2763, column: 14, scope: !15084)
!15086 = !DILocation(line: 2763, column: 6, scope: !15063)
!15087 = !DILocation(line: 2764, column: 17, scope: !15084)
!15088 = !DILocation(line: 2764, column: 3, scope: !15084)
!15089 = !DILocation(line: 2764, column: 10, scope: !15084)
!15090 = !DILocation(line: 2764, column: 15, scope: !15084)
!15091 = !DILocation(line: 2766, column: 2, scope: !15063)
!15092 = !DILocation(line: 2766, column: 9, scope: !15063)
!15093 = !DILocation(line: 2766, column: 14, scope: !15063)
!15094 = !DILocation(line: 2767, column: 1, scope: !15063)
!15095 = distinct !DISubprogram(name: "sdev_channel", scope: !128, file: !128, line: 482, type: !15096, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15096 = !DISubroutineType(types: !15097)
!15097 = !{!7, !5120}
!15098 = !DILocalVariable(name: "sdev", arg: 1, scope: !15095, file: !128, line: 482, type: !5120)
!15099 = !DILocation(line: 482, column: 61, scope: !15095)
!15100 = !DILocation(line: 484, column: 9, scope: !15095)
!15101 = !DILocation(line: 484, column: 15, scope: !15095)
!15102 = !DILocation(line: 484, column: 2, scope: !15095)
!15103 = distinct !DISubprogram(name: "sdev_id", scope: !128, file: !128, line: 487, type: !15096, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15104 = !DILocalVariable(name: "sdev", arg: 1, scope: !15103, file: !128, line: 487, type: !5120)
!15105 = !DILocation(line: 487, column: 56, scope: !15103)
!15106 = !DILocation(line: 489, column: 9, scope: !15103)
!15107 = !DILocation(line: 489, column: 15, scope: !15103)
!15108 = !DILocation(line: 489, column: 2, scope: !15103)
!15109 = distinct !DISubprogram(name: "ips_removeq_wait", scope: !3, file: !3, line: 2926, type: !15110, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{!5101, !15112, !5101}
!15112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 64)
!15113 = !DILocalVariable(name: "queue", arg: 1, scope: !15109, file: !3, line: 2926, type: !15112)
!15114 = !DILocation(line: 2926, column: 67, scope: !15109)
!15115 = !DILocalVariable(name: "item", arg: 2, scope: !15109, file: !3, line: 2927, type: !5101)
!15116 = !DILocation(line: 2927, column: 26, scope: !15109)
!15117 = !DILocalVariable(name: "p", scope: !15109, file: !3, line: 2929, type: !5101)
!15118 = !DILocation(line: 2929, column: 20, scope: !15109)
!15119 = !DILocation(line: 2933, column: 7, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 2933, column: 6)
!15121 = !DILocation(line: 2933, column: 6, scope: !15109)
!15122 = !DILocation(line: 2934, column: 3, scope: !15120)
!15123 = !DILocation(line: 2936, column: 6, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 2936, column: 6)
!15125 = !DILocation(line: 2936, column: 14, scope: !15124)
!15126 = !DILocation(line: 2936, column: 21, scope: !15124)
!15127 = !DILocation(line: 2936, column: 11, scope: !15124)
!15128 = !DILocation(line: 2936, column: 6, scope: !15109)
!15129 = !DILocation(line: 2937, column: 33, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 2936, column: 27)
!15131 = !DILocation(line: 2937, column: 11, scope: !15130)
!15132 = !DILocation(line: 2937, column: 3, scope: !15130)
!15133 = !DILocation(line: 2940, column: 6, scope: !15109)
!15134 = !DILocation(line: 2940, column: 13, scope: !15109)
!15135 = !DILocation(line: 2940, column: 4, scope: !15109)
!15136 = !DILocation(line: 2942, column: 2, scope: !15109)
!15137 = !DILocation(line: 2942, column: 10, scope: !15109)
!15138 = !DILocation(line: 2942, column: 9, scope: !15109)
!15139 = !DILocation(line: 2942, column: 13, scope: !15109)
!15140 = !DILocation(line: 2942, column: 17, scope: !15109)
!15141 = !DILocation(line: 2942, column: 46, scope: !15109)
!15142 = !DILocation(line: 2942, column: 49, scope: !15109)
!15143 = !DILocation(line: 2942, column: 25, scope: !15109)
!15144 = !DILocation(line: 2942, column: 22, scope: !15109)
!15145 = !DILocation(line: 0, scope: !15109)
!15146 = !DILocation(line: 2943, column: 28, scope: !15109)
!15147 = !DILocation(line: 2943, column: 31, scope: !15109)
!15148 = !DILocation(line: 2943, column: 7, scope: !15109)
!15149 = !DILocation(line: 2943, column: 5, scope: !15109)
!15150 = distinct !{!15150, !15136, !15147}
!15151 = !DILocation(line: 2945, column: 6, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 2945, column: 6)
!15153 = !DILocation(line: 2945, column: 6, scope: !15109)
!15154 = !DILocation(line: 2947, column: 22, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15152, file: !3, line: 2945, column: 9)
!15156 = !DILocation(line: 2947, column: 28, scope: !15155)
!15157 = !DILocation(line: 2947, column: 3, scope: !15155)
!15158 = !DILocation(line: 2947, column: 6, scope: !15155)
!15159 = !DILocation(line: 2947, column: 20, scope: !15155)
!15160 = !DILocation(line: 2949, column: 8, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15155, file: !3, line: 2949, column: 7)
!15162 = !DILocation(line: 2949, column: 14, scope: !15161)
!15163 = !DILocation(line: 2949, column: 7, scope: !15155)
!15164 = !DILocation(line: 2950, column: 18, scope: !15161)
!15165 = !DILocation(line: 2950, column: 4, scope: !15161)
!15166 = !DILocation(line: 2950, column: 11, scope: !15161)
!15167 = !DILocation(line: 2950, column: 16, scope: !15161)
!15168 = !DILocation(line: 2952, column: 3, scope: !15155)
!15169 = !DILocation(line: 2952, column: 9, scope: !15155)
!15170 = !DILocation(line: 2952, column: 23, scope: !15155)
!15171 = !DILocation(line: 2953, column: 3, scope: !15155)
!15172 = !DILocation(line: 2953, column: 10, scope: !15155)
!15173 = !DILocation(line: 2953, column: 15, scope: !15155)
!15174 = !DILocation(line: 2955, column: 11, scope: !15155)
!15175 = !DILocation(line: 2955, column: 3, scope: !15155)
!15176 = !DILocation(line: 2958, column: 2, scope: !15109)
!15177 = !DILocation(line: 2959, column: 1, scope: !15109)
!15178 = distinct !DISubprogram(name: "ipsintr_done", scope: !3, file: !3, line: 3106, type: !11270, scopeLine: 3107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15179 = !DILocalVariable(name: "ha", arg: 1, scope: !15178, file: !3, line: 3106, type: !5540)
!15180 = !DILocation(line: 3106, column: 25, scope: !15178)
!15181 = !DILocalVariable(name: "scb", arg: 2, scope: !15178, file: !3, line: 3106, type: !4848)
!15182 = !DILocation(line: 3106, column: 41, scope: !15178)
!15183 = !DILocation(line: 3110, column: 7, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 3110, column: 6)
!15185 = !DILocation(line: 3110, column: 6, scope: !15178)
!15186 = !DILocation(line: 3111, column: 3, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15184, file: !3, line: 3110, column: 12)
!15188 = !DILocation(line: 3114, column: 3, scope: !15187)
!15189 = !DILocation(line: 3117, column: 6, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 3117, column: 6)
!15191 = !DILocation(line: 3117, column: 11, scope: !15190)
!15192 = !DILocation(line: 3117, column: 20, scope: !15190)
!15193 = !DILocation(line: 3117, column: 6, scope: !15178)
!15194 = !DILocation(line: 3119, column: 3, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 3117, column: 29)
!15196 = !DILocation(line: 3122, column: 3, scope: !15195)
!15197 = !DILocation(line: 3125, column: 11, scope: !15178)
!15198 = !DILocation(line: 3125, column: 15, scope: !15178)
!15199 = !DILocation(line: 3125, column: 2, scope: !15178)
!15200 = !DILocation(line: 3126, column: 1, scope: !15178)
!15201 = distinct !DISubprogram(name: "ips_fill_scb_sg_single", scope: !3, file: !3, line: 1786, type: !15202, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{!182, !5540, !3904, !4848, !182, !7}
!15204 = !DILocalVariable(name: "ha", arg: 1, scope: !15201, file: !3, line: 1786, type: !5540)
!15205 = !DILocation(line: 1786, column: 35, scope: !15201)
!15206 = !DILocalVariable(name: "busaddr", arg: 2, scope: !15201, file: !3, line: 1786, type: !3904)
!15207 = !DILocation(line: 1786, column: 50, scope: !15201)
!15208 = !DILocalVariable(name: "scb", arg: 3, scope: !15201, file: !3, line: 1787, type: !4848)
!15209 = !DILocation(line: 1787, column: 22, scope: !15201)
!15210 = !DILocalVariable(name: "indx", arg: 4, scope: !15201, file: !3, line: 1787, type: !182)
!15211 = !DILocation(line: 1787, column: 31, scope: !15201)
!15212 = !DILocalVariable(name: "e_len", arg: 5, scope: !15201, file: !3, line: 1787, type: !7)
!15213 = !DILocation(line: 1787, column: 50, scope: !15201)
!15214 = !DILocalVariable(name: "ret_val", scope: !15201, file: !3, line: 1790, type: !182)
!15215 = !DILocation(line: 1790, column: 6, scope: !15201)
!15216 = !DILocation(line: 1792, column: 7, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15201, file: !3, line: 1792, column: 6)
!15218 = !DILocation(line: 1792, column: 12, scope: !15217)
!15219 = !DILocation(line: 1792, column: 23, scope: !15217)
!15220 = !DILocation(line: 1792, column: 21, scope: !15217)
!15221 = !DILocation(line: 1792, column: 32, scope: !15217)
!15222 = !DILocation(line: 1792, column: 36, scope: !15217)
!15223 = !DILocation(line: 1792, column: 30, scope: !15217)
!15224 = !DILocation(line: 1792, column: 6, scope: !15201)
!15225 = !DILocation(line: 1793, column: 11, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 1792, column: 46)
!15227 = !DILocation(line: 1793, column: 15, scope: !15226)
!15228 = !DILocation(line: 1793, column: 26, scope: !15226)
!15229 = !DILocation(line: 1793, column: 31, scope: !15226)
!15230 = !DILocation(line: 1793, column: 24, scope: !15226)
!15231 = !DILocation(line: 1793, column: 9, scope: !15226)
!15232 = !DILocation(line: 1794, column: 18, scope: !15226)
!15233 = !DILocation(line: 1794, column: 3, scope: !15226)
!15234 = !DILocation(line: 1794, column: 8, scope: !15226)
!15235 = !DILocation(line: 1794, column: 16, scope: !15226)
!15236 = !DILocation(line: 1795, column: 5, scope: !15226)
!15237 = !DILocation(line: 1795, column: 10, scope: !15226)
!15238 = !DILocation(line: 1795, column: 3, scope: !15226)
!15239 = !DILocation(line: 1796, column: 11, scope: !15226)
!15240 = !DILocation(line: 1797, column: 2, scope: !15226)
!15241 = !DILocation(line: 1798, column: 3, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 1797, column: 9)
!15243 = !DILocation(line: 1798, column: 8, scope: !15242)
!15244 = !DILocation(line: 1798, column: 16, scope: !15242)
!15245 = !DILocation(line: 1799, column: 3, scope: !15242)
!15246 = !DILocation(line: 1799, column: 8, scope: !15242)
!15247 = !DILocation(line: 1799, column: 17, scope: !15242)
!15248 = !DILocation(line: 1801, column: 6, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15201, file: !3, line: 1801, column: 6)
!15250 = !DILocation(line: 1801, column: 6, scope: !15201)
!15251 = !DILocation(line: 1803, column: 7, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15249, file: !3, line: 1801, column: 30)
!15253 = !DILocation(line: 1802, column: 3, scope: !15252)
!15254 = !DILocation(line: 1802, column: 8, scope: !15252)
!15255 = !DILocation(line: 1802, column: 16, scope: !15252)
!15256 = !DILocation(line: 1802, column: 25, scope: !15252)
!15257 = !DILocation(line: 1802, column: 31, scope: !15252)
!15258 = !DILocation(line: 1802, column: 42, scope: !15252)
!15259 = !DILocation(line: 1805, column: 7, scope: !15252)
!15260 = !DILocation(line: 1804, column: 3, scope: !15252)
!15261 = !DILocation(line: 1804, column: 8, scope: !15252)
!15262 = !DILocation(line: 1804, column: 16, scope: !15252)
!15263 = !DILocation(line: 1804, column: 25, scope: !15252)
!15264 = !DILocation(line: 1804, column: 31, scope: !15252)
!15265 = !DILocation(line: 1804, column: 42, scope: !15252)
!15266 = !DILocation(line: 1806, column: 40, scope: !15252)
!15267 = !DILocation(line: 1806, column: 3, scope: !15252)
!15268 = !DILocation(line: 1806, column: 8, scope: !15252)
!15269 = !DILocation(line: 1806, column: 16, scope: !15252)
!15270 = !DILocation(line: 1806, column: 25, scope: !15252)
!15271 = !DILocation(line: 1806, column: 31, scope: !15252)
!15272 = !DILocation(line: 1806, column: 38, scope: !15252)
!15273 = !DILocation(line: 1807, column: 2, scope: !15252)
!15274 = !DILocation(line: 1809, column: 7, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15249, file: !3, line: 1807, column: 9)
!15276 = !DILocation(line: 1808, column: 3, scope: !15275)
!15277 = !DILocation(line: 1808, column: 8, scope: !15275)
!15278 = !DILocation(line: 1808, column: 16, scope: !15275)
!15279 = !DILocation(line: 1808, column: 25, scope: !15275)
!15280 = !DILocation(line: 1808, column: 31, scope: !15275)
!15281 = !DILocation(line: 1808, column: 39, scope: !15275)
!15282 = !DILocation(line: 1810, column: 40, scope: !15275)
!15283 = !DILocation(line: 1810, column: 3, scope: !15275)
!15284 = !DILocation(line: 1810, column: 8, scope: !15275)
!15285 = !DILocation(line: 1810, column: 16, scope: !15275)
!15286 = !DILocation(line: 1810, column: 25, scope: !15275)
!15287 = !DILocation(line: 1810, column: 31, scope: !15275)
!15288 = !DILocation(line: 1810, column: 38, scope: !15275)
!15289 = !DILocation(line: 1813, column: 4, scope: !15201)
!15290 = !DILocation(line: 1813, column: 9, scope: !15201)
!15291 = !DILocation(line: 1813, column: 2, scope: !15201)
!15292 = !DILocation(line: 1814, column: 19, scope: !15201)
!15293 = !DILocation(line: 1814, column: 2, scope: !15201)
!15294 = !DILocation(line: 1814, column: 7, scope: !15201)
!15295 = !DILocation(line: 1814, column: 16, scope: !15201)
!15296 = !DILocation(line: 1815, column: 9, scope: !15201)
!15297 = !DILocation(line: 1815, column: 2, scope: !15201)
!15298 = distinct !DISubprogram(name: "ips_fix_ffdc_time", scope: !3, file: !3, line: 5981, type: !15299, scopeLine: 5982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15299 = !DISubroutineType(types: !15300)
!15300 = !{null, !5540, !4848, !1317}
!15301 = !DILocalVariable(name: "ha", arg: 1, scope: !15298, file: !3, line: 5981, type: !5540)
!15302 = !DILocation(line: 5981, column: 30, scope: !15298)
!15303 = !DILocalVariable(name: "scb", arg: 2, scope: !15298, file: !3, line: 5981, type: !4848)
!15304 = !DILocation(line: 5981, column: 46, scope: !15298)
!15305 = !DILocalVariable(name: "current_time", arg: 3, scope: !15298, file: !3, line: 5981, type: !1317)
!15306 = !DILocation(line: 5981, column: 60, scope: !15298)
!15307 = !DILocalVariable(name: "tm", scope: !15298, file: !3, line: 5983, type: !15308)
!15308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !15309, line: 49, size: 320, elements: !15310)
!15309 = !DIFile(filename: "./include/linux/time.h", directory: "/home/lizy2001/genbc/linux")
!15310 = !{!15311, !15312, !15313, !15314, !15315, !15316, !15317, !15318}
!15311 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !15308, file: !15309, line: 54, baseType: !182, size: 32)
!15312 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !15308, file: !15309, line: 56, baseType: !182, size: 32, offset: 32)
!15313 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !15308, file: !15309, line: 58, baseType: !182, size: 32, offset: 64)
!15314 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !15308, file: !15309, line: 60, baseType: !182, size: 32, offset: 96)
!15315 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !15308, file: !15309, line: 62, baseType: !182, size: 32, offset: 128)
!15316 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !15308, file: !15309, line: 64, baseType: !241, size: 64, offset: 192)
!15317 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !15308, file: !15309, line: 66, baseType: !182, size: 32, offset: 256)
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !15308, file: !15309, line: 68, baseType: !182, size: 32, offset: 288)
!15319 = !DILocation(line: 5983, column: 12, scope: !15298)
!15320 = !DILocation(line: 5987, column: 15, scope: !15298)
!15321 = !DILocation(line: 5987, column: 2, scope: !15298)
!15322 = !DILocation(line: 5989, column: 28, scope: !15298)
!15323 = !DILocation(line: 5989, column: 25, scope: !15298)
!15324 = !DILocation(line: 5989, column: 2, scope: !15298)
!15325 = !DILocation(line: 5989, column: 7, scope: !15298)
!15326 = !DILocation(line: 5989, column: 11, scope: !15298)
!15327 = !DILocation(line: 5989, column: 16, scope: !15298)
!15328 = !DILocation(line: 5989, column: 23, scope: !15298)
!15329 = !DILocation(line: 5990, column: 28, scope: !15298)
!15330 = !DILocation(line: 5990, column: 25, scope: !15298)
!15331 = !DILocation(line: 5990, column: 2, scope: !15298)
!15332 = !DILocation(line: 5990, column: 7, scope: !15298)
!15333 = !DILocation(line: 5990, column: 11, scope: !15298)
!15334 = !DILocation(line: 5990, column: 16, scope: !15298)
!15335 = !DILocation(line: 5990, column: 23, scope: !15298)
!15336 = !DILocation(line: 5991, column: 28, scope: !15298)
!15337 = !DILocation(line: 5991, column: 25, scope: !15298)
!15338 = !DILocation(line: 5991, column: 2, scope: !15298)
!15339 = !DILocation(line: 5991, column: 7, scope: !15298)
!15340 = !DILocation(line: 5991, column: 11, scope: !15298)
!15341 = !DILocation(line: 5991, column: 16, scope: !15298)
!15342 = !DILocation(line: 5991, column: 23, scope: !15298)
!15343 = !DILocation(line: 5992, column: 29, scope: !15298)
!15344 = !DILocation(line: 5992, column: 37, scope: !15298)
!15345 = !DILocation(line: 5992, column: 45, scope: !15298)
!15346 = !DILocation(line: 5992, column: 25, scope: !15298)
!15347 = !DILocation(line: 5992, column: 2, scope: !15298)
!15348 = !DILocation(line: 5992, column: 7, scope: !15298)
!15349 = !DILocation(line: 5992, column: 11, scope: !15298)
!15350 = !DILocation(line: 5992, column: 16, scope: !15298)
!15351 = !DILocation(line: 5992, column: 23, scope: !15298)
!15352 = !DILocation(line: 5993, column: 28, scope: !15298)
!15353 = !DILocation(line: 5993, column: 36, scope: !15298)
!15354 = !DILocation(line: 5993, column: 25, scope: !15298)
!15355 = !DILocation(line: 5993, column: 2, scope: !15298)
!15356 = !DILocation(line: 5993, column: 7, scope: !15298)
!15357 = !DILocation(line: 5993, column: 11, scope: !15298)
!15358 = !DILocation(line: 5993, column: 16, scope: !15298)
!15359 = !DILocation(line: 5993, column: 23, scope: !15298)
!15360 = !DILocation(line: 5994, column: 28, scope: !15298)
!15361 = !DILocation(line: 5994, column: 35, scope: !15298)
!15362 = !DILocation(line: 5994, column: 25, scope: !15298)
!15363 = !DILocation(line: 5994, column: 2, scope: !15298)
!15364 = !DILocation(line: 5994, column: 7, scope: !15298)
!15365 = !DILocation(line: 5994, column: 11, scope: !15298)
!15366 = !DILocation(line: 5994, column: 16, scope: !15298)
!15367 = !DILocation(line: 5994, column: 23, scope: !15298)
!15368 = !DILocation(line: 5995, column: 28, scope: !15298)
!15369 = !DILocation(line: 5995, column: 25, scope: !15298)
!15370 = !DILocation(line: 5995, column: 2, scope: !15298)
!15371 = !DILocation(line: 5995, column: 7, scope: !15298)
!15372 = !DILocation(line: 5995, column: 11, scope: !15298)
!15373 = !DILocation(line: 5995, column: 16, scope: !15298)
!15374 = !DILocation(line: 5995, column: 23, scope: !15298)
!15375 = !DILocation(line: 5996, column: 1, scope: !15298)
!15376 = distinct !DISubprogram(name: "ips_send_wait", scope: !3, file: !3, line: 3381, type: !15377, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15377 = !DISubroutineType(types: !15378)
!15378 = !{!182, !5540, !4848, !182, !182}
!15379 = !DILocalVariable(name: "ha", arg: 1, scope: !15376, file: !3, line: 3381, type: !5540)
!15380 = !DILocation(line: 3381, column: 26, scope: !15376)
!15381 = !DILocalVariable(name: "scb", arg: 2, scope: !15376, file: !3, line: 3381, type: !4848)
!15382 = !DILocation(line: 3381, column: 42, scope: !15376)
!15383 = !DILocalVariable(name: "timeout", arg: 3, scope: !15376, file: !3, line: 3381, type: !182)
!15384 = !DILocation(line: 3381, column: 51, scope: !15376)
!15385 = !DILocalVariable(name: "intr", arg: 4, scope: !15376, file: !3, line: 3381, type: !182)
!15386 = !DILocation(line: 3381, column: 64, scope: !15376)
!15387 = !DILocalVariable(name: "ret", scope: !15376, file: !3, line: 3383, type: !182)
!15388 = !DILocation(line: 3383, column: 6, scope: !15376)
!15389 = !DILocation(line: 3387, column: 6, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15376, file: !3, line: 3387, column: 6)
!15391 = !DILocation(line: 3387, column: 11, scope: !15390)
!15392 = !DILocation(line: 3387, column: 6, scope: !15376)
!15393 = !DILocation(line: 3388, column: 3, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15390, file: !3, line: 3387, column: 24)
!15395 = !DILocation(line: 3388, column: 7, scope: !15394)
!15396 = !DILocation(line: 3388, column: 16, scope: !15394)
!15397 = !DILocation(line: 3389, column: 25, scope: !15394)
!15398 = !DILocation(line: 3389, column: 30, scope: !15394)
!15399 = !DILocation(line: 3389, column: 3, scope: !15394)
!15400 = !DILocation(line: 3389, column: 7, scope: !15394)
!15401 = !DILocation(line: 3389, column: 23, scope: !15394)
!15402 = !DILocation(line: 3390, column: 2, scope: !15394)
!15403 = !DILocation(line: 3391, column: 2, scope: !15376)
!15404 = !DILocation(line: 3391, column: 7, scope: !15376)
!15405 = !DILocation(line: 3391, column: 16, scope: !15376)
!15406 = !DILocation(line: 3392, column: 21, scope: !15376)
!15407 = !DILocation(line: 3392, column: 25, scope: !15376)
!15408 = !DILocation(line: 3392, column: 8, scope: !15376)
!15409 = !DILocation(line: 3392, column: 6, scope: !15376)
!15410 = !DILocation(line: 3394, column: 7, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15376, file: !3, line: 3394, column: 6)
!15412 = !DILocation(line: 3394, column: 11, scope: !15411)
!15413 = !DILocation(line: 3394, column: 27, scope: !15411)
!15414 = !DILocation(line: 3394, column: 31, scope: !15411)
!15415 = !DILocation(line: 3394, column: 35, scope: !15411)
!15416 = !DILocation(line: 3394, column: 6, scope: !15376)
!15417 = !DILocation(line: 3395, column: 11, scope: !15411)
!15418 = !DILocation(line: 3395, column: 3, scope: !15411)
!15419 = !DILocation(line: 3397, column: 6, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15376, file: !3, line: 3397, column: 6)
!15421 = !DILocation(line: 3397, column: 11, scope: !15420)
!15422 = !DILocation(line: 3397, column: 6, scope: !15376)
!15423 = !DILocation(line: 3398, column: 18, scope: !15420)
!15424 = !DILocation(line: 3398, column: 22, scope: !15420)
!15425 = !DILocation(line: 3398, column: 31, scope: !15420)
!15426 = !DILocation(line: 3398, column: 9, scope: !15420)
!15427 = !DILocation(line: 3398, column: 7, scope: !15420)
!15428 = !DILocation(line: 3398, column: 3, scope: !15420)
!15429 = !DILocation(line: 3400, column: 10, scope: !15376)
!15430 = !DILocation(line: 3400, column: 2, scope: !15376)
!15431 = !DILocation(line: 3401, column: 1, scope: !15376)
!15432 = distinct !DISubprogram(name: "ipsintr_blocking", scope: !3, file: !3, line: 3084, type: !11270, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15433 = !DILocalVariable(name: "ha", arg: 1, scope: !15432, file: !3, line: 3084, type: !5540)
!15434 = !DILocation(line: 3084, column: 29, scope: !15432)
!15435 = !DILocalVariable(name: "scb", arg: 2, scope: !15432, file: !3, line: 3084, type: !4848)
!15436 = !DILocation(line: 3084, column: 45, scope: !15432)
!15437 = !DILocation(line: 3088, column: 14, scope: !15432)
!15438 = !DILocation(line: 3088, column: 18, scope: !15432)
!15439 = !DILocation(line: 3088, column: 2, scope: !15432)
!15440 = !DILocation(line: 3089, column: 7, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15432, file: !3, line: 3089, column: 6)
!15442 = !DILocation(line: 3089, column: 11, scope: !15441)
!15443 = !DILocation(line: 3089, column: 20, scope: !15441)
!15444 = !DILocation(line: 3089, column: 29, scope: !15441)
!15445 = !DILocation(line: 3089, column: 33, scope: !15441)
!15446 = !DILocation(line: 3089, column: 37, scope: !15441)
!15447 = !DILocation(line: 3089, column: 56, scope: !15441)
!15448 = !DILocation(line: 3089, column: 61, scope: !15441)
!15449 = !DILocation(line: 3089, column: 53, scope: !15441)
!15450 = !DILocation(line: 3089, column: 6, scope: !15432)
!15451 = !DILocation(line: 3090, column: 3, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15441, file: !3, line: 3089, column: 70)
!15453 = !DILocation(line: 3090, column: 7, scope: !15452)
!15454 = !DILocation(line: 3090, column: 16, scope: !15452)
!15455 = !DILocation(line: 3092, column: 3, scope: !15452)
!15456 = !DILocation(line: 3094, column: 1, scope: !15432)
!15457 = distinct !DISubprogram(name: "ips_wait", scope: !3, file: !3, line: 5531, type: !15458, scopeLine: 5532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15458 = !DISubroutineType(types: !15459)
!15459 = !{!182, !5540, !182, !182}
!15460 = !DILocalVariable(name: "ha", arg: 1, scope: !15457, file: !3, line: 5531, type: !5540)
!15461 = !DILocation(line: 5531, column: 21, scope: !15457)
!15462 = !DILocalVariable(name: "time", arg: 2, scope: !15457, file: !3, line: 5531, type: !182)
!15463 = !DILocation(line: 5531, column: 29, scope: !15457)
!15464 = !DILocalVariable(name: "intr", arg: 3, scope: !15457, file: !3, line: 5531, type: !182)
!15465 = !DILocation(line: 5531, column: 39, scope: !15457)
!15466 = !DILocalVariable(name: "ret", scope: !15457, file: !3, line: 5533, type: !182)
!15467 = !DILocation(line: 5533, column: 6, scope: !15457)
!15468 = !DILocalVariable(name: "done", scope: !15457, file: !3, line: 5534, type: !182)
!15469 = !DILocation(line: 5534, column: 6, scope: !15457)
!15470 = !DILocation(line: 5538, column: 6, scope: !15457)
!15471 = !DILocation(line: 5539, column: 7, scope: !15457)
!15472 = !DILocation(line: 5541, column: 7, scope: !15457)
!15473 = !DILocation(line: 5543, column: 2, scope: !15457)
!15474 = !DILocation(line: 5543, column: 10, scope: !15457)
!15475 = !DILocation(line: 5543, column: 15, scope: !15457)
!15476 = !DILocation(line: 5543, column: 20, scope: !15457)
!15477 = !DILocation(line: 5543, column: 25, scope: !15457)
!15478 = !DILocation(line: 5543, column: 24, scope: !15457)
!15479 = !DILocation(line: 0, scope: !15457)
!15480 = !DILocation(line: 5544, column: 7, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 5544, column: 7)
!15482 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 5543, column: 32)
!15483 = !DILocation(line: 5544, column: 12, scope: !15481)
!15484 = !DILocation(line: 5544, column: 7, scope: !15482)
!15485 = !DILocation(line: 5545, column: 8, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !3, line: 5545, column: 8)
!15487 = distinct !DILexicalBlock(scope: !15481, file: !3, line: 5544, column: 28)
!15488 = !DILocation(line: 5545, column: 12, scope: !15486)
!15489 = !DILocation(line: 5545, column: 21, scope: !15486)
!15490 = !DILocation(line: 5545, column: 8, scope: !15487)
!15491 = !DILocation(line: 5546, column: 9, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15486, file: !3, line: 5545, column: 31)
!15493 = !DILocation(line: 5547, column: 10, scope: !15492)
!15494 = !DILocation(line: 5548, column: 5, scope: !15492)
!15495 = !DILocation(line: 5550, column: 3, scope: !15487)
!15496 = !DILocation(line: 5550, column: 14, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15481, file: !3, line: 5550, column: 14)
!15498 = !DILocation(line: 5550, column: 19, scope: !15497)
!15499 = !DILocation(line: 5550, column: 14, scope: !15481)
!15500 = !DILocation(line: 5551, column: 8, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15502, file: !3, line: 5551, column: 8)
!15502 = distinct !DILexicalBlock(scope: !15497, file: !3, line: 5550, column: 37)
!15503 = !DILocation(line: 5551, column: 12, scope: !15501)
!15504 = !DILocation(line: 5551, column: 21, scope: !15501)
!15505 = !DILocation(line: 5551, column: 8, scope: !15502)
!15506 = !DILocation(line: 5557, column: 9, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15501, file: !3, line: 5551, column: 31)
!15508 = !DILocation(line: 5558, column: 10, scope: !15507)
!15509 = !DILocation(line: 5559, column: 5, scope: !15507)
!15510 = !DILocation(line: 5568, column: 6, scope: !15502)
!15511 = !DILocation(line: 5568, column: 10, scope: !15502)
!15512 = !DILocation(line: 5568, column: 15, scope: !15502)
!15513 = !DILocation(line: 5568, column: 22, scope: !15502)
!15514 = !DILocation(line: 5568, column: 4, scope: !15502)
!15515 = !DILocation(line: 5569, column: 3, scope: !15502)
!15516 = !DILocation(line: 5572, column: 3, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15518, file: !3, line: 5572, column: 3)
!15518 = distinct !DILexicalBlock(scope: !15519, file: !3, line: 5572, column: 3)
!15519 = distinct !DILexicalBlock(scope: !15520, file: !3, line: 5572, column: 3)
!15520 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 5572, column: 3)
!15521 = !DILocation(line: 5573, column: 7, scope: !15482)
!15522 = distinct !{!15522, !15473, !15523}
!15523 = !DILocation(line: 5574, column: 2, scope: !15457)
!15524 = !DILocation(line: 5576, column: 10, scope: !15457)
!15525 = !DILocation(line: 5576, column: 2, scope: !15457)
!15526 = distinct !DISubprogram(name: "ips_alloc_passthru_buffer", scope: !3, file: !3, line: 1523, type: !8130, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15527 = !DILocalVariable(name: "ha", arg: 1, scope: !15526, file: !3, line: 1523, type: !5540)
!15528 = !DILocation(line: 1523, column: 38, scope: !15526)
!15529 = !DILocalVariable(name: "length", arg: 2, scope: !15526, file: !3, line: 1523, type: !182)
!15530 = !DILocation(line: 1523, column: 46, scope: !15526)
!15531 = !DILocalVariable(name: "bigger_buf", scope: !15526, file: !3, line: 1525, type: !183)
!15532 = !DILocation(line: 1525, column: 8, scope: !15526)
!15533 = !DILocalVariable(name: "dma_busaddr", scope: !15526, file: !3, line: 1526, type: !3904)
!15534 = !DILocation(line: 1526, column: 13, scope: !15526)
!15535 = !DILocation(line: 1528, column: 6, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15526, file: !3, line: 1528, column: 6)
!15537 = !DILocation(line: 1528, column: 10, scope: !15536)
!15538 = !DILocation(line: 1528, column: 21, scope: !15536)
!15539 = !DILocation(line: 1528, column: 24, scope: !15536)
!15540 = !DILocation(line: 1528, column: 34, scope: !15536)
!15541 = !DILocation(line: 1528, column: 38, scope: !15536)
!15542 = !DILocation(line: 1528, column: 31, scope: !15536)
!15543 = !DILocation(line: 1528, column: 6, scope: !15526)
!15544 = !DILocation(line: 1529, column: 3, scope: !15536)
!15545 = !DILocation(line: 1531, column: 35, scope: !15526)
!15546 = !DILocation(line: 1531, column: 39, scope: !15526)
!15547 = !DILocation(line: 1531, column: 47, scope: !15526)
!15548 = !DILocation(line: 1531, column: 52, scope: !15526)
!15549 = !DILocation(line: 1531, column: 15, scope: !15526)
!15550 = !DILocation(line: 1531, column: 13, scope: !15526)
!15551 = !DILocation(line: 1533, column: 6, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15526, file: !3, line: 1533, column: 6)
!15553 = !DILocation(line: 1533, column: 6, scope: !15526)
!15554 = !DILocation(line: 1535, column: 22, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 1533, column: 18)
!15556 = !DILocation(line: 1535, column: 26, scope: !15555)
!15557 = !DILocation(line: 1535, column: 34, scope: !15555)
!15558 = !DILocation(line: 1535, column: 39, scope: !15555)
!15559 = !DILocation(line: 1535, column: 43, scope: !15555)
!15560 = !DILocation(line: 1536, column: 7, scope: !15555)
!15561 = !DILocation(line: 1536, column: 11, scope: !15555)
!15562 = !DILocation(line: 1536, column: 23, scope: !15555)
!15563 = !DILocation(line: 1536, column: 27, scope: !15555)
!15564 = !DILocation(line: 1535, column: 3, scope: !15555)
!15565 = !DILocation(line: 1538, column: 29, scope: !15555)
!15566 = !DILocation(line: 1538, column: 3, scope: !15555)
!15567 = !DILocation(line: 1538, column: 7, scope: !15555)
!15568 = !DILocation(line: 1538, column: 18, scope: !15555)
!15569 = !DILocation(line: 1539, column: 19, scope: !15555)
!15570 = !DILocation(line: 1539, column: 3, scope: !15555)
!15571 = !DILocation(line: 1539, column: 7, scope: !15555)
!15572 = !DILocation(line: 1539, column: 17, scope: !15555)
!15573 = !DILocation(line: 1540, column: 23, scope: !15555)
!15574 = !DILocation(line: 1540, column: 3, scope: !15555)
!15575 = !DILocation(line: 1540, column: 7, scope: !15555)
!15576 = !DILocation(line: 1540, column: 21, scope: !15555)
!15577 = !DILocation(line: 1541, column: 2, scope: !15555)
!15578 = !DILocation(line: 1542, column: 3, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 1541, column: 9)
!15580 = !DILocation(line: 1544, column: 2, scope: !15526)
!15581 = !DILocation(line: 1545, column: 1, scope: !15526)
!15582 = distinct !DISubprogram(name: "ips_flash_copperhead", scope: !3, file: !3, line: 1651, type: !15583, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15583 = !DISubroutineType(types: !15584)
!15584 = !{!182, !5540, !6113, !4848}
!15585 = !DILocalVariable(name: "ha", arg: 1, scope: !15582, file: !3, line: 1651, type: !5540)
!15586 = !DILocation(line: 1651, column: 33, scope: !15582)
!15587 = !DILocalVariable(name: "pt", arg: 2, scope: !15582, file: !3, line: 1651, type: !6113)
!15588 = !DILocation(line: 1651, column: 54, scope: !15582)
!15589 = !DILocalVariable(name: "scb", arg: 3, scope: !15582, file: !3, line: 1651, type: !4848)
!15590 = !DILocation(line: 1651, column: 70, scope: !15582)
!15591 = !DILocalVariable(name: "datasize", scope: !15582, file: !3, line: 1653, type: !182)
!15592 = !DILocation(line: 1653, column: 6, scope: !15582)
!15593 = !DILocation(line: 1657, column: 6, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 1657, column: 6)
!15595 = !DILocation(line: 1657, column: 26, scope: !15594)
!15596 = !DILocation(line: 1657, column: 29, scope: !15594)
!15597 = !DILocation(line: 1657, column: 33, scope: !15594)
!15598 = !DILocation(line: 1657, column: 40, scope: !15594)
!15599 = !DILocation(line: 1657, column: 44, scope: !15594)
!15600 = !DILocation(line: 1657, column: 52, scope: !15594)
!15601 = !DILocation(line: 1657, column: 57, scope: !15594)
!15602 = !DILocation(line: 1657, column: 6, scope: !15582)
!15603 = !DILocation(line: 1658, column: 18, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !3, line: 1658, column: 7)
!15605 = distinct !DILexicalBlock(scope: !15594, file: !3, line: 1657, column: 74)
!15606 = !DILocation(line: 1658, column: 22, scope: !15604)
!15607 = !DILocation(line: 1658, column: 26, scope: !15604)
!15608 = !DILocation(line: 1658, column: 7, scope: !15604)
!15609 = !DILocation(line: 1658, column: 7, scope: !15605)
!15610 = !DILocation(line: 1659, column: 4, scope: !15604)
!15611 = !DILocation(line: 1661, column: 4, scope: !15604)
!15612 = !DILocation(line: 1663, column: 2, scope: !15582)
!15613 = !DILocation(line: 1663, column: 6, scope: !15582)
!15614 = !DILocation(line: 1663, column: 18, scope: !15582)
!15615 = !DILocation(line: 1664, column: 2, scope: !15582)
!15616 = !DILocation(line: 1664, column: 6, scope: !15582)
!15617 = !DILocation(line: 1664, column: 21, scope: !15582)
!15618 = !DILocation(line: 1665, column: 2, scope: !15582)
!15619 = !DILocation(line: 1665, column: 7, scope: !15582)
!15620 = !DILocation(line: 1665, column: 17, scope: !15582)
!15621 = !DILocation(line: 1665, column: 24, scope: !15582)
!15622 = !DILocation(line: 1668, column: 6, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 1668, column: 6)
!15624 = !DILocation(line: 1668, column: 10, scope: !15623)
!15625 = !DILocation(line: 1668, column: 17, scope: !15623)
!15626 = !DILocation(line: 1668, column: 21, scope: !15623)
!15627 = !DILocation(line: 1668, column: 29, scope: !15623)
!15628 = !DILocation(line: 1668, column: 34, scope: !15623)
!15629 = !DILocation(line: 1668, column: 52, scope: !15623)
!15630 = !DILocation(line: 1669, column: 6, scope: !15623)
!15631 = !DILocation(line: 1669, column: 10, scope: !15623)
!15632 = !DILocation(line: 1669, column: 17, scope: !15623)
!15633 = !DILocation(line: 1669, column: 21, scope: !15623)
!15634 = !DILocation(line: 1669, column: 29, scope: !15623)
!15635 = !DILocation(line: 1669, column: 39, scope: !15623)
!15636 = !DILocation(line: 1668, column: 6, scope: !15582)
!15637 = !DILocation(line: 1670, column: 3, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15623, file: !3, line: 1669, column: 58)
!15639 = !DILocation(line: 1670, column: 7, scope: !15638)
!15640 = !DILocation(line: 1670, column: 19, scope: !15638)
!15641 = !DILocation(line: 1671, column: 25, scope: !15638)
!15642 = !DILocation(line: 1671, column: 29, scope: !15638)
!15643 = !DILocation(line: 1671, column: 33, scope: !15638)
!15644 = !DILocation(line: 1671, column: 10, scope: !15638)
!15645 = !DILocation(line: 1671, column: 3, scope: !15638)
!15646 = !DILocation(line: 1672, column: 13, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15623, file: !3, line: 1672, column: 13)
!15648 = !DILocation(line: 1672, column: 17, scope: !15647)
!15649 = !DILocation(line: 1672, column: 24, scope: !15647)
!15650 = !DILocation(line: 1672, column: 28, scope: !15647)
!15651 = !DILocation(line: 1672, column: 36, scope: !15647)
!15652 = !DILocation(line: 1672, column: 47, scope: !15647)
!15653 = !DILocation(line: 1672, column: 13, scope: !15623)
!15654 = !DILocation(line: 1673, column: 7, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !3, line: 1673, column: 7)
!15656 = distinct !DILexicalBlock(scope: !15647, file: !3, line: 1672, column: 53)
!15657 = !DILocation(line: 1673, column: 21, scope: !15655)
!15658 = !DILocation(line: 1673, column: 25, scope: !15655)
!15659 = !DILocation(line: 1673, column: 7, scope: !15656)
!15660 = !DILocation(line: 1674, column: 21, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15655, file: !3, line: 1673, column: 66)
!15662 = !DILocation(line: 1674, column: 4, scope: !15661)
!15663 = !DILocation(line: 1674, column: 8, scope: !15661)
!15664 = !DILocation(line: 1674, column: 19, scope: !15661)
!15665 = !DILocation(line: 1675, column: 24, scope: !15661)
!15666 = !DILocation(line: 1675, column: 4, scope: !15661)
!15667 = !DILocation(line: 1675, column: 8, scope: !15661)
!15668 = !DILocation(line: 1675, column: 22, scope: !15661)
!15669 = !DILocation(line: 1676, column: 4, scope: !15661)
!15670 = !DILocation(line: 1676, column: 8, scope: !15661)
!15671 = !DILocation(line: 1676, column: 18, scope: !15661)
!15672 = !DILocation(line: 1677, column: 4, scope: !15661)
!15673 = !DILocation(line: 1677, column: 8, scope: !15661)
!15674 = !DILocation(line: 1677, column: 23, scope: !15661)
!15675 = !DILocation(line: 1678, column: 3, scope: !15661)
!15676 = !DILocation(line: 1678, column: 15, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15655, file: !3, line: 1678, column: 14)
!15678 = !DILocation(line: 1678, column: 19, scope: !15677)
!15679 = !DILocation(line: 1678, column: 14, scope: !15655)
!15680 = !DILocation(line: 1679, column: 15, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15677, file: !3, line: 1678, column: 31)
!15682 = !DILocation(line: 1679, column: 19, scope: !15681)
!15683 = !DILocation(line: 1679, column: 26, scope: !15681)
!15684 = !DILocation(line: 1679, column: 30, scope: !15681)
!15685 = !DILocation(line: 1679, column: 38, scope: !15681)
!15686 = !DILocation(line: 1680, column: 8, scope: !15681)
!15687 = !DILocation(line: 1680, column: 12, scope: !15681)
!15688 = !DILocation(line: 1680, column: 19, scope: !15681)
!15689 = !DILocation(line: 1680, column: 23, scope: !15681)
!15690 = !DILocation(line: 1680, column: 31, scope: !15681)
!15691 = !DILocation(line: 1679, column: 52, scope: !15681)
!15692 = !DILocation(line: 1679, column: 13, scope: !15681)
!15693 = !DILocation(line: 1681, column: 41, scope: !15681)
!15694 = !DILocation(line: 1681, column: 45, scope: !15681)
!15695 = !DILocation(line: 1681, column: 53, scope: !15681)
!15696 = !DILocation(line: 1682, column: 6, scope: !15681)
!15697 = !DILocation(line: 1682, column: 17, scope: !15681)
!15698 = !DILocation(line: 1682, column: 21, scope: !15681)
!15699 = !DILocation(line: 1681, column: 21, scope: !15681)
!15700 = !DILocation(line: 1681, column: 4, scope: !15681)
!15701 = !DILocation(line: 1681, column: 8, scope: !15681)
!15702 = !DILocation(line: 1681, column: 19, scope: !15681)
!15703 = !DILocation(line: 1683, column: 9, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15681, file: !3, line: 1683, column: 8)
!15705 = !DILocation(line: 1683, column: 13, scope: !15704)
!15706 = !DILocation(line: 1683, column: 8, scope: !15681)
!15707 = !DILocation(line: 1684, column: 5, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15704, file: !3, line: 1683, column: 24)
!15709 = !DILocation(line: 1685, column: 5, scope: !15708)
!15710 = !DILocation(line: 1687, column: 4, scope: !15681)
!15711 = !DILocation(line: 1687, column: 8, scope: !15681)
!15712 = !DILocation(line: 1687, column: 23, scope: !15681)
!15713 = !DILocation(line: 1688, column: 20, scope: !15681)
!15714 = !DILocation(line: 1688, column: 4, scope: !15681)
!15715 = !DILocation(line: 1688, column: 8, scope: !15681)
!15716 = !DILocation(line: 1688, column: 18, scope: !15681)
!15717 = !DILocation(line: 1689, column: 3, scope: !15681)
!15718 = !DILocation(line: 1690, column: 4, scope: !15677)
!15719 = !DILocation(line: 1691, column: 2, scope: !15656)
!15720 = !DILocation(line: 1692, column: 7, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15722, file: !3, line: 1692, column: 7)
!15722 = distinct !DILexicalBlock(scope: !15647, file: !3, line: 1691, column: 9)
!15723 = !DILocation(line: 1692, column: 11, scope: !15721)
!15724 = !DILocation(line: 1692, column: 18, scope: !15721)
!15725 = !DILocation(line: 1692, column: 22, scope: !15721)
!15726 = !DILocation(line: 1692, column: 30, scope: !15721)
!15727 = !DILocation(line: 1692, column: 38, scope: !15721)
!15728 = !DILocation(line: 1692, column: 42, scope: !15721)
!15729 = !DILocation(line: 1692, column: 36, scope: !15721)
!15730 = !DILocation(line: 1693, column: 7, scope: !15721)
!15731 = !DILocation(line: 1693, column: 11, scope: !15721)
!15732 = !DILocation(line: 1692, column: 57, scope: !15721)
!15733 = !DILocation(line: 1692, column: 7, scope: !15722)
!15734 = !DILocation(line: 1694, column: 30, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15721, file: !3, line: 1693, column: 22)
!15736 = !DILocation(line: 1694, column: 4, scope: !15735)
!15737 = !DILocation(line: 1695, column: 4, scope: !15735)
!15738 = !DILocation(line: 1697, column: 4, scope: !15735)
!15739 = !DILocation(line: 1700, column: 7, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 1700, column: 6)
!15741 = !DILocation(line: 1700, column: 11, scope: !15740)
!15742 = !DILocation(line: 1700, column: 6, scope: !15582)
!15743 = !DILocation(line: 1701, column: 3, scope: !15740)
!15744 = !DILocation(line: 1702, column: 2, scope: !15582)
!15745 = !DILocation(line: 1702, column: 6, scope: !15582)
!15746 = !DILocation(line: 1702, column: 18, scope: !15582)
!15747 = !DILocation(line: 1703, column: 10, scope: !15582)
!15748 = !DILocation(line: 1703, column: 14, scope: !15582)
!15749 = !DILocation(line: 1703, column: 25, scope: !15582)
!15750 = !DILocation(line: 1703, column: 29, scope: !15582)
!15751 = !DILocation(line: 1703, column: 46, scope: !15582)
!15752 = !DILocation(line: 1703, column: 49, scope: !15582)
!15753 = !DILocation(line: 1703, column: 2, scope: !15582)
!15754 = !DILocation(line: 1704, column: 9, scope: !15582)
!15755 = !DILocation(line: 1704, column: 13, scope: !15582)
!15756 = !DILocation(line: 1704, column: 20, scope: !15582)
!15757 = !DILocation(line: 1704, column: 24, scope: !15582)
!15758 = !DILocation(line: 1704, column: 32, scope: !15582)
!15759 = !DILocation(line: 1705, column: 24, scope: !15582)
!15760 = !DILocation(line: 1705, column: 28, scope: !15582)
!15761 = !DILocation(line: 1705, column: 35, scope: !15582)
!15762 = !DILocation(line: 1705, column: 39, scope: !15582)
!15763 = !DILocation(line: 1705, column: 47, scope: !15582)
!15764 = !DILocation(line: 1705, column: 2, scope: !15582)
!15765 = !DILocation(line: 1705, column: 6, scope: !15582)
!15766 = !DILocation(line: 1705, column: 21, scope: !15582)
!15767 = !DILocation(line: 1706, column: 6, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 1706, column: 6)
!15769 = !DILocation(line: 1706, column: 10, scope: !15768)
!15770 = !DILocation(line: 1706, column: 17, scope: !15768)
!15771 = !DILocation(line: 1706, column: 21, scope: !15768)
!15772 = !DILocation(line: 1706, column: 29, scope: !15768)
!15773 = !DILocation(line: 1707, column: 6, scope: !15768)
!15774 = !DILocation(line: 1707, column: 10, scope: !15768)
!15775 = !DILocation(line: 1707, column: 17, scope: !15768)
!15776 = !DILocation(line: 1707, column: 21, scope: !15768)
!15777 = !DILocation(line: 1707, column: 29, scope: !15768)
!15778 = !DILocation(line: 1707, column: 43, scope: !15768)
!15779 = !DILocation(line: 1706, column: 40, scope: !15768)
!15780 = !DILocation(line: 1706, column: 6, scope: !15582)
!15781 = !DILocation(line: 1708, column: 7, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15783, file: !3, line: 1708, column: 7)
!15783 = distinct !DILexicalBlock(scope: !15768, file: !3, line: 1707, column: 48)
!15784 = !DILocation(line: 1708, column: 11, scope: !15782)
!15785 = !DILocation(line: 1708, column: 18, scope: !15782)
!15786 = !DILocation(line: 1708, column: 22, scope: !15782)
!15787 = !DILocation(line: 1708, column: 30, scope: !15782)
!15788 = !DILocation(line: 1708, column: 35, scope: !15782)
!15789 = !DILocation(line: 1708, column: 7, scope: !15783)
!15790 = !DILocation(line: 1709, column: 26, scope: !15782)
!15791 = !DILocation(line: 1709, column: 30, scope: !15782)
!15792 = !DILocation(line: 1709, column: 34, scope: !15782)
!15793 = !DILocation(line: 1709, column: 11, scope: !15782)
!15794 = !DILocation(line: 1709, column: 4, scope: !15782)
!15795 = !DILocation(line: 1710, column: 12, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15782, file: !3, line: 1710, column: 12)
!15797 = !DILocation(line: 1710, column: 16, scope: !15796)
!15798 = !DILocation(line: 1710, column: 23, scope: !15796)
!15799 = !DILocation(line: 1710, column: 27, scope: !15796)
!15800 = !DILocation(line: 1710, column: 35, scope: !15796)
!15801 = !DILocation(line: 1710, column: 40, scope: !15796)
!15802 = !DILocation(line: 1710, column: 12, scope: !15782)
!15803 = !DILocation(line: 1711, column: 30, scope: !15796)
!15804 = !DILocation(line: 1711, column: 34, scope: !15796)
!15805 = !DILocation(line: 1711, column: 38, scope: !15796)
!15806 = !DILocation(line: 1711, column: 11, scope: !15796)
!15807 = !DILocation(line: 1711, column: 4, scope: !15796)
!15808 = !DILocation(line: 1712, column: 2, scope: !15783)
!15809 = !DILocation(line: 1713, column: 2, scope: !15582)
!15810 = !DILocation(line: 1714, column: 1, scope: !15582)
!15811 = distinct !DISubprogram(name: "ips_usrcmd", scope: !3, file: !3, line: 1897, type: !15583, scopeLine: 1898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!15812 = !DILocalVariable(name: "ha", arg: 1, scope: !15811, file: !3, line: 1897, type: !5540)
!15813 = !DILocation(line: 1897, column: 23, scope: !15811)
!15814 = !DILocalVariable(name: "pt", arg: 2, scope: !15811, file: !3, line: 1897, type: !6113)
!15815 = !DILocation(line: 1897, column: 44, scope: !15811)
!15816 = !DILocalVariable(name: "scb", arg: 3, scope: !15811, file: !3, line: 1897, type: !4848)
!15817 = !DILocation(line: 1897, column: 60, scope: !15811)
!15818 = !DILocalVariable(name: "sg_list", scope: !15811, file: !3, line: 1899, type: !5080)
!15819 = !DILocation(line: 1899, column: 14, scope: !15811)
!15820 = !DILocalVariable(name: "cmd_busaddr", scope: !15811, file: !3, line: 1900, type: !186)
!15821 = !DILocation(line: 1900, column: 11, scope: !15811)
!15822 = !DILocation(line: 1904, column: 8, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 1904, column: 6)
!15824 = !DILocation(line: 1904, column: 13, scope: !15823)
!15825 = !DILocation(line: 1904, column: 18, scope: !15823)
!15826 = !DILocation(line: 1904, column: 22, scope: !15823)
!15827 = !DILocation(line: 1904, column: 27, scope: !15823)
!15828 = !DILocation(line: 1904, column: 6, scope: !15811)
!15829 = !DILocation(line: 1905, column: 3, scope: !15823)
!15830 = !DILocation(line: 1908, column: 17, scope: !15811)
!15831 = !DILocation(line: 1908, column: 22, scope: !15811)
!15832 = !DILocation(line: 1908, column: 30, scope: !15811)
!15833 = !DILocation(line: 1908, column: 10, scope: !15811)
!15834 = !DILocation(line: 1908, column: 15, scope: !15811)
!15835 = !DILocation(line: 1909, column: 16, scope: !15811)
!15836 = !DILocation(line: 1909, column: 21, scope: !15811)
!15837 = !DILocation(line: 1909, column: 14, scope: !15811)
!15838 = !DILocation(line: 1911, column: 10, scope: !15811)
!15839 = !DILocation(line: 1911, column: 15, scope: !15811)
!15840 = !DILocation(line: 1911, column: 2, scope: !15811)
!15841 = !DILocation(line: 1911, column: 21, scope: !15811)
!15842 = !DILocation(line: 1911, column: 25, scope: !15811)
!15843 = !DILocation(line: 1911, column: 32, scope: !15811)
!15844 = !DILocation(line: 1912, column: 10, scope: !15811)
!15845 = !DILocation(line: 1912, column: 15, scope: !15811)
!15846 = !DILocation(line: 1912, column: 2, scope: !15811)
!15847 = !DILocation(line: 1912, column: 22, scope: !15811)
!15848 = !DILocation(line: 1912, column: 26, scope: !15811)
!15849 = !DILocation(line: 1912, column: 33, scope: !15811)
!15850 = !DILocation(line: 1915, column: 30, scope: !15811)
!15851 = !DILocation(line: 1915, column: 2, scope: !15811)
!15852 = !DILocation(line: 1915, column: 7, scope: !15811)
!15853 = !DILocation(line: 1915, column: 15, scope: !15811)
!15854 = !DILocation(line: 1915, column: 20, scope: !15811)
!15855 = !DILocation(line: 1916, column: 21, scope: !15811)
!15856 = !DILocation(line: 1916, column: 2, scope: !15811)
!15857 = !DILocation(line: 1916, column: 7, scope: !15811)
!15858 = !DILocation(line: 1916, column: 19, scope: !15811)
!15859 = !DILocation(line: 1917, column: 13, scope: !15811)
!15860 = !DILocation(line: 1917, column: 18, scope: !15811)
!15861 = !DILocation(line: 1917, column: 28, scope: !15811)
!15862 = !DILocation(line: 1917, column: 36, scope: !15811)
!15863 = !DILocation(line: 1917, column: 2, scope: !15811)
!15864 = !DILocation(line: 1917, column: 7, scope: !15811)
!15865 = !DILocation(line: 1917, column: 11, scope: !15811)
!15866 = !DILocation(line: 1918, column: 19, scope: !15811)
!15867 = !DILocation(line: 1918, column: 24, scope: !15811)
!15868 = !DILocation(line: 1918, column: 34, scope: !15811)
!15869 = !DILocation(line: 1918, column: 42, scope: !15811)
!15870 = !DILocation(line: 1918, column: 2, scope: !15811)
!15871 = !DILocation(line: 1918, column: 7, scope: !15811)
!15872 = !DILocation(line: 1918, column: 17, scope: !15811)
!15873 = !DILocation(line: 1919, column: 13, scope: !15811)
!15874 = !DILocation(line: 1919, column: 18, scope: !15811)
!15875 = !DILocation(line: 1919, column: 28, scope: !15811)
!15876 = !DILocation(line: 1919, column: 36, scope: !15811)
!15877 = !DILocation(line: 1919, column: 2, scope: !15811)
!15878 = !DILocation(line: 1919, column: 7, scope: !15811)
!15879 = !DILocation(line: 1919, column: 11, scope: !15811)
!15880 = !DILocation(line: 1920, column: 2, scope: !15811)
!15881 = !DILocation(line: 1920, column: 7, scope: !15811)
!15882 = !DILocation(line: 1920, column: 14, scope: !15811)
!15883 = !DILocation(line: 1921, column: 2, scope: !15811)
!15884 = !DILocation(line: 1921, column: 7, scope: !15811)
!15885 = !DILocation(line: 1921, column: 16, scope: !15811)
!15886 = !DILocation(line: 1922, column: 2, scope: !15811)
!15887 = !DILocation(line: 1922, column: 7, scope: !15811)
!15888 = !DILocation(line: 1922, column: 13, scope: !15811)
!15889 = !DILocation(line: 1923, column: 2, scope: !15811)
!15890 = !DILocation(line: 1923, column: 7, scope: !15811)
!15891 = !DILocation(line: 1923, column: 15, scope: !15811)
!15892 = !DILocation(line: 1924, column: 2, scope: !15811)
!15893 = !DILocation(line: 1924, column: 7, scope: !15811)
!15894 = !DILocation(line: 1924, column: 16, scope: !15811)
!15895 = !DILocation(line: 1925, column: 17, scope: !15811)
!15896 = !DILocation(line: 1925, column: 2, scope: !15811)
!15897 = !DILocation(line: 1925, column: 7, scope: !15811)
!15898 = !DILocation(line: 1925, column: 15, scope: !15811)
!15899 = !DILocation(line: 1926, column: 33, scope: !15811)
!15900 = !DILocation(line: 1926, column: 2, scope: !15811)
!15901 = !DILocation(line: 1926, column: 7, scope: !15811)
!15902 = !DILocation(line: 1926, column: 11, scope: !15811)
!15903 = !DILocation(line: 1926, column: 20, scope: !15811)
!15904 = !DILocation(line: 1926, column: 31, scope: !15811)
!15905 = !DILocation(line: 1929, column: 7, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 1929, column: 6)
!15907 = !DILocation(line: 1929, column: 12, scope: !15906)
!15908 = !DILocation(line: 1929, column: 16, scope: !15906)
!15909 = !DILocation(line: 1929, column: 25, scope: !15906)
!15910 = !DILocation(line: 1929, column: 33, scope: !15906)
!15911 = !DILocation(line: 1929, column: 53, scope: !15906)
!15912 = !DILocation(line: 1930, column: 7, scope: !15906)
!15913 = !DILocation(line: 1930, column: 12, scope: !15906)
!15914 = !DILocation(line: 1930, column: 16, scope: !15906)
!15915 = !DILocation(line: 1930, column: 25, scope: !15906)
!15916 = !DILocation(line: 1930, column: 33, scope: !15906)
!15917 = !DILocation(line: 1930, column: 54, scope: !15906)
!15918 = !DILocation(line: 1931, column: 7, scope: !15906)
!15919 = !DILocation(line: 1931, column: 12, scope: !15906)
!15920 = !DILocation(line: 1931, column: 16, scope: !15906)
!15921 = !DILocation(line: 1931, column: 25, scope: !15906)
!15922 = !DILocation(line: 1931, column: 33, scope: !15906)
!15923 = !DILocation(line: 1929, column: 6, scope: !15811)
!15924 = !DILocation(line: 1932, column: 3, scope: !15906)
!15925 = !DILocation(line: 1934, column: 6, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 1934, column: 6)
!15927 = !DILocation(line: 1934, column: 10, scope: !15926)
!15928 = !DILocation(line: 1934, column: 6, scope: !15811)
!15929 = !DILocation(line: 1935, column: 19, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15926, file: !3, line: 1934, column: 20)
!15931 = !DILocation(line: 1935, column: 23, scope: !15930)
!15932 = !DILocation(line: 1935, column: 3, scope: !15930)
!15933 = !DILocation(line: 1935, column: 8, scope: !15930)
!15934 = !DILocation(line: 1935, column: 17, scope: !15930)
!15935 = !DILocation(line: 1936, column: 23, scope: !15930)
!15936 = !DILocation(line: 1936, column: 27, scope: !15930)
!15937 = !DILocation(line: 1936, column: 41, scope: !15930)
!15938 = !DILocation(line: 1936, column: 3, scope: !15930)
!15939 = !DILocation(line: 1936, column: 8, scope: !15930)
!15940 = !DILocation(line: 1936, column: 21, scope: !15930)
!15941 = !DILocation(line: 1937, column: 2, scope: !15930)
!15942 = !DILocation(line: 1938, column: 3, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15926, file: !3, line: 1937, column: 9)
!15944 = !DILocation(line: 1938, column: 8, scope: !15943)
!15945 = !DILocation(line: 1938, column: 21, scope: !15943)
!15946 = !DILocation(line: 1941, column: 6, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 1941, column: 6)
!15948 = !DILocation(line: 1941, column: 11, scope: !15947)
!15949 = !DILocation(line: 1941, column: 15, scope: !15947)
!15950 = !DILocation(line: 1941, column: 20, scope: !15947)
!15951 = !DILocation(line: 1941, column: 28, scope: !15947)
!15952 = !DILocation(line: 1941, column: 6, scope: !15811)
!15953 = !DILocation(line: 1942, column: 32, scope: !15947)
!15954 = !DILocation(line: 1942, column: 3, scope: !15947)
!15955 = !DILocation(line: 1942, column: 8, scope: !15947)
!15956 = !DILocation(line: 1942, column: 12, scope: !15947)
!15957 = !DILocation(line: 1942, column: 17, scope: !15947)
!15958 = !DILocation(line: 1942, column: 30, scope: !15947)
!15959 = !DILocation(line: 1947, column: 6, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 1947, column: 6)
!15961 = !DILocation(line: 1947, column: 10, scope: !15960)
!15962 = !DILocation(line: 1947, column: 6, scope: !15811)
!15963 = !DILocation(line: 1948, column: 7, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !3, line: 1948, column: 7)
!15965 = distinct !DILexicalBlock(scope: !15960, file: !3, line: 1947, column: 20)
!15966 = !DILocation(line: 1948, column: 12, scope: !15964)
!15967 = !DILocation(line: 1948, column: 16, scope: !15964)
!15968 = !DILocation(line: 1948, column: 21, scope: !15964)
!15969 = !DILocation(line: 1948, column: 29, scope: !15964)
!15970 = !DILocation(line: 1948, column: 7, scope: !15965)
!15971 = !DILocation(line: 1950, column: 8, scope: !15964)
!15972 = !DILocation(line: 1949, column: 4, scope: !15964)
!15973 = !DILocation(line: 1949, column: 9, scope: !15964)
!15974 = !DILocation(line: 1949, column: 14, scope: !15964)
!15975 = !DILocation(line: 1949, column: 29, scope: !15964)
!15976 = !DILocation(line: 1953, column: 8, scope: !15964)
!15977 = !DILocation(line: 1952, column: 4, scope: !15964)
!15978 = !DILocation(line: 1952, column: 9, scope: !15964)
!15979 = !DILocation(line: 1952, column: 13, scope: !15964)
!15980 = !DILocation(line: 1952, column: 22, scope: !15964)
!15981 = !DILocation(line: 1952, column: 30, scope: !15964)
!15982 = !DILocation(line: 1954, column: 2, scope: !15965)
!15983 = !DILocation(line: 1957, column: 6, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 1957, column: 6)
!15985 = !DILocation(line: 1957, column: 10, scope: !15984)
!15986 = !DILocation(line: 1957, column: 6, scope: !15811)
!15987 = !DILocation(line: 1958, column: 18, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15984, file: !3, line: 1957, column: 19)
!15989 = !DILocation(line: 1958, column: 22, scope: !15988)
!15990 = !DILocation(line: 1958, column: 3, scope: !15988)
!15991 = !DILocation(line: 1958, column: 8, scope: !15988)
!15992 = !DILocation(line: 1958, column: 16, scope: !15988)
!15993 = !DILocation(line: 1960, column: 7, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15988, file: !3, line: 1960, column: 7)
!15995 = !DILocation(line: 1960, column: 11, scope: !15994)
!15996 = !DILocation(line: 1960, column: 19, scope: !15994)
!15997 = !DILocation(line: 1960, column: 7, scope: !15988)
!15998 = !DILocation(line: 1961, column: 4, scope: !15994)
!15999 = !DILocation(line: 1961, column: 9, scope: !15994)
!16000 = !DILocation(line: 1961, column: 14, scope: !15994)
!16001 = !DILocation(line: 1961, column: 28, scope: !15994)
!16002 = !DILocation(line: 1962, column: 12, scope: !16003)
!16003 = distinct !DILexicalBlock(scope: !15994, file: !3, line: 1962, column: 12)
!16004 = !DILocation(line: 1962, column: 16, scope: !16003)
!16005 = !DILocation(line: 1962, column: 24, scope: !16003)
!16006 = !DILocation(line: 1962, column: 12, scope: !15994)
!16007 = !DILocation(line: 1963, column: 4, scope: !16003)
!16008 = !DILocation(line: 1963, column: 9, scope: !16003)
!16009 = !DILocation(line: 1963, column: 14, scope: !16003)
!16010 = !DILocation(line: 1963, column: 28, scope: !16003)
!16011 = !DILocation(line: 1965, column: 4, scope: !16003)
!16012 = !DILocation(line: 1965, column: 9, scope: !16003)
!16013 = !DILocation(line: 1965, column: 14, scope: !16003)
!16014 = !DILocation(line: 1965, column: 28, scope: !16003)
!16015 = !DILocation(line: 1966, column: 2, scope: !15988)
!16016 = !DILocation(line: 1969, column: 2, scope: !15811)
!16017 = !DILocation(line: 1969, column: 7, scope: !15811)
!16018 = !DILocation(line: 1969, column: 17, scope: !15811)
!16019 = !DILocation(line: 1969, column: 24, scope: !15811)
!16020 = !DILocation(line: 1972, column: 2, scope: !15811)
!16021 = !DILocation(line: 1973, column: 1, scope: !15811)
!16022 = distinct !DISubprogram(name: "ips_flash_bios", scope: !3, file: !3, line: 1722, type: !15583, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16023 = !DILocalVariable(name: "ha", arg: 1, scope: !16022, file: !3, line: 1722, type: !5540)
!16024 = !DILocation(line: 1722, column: 27, scope: !16022)
!16025 = !DILocalVariable(name: "pt", arg: 2, scope: !16022, file: !3, line: 1722, type: !6113)
!16026 = !DILocation(line: 1722, column: 48, scope: !16022)
!16027 = !DILocalVariable(name: "scb", arg: 3, scope: !16022, file: !3, line: 1722, type: !4848)
!16028 = !DILocation(line: 1722, column: 64, scope: !16022)
!16029 = !DILocation(line: 1725, column: 6, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 1725, column: 6)
!16031 = !DILocation(line: 1725, column: 10, scope: !16030)
!16032 = !DILocation(line: 1725, column: 17, scope: !16030)
!16033 = !DILocation(line: 1725, column: 21, scope: !16030)
!16034 = !DILocation(line: 1725, column: 29, scope: !16030)
!16035 = !DILocation(line: 1725, column: 34, scope: !16030)
!16036 = !DILocation(line: 1725, column: 52, scope: !16030)
!16037 = !DILocation(line: 1726, column: 6, scope: !16030)
!16038 = !DILocation(line: 1726, column: 10, scope: !16030)
!16039 = !DILocation(line: 1726, column: 17, scope: !16030)
!16040 = !DILocation(line: 1726, column: 21, scope: !16030)
!16041 = !DILocation(line: 1726, column: 29, scope: !16030)
!16042 = !DILocation(line: 1726, column: 39, scope: !16030)
!16043 = !DILocation(line: 1725, column: 6, scope: !16022)
!16044 = !DILocation(line: 1727, column: 9, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 1727, column: 7)
!16046 = distinct !DILexicalBlock(scope: !16030, file: !3, line: 1726, column: 58)
!16047 = !DILocation(line: 1727, column: 13, scope: !16045)
!16048 = !DILocation(line: 1727, column: 18, scope: !16045)
!16049 = !DILocation(line: 1727, column: 31, scope: !16045)
!16050 = !DILocation(line: 1727, column: 36, scope: !16045)
!16051 = !DILocation(line: 1727, column: 40, scope: !16045)
!16052 = !DILocation(line: 1727, column: 45, scope: !16045)
!16053 = !DILocation(line: 1727, column: 56, scope: !16045)
!16054 = !DILocation(line: 1728, column: 9, scope: !16045)
!16055 = !DILocation(line: 1728, column: 13, scope: !16045)
!16056 = !DILocation(line: 1728, column: 18, scope: !16045)
!16057 = !DILocation(line: 1727, column: 7, scope: !16046)
!16058 = !DILocation(line: 1729, column: 4, scope: !16045)
!16059 = !DILocation(line: 1730, column: 9, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 1730, column: 7)
!16061 = !DILocation(line: 1730, column: 13, scope: !16060)
!16062 = !DILocation(line: 1730, column: 18, scope: !16060)
!16063 = !DILocation(line: 1730, column: 30, scope: !16060)
!16064 = !DILocation(line: 1730, column: 7, scope: !16060)
!16065 = !DILocation(line: 1730, column: 7, scope: !16046)
!16066 = !DILocation(line: 1734, column: 4, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16060, file: !3, line: 1730, column: 35)
!16068 = !DILocation(line: 1736, column: 13, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16060, file: !3, line: 1736, column: 11)
!16070 = !DILocation(line: 1736, column: 17, scope: !16069)
!16071 = !DILocation(line: 1736, column: 22, scope: !16069)
!16072 = !DILocation(line: 1736, column: 36, scope: !16069)
!16073 = !DILocation(line: 1737, column: 8, scope: !16069)
!16074 = !DILocation(line: 1737, column: 12, scope: !16069)
!16075 = !DILocation(line: 1737, column: 23, scope: !16069)
!16076 = !DILocation(line: 1739, column: 8, scope: !16069)
!16077 = !DILocation(line: 1739, column: 12, scope: !16069)
!16078 = !DILocation(line: 1739, column: 27, scope: !16069)
!16079 = !DILocation(line: 1736, column: 11, scope: !16069)
!16080 = !DILocation(line: 1736, column: 11, scope: !16060)
!16081 = !DILocation(line: 1744, column: 4, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16069, file: !3, line: 1740, column: 29)
!16083 = !DILocation(line: 1746, column: 13, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16069, file: !3, line: 1746, column: 11)
!16085 = !DILocation(line: 1746, column: 17, scope: !16084)
!16086 = !DILocation(line: 1746, column: 22, scope: !16084)
!16087 = !DILocation(line: 1746, column: 35, scope: !16084)
!16088 = !DILocation(line: 1747, column: 7, scope: !16084)
!16089 = !DILocation(line: 1747, column: 11, scope: !16084)
!16090 = !DILocation(line: 1747, column: 22, scope: !16084)
!16091 = !DILocation(line: 1749, column: 7, scope: !16084)
!16092 = !DILocation(line: 1749, column: 11, scope: !16084)
!16093 = !DILocation(line: 1749, column: 26, scope: !16084)
!16094 = !DILocation(line: 1746, column: 11, scope: !16084)
!16095 = !DILocation(line: 1746, column: 11, scope: !16069)
!16096 = !DILocation(line: 1754, column: 4, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16084, file: !3, line: 1750, column: 28)
!16098 = !DILocation(line: 1756, column: 29, scope: !16046)
!16099 = !DILocation(line: 1756, column: 3, scope: !16046)
!16100 = !DILocation(line: 1757, column: 3, scope: !16046)
!16101 = !DILocation(line: 1758, column: 13, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16030, file: !3, line: 1758, column: 13)
!16103 = !DILocation(line: 1758, column: 17, scope: !16102)
!16104 = !DILocation(line: 1758, column: 24, scope: !16102)
!16105 = !DILocation(line: 1758, column: 28, scope: !16102)
!16106 = !DILocation(line: 1758, column: 36, scope: !16102)
!16107 = !DILocation(line: 1758, column: 41, scope: !16102)
!16108 = !DILocation(line: 1758, column: 59, scope: !16102)
!16109 = !DILocation(line: 1759, column: 6, scope: !16102)
!16110 = !DILocation(line: 1759, column: 10, scope: !16102)
!16111 = !DILocation(line: 1759, column: 17, scope: !16102)
!16112 = !DILocation(line: 1759, column: 21, scope: !16102)
!16113 = !DILocation(line: 1759, column: 29, scope: !16102)
!16114 = !DILocation(line: 1759, column: 39, scope: !16102)
!16115 = !DILocation(line: 1758, column: 13, scope: !16030)
!16116 = !DILocation(line: 1760, column: 8, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16118, file: !3, line: 1760, column: 7)
!16118 = distinct !DILexicalBlock(scope: !16102, file: !3, line: 1759, column: 58)
!16119 = !DILocation(line: 1760, column: 12, scope: !16117)
!16120 = !DILocation(line: 1760, column: 17, scope: !16117)
!16121 = !DILocation(line: 1760, column: 7, scope: !16118)
!16122 = !DILocation(line: 1761, column: 4, scope: !16117)
!16123 = !DILocation(line: 1762, column: 9, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16118, file: !3, line: 1762, column: 7)
!16125 = !DILocation(line: 1762, column: 13, scope: !16124)
!16126 = !DILocation(line: 1762, column: 18, scope: !16124)
!16127 = !DILocation(line: 1762, column: 30, scope: !16124)
!16128 = !DILocation(line: 1762, column: 7, scope: !16124)
!16129 = !DILocation(line: 1762, column: 7, scope: !16118)
!16130 = !DILocation(line: 1766, column: 4, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16124, file: !3, line: 1762, column: 35)
!16132 = !DILocation(line: 1768, column: 3, scope: !16118)
!16133 = !DILocation(line: 1726, column: 42, scope: !16030)
!16134 = !DILabel(scope: !16022, name: "error", file: !3, line: 1770)
!16135 = !DILocation(line: 1770, column: 7, scope: !16022)
!16136 = !DILocation(line: 1771, column: 2, scope: !16022)
!16137 = !DILocation(line: 1771, column: 6, scope: !16022)
!16138 = !DILocation(line: 1771, column: 18, scope: !16022)
!16139 = !DILocation(line: 1772, column: 2, scope: !16022)
!16140 = !DILocation(line: 1772, column: 6, scope: !16022)
!16141 = !DILocation(line: 1772, column: 21, scope: !16022)
!16142 = !DILocation(line: 1773, column: 28, scope: !16022)
!16143 = !DILocation(line: 1773, column: 2, scope: !16022)
!16144 = !DILocation(line: 1774, column: 2, scope: !16022)
!16145 = !DILocation(line: 1775, column: 1, scope: !16022)
!16146 = distinct !DISubprogram(name: "test_and_set_bit", scope: !16147, file: !16147, line: 68, type: !16148, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16147 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!16148 = !DISubroutineType(types: !16149)
!16149 = !{!691, !241, !16150}
!16150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16151, size: 64)
!16151 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !198)
!16152 = !DILocalVariable(name: "nr", arg: 1, scope: !16153, file: !8397, line: 136, type: !241)
!16153 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !8397, file: !8397, line: 136, type: !16148, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16154 = !DILocation(line: 136, column: 28, scope: !16153, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 71, column: 9, scope: !16146)
!16156 = !DILocalVariable(name: "addr", arg: 2, scope: !16153, file: !8397, line: 136, type: !16150)
!16157 = !DILocation(line: 136, column: 56, scope: !16153, inlinedAt: !16155)
!16158 = !DILocalVariable(name: "c", scope: !16159, file: !8397, line: 138, type: !691)
!16159 = distinct !DILexicalBlock(scope: !16153, file: !8397, line: 138, column: 9)
!16160 = !DILocation(line: 138, column: 9, scope: !16159, inlinedAt: !16155)
!16161 = !DILocalVariable(name: "v", arg: 1, scope: !16162, file: !16163, line: 99, type: !8332)
!16162 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !16163, file: !16163, line: 99, type: !16164, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16163 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!16164 = !DISubroutineType(types: !16165)
!16165 = !{null, !8332, !827}
!16166 = !DILocation(line: 99, column: 79, scope: !16162, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 70, column: 2, scope: !16146)
!16168 = !DILocalVariable(name: "size", arg: 2, scope: !16162, file: !16163, line: 99, type: !827)
!16169 = !DILocation(line: 99, column: 89, scope: !16162, inlinedAt: !16167)
!16170 = !DILocalVariable(name: "nr", arg: 1, scope: !16146, file: !16147, line: 68, type: !241)
!16171 = !DILocation(line: 68, column: 42, scope: !16146)
!16172 = !DILocalVariable(name: "addr", arg: 2, scope: !16146, file: !16147, line: 68, type: !16150)
!16173 = !DILocation(line: 68, column: 70, scope: !16146)
!16174 = !DILocation(line: 70, column: 31, scope: !16146)
!16175 = !DILocation(line: 70, column: 38, scope: !16146)
!16176 = !DILocation(line: 70, column: 36, scope: !16146)
!16177 = !DILocation(line: 101, column: 20, scope: !16162, inlinedAt: !16167)
!16178 = !DILocation(line: 101, column: 23, scope: !16162, inlinedAt: !16167)
!16179 = !DILocation(line: 101, column: 2, scope: !16162, inlinedAt: !16167)
!16180 = !DILocation(line: 102, column: 2, scope: !16162, inlinedAt: !16167)
!16181 = !DILocation(line: 71, column: 31, scope: !16146)
!16182 = !DILocation(line: 71, column: 35, scope: !16146)
!16183 = !{i32 -2146596640, i32 -2146596544}
!16184 = !DILocation(line: 71, column: 2, scope: !16146)
!16185 = distinct !DISubprogram(name: "ips_free_flash_copperhead", scope: !3, file: !3, line: 1877, type: !7788, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16186 = !DILocalVariable(name: "ha", arg: 1, scope: !16185, file: !3, line: 1877, type: !5540)
!16187 = !DILocation(line: 1877, column: 38, scope: !16185)
!16188 = !DILocation(line: 1879, column: 6, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16185, file: !3, line: 1879, column: 6)
!16190 = !DILocation(line: 1879, column: 10, scope: !16189)
!16191 = !DILocation(line: 1879, column: 24, scope: !16189)
!16192 = !DILocation(line: 1879, column: 21, scope: !16189)
!16193 = !DILocation(line: 1879, column: 6, scope: !16185)
!16194 = !DILocation(line: 1880, column: 3, scope: !16189)
!16195 = !DILocation(line: 1881, column: 11, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16189, file: !3, line: 1881, column: 11)
!16197 = !DILocation(line: 1881, column: 15, scope: !16196)
!16198 = !DILocation(line: 1881, column: 11, scope: !16189)
!16199 = !DILocation(line: 1882, column: 22, scope: !16196)
!16200 = !DILocation(line: 1882, column: 26, scope: !16196)
!16201 = !DILocation(line: 1882, column: 34, scope: !16196)
!16202 = !DILocation(line: 1882, column: 39, scope: !16196)
!16203 = !DILocation(line: 1882, column: 43, scope: !16196)
!16204 = !DILocation(line: 1883, column: 7, scope: !16196)
!16205 = !DILocation(line: 1883, column: 11, scope: !16196)
!16206 = !DILocation(line: 1883, column: 23, scope: !16196)
!16207 = !DILocation(line: 1883, column: 27, scope: !16196)
!16208 = !DILocation(line: 1882, column: 3, scope: !16196)
!16209 = !DILocation(line: 1884, column: 2, scope: !16185)
!16210 = !DILocation(line: 1884, column: 6, scope: !16185)
!16211 = !DILocation(line: 1884, column: 17, scope: !16185)
!16212 = !DILocation(line: 1885, column: 1, scope: !16185)
!16213 = distinct !DISubprogram(name: "ips_flash_firmware", scope: !3, file: !3, line: 1824, type: !15583, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16214 = !DILocalVariable(name: "ha", arg: 1, scope: !16213, file: !3, line: 1824, type: !5540)
!16215 = !DILocation(line: 1824, column: 31, scope: !16213)
!16216 = !DILocalVariable(name: "pt", arg: 2, scope: !16213, file: !3, line: 1824, type: !6113)
!16217 = !DILocation(line: 1824, column: 52, scope: !16213)
!16218 = !DILocalVariable(name: "scb", arg: 3, scope: !16213, file: !3, line: 1824, type: !4848)
!16219 = !DILocation(line: 1824, column: 68, scope: !16213)
!16220 = !DILocalVariable(name: "sg_list", scope: !16213, file: !3, line: 1826, type: !5080)
!16221 = !DILocation(line: 1826, column: 14, scope: !16213)
!16222 = !DILocalVariable(name: "cmd_busaddr", scope: !16213, file: !3, line: 1827, type: !186)
!16223 = !DILocation(line: 1827, column: 11, scope: !16213)
!16224 = !DILocation(line: 1829, column: 6, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16213, file: !3, line: 1829, column: 6)
!16226 = !DILocation(line: 1829, column: 10, scope: !16225)
!16227 = !DILocation(line: 1829, column: 17, scope: !16225)
!16228 = !DILocation(line: 1829, column: 21, scope: !16225)
!16229 = !DILocation(line: 1829, column: 29, scope: !16225)
!16230 = !DILocation(line: 1829, column: 34, scope: !16225)
!16231 = !DILocation(line: 1829, column: 50, scope: !16225)
!16232 = !DILocation(line: 1830, column: 6, scope: !16225)
!16233 = !DILocation(line: 1830, column: 10, scope: !16225)
!16234 = !DILocation(line: 1830, column: 17, scope: !16225)
!16235 = !DILocation(line: 1830, column: 21, scope: !16225)
!16236 = !DILocation(line: 1830, column: 29, scope: !16225)
!16237 = !DILocation(line: 1830, column: 39, scope: !16225)
!16238 = !DILocation(line: 1829, column: 6, scope: !16213)
!16239 = !DILocation(line: 1831, column: 11, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16225, file: !3, line: 1830, column: 56)
!16241 = !DILocation(line: 1831, column: 15, scope: !16240)
!16242 = !DILocation(line: 1831, column: 22, scope: !16240)
!16243 = !DILocation(line: 1831, column: 3, scope: !16240)
!16244 = !DILocation(line: 1832, column: 3, scope: !16240)
!16245 = !DILocation(line: 1832, column: 7, scope: !16240)
!16246 = !DILocation(line: 1832, column: 14, scope: !16240)
!16247 = !DILocation(line: 1832, column: 18, scope: !16240)
!16248 = !DILocation(line: 1832, column: 26, scope: !16240)
!16249 = !DILocation(line: 1832, column: 34, scope: !16240)
!16250 = !DILocation(line: 1833, column: 34, scope: !16240)
!16251 = !DILocation(line: 1833, column: 3, scope: !16240)
!16252 = !DILocation(line: 1833, column: 7, scope: !16240)
!16253 = !DILocation(line: 1833, column: 14, scope: !16240)
!16254 = !DILocation(line: 1833, column: 18, scope: !16240)
!16255 = !DILocation(line: 1833, column: 26, scope: !16240)
!16256 = !DILocation(line: 1833, column: 32, scope: !16240)
!16257 = !DILocation(line: 1834, column: 2, scope: !16240)
!16258 = !DILocation(line: 1835, column: 3, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16225, file: !3, line: 1834, column: 9)
!16260 = !DILocation(line: 1835, column: 7, scope: !16259)
!16261 = !DILocation(line: 1835, column: 19, scope: !16259)
!16262 = !DILocation(line: 1836, column: 3, scope: !16259)
!16263 = !DILocation(line: 1836, column: 7, scope: !16259)
!16264 = !DILocation(line: 1836, column: 22, scope: !16259)
!16265 = !DILocation(line: 1837, column: 29, scope: !16259)
!16266 = !DILocation(line: 1837, column: 3, scope: !16259)
!16267 = !DILocation(line: 1838, column: 3, scope: !16259)
!16268 = !DILocation(line: 1841, column: 17, scope: !16213)
!16269 = !DILocation(line: 1841, column: 22, scope: !16213)
!16270 = !DILocation(line: 1841, column: 30, scope: !16213)
!16271 = !DILocation(line: 1841, column: 10, scope: !16213)
!16272 = !DILocation(line: 1841, column: 15, scope: !16213)
!16273 = !DILocation(line: 1842, column: 16, scope: !16213)
!16274 = !DILocation(line: 1842, column: 21, scope: !16213)
!16275 = !DILocation(line: 1842, column: 14, scope: !16213)
!16276 = !DILocation(line: 1844, column: 10, scope: !16213)
!16277 = !DILocation(line: 1844, column: 15, scope: !16213)
!16278 = !DILocation(line: 1844, column: 2, scope: !16213)
!16279 = !DILocation(line: 1844, column: 21, scope: !16213)
!16280 = !DILocation(line: 1844, column: 25, scope: !16213)
!16281 = !DILocation(line: 1844, column: 32, scope: !16213)
!16282 = !DILocation(line: 1846, column: 30, scope: !16213)
!16283 = !DILocation(line: 1846, column: 2, scope: !16213)
!16284 = !DILocation(line: 1846, column: 7, scope: !16213)
!16285 = !DILocation(line: 1846, column: 15, scope: !16213)
!16286 = !DILocation(line: 1846, column: 20, scope: !16213)
!16287 = !DILocation(line: 1847, column: 21, scope: !16213)
!16288 = !DILocation(line: 1847, column: 2, scope: !16213)
!16289 = !DILocation(line: 1847, column: 7, scope: !16213)
!16290 = !DILocation(line: 1847, column: 19, scope: !16213)
!16291 = !DILocation(line: 1848, column: 13, scope: !16213)
!16292 = !DILocation(line: 1848, column: 18, scope: !16213)
!16293 = !DILocation(line: 1848, column: 28, scope: !16213)
!16294 = !DILocation(line: 1848, column: 36, scope: !16213)
!16295 = !DILocation(line: 1848, column: 2, scope: !16213)
!16296 = !DILocation(line: 1848, column: 7, scope: !16213)
!16297 = !DILocation(line: 1848, column: 11, scope: !16213)
!16298 = !DILocation(line: 1849, column: 19, scope: !16213)
!16299 = !DILocation(line: 1849, column: 24, scope: !16213)
!16300 = !DILocation(line: 1849, column: 34, scope: !16213)
!16301 = !DILocation(line: 1849, column: 42, scope: !16213)
!16302 = !DILocation(line: 1849, column: 2, scope: !16213)
!16303 = !DILocation(line: 1849, column: 7, scope: !16213)
!16304 = !DILocation(line: 1849, column: 17, scope: !16213)
!16305 = !DILocation(line: 1850, column: 13, scope: !16213)
!16306 = !DILocation(line: 1850, column: 18, scope: !16213)
!16307 = !DILocation(line: 1850, column: 28, scope: !16213)
!16308 = !DILocation(line: 1850, column: 36, scope: !16213)
!16309 = !DILocation(line: 1850, column: 2, scope: !16213)
!16310 = !DILocation(line: 1850, column: 7, scope: !16213)
!16311 = !DILocation(line: 1850, column: 11, scope: !16213)
!16312 = !DILocation(line: 1851, column: 2, scope: !16213)
!16313 = !DILocation(line: 1851, column: 7, scope: !16213)
!16314 = !DILocation(line: 1851, column: 14, scope: !16213)
!16315 = !DILocation(line: 1852, column: 2, scope: !16213)
!16316 = !DILocation(line: 1852, column: 7, scope: !16213)
!16317 = !DILocation(line: 1852, column: 16, scope: !16213)
!16318 = !DILocation(line: 1853, column: 2, scope: !16213)
!16319 = !DILocation(line: 1853, column: 7, scope: !16213)
!16320 = !DILocation(line: 1853, column: 13, scope: !16213)
!16321 = !DILocation(line: 1854, column: 2, scope: !16213)
!16322 = !DILocation(line: 1854, column: 7, scope: !16213)
!16323 = !DILocation(line: 1854, column: 15, scope: !16213)
!16324 = !DILocation(line: 1855, column: 2, scope: !16213)
!16325 = !DILocation(line: 1855, column: 7, scope: !16213)
!16326 = !DILocation(line: 1855, column: 16, scope: !16213)
!16327 = !DILocation(line: 1856, column: 17, scope: !16213)
!16328 = !DILocation(line: 1856, column: 2, scope: !16213)
!16329 = !DILocation(line: 1856, column: 7, scope: !16213)
!16330 = !DILocation(line: 1856, column: 15, scope: !16213)
!16331 = !DILocation(line: 1858, column: 18, scope: !16213)
!16332 = !DILocation(line: 1858, column: 22, scope: !16213)
!16333 = !DILocation(line: 1858, column: 2, scope: !16213)
!16334 = !DILocation(line: 1858, column: 7, scope: !16213)
!16335 = !DILocation(line: 1858, column: 16, scope: !16213)
!16336 = !DILocation(line: 1860, column: 6, scope: !16213)
!16337 = !DILocation(line: 1859, column: 2, scope: !16213)
!16338 = !DILocation(line: 1859, column: 7, scope: !16213)
!16339 = !DILocation(line: 1859, column: 20, scope: !16213)
!16340 = !DILocation(line: 1862, column: 2, scope: !16213)
!16341 = !DILocation(line: 1862, column: 7, scope: !16213)
!16342 = !DILocation(line: 1862, column: 13, scope: !16213)
!16343 = !DILocation(line: 1863, column: 32, scope: !16213)
!16344 = !DILocation(line: 1863, column: 2, scope: !16213)
!16345 = !DILocation(line: 1863, column: 7, scope: !16213)
!16346 = !DILocation(line: 1863, column: 11, scope: !16213)
!16347 = !DILocation(line: 1863, column: 19, scope: !16213)
!16348 = !DILocation(line: 1863, column: 30, scope: !16213)
!16349 = !DILocation(line: 1864, column: 33, scope: !16213)
!16350 = !DILocation(line: 1864, column: 2, scope: !16213)
!16351 = !DILocation(line: 1864, column: 7, scope: !16213)
!16352 = !DILocation(line: 1864, column: 11, scope: !16213)
!16353 = !DILocation(line: 1864, column: 19, scope: !16213)
!16354 = !DILocation(line: 1864, column: 31, scope: !16213)
!16355 = !DILocation(line: 1865, column: 6, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16213, file: !3, line: 1865, column: 6)
!16357 = !DILocation(line: 1865, column: 10, scope: !16356)
!16358 = !DILocation(line: 1865, column: 6, scope: !16213)
!16359 = !DILocation(line: 1866, column: 18, scope: !16356)
!16360 = !DILocation(line: 1866, column: 22, scope: !16356)
!16361 = !DILocation(line: 1866, column: 3, scope: !16356)
!16362 = !DILocation(line: 1866, column: 8, scope: !16356)
!16363 = !DILocation(line: 1866, column: 16, scope: !16356)
!16364 = !DILocation(line: 1867, column: 2, scope: !16213)
!16365 = !DILocation(line: 1867, column: 7, scope: !16213)
!16366 = !DILocation(line: 1867, column: 17, scope: !16213)
!16367 = !DILocation(line: 1867, column: 24, scope: !16213)
!16368 = !DILocation(line: 1868, column: 2, scope: !16213)
!16369 = !DILocation(line: 1869, column: 1, scope: !16213)
!16370 = distinct !DISubprogram(name: "kasan_check_write", scope: !16371, file: !16371, line: 38, type: !16372, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16371 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!16372 = !DISubroutineType(types: !16373)
!16373 = !{!691, !8332, !7}
!16374 = !DILocalVariable(name: "p", arg: 1, scope: !16370, file: !16371, line: 38, type: !8332)
!16375 = !DILocation(line: 38, column: 59, scope: !16370)
!16376 = !DILocalVariable(name: "size", arg: 2, scope: !16370, file: !16371, line: 38, type: !7)
!16377 = !DILocation(line: 38, column: 75, scope: !16370)
!16378 = !DILocation(line: 40, column: 2, scope: !16370)
!16379 = distinct !DISubprogram(name: "kcsan_check_access", scope: !16380, file: !16380, line: 178, type: !16381, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16380 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!16381 = !DISubroutineType(types: !16382)
!16382 = !{null, !8332, !827, !182}
!16383 = !DILocalVariable(name: "ptr", arg: 1, scope: !16379, file: !16380, line: 178, type: !8332)
!16384 = !DILocation(line: 178, column: 60, scope: !16379)
!16385 = !DILocalVariable(name: "size", arg: 2, scope: !16379, file: !16380, line: 178, type: !827)
!16386 = !DILocation(line: 178, column: 72, scope: !16379)
!16387 = !DILocalVariable(name: "type", arg: 3, scope: !16379, file: !16380, line: 179, type: !182)
!16388 = !DILocation(line: 179, column: 15, scope: !16379)
!16389 = !DILocation(line: 179, column: 23, scope: !16379)
!16390 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !16147, file: !16147, line: 81, type: !16148, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16391 = !DILocalVariable(name: "nr", arg: 1, scope: !16392, file: !8397, line: 160, type: !241)
!16392 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !8397, file: !8397, line: 160, type: !16148, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16393 = !DILocation(line: 160, column: 30, scope: !16392, inlinedAt: !16394)
!16394 = distinct !DILocation(line: 84, column: 9, scope: !16390)
!16395 = !DILocalVariable(name: "addr", arg: 2, scope: !16392, file: !8397, line: 160, type: !16150)
!16396 = !DILocation(line: 160, column: 58, scope: !16392, inlinedAt: !16394)
!16397 = !DILocalVariable(name: "c", scope: !16398, file: !8397, line: 162, type: !691)
!16398 = distinct !DILexicalBlock(scope: !16392, file: !8397, line: 162, column: 9)
!16399 = !DILocation(line: 162, column: 9, scope: !16398, inlinedAt: !16394)
!16400 = !DILocation(line: 99, column: 79, scope: !16162, inlinedAt: !16401)
!16401 = distinct !DILocation(line: 83, column: 2, scope: !16390)
!16402 = !DILocation(line: 99, column: 89, scope: !16162, inlinedAt: !16401)
!16403 = !DILocalVariable(name: "nr", arg: 1, scope: !16390, file: !16147, line: 81, type: !241)
!16404 = !DILocation(line: 81, column: 44, scope: !16390)
!16405 = !DILocalVariable(name: "addr", arg: 2, scope: !16390, file: !16147, line: 81, type: !16150)
!16406 = !DILocation(line: 81, column: 72, scope: !16390)
!16407 = !DILocation(line: 83, column: 31, scope: !16390)
!16408 = !DILocation(line: 83, column: 38, scope: !16390)
!16409 = !DILocation(line: 83, column: 36, scope: !16390)
!16410 = !DILocation(line: 101, column: 20, scope: !16162, inlinedAt: !16401)
!16411 = !DILocation(line: 101, column: 23, scope: !16162, inlinedAt: !16401)
!16412 = !DILocation(line: 101, column: 2, scope: !16162, inlinedAt: !16401)
!16413 = !DILocation(line: 102, column: 2, scope: !16162, inlinedAt: !16401)
!16414 = !DILocation(line: 84, column: 33, scope: !16390)
!16415 = !DILocation(line: 84, column: 37, scope: !16390)
!16416 = !{i32 -2146594728, i32 -2146594632}
!16417 = !DILocation(line: 84, column: 2, scope: !16390)
!16418 = !DILocalVariable(name: "dev", arg: 1, scope: !6271, file: !6272, line: 271, type: !2031)
!16419 = !DILocation(line: 271, column: 62, scope: !6271)
!16420 = !DILocalVariable(name: "ptr", arg: 2, scope: !6271, file: !6272, line: 271, type: !183)
!16421 = !DILocation(line: 271, column: 73, scope: !6271)
!16422 = !DILocalVariable(name: "size", arg: 3, scope: !6271, file: !6272, line: 272, type: !827)
!16423 = !DILocation(line: 272, column: 10, scope: !6271)
!16424 = !DILocalVariable(name: "dir", arg: 4, scope: !6271, file: !6272, line: 272, type: !156)
!16425 = !DILocation(line: 272, column: 40, scope: !6271)
!16426 = !DILocalVariable(name: "attrs", arg: 5, scope: !6271, file: !6272, line: 272, type: !198)
!16427 = !DILocation(line: 272, column: 59, scope: !6271)
!16428 = !DILocalVariable(name: "__ret_warn_once", scope: !16429, file: !6272, line: 275, type: !182)
!16429 = distinct !DILexicalBlock(scope: !16430, file: !6272, line: 275, column: 6)
!16430 = distinct !DILexicalBlock(scope: !6271, file: !6272, line: 275, column: 6)
!16431 = !DILocation(line: 275, column: 6, scope: !16429)
!16432 = !DILocation(line: 275, column: 6, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16429, file: !6272, line: 275, column: 6)
!16434 = !DILocation(line: 0, scope: !16433)
!16435 = !DILocation(line: 275, column: 6, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16433, file: !6272, line: 275, column: 6)
!16437 = !DILocalVariable(name: "__ret_warn_on", scope: !16438, file: !6272, line: 275, type: !182)
!16438 = distinct !DILexicalBlock(scope: !16436, file: !6272, line: 275, column: 6)
!16439 = !DILocation(line: 275, column: 6, scope: !16438)
!16440 = !DILocation(line: 275, column: 6, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16438, file: !6272, line: 275, column: 6)
!16442 = !DILocation(line: 275, column: 6, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16441, file: !6272, line: 275, column: 6)
!16444 = !DILocation(line: 275, column: 6, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16443, file: !6272, line: 275, column: 6)
!16446 = !DILocation(line: 275, column: 6, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16443, file: !6272, line: 275, column: 6)
!16448 = !DILocation(line: 275, column: 6, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16447, file: !6272, line: 275, column: 6)
!16450 = !DILocation(line: 275, column: 6, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16447, file: !6272, line: 275, column: 6)
!16452 = !{i32 -2141651224, i32 -2141651195, i32 -2141651149, i32 -2141651091, i32 -2141651037, i32 -2141650983, i32 -2141650928, i32 -2141650897}
!16453 = !DILocation(line: 275, column: 6, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16447, file: !6272, line: 275, column: 6)
!16455 = !{i32 -2141650477, i32 -2141650470, i32 -2141650418, i32 -2141650387, i32 -2141650357}
!16456 = !DILocation(line: 275, column: 6, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16447, file: !6272, line: 275, column: 6)
!16458 = !DILocation(line: 275, column: 6, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16443, file: !6272, line: 275, column: 6)
!16460 = !DILocation(line: 275, column: 6, scope: !16430)
!16461 = !DILocation(line: 275, column: 6, scope: !6271)
!16462 = !DILocation(line: 277, column: 3, scope: !16430)
!16463 = !DILocation(line: 278, column: 23, scope: !6271)
!16464 = !DILocation(line: 278, column: 28, scope: !6271)
!16465 = !DILocation(line: 278, column: 33, scope: !6271)
!16466 = !DILocation(line: 278, column: 2, scope: !6271)
!16467 = !DILocation(line: 279, column: 28, scope: !6271)
!16468 = !DILocation(line: 279, column: 33, scope: !6271)
!16469 = !DILocation(line: 279, column: 52, scope: !6271)
!16470 = !DILocation(line: 280, column: 4, scope: !6271)
!16471 = !DILocation(line: 280, column: 10, scope: !6271)
!16472 = !DILocation(line: 280, column: 15, scope: !6271)
!16473 = !DILocation(line: 279, column: 9, scope: !6271)
!16474 = !DILocation(line: 279, column: 2, scope: !6271)
!16475 = !DILocation(line: 281, column: 1, scope: !6271)
!16476 = distinct !DISubprogram(name: "dev_name", scope: !37, file: !37, line: 609, type: !16477, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16477 = !DISubroutineType(types: !16478)
!16478 = !{!648, !2390}
!16479 = !DILocalVariable(name: "dev", arg: 1, scope: !16476, file: !37, line: 609, type: !2390)
!16480 = !DILocation(line: 609, column: 57, scope: !16476)
!16481 = !DILocation(line: 612, column: 6, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16476, file: !37, line: 612, column: 6)
!16483 = !DILocation(line: 612, column: 11, scope: !16482)
!16484 = !DILocation(line: 612, column: 6, scope: !16476)
!16485 = !DILocation(line: 613, column: 10, scope: !16482)
!16486 = !DILocation(line: 613, column: 15, scope: !16482)
!16487 = !DILocation(line: 613, column: 3, scope: !16482)
!16488 = !DILocation(line: 615, column: 23, scope: !16476)
!16489 = !DILocation(line: 615, column: 28, scope: !16476)
!16490 = !DILocation(line: 615, column: 9, scope: !16476)
!16491 = !DILocation(line: 615, column: 2, scope: !16476)
!16492 = !DILocation(line: 616, column: 1, scope: !16476)
!16493 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !6272, file: !6272, line: 87, type: !16494, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16494 = !DISubroutineType(types: !16495)
!16495 = !{null, !2031, !1865, !198}
!16496 = !DILocalVariable(name: "dev", arg: 1, scope: !16493, file: !6272, line: 87, type: !2031)
!16497 = !DILocation(line: 87, column: 56, scope: !16493)
!16498 = !DILocalVariable(name: "addr", arg: 2, scope: !16493, file: !6272, line: 87, type: !1865)
!16499 = !DILocation(line: 87, column: 73, scope: !16493)
!16500 = !DILocalVariable(name: "len", arg: 3, scope: !16493, file: !6272, line: 88, type: !198)
!16501 = !DILocation(line: 88, column: 17, scope: !16493)
!16502 = !DILocation(line: 90, column: 1, scope: !16493)
!16503 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !16504, file: !16504, line: 18, type: !16505, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16504 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!16505 = !DISubroutineType(types: !16506)
!16506 = !{!198, !198}
!16507 = !DILocalVariable(name: "x", arg: 1, scope: !16503, file: !16504, line: 18, type: !198)
!16508 = !DILocation(line: 18, column: 63, scope: !16503)
!16509 = !DILocalVariable(name: "y", scope: !16503, file: !16504, line: 20, type: !198)
!16510 = !DILocation(line: 20, column: 16, scope: !16503)
!16511 = !DILocation(line: 20, column: 20, scope: !16503)
!16512 = !DILocation(line: 20, column: 22, scope: !16503)
!16513 = !DILocation(line: 23, column: 6, scope: !16503)
!16514 = !DILocation(line: 23, column: 12, scope: !16503)
!16515 = !DILocation(line: 23, column: 16, scope: !16503)
!16516 = !DILocation(line: 23, column: 14, scope: !16503)
!16517 = !DILocation(line: 23, column: 11, scope: !16503)
!16518 = !DILocation(line: 23, column: 21, scope: !16503)
!16519 = !DILocation(line: 23, column: 55, scope: !16503)
!16520 = !DILocation(line: 23, column: 53, scope: !16503)
!16521 = !DILocation(line: 23, column: 8, scope: !16503)
!16522 = !DILocation(line: 23, column: 4, scope: !16503)
!16523 = !DILocation(line: 25, column: 9, scope: !16503)
!16524 = !DILocation(line: 25, column: 2, scope: !16503)
!16525 = distinct !DISubprogram(name: "kobject_name", scope: !1734, file: !1734, line: 88, type: !16526, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{!648, !16528}
!16528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16529, size: 64)
!16529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!16530 = !DILocalVariable(name: "kobj", arg: 1, scope: !16525, file: !1734, line: 88, type: !16528)
!16531 = !DILocation(line: 88, column: 62, scope: !16525)
!16532 = !DILocation(line: 90, column: 9, scope: !16525)
!16533 = !DILocation(line: 90, column: 15, scope: !16525)
!16534 = !DILocation(line: 90, column: 2, scope: !16525)
!16535 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !6272, file: !6272, line: 283, type: !16536, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16536 = !DISubroutineType(types: !16537)
!16537 = !{null, !2031, !3904, !827, !156, !198}
!16538 = !DILocalVariable(name: "dev", arg: 1, scope: !16535, file: !6272, line: 283, type: !2031)
!16539 = !DILocation(line: 283, column: 58, scope: !16535)
!16540 = !DILocalVariable(name: "addr", arg: 2, scope: !16535, file: !6272, line: 283, type: !3904)
!16541 = !DILocation(line: 283, column: 74, scope: !16535)
!16542 = !DILocalVariable(name: "size", arg: 3, scope: !16535, file: !6272, line: 284, type: !827)
!16543 = !DILocation(line: 284, column: 10, scope: !16535)
!16544 = !DILocalVariable(name: "dir", arg: 4, scope: !16535, file: !6272, line: 284, type: !156)
!16545 = !DILocation(line: 284, column: 40, scope: !16535)
!16546 = !DILocalVariable(name: "attrs", arg: 5, scope: !16535, file: !6272, line: 284, type: !198)
!16547 = !DILocation(line: 284, column: 59, scope: !16535)
!16548 = !DILocation(line: 286, column: 30, scope: !16535)
!16549 = !DILocation(line: 286, column: 35, scope: !16535)
!16550 = !DILocation(line: 286, column: 41, scope: !16535)
!16551 = !DILocation(line: 286, column: 47, scope: !16535)
!16552 = !DILocation(line: 286, column: 52, scope: !16535)
!16553 = !DILocation(line: 286, column: 9, scope: !16535)
!16554 = !DILocation(line: 286, column: 2, scope: !16535)
!16555 = distinct !DISubprogram(name: "ips_removeq_wait_head", scope: !3, file: !3, line: 2892, type: !16556, scopeLine: 2893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16556 = !DISubroutineType(types: !16557)
!16557 = !{!5101, !15112}
!16558 = !DILocalVariable(name: "queue", arg: 1, scope: !16555, file: !3, line: 2892, type: !15112)
!16559 = !DILocation(line: 2892, column: 72, scope: !16555)
!16560 = !DILocalVariable(name: "item", scope: !16555, file: !3, line: 2894, type: !5101)
!16561 = !DILocation(line: 2894, column: 20, scope: !16555)
!16562 = !DILocation(line: 2898, column: 9, scope: !16555)
!16563 = !DILocation(line: 2898, column: 16, scope: !16555)
!16564 = !DILocation(line: 2898, column: 7, scope: !16555)
!16565 = !DILocation(line: 2900, column: 7, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16555, file: !3, line: 2900, column: 6)
!16567 = !DILocation(line: 2900, column: 6, scope: !16555)
!16568 = !DILocation(line: 2901, column: 3, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 2900, column: 13)
!16570 = !DILocation(line: 2904, column: 37, scope: !16555)
!16571 = !DILocation(line: 2904, column: 43, scope: !16555)
!16572 = !DILocation(line: 2904, column: 16, scope: !16555)
!16573 = !DILocation(line: 2904, column: 2, scope: !16555)
!16574 = !DILocation(line: 2904, column: 9, scope: !16555)
!16575 = !DILocation(line: 2904, column: 14, scope: !16555)
!16576 = !DILocation(line: 2905, column: 2, scope: !16555)
!16577 = !DILocation(line: 2905, column: 8, scope: !16555)
!16578 = !DILocation(line: 2905, column: 22, scope: !16555)
!16579 = !DILocation(line: 2907, column: 6, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16555, file: !3, line: 2907, column: 6)
!16581 = !DILocation(line: 2907, column: 13, scope: !16580)
!16582 = !DILocation(line: 2907, column: 21, scope: !16580)
!16583 = !DILocation(line: 2907, column: 18, scope: !16580)
!16584 = !DILocation(line: 2907, column: 6, scope: !16555)
!16585 = !DILocation(line: 2908, column: 3, scope: !16580)
!16586 = !DILocation(line: 2908, column: 10, scope: !16580)
!16587 = !DILocation(line: 2908, column: 15, scope: !16580)
!16588 = !DILocation(line: 2910, column: 2, scope: !16555)
!16589 = !DILocation(line: 2910, column: 9, scope: !16555)
!16590 = !DILocation(line: 2910, column: 14, scope: !16555)
!16591 = !DILocation(line: 2912, column: 10, scope: !16555)
!16592 = !DILocation(line: 2912, column: 2, scope: !16555)
!16593 = !DILocation(line: 2913, column: 1, scope: !16555)
!16594 = distinct !DISubprogram(name: "ips_done", scope: !3, file: !3, line: 3138, type: !11270, scopeLine: 3139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16595 = !DILocalVariable(name: "ha", arg: 1, scope: !16594, file: !3, line: 3138, type: !5540)
!16596 = !DILocation(line: 3138, column: 21, scope: !16594)
!16597 = !DILocalVariable(name: "scb", arg: 2, scope: !16594, file: !3, line: 3138, type: !4848)
!16598 = !DILocation(line: 3138, column: 37, scope: !16594)
!16599 = !DILocalVariable(name: "ret", scope: !16594, file: !3, line: 3140, type: !182)
!16600 = !DILocation(line: 3140, column: 6, scope: !16594)
!16601 = !DILocation(line: 3144, column: 7, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16594, file: !3, line: 3144, column: 6)
!16603 = !DILocation(line: 3144, column: 6, scope: !16594)
!16604 = !DILocation(line: 3145, column: 3, scope: !16602)
!16605 = !DILocation(line: 3147, column: 7, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16594, file: !3, line: 3147, column: 6)
!16607 = !DILocation(line: 3147, column: 12, scope: !16606)
!16608 = !DILocation(line: 3147, column: 6, scope: !16606)
!16609 = !DILocation(line: 3147, column: 22, scope: !16606)
!16610 = !DILocation(line: 3147, column: 42, scope: !16606)
!16611 = !DILocation(line: 3147, column: 47, scope: !16606)
!16612 = !DILocation(line: 3147, column: 26, scope: !16606)
!16613 = !DILocation(line: 3147, column: 6, scope: !16594)
!16614 = !DILocation(line: 3148, column: 24, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16606, file: !3, line: 3147, column: 59)
!16616 = !DILocation(line: 3148, column: 28, scope: !16615)
!16617 = !DILocation(line: 3148, column: 3, scope: !16615)
!16618 = !DILocation(line: 3149, column: 3, scope: !16615)
!16619 = !DILocation(line: 3149, column: 7, scope: !16615)
!16620 = !DILocation(line: 3149, column: 16, scope: !16615)
!16621 = !DILocation(line: 3150, column: 2, scope: !16615)
!16622 = !DILocation(line: 3156, column: 8, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16624, file: !3, line: 3156, column: 7)
!16624 = distinct !DILexicalBlock(scope: !16606, file: !3, line: 3150, column: 9)
!16625 = !DILocation(line: 3156, column: 13, scope: !16623)
!16626 = !DILocation(line: 3156, column: 7, scope: !16623)
!16627 = !DILocation(line: 3156, column: 22, scope: !16623)
!16628 = !DILocation(line: 3156, column: 26, scope: !16623)
!16629 = !DILocation(line: 3156, column: 31, scope: !16623)
!16630 = !DILocation(line: 3156, column: 25, scope: !16623)
!16631 = !DILocation(line: 3156, column: 7, scope: !16624)
!16632 = !DILocalVariable(name: "sg", scope: !16633, file: !3, line: 3157, type: !5492)
!16633 = distinct !DILexicalBlock(scope: !16623, file: !3, line: 3156, column: 42)
!16634 = !DILocation(line: 3157, column: 45, scope: !16633)
!16635 = !DILocalVariable(name: "i", scope: !16633, file: !3, line: 3158, type: !182)
!16636 = !DILocation(line: 3158, column: 29, scope: !16633)
!16637 = !DILocalVariable(name: "sg_dma_index", scope: !16633, file: !3, line: 3158, type: !182)
!16638 = !DILocation(line: 3158, column: 32, scope: !16633)
!16639 = !DILocalVariable(name: "ips_sg_index", scope: !16633, file: !3, line: 3158, type: !182)
!16640 = !DILocation(line: 3158, column: 46, scope: !16633)
!16641 = !DILocation(line: 3161, column: 4, scope: !16633)
!16642 = !DILocation(line: 3161, column: 9, scope: !16633)
!16643 = !DILocation(line: 3161, column: 18, scope: !16633)
!16644 = !DILocation(line: 3163, column: 42, scope: !16633)
!16645 = !DILocation(line: 3163, column: 47, scope: !16633)
!16646 = !DILocation(line: 3163, column: 30, scope: !16633)
!16647 = !DILocation(line: 3163, column: 28, scope: !16633)
!16648 = !DILocation(line: 3166, column: 40, scope: !16633)
!16649 = !DILocation(line: 3166, column: 45, scope: !16633)
!16650 = !DILocation(line: 3166, column: 38, scope: !16633)
!16651 = !DILocation(line: 3167, column: 32, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 3167, column: 25)
!16653 = !DILocation(line: 3167, column: 30, scope: !16652)
!16654 = !DILocation(line: 3167, column: 37, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16652, file: !3, line: 3167, column: 25)
!16656 = !DILocation(line: 3167, column: 41, scope: !16655)
!16657 = !DILocation(line: 3167, column: 46, scope: !16655)
!16658 = !DILocation(line: 3167, column: 39, scope: !16655)
!16659 = !DILocation(line: 3167, column: 25, scope: !16652)
!16660 = !DILocation(line: 3168, column: 46, scope: !16655)
!16661 = !DILocation(line: 3168, column: 38, scope: !16655)
!16662 = !DILocation(line: 3168, column: 36, scope: !16655)
!16663 = !DILocation(line: 3168, column: 33, scope: !16655)
!16664 = !DILocation(line: 3167, column: 56, scope: !16655)
!16665 = !DILocation(line: 3167, column: 25, scope: !16655)
!16666 = distinct !{!16666, !16659, !16667}
!16667 = !DILocation(line: 3168, column: 48, scope: !16652)
!16668 = !DILocation(line: 3171, column: 48, scope: !16633)
!16669 = !DILocation(line: 3172, column: 48, scope: !16633)
!16670 = !DILocation(line: 3173, column: 48, scope: !16633)
!16671 = !DILocation(line: 3173, column: 65, scope: !16633)
!16672 = !DILocation(line: 3174, column: 48, scope: !16633)
!16673 = !DILocation(line: 3171, column: 25, scope: !16633)
!16674 = !DILocation(line: 3176, column: 25, scope: !16633)
!16675 = !DILocation(line: 3176, column: 32, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 3176, column: 25)
!16677 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 3176, column: 25)
!16678 = !DILocation(line: 3176, column: 61, scope: !16676)
!16679 = !DILocation(line: 3176, column: 66, scope: !16676)
!16680 = !DILocation(line: 3176, column: 47, scope: !16676)
!16681 = !DILocation(line: 3176, column: 45, scope: !16676)
!16682 = !DILocation(line: 3176, column: 25, scope: !16677)
!16683 = !DILocation(line: 3179, column: 38, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16685, file: !3, line: 3178, column: 37)
!16685 = distinct !DILexicalBlock(scope: !16676, file: !3, line: 3177, column: 64)
!16686 = !DILocation(line: 3180, column: 38, scope: !16684)
!16687 = !DILocation(line: 3181, column: 38, scope: !16684)
!16688 = !DILocation(line: 3181, column: 55, scope: !16684)
!16689 = !DILocation(line: 3182, column: 38, scope: !16684)
!16690 = !DILocation(line: 3178, column: 37, scope: !16684)
!16691 = !DILocation(line: 3182, column: 54, scope: !16684)
!16692 = !DILocation(line: 3178, column: 37, scope: !16685)
!16693 = !DILocation(line: 3183, column: 41, scope: !16684)
!16694 = !DILocation(line: 3184, column: 25, scope: !16685)
!16695 = !DILocation(line: 3177, column: 42, scope: !16676)
!16696 = !DILocation(line: 3177, column: 59, scope: !16676)
!16697 = !DILocation(line: 3177, column: 51, scope: !16676)
!16698 = !DILocation(line: 3177, column: 49, scope: !16676)
!16699 = !DILocation(line: 3176, column: 25, scope: !16676)
!16700 = distinct !{!16700, !16682, !16701}
!16701 = !DILocation(line: 3184, column: 25, scope: !16677)
!16702 = !DILocation(line: 3186, column: 32, scope: !16633)
!16703 = !DILocation(line: 3186, column: 37, scope: !16633)
!16704 = !DILocation(line: 3186, column: 4, scope: !16633)
!16705 = !DILocation(line: 3186, column: 9, scope: !16633)
!16706 = !DILocation(line: 3186, column: 14, scope: !16633)
!16707 = !DILocation(line: 3186, column: 30, scope: !16633)
!16708 = !DILocation(line: 3188, column: 30, scope: !16633)
!16709 = !DILocation(line: 3188, column: 35, scope: !16633)
!16710 = !DILocation(line: 3188, column: 45, scope: !16633)
!16711 = !DILocation(line: 3188, column: 8, scope: !16633)
!16712 = !DILocation(line: 3187, column: 4, scope: !16633)
!16713 = !DILocation(line: 3187, column: 9, scope: !16633)
!16714 = !DILocation(line: 3187, column: 14, scope: !16633)
!16715 = !DILocation(line: 3187, column: 28, scope: !16633)
!16716 = !DILocation(line: 3190, column: 10, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 3190, column: 8)
!16718 = !DILocation(line: 3190, column: 15, scope: !16717)
!16719 = !DILocation(line: 3190, column: 20, scope: !16717)
!16720 = !DILocation(line: 3190, column: 34, scope: !16717)
!16721 = !DILocation(line: 3190, column: 8, scope: !16633)
!16722 = !DILocation(line: 3191, column: 5, scope: !16717)
!16723 = !DILocation(line: 3191, column: 10, scope: !16717)
!16724 = !DILocation(line: 3191, column: 15, scope: !16717)
!16725 = !DILocation(line: 3191, column: 31, scope: !16717)
!16726 = !DILocation(line: 3193, column: 8, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 3193, column: 8)
!16728 = !DILocation(line: 3193, column: 13, scope: !16727)
!16729 = !DILocation(line: 3193, column: 22, scope: !16727)
!16730 = !DILocation(line: 3193, column: 8, scope: !16633)
!16731 = !DILocation(line: 3194, column: 5, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16727, file: !3, line: 3193, column: 39)
!16733 = !DILocation(line: 3194, column: 10, scope: !16732)
!16734 = !DILocation(line: 3194, column: 15, scope: !16732)
!16735 = !DILocation(line: 3194, column: 29, scope: !16732)
!16736 = !DILocation(line: 3195, column: 5, scope: !16732)
!16737 = !DILocation(line: 3195, column: 10, scope: !16732)
!16738 = !DILocation(line: 3195, column: 15, scope: !16732)
!16739 = !DILocation(line: 3195, column: 31, scope: !16732)
!16740 = !DILocation(line: 3196, column: 4, scope: !16732)
!16741 = !DILocation(line: 3198, column: 23, scope: !16633)
!16742 = !DILocation(line: 3198, column: 27, scope: !16633)
!16743 = !DILocation(line: 3198, column: 10, scope: !16633)
!16744 = !DILocation(line: 3198, column: 8, scope: !16633)
!16745 = !DILocation(line: 3200, column: 12, scope: !16633)
!16746 = !DILocation(line: 3200, column: 4, scope: !16633)
!16747 = !DILocation(line: 3202, column: 9, scope: !16748)
!16748 = distinct !DILexicalBlock(scope: !16749, file: !3, line: 3202, column: 9)
!16749 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 3200, column: 17)
!16750 = !DILocation(line: 3202, column: 14, scope: !16748)
!16751 = !DILocation(line: 3202, column: 9, scope: !16749)
!16752 = !DILocation(line: 3203, column: 6, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16748, file: !3, line: 3202, column: 24)
!16754 = !DILocation(line: 3203, column: 11, scope: !16753)
!16755 = !DILocation(line: 3203, column: 21, scope: !16753)
!16756 = !DILocation(line: 3203, column: 28, scope: !16753)
!16757 = !DILocation(line: 3204, column: 6, scope: !16753)
!16758 = !DILocation(line: 3204, column: 11, scope: !16753)
!16759 = !DILocation(line: 3204, column: 21, scope: !16753)
!16760 = !DILocation(line: 3204, column: 31, scope: !16753)
!16761 = !DILocation(line: 3204, column: 36, scope: !16753)
!16762 = !DILocation(line: 3205, column: 5, scope: !16753)
!16763 = !DILocation(line: 3207, column: 17, scope: !16749)
!16764 = !DILocation(line: 3207, column: 21, scope: !16749)
!16765 = !DILocation(line: 3207, column: 5, scope: !16749)
!16766 = !DILocation(line: 3208, column: 5, scope: !16749)
!16767 = !DILocation(line: 3210, column: 9, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16749, file: !3, line: 3210, column: 9)
!16769 = !DILocation(line: 3210, column: 14, scope: !16768)
!16770 = !DILocation(line: 3210, column: 9, scope: !16749)
!16771 = !DILocation(line: 3211, column: 6, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 3210, column: 24)
!16773 = !DILocation(line: 3211, column: 11, scope: !16772)
!16774 = !DILocation(line: 3211, column: 21, scope: !16772)
!16775 = !DILocation(line: 3211, column: 28, scope: !16772)
!16776 = !DILocation(line: 3212, column: 6, scope: !16772)
!16777 = !DILocation(line: 3212, column: 11, scope: !16772)
!16778 = !DILocation(line: 3212, column: 21, scope: !16772)
!16779 = !DILocation(line: 3212, column: 31, scope: !16772)
!16780 = !DILocation(line: 3212, column: 36, scope: !16772)
!16781 = !DILocation(line: 3213, column: 5, scope: !16772)
!16782 = !DILocation(line: 3215, column: 17, scope: !16749)
!16783 = !DILocation(line: 3215, column: 21, scope: !16749)
!16784 = !DILocation(line: 3215, column: 5, scope: !16749)
!16785 = !DILocation(line: 3216, column: 5, scope: !16749)
!16786 = !DILocation(line: 3218, column: 5, scope: !16749)
!16787 = !DILocation(line: 3221, column: 4, scope: !16633)
!16788 = !DILocation(line: 3225, column: 6, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16594, file: !3, line: 3225, column: 6)
!16790 = !DILocation(line: 3225, column: 11, scope: !16789)
!16791 = !DILocation(line: 3225, column: 6, scope: !16594)
!16792 = !DILocation(line: 3226, column: 43, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 3225, column: 16)
!16794 = !DILocation(line: 3226, column: 48, scope: !16793)
!16795 = !DILocation(line: 3226, column: 40, scope: !16793)
!16796 = !DILocation(line: 3226, column: 36, scope: !16793)
!16797 = !DILocation(line: 3226, column: 3, scope: !16793)
!16798 = !DILocation(line: 3226, column: 7, scope: !16793)
!16799 = !DILocation(line: 3226, column: 19, scope: !16793)
!16800 = !DILocation(line: 3226, column: 24, scope: !16793)
!16801 = !DILocation(line: 3226, column: 28, scope: !16793)
!16802 = !DILocation(line: 3226, column: 33, scope: !16793)
!16803 = !DILocation(line: 3227, column: 2, scope: !16793)
!16804 = !DILocation(line: 3229, column: 2, scope: !16594)
!16805 = !DILocation(line: 3229, column: 7, scope: !16594)
!16806 = !DILocation(line: 3229, column: 17, scope: !16594)
!16807 = !DILocation(line: 3229, column: 27, scope: !16594)
!16808 = !DILocation(line: 3229, column: 32, scope: !16594)
!16809 = !DILocation(line: 3231, column: 14, scope: !16594)
!16810 = !DILocation(line: 3231, column: 18, scope: !16594)
!16811 = !DILocation(line: 3231, column: 2, scope: !16594)
!16812 = !DILocation(line: 3232, column: 1, scope: !16594)
!16813 = distinct !DISubprogram(name: "ips_cleanup_passthru", scope: !3, file: !3, line: 1985, type: !11270, scopeLine: 1986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16814 = !DILocalVariable(name: "ha", arg: 1, scope: !16813, file: !3, line: 1985, type: !5540)
!16815 = !DILocation(line: 1985, column: 33, scope: !16813)
!16816 = !DILocalVariable(name: "scb", arg: 2, scope: !16813, file: !3, line: 1985, type: !4848)
!16817 = !DILocation(line: 1985, column: 49, scope: !16813)
!16818 = !DILocalVariable(name: "pt", scope: !16813, file: !3, line: 1987, type: !6113)
!16819 = !DILocation(line: 1987, column: 18, scope: !16813)
!16820 = !DILocation(line: 1991, column: 8, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 1991, column: 6)
!16822 = !DILocation(line: 1991, column: 13, scope: !16821)
!16823 = !DILocation(line: 1991, column: 18, scope: !16821)
!16824 = !DILocation(line: 1991, column: 23, scope: !16821)
!16825 = !DILocation(line: 1991, column: 33, scope: !16821)
!16826 = !DILocation(line: 1991, column: 50, scope: !16821)
!16827 = !DILocation(line: 1991, column: 55, scope: !16821)
!16828 = !DILocation(line: 1991, column: 38, scope: !16821)
!16829 = !DILocation(line: 1991, column: 6, scope: !16813)
!16830 = !DILocation(line: 1995, column: 3, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16821, file: !3, line: 1991, column: 67)
!16832 = !DILocation(line: 1997, column: 26, scope: !16813)
!16833 = !DILocation(line: 1997, column: 30, scope: !16813)
!16834 = !DILocation(line: 1997, column: 7, scope: !16813)
!16835 = !DILocation(line: 1997, column: 5, scope: !16813)
!16836 = !DILocation(line: 2000, column: 6, scope: !16837)
!16837 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 2000, column: 6)
!16838 = !DILocation(line: 2000, column: 11, scope: !16837)
!16839 = !DILocation(line: 2000, column: 15, scope: !16837)
!16840 = !DILocation(line: 2000, column: 20, scope: !16837)
!16841 = !DILocation(line: 2000, column: 28, scope: !16837)
!16842 = !DILocation(line: 2000, column: 6, scope: !16813)
!16843 = !DILocation(line: 2001, column: 11, scope: !16837)
!16844 = !DILocation(line: 2001, column: 15, scope: !16837)
!16845 = !DILocation(line: 2001, column: 22, scope: !16837)
!16846 = !DILocation(line: 2001, column: 3, scope: !16837)
!16847 = !DILocation(line: 2001, column: 29, scope: !16837)
!16848 = !DILocation(line: 2001, column: 34, scope: !16837)
!16849 = !DILocation(line: 2003, column: 20, scope: !16813)
!16850 = !DILocation(line: 2003, column: 25, scope: !16813)
!16851 = !DILocation(line: 2003, column: 2, scope: !16813)
!16852 = !DILocation(line: 2003, column: 6, scope: !16813)
!16853 = !DILocation(line: 2003, column: 18, scope: !16813)
!16854 = !DILocation(line: 2004, column: 23, scope: !16813)
!16855 = !DILocation(line: 2004, column: 28, scope: !16813)
!16856 = !DILocation(line: 2004, column: 2, scope: !16813)
!16857 = !DILocation(line: 2004, column: 6, scope: !16813)
!16858 = !DILocation(line: 2004, column: 21, scope: !16813)
!16859 = !DILocation(line: 2005, column: 20, scope: !16813)
!16860 = !DILocation(line: 2005, column: 24, scope: !16813)
!16861 = !DILocation(line: 2005, column: 2, scope: !16813)
!16862 = !DILocation(line: 2005, column: 6, scope: !16813)
!16863 = !DILocation(line: 2005, column: 18, scope: !16813)
!16864 = !DILocation(line: 2007, column: 6, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 2007, column: 6)
!16866 = !DILocation(line: 2007, column: 10, scope: !16865)
!16867 = !DILocation(line: 2007, column: 18, scope: !16865)
!16868 = !DILocation(line: 2007, column: 25, scope: !16865)
!16869 = !DILocation(line: 2007, column: 52, scope: !16865)
!16870 = !DILocation(line: 2008, column: 7, scope: !16865)
!16871 = !DILocation(line: 2008, column: 12, scope: !16865)
!16872 = !DILocation(line: 2008, column: 16, scope: !16865)
!16873 = !DILocation(line: 2008, column: 24, scope: !16865)
!16874 = !DILocation(line: 2008, column: 32, scope: !16865)
!16875 = !DILocation(line: 2008, column: 52, scope: !16865)
!16876 = !DILocation(line: 2009, column: 7, scope: !16865)
!16877 = !DILocation(line: 2009, column: 12, scope: !16865)
!16878 = !DILocation(line: 2009, column: 16, scope: !16865)
!16879 = !DILocation(line: 2009, column: 24, scope: !16865)
!16880 = !DILocation(line: 2009, column: 32, scope: !16865)
!16881 = !DILocation(line: 2007, column: 6, scope: !16813)
!16882 = !DILocation(line: 2010, column: 29, scope: !16865)
!16883 = !DILocation(line: 2010, column: 3, scope: !16865)
!16884 = !DILocation(line: 2012, column: 21, scope: !16813)
!16885 = !DILocation(line: 2012, column: 26, scope: !16813)
!16886 = !DILocation(line: 2012, column: 36, scope: !16813)
!16887 = !DILocation(line: 2012, column: 40, scope: !16813)
!16888 = !DILocation(line: 2012, column: 52, scope: !16813)
!16889 = !DILocation(line: 2012, column: 56, scope: !16813)
!16890 = !DILocation(line: 2012, column: 2, scope: !16813)
!16891 = !DILocation(line: 2013, column: 1, scope: !16813)
!16892 = distinct !DISubprogram(name: "ips_ffdc_reset", scope: !3, file: !3, line: 5912, type: !14209, scopeLine: 5913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16893 = !DILocalVariable(name: "ha", arg: 1, scope: !16892, file: !3, line: 5912, type: !5540)
!16894 = !DILocation(line: 5912, column: 27, scope: !16892)
!16895 = !DILocalVariable(name: "intr", arg: 2, scope: !16892, file: !3, line: 5912, type: !182)
!16896 = !DILocation(line: 5912, column: 35, scope: !16892)
!16897 = !DILocalVariable(name: "scb", scope: !16892, file: !3, line: 5914, type: !4848)
!16898 = !DILocation(line: 5914, column: 13, scope: !16892)
!16899 = !DILocation(line: 5918, column: 9, scope: !16892)
!16900 = !DILocation(line: 5918, column: 13, scope: !16892)
!16901 = !DILocation(line: 5918, column: 18, scope: !16892)
!16902 = !DILocation(line: 5918, column: 22, scope: !16892)
!16903 = !DILocation(line: 5918, column: 31, scope: !16892)
!16904 = !DILocation(line: 5918, column: 6, scope: !16892)
!16905 = !DILocation(line: 5920, column: 15, scope: !16892)
!16906 = !DILocation(line: 5920, column: 19, scope: !16892)
!16907 = !DILocation(line: 5920, column: 2, scope: !16892)
!16908 = !DILocation(line: 5922, column: 17, scope: !16892)
!16909 = !DILocation(line: 5922, column: 2, scope: !16892)
!16910 = !DILocation(line: 5922, column: 7, scope: !16892)
!16911 = !DILocation(line: 5922, column: 15, scope: !16892)
!16912 = !DILocation(line: 5923, column: 2, scope: !16892)
!16913 = !DILocation(line: 5923, column: 7, scope: !16892)
!16914 = !DILocation(line: 5923, column: 14, scope: !16892)
!16915 = !DILocation(line: 5924, column: 2, scope: !16892)
!16916 = !DILocation(line: 5924, column: 7, scope: !16892)
!16917 = !DILocation(line: 5924, column: 11, scope: !16892)
!16918 = !DILocation(line: 5924, column: 16, scope: !16892)
!16919 = !DILocation(line: 5924, column: 24, scope: !16892)
!16920 = !DILocation(line: 5925, column: 29, scope: !16892)
!16921 = !DILocation(line: 5925, column: 2, scope: !16892)
!16922 = !DILocation(line: 5925, column: 7, scope: !16892)
!16923 = !DILocation(line: 5925, column: 11, scope: !16892)
!16924 = !DILocation(line: 5925, column: 16, scope: !16892)
!16925 = !DILocation(line: 5925, column: 27, scope: !16892)
!16926 = !DILocation(line: 5926, column: 30, scope: !16892)
!16927 = !DILocation(line: 5926, column: 34, scope: !16892)
!16928 = !DILocation(line: 5926, column: 2, scope: !16892)
!16929 = !DILocation(line: 5926, column: 7, scope: !16892)
!16930 = !DILocation(line: 5926, column: 11, scope: !16892)
!16931 = !DILocation(line: 5926, column: 16, scope: !16892)
!16932 = !DILocation(line: 5926, column: 28, scope: !16892)
!16933 = !DILocation(line: 5927, column: 2, scope: !16892)
!16934 = !DILocation(line: 5927, column: 7, scope: !16892)
!16935 = !DILocation(line: 5927, column: 11, scope: !16892)
!16936 = !DILocation(line: 5927, column: 16, scope: !16892)
!16937 = !DILocation(line: 5927, column: 27, scope: !16892)
!16938 = !DILocation(line: 5930, column: 20, scope: !16892)
!16939 = !DILocation(line: 5930, column: 24, scope: !16892)
!16940 = !DILocation(line: 5930, column: 29, scope: !16892)
!16941 = !DILocation(line: 5930, column: 33, scope: !16892)
!16942 = !DILocation(line: 5930, column: 2, scope: !16892)
!16943 = !DILocation(line: 5933, column: 16, scope: !16892)
!16944 = !DILocation(line: 5933, column: 20, scope: !16892)
!16945 = !DILocation(line: 5933, column: 25, scope: !16892)
!16946 = !DILocation(line: 5933, column: 42, scope: !16892)
!16947 = !DILocation(line: 5933, column: 2, scope: !16892)
!16948 = !DILocation(line: 5934, column: 1, scope: !16892)
!16949 = distinct !DISubprogram(name: "ips_read_config", scope: !3, file: !3, line: 5741, type: !8130, scopeLine: 5742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!16950 = !DILocalVariable(name: "ha", arg: 1, scope: !16949, file: !3, line: 5741, type: !5540)
!16951 = !DILocation(line: 5741, column: 28, scope: !16949)
!16952 = !DILocalVariable(name: "intr", arg: 2, scope: !16949, file: !3, line: 5741, type: !182)
!16953 = !DILocation(line: 5741, column: 36, scope: !16949)
!16954 = !DILocalVariable(name: "scb", scope: !16949, file: !3, line: 5743, type: !4848)
!16955 = !DILocation(line: 5743, column: 13, scope: !16949)
!16956 = !DILocalVariable(name: "i", scope: !16949, file: !3, line: 5744, type: !182)
!16957 = !DILocation(line: 5744, column: 6, scope: !16949)
!16958 = !DILocalVariable(name: "ret", scope: !16949, file: !3, line: 5745, type: !182)
!16959 = !DILocation(line: 5745, column: 6, scope: !16949)
!16960 = !DILocation(line: 5750, column: 9, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16949, file: !3, line: 5750, column: 2)
!16962 = !DILocation(line: 5750, column: 7, scope: !16961)
!16963 = !DILocation(line: 5750, column: 14, scope: !16964)
!16964 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 5750, column: 2)
!16965 = !DILocation(line: 5750, column: 16, scope: !16964)
!16966 = !DILocation(line: 5750, column: 2, scope: !16961)
!16967 = !DILocation(line: 5751, column: 3, scope: !16964)
!16968 = !DILocation(line: 5751, column: 7, scope: !16964)
!16969 = !DILocation(line: 5751, column: 13, scope: !16964)
!16970 = !DILocation(line: 5751, column: 21, scope: !16964)
!16971 = !DILocation(line: 5751, column: 24, scope: !16964)
!16972 = !DILocation(line: 5750, column: 22, scope: !16964)
!16973 = !DILocation(line: 5750, column: 2, scope: !16964)
!16974 = distinct !{!16974, !16966, !16975}
!16975 = !DILocation(line: 5751, column: 26, scope: !16961)
!16976 = !DILocation(line: 5753, column: 9, scope: !16949)
!16977 = !DILocation(line: 5753, column: 13, scope: !16949)
!16978 = !DILocation(line: 5753, column: 18, scope: !16949)
!16979 = !DILocation(line: 5753, column: 22, scope: !16949)
!16980 = !DILocation(line: 5753, column: 31, scope: !16949)
!16981 = !DILocation(line: 5753, column: 6, scope: !16949)
!16982 = !DILocation(line: 5755, column: 15, scope: !16949)
!16983 = !DILocation(line: 5755, column: 19, scope: !16949)
!16984 = !DILocation(line: 5755, column: 2, scope: !16949)
!16985 = !DILocation(line: 5757, column: 17, scope: !16949)
!16986 = !DILocation(line: 5757, column: 2, scope: !16949)
!16987 = !DILocation(line: 5757, column: 7, scope: !16949)
!16988 = !DILocation(line: 5757, column: 15, scope: !16949)
!16989 = !DILocation(line: 5758, column: 2, scope: !16949)
!16990 = !DILocation(line: 5758, column: 7, scope: !16949)
!16991 = !DILocation(line: 5758, column: 14, scope: !16949)
!16992 = !DILocation(line: 5760, column: 2, scope: !16949)
!16993 = !DILocation(line: 5760, column: 7, scope: !16949)
!16994 = !DILocation(line: 5760, column: 11, scope: !16949)
!16995 = !DILocation(line: 5760, column: 20, scope: !16949)
!16996 = !DILocation(line: 5760, column: 28, scope: !16949)
!16997 = !DILocation(line: 5761, column: 33, scope: !16949)
!16998 = !DILocation(line: 5761, column: 2, scope: !16949)
!16999 = !DILocation(line: 5761, column: 7, scope: !16949)
!17000 = !DILocation(line: 5761, column: 11, scope: !16949)
!17001 = !DILocation(line: 5761, column: 20, scope: !16949)
!17002 = !DILocation(line: 5761, column: 31, scope: !16949)
!17003 = !DILocation(line: 5762, column: 2, scope: !16949)
!17004 = !DILocation(line: 5762, column: 7, scope: !16949)
!17005 = !DILocation(line: 5762, column: 16, scope: !16949)
!17006 = !DILocation(line: 5763, column: 30, scope: !16949)
!17007 = !DILocation(line: 5763, column: 34, scope: !16949)
!17008 = !DILocation(line: 5763, column: 2, scope: !16949)
!17009 = !DILocation(line: 5763, column: 7, scope: !16949)
!17010 = !DILocation(line: 5763, column: 11, scope: !16949)
!17011 = !DILocation(line: 5763, column: 20, scope: !16949)
!17012 = !DILocation(line: 5763, column: 28, scope: !16949)
!17013 = !DILocation(line: 5767, column: 22, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !16949, file: !3, line: 5766, column: 6)
!17015 = !DILocation(line: 5767, column: 26, scope: !17014)
!17016 = !DILocation(line: 5767, column: 31, scope: !17014)
!17017 = !DILocation(line: 5767, column: 48, scope: !17014)
!17018 = !DILocation(line: 5767, column: 8, scope: !17014)
!17019 = !DILocation(line: 5766, column: 12, scope: !17014)
!17020 = !DILocation(line: 5767, column: 55, scope: !17014)
!17021 = !DILocation(line: 5768, column: 6, scope: !17014)
!17022 = !DILocation(line: 5768, column: 10, scope: !17014)
!17023 = !DILocation(line: 5768, column: 14, scope: !17014)
!17024 = !DILocation(line: 5769, column: 6, scope: !17014)
!17025 = !DILocation(line: 5769, column: 11, scope: !17014)
!17026 = !DILocation(line: 5769, column: 16, scope: !17014)
!17027 = !DILocation(line: 5769, column: 29, scope: !17014)
!17028 = !DILocation(line: 5769, column: 52, scope: !17014)
!17029 = !DILocation(line: 5766, column: 6, scope: !16949)
!17030 = !DILocation(line: 5771, column: 10, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17014, file: !3, line: 5769, column: 58)
!17032 = !DILocation(line: 5771, column: 14, scope: !17031)
!17033 = !DILocation(line: 5771, column: 3, scope: !17031)
!17034 = !DILocation(line: 5774, column: 10, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17031, file: !3, line: 5774, column: 3)
!17036 = !DILocation(line: 5774, column: 8, scope: !17035)
!17037 = !DILocation(line: 5774, column: 15, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17035, file: !3, line: 5774, column: 3)
!17039 = !DILocation(line: 5774, column: 17, scope: !17038)
!17040 = !DILocation(line: 5774, column: 3, scope: !17035)
!17041 = !DILocation(line: 5775, column: 4, scope: !17038)
!17042 = !DILocation(line: 5775, column: 8, scope: !17038)
!17043 = !DILocation(line: 5775, column: 14, scope: !17038)
!17044 = !DILocation(line: 5775, column: 22, scope: !17038)
!17045 = !DILocation(line: 5775, column: 25, scope: !17038)
!17046 = !DILocation(line: 5774, column: 23, scope: !17038)
!17047 = !DILocation(line: 5774, column: 3, scope: !17038)
!17048 = distinct !{!17048, !17040, !17049}
!17049 = !DILocation(line: 5775, column: 27, scope: !17035)
!17050 = !DILocation(line: 5778, column: 8, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !17031, file: !3, line: 5778, column: 7)
!17052 = !DILocation(line: 5778, column: 13, scope: !17051)
!17053 = !DILocation(line: 5778, column: 26, scope: !17051)
!17054 = !DILocation(line: 5778, column: 49, scope: !17051)
!17055 = !DILocation(line: 5778, column: 7, scope: !17031)
!17056 = !DILocation(line: 5780, column: 4, scope: !17051)
!17057 = !DILocation(line: 5782, column: 3, scope: !17031)
!17058 = !DILocation(line: 5785, column: 9, scope: !16949)
!17059 = !DILocation(line: 5785, column: 13, scope: !16949)
!17060 = !DILocation(line: 5785, column: 2, scope: !16949)
!17061 = !DILocation(line: 5785, column: 19, scope: !16949)
!17062 = !DILocation(line: 5785, column: 23, scope: !16949)
!17063 = !DILocation(line: 5786, column: 2, scope: !16949)
!17064 = !DILocation(line: 5787, column: 1, scope: !16949)
!17065 = distinct !DISubprogram(name: "ips_read_adapter_status", scope: !3, file: !3, line: 5654, type: !8130, scopeLine: 5655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17066 = !DILocalVariable(name: "ha", arg: 1, scope: !17065, file: !3, line: 5654, type: !5540)
!17067 = !DILocation(line: 5654, column: 36, scope: !17065)
!17068 = !DILocalVariable(name: "intr", arg: 2, scope: !17065, file: !3, line: 5654, type: !182)
!17069 = !DILocation(line: 5654, column: 44, scope: !17065)
!17070 = !DILocalVariable(name: "scb", scope: !17065, file: !3, line: 5656, type: !4848)
!17071 = !DILocation(line: 5656, column: 13, scope: !17065)
!17072 = !DILocalVariable(name: "ret", scope: !17065, file: !3, line: 5657, type: !182)
!17073 = !DILocation(line: 5657, column: 6, scope: !17065)
!17074 = !DILocation(line: 5661, column: 9, scope: !17065)
!17075 = !DILocation(line: 5661, column: 13, scope: !17065)
!17076 = !DILocation(line: 5661, column: 18, scope: !17065)
!17077 = !DILocation(line: 5661, column: 22, scope: !17065)
!17078 = !DILocation(line: 5661, column: 31, scope: !17065)
!17079 = !DILocation(line: 5661, column: 6, scope: !17065)
!17080 = !DILocation(line: 5663, column: 15, scope: !17065)
!17081 = !DILocation(line: 5663, column: 19, scope: !17065)
!17082 = !DILocation(line: 5663, column: 2, scope: !17065)
!17083 = !DILocation(line: 5665, column: 17, scope: !17065)
!17084 = !DILocation(line: 5665, column: 2, scope: !17065)
!17085 = !DILocation(line: 5665, column: 7, scope: !17065)
!17086 = !DILocation(line: 5665, column: 15, scope: !17065)
!17087 = !DILocation(line: 5666, column: 2, scope: !17065)
!17088 = !DILocation(line: 5666, column: 7, scope: !17065)
!17089 = !DILocation(line: 5666, column: 14, scope: !17065)
!17090 = !DILocation(line: 5668, column: 2, scope: !17065)
!17091 = !DILocation(line: 5668, column: 7, scope: !17065)
!17092 = !DILocation(line: 5668, column: 11, scope: !17065)
!17093 = !DILocation(line: 5668, column: 20, scope: !17065)
!17094 = !DILocation(line: 5668, column: 28, scope: !17065)
!17095 = !DILocation(line: 5669, column: 33, scope: !17065)
!17096 = !DILocation(line: 5669, column: 2, scope: !17065)
!17097 = !DILocation(line: 5669, column: 7, scope: !17065)
!17098 = !DILocation(line: 5669, column: 11, scope: !17065)
!17099 = !DILocation(line: 5669, column: 20, scope: !17065)
!17100 = !DILocation(line: 5669, column: 31, scope: !17065)
!17101 = !DILocation(line: 5670, column: 2, scope: !17065)
!17102 = !DILocation(line: 5670, column: 7, scope: !17065)
!17103 = !DILocation(line: 5670, column: 11, scope: !17065)
!17104 = !DILocation(line: 5670, column: 20, scope: !17065)
!17105 = !DILocation(line: 5670, column: 29, scope: !17065)
!17106 = !DILocation(line: 5671, column: 2, scope: !17065)
!17107 = !DILocation(line: 5671, column: 7, scope: !17065)
!17108 = !DILocation(line: 5671, column: 11, scope: !17065)
!17109 = !DILocation(line: 5671, column: 20, scope: !17065)
!17110 = !DILocation(line: 5671, column: 24, scope: !17065)
!17111 = !DILocation(line: 5672, column: 2, scope: !17065)
!17112 = !DILocation(line: 5672, column: 7, scope: !17065)
!17113 = !DILocation(line: 5672, column: 11, scope: !17065)
!17114 = !DILocation(line: 5672, column: 20, scope: !17065)
!17115 = !DILocation(line: 5672, column: 33, scope: !17065)
!17116 = !DILocation(line: 5673, column: 2, scope: !17065)
!17117 = !DILocation(line: 5673, column: 7, scope: !17065)
!17118 = !DILocation(line: 5673, column: 11, scope: !17065)
!17119 = !DILocation(line: 5673, column: 20, scope: !17065)
!17120 = !DILocation(line: 5673, column: 28, scope: !17065)
!17121 = !DILocation(line: 5674, column: 2, scope: !17065)
!17122 = !DILocation(line: 5674, column: 7, scope: !17065)
!17123 = !DILocation(line: 5674, column: 16, scope: !17065)
!17124 = !DILocation(line: 5675, column: 30, scope: !17065)
!17125 = !DILocation(line: 5675, column: 34, scope: !17065)
!17126 = !DILocation(line: 5675, column: 2, scope: !17065)
!17127 = !DILocation(line: 5675, column: 7, scope: !17065)
!17128 = !DILocation(line: 5675, column: 11, scope: !17065)
!17129 = !DILocation(line: 5675, column: 20, scope: !17065)
!17130 = !DILocation(line: 5675, column: 28, scope: !17065)
!17131 = !DILocation(line: 5679, column: 22, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17065, file: !3, line: 5678, column: 6)
!17133 = !DILocation(line: 5679, column: 26, scope: !17132)
!17134 = !DILocation(line: 5679, column: 31, scope: !17132)
!17135 = !DILocation(line: 5679, column: 48, scope: !17132)
!17136 = !DILocation(line: 5679, column: 8, scope: !17132)
!17137 = !DILocation(line: 5678, column: 12, scope: !17132)
!17138 = !DILocation(line: 5679, column: 55, scope: !17132)
!17139 = !DILocation(line: 5680, column: 6, scope: !17132)
!17140 = !DILocation(line: 5680, column: 10, scope: !17132)
!17141 = !DILocation(line: 5680, column: 14, scope: !17132)
!17142 = !DILocation(line: 5681, column: 6, scope: !17132)
!17143 = !DILocation(line: 5681, column: 11, scope: !17132)
!17144 = !DILocation(line: 5681, column: 16, scope: !17132)
!17145 = !DILocation(line: 5681, column: 29, scope: !17132)
!17146 = !DILocation(line: 5681, column: 52, scope: !17132)
!17147 = !DILocation(line: 5678, column: 6, scope: !17065)
!17148 = !DILocation(line: 5682, column: 3, scope: !17132)
!17149 = !DILocation(line: 5684, column: 2, scope: !17065)
!17150 = !DILocation(line: 5685, column: 1, scope: !17065)
!17151 = distinct !DISubprogram(name: "ips_identify_controller", scope: !3, file: !3, line: 2143, type: !7788, scopeLine: 2144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17152 = !DILocalVariable(name: "ha", arg: 1, scope: !17151, file: !3, line: 2143, type: !5540)
!17153 = !DILocation(line: 2143, column: 36, scope: !17151)
!17154 = !DILocation(line: 2147, column: 10, scope: !17151)
!17155 = !DILocation(line: 2147, column: 14, scope: !17151)
!17156 = !DILocation(line: 2147, column: 22, scope: !17151)
!17157 = !DILocation(line: 2147, column: 2, scope: !17151)
!17158 = !DILocation(line: 2149, column: 7, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17160, file: !3, line: 2149, column: 7)
!17160 = distinct !DILexicalBlock(scope: !17151, file: !3, line: 2147, column: 30)
!17161 = !DILocation(line: 2149, column: 11, scope: !17159)
!17162 = !DILocation(line: 2149, column: 19, scope: !17159)
!17163 = !DILocation(line: 2149, column: 28, scope: !17159)
!17164 = !DILocation(line: 2149, column: 7, scope: !17160)
!17165 = !DILocation(line: 2150, column: 4, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17159, file: !3, line: 2149, column: 52)
!17167 = !DILocation(line: 2150, column: 8, scope: !17166)
!17168 = !DILocation(line: 2150, column: 16, scope: !17166)
!17169 = !DILocation(line: 2151, column: 3, scope: !17166)
!17170 = !DILocation(line: 2151, column: 14, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17159, file: !3, line: 2151, column: 14)
!17172 = !DILocation(line: 2151, column: 18, scope: !17171)
!17173 = !DILocation(line: 2151, column: 26, scope: !17171)
!17174 = !DILocation(line: 2151, column: 35, scope: !17171)
!17175 = !DILocation(line: 2151, column: 14, scope: !17159)
!17176 = !DILocation(line: 2152, column: 4, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17171, file: !3, line: 2151, column: 60)
!17178 = !DILocation(line: 2152, column: 8, scope: !17177)
!17179 = !DILocation(line: 2152, column: 16, scope: !17177)
!17180 = !DILocation(line: 2153, column: 3, scope: !17177)
!17181 = !DILocation(line: 2153, column: 14, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17171, file: !3, line: 2153, column: 14)
!17183 = !DILocation(line: 2153, column: 18, scope: !17182)
!17184 = !DILocation(line: 2153, column: 26, scope: !17182)
!17185 = !DILocation(line: 2153, column: 35, scope: !17182)
!17186 = !DILocation(line: 2153, column: 14, scope: !17171)
!17187 = !DILocation(line: 2154, column: 4, scope: !17188)
!17188 = distinct !DILexicalBlock(scope: !17182, file: !3, line: 2153, column: 56)
!17189 = !DILocation(line: 2154, column: 8, scope: !17188)
!17190 = !DILocation(line: 2154, column: 16, scope: !17188)
!17191 = !DILocation(line: 2155, column: 3, scope: !17188)
!17192 = !DILocation(line: 2155, column: 15, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17182, file: !3, line: 2155, column: 14)
!17194 = !DILocation(line: 2155, column: 19, scope: !17193)
!17195 = !DILocation(line: 2155, column: 27, scope: !17193)
!17196 = !DILocation(line: 2155, column: 36, scope: !17193)
!17197 = !DILocation(line: 2156, column: 7, scope: !17193)
!17198 = !DILocation(line: 2156, column: 11, scope: !17193)
!17199 = !DILocation(line: 2156, column: 15, scope: !17193)
!17200 = !DILocation(line: 2156, column: 24, scope: !17193)
!17201 = !DILocation(line: 2155, column: 14, scope: !17182)
!17202 = !DILocation(line: 2157, column: 4, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17193, file: !3, line: 2156, column: 31)
!17204 = !DILocation(line: 2157, column: 8, scope: !17203)
!17205 = !DILocation(line: 2157, column: 16, scope: !17203)
!17206 = !DILocation(line: 2158, column: 3, scope: !17203)
!17207 = !DILocation(line: 2158, column: 15, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !17193, file: !3, line: 2158, column: 14)
!17209 = !DILocation(line: 2158, column: 19, scope: !17208)
!17210 = !DILocation(line: 2158, column: 27, scope: !17208)
!17211 = !DILocation(line: 2158, column: 36, scope: !17208)
!17212 = !DILocation(line: 2158, column: 61, scope: !17208)
!17213 = !DILocation(line: 2159, column: 8, scope: !17208)
!17214 = !DILocation(line: 2159, column: 12, scope: !17208)
!17215 = !DILocation(line: 2159, column: 20, scope: !17208)
!17216 = !DILocation(line: 2159, column: 29, scope: !17208)
!17217 = !DILocation(line: 2158, column: 14, scope: !17193)
!17218 = !DILocation(line: 2160, column: 8, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17220, file: !3, line: 2160, column: 8)
!17220 = distinct !DILexicalBlock(scope: !17208, file: !3, line: 2159, column: 55)
!17221 = !DILocation(line: 2160, column: 12, scope: !17219)
!17222 = !DILocation(line: 2160, column: 17, scope: !17219)
!17223 = !DILocation(line: 2160, column: 38, scope: !17219)
!17224 = !DILocation(line: 2160, column: 8, scope: !17220)
!17225 = !DILocation(line: 2161, column: 5, scope: !17219)
!17226 = !DILocation(line: 2161, column: 9, scope: !17219)
!17227 = !DILocation(line: 2161, column: 17, scope: !17219)
!17228 = !DILocation(line: 2163, column: 5, scope: !17219)
!17229 = !DILocation(line: 2163, column: 9, scope: !17219)
!17230 = !DILocation(line: 2163, column: 17, scope: !17219)
!17231 = !DILocation(line: 2164, column: 3, scope: !17220)
!17232 = !DILocation(line: 2164, column: 15, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17208, file: !3, line: 2164, column: 14)
!17234 = !DILocation(line: 2164, column: 19, scope: !17233)
!17235 = !DILocation(line: 2164, column: 27, scope: !17233)
!17236 = !DILocation(line: 2164, column: 36, scope: !17233)
!17237 = !DILocation(line: 2164, column: 61, scope: !17233)
!17238 = !DILocation(line: 2165, column: 8, scope: !17233)
!17239 = !DILocation(line: 2165, column: 12, scope: !17233)
!17240 = !DILocation(line: 2165, column: 20, scope: !17233)
!17241 = !DILocation(line: 2165, column: 29, scope: !17233)
!17242 = !DILocation(line: 2164, column: 14, scope: !17208)
!17243 = !DILocation(line: 2166, column: 4, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17233, file: !3, line: 2165, column: 55)
!17245 = !DILocation(line: 2166, column: 8, scope: !17244)
!17246 = !DILocation(line: 2166, column: 16, scope: !17244)
!17247 = !DILocation(line: 2167, column: 3, scope: !17244)
!17248 = !DILocation(line: 2168, column: 3, scope: !17160)
!17249 = !DILocation(line: 2171, column: 11, scope: !17160)
!17250 = !DILocation(line: 2171, column: 15, scope: !17160)
!17251 = !DILocation(line: 2171, column: 23, scope: !17160)
!17252 = !DILocation(line: 2171, column: 3, scope: !17160)
!17253 = !DILocation(line: 2173, column: 4, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17160, file: !3, line: 2171, column: 41)
!17255 = !DILocation(line: 2173, column: 8, scope: !17254)
!17256 = !DILocation(line: 2173, column: 16, scope: !17254)
!17257 = !DILocation(line: 2174, column: 4, scope: !17254)
!17258 = !DILocation(line: 2177, column: 4, scope: !17254)
!17259 = !DILocation(line: 2177, column: 8, scope: !17254)
!17260 = !DILocation(line: 2177, column: 16, scope: !17254)
!17261 = !DILocation(line: 2178, column: 4, scope: !17254)
!17262 = !DILocation(line: 2181, column: 4, scope: !17254)
!17263 = !DILocation(line: 2181, column: 8, scope: !17254)
!17264 = !DILocation(line: 2181, column: 16, scope: !17254)
!17265 = !DILocation(line: 2182, column: 4, scope: !17254)
!17266 = !DILocation(line: 2185, column: 4, scope: !17254)
!17267 = !DILocation(line: 2185, column: 8, scope: !17254)
!17268 = !DILocation(line: 2185, column: 16, scope: !17254)
!17269 = !DILocation(line: 2186, column: 4, scope: !17254)
!17270 = !DILocation(line: 2189, column: 4, scope: !17254)
!17271 = !DILocation(line: 2189, column: 8, scope: !17254)
!17272 = !DILocation(line: 2189, column: 16, scope: !17254)
!17273 = !DILocation(line: 2190, column: 4, scope: !17254)
!17274 = !DILocation(line: 2193, column: 4, scope: !17254)
!17275 = !DILocation(line: 2193, column: 8, scope: !17254)
!17276 = !DILocation(line: 2193, column: 16, scope: !17254)
!17277 = !DILocation(line: 2194, column: 4, scope: !17254)
!17278 = !DILocation(line: 2197, column: 3, scope: !17160)
!17279 = !DILocation(line: 2200, column: 11, scope: !17160)
!17280 = !DILocation(line: 2200, column: 15, scope: !17160)
!17281 = !DILocation(line: 2200, column: 23, scope: !17160)
!17282 = !DILocation(line: 2200, column: 3, scope: !17160)
!17283 = !DILocation(line: 2202, column: 4, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17160, file: !3, line: 2200, column: 41)
!17285 = !DILocation(line: 2202, column: 8, scope: !17284)
!17286 = !DILocation(line: 2202, column: 16, scope: !17284)
!17287 = !DILocation(line: 2203, column: 4, scope: !17284)
!17288 = !DILocation(line: 2205, column: 4, scope: !17284)
!17289 = !DILocation(line: 2205, column: 8, scope: !17284)
!17290 = !DILocation(line: 2205, column: 16, scope: !17284)
!17291 = !DILocation(line: 2206, column: 4, scope: !17284)
!17292 = !DILocation(line: 2208, column: 4, scope: !17284)
!17293 = !DILocation(line: 2208, column: 8, scope: !17284)
!17294 = !DILocation(line: 2208, column: 16, scope: !17284)
!17295 = !DILocation(line: 2209, column: 4, scope: !17284)
!17296 = !DILocation(line: 2211, column: 4, scope: !17284)
!17297 = !DILocation(line: 2211, column: 8, scope: !17284)
!17298 = !DILocation(line: 2211, column: 16, scope: !17284)
!17299 = !DILocation(line: 2212, column: 4, scope: !17284)
!17300 = !DILocation(line: 2214, column: 3, scope: !17160)
!17301 = !DILocation(line: 2216, column: 1, scope: !17151)
!17302 = distinct !DISubprogram(name: "ips_read_subsystem_parameters", scope: !3, file: !3, line: 5697, type: !8130, scopeLine: 5698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17303 = !DILocalVariable(name: "ha", arg: 1, scope: !17302, file: !3, line: 5697, type: !5540)
!17304 = !DILocation(line: 5697, column: 42, scope: !17302)
!17305 = !DILocalVariable(name: "intr", arg: 2, scope: !17302, file: !3, line: 5697, type: !182)
!17306 = !DILocation(line: 5697, column: 50, scope: !17302)
!17307 = !DILocalVariable(name: "scb", scope: !17302, file: !3, line: 5699, type: !4848)
!17308 = !DILocation(line: 5699, column: 13, scope: !17302)
!17309 = !DILocalVariable(name: "ret", scope: !17302, file: !3, line: 5700, type: !182)
!17310 = !DILocation(line: 5700, column: 6, scope: !17302)
!17311 = !DILocation(line: 5704, column: 9, scope: !17302)
!17312 = !DILocation(line: 5704, column: 13, scope: !17302)
!17313 = !DILocation(line: 5704, column: 18, scope: !17302)
!17314 = !DILocation(line: 5704, column: 22, scope: !17302)
!17315 = !DILocation(line: 5704, column: 31, scope: !17302)
!17316 = !DILocation(line: 5704, column: 6, scope: !17302)
!17317 = !DILocation(line: 5706, column: 15, scope: !17302)
!17318 = !DILocation(line: 5706, column: 19, scope: !17302)
!17319 = !DILocation(line: 5706, column: 2, scope: !17302)
!17320 = !DILocation(line: 5708, column: 17, scope: !17302)
!17321 = !DILocation(line: 5708, column: 2, scope: !17302)
!17322 = !DILocation(line: 5708, column: 7, scope: !17302)
!17323 = !DILocation(line: 5708, column: 15, scope: !17302)
!17324 = !DILocation(line: 5709, column: 2, scope: !17302)
!17325 = !DILocation(line: 5709, column: 7, scope: !17302)
!17326 = !DILocation(line: 5709, column: 14, scope: !17302)
!17327 = !DILocation(line: 5711, column: 2, scope: !17302)
!17328 = !DILocation(line: 5711, column: 7, scope: !17302)
!17329 = !DILocation(line: 5711, column: 11, scope: !17302)
!17330 = !DILocation(line: 5711, column: 20, scope: !17302)
!17331 = !DILocation(line: 5711, column: 28, scope: !17302)
!17332 = !DILocation(line: 5712, column: 33, scope: !17302)
!17333 = !DILocation(line: 5712, column: 2, scope: !17302)
!17334 = !DILocation(line: 5712, column: 7, scope: !17302)
!17335 = !DILocation(line: 5712, column: 11, scope: !17302)
!17336 = !DILocation(line: 5712, column: 20, scope: !17302)
!17337 = !DILocation(line: 5712, column: 31, scope: !17302)
!17338 = !DILocation(line: 5713, column: 2, scope: !17302)
!17339 = !DILocation(line: 5713, column: 7, scope: !17302)
!17340 = !DILocation(line: 5713, column: 11, scope: !17302)
!17341 = !DILocation(line: 5713, column: 20, scope: !17302)
!17342 = !DILocation(line: 5713, column: 29, scope: !17302)
!17343 = !DILocation(line: 5714, column: 2, scope: !17302)
!17344 = !DILocation(line: 5714, column: 7, scope: !17302)
!17345 = !DILocation(line: 5714, column: 11, scope: !17302)
!17346 = !DILocation(line: 5714, column: 20, scope: !17302)
!17347 = !DILocation(line: 5714, column: 24, scope: !17302)
!17348 = !DILocation(line: 5715, column: 2, scope: !17302)
!17349 = !DILocation(line: 5715, column: 7, scope: !17302)
!17350 = !DILocation(line: 5715, column: 11, scope: !17302)
!17351 = !DILocation(line: 5715, column: 20, scope: !17302)
!17352 = !DILocation(line: 5715, column: 33, scope: !17302)
!17353 = !DILocation(line: 5716, column: 2, scope: !17302)
!17354 = !DILocation(line: 5716, column: 7, scope: !17302)
!17355 = !DILocation(line: 5716, column: 11, scope: !17302)
!17356 = !DILocation(line: 5716, column: 20, scope: !17302)
!17357 = !DILocation(line: 5716, column: 28, scope: !17302)
!17358 = !DILocation(line: 5717, column: 2, scope: !17302)
!17359 = !DILocation(line: 5717, column: 7, scope: !17302)
!17360 = !DILocation(line: 5717, column: 16, scope: !17302)
!17361 = !DILocation(line: 5718, column: 30, scope: !17302)
!17362 = !DILocation(line: 5718, column: 34, scope: !17302)
!17363 = !DILocation(line: 5718, column: 2, scope: !17302)
!17364 = !DILocation(line: 5718, column: 7, scope: !17302)
!17365 = !DILocation(line: 5718, column: 11, scope: !17302)
!17366 = !DILocation(line: 5718, column: 20, scope: !17302)
!17367 = !DILocation(line: 5718, column: 28, scope: !17302)
!17368 = !DILocation(line: 5722, column: 22, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17302, file: !3, line: 5721, column: 6)
!17370 = !DILocation(line: 5722, column: 26, scope: !17369)
!17371 = !DILocation(line: 5722, column: 31, scope: !17369)
!17372 = !DILocation(line: 5722, column: 48, scope: !17369)
!17373 = !DILocation(line: 5722, column: 8, scope: !17369)
!17374 = !DILocation(line: 5721, column: 12, scope: !17369)
!17375 = !DILocation(line: 5722, column: 55, scope: !17369)
!17376 = !DILocation(line: 5723, column: 6, scope: !17369)
!17377 = !DILocation(line: 5723, column: 10, scope: !17369)
!17378 = !DILocation(line: 5723, column: 14, scope: !17369)
!17379 = !DILocation(line: 5724, column: 6, scope: !17369)
!17380 = !DILocation(line: 5724, column: 11, scope: !17369)
!17381 = !DILocation(line: 5724, column: 16, scope: !17369)
!17382 = !DILocation(line: 5724, column: 29, scope: !17369)
!17383 = !DILocation(line: 5724, column: 52, scope: !17369)
!17384 = !DILocation(line: 5721, column: 6, scope: !17302)
!17385 = !DILocation(line: 5725, column: 3, scope: !17369)
!17386 = !DILocation(line: 5727, column: 9, scope: !17302)
!17387 = !DILocation(line: 5727, column: 13, scope: !17302)
!17388 = !DILocation(line: 5727, column: 2, scope: !17302)
!17389 = !DILocation(line: 5727, column: 21, scope: !17302)
!17390 = !DILocation(line: 5727, column: 25, scope: !17302)
!17391 = !DILocation(line: 5728, column: 2, scope: !17302)
!17392 = !DILocation(line: 5729, column: 1, scope: !17302)
!17393 = distinct !DISubprogram(name: "ips_write_driver_status", scope: !3, file: !3, line: 5589, type: !8130, scopeLine: 5590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17394 = !DILocalVariable(name: "ha", arg: 1, scope: !17393, file: !3, line: 5589, type: !5540)
!17395 = !DILocation(line: 5589, column: 36, scope: !17393)
!17396 = !DILocalVariable(name: "intr", arg: 2, scope: !17393, file: !3, line: 5589, type: !182)
!17397 = !DILocation(line: 5589, column: 44, scope: !17393)
!17398 = !DILocation(line: 5593, column: 27, scope: !17399)
!17399 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 5593, column: 6)
!17400 = !DILocation(line: 5593, column: 38, scope: !17399)
!17401 = !DILocation(line: 5593, column: 7, scope: !17399)
!17402 = !DILocation(line: 5593, column: 6, scope: !17393)
!17403 = !DILocation(line: 5594, column: 3, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17399, file: !3, line: 5593, column: 45)
!17405 = !DILocation(line: 5597, column: 3, scope: !17404)
!17406 = !DILocation(line: 5602, column: 6, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 5602, column: 6)
!17408 = !DILocation(line: 5602, column: 40, scope: !17407)
!17409 = !DILocation(line: 5602, column: 6, scope: !17393)
!17410 = !DILocation(line: 5606, column: 3, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17407, file: !3, line: 5602, column: 61)
!17412 = !DILocation(line: 5606, column: 7, scope: !17411)
!17413 = !DILocation(line: 5606, column: 14, scope: !17411)
!17414 = !DILocation(line: 5606, column: 24, scope: !17411)
!17415 = !DILocation(line: 5607, column: 2, scope: !17411)
!17416 = !DILocation(line: 5618, column: 23, scope: !17393)
!17417 = !DILocation(line: 5618, column: 27, scope: !17393)
!17418 = !DILocation(line: 5618, column: 2, scope: !17393)
!17419 = !DILocation(line: 5621, column: 2, scope: !17393)
!17420 = !DILocation(line: 5621, column: 6, scope: !17393)
!17421 = !DILocation(line: 5621, column: 13, scope: !17393)
!17422 = !DILocation(line: 5621, column: 30, scope: !17393)
!17423 = !DILocation(line: 5622, column: 28, scope: !17393)
!17424 = !DILocation(line: 5622, column: 32, scope: !17393)
!17425 = !DILocation(line: 5622, column: 2, scope: !17393)
!17426 = !DILocation(line: 5622, column: 6, scope: !17393)
!17427 = !DILocation(line: 5622, column: 13, scope: !17393)
!17428 = !DILocation(line: 5622, column: 26, scope: !17393)
!17429 = !DILocation(line: 5623, column: 18, scope: !17393)
!17430 = !DILocation(line: 5623, column: 22, scope: !17393)
!17431 = !DILocation(line: 5623, column: 29, scope: !17393)
!17432 = !DILocation(line: 5623, column: 2, scope: !17393)
!17433 = !DILocation(line: 5624, column: 18, scope: !17393)
!17434 = !DILocation(line: 5624, column: 22, scope: !17393)
!17435 = !DILocation(line: 5624, column: 29, scope: !17393)
!17436 = !DILocation(line: 5624, column: 2, scope: !17393)
!17437 = !DILocation(line: 5625, column: 18, scope: !17393)
!17438 = !DILocation(line: 5625, column: 22, scope: !17393)
!17439 = !DILocation(line: 5625, column: 29, scope: !17393)
!17440 = !DILocation(line: 5625, column: 2, scope: !17393)
!17441 = !DILocation(line: 5625, column: 40, scope: !17393)
!17442 = !DILocation(line: 5625, column: 44, scope: !17393)
!17443 = !DILocation(line: 5626, column: 18, scope: !17393)
!17444 = !DILocation(line: 5626, column: 22, scope: !17393)
!17445 = !DILocation(line: 5626, column: 29, scope: !17393)
!17446 = !DILocation(line: 5626, column: 2, scope: !17393)
!17447 = !DILocation(line: 5626, column: 39, scope: !17393)
!17448 = !DILocation(line: 5626, column: 43, scope: !17393)
!17449 = !DILocation(line: 5626, column: 56, scope: !17393)
!17450 = !DILocation(line: 5628, column: 2, scope: !17393)
!17451 = !DILocation(line: 5628, column: 6, scope: !17393)
!17452 = !DILocation(line: 5628, column: 13, scope: !17393)
!17453 = !DILocation(line: 5628, column: 24, scope: !17393)
!17454 = !DILocation(line: 5631, column: 27, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 5631, column: 6)
!17456 = !DILocation(line: 5631, column: 37, scope: !17455)
!17457 = !DILocation(line: 5631, column: 7, scope: !17455)
!17458 = !DILocation(line: 5631, column: 6, scope: !17393)
!17459 = !DILocation(line: 5632, column: 3, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17455, file: !3, line: 5631, column: 44)
!17461 = !DILocation(line: 5635, column: 3, scope: !17460)
!17462 = !DILocation(line: 5639, column: 17, scope: !17393)
!17463 = !DILocation(line: 5639, column: 21, scope: !17393)
!17464 = !DILocation(line: 5639, column: 28, scope: !17393)
!17465 = !DILocation(line: 5639, column: 2, scope: !17393)
!17466 = !DILocation(line: 5639, column: 6, scope: !17393)
!17467 = !DILocation(line: 5639, column: 15, scope: !17393)
!17468 = !DILocation(line: 5641, column: 2, scope: !17393)
!17469 = !DILocation(line: 5642, column: 1, scope: !17393)
!17470 = distinct !DISubprogram(name: "ips_clear_adapter", scope: !3, file: !3, line: 5849, type: !8130, scopeLine: 5850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17471 = !DILocalVariable(name: "ha", arg: 1, scope: !17470, file: !3, line: 5849, type: !5540)
!17472 = !DILocation(line: 5849, column: 30, scope: !17470)
!17473 = !DILocalVariable(name: "intr", arg: 2, scope: !17470, file: !3, line: 5849, type: !182)
!17474 = !DILocation(line: 5849, column: 38, scope: !17470)
!17475 = !DILocalVariable(name: "scb", scope: !17470, file: !3, line: 5851, type: !4848)
!17476 = !DILocation(line: 5851, column: 13, scope: !17470)
!17477 = !DILocalVariable(name: "ret", scope: !17470, file: !3, line: 5852, type: !182)
!17478 = !DILocation(line: 5852, column: 6, scope: !17470)
!17479 = !DILocation(line: 5856, column: 9, scope: !17470)
!17480 = !DILocation(line: 5856, column: 13, scope: !17470)
!17481 = !DILocation(line: 5856, column: 18, scope: !17470)
!17482 = !DILocation(line: 5856, column: 22, scope: !17470)
!17483 = !DILocation(line: 5856, column: 31, scope: !17470)
!17484 = !DILocation(line: 5856, column: 6, scope: !17470)
!17485 = !DILocation(line: 5858, column: 15, scope: !17470)
!17486 = !DILocation(line: 5858, column: 19, scope: !17470)
!17487 = !DILocation(line: 5858, column: 2, scope: !17470)
!17488 = !DILocation(line: 5860, column: 17, scope: !17470)
!17489 = !DILocation(line: 5860, column: 2, scope: !17470)
!17490 = !DILocation(line: 5860, column: 7, scope: !17470)
!17491 = !DILocation(line: 5860, column: 15, scope: !17470)
!17492 = !DILocation(line: 5861, column: 2, scope: !17470)
!17493 = !DILocation(line: 5861, column: 7, scope: !17470)
!17494 = !DILocation(line: 5861, column: 14, scope: !17470)
!17495 = !DILocation(line: 5863, column: 2, scope: !17470)
!17496 = !DILocation(line: 5863, column: 7, scope: !17470)
!17497 = !DILocation(line: 5863, column: 11, scope: !17470)
!17498 = !DILocation(line: 5863, column: 23, scope: !17470)
!17499 = !DILocation(line: 5863, column: 31, scope: !17470)
!17500 = !DILocation(line: 5864, column: 36, scope: !17470)
!17501 = !DILocation(line: 5864, column: 2, scope: !17470)
!17502 = !DILocation(line: 5864, column: 7, scope: !17470)
!17503 = !DILocation(line: 5864, column: 11, scope: !17470)
!17504 = !DILocation(line: 5864, column: 23, scope: !17470)
!17505 = !DILocation(line: 5864, column: 34, scope: !17470)
!17506 = !DILocation(line: 5865, column: 2, scope: !17470)
!17507 = !DILocation(line: 5865, column: 7, scope: !17470)
!17508 = !DILocation(line: 5865, column: 11, scope: !17470)
!17509 = !DILocation(line: 5865, column: 23, scope: !17470)
!17510 = !DILocation(line: 5865, column: 31, scope: !17470)
!17511 = !DILocation(line: 5866, column: 2, scope: !17470)
!17512 = !DILocation(line: 5866, column: 7, scope: !17470)
!17513 = !DILocation(line: 5866, column: 11, scope: !17470)
!17514 = !DILocation(line: 5866, column: 23, scope: !17470)
!17515 = !DILocation(line: 5866, column: 37, scope: !17470)
!17516 = !DILocation(line: 5867, column: 2, scope: !17470)
!17517 = !DILocation(line: 5867, column: 7, scope: !17470)
!17518 = !DILocation(line: 5867, column: 11, scope: !17470)
!17519 = !DILocation(line: 5867, column: 23, scope: !17470)
!17520 = !DILocation(line: 5867, column: 32, scope: !17470)
!17521 = !DILocation(line: 5868, column: 2, scope: !17470)
!17522 = !DILocation(line: 5868, column: 7, scope: !17470)
!17523 = !DILocation(line: 5868, column: 11, scope: !17470)
!17524 = !DILocation(line: 5868, column: 23, scope: !17470)
!17525 = !DILocation(line: 5868, column: 33, scope: !17470)
!17526 = !DILocation(line: 5869, column: 2, scope: !17470)
!17527 = !DILocation(line: 5869, column: 7, scope: !17470)
!17528 = !DILocation(line: 5869, column: 11, scope: !17470)
!17529 = !DILocation(line: 5869, column: 23, scope: !17470)
!17530 = !DILocation(line: 5869, column: 33, scope: !17470)
!17531 = !DILocation(line: 5873, column: 22, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17470, file: !3, line: 5872, column: 6)
!17533 = !DILocation(line: 5873, column: 26, scope: !17532)
!17534 = !DILocation(line: 5873, column: 31, scope: !17532)
!17535 = !DILocation(line: 5873, column: 50, scope: !17532)
!17536 = !DILocation(line: 5873, column: 8, scope: !17532)
!17537 = !DILocation(line: 5872, column: 12, scope: !17532)
!17538 = !DILocation(line: 5873, column: 57, scope: !17532)
!17539 = !DILocation(line: 5874, column: 6, scope: !17532)
!17540 = !DILocation(line: 5874, column: 10, scope: !17532)
!17541 = !DILocation(line: 5874, column: 14, scope: !17532)
!17542 = !DILocation(line: 5875, column: 6, scope: !17532)
!17543 = !DILocation(line: 5875, column: 11, scope: !17532)
!17544 = !DILocation(line: 5875, column: 16, scope: !17532)
!17545 = !DILocation(line: 5875, column: 29, scope: !17532)
!17546 = !DILocation(line: 5875, column: 52, scope: !17532)
!17547 = !DILocation(line: 5872, column: 6, scope: !17470)
!17548 = !DILocation(line: 5876, column: 3, scope: !17532)
!17549 = !DILocation(line: 5879, column: 15, scope: !17470)
!17550 = !DILocation(line: 5879, column: 19, scope: !17470)
!17551 = !DILocation(line: 5879, column: 2, scope: !17470)
!17552 = !DILocation(line: 5881, column: 2, scope: !17470)
!17553 = !DILocation(line: 5881, column: 7, scope: !17470)
!17554 = !DILocation(line: 5881, column: 14, scope: !17470)
!17555 = !DILocation(line: 5882, column: 17, scope: !17470)
!17556 = !DILocation(line: 5882, column: 2, scope: !17470)
!17557 = !DILocation(line: 5882, column: 7, scope: !17470)
!17558 = !DILocation(line: 5882, column: 15, scope: !17470)
!17559 = !DILocation(line: 5884, column: 2, scope: !17470)
!17560 = !DILocation(line: 5884, column: 7, scope: !17470)
!17561 = !DILocation(line: 5884, column: 11, scope: !17470)
!17562 = !DILocation(line: 5884, column: 25, scope: !17470)
!17563 = !DILocation(line: 5884, column: 33, scope: !17470)
!17564 = !DILocation(line: 5885, column: 38, scope: !17470)
!17565 = !DILocation(line: 5885, column: 2, scope: !17470)
!17566 = !DILocation(line: 5885, column: 7, scope: !17470)
!17567 = !DILocation(line: 5885, column: 11, scope: !17470)
!17568 = !DILocation(line: 5885, column: 25, scope: !17470)
!17569 = !DILocation(line: 5885, column: 36, scope: !17470)
!17570 = !DILocation(line: 5886, column: 2, scope: !17470)
!17571 = !DILocation(line: 5886, column: 7, scope: !17470)
!17572 = !DILocation(line: 5886, column: 11, scope: !17470)
!17573 = !DILocation(line: 5886, column: 25, scope: !17470)
!17574 = !DILocation(line: 5886, column: 33, scope: !17470)
!17575 = !DILocation(line: 5887, column: 2, scope: !17470)
!17576 = !DILocation(line: 5887, column: 7, scope: !17470)
!17577 = !DILocation(line: 5887, column: 11, scope: !17470)
!17578 = !DILocation(line: 5887, column: 25, scope: !17470)
!17579 = !DILocation(line: 5887, column: 33, scope: !17470)
!17580 = !DILocation(line: 5888, column: 2, scope: !17470)
!17581 = !DILocation(line: 5888, column: 7, scope: !17470)
!17582 = !DILocation(line: 5888, column: 11, scope: !17470)
!17583 = !DILocation(line: 5888, column: 25, scope: !17470)
!17584 = !DILocation(line: 5888, column: 34, scope: !17470)
!17585 = !DILocation(line: 5889, column: 2, scope: !17470)
!17586 = !DILocation(line: 5889, column: 7, scope: !17470)
!17587 = !DILocation(line: 5889, column: 11, scope: !17470)
!17588 = !DILocation(line: 5889, column: 25, scope: !17470)
!17589 = !DILocation(line: 5889, column: 35, scope: !17470)
!17590 = !DILocation(line: 5890, column: 2, scope: !17470)
!17591 = !DILocation(line: 5890, column: 7, scope: !17470)
!17592 = !DILocation(line: 5890, column: 11, scope: !17470)
!17593 = !DILocation(line: 5890, column: 25, scope: !17470)
!17594 = !DILocation(line: 5890, column: 35, scope: !17470)
!17595 = !DILocation(line: 5894, column: 22, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17470, file: !3, line: 5893, column: 6)
!17597 = !DILocation(line: 5894, column: 26, scope: !17596)
!17598 = !DILocation(line: 5894, column: 31, scope: !17596)
!17599 = !DILocation(line: 5894, column: 48, scope: !17596)
!17600 = !DILocation(line: 5894, column: 8, scope: !17596)
!17601 = !DILocation(line: 5893, column: 12, scope: !17596)
!17602 = !DILocation(line: 5894, column: 55, scope: !17596)
!17603 = !DILocation(line: 5895, column: 6, scope: !17596)
!17604 = !DILocation(line: 5895, column: 10, scope: !17596)
!17605 = !DILocation(line: 5895, column: 14, scope: !17596)
!17606 = !DILocation(line: 5896, column: 6, scope: !17596)
!17607 = !DILocation(line: 5896, column: 11, scope: !17596)
!17608 = !DILocation(line: 5896, column: 16, scope: !17596)
!17609 = !DILocation(line: 5896, column: 29, scope: !17596)
!17610 = !DILocation(line: 5896, column: 52, scope: !17596)
!17611 = !DILocation(line: 5893, column: 6, scope: !17470)
!17612 = !DILocation(line: 5897, column: 3, scope: !17596)
!17613 = !DILocation(line: 5899, column: 2, scope: !17470)
!17614 = !DILocation(line: 5900, column: 1, scope: !17470)
!17615 = distinct !DISubprogram(name: "ips_readwrite_page5", scope: !3, file: !3, line: 5799, type: !15458, scopeLine: 5800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17616 = !DILocalVariable(name: "ha", arg: 1, scope: !17615, file: !3, line: 5799, type: !5540)
!17617 = !DILocation(line: 5799, column: 32, scope: !17615)
!17618 = !DILocalVariable(name: "write", arg: 2, scope: !17615, file: !3, line: 5799, type: !182)
!17619 = !DILocation(line: 5799, column: 40, scope: !17615)
!17620 = !DILocalVariable(name: "intr", arg: 3, scope: !17615, file: !3, line: 5799, type: !182)
!17621 = !DILocation(line: 5799, column: 51, scope: !17615)
!17622 = !DILocalVariable(name: "scb", scope: !17615, file: !3, line: 5801, type: !4848)
!17623 = !DILocation(line: 5801, column: 13, scope: !17615)
!17624 = !DILocalVariable(name: "ret", scope: !17615, file: !3, line: 5802, type: !182)
!17625 = !DILocation(line: 5802, column: 6, scope: !17615)
!17626 = !DILocation(line: 5806, column: 9, scope: !17615)
!17627 = !DILocation(line: 5806, column: 13, scope: !17615)
!17628 = !DILocation(line: 5806, column: 18, scope: !17615)
!17629 = !DILocation(line: 5806, column: 22, scope: !17615)
!17630 = !DILocation(line: 5806, column: 31, scope: !17615)
!17631 = !DILocation(line: 5806, column: 6, scope: !17615)
!17632 = !DILocation(line: 5808, column: 15, scope: !17615)
!17633 = !DILocation(line: 5808, column: 19, scope: !17615)
!17634 = !DILocation(line: 5808, column: 2, scope: !17615)
!17635 = !DILocation(line: 5810, column: 17, scope: !17615)
!17636 = !DILocation(line: 5810, column: 2, scope: !17615)
!17637 = !DILocation(line: 5810, column: 7, scope: !17615)
!17638 = !DILocation(line: 5810, column: 15, scope: !17615)
!17639 = !DILocation(line: 5811, column: 2, scope: !17615)
!17640 = !DILocation(line: 5811, column: 7, scope: !17615)
!17641 = !DILocation(line: 5811, column: 14, scope: !17615)
!17642 = !DILocation(line: 5813, column: 2, scope: !17615)
!17643 = !DILocation(line: 5813, column: 7, scope: !17615)
!17644 = !DILocation(line: 5813, column: 11, scope: !17615)
!17645 = !DILocation(line: 5813, column: 17, scope: !17615)
!17646 = !DILocation(line: 5813, column: 25, scope: !17615)
!17647 = !DILocation(line: 5814, column: 30, scope: !17615)
!17648 = !DILocation(line: 5814, column: 2, scope: !17615)
!17649 = !DILocation(line: 5814, column: 7, scope: !17615)
!17650 = !DILocation(line: 5814, column: 11, scope: !17615)
!17651 = !DILocation(line: 5814, column: 17, scope: !17615)
!17652 = !DILocation(line: 5814, column: 28, scope: !17615)
!17653 = !DILocation(line: 5815, column: 2, scope: !17615)
!17654 = !DILocation(line: 5815, column: 7, scope: !17615)
!17655 = !DILocation(line: 5815, column: 11, scope: !17615)
!17656 = !DILocation(line: 5815, column: 17, scope: !17615)
!17657 = !DILocation(line: 5815, column: 22, scope: !17615)
!17658 = !DILocation(line: 5816, column: 25, scope: !17615)
!17659 = !DILocation(line: 5816, column: 2, scope: !17615)
!17660 = !DILocation(line: 5816, column: 7, scope: !17615)
!17661 = !DILocation(line: 5816, column: 11, scope: !17615)
!17662 = !DILocation(line: 5816, column: 17, scope: !17615)
!17663 = !DILocation(line: 5816, column: 23, scope: !17615)
!17664 = !DILocation(line: 5817, column: 2, scope: !17615)
!17665 = !DILocation(line: 5817, column: 7, scope: !17615)
!17666 = !DILocation(line: 5817, column: 11, scope: !17615)
!17667 = !DILocation(line: 5817, column: 17, scope: !17615)
!17668 = !DILocation(line: 5817, column: 26, scope: !17615)
!17669 = !DILocation(line: 5818, column: 2, scope: !17615)
!17670 = !DILocation(line: 5818, column: 7, scope: !17615)
!17671 = !DILocation(line: 5818, column: 11, scope: !17615)
!17672 = !DILocation(line: 5818, column: 17, scope: !17615)
!17673 = !DILocation(line: 5818, column: 27, scope: !17615)
!17674 = !DILocation(line: 5819, column: 2, scope: !17615)
!17675 = !DILocation(line: 5819, column: 7, scope: !17615)
!17676 = !DILocation(line: 5819, column: 16, scope: !17615)
!17677 = !DILocation(line: 5820, column: 31, scope: !17615)
!17678 = !DILocation(line: 5820, column: 35, scope: !17615)
!17679 = !DILocation(line: 5820, column: 2, scope: !17615)
!17680 = !DILocation(line: 5820, column: 7, scope: !17615)
!17681 = !DILocation(line: 5820, column: 11, scope: !17615)
!17682 = !DILocation(line: 5820, column: 17, scope: !17615)
!17683 = !DILocation(line: 5820, column: 29, scope: !17615)
!17684 = !DILocation(line: 5821, column: 6, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 5821, column: 6)
!17686 = !DILocation(line: 5821, column: 6, scope: !17615)
!17687 = !DILocation(line: 5822, column: 10, scope: !17685)
!17688 = !DILocation(line: 5822, column: 14, scope: !17685)
!17689 = !DILocation(line: 5822, column: 26, scope: !17685)
!17690 = !DILocation(line: 5822, column: 30, scope: !17685)
!17691 = !DILocation(line: 5822, column: 3, scope: !17685)
!17692 = !DILocation(line: 5826, column: 22, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 5825, column: 6)
!17694 = !DILocation(line: 5826, column: 26, scope: !17693)
!17695 = !DILocation(line: 5826, column: 31, scope: !17693)
!17696 = !DILocation(line: 5826, column: 48, scope: !17693)
!17697 = !DILocation(line: 5826, column: 8, scope: !17693)
!17698 = !DILocation(line: 5825, column: 12, scope: !17693)
!17699 = !DILocation(line: 5826, column: 55, scope: !17693)
!17700 = !DILocation(line: 5827, column: 6, scope: !17693)
!17701 = !DILocation(line: 5827, column: 10, scope: !17693)
!17702 = !DILocation(line: 5827, column: 14, scope: !17693)
!17703 = !DILocation(line: 5828, column: 6, scope: !17693)
!17704 = !DILocation(line: 5828, column: 11, scope: !17693)
!17705 = !DILocation(line: 5828, column: 16, scope: !17693)
!17706 = !DILocation(line: 5828, column: 29, scope: !17693)
!17707 = !DILocation(line: 5828, column: 52, scope: !17693)
!17708 = !DILocation(line: 5825, column: 6, scope: !17615)
!17709 = !DILocation(line: 5830, column: 10, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17693, file: !3, line: 5828, column: 58)
!17711 = !DILocation(line: 5830, column: 14, scope: !17710)
!17712 = !DILocation(line: 5830, column: 3, scope: !17710)
!17713 = !DILocation(line: 5832, column: 3, scope: !17710)
!17714 = !DILocation(line: 5834, column: 7, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 5834, column: 6)
!17716 = !DILocation(line: 5834, column: 6, scope: !17615)
!17717 = !DILocation(line: 5835, column: 10, scope: !17715)
!17718 = !DILocation(line: 5835, column: 14, scope: !17715)
!17719 = !DILocation(line: 5835, column: 3, scope: !17715)
!17720 = !DILocation(line: 5835, column: 21, scope: !17715)
!17721 = !DILocation(line: 5835, column: 25, scope: !17715)
!17722 = !DILocation(line: 5836, column: 2, scope: !17615)
!17723 = !DILocation(line: 5837, column: 1, scope: !17615)
!17724 = distinct !DISubprogram(name: "ips_get_bios_version", scope: !3, file: !3, line: 2228, type: !14209, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!17725 = !DILocalVariable(name: "ha", arg: 1, scope: !17724, file: !3, line: 2228, type: !5540)
!17726 = !DILocation(line: 2228, column: 33, scope: !17724)
!17727 = !DILocalVariable(name: "intr", arg: 2, scope: !17724, file: !3, line: 2228, type: !182)
!17728 = !DILocation(line: 2228, column: 41, scope: !17724)
!17729 = !DILocalVariable(name: "scb", scope: !17724, file: !3, line: 2230, type: !4848)
!17730 = !DILocation(line: 2230, column: 13, scope: !17724)
!17731 = !DILocalVariable(name: "ret", scope: !17724, file: !3, line: 2231, type: !182)
!17732 = !DILocation(line: 2231, column: 6, scope: !17724)
!17733 = !DILocalVariable(name: "major", scope: !17724, file: !3, line: 2232, type: !205)
!17734 = !DILocation(line: 2232, column: 10, scope: !17724)
!17735 = !DILocalVariable(name: "minor", scope: !17724, file: !3, line: 2233, type: !205)
!17736 = !DILocation(line: 2233, column: 10, scope: !17724)
!17737 = !DILocalVariable(name: "subminor", scope: !17724, file: !3, line: 2234, type: !205)
!17738 = !DILocation(line: 2234, column: 10, scope: !17724)
!17739 = !DILocalVariable(name: "buffer", scope: !17724, file: !3, line: 2235, type: !6121)
!17740 = !DILocation(line: 2235, column: 11, scope: !17724)
!17741 = !DILocation(line: 2239, column: 8, scope: !17724)
!17742 = !DILocation(line: 2240, column: 8, scope: !17724)
!17743 = !DILocation(line: 2242, column: 9, scope: !17724)
!17744 = !DILocation(line: 2242, column: 13, scope: !17724)
!17745 = !DILocation(line: 2242, column: 2, scope: !17724)
!17746 = !DILocation(line: 2244, column: 6, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17724, file: !3, line: 2244, column: 6)
!17748 = !DILocation(line: 2244, column: 10, scope: !17747)
!17749 = !DILocation(line: 2244, column: 18, scope: !17747)
!17750 = !DILocation(line: 2244, column: 25, scope: !17747)
!17751 = !DILocation(line: 2244, column: 6, scope: !17724)
!17752 = !DILocation(line: 2245, column: 7, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17754, file: !3, line: 2245, column: 7)
!17754 = distinct !DILexicalBlock(scope: !17747, file: !3, line: 2244, column: 53)
!17755 = !DILocation(line: 2245, column: 7, scope: !17754)
!17756 = !DILocation(line: 2249, column: 14, scope: !17757)
!17757 = distinct !DILexicalBlock(scope: !17753, file: !3, line: 2245, column: 26)
!17758 = !DILocation(line: 2249, column: 18, scope: !17757)
!17759 = !DILocation(line: 2249, column: 26, scope: !17757)
!17760 = !DILocation(line: 2249, column: 4, scope: !17757)
!17761 = !DILocation(line: 2250, column: 8, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2250, column: 8)
!17763 = !DILocation(line: 2250, column: 12, scope: !17762)
!17764 = !DILocation(line: 2250, column: 20, scope: !17762)
!17765 = !DILocation(line: 2250, column: 29, scope: !17762)
!17766 = !DILocation(line: 2250, column: 8, scope: !17757)
!17767 = !DILocation(line: 2251, column: 5, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17769, file: !3, line: 2251, column: 5)
!17769 = distinct !DILexicalBlock(scope: !17770, file: !3, line: 2251, column: 5)
!17770 = distinct !DILexicalBlock(scope: !17771, file: !3, line: 2251, column: 5)
!17771 = distinct !DILexicalBlock(scope: !17762, file: !3, line: 2251, column: 5)
!17772 = !DILocation(line: 2251, column: 5, scope: !17762)
!17773 = !DILocation(line: 2253, column: 14, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2253, column: 8)
!17775 = !DILocation(line: 2253, column: 18, scope: !17774)
!17776 = !DILocation(line: 2253, column: 26, scope: !17774)
!17777 = !DILocation(line: 2253, column: 8, scope: !17774)
!17778 = !DILocation(line: 2253, column: 42, scope: !17774)
!17779 = !DILocation(line: 2253, column: 8, scope: !17757)
!17780 = !DILocation(line: 2254, column: 5, scope: !17774)
!17781 = !DILocation(line: 2256, column: 14, scope: !17757)
!17782 = !DILocation(line: 2256, column: 18, scope: !17757)
!17783 = !DILocation(line: 2256, column: 26, scope: !17757)
!17784 = !DILocation(line: 2256, column: 4, scope: !17757)
!17785 = !DILocation(line: 2257, column: 8, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2257, column: 8)
!17787 = !DILocation(line: 2257, column: 12, scope: !17786)
!17788 = !DILocation(line: 2257, column: 20, scope: !17786)
!17789 = !DILocation(line: 2257, column: 29, scope: !17786)
!17790 = !DILocation(line: 2257, column: 8, scope: !17757)
!17791 = !DILocation(line: 2258, column: 5, scope: !17792)
!17792 = distinct !DILexicalBlock(scope: !17793, file: !3, line: 2258, column: 5)
!17793 = distinct !DILexicalBlock(scope: !17794, file: !3, line: 2258, column: 5)
!17794 = distinct !DILexicalBlock(scope: !17795, file: !3, line: 2258, column: 5)
!17795 = distinct !DILexicalBlock(scope: !17786, file: !3, line: 2258, column: 5)
!17796 = !DILocation(line: 2258, column: 5, scope: !17786)
!17797 = !DILocation(line: 2260, column: 14, scope: !17798)
!17798 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2260, column: 8)
!17799 = !DILocation(line: 2260, column: 18, scope: !17798)
!17800 = !DILocation(line: 2260, column: 26, scope: !17798)
!17801 = !DILocation(line: 2260, column: 8, scope: !17798)
!17802 = !DILocation(line: 2260, column: 42, scope: !17798)
!17803 = !DILocation(line: 2260, column: 8, scope: !17757)
!17804 = !DILocation(line: 2261, column: 5, scope: !17798)
!17805 = !DILocation(line: 2264, column: 18, scope: !17757)
!17806 = !DILocation(line: 2264, column: 22, scope: !17757)
!17807 = !DILocation(line: 2264, column: 30, scope: !17757)
!17808 = !DILocation(line: 2264, column: 4, scope: !17757)
!17809 = !DILocation(line: 2265, column: 8, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2265, column: 8)
!17811 = !DILocation(line: 2265, column: 12, scope: !17810)
!17812 = !DILocation(line: 2265, column: 20, scope: !17810)
!17813 = !DILocation(line: 2265, column: 29, scope: !17810)
!17814 = !DILocation(line: 2265, column: 8, scope: !17757)
!17815 = !DILocation(line: 2266, column: 5, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 2266, column: 5)
!17817 = distinct !DILexicalBlock(scope: !17818, file: !3, line: 2266, column: 5)
!17818 = distinct !DILexicalBlock(scope: !17819, file: !3, line: 2266, column: 5)
!17819 = distinct !DILexicalBlock(scope: !17810, file: !3, line: 2266, column: 5)
!17820 = !DILocation(line: 2266, column: 5, scope: !17810)
!17821 = !DILocation(line: 2268, column: 18, scope: !17757)
!17822 = !DILocation(line: 2268, column: 22, scope: !17757)
!17823 = !DILocation(line: 2268, column: 30, scope: !17757)
!17824 = !DILocation(line: 2268, column: 12, scope: !17757)
!17825 = !DILocation(line: 2268, column: 10, scope: !17757)
!17826 = !DILocation(line: 2271, column: 18, scope: !17757)
!17827 = !DILocation(line: 2271, column: 22, scope: !17757)
!17828 = !DILocation(line: 2271, column: 30, scope: !17757)
!17829 = !DILocation(line: 2271, column: 4, scope: !17757)
!17830 = !DILocation(line: 2272, column: 8, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2272, column: 8)
!17832 = !DILocation(line: 2272, column: 12, scope: !17831)
!17833 = !DILocation(line: 2272, column: 20, scope: !17831)
!17834 = !DILocation(line: 2272, column: 29, scope: !17831)
!17835 = !DILocation(line: 2272, column: 8, scope: !17757)
!17836 = !DILocation(line: 2273, column: 5, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17838, file: !3, line: 2273, column: 5)
!17838 = distinct !DILexicalBlock(scope: !17839, file: !3, line: 2273, column: 5)
!17839 = distinct !DILexicalBlock(scope: !17840, file: !3, line: 2273, column: 5)
!17840 = distinct !DILexicalBlock(scope: !17831, file: !3, line: 2273, column: 5)
!17841 = !DILocation(line: 2273, column: 5, scope: !17831)
!17842 = !DILocation(line: 2274, column: 18, scope: !17757)
!17843 = !DILocation(line: 2274, column: 22, scope: !17757)
!17844 = !DILocation(line: 2274, column: 30, scope: !17757)
!17845 = !DILocation(line: 2274, column: 12, scope: !17757)
!17846 = !DILocation(line: 2274, column: 10, scope: !17757)
!17847 = !DILocation(line: 2277, column: 18, scope: !17757)
!17848 = !DILocation(line: 2277, column: 22, scope: !17757)
!17849 = !DILocation(line: 2277, column: 30, scope: !17757)
!17850 = !DILocation(line: 2277, column: 4, scope: !17757)
!17851 = !DILocation(line: 2278, column: 8, scope: !17852)
!17852 = distinct !DILexicalBlock(scope: !17757, file: !3, line: 2278, column: 8)
!17853 = !DILocation(line: 2278, column: 12, scope: !17852)
!17854 = !DILocation(line: 2278, column: 20, scope: !17852)
!17855 = !DILocation(line: 2278, column: 29, scope: !17852)
!17856 = !DILocation(line: 2278, column: 8, scope: !17757)
!17857 = !DILocation(line: 2279, column: 5, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17859, file: !3, line: 2279, column: 5)
!17859 = distinct !DILexicalBlock(scope: !17860, file: !3, line: 2279, column: 5)
!17860 = distinct !DILexicalBlock(scope: !17861, file: !3, line: 2279, column: 5)
!17861 = distinct !DILexicalBlock(scope: !17852, file: !3, line: 2279, column: 5)
!17862 = !DILocation(line: 2279, column: 5, scope: !17852)
!17863 = !DILocation(line: 2280, column: 21, scope: !17757)
!17864 = !DILocation(line: 2280, column: 25, scope: !17757)
!17865 = !DILocation(line: 2280, column: 33, scope: !17757)
!17866 = !DILocation(line: 2280, column: 15, scope: !17757)
!17867 = !DILocation(line: 2280, column: 13, scope: !17757)
!17868 = !DILocation(line: 2282, column: 3, scope: !17757)
!17869 = !DILocation(line: 2286, column: 12, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17753, file: !3, line: 2282, column: 10)
!17871 = !DILocation(line: 2286, column: 16, scope: !17870)
!17872 = !DILocation(line: 2286, column: 24, scope: !17870)
!17873 = !DILocation(line: 2286, column: 4, scope: !17870)
!17874 = !DILocation(line: 2287, column: 8, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2287, column: 8)
!17876 = !DILocation(line: 2287, column: 12, scope: !17875)
!17877 = !DILocation(line: 2287, column: 20, scope: !17875)
!17878 = !DILocation(line: 2287, column: 29, scope: !17875)
!17879 = !DILocation(line: 2287, column: 8, scope: !17870)
!17880 = !DILocation(line: 2288, column: 5, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17882, file: !3, line: 2288, column: 5)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !3, line: 2288, column: 5)
!17883 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 2288, column: 5)
!17884 = distinct !DILexicalBlock(scope: !17875, file: !3, line: 2288, column: 5)
!17885 = !DILocation(line: 2288, column: 5, scope: !17875)
!17886 = !DILocation(line: 2290, column: 12, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2290, column: 8)
!17888 = !DILocation(line: 2290, column: 16, scope: !17887)
!17889 = !DILocation(line: 2290, column: 24, scope: !17887)
!17890 = !DILocation(line: 2290, column: 8, scope: !17887)
!17891 = !DILocation(line: 2290, column: 40, scope: !17887)
!17892 = !DILocation(line: 2290, column: 8, scope: !17870)
!17893 = !DILocation(line: 2291, column: 5, scope: !17887)
!17894 = !DILocation(line: 2293, column: 12, scope: !17870)
!17895 = !DILocation(line: 2293, column: 16, scope: !17870)
!17896 = !DILocation(line: 2293, column: 24, scope: !17870)
!17897 = !DILocation(line: 2293, column: 4, scope: !17870)
!17898 = !DILocation(line: 2294, column: 8, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2294, column: 8)
!17900 = !DILocation(line: 2294, column: 12, scope: !17899)
!17901 = !DILocation(line: 2294, column: 20, scope: !17899)
!17902 = !DILocation(line: 2294, column: 29, scope: !17899)
!17903 = !DILocation(line: 2294, column: 8, scope: !17870)
!17904 = !DILocation(line: 2295, column: 5, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17906, file: !3, line: 2295, column: 5)
!17906 = distinct !DILexicalBlock(scope: !17907, file: !3, line: 2295, column: 5)
!17907 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2295, column: 5)
!17908 = distinct !DILexicalBlock(scope: !17899, file: !3, line: 2295, column: 5)
!17909 = !DILocation(line: 2295, column: 5, scope: !17899)
!17910 = !DILocation(line: 2297, column: 12, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2297, column: 8)
!17912 = !DILocation(line: 2297, column: 16, scope: !17911)
!17913 = !DILocation(line: 2297, column: 24, scope: !17911)
!17914 = !DILocation(line: 2297, column: 8, scope: !17911)
!17915 = !DILocation(line: 2297, column: 40, scope: !17911)
!17916 = !DILocation(line: 2297, column: 8, scope: !17870)
!17917 = !DILocation(line: 2298, column: 5, scope: !17911)
!17918 = !DILocation(line: 2301, column: 16, scope: !17870)
!17919 = !DILocation(line: 2301, column: 20, scope: !17870)
!17920 = !DILocation(line: 2301, column: 28, scope: !17870)
!17921 = !DILocation(line: 2301, column: 4, scope: !17870)
!17922 = !DILocation(line: 2302, column: 8, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2302, column: 8)
!17924 = !DILocation(line: 2302, column: 12, scope: !17923)
!17925 = !DILocation(line: 2302, column: 20, scope: !17923)
!17926 = !DILocation(line: 2302, column: 29, scope: !17923)
!17927 = !DILocation(line: 2302, column: 8, scope: !17870)
!17928 = !DILocation(line: 2303, column: 5, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17930, file: !3, line: 2303, column: 5)
!17930 = distinct !DILexicalBlock(scope: !17931, file: !3, line: 2303, column: 5)
!17931 = distinct !DILexicalBlock(scope: !17932, file: !3, line: 2303, column: 5)
!17932 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 2303, column: 5)
!17933 = !DILocation(line: 2303, column: 5, scope: !17923)
!17934 = !DILocation(line: 2305, column: 16, scope: !17870)
!17935 = !DILocation(line: 2305, column: 20, scope: !17870)
!17936 = !DILocation(line: 2305, column: 28, scope: !17870)
!17937 = !DILocation(line: 2305, column: 12, scope: !17870)
!17938 = !DILocation(line: 2305, column: 10, scope: !17870)
!17939 = !DILocation(line: 2308, column: 16, scope: !17870)
!17940 = !DILocation(line: 2308, column: 20, scope: !17870)
!17941 = !DILocation(line: 2308, column: 28, scope: !17870)
!17942 = !DILocation(line: 2308, column: 4, scope: !17870)
!17943 = !DILocation(line: 2309, column: 8, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2309, column: 8)
!17945 = !DILocation(line: 2309, column: 12, scope: !17944)
!17946 = !DILocation(line: 2309, column: 20, scope: !17944)
!17947 = !DILocation(line: 2309, column: 29, scope: !17944)
!17948 = !DILocation(line: 2309, column: 8, scope: !17870)
!17949 = !DILocation(line: 2310, column: 5, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17951, file: !3, line: 2310, column: 5)
!17951 = distinct !DILexicalBlock(scope: !17952, file: !3, line: 2310, column: 5)
!17952 = distinct !DILexicalBlock(scope: !17953, file: !3, line: 2310, column: 5)
!17953 = distinct !DILexicalBlock(scope: !17944, file: !3, line: 2310, column: 5)
!17954 = !DILocation(line: 2310, column: 5, scope: !17944)
!17955 = !DILocation(line: 2312, column: 16, scope: !17870)
!17956 = !DILocation(line: 2312, column: 20, scope: !17870)
!17957 = !DILocation(line: 2312, column: 28, scope: !17870)
!17958 = !DILocation(line: 2312, column: 12, scope: !17870)
!17959 = !DILocation(line: 2312, column: 10, scope: !17870)
!17960 = !DILocation(line: 2315, column: 16, scope: !17870)
!17961 = !DILocation(line: 2315, column: 20, scope: !17870)
!17962 = !DILocation(line: 2315, column: 28, scope: !17870)
!17963 = !DILocation(line: 2315, column: 4, scope: !17870)
!17964 = !DILocation(line: 2316, column: 8, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17870, file: !3, line: 2316, column: 8)
!17966 = !DILocation(line: 2316, column: 12, scope: !17965)
!17967 = !DILocation(line: 2316, column: 20, scope: !17965)
!17968 = !DILocation(line: 2316, column: 29, scope: !17965)
!17969 = !DILocation(line: 2316, column: 8, scope: !17870)
!17970 = !DILocation(line: 2317, column: 5, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17972, file: !3, line: 2317, column: 5)
!17972 = distinct !DILexicalBlock(scope: !17973, file: !3, line: 2317, column: 5)
!17973 = distinct !DILexicalBlock(scope: !17974, file: !3, line: 2317, column: 5)
!17974 = distinct !DILexicalBlock(scope: !17965, file: !3, line: 2317, column: 5)
!17975 = !DILocation(line: 2317, column: 5, scope: !17965)
!17976 = !DILocation(line: 2319, column: 19, scope: !17870)
!17977 = !DILocation(line: 2319, column: 23, scope: !17870)
!17978 = !DILocation(line: 2319, column: 31, scope: !17870)
!17979 = !DILocation(line: 2319, column: 15, scope: !17870)
!17980 = !DILocation(line: 2319, column: 13, scope: !17870)
!17981 = !DILocation(line: 2322, column: 2, scope: !17754)
!17982 = !DILocation(line: 2325, column: 12, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17747, file: !3, line: 2322, column: 9)
!17984 = !DILocation(line: 2325, column: 16, scope: !17983)
!17985 = !DILocation(line: 2325, column: 10, scope: !17983)
!17986 = !DILocation(line: 2327, column: 10, scope: !17983)
!17987 = !DILocation(line: 2327, column: 3, scope: !17983)
!17988 = !DILocation(line: 2329, column: 10, scope: !17983)
!17989 = !DILocation(line: 2329, column: 14, scope: !17983)
!17990 = !DILocation(line: 2329, column: 19, scope: !17983)
!17991 = !DILocation(line: 2329, column: 23, scope: !17983)
!17992 = !DILocation(line: 2329, column: 32, scope: !17983)
!17993 = !DILocation(line: 2329, column: 7, scope: !17983)
!17994 = !DILocation(line: 2331, column: 16, scope: !17983)
!17995 = !DILocation(line: 2331, column: 20, scope: !17983)
!17996 = !DILocation(line: 2331, column: 3, scope: !17983)
!17997 = !DILocation(line: 2333, column: 18, scope: !17983)
!17998 = !DILocation(line: 2333, column: 3, scope: !17983)
!17999 = !DILocation(line: 2333, column: 8, scope: !17983)
!18000 = !DILocation(line: 2333, column: 16, scope: !17983)
!18001 = !DILocation(line: 2334, column: 3, scope: !17983)
!18002 = !DILocation(line: 2334, column: 8, scope: !17983)
!18003 = !DILocation(line: 2334, column: 15, scope: !17983)
!18004 = !DILocation(line: 2336, column: 3, scope: !17983)
!18005 = !DILocation(line: 2336, column: 8, scope: !17983)
!18006 = !DILocation(line: 2336, column: 12, scope: !17983)
!18007 = !DILocation(line: 2336, column: 20, scope: !17983)
!18008 = !DILocation(line: 2336, column: 28, scope: !17983)
!18009 = !DILocation(line: 2337, column: 33, scope: !17983)
!18010 = !DILocation(line: 2337, column: 3, scope: !17983)
!18011 = !DILocation(line: 2337, column: 8, scope: !17983)
!18012 = !DILocation(line: 2337, column: 12, scope: !17983)
!18013 = !DILocation(line: 2337, column: 20, scope: !17983)
!18014 = !DILocation(line: 2337, column: 31, scope: !17983)
!18015 = !DILocation(line: 2338, column: 3, scope: !17983)
!18016 = !DILocation(line: 2338, column: 8, scope: !17983)
!18017 = !DILocation(line: 2338, column: 12, scope: !17983)
!18018 = !DILocation(line: 2338, column: 20, scope: !17983)
!18019 = !DILocation(line: 2338, column: 25, scope: !17983)
!18020 = !DILocation(line: 2339, column: 3, scope: !17983)
!18021 = !DILocation(line: 2339, column: 8, scope: !17983)
!18022 = !DILocation(line: 2339, column: 12, scope: !17983)
!18023 = !DILocation(line: 2339, column: 20, scope: !17983)
!18024 = !DILocation(line: 2339, column: 30, scope: !17983)
!18025 = !DILocation(line: 2340, column: 3, scope: !17983)
!18026 = !DILocation(line: 2340, column: 8, scope: !17983)
!18027 = !DILocation(line: 2340, column: 12, scope: !17983)
!18028 = !DILocation(line: 2340, column: 20, scope: !17983)
!18029 = !DILocation(line: 2340, column: 26, scope: !17983)
!18030 = !DILocation(line: 2341, column: 3, scope: !17983)
!18031 = !DILocation(line: 2341, column: 8, scope: !17983)
!18032 = !DILocation(line: 2341, column: 12, scope: !17983)
!18033 = !DILocation(line: 2341, column: 20, scope: !17983)
!18034 = !DILocation(line: 2341, column: 34, scope: !17983)
!18035 = !DILocation(line: 2342, column: 3, scope: !17983)
!18036 = !DILocation(line: 2342, column: 8, scope: !17983)
!18037 = !DILocation(line: 2342, column: 12, scope: !17983)
!18038 = !DILocation(line: 2342, column: 20, scope: !17983)
!18039 = !DILocation(line: 2342, column: 31, scope: !17983)
!18040 = !DILocation(line: 2343, column: 3, scope: !17983)
!18041 = !DILocation(line: 2343, column: 8, scope: !17983)
!18042 = !DILocation(line: 2343, column: 17, scope: !17983)
!18043 = !DILocation(line: 2344, column: 34, scope: !17983)
!18044 = !DILocation(line: 2344, column: 38, scope: !17983)
!18045 = !DILocation(line: 2344, column: 3, scope: !17983)
!18046 = !DILocation(line: 2344, column: 8, scope: !17983)
!18047 = !DILocation(line: 2344, column: 12, scope: !17983)
!18048 = !DILocation(line: 2344, column: 20, scope: !17983)
!18049 = !DILocation(line: 2344, column: 32, scope: !17983)
!18050 = !DILocation(line: 2348, column: 23, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !17983, file: !3, line: 2347, column: 7)
!18052 = !DILocation(line: 2348, column: 27, scope: !18051)
!18053 = !DILocation(line: 2348, column: 32, scope: !18051)
!18054 = !DILocation(line: 2349, column: 9, scope: !18051)
!18055 = !DILocation(line: 2348, column: 9, scope: !18051)
!18056 = !DILocation(line: 2347, column: 13, scope: !18051)
!18057 = !DILocation(line: 2349, column: 16, scope: !18051)
!18058 = !DILocation(line: 2350, column: 7, scope: !18051)
!18059 = !DILocation(line: 2350, column: 11, scope: !18051)
!18060 = !DILocation(line: 2350, column: 15, scope: !18051)
!18061 = !DILocation(line: 2351, column: 7, scope: !18051)
!18062 = !DILocation(line: 2351, column: 12, scope: !18051)
!18063 = !DILocation(line: 2351, column: 17, scope: !18051)
!18064 = !DILocation(line: 2351, column: 30, scope: !18051)
!18065 = !DILocation(line: 2351, column: 53, scope: !18051)
!18066 = !DILocation(line: 2347, column: 7, scope: !17983)
!18067 = !DILocation(line: 2354, column: 4, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18051, file: !3, line: 2351, column: 59)
!18069 = !DILocation(line: 2357, column: 8, scope: !18070)
!18070 = distinct !DILexicalBlock(scope: !17983, file: !3, line: 2357, column: 7)
!18071 = !DILocation(line: 2357, column: 21, scope: !18070)
!18072 = !DILocation(line: 2357, column: 30, scope: !18070)
!18073 = !DILocation(line: 2357, column: 34, scope: !18070)
!18074 = !DILocation(line: 2357, column: 47, scope: !18070)
!18075 = !DILocation(line: 2357, column: 7, scope: !17983)
!18076 = !DILocation(line: 2358, column: 12, scope: !18077)
!18077 = distinct !DILexicalBlock(scope: !18070, file: !3, line: 2357, column: 57)
!18078 = !DILocation(line: 2358, column: 10, scope: !18077)
!18079 = !DILocation(line: 2359, column: 12, scope: !18077)
!18080 = !DILocation(line: 2359, column: 10, scope: !18077)
!18081 = !DILocation(line: 2360, column: 15, scope: !18077)
!18082 = !DILocation(line: 2360, column: 13, scope: !18077)
!18083 = !DILocation(line: 2361, column: 3, scope: !18077)
!18084 = !DILocation(line: 2362, column: 4, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18070, file: !3, line: 2361, column: 10)
!18086 = !DILocation(line: 2366, column: 24, scope: !17724)
!18087 = !DILocation(line: 2366, column: 2, scope: !17724)
!18088 = !DILocation(line: 2366, column: 6, scope: !17724)
!18089 = !DILocation(line: 2366, column: 22, scope: !17724)
!18090 = !DILocation(line: 2367, column: 2, scope: !17724)
!18091 = !DILocation(line: 2367, column: 6, scope: !17724)
!18092 = !DILocation(line: 2367, column: 22, scope: !17724)
!18093 = !DILocation(line: 2368, column: 24, scope: !17724)
!18094 = !DILocation(line: 2368, column: 2, scope: !17724)
!18095 = !DILocation(line: 2368, column: 6, scope: !17724)
!18096 = !DILocation(line: 2368, column: 22, scope: !17724)
!18097 = !DILocation(line: 2369, column: 24, scope: !17724)
!18098 = !DILocation(line: 2369, column: 2, scope: !17724)
!18099 = !DILocation(line: 2369, column: 6, scope: !17724)
!18100 = !DILocation(line: 2369, column: 22, scope: !17724)
!18101 = !DILocation(line: 2370, column: 2, scope: !17724)
!18102 = !DILocation(line: 2370, column: 6, scope: !17724)
!18103 = !DILocation(line: 2370, column: 22, scope: !17724)
!18104 = !DILocation(line: 2371, column: 24, scope: !17724)
!18105 = !DILocation(line: 2371, column: 2, scope: !17724)
!18106 = !DILocation(line: 2371, column: 6, scope: !17724)
!18107 = !DILocation(line: 2371, column: 22, scope: !17724)
!18108 = !DILocation(line: 2372, column: 24, scope: !17724)
!18109 = !DILocation(line: 2372, column: 2, scope: !17724)
!18110 = !DILocation(line: 2372, column: 6, scope: !17724)
!18111 = !DILocation(line: 2372, column: 22, scope: !17724)
!18112 = !DILocation(line: 2373, column: 2, scope: !17724)
!18113 = !DILocation(line: 2373, column: 6, scope: !17724)
!18114 = !DILocation(line: 2373, column: 22, scope: !17724)
!18115 = !DILocation(line: 2374, column: 1, scope: !17724)
!18116 = distinct !DISubprogram(name: "scsi_add_host", scope: !136, file: !136, line: 753, type: !18117, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18117 = !DISubroutineType(types: !18118)
!18118 = !{!182, !5124, !2031}
!18119 = !DILocalVariable(name: "host", arg: 1, scope: !18116, file: !136, line: 753, type: !5124)
!18120 = !DILocation(line: 753, column: 64, scope: !18116)
!18121 = !DILocalVariable(name: "dev", arg: 2, scope: !18116, file: !136, line: 754, type: !2031)
!18122 = !DILocation(line: 754, column: 26, scope: !18116)
!18123 = !DILocation(line: 756, column: 32, scope: !18116)
!18124 = !DILocation(line: 756, column: 38, scope: !18116)
!18125 = !DILocation(line: 756, column: 43, scope: !18116)
!18126 = !DILocation(line: 756, column: 9, scope: !18116)
!18127 = !DILocation(line: 756, column: 2, scope: !18116)
!18128 = !DILocalVariable(name: "SH", arg: 1, scope: !6291, file: !3, line: 1397, type: !5124)
!18129 = !DILocation(line: 1397, column: 28, scope: !6291)
!18130 = !DILocalVariable(name: "bp", scope: !6291, file: !3, line: 1400, type: !196)
!18131 = !DILocation(line: 1400, column: 8, scope: !6291)
!18132 = !DILocalVariable(name: "ha", scope: !6291, file: !3, line: 1401, type: !5540)
!18133 = !DILocation(line: 1401, column: 12, scope: !6291)
!18134 = !DILocation(line: 1405, column: 7, scope: !6291)
!18135 = !DILocation(line: 1405, column: 5, scope: !6291)
!18136 = !DILocation(line: 1407, column: 7, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1407, column: 6)
!18138 = !DILocation(line: 1407, column: 6, scope: !6291)
!18139 = !DILocation(line: 1408, column: 3, scope: !18137)
!18140 = !DILocation(line: 1410, column: 5, scope: !6291)
!18141 = !DILocation(line: 1411, column: 9, scope: !6291)
!18142 = !DILocation(line: 1411, column: 2, scope: !6291)
!18143 = !DILocation(line: 1413, column: 10, scope: !6291)
!18144 = !DILocation(line: 1413, column: 2, scope: !6291)
!18145 = !DILocation(line: 1416, column: 6, scope: !18146)
!18146 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1416, column: 6)
!18147 = !DILocation(line: 1416, column: 10, scope: !18146)
!18148 = !DILocation(line: 1416, column: 18, scope: !18146)
!18149 = !DILocation(line: 1416, column: 22, scope: !18146)
!18150 = !DILocation(line: 1416, column: 25, scope: !18146)
!18151 = !DILocation(line: 1416, column: 29, scope: !18146)
!18152 = !DILocation(line: 1416, column: 37, scope: !18146)
!18153 = !DILocation(line: 1416, column: 6, scope: !6291)
!18154 = !DILocation(line: 1417, column: 10, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18146, file: !3, line: 1416, column: 58)
!18156 = !DILocation(line: 1417, column: 3, scope: !18155)
!18157 = !DILocation(line: 1418, column: 10, scope: !18155)
!18158 = !DILocation(line: 1418, column: 31, scope: !18155)
!18159 = !DILocation(line: 1418, column: 35, scope: !18155)
!18160 = !DILocation(line: 1418, column: 43, scope: !18155)
!18161 = !DILocation(line: 1418, column: 14, scope: !18155)
!18162 = !DILocation(line: 1418, column: 3, scope: !18155)
!18163 = !DILocation(line: 1419, column: 10, scope: !18155)
!18164 = !DILocation(line: 1419, column: 3, scope: !18155)
!18165 = !DILocation(line: 1420, column: 2, scope: !18155)
!18166 = !DILocation(line: 1422, column: 10, scope: !6291)
!18167 = !DILocation(line: 1422, column: 2, scope: !6291)
!18168 = !DILocation(line: 1423, column: 1, scope: !6291)
!18169 = distinct !DISubprogram(name: "ips_queue", scope: !3, file: !3, line: 1129, type: !5153, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18170 = !DILocalVariable(name: "lock", arg: 1, scope: !18171, file: !13727, line: 407, type: !4019)
!18171 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !13727, file: !13727, line: 407, type: !18172, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18172 = !DISubroutineType(types: !18173)
!18173 = !{null, !4019, !198}
!18174 = !DILocation(line: 407, column: 64, scope: !18171, inlinedAt: !18175)
!18175 = distinct !DILocation(line: 1129, column: 8, scope: !18169)
!18176 = !DILocalVariable(name: "flags", arg: 2, scope: !18171, file: !13727, line: 407, type: !198)
!18177 = !DILocation(line: 407, column: 84, scope: !18171, inlinedAt: !18175)
!18178 = !DILocalVariable(name: "lock", arg: 1, scope: !18179, file: !13727, line: 327, type: !4019)
!18179 = distinct !DISubprogram(name: "spinlock_check", scope: !13727, file: !13727, line: 327, type: !18180, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18180 = !DISubroutineType(types: !18181)
!18181 = !{!18182, !4019}
!18182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!18183 = !DILocation(line: 327, column: 67, scope: !18179, inlinedAt: !18184)
!18184 = distinct !DILocation(line: 1129, column: 8, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18186, file: !3, line: 1129, column: 8)
!18186 = distinct !DILexicalBlock(scope: !18187, file: !3, line: 1129, column: 8)
!18187 = distinct !DILexicalBlock(scope: !18188, file: !3, line: 1129, column: 8)
!18188 = distinct !DILexicalBlock(scope: !18189, file: !3, line: 1129, column: 8)
!18189 = distinct !DILexicalBlock(scope: !18169, file: !3, line: 1129, column: 8)
!18190 = !DILocalVariable(name: "shost", arg: 1, scope: !18169, file: !3, line: 1129, type: !5124)
!18191 = !DILocation(line: 1129, column: 8, scope: !18169)
!18192 = !DILocalVariable(name: "cmd", arg: 2, scope: !18169, file: !3, line: 1129, type: !5101)
!18193 = !DILocalVariable(name: "irq_flags", scope: !18169, file: !3, line: 1129, type: !198)
!18194 = !DILocalVariable(name: "rc", scope: !18169, file: !3, line: 1129, type: !182)
!18195 = !DILocation(line: 1129, column: 8, scope: !18189)
!18196 = !DILocalVariable(name: "__dummy", scope: !18197, file: !3, line: 1129, type: !198)
!18197 = distinct !DILexicalBlock(scope: !18188, file: !3, line: 1129, column: 8)
!18198 = !DILocation(line: 1129, column: 8, scope: !18197)
!18199 = !DILocalVariable(name: "__dummy2", scope: !18197, file: !3, line: 1129, type: !198)
!18200 = !DILocation(line: 1129, column: 8, scope: !18188)
!18201 = !DILocation(line: 1129, column: 8, scope: !18187)
!18202 = !DILocation(line: 1129, column: 8, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18187, file: !3, line: 1129, column: 8)
!18204 = !DILocalVariable(name: "__dummy", scope: !18205, file: !3, line: 1129, type: !198)
!18205 = distinct !DILexicalBlock(scope: !18206, file: !3, line: 1129, column: 8)
!18206 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 1129, column: 8)
!18207 = !DILocation(line: 1129, column: 8, scope: !18205)
!18208 = !DILocalVariable(name: "__dummy2", scope: !18205, file: !3, line: 1129, type: !198)
!18209 = !DILocation(line: 1129, column: 8, scope: !18206)
!18210 = !DILocation(line: 1129, column: 8, scope: !18186)
!18211 = !{i32 -2140630859}
!18212 = !DILocation(line: 1129, column: 8, scope: !18185)
!18213 = !DILocation(line: 329, column: 10, scope: !18179, inlinedAt: !18184)
!18214 = !DILocation(line: 329, column: 16, scope: !18179, inlinedAt: !18184)
!18215 = !DILocalVariable(name: "__dummy", scope: !18216, file: !13727, line: 409, type: !198)
!18216 = distinct !DILexicalBlock(scope: !18217, file: !13727, line: 409, column: 2)
!18217 = distinct !DILexicalBlock(scope: !18171, file: !13727, line: 409, column: 2)
!18218 = !DILocation(line: 409, column: 2, scope: !18216, inlinedAt: !18175)
!18219 = !DILocalVariable(name: "__dummy2", scope: !18216, file: !13727, line: 409, type: !198)
!18220 = !DILocalVariable(name: "__dummy", scope: !18221, file: !13727, line: 409, type: !198)
!18221 = distinct !DILexicalBlock(scope: !18222, file: !13727, line: 409, column: 2)
!18222 = distinct !DILexicalBlock(scope: !18223, file: !13727, line: 409, column: 2)
!18223 = distinct !DILexicalBlock(scope: !18224, file: !13727, line: 409, column: 2)
!18224 = distinct !DILexicalBlock(scope: !18217, file: !13727, line: 409, column: 2)
!18225 = !DILocation(line: 409, column: 2, scope: !18221, inlinedAt: !18175)
!18226 = !DILocalVariable(name: "__dummy2", scope: !18221, file: !13727, line: 409, type: !198)
!18227 = !DILocation(line: 409, column: 2, scope: !18222, inlinedAt: !18175)
!18228 = !DILocation(line: 409, column: 2, scope: !18229, inlinedAt: !18175)
!18229 = distinct !DILexicalBlock(scope: !18224, file: !13727, line: 409, column: 2)
!18230 = !{i32 -2145309509}
!18231 = !DILocation(line: 409, column: 2, scope: !18232, inlinedAt: !18175)
!18232 = distinct !DILexicalBlock(scope: !18229, file: !13727, line: 409, column: 2)
!18233 = distinct !DISubprogram(name: "ips_eh_abort", scope: !3, file: !3, line: 775, type: !5163, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18234 = !DILocation(line: 392, column: 53, scope: !13726, inlinedAt: !18235)
!18235 = distinct !DILocation(line: 817, column: 2, scope: !18233)
!18236 = !DILocation(line: 352, column: 51, scope: !13737, inlinedAt: !18237)
!18237 = distinct !DILocation(line: 796, column: 2, scope: !18233)
!18238 = !DILocalVariable(name: "SC", arg: 1, scope: !18233, file: !3, line: 775, type: !5101)
!18239 = !DILocation(line: 775, column: 36, scope: !18233)
!18240 = !DILocalVariable(name: "ha", scope: !18233, file: !3, line: 777, type: !5540)
!18241 = !DILocation(line: 777, column: 12, scope: !18233)
!18242 = !DILocalVariable(name: "item", scope: !18233, file: !3, line: 778, type: !14244)
!18243 = !DILocation(line: 778, column: 24, scope: !18233)
!18244 = !DILocalVariable(name: "ret", scope: !18233, file: !3, line: 779, type: !182)
!18245 = !DILocation(line: 779, column: 6, scope: !18233)
!18246 = !DILocalVariable(name: "host", scope: !18233, file: !3, line: 780, type: !5124)
!18247 = !DILocation(line: 780, column: 20, scope: !18233)
!18248 = !DILocation(line: 784, column: 7, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 784, column: 6)
!18250 = !DILocation(line: 784, column: 6, scope: !18233)
!18251 = !DILocation(line: 785, column: 3, scope: !18249)
!18252 = !DILocation(line: 787, column: 9, scope: !18233)
!18253 = !DILocation(line: 787, column: 13, scope: !18233)
!18254 = !DILocation(line: 787, column: 21, scope: !18233)
!18255 = !DILocation(line: 787, column: 7, scope: !18233)
!18256 = !DILocation(line: 788, column: 20, scope: !18233)
!18257 = !DILocation(line: 788, column: 24, scope: !18233)
!18258 = !DILocation(line: 788, column: 32, scope: !18233)
!18259 = !DILocation(line: 788, column: 38, scope: !18233)
!18260 = !DILocation(line: 788, column: 7, scope: !18233)
!18261 = !DILocation(line: 788, column: 5, scope: !18233)
!18262 = !DILocation(line: 790, column: 7, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 790, column: 6)
!18264 = !DILocation(line: 790, column: 6, scope: !18233)
!18265 = !DILocation(line: 791, column: 3, scope: !18263)
!18266 = !DILocation(line: 793, column: 7, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 793, column: 6)
!18268 = !DILocation(line: 793, column: 11, scope: !18267)
!18269 = !DILocation(line: 793, column: 6, scope: !18233)
!18270 = !DILocation(line: 794, column: 3, scope: !18267)
!18271 = !DILocation(line: 796, column: 12, scope: !18233)
!18272 = !DILocation(line: 796, column: 18, scope: !18233)
!18273 = !DILocation(line: 354, column: 2, scope: !13774, inlinedAt: !18237)
!18274 = !DILocation(line: 354, column: 2, scope: !13777, inlinedAt: !18237)
!18275 = !DILocation(line: 799, column: 9, scope: !18233)
!18276 = !DILocation(line: 799, column: 13, scope: !18233)
!18277 = !DILocation(line: 799, column: 27, scope: !18233)
!18278 = !DILocation(line: 799, column: 7, scope: !18233)
!18279 = !DILocation(line: 800, column: 2, scope: !18233)
!18280 = !DILocation(line: 800, column: 10, scope: !18233)
!18281 = !DILocation(line: 800, column: 9, scope: !18233)
!18282 = !DILocation(line: 800, column: 16, scope: !18233)
!18283 = !DILocation(line: 800, column: 20, scope: !18233)
!18284 = !DILocation(line: 800, column: 26, scope: !18233)
!18285 = !DILocation(line: 800, column: 38, scope: !18233)
!18286 = !DILocation(line: 800, column: 35, scope: !18233)
!18287 = !DILocation(line: 0, scope: !18233)
!18288 = !DILocation(line: 801, column: 10, scope: !18233)
!18289 = !DILocation(line: 801, column: 16, scope: !18233)
!18290 = !DILocation(line: 801, column: 8, scope: !18233)
!18291 = distinct !{!18291, !18279, !18289}
!18292 = !DILocation(line: 803, column: 6, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 803, column: 6)
!18294 = !DILocation(line: 803, column: 6, scope: !18233)
!18295 = !DILocation(line: 805, column: 21, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18293, file: !3, line: 803, column: 12)
!18297 = !DILocation(line: 805, column: 25, scope: !18296)
!18298 = !DILocation(line: 805, column: 40, scope: !18296)
!18299 = !DILocation(line: 805, column: 3, scope: !18296)
!18300 = !DILocation(line: 806, column: 7, scope: !18296)
!18301 = !DILocation(line: 809, column: 2, scope: !18296)
!18302 = !DILocation(line: 809, column: 31, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18293, file: !3, line: 809, column: 13)
!18304 = !DILocation(line: 809, column: 35, scope: !18303)
!18305 = !DILocation(line: 809, column: 49, scope: !18303)
!18306 = !DILocation(line: 809, column: 13, scope: !18303)
!18307 = !DILocation(line: 809, column: 13, scope: !18293)
!18308 = !DILocation(line: 811, column: 7, scope: !18309)
!18309 = distinct !DILexicalBlock(scope: !18303, file: !3, line: 809, column: 54)
!18310 = !DILocation(line: 812, column: 2, scope: !18309)
!18311 = !DILocation(line: 814, column: 7, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18303, file: !3, line: 812, column: 9)
!18313 = !DILocation(line: 817, column: 14, scope: !18233)
!18314 = !DILocation(line: 817, column: 20, scope: !18233)
!18315 = !DILocation(line: 394, column: 2, scope: !13784, inlinedAt: !18235)
!18316 = !DILocation(line: 394, column: 2, scope: !13787, inlinedAt: !18235)
!18317 = !DILocation(line: 818, column: 9, scope: !18233)
!18318 = !DILocation(line: 818, column: 2, scope: !18233)
!18319 = !DILocation(line: 819, column: 1, scope: !18233)
!18320 = distinct !DISubprogram(name: "ips_eh_reset", scope: !3, file: !3, line: 1015, type: !5163, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18321 = !DILocalVariable(name: "lock", arg: 1, scope: !18322, file: !13727, line: 402, type: !4019)
!18322 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !13727, file: !13727, line: 402, type: !13728, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18323 = !DILocation(line: 402, column: 57, scope: !18322, inlinedAt: !18324)
!18324 = distinct !DILocation(line: 1021, column: 2, scope: !18320)
!18325 = !DILocalVariable(name: "lock", arg: 1, scope: !18326, file: !13727, line: 377, type: !4019)
!18326 = distinct !DISubprogram(name: "spin_lock_irq", scope: !13727, file: !13727, line: 377, type: !13728, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18327 = !DILocation(line: 377, column: 55, scope: !18326, inlinedAt: !18328)
!18328 = distinct !DILocation(line: 1019, column: 2, scope: !18320)
!18329 = !DILocalVariable(name: "SC", arg: 1, scope: !18320, file: !3, line: 1015, type: !5101)
!18330 = !DILocation(line: 1015, column: 43, scope: !18320)
!18331 = !DILocalVariable(name: "rc", scope: !18320, file: !3, line: 1017, type: !182)
!18332 = !DILocation(line: 1017, column: 6, scope: !18320)
!18333 = !DILocation(line: 1019, column: 16, scope: !18320)
!18334 = !DILocation(line: 1019, column: 20, scope: !18320)
!18335 = !DILocation(line: 1019, column: 28, scope: !18320)
!18336 = !DILocation(line: 1019, column: 34, scope: !18320)
!18337 = !DILocation(line: 379, column: 2, scope: !18338, inlinedAt: !18328)
!18338 = distinct !DILexicalBlock(scope: !18339, file: !13727, line: 379, column: 2)
!18339 = distinct !DILexicalBlock(scope: !18326, file: !13727, line: 379, column: 2)
!18340 = !DILocation(line: 379, column: 2, scope: !18341, inlinedAt: !18328)
!18341 = distinct !DILexicalBlock(scope: !18339, file: !13727, line: 379, column: 2)
!18342 = !{i32 -2145312301}
!18343 = !DILocation(line: 379, column: 2, scope: !18344, inlinedAt: !18328)
!18344 = distinct !DILexicalBlock(scope: !18341, file: !13727, line: 379, column: 2)
!18345 = !DILocation(line: 1020, column: 22, scope: !18320)
!18346 = !DILocation(line: 1020, column: 7, scope: !18320)
!18347 = !DILocation(line: 1020, column: 5, scope: !18320)
!18348 = !DILocation(line: 1021, column: 18, scope: !18320)
!18349 = !DILocation(line: 1021, column: 22, scope: !18320)
!18350 = !DILocation(line: 1021, column: 30, scope: !18320)
!18351 = !DILocation(line: 1021, column: 36, scope: !18320)
!18352 = !DILocation(line: 404, column: 2, scope: !18353, inlinedAt: !18324)
!18353 = distinct !DILexicalBlock(scope: !18354, file: !13727, line: 404, column: 2)
!18354 = distinct !DILexicalBlock(scope: !18322, file: !13727, line: 404, column: 2)
!18355 = !DILocation(line: 404, column: 2, scope: !18356, inlinedAt: !18324)
!18356 = distinct !DILexicalBlock(scope: !18354, file: !13727, line: 404, column: 2)
!18357 = !{i32 -2145310553}
!18358 = !DILocation(line: 404, column: 2, scope: !18359, inlinedAt: !18324)
!18359 = distinct !DILexicalBlock(scope: !18356, file: !13727, line: 404, column: 2)
!18360 = !DILocation(line: 1023, column: 9, scope: !18320)
!18361 = !DILocation(line: 1023, column: 2, scope: !18320)
!18362 = distinct !DISubprogram(name: "ips_slave_configure", scope: !3, file: !3, line: 1191, type: !5171, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18363 = !DILocalVariable(name: "SDptr", arg: 1, scope: !18362, file: !3, line: 1191, type: !5120)
!18364 = !DILocation(line: 1191, column: 42, scope: !18362)
!18365 = !DILocalVariable(name: "ha", scope: !18362, file: !3, line: 1193, type: !5540)
!18366 = !DILocation(line: 1193, column: 12, scope: !18362)
!18367 = !DILocalVariable(name: "min", scope: !18362, file: !3, line: 1194, type: !182)
!18368 = !DILocation(line: 1194, column: 6, scope: !18362)
!18369 = !DILocation(line: 1196, column: 7, scope: !18362)
!18370 = !DILocation(line: 1196, column: 5, scope: !18362)
!18371 = !DILocation(line: 1197, column: 6, scope: !18372)
!18372 = distinct !DILexicalBlock(scope: !18362, file: !3, line: 1197, column: 6)
!18373 = !DILocation(line: 1197, column: 13, scope: !18372)
!18374 = !DILocation(line: 1197, column: 30, scope: !18372)
!18375 = !DILocation(line: 1197, column: 33, scope: !18372)
!18376 = !DILocation(line: 1197, column: 40, scope: !18372)
!18377 = !DILocation(line: 1197, column: 45, scope: !18372)
!18378 = !DILocation(line: 1197, column: 6, scope: !18362)
!18379 = !DILocation(line: 1198, column: 9, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18372, file: !3, line: 1197, column: 59)
!18381 = !DILocation(line: 1198, column: 13, scope: !18380)
!18382 = !DILocation(line: 1198, column: 22, scope: !18380)
!18383 = !DILocation(line: 1198, column: 7, scope: !18380)
!18384 = !DILocation(line: 1199, column: 7, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18380, file: !3, line: 1199, column: 7)
!18386 = !DILocation(line: 1199, column: 11, scope: !18385)
!18387 = !DILocation(line: 1199, column: 16, scope: !18385)
!18388 = !DILocation(line: 1199, column: 32, scope: !18385)
!18389 = !DILocation(line: 1199, column: 7, scope: !18380)
!18390 = !DILocation(line: 1200, column: 10, scope: !18385)
!18391 = !DILocation(line: 1200, column: 14, scope: !18385)
!18392 = !DILocation(line: 1200, column: 23, scope: !18385)
!18393 = !DILocation(line: 1200, column: 8, scope: !18385)
!18394 = !DILocation(line: 1200, column: 4, scope: !18385)
!18395 = !DILocation(line: 1201, column: 27, scope: !18380)
!18396 = !DILocation(line: 1201, column: 34, scope: !18380)
!18397 = !DILocation(line: 1201, column: 3, scope: !18380)
!18398 = !DILocation(line: 1202, column: 2, scope: !18380)
!18399 = !DILocation(line: 1204, column: 2, scope: !18362)
!18400 = !DILocation(line: 1204, column: 9, scope: !18362)
!18401 = !DILocation(line: 1204, column: 24, scope: !18362)
!18402 = !DILocation(line: 1205, column: 2, scope: !18362)
!18403 = !DILocation(line: 1205, column: 9, scope: !18362)
!18404 = !DILocation(line: 1205, column: 25, scope: !18362)
!18405 = !DILocation(line: 1206, column: 2, scope: !18362)
!18406 = distinct !DISubprogram(name: "ips_biosparam", scope: !3, file: !3, line: 1140, type: !5231, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18407 = !DILocalVariable(name: "sdev", arg: 1, scope: !18406, file: !3, line: 1140, type: !5120)
!18408 = !DILocation(line: 1140, column: 46, scope: !18406)
!18409 = !DILocalVariable(name: "bdev", arg: 2, scope: !18406, file: !3, line: 1140, type: !1680)
!18410 = !DILocation(line: 1140, column: 73, scope: !18406)
!18411 = !DILocalVariable(name: "capacity", arg: 3, scope: !18406, file: !3, line: 1141, type: !1702)
!18412 = !DILocation(line: 1141, column: 14, scope: !18406)
!18413 = !DILocalVariable(name: "geom", arg: 4, scope: !18406, file: !3, line: 1141, type: !815)
!18414 = !DILocation(line: 1141, column: 28, scope: !18406)
!18415 = !DILocalVariable(name: "ha", scope: !18406, file: !3, line: 1143, type: !5540)
!18416 = !DILocation(line: 1143, column: 12, scope: !18406)
!18417 = !DILocation(line: 1143, column: 30, scope: !18406)
!18418 = !DILocation(line: 1143, column: 36, scope: !18406)
!18419 = !DILocation(line: 1143, column: 42, scope: !18406)
!18420 = !DILocation(line: 1143, column: 17, scope: !18406)
!18421 = !DILocalVariable(name: "heads", scope: !18406, file: !3, line: 1144, type: !182)
!18422 = !DILocation(line: 1144, column: 6, scope: !18406)
!18423 = !DILocalVariable(name: "sectors", scope: !18406, file: !3, line: 1145, type: !182)
!18424 = !DILocation(line: 1145, column: 6, scope: !18406)
!18425 = !DILocalVariable(name: "cylinders", scope: !18406, file: !3, line: 1146, type: !182)
!18426 = !DILocation(line: 1146, column: 6, scope: !18406)
!18427 = !DILocation(line: 1150, column: 7, scope: !18428)
!18428 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 1150, column: 6)
!18429 = !DILocation(line: 1150, column: 6, scope: !18406)
!18430 = !DILocation(line: 1152, column: 3, scope: !18428)
!18431 = !DILocation(line: 1154, column: 7, scope: !18432)
!18432 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 1154, column: 6)
!18433 = !DILocation(line: 1154, column: 11, scope: !18432)
!18434 = !DILocation(line: 1154, column: 6, scope: !18406)
!18435 = !DILocation(line: 1155, column: 3, scope: !18432)
!18436 = !DILocation(line: 1157, column: 31, scope: !18437)
!18437 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 1157, column: 6)
!18438 = !DILocation(line: 1157, column: 7, scope: !18437)
!18439 = !DILocation(line: 1157, column: 6, scope: !18406)
!18440 = !DILocation(line: 1159, column: 3, scope: !18437)
!18441 = !DILocation(line: 1161, column: 7, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 1161, column: 6)
!18443 = !DILocation(line: 1161, column: 16, scope: !18442)
!18444 = !DILocation(line: 1161, column: 28, scope: !18442)
!18445 = !DILocation(line: 1161, column: 33, scope: !18442)
!18446 = !DILocation(line: 1161, column: 37, scope: !18442)
!18447 = !DILocation(line: 1161, column: 42, scope: !18442)
!18448 = !DILocation(line: 1161, column: 53, scope: !18442)
!18449 = !DILocation(line: 1161, column: 60, scope: !18442)
!18450 = !DILocation(line: 1161, column: 6, scope: !18406)
!18451 = !DILocation(line: 1162, column: 9, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !18442, file: !3, line: 1161, column: 67)
!18453 = !DILocation(line: 1163, column: 11, scope: !18452)
!18454 = !DILocation(line: 1164, column: 2, scope: !18452)
!18455 = !DILocation(line: 1165, column: 9, scope: !18456)
!18456 = distinct !DILexicalBlock(scope: !18442, file: !3, line: 1164, column: 9)
!18457 = !DILocation(line: 1166, column: 11, scope: !18456)
!18458 = !DILocation(line: 1169, column: 30, scope: !18406)
!18459 = !DILocation(line: 1169, column: 42, scope: !18406)
!18460 = !DILocation(line: 1169, column: 50, scope: !18406)
!18461 = !DILocation(line: 1169, column: 48, scope: !18406)
!18462 = !DILocation(line: 1169, column: 41, scope: !18406)
!18463 = !DILocation(line: 1169, column: 39, scope: !18406)
!18464 = !DILocation(line: 1169, column: 14, scope: !18406)
!18465 = !DILocation(line: 1169, column: 12, scope: !18406)
!18466 = !DILocation(line: 1174, column: 12, scope: !18406)
!18467 = !DILocation(line: 1174, column: 2, scope: !18406)
!18468 = !DILocation(line: 1174, column: 10, scope: !18406)
!18469 = !DILocation(line: 1175, column: 12, scope: !18406)
!18470 = !DILocation(line: 1175, column: 2, scope: !18406)
!18471 = !DILocation(line: 1175, column: 10, scope: !18406)
!18472 = !DILocation(line: 1176, column: 12, scope: !18406)
!18473 = !DILocation(line: 1176, column: 2, scope: !18406)
!18474 = !DILocation(line: 1176, column: 10, scope: !18406)
!18475 = !DILocation(line: 1178, column: 2, scope: !18406)
!18476 = !DILocation(line: 1179, column: 1, scope: !18406)
!18477 = distinct !DISubprogram(name: "ips_show_info", scope: !3, file: !3, line: 1448, type: !5236, scopeLine: 1449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18478 = !DILocalVariable(name: "m", arg: 1, scope: !18477, file: !3, line: 1448, type: !821)
!18479 = !DILocation(line: 1448, column: 32, scope: !18477)
!18480 = !DILocalVariable(name: "host", arg: 2, scope: !18477, file: !3, line: 1448, type: !5124)
!18481 = !DILocation(line: 1448, column: 53, scope: !18477)
!18482 = !DILocalVariable(name: "i", scope: !18477, file: !3, line: 1450, type: !182)
!18483 = !DILocation(line: 1450, column: 6, scope: !18477)
!18484 = !DILocalVariable(name: "ha", scope: !18477, file: !3, line: 1451, type: !5540)
!18485 = !DILocation(line: 1451, column: 12, scope: !18477)
!18486 = !DILocation(line: 1454, column: 9, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18477, file: !3, line: 1454, column: 2)
!18488 = !DILocation(line: 1454, column: 7, scope: !18487)
!18489 = !DILocation(line: 1454, column: 14, scope: !18490)
!18490 = distinct !DILexicalBlock(scope: !18487, file: !3, line: 1454, column: 2)
!18491 = !DILocation(line: 1454, column: 18, scope: !18490)
!18492 = !DILocation(line: 1454, column: 16, scope: !18490)
!18493 = !DILocation(line: 1454, column: 2, scope: !18487)
!18494 = !DILocation(line: 1455, column: 14, scope: !18495)
!18495 = distinct !DILexicalBlock(scope: !18496, file: !3, line: 1455, column: 7)
!18496 = distinct !DILexicalBlock(scope: !18490, file: !3, line: 1454, column: 44)
!18497 = !DILocation(line: 1455, column: 7, scope: !18495)
!18498 = !DILocation(line: 1455, column: 7, scope: !18496)
!18499 = !DILocation(line: 1456, column: 15, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18501, file: !3, line: 1456, column: 8)
!18501 = distinct !DILexicalBlock(scope: !18495, file: !3, line: 1455, column: 18)
!18502 = !DILocation(line: 1456, column: 8, scope: !18500)
!18503 = !DILocation(line: 1456, column: 21, scope: !18500)
!18504 = !DILocation(line: 1456, column: 18, scope: !18500)
!18505 = !DILocation(line: 1456, column: 8, scope: !18501)
!18506 = !DILocation(line: 1457, column: 30, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18500, file: !3, line: 1456, column: 27)
!18508 = !DILocation(line: 1457, column: 23, scope: !18507)
!18509 = !DILocation(line: 1457, column: 34, scope: !18507)
!18510 = !DILocation(line: 1457, column: 10, scope: !18507)
!18511 = !DILocation(line: 1457, column: 8, scope: !18507)
!18512 = !DILocation(line: 1458, column: 5, scope: !18507)
!18513 = !DILocation(line: 1460, column: 3, scope: !18501)
!18514 = !DILocation(line: 1461, column: 2, scope: !18496)
!18515 = !DILocation(line: 1454, column: 40, scope: !18490)
!18516 = !DILocation(line: 1454, column: 2, scope: !18490)
!18517 = distinct !{!18517, !18493, !18518}
!18518 = !DILocation(line: 1461, column: 2, scope: !18487)
!18519 = !DILocation(line: 1463, column: 7, scope: !18520)
!18520 = distinct !DILexicalBlock(scope: !18477, file: !3, line: 1463, column: 6)
!18521 = !DILocation(line: 1463, column: 6, scope: !18477)
!18522 = !DILocation(line: 1464, column: 3, scope: !18520)
!18523 = !DILocation(line: 1466, column: 23, scope: !18477)
!18524 = !DILocation(line: 1466, column: 27, scope: !18477)
!18525 = !DILocation(line: 1466, column: 9, scope: !18477)
!18526 = !DILocation(line: 1466, column: 2, scope: !18477)
!18527 = !DILocation(line: 1467, column: 1, scope: !18477)
!18528 = distinct !DISubprogram(name: "ips_write_info", scope: !3, file: !3, line: 1426, type: !5240, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18529 = !DILocalVariable(name: "host", arg: 1, scope: !18528, file: !3, line: 1426, type: !5124)
!18530 = !DILocation(line: 1426, column: 34, scope: !18528)
!18531 = !DILocalVariable(name: "buffer", arg: 2, scope: !18528, file: !3, line: 1426, type: !196)
!18532 = !DILocation(line: 1426, column: 46, scope: !18528)
!18533 = !DILocalVariable(name: "length", arg: 3, scope: !18528, file: !3, line: 1426, type: !182)
!18534 = !DILocation(line: 1426, column: 58, scope: !18528)
!18535 = !DILocalVariable(name: "i", scope: !18528, file: !3, line: 1428, type: !182)
!18536 = !DILocation(line: 1428, column: 6, scope: !18528)
!18537 = !DILocalVariable(name: "ha", scope: !18528, file: !3, line: 1429, type: !5540)
!18538 = !DILocation(line: 1429, column: 12, scope: !18528)
!18539 = !DILocation(line: 1432, column: 9, scope: !18540)
!18540 = distinct !DILexicalBlock(scope: !18528, file: !3, line: 1432, column: 2)
!18541 = !DILocation(line: 1432, column: 7, scope: !18540)
!18542 = !DILocation(line: 1432, column: 14, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18540, file: !3, line: 1432, column: 2)
!18544 = !DILocation(line: 1432, column: 18, scope: !18543)
!18545 = !DILocation(line: 1432, column: 16, scope: !18543)
!18546 = !DILocation(line: 1432, column: 2, scope: !18540)
!18547 = !DILocation(line: 1433, column: 14, scope: !18548)
!18548 = distinct !DILexicalBlock(scope: !18549, file: !3, line: 1433, column: 7)
!18549 = distinct !DILexicalBlock(scope: !18543, file: !3, line: 1432, column: 44)
!18550 = !DILocation(line: 1433, column: 7, scope: !18548)
!18551 = !DILocation(line: 1433, column: 7, scope: !18549)
!18552 = !DILocation(line: 1434, column: 15, scope: !18553)
!18553 = distinct !DILexicalBlock(scope: !18554, file: !3, line: 1434, column: 8)
!18554 = distinct !DILexicalBlock(scope: !18548, file: !3, line: 1433, column: 18)
!18555 = !DILocation(line: 1434, column: 8, scope: !18553)
!18556 = !DILocation(line: 1434, column: 21, scope: !18553)
!18557 = !DILocation(line: 1434, column: 18, scope: !18553)
!18558 = !DILocation(line: 1434, column: 8, scope: !18554)
!18559 = !DILocation(line: 1435, column: 30, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18553, file: !3, line: 1434, column: 27)
!18561 = !DILocation(line: 1435, column: 23, scope: !18560)
!18562 = !DILocation(line: 1435, column: 34, scope: !18560)
!18563 = !DILocation(line: 1435, column: 10, scope: !18560)
!18564 = !DILocation(line: 1435, column: 8, scope: !18560)
!18565 = !DILocation(line: 1436, column: 5, scope: !18560)
!18566 = !DILocation(line: 1438, column: 3, scope: !18554)
!18567 = !DILocation(line: 1439, column: 2, scope: !18549)
!18568 = !DILocation(line: 1432, column: 40, scope: !18543)
!18569 = !DILocation(line: 1432, column: 2, scope: !18543)
!18570 = distinct !{!18570, !18546, !18571}
!18571 = !DILocation(line: 1439, column: 2, scope: !18540)
!18572 = !DILocation(line: 1441, column: 7, scope: !18573)
!18573 = distinct !DILexicalBlock(scope: !18528, file: !3, line: 1441, column: 6)
!18574 = !DILocation(line: 1441, column: 6, scope: !18528)
!18575 = !DILocation(line: 1442, column: 3, scope: !18573)
!18576 = !DILocation(line: 1444, column: 2, scope: !18528)
!18577 = !DILocation(line: 1445, column: 1, scope: !18528)
!18578 = distinct !DISubprogram(name: "ips_queue_lck", scope: !3, file: !3, line: 1038, type: !18579, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18579 = !DISubroutineType(types: !18580)
!18580 = !{!182, !5101, !5510}
!18581 = !DILocation(line: 445, column: 72, scope: !6531, inlinedAt: !18582)
!18582 = distinct !DILocation(line: 552, column: 10, scope: !6536, inlinedAt: !18583)
!18583 = distinct !DILocation(line: 1107, column: 13, scope: !18584)
!18584 = distinct !DILexicalBlock(scope: !18585, file: !3, line: 1084, column: 27)
!18585 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 1084, column: 6)
!18586 = !DILocation(line: 446, column: 9, scope: !6531, inlinedAt: !18582)
!18587 = !DILocation(line: 446, column: 23, scope: !6531, inlinedAt: !18582)
!18588 = !DILocation(line: 448, column: 8, scope: !6531, inlinedAt: !18582)
!18589 = !DILocation(line: 318, column: 67, scope: !6549, inlinedAt: !18590)
!18590 = distinct !DILocation(line: 553, column: 20, scope: !6536, inlinedAt: !18583)
!18591 = !DILocation(line: 346, column: 58, scope: !6555, inlinedAt: !18592)
!18592 = distinct !DILocation(line: 547, column: 11, scope: !6536, inlinedAt: !18583)
!18593 = !DILocation(line: 472, column: 28, scope: !6561, inlinedAt: !18594)
!18594 = distinct !DILocation(line: 481, column: 9, scope: !6566, inlinedAt: !18595)
!18595 = distinct !DILocation(line: 545, column: 11, scope: !6568, inlinedAt: !18583)
!18596 = !DILocation(line: 472, column: 40, scope: !6561, inlinedAt: !18594)
!18597 = !DILocation(line: 472, column: 60, scope: !6561, inlinedAt: !18594)
!18598 = !DILocation(line: 478, column: 51, scope: !6566, inlinedAt: !18595)
!18599 = !DILocation(line: 478, column: 63, scope: !6566, inlinedAt: !18595)
!18600 = !DILocation(line: 480, column: 15, scope: !6566, inlinedAt: !18595)
!18601 = !DILocation(line: 538, column: 45, scope: !6538, inlinedAt: !18583)
!18602 = !DILocation(line: 538, column: 57, scope: !6538, inlinedAt: !18583)
!18603 = !DILocation(line: 542, column: 16, scope: !6536, inlinedAt: !18583)
!18604 = !DILocalVariable(name: "SC", arg: 1, scope: !18578, file: !3, line: 1038, type: !5101)
!18605 = !DILocation(line: 1038, column: 44, scope: !18578)
!18606 = !DILocalVariable(name: "done", arg: 2, scope: !18578, file: !3, line: 1038, type: !5510)
!18607 = !DILocation(line: 1038, column: 55, scope: !18578)
!18608 = !DILocalVariable(name: "ha", scope: !18578, file: !3, line: 1040, type: !5540)
!18609 = !DILocation(line: 1040, column: 12, scope: !18578)
!18610 = !DILocalVariable(name: "pt", scope: !18578, file: !3, line: 1041, type: !6113)
!18611 = !DILocation(line: 1041, column: 18, scope: !18578)
!18612 = !DILocation(line: 1045, column: 20, scope: !18578)
!18613 = !DILocation(line: 1045, column: 24, scope: !18578)
!18614 = !DILocation(line: 1045, column: 32, scope: !18578)
!18615 = !DILocation(line: 1045, column: 38, scope: !18578)
!18616 = !DILocation(line: 1045, column: 7, scope: !18578)
!18617 = !DILocation(line: 1045, column: 5, scope: !18578)
!18618 = !DILocation(line: 1047, column: 7, scope: !18619)
!18619 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 1047, column: 6)
!18620 = !DILocation(line: 1047, column: 6, scope: !18578)
!18621 = !DILocation(line: 1048, column: 3, scope: !18619)
!18622 = !DILocation(line: 1050, column: 7, scope: !18623)
!18623 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 1050, column: 6)
!18624 = !DILocation(line: 1050, column: 11, scope: !18623)
!18625 = !DILocation(line: 1050, column: 6, scope: !18578)
!18626 = !DILocation(line: 1051, column: 3, scope: !18623)
!18627 = !DILocation(line: 1053, column: 22, scope: !18628)
!18628 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 1053, column: 6)
!18629 = !DILocation(line: 1053, column: 6, scope: !18628)
!18630 = !DILocation(line: 1053, column: 6, scope: !18578)
!18631 = !DILocation(line: 1054, column: 7, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18633, file: !3, line: 1054, column: 7)
!18633 = distinct !DILexicalBlock(scope: !18628, file: !3, line: 1053, column: 27)
!18634 = !DILocation(line: 1054, column: 11, scope: !18632)
!18635 = !DILocation(line: 1054, column: 25, scope: !18632)
!18636 = !DILocation(line: 1054, column: 31, scope: !18632)
!18637 = !DILocation(line: 1054, column: 7, scope: !18633)
!18638 = !DILocation(line: 1055, column: 4, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !18632, file: !3, line: 1054, column: 55)
!18640 = !DILocation(line: 1055, column: 8, scope: !18639)
!18641 = !DILocation(line: 1055, column: 15, scope: !18639)
!18642 = !DILocation(line: 1056, column: 4, scope: !18639)
!18643 = !DILocation(line: 1056, column: 9, scope: !18639)
!18644 = !DILocation(line: 1058, column: 4, scope: !18639)
!18645 = !DILocation(line: 1060, column: 2, scope: !18633)
!18646 = !DILocation(line: 1060, column: 13, scope: !18647)
!18647 = distinct !DILexicalBlock(scope: !18628, file: !3, line: 1060, column: 13)
!18648 = !DILocation(line: 1060, column: 17, scope: !18647)
!18649 = !DILocation(line: 1060, column: 30, scope: !18647)
!18650 = !DILocation(line: 1060, column: 36, scope: !18647)
!18651 = !DILocation(line: 1060, column: 13, scope: !18628)
!18652 = !DILocation(line: 1061, column: 3, scope: !18653)
!18653 = distinct !DILexicalBlock(scope: !18647, file: !3, line: 1060, column: 54)
!18654 = !DILocation(line: 1061, column: 7, scope: !18653)
!18655 = !DILocation(line: 1061, column: 14, scope: !18653)
!18656 = !DILocation(line: 1062, column: 3, scope: !18653)
!18657 = !DILocation(line: 1062, column: 8, scope: !18653)
!18658 = !DILocation(line: 1064, column: 3, scope: !18653)
!18659 = !DILocation(line: 1067, column: 18, scope: !18578)
!18660 = !DILocation(line: 1067, column: 2, scope: !18578)
!18661 = !DILocation(line: 1067, column: 6, scope: !18578)
!18662 = !DILocation(line: 1067, column: 16, scope: !18578)
!18663 = !DILocation(line: 1076, column: 7, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 1076, column: 6)
!18665 = !DILocation(line: 1076, column: 24, scope: !18664)
!18666 = !DILocation(line: 1077, column: 6, scope: !18664)
!18667 = !DILocation(line: 1077, column: 10, scope: !18664)
!18668 = !DILocation(line: 1077, column: 25, scope: !18664)
!18669 = !DILocation(line: 1077, column: 29, scope: !18664)
!18670 = !DILocation(line: 1077, column: 35, scope: !18664)
!18671 = !DILocation(line: 1077, column: 22, scope: !18664)
!18672 = !DILocation(line: 1076, column: 6, scope: !18578)
!18673 = !DILocation(line: 1078, column: 3, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18664, file: !3, line: 1077, column: 55)
!18675 = !DILocation(line: 1078, column: 7, scope: !18674)
!18676 = !DILocation(line: 1078, column: 14, scope: !18674)
!18677 = !DILocation(line: 1079, column: 3, scope: !18674)
!18678 = !DILocation(line: 1079, column: 8, scope: !18674)
!18679 = !DILocation(line: 1081, column: 3, scope: !18674)
!18680 = !DILocation(line: 1084, column: 22, scope: !18585)
!18681 = !DILocation(line: 1084, column: 6, scope: !18585)
!18682 = !DILocation(line: 1084, column: 6, scope: !18578)
!18683 = !DILocalVariable(name: "scratch", scope: !18584, file: !3, line: 1086, type: !14244)
!18684 = !DILocation(line: 1086, column: 25, scope: !18584)
!18685 = !DILocation(line: 1091, column: 39, scope: !18584)
!18686 = !DILocation(line: 1091, column: 27, scope: !18584)
!18687 = !DILocation(line: 1091, column: 8, scope: !18584)
!18688 = !DILocation(line: 1091, column: 6, scope: !18584)
!18689 = !DILocation(line: 1092, column: 8, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18584, file: !3, line: 1092, column: 7)
!18691 = !DILocation(line: 1092, column: 12, scope: !18690)
!18692 = !DILocation(line: 1092, column: 19, scope: !18690)
!18693 = !DILocation(line: 1092, column: 23, scope: !18690)
!18694 = !DILocation(line: 1092, column: 29, scope: !18690)
!18695 = !DILocation(line: 1092, column: 37, scope: !18690)
!18696 = !DILocation(line: 1092, column: 63, scope: !18690)
!18697 = !DILocation(line: 1093, column: 8, scope: !18690)
!18698 = !DILocation(line: 1093, column: 12, scope: !18690)
!18699 = !DILocation(line: 1093, column: 19, scope: !18690)
!18700 = !DILocation(line: 1093, column: 23, scope: !18690)
!18701 = !DILocation(line: 1093, column: 29, scope: !18690)
!18702 = !DILocation(line: 1093, column: 42, scope: !18690)
!18703 = !DILocation(line: 1092, column: 7, scope: !18584)
!18704 = !DILocation(line: 1094, column: 8, scope: !18705)
!18705 = distinct !DILexicalBlock(scope: !18706, file: !3, line: 1094, column: 8)
!18706 = distinct !DILexicalBlock(scope: !18690, file: !3, line: 1093, column: 49)
!18707 = !DILocation(line: 1094, column: 12, scope: !18705)
!18708 = !DILocation(line: 1094, column: 27, scope: !18705)
!18709 = !DILocation(line: 1094, column: 33, scope: !18705)
!18710 = !DILocation(line: 1094, column: 8, scope: !18706)
!18711 = !DILocation(line: 1095, column: 5, scope: !18712)
!18712 = distinct !DILexicalBlock(scope: !18705, file: !3, line: 1094, column: 39)
!18713 = !DILocation(line: 1095, column: 9, scope: !18712)
!18714 = !DILocation(line: 1095, column: 16, scope: !18712)
!18715 = !DILocation(line: 1096, column: 5, scope: !18712)
!18716 = !DILocation(line: 1096, column: 10, scope: !18712)
!18717 = !DILocation(line: 1097, column: 5, scope: !18712)
!18718 = !DILocation(line: 1099, column: 4, scope: !18706)
!18719 = !DILocation(line: 1099, column: 8, scope: !18706)
!18720 = !DILocation(line: 1099, column: 20, scope: !18706)
!18721 = !DILocation(line: 1100, column: 19, scope: !18706)
!18722 = !DILocation(line: 1100, column: 4, scope: !18706)
!18723 = !DILocation(line: 1101, column: 4, scope: !18706)
!18724 = !DILocation(line: 1101, column: 8, scope: !18706)
!18725 = !DILocation(line: 1101, column: 15, scope: !18706)
!18726 = !DILocation(line: 1102, column: 4, scope: !18706)
!18727 = !DILocation(line: 1102, column: 8, scope: !18706)
!18728 = !DILocation(line: 1102, column: 18, scope: !18706)
!18729 = !DILocation(line: 1103, column: 4, scope: !18706)
!18730 = !DILocation(line: 540, column: 27, scope: !6537, inlinedAt: !18583)
!18731 = !DILocation(line: 540, column: 6, scope: !6537, inlinedAt: !18583)
!18732 = !DILocation(line: 540, column: 6, scope: !6538, inlinedAt: !18583)
!18733 = !DILocation(line: 544, column: 7, scope: !6568, inlinedAt: !18583)
!18734 = !DILocation(line: 544, column: 12, scope: !6568, inlinedAt: !18583)
!18735 = !DILocation(line: 544, column: 7, scope: !6536, inlinedAt: !18583)
!18736 = !DILocation(line: 545, column: 25, scope: !6568, inlinedAt: !18583)
!18737 = !DILocation(line: 545, column: 31, scope: !6568, inlinedAt: !18583)
!18738 = !DILocation(line: 480, column: 33, scope: !6566, inlinedAt: !18595)
!18739 = !DILocation(line: 480, column: 23, scope: !6566, inlinedAt: !18595)
!18740 = !DILocation(line: 481, column: 29, scope: !6566, inlinedAt: !18595)
!18741 = !DILocation(line: 481, column: 35, scope: !6566, inlinedAt: !18595)
!18742 = !DILocation(line: 481, column: 42, scope: !6566, inlinedAt: !18595)
!18743 = !DILocation(line: 474, column: 23, scope: !6561, inlinedAt: !18594)
!18744 = !DILocation(line: 474, column: 29, scope: !6561, inlinedAt: !18594)
!18745 = !DILocation(line: 474, column: 36, scope: !6561, inlinedAt: !18594)
!18746 = !DILocation(line: 474, column: 9, scope: !6561, inlinedAt: !18594)
!18747 = !DILocation(line: 545, column: 4, scope: !6568, inlinedAt: !18583)
!18748 = !DILocation(line: 547, column: 25, scope: !6536, inlinedAt: !18583)
!18749 = !DILocation(line: 348, column: 7, scope: !6927, inlinedAt: !18592)
!18750 = !DILocation(line: 348, column: 6, scope: !6555, inlinedAt: !18592)
!18751 = !DILocation(line: 349, column: 3, scope: !6927, inlinedAt: !18592)
!18752 = !DILocation(line: 351, column: 6, scope: !6931, inlinedAt: !18592)
!18753 = !DILocation(line: 351, column: 11, scope: !6931, inlinedAt: !18592)
!18754 = !DILocation(line: 351, column: 6, scope: !6555, inlinedAt: !18592)
!18755 = !DILocation(line: 352, column: 3, scope: !6931, inlinedAt: !18592)
!18756 = !DILocation(line: 354, column: 32, scope: !6936, inlinedAt: !18592)
!18757 = !DILocation(line: 354, column: 37, scope: !6936, inlinedAt: !18592)
!18758 = !DILocation(line: 354, column: 42, scope: !6936, inlinedAt: !18592)
!18759 = !DILocation(line: 354, column: 45, scope: !6936, inlinedAt: !18592)
!18760 = !DILocation(line: 354, column: 50, scope: !6936, inlinedAt: !18592)
!18761 = !DILocation(line: 354, column: 6, scope: !6555, inlinedAt: !18592)
!18762 = !DILocation(line: 355, column: 3, scope: !6936, inlinedAt: !18592)
!18763 = !DILocation(line: 356, column: 32, scope: !6944, inlinedAt: !18592)
!18764 = !DILocation(line: 356, column: 37, scope: !6944, inlinedAt: !18592)
!18765 = !DILocation(line: 356, column: 43, scope: !6944, inlinedAt: !18592)
!18766 = !DILocation(line: 356, column: 46, scope: !6944, inlinedAt: !18592)
!18767 = !DILocation(line: 356, column: 51, scope: !6944, inlinedAt: !18592)
!18768 = !DILocation(line: 356, column: 6, scope: !6555, inlinedAt: !18592)
!18769 = !DILocation(line: 357, column: 3, scope: !6944, inlinedAt: !18592)
!18770 = !DILocation(line: 358, column: 6, scope: !6952, inlinedAt: !18592)
!18771 = !DILocation(line: 358, column: 11, scope: !6952, inlinedAt: !18592)
!18772 = !DILocation(line: 358, column: 6, scope: !6555, inlinedAt: !18592)
!18773 = !DILocation(line: 358, column: 26, scope: !6952, inlinedAt: !18592)
!18774 = !DILocation(line: 359, column: 6, scope: !6957, inlinedAt: !18592)
!18775 = !DILocation(line: 359, column: 11, scope: !6957, inlinedAt: !18592)
!18776 = !DILocation(line: 359, column: 6, scope: !6555, inlinedAt: !18592)
!18777 = !DILocation(line: 359, column: 26, scope: !6957, inlinedAt: !18592)
!18778 = !DILocation(line: 360, column: 6, scope: !6962, inlinedAt: !18592)
!18779 = !DILocation(line: 360, column: 11, scope: !6962, inlinedAt: !18592)
!18780 = !DILocation(line: 360, column: 6, scope: !6555, inlinedAt: !18592)
!18781 = !DILocation(line: 360, column: 26, scope: !6962, inlinedAt: !18592)
!18782 = !DILocation(line: 361, column: 6, scope: !6967, inlinedAt: !18592)
!18783 = !DILocation(line: 361, column: 11, scope: !6967, inlinedAt: !18592)
!18784 = !DILocation(line: 361, column: 6, scope: !6555, inlinedAt: !18592)
!18785 = !DILocation(line: 361, column: 26, scope: !6967, inlinedAt: !18592)
!18786 = !DILocation(line: 362, column: 6, scope: !6972, inlinedAt: !18592)
!18787 = !DILocation(line: 362, column: 11, scope: !6972, inlinedAt: !18592)
!18788 = !DILocation(line: 362, column: 6, scope: !6555, inlinedAt: !18592)
!18789 = !DILocation(line: 362, column: 26, scope: !6972, inlinedAt: !18592)
!18790 = !DILocation(line: 363, column: 6, scope: !6977, inlinedAt: !18592)
!18791 = !DILocation(line: 363, column: 11, scope: !6977, inlinedAt: !18592)
!18792 = !DILocation(line: 363, column: 6, scope: !6555, inlinedAt: !18592)
!18793 = !DILocation(line: 363, column: 26, scope: !6977, inlinedAt: !18592)
!18794 = !DILocation(line: 364, column: 6, scope: !6982, inlinedAt: !18592)
!18795 = !DILocation(line: 364, column: 11, scope: !6982, inlinedAt: !18592)
!18796 = !DILocation(line: 364, column: 6, scope: !6555, inlinedAt: !18592)
!18797 = !DILocation(line: 364, column: 26, scope: !6982, inlinedAt: !18592)
!18798 = !DILocation(line: 365, column: 6, scope: !6987, inlinedAt: !18592)
!18799 = !DILocation(line: 365, column: 11, scope: !6987, inlinedAt: !18592)
!18800 = !DILocation(line: 365, column: 6, scope: !6555, inlinedAt: !18592)
!18801 = !DILocation(line: 365, column: 26, scope: !6987, inlinedAt: !18592)
!18802 = !DILocation(line: 366, column: 6, scope: !6992, inlinedAt: !18592)
!18803 = !DILocation(line: 366, column: 11, scope: !6992, inlinedAt: !18592)
!18804 = !DILocation(line: 366, column: 6, scope: !6555, inlinedAt: !18592)
!18805 = !DILocation(line: 366, column: 26, scope: !6992, inlinedAt: !18592)
!18806 = !DILocation(line: 367, column: 6, scope: !6997, inlinedAt: !18592)
!18807 = !DILocation(line: 367, column: 11, scope: !6997, inlinedAt: !18592)
!18808 = !DILocation(line: 367, column: 6, scope: !6555, inlinedAt: !18592)
!18809 = !DILocation(line: 367, column: 26, scope: !6997, inlinedAt: !18592)
!18810 = !DILocation(line: 368, column: 6, scope: !7002, inlinedAt: !18592)
!18811 = !DILocation(line: 368, column: 11, scope: !7002, inlinedAt: !18592)
!18812 = !DILocation(line: 368, column: 6, scope: !6555, inlinedAt: !18592)
!18813 = !DILocation(line: 368, column: 26, scope: !7002, inlinedAt: !18592)
!18814 = !DILocation(line: 369, column: 6, scope: !7007, inlinedAt: !18592)
!18815 = !DILocation(line: 369, column: 11, scope: !7007, inlinedAt: !18592)
!18816 = !DILocation(line: 369, column: 6, scope: !6555, inlinedAt: !18592)
!18817 = !DILocation(line: 369, column: 26, scope: !7007, inlinedAt: !18592)
!18818 = !DILocation(line: 370, column: 6, scope: !7012, inlinedAt: !18592)
!18819 = !DILocation(line: 370, column: 11, scope: !7012, inlinedAt: !18592)
!18820 = !DILocation(line: 370, column: 6, scope: !6555, inlinedAt: !18592)
!18821 = !DILocation(line: 370, column: 26, scope: !7012, inlinedAt: !18592)
!18822 = !DILocation(line: 371, column: 6, scope: !7017, inlinedAt: !18592)
!18823 = !DILocation(line: 371, column: 11, scope: !7017, inlinedAt: !18592)
!18824 = !DILocation(line: 371, column: 6, scope: !6555, inlinedAt: !18592)
!18825 = !DILocation(line: 371, column: 26, scope: !7017, inlinedAt: !18592)
!18826 = !DILocation(line: 372, column: 6, scope: !7022, inlinedAt: !18592)
!18827 = !DILocation(line: 372, column: 11, scope: !7022, inlinedAt: !18592)
!18828 = !DILocation(line: 372, column: 6, scope: !6555, inlinedAt: !18592)
!18829 = !DILocation(line: 372, column: 26, scope: !7022, inlinedAt: !18592)
!18830 = !DILocation(line: 373, column: 6, scope: !7027, inlinedAt: !18592)
!18831 = !DILocation(line: 373, column: 11, scope: !7027, inlinedAt: !18592)
!18832 = !DILocation(line: 373, column: 6, scope: !6555, inlinedAt: !18592)
!18833 = !DILocation(line: 373, column: 26, scope: !7027, inlinedAt: !18592)
!18834 = !DILocation(line: 374, column: 6, scope: !7032, inlinedAt: !18592)
!18835 = !DILocation(line: 374, column: 11, scope: !7032, inlinedAt: !18592)
!18836 = !DILocation(line: 374, column: 6, scope: !6555, inlinedAt: !18592)
!18837 = !DILocation(line: 374, column: 26, scope: !7032, inlinedAt: !18592)
!18838 = !DILocation(line: 375, column: 6, scope: !7037, inlinedAt: !18592)
!18839 = !DILocation(line: 375, column: 11, scope: !7037, inlinedAt: !18592)
!18840 = !DILocation(line: 375, column: 6, scope: !6555, inlinedAt: !18592)
!18841 = !DILocation(line: 375, column: 27, scope: !7037, inlinedAt: !18592)
!18842 = !DILocation(line: 376, column: 6, scope: !7042, inlinedAt: !18592)
!18843 = !DILocation(line: 376, column: 11, scope: !7042, inlinedAt: !18592)
!18844 = !DILocation(line: 376, column: 6, scope: !6555, inlinedAt: !18592)
!18845 = !DILocation(line: 376, column: 32, scope: !7042, inlinedAt: !18592)
!18846 = !DILocation(line: 377, column: 6, scope: !7047, inlinedAt: !18592)
!18847 = !DILocation(line: 377, column: 11, scope: !7047, inlinedAt: !18592)
!18848 = !DILocation(line: 377, column: 6, scope: !6555, inlinedAt: !18592)
!18849 = !DILocation(line: 377, column: 32, scope: !7047, inlinedAt: !18592)
!18850 = !DILocation(line: 378, column: 6, scope: !7052, inlinedAt: !18592)
!18851 = !DILocation(line: 378, column: 11, scope: !7052, inlinedAt: !18592)
!18852 = !DILocation(line: 378, column: 6, scope: !6555, inlinedAt: !18592)
!18853 = !DILocation(line: 378, column: 32, scope: !7052, inlinedAt: !18592)
!18854 = !DILocation(line: 379, column: 6, scope: !7057, inlinedAt: !18592)
!18855 = !DILocation(line: 379, column: 11, scope: !7057, inlinedAt: !18592)
!18856 = !DILocation(line: 379, column: 6, scope: !6555, inlinedAt: !18592)
!18857 = !DILocation(line: 379, column: 33, scope: !7057, inlinedAt: !18592)
!18858 = !DILocation(line: 380, column: 6, scope: !7062, inlinedAt: !18592)
!18859 = !DILocation(line: 380, column: 11, scope: !7062, inlinedAt: !18592)
!18860 = !DILocation(line: 380, column: 6, scope: !6555, inlinedAt: !18592)
!18861 = !DILocation(line: 380, column: 33, scope: !7062, inlinedAt: !18592)
!18862 = !DILocation(line: 381, column: 6, scope: !7067, inlinedAt: !18592)
!18863 = !DILocation(line: 381, column: 11, scope: !7067, inlinedAt: !18592)
!18864 = !DILocation(line: 381, column: 6, scope: !6555, inlinedAt: !18592)
!18865 = !DILocation(line: 381, column: 33, scope: !7067, inlinedAt: !18592)
!18866 = !DILocation(line: 382, column: 2, scope: !7072, inlinedAt: !18592)
!18867 = !DILocation(line: 382, column: 2, scope: !7076, inlinedAt: !18592)
!18868 = !DILocation(line: 382, column: 2, scope: !7077, inlinedAt: !18592)
!18869 = !DILocation(line: 386, column: 1, scope: !6555, inlinedAt: !18592)
!18870 = !DILocation(line: 547, column: 9, scope: !6536, inlinedAt: !18583)
!18871 = !DILocation(line: 549, column: 8, scope: !7083, inlinedAt: !18583)
!18872 = !DILocation(line: 549, column: 7, scope: !6536, inlinedAt: !18583)
!18873 = !DILocation(line: 550, column: 4, scope: !7083, inlinedAt: !18583)
!18874 = !DILocation(line: 553, column: 33, scope: !6536, inlinedAt: !18583)
!18875 = !DILocation(line: 325, column: 6, scope: !7088, inlinedAt: !18590)
!18876 = !DILocation(line: 325, column: 6, scope: !6549, inlinedAt: !18590)
!18877 = !DILocation(line: 326, column: 3, scope: !7088, inlinedAt: !18590)
!18878 = !DILocation(line: 332, column: 9, scope: !6549, inlinedAt: !18590)
!18879 = !DILocation(line: 332, column: 15, scope: !6549, inlinedAt: !18590)
!18880 = !DILocation(line: 332, column: 2, scope: !6549, inlinedAt: !18590)
!18881 = !DILocation(line: 336, column: 1, scope: !6549, inlinedAt: !18590)
!18882 = !DILocation(line: 553, column: 5, scope: !6536, inlinedAt: !18583)
!18883 = !DILocation(line: 553, column: 41, scope: !6536, inlinedAt: !18583)
!18884 = !DILocation(line: 554, column: 5, scope: !6536, inlinedAt: !18583)
!18885 = !DILocation(line: 554, column: 12, scope: !6536, inlinedAt: !18583)
!18886 = !DILocation(line: 448, column: 31, scope: !6531, inlinedAt: !18582)
!18887 = !DILocation(line: 448, column: 34, scope: !6531, inlinedAt: !18582)
!18888 = !DILocation(line: 448, column: 14, scope: !6531, inlinedAt: !18582)
!18889 = !DILocation(line: 450, column: 22, scope: !6531, inlinedAt: !18582)
!18890 = !DILocation(line: 450, column: 25, scope: !6531, inlinedAt: !18582)
!18891 = !DILocation(line: 450, column: 30, scope: !6531, inlinedAt: !18582)
!18892 = !DILocation(line: 450, column: 36, scope: !6531, inlinedAt: !18582)
!18893 = !DILocation(line: 450, column: 8, scope: !6531, inlinedAt: !18582)
!18894 = !DILocation(line: 450, column: 6, scope: !6531, inlinedAt: !18582)
!18895 = !DILocation(line: 451, column: 9, scope: !6531, inlinedAt: !18582)
!18896 = !DILocation(line: 552, column: 3, scope: !6536, inlinedAt: !18583)
!18897 = !DILocation(line: 557, column: 19, scope: !6538, inlinedAt: !18583)
!18898 = !DILocation(line: 557, column: 25, scope: !6538, inlinedAt: !18583)
!18899 = !DILocation(line: 557, column: 9, scope: !6538, inlinedAt: !18583)
!18900 = !DILocation(line: 557, column: 2, scope: !6538, inlinedAt: !18583)
!18901 = !DILocation(line: 558, column: 1, scope: !6538, inlinedAt: !18583)
!18902 = !DILocation(line: 1107, column: 13, scope: !18584)
!18903 = !DILocation(line: 1107, column: 11, scope: !18584)
!18904 = !DILocation(line: 1109, column: 8, scope: !18905)
!18905 = distinct !DILexicalBlock(scope: !18584, file: !3, line: 1109, column: 7)
!18906 = !DILocation(line: 1109, column: 7, scope: !18584)
!18907 = !DILocation(line: 1110, column: 4, scope: !18908)
!18908 = distinct !DILexicalBlock(scope: !18905, file: !3, line: 1109, column: 17)
!18909 = !DILocation(line: 1110, column: 8, scope: !18908)
!18910 = !DILocation(line: 1110, column: 15, scope: !18908)
!18911 = !DILocation(line: 1111, column: 4, scope: !18908)
!18912 = !DILocation(line: 1111, column: 9, scope: !18908)
!18913 = !DILocation(line: 1113, column: 4, scope: !18908)
!18914 = !DILocation(line: 1116, column: 23, scope: !18584)
!18915 = !DILocation(line: 1116, column: 3, scope: !18584)
!18916 = !DILocation(line: 1116, column: 12, scope: !18584)
!18917 = !DILocation(line: 1116, column: 21, scope: !18584)
!18918 = !DILocation(line: 1117, column: 3, scope: !18584)
!18919 = !DILocation(line: 1117, column: 12, scope: !18584)
!18920 = !DILocation(line: 1117, column: 17, scope: !18584)
!18921 = !DILocation(line: 1119, column: 23, scope: !18584)
!18922 = !DILocation(line: 1119, column: 27, scope: !18584)
!18923 = !DILocation(line: 1119, column: 42, scope: !18584)
!18924 = !DILocation(line: 1119, column: 3, scope: !18584)
!18925 = !DILocation(line: 1120, column: 2, scope: !18584)
!18926 = !DILocation(line: 1121, column: 23, scope: !18927)
!18927 = distinct !DILexicalBlock(scope: !18585, file: !3, line: 1120, column: 9)
!18928 = !DILocation(line: 1121, column: 27, scope: !18927)
!18929 = !DILocation(line: 1121, column: 41, scope: !18927)
!18930 = !DILocation(line: 1121, column: 3, scope: !18927)
!18931 = !DILocation(line: 1124, column: 11, scope: !18578)
!18932 = !DILocation(line: 1124, column: 2, scope: !18578)
!18933 = !DILocation(line: 1126, column: 2, scope: !18578)
!18934 = !DILocation(line: 1127, column: 1, scope: !18578)
!18935 = distinct !DISubprogram(name: "__ips_eh_reset", scope: !3, file: !3, line: 832, type: !5163, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!18936 = !DILocalVariable(name: "SC", arg: 1, scope: !18935, file: !3, line: 832, type: !5101)
!18937 = !DILocation(line: 832, column: 45, scope: !18935)
!18938 = !DILocalVariable(name: "ret", scope: !18935, file: !3, line: 834, type: !182)
!18939 = !DILocation(line: 834, column: 6, scope: !18935)
!18940 = !DILocalVariable(name: "i", scope: !18935, file: !3, line: 835, type: !182)
!18941 = !DILocation(line: 835, column: 6, scope: !18935)
!18942 = !DILocalVariable(name: "ha", scope: !18935, file: !3, line: 836, type: !5540)
!18943 = !DILocation(line: 836, column: 12, scope: !18935)
!18944 = !DILocalVariable(name: "scb", scope: !18935, file: !3, line: 837, type: !4848)
!18945 = !DILocation(line: 837, column: 13, scope: !18935)
!18946 = !DILocalVariable(name: "item", scope: !18935, file: !3, line: 838, type: !14244)
!18947 = !DILocation(line: 838, column: 24, scope: !18935)
!18948 = !DILocation(line: 846, column: 7, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 846, column: 6)
!18950 = !DILocation(line: 846, column: 6, scope: !18935)
!18951 = !DILocation(line: 849, column: 3, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18949, file: !3, line: 846, column: 11)
!18953 = !DILocation(line: 852, column: 20, scope: !18935)
!18954 = !DILocation(line: 852, column: 24, scope: !18935)
!18955 = !DILocation(line: 852, column: 32, scope: !18935)
!18956 = !DILocation(line: 852, column: 38, scope: !18935)
!18957 = !DILocation(line: 852, column: 7, scope: !18935)
!18958 = !DILocation(line: 852, column: 5, scope: !18935)
!18959 = !DILocation(line: 854, column: 7, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 854, column: 6)
!18961 = !DILocation(line: 854, column: 6, scope: !18935)
!18962 = !DILocation(line: 857, column: 3, scope: !18963)
!18963 = distinct !DILexicalBlock(scope: !18960, file: !3, line: 854, column: 11)
!18964 = !DILocation(line: 860, column: 7, scope: !18965)
!18965 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 860, column: 6)
!18966 = !DILocation(line: 860, column: 11, scope: !18965)
!18967 = !DILocation(line: 860, column: 6, scope: !18935)
!18968 = !DILocation(line: 861, column: 3, scope: !18965)
!18969 = !DILocation(line: 864, column: 9, scope: !18935)
!18970 = !DILocation(line: 864, column: 13, scope: !18935)
!18971 = !DILocation(line: 864, column: 27, scope: !18935)
!18972 = !DILocation(line: 864, column: 7, scope: !18935)
!18973 = !DILocation(line: 865, column: 2, scope: !18935)
!18974 = !DILocation(line: 865, column: 10, scope: !18935)
!18975 = !DILocation(line: 865, column: 9, scope: !18935)
!18976 = !DILocation(line: 865, column: 16, scope: !18935)
!18977 = !DILocation(line: 865, column: 20, scope: !18935)
!18978 = !DILocation(line: 865, column: 26, scope: !18935)
!18979 = !DILocation(line: 865, column: 38, scope: !18935)
!18980 = !DILocation(line: 865, column: 35, scope: !18935)
!18981 = !DILocation(line: 0, scope: !18935)
!18982 = !DILocation(line: 866, column: 10, scope: !18935)
!18983 = !DILocation(line: 866, column: 16, scope: !18935)
!18984 = !DILocation(line: 866, column: 8, scope: !18935)
!18985 = distinct !{!18985, !18973, !18983}
!18986 = !DILocation(line: 868, column: 6, scope: !18987)
!18987 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 868, column: 6)
!18988 = !DILocation(line: 868, column: 6, scope: !18935)
!18989 = !DILocation(line: 870, column: 21, scope: !18990)
!18990 = distinct !DILexicalBlock(scope: !18987, file: !3, line: 868, column: 12)
!18991 = !DILocation(line: 870, column: 25, scope: !18990)
!18992 = !DILocation(line: 870, column: 40, scope: !18990)
!18993 = !DILocation(line: 870, column: 3, scope: !18990)
!18994 = !DILocation(line: 871, column: 3, scope: !18990)
!18995 = !DILocation(line: 875, column: 24, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 875, column: 6)
!18997 = !DILocation(line: 875, column: 28, scope: !18996)
!18998 = !DILocation(line: 875, column: 42, scope: !18996)
!18999 = !DILocation(line: 875, column: 6, scope: !18996)
!19000 = !DILocation(line: 875, column: 6, scope: !18935)
!19001 = !DILocation(line: 877, column: 3, scope: !19002)
!19002 = distinct !DILexicalBlock(scope: !18996, file: !3, line: 875, column: 47)
!19003 = !DILocation(line: 890, column: 6, scope: !19004)
!19004 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 890, column: 6)
!19005 = !DILocation(line: 890, column: 10, scope: !19004)
!19006 = !DILocation(line: 890, column: 22, scope: !19004)
!19007 = !DILocation(line: 890, column: 6, scope: !18935)
!19008 = !DILocation(line: 891, column: 10, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !19004, file: !3, line: 890, column: 28)
!19010 = !DILocation(line: 891, column: 14, scope: !19009)
!19011 = !DILocation(line: 891, column: 19, scope: !19009)
!19012 = !DILocation(line: 891, column: 23, scope: !19009)
!19013 = !DILocation(line: 891, column: 32, scope: !19009)
!19014 = !DILocation(line: 891, column: 7, scope: !19009)
!19015 = !DILocation(line: 893, column: 16, scope: !19009)
!19016 = !DILocation(line: 893, column: 20, scope: !19009)
!19017 = !DILocation(line: 893, column: 3, scope: !19009)
!19018 = !DILocation(line: 895, column: 18, scope: !19009)
!19019 = !DILocation(line: 895, column: 3, scope: !19009)
!19020 = !DILocation(line: 895, column: 8, scope: !19009)
!19021 = !DILocation(line: 895, column: 16, scope: !19009)
!19022 = !DILocation(line: 896, column: 3, scope: !19009)
!19023 = !DILocation(line: 896, column: 8, scope: !19009)
!19024 = !DILocation(line: 896, column: 15, scope: !19009)
!19025 = !DILocation(line: 898, column: 3, scope: !19009)
!19026 = !DILocation(line: 898, column: 8, scope: !19009)
!19027 = !DILocation(line: 898, column: 12, scope: !19009)
!19028 = !DILocation(line: 898, column: 24, scope: !19009)
!19029 = !DILocation(line: 898, column: 32, scope: !19009)
!19030 = !DILocation(line: 899, column: 37, scope: !19009)
!19031 = !DILocation(line: 899, column: 3, scope: !19009)
!19032 = !DILocation(line: 899, column: 8, scope: !19009)
!19033 = !DILocation(line: 899, column: 12, scope: !19009)
!19034 = !DILocation(line: 899, column: 24, scope: !19009)
!19035 = !DILocation(line: 899, column: 35, scope: !19009)
!19036 = !DILocation(line: 900, column: 3, scope: !19009)
!19037 = !DILocation(line: 900, column: 8, scope: !19009)
!19038 = !DILocation(line: 900, column: 12, scope: !19009)
!19039 = !DILocation(line: 900, column: 24, scope: !19009)
!19040 = !DILocation(line: 900, column: 30, scope: !19009)
!19041 = !DILocation(line: 901, column: 3, scope: !19009)
!19042 = !DILocation(line: 901, column: 8, scope: !19009)
!19043 = !DILocation(line: 901, column: 12, scope: !19009)
!19044 = !DILocation(line: 901, column: 24, scope: !19009)
!19045 = !DILocation(line: 901, column: 33, scope: !19009)
!19046 = !DILocation(line: 902, column: 3, scope: !19009)
!19047 = !DILocation(line: 902, column: 8, scope: !19009)
!19048 = !DILocation(line: 902, column: 12, scope: !19009)
!19049 = !DILocation(line: 902, column: 24, scope: !19009)
!19050 = !DILocation(line: 902, column: 34, scope: !19009)
!19051 = !DILocation(line: 903, column: 3, scope: !19009)
!19052 = !DILocation(line: 903, column: 8, scope: !19009)
!19053 = !DILocation(line: 903, column: 12, scope: !19009)
!19054 = !DILocation(line: 903, column: 24, scope: !19009)
!19055 = !DILocation(line: 903, column: 34, scope: !19009)
!19056 = !DILocation(line: 904, column: 3, scope: !19009)
!19057 = !DILocation(line: 904, column: 8, scope: !19009)
!19058 = !DILocation(line: 904, column: 12, scope: !19009)
!19059 = !DILocation(line: 904, column: 24, scope: !19009)
!19060 = !DILocation(line: 904, column: 34, scope: !19009)
!19061 = !DILocation(line: 907, column: 23, scope: !19009)
!19062 = !DILocation(line: 907, column: 27, scope: !19009)
!19063 = !DILocation(line: 907, column: 32, scope: !19009)
!19064 = !DILocation(line: 907, column: 9, scope: !19009)
!19065 = !DILocation(line: 907, column: 7, scope: !19009)
!19066 = !DILocation(line: 908, column: 7, scope: !19067)
!19067 = distinct !DILexicalBlock(scope: !19009, file: !3, line: 908, column: 7)
!19068 = !DILocation(line: 908, column: 11, scope: !19067)
!19069 = !DILocation(line: 908, column: 7, scope: !19009)
!19070 = !DILocation(line: 909, column: 4, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !19067, file: !3, line: 908, column: 27)
!19072 = !DILocation(line: 911, column: 4, scope: !19071)
!19073 = !DILocation(line: 913, column: 2, scope: !19009)
!19074 = !DILocation(line: 918, column: 2, scope: !18935)
!19075 = !DILocation(line: 918, column: 6, scope: !18935)
!19076 = !DILocation(line: 918, column: 18, scope: !18935)
!19077 = !DILocation(line: 924, column: 2, scope: !18935)
!19078 = !DILocation(line: 925, column: 10, scope: !18935)
!19079 = !DILocation(line: 925, column: 14, scope: !18935)
!19080 = !DILocation(line: 925, column: 19, scope: !18935)
!19081 = !DILocation(line: 925, column: 27, scope: !18935)
!19082 = !DILocation(line: 925, column: 8, scope: !18935)
!19083 = !DILocation(line: 925, column: 6, scope: !18935)
!19084 = !DILocation(line: 927, column: 7, scope: !19085)
!19085 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 927, column: 6)
!19086 = !DILocation(line: 927, column: 6, scope: !18935)
!19087 = !DILocalVariable(name: "scsi_cmd", scope: !19088, file: !3, line: 928, type: !5101)
!19088 = distinct !DILexicalBlock(scope: !19085, file: !3, line: 927, column: 12)
!19089 = !DILocation(line: 928, column: 21, scope: !19088)
!19090 = !DILocation(line: 930, column: 3, scope: !19088)
!19091 = !DILocation(line: 937, column: 3, scope: !19088)
!19092 = !DILocation(line: 937, column: 39, scope: !19088)
!19093 = !DILocation(line: 937, column: 43, scope: !19088)
!19094 = !DILocation(line: 937, column: 17, scope: !19088)
!19095 = !DILocation(line: 937, column: 15, scope: !19088)
!19096 = !DILocation(line: 938, column: 4, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19088, file: !3, line: 937, column: 61)
!19098 = !DILocation(line: 938, column: 9, scope: !19097)
!19099 = !DILocation(line: 938, column: 19, scope: !19097)
!19100 = !DILocation(line: 938, column: 26, scope: !19097)
!19101 = !DILocation(line: 939, column: 4, scope: !19097)
!19102 = !DILocation(line: 939, column: 9, scope: !19097)
!19103 = !DILocation(line: 939, column: 19, scope: !19097)
!19104 = !DILocation(line: 939, column: 29, scope: !19097)
!19105 = !DILocation(line: 939, column: 34, scope: !19097)
!19106 = !DILocation(line: 940, column: 16, scope: !19097)
!19107 = !DILocation(line: 940, column: 20, scope: !19097)
!19108 = !DILocation(line: 940, column: 4, scope: !19097)
!19109 = distinct !{!19109, !19091, !19110}
!19110 = !DILocation(line: 941, column: 3, scope: !19088)
!19111 = !DILocation(line: 947, column: 3, scope: !19088)
!19112 = !DILocation(line: 947, column: 45, scope: !19088)
!19113 = !DILocation(line: 947, column: 49, scope: !19088)
!19114 = !DILocation(line: 947, column: 22, scope: !19088)
!19115 = !DILocation(line: 947, column: 20, scope: !19088)
!19116 = !DILocation(line: 948, column: 4, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19088, file: !3, line: 947, column: 65)
!19118 = !DILocation(line: 948, column: 14, scope: !19117)
!19119 = !DILocation(line: 948, column: 21, scope: !19117)
!19120 = !DILocation(line: 949, column: 4, scope: !19117)
!19121 = !DILocation(line: 949, column: 14, scope: !19117)
!19122 = !DILocation(line: 949, column: 24, scope: !19117)
!19123 = distinct !{!19123, !19111, !19124}
!19124 = !DILocation(line: 950, column: 3, scope: !19088)
!19125 = !DILocation(line: 952, column: 3, scope: !19088)
!19126 = !DILocation(line: 952, column: 7, scope: !19088)
!19127 = !DILocation(line: 952, column: 14, scope: !19088)
!19128 = !DILocation(line: 953, column: 3, scope: !19088)
!19129 = !DILocation(line: 956, column: 25, scope: !19130)
!19130 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 956, column: 6)
!19131 = !DILocation(line: 956, column: 7, scope: !19130)
!19132 = !DILocation(line: 956, column: 6, scope: !18935)
!19133 = !DILocalVariable(name: "scsi_cmd", scope: !19134, file: !3, line: 957, type: !5101)
!19134 = distinct !DILexicalBlock(scope: !19130, file: !3, line: 956, column: 45)
!19135 = !DILocation(line: 957, column: 21, scope: !19134)
!19136 = !DILocation(line: 959, column: 3, scope: !19134)
!19137 = !DILocation(line: 966, column: 3, scope: !19134)
!19138 = !DILocation(line: 966, column: 39, scope: !19134)
!19139 = !DILocation(line: 966, column: 43, scope: !19134)
!19140 = !DILocation(line: 966, column: 17, scope: !19134)
!19141 = !DILocation(line: 966, column: 15, scope: !19134)
!19142 = !DILocation(line: 967, column: 4, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19134, file: !3, line: 966, column: 61)
!19144 = !DILocation(line: 967, column: 9, scope: !19143)
!19145 = !DILocation(line: 967, column: 19, scope: !19143)
!19146 = !DILocation(line: 967, column: 26, scope: !19143)
!19147 = !DILocation(line: 968, column: 4, scope: !19143)
!19148 = !DILocation(line: 968, column: 9, scope: !19143)
!19149 = !DILocation(line: 968, column: 19, scope: !19143)
!19150 = !DILocation(line: 968, column: 29, scope: !19143)
!19151 = !DILocation(line: 968, column: 34, scope: !19143)
!19152 = !DILocation(line: 969, column: 16, scope: !19143)
!19153 = !DILocation(line: 969, column: 20, scope: !19143)
!19154 = !DILocation(line: 969, column: 4, scope: !19143)
!19155 = distinct !{!19155, !19137, !19156}
!19156 = !DILocation(line: 970, column: 3, scope: !19134)
!19157 = !DILocation(line: 976, column: 3, scope: !19134)
!19158 = !DILocation(line: 976, column: 45, scope: !19134)
!19159 = !DILocation(line: 976, column: 49, scope: !19134)
!19160 = !DILocation(line: 976, column: 22, scope: !19134)
!19161 = !DILocation(line: 976, column: 20, scope: !19134)
!19162 = !DILocation(line: 977, column: 4, scope: !19163)
!19163 = distinct !DILexicalBlock(scope: !19134, file: !3, line: 976, column: 65)
!19164 = !DILocation(line: 977, column: 14, scope: !19163)
!19165 = !DILocation(line: 977, column: 21, scope: !19163)
!19166 = !DILocation(line: 978, column: 4, scope: !19163)
!19167 = !DILocation(line: 978, column: 14, scope: !19163)
!19168 = !DILocation(line: 978, column: 24, scope: !19163)
!19169 = distinct !{!19169, !19157, !19170}
!19170 = !DILocation(line: 979, column: 3, scope: !19134)
!19171 = !DILocation(line: 981, column: 3, scope: !19134)
!19172 = !DILocation(line: 981, column: 7, scope: !19134)
!19173 = !DILocation(line: 981, column: 14, scope: !19134)
!19174 = !DILocation(line: 982, column: 3, scope: !19134)
!19175 = !DILocation(line: 986, column: 6, scope: !19176)
!19176 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 986, column: 6)
!19177 = !DILocation(line: 986, column: 40, scope: !19176)
!19178 = !DILocation(line: 986, column: 6, scope: !18935)
!19179 = !DILocation(line: 987, column: 19, scope: !19180)
!19180 = distinct !DILexicalBlock(scope: !19176, file: !3, line: 986, column: 52)
!19181 = !DILocation(line: 987, column: 3, scope: !19180)
!19182 = !DILocation(line: 987, column: 7, scope: !19180)
!19183 = !DILocation(line: 987, column: 17, scope: !19180)
!19184 = !DILocation(line: 988, column: 3, scope: !19180)
!19185 = !DILocation(line: 988, column: 7, scope: !19180)
!19186 = !DILocation(line: 988, column: 18, scope: !19180)
!19187 = !DILocation(line: 989, column: 18, scope: !19180)
!19188 = !DILocation(line: 989, column: 3, scope: !19180)
!19189 = !DILocation(line: 990, column: 2, scope: !19180)
!19190 = !DILocation(line: 995, column: 2, scope: !18935)
!19191 = !DILocation(line: 995, column: 38, scope: !18935)
!19192 = !DILocation(line: 995, column: 42, scope: !18935)
!19193 = !DILocation(line: 995, column: 16, scope: !18935)
!19194 = !DILocation(line: 995, column: 14, scope: !18935)
!19195 = !DILocation(line: 996, column: 3, scope: !19196)
!19196 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 995, column: 60)
!19197 = !DILocation(line: 996, column: 8, scope: !19196)
!19198 = !DILocation(line: 996, column: 18, scope: !19196)
!19199 = !DILocation(line: 996, column: 25, scope: !19196)
!19200 = !DILocation(line: 997, column: 3, scope: !19196)
!19201 = !DILocation(line: 997, column: 8, scope: !19196)
!19202 = !DILocation(line: 997, column: 18, scope: !19196)
!19203 = !DILocation(line: 997, column: 28, scope: !19196)
!19204 = !DILocation(line: 997, column: 33, scope: !19196)
!19205 = !DILocation(line: 998, column: 15, scope: !19196)
!19206 = !DILocation(line: 998, column: 19, scope: !19196)
!19207 = !DILocation(line: 998, column: 3, scope: !19196)
!19208 = distinct !{!19208, !19190, !19209}
!19209 = !DILocation(line: 999, column: 2, scope: !18935)
!19210 = !DILocation(line: 1002, column: 9, scope: !19211)
!19211 = distinct !DILexicalBlock(scope: !18935, file: !3, line: 1002, column: 2)
!19212 = !DILocation(line: 1002, column: 7, scope: !19211)
!19213 = !DILocation(line: 1002, column: 14, scope: !19214)
!19214 = distinct !DILexicalBlock(scope: !19211, file: !3, line: 1002, column: 2)
!19215 = !DILocation(line: 1002, column: 18, scope: !19214)
!19216 = !DILocation(line: 1002, column: 22, scope: !19214)
!19217 = !DILocation(line: 1002, column: 16, scope: !19214)
!19218 = !DILocation(line: 1002, column: 2, scope: !19211)
!19219 = !DILocation(line: 1003, column: 3, scope: !19214)
!19220 = !DILocation(line: 1003, column: 7, scope: !19214)
!19221 = !DILocation(line: 1003, column: 19, scope: !19214)
!19222 = !DILocation(line: 1003, column: 21, scope: !19214)
!19223 = !DILocation(line: 1003, column: 26, scope: !19214)
!19224 = !DILocation(line: 1002, column: 29, scope: !19214)
!19225 = !DILocation(line: 1002, column: 2, scope: !19214)
!19226 = distinct !{!19226, !19218, !19227}
!19227 = !DILocation(line: 1003, column: 28, scope: !19211)
!19228 = !DILocation(line: 1006, column: 2, scope: !18935)
!19229 = !DILocation(line: 1006, column: 6, scope: !18935)
!19230 = !DILocation(line: 1006, column: 16, scope: !18935)
!19231 = !DILocation(line: 1008, column: 11, scope: !18935)
!19232 = !DILocation(line: 1008, column: 2, scope: !18935)
!19233 = !DILocation(line: 1010, column: 2, scope: !18935)
!19234 = !DILocation(line: 1013, column: 1, scope: !18935)
!19235 = distinct !DISubprogram(name: "ips_putq_copp_tail", scope: !3, file: !3, line: 2973, type: !19236, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19236 = !DISubroutineType(types: !19237)
!19237 = !{null, !14840, !14244}
!19238 = !DILocalVariable(name: "queue", arg: 1, scope: !19235, file: !3, line: 2973, type: !14840)
!19239 = !DILocation(line: 2973, column: 39, scope: !19235)
!19240 = !DILocalVariable(name: "item", arg: 2, scope: !19235, file: !3, line: 2973, type: !14244)
!19241 = !DILocation(line: 2973, column: 69, scope: !19235)
!19242 = !DILocation(line: 2977, column: 7, scope: !19243)
!19243 = distinct !DILexicalBlock(scope: !19235, file: !3, line: 2977, column: 6)
!19244 = !DILocation(line: 2977, column: 6, scope: !19235)
!19245 = !DILocation(line: 2978, column: 3, scope: !19243)
!19246 = !DILocation(line: 2980, column: 2, scope: !19235)
!19247 = !DILocation(line: 2980, column: 8, scope: !19235)
!19248 = !DILocation(line: 2980, column: 13, scope: !19235)
!19249 = !DILocation(line: 2982, column: 6, scope: !19250)
!19250 = distinct !DILexicalBlock(scope: !19235, file: !3, line: 2982, column: 6)
!19251 = !DILocation(line: 2982, column: 13, scope: !19250)
!19252 = !DILocation(line: 2982, column: 6, scope: !19235)
!19253 = !DILocation(line: 2983, column: 23, scope: !19250)
!19254 = !DILocation(line: 2983, column: 3, scope: !19250)
!19255 = !DILocation(line: 2983, column: 10, scope: !19250)
!19256 = !DILocation(line: 2983, column: 16, scope: !19250)
!19257 = !DILocation(line: 2983, column: 21, scope: !19250)
!19258 = !DILocation(line: 2985, column: 16, scope: !19235)
!19259 = !DILocation(line: 2985, column: 2, scope: !19235)
!19260 = !DILocation(line: 2985, column: 9, scope: !19235)
!19261 = !DILocation(line: 2985, column: 14, scope: !19235)
!19262 = !DILocation(line: 2987, column: 7, scope: !19263)
!19263 = distinct !DILexicalBlock(scope: !19235, file: !3, line: 2987, column: 6)
!19264 = !DILocation(line: 2987, column: 14, scope: !19263)
!19265 = !DILocation(line: 2987, column: 6, scope: !19235)
!19266 = !DILocation(line: 2988, column: 17, scope: !19263)
!19267 = !DILocation(line: 2988, column: 3, scope: !19263)
!19268 = !DILocation(line: 2988, column: 10, scope: !19263)
!19269 = !DILocation(line: 2988, column: 15, scope: !19263)
!19270 = !DILocation(line: 2990, column: 2, scope: !19235)
!19271 = !DILocation(line: 2990, column: 9, scope: !19235)
!19272 = !DILocation(line: 2990, column: 14, scope: !19235)
!19273 = !DILocation(line: 2991, column: 1, scope: !19235)
!19274 = distinct !DISubprogram(name: "ips_putq_wait_tail", scope: !3, file: !3, line: 2861, type: !19275, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19275 = !DISubroutineType(types: !19276)
!19276 = !{null, !15112, !5101}
!19277 = !DILocalVariable(name: "queue", arg: 1, scope: !19274, file: !3, line: 2861, type: !15112)
!19278 = !DILocation(line: 2861, column: 56, scope: !19274)
!19279 = !DILocalVariable(name: "item", arg: 2, scope: !19274, file: !3, line: 2861, type: !5101)
!19280 = !DILocation(line: 2861, column: 81, scope: !19274)
!19281 = !DILocation(line: 2865, column: 7, scope: !19282)
!19282 = distinct !DILexicalBlock(scope: !19274, file: !3, line: 2865, column: 6)
!19283 = !DILocation(line: 2865, column: 6, scope: !19274)
!19284 = !DILocation(line: 2866, column: 3, scope: !19282)
!19285 = !DILocation(line: 2868, column: 2, scope: !19274)
!19286 = !DILocation(line: 2868, column: 8, scope: !19274)
!19287 = !DILocation(line: 2868, column: 22, scope: !19274)
!19288 = !DILocation(line: 2870, column: 6, scope: !19289)
!19289 = distinct !DILexicalBlock(scope: !19274, file: !3, line: 2870, column: 6)
!19290 = !DILocation(line: 2870, column: 13, scope: !19289)
!19291 = !DILocation(line: 2870, column: 6, scope: !19274)
!19292 = !DILocation(line: 2871, column: 41, scope: !19289)
!19293 = !DILocation(line: 2871, column: 32, scope: !19289)
!19294 = !DILocation(line: 2871, column: 3, scope: !19289)
!19295 = !DILocation(line: 2871, column: 10, scope: !19289)
!19296 = !DILocation(line: 2871, column: 16, scope: !19289)
!19297 = !DILocation(line: 2871, column: 30, scope: !19289)
!19298 = !DILocation(line: 2873, column: 16, scope: !19274)
!19299 = !DILocation(line: 2873, column: 2, scope: !19274)
!19300 = !DILocation(line: 2873, column: 9, scope: !19274)
!19301 = !DILocation(line: 2873, column: 14, scope: !19274)
!19302 = !DILocation(line: 2875, column: 7, scope: !19303)
!19303 = distinct !DILexicalBlock(scope: !19274, file: !3, line: 2875, column: 6)
!19304 = !DILocation(line: 2875, column: 14, scope: !19303)
!19305 = !DILocation(line: 2875, column: 6, scope: !19274)
!19306 = !DILocation(line: 2876, column: 17, scope: !19303)
!19307 = !DILocation(line: 2876, column: 3, scope: !19303)
!19308 = !DILocation(line: 2876, column: 10, scope: !19303)
!19309 = !DILocation(line: 2876, column: 15, scope: !19303)
!19310 = !DILocation(line: 2878, column: 2, scope: !19274)
!19311 = !DILocation(line: 2878, column: 9, scope: !19274)
!19312 = !DILocation(line: 2878, column: 14, scope: !19274)
!19313 = !DILocation(line: 2879, column: 1, scope: !19274)
!19314 = distinct !DISubprogram(name: "ips_removeq_copp", scope: !3, file: !3, line: 3040, type: !19315, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19315 = !DISubroutineType(types: !19316)
!19316 = !{!14244, !14840, !14244}
!19317 = !DILocalVariable(name: "queue", arg: 1, scope: !19314, file: !3, line: 3040, type: !14840)
!19318 = !DILocation(line: 3040, column: 37, scope: !19314)
!19319 = !DILocalVariable(name: "item", arg: 2, scope: !19314, file: !3, line: 3040, type: !14244)
!19320 = !DILocation(line: 3040, column: 67, scope: !19314)
!19321 = !DILocalVariable(name: "p", scope: !19314, file: !3, line: 3042, type: !14244)
!19322 = !DILocation(line: 3042, column: 24, scope: !19314)
!19323 = !DILocation(line: 3046, column: 7, scope: !19324)
!19324 = distinct !DILexicalBlock(scope: !19314, file: !3, line: 3046, column: 6)
!19325 = !DILocation(line: 3046, column: 6, scope: !19314)
!19326 = !DILocation(line: 3047, column: 3, scope: !19324)
!19327 = !DILocation(line: 3049, column: 6, scope: !19328)
!19328 = distinct !DILexicalBlock(scope: !19314, file: !3, line: 3049, column: 6)
!19329 = !DILocation(line: 3049, column: 14, scope: !19328)
!19330 = !DILocation(line: 3049, column: 21, scope: !19328)
!19331 = !DILocation(line: 3049, column: 11, scope: !19328)
!19332 = !DILocation(line: 3049, column: 6, scope: !19314)
!19333 = !DILocation(line: 3050, column: 33, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19328, file: !3, line: 3049, column: 27)
!19335 = !DILocation(line: 3050, column: 11, scope: !19334)
!19336 = !DILocation(line: 3050, column: 3, scope: !19334)
!19337 = !DILocation(line: 3053, column: 6, scope: !19314)
!19338 = !DILocation(line: 3053, column: 13, scope: !19314)
!19339 = !DILocation(line: 3053, column: 4, scope: !19314)
!19340 = !DILocation(line: 3055, column: 2, scope: !19314)
!19341 = !DILocation(line: 3055, column: 10, scope: !19314)
!19342 = !DILocation(line: 3055, column: 9, scope: !19314)
!19343 = !DILocation(line: 3055, column: 13, scope: !19314)
!19344 = !DILocation(line: 3055, column: 17, scope: !19314)
!19345 = !DILocation(line: 3055, column: 25, scope: !19314)
!19346 = !DILocation(line: 3055, column: 28, scope: !19314)
!19347 = !DILocation(line: 3055, column: 22, scope: !19314)
!19348 = !DILocation(line: 0, scope: !19314)
!19349 = !DILocation(line: 3056, column: 7, scope: !19314)
!19350 = !DILocation(line: 3056, column: 10, scope: !19314)
!19351 = !DILocation(line: 3056, column: 5, scope: !19314)
!19352 = distinct !{!19352, !19340, !19350}
!19353 = !DILocation(line: 3058, column: 6, scope: !19354)
!19354 = distinct !DILexicalBlock(scope: !19314, file: !3, line: 3058, column: 6)
!19355 = !DILocation(line: 3058, column: 6, scope: !19314)
!19356 = !DILocation(line: 3060, column: 13, scope: !19357)
!19357 = distinct !DILexicalBlock(scope: !19354, file: !3, line: 3058, column: 9)
!19358 = !DILocation(line: 3060, column: 19, scope: !19357)
!19359 = !DILocation(line: 3060, column: 3, scope: !19357)
!19360 = !DILocation(line: 3060, column: 6, scope: !19357)
!19361 = !DILocation(line: 3060, column: 11, scope: !19357)
!19362 = !DILocation(line: 3062, column: 8, scope: !19363)
!19363 = distinct !DILexicalBlock(scope: !19357, file: !3, line: 3062, column: 7)
!19364 = !DILocation(line: 3062, column: 14, scope: !19363)
!19365 = !DILocation(line: 3062, column: 7, scope: !19357)
!19366 = !DILocation(line: 3063, column: 18, scope: !19363)
!19367 = !DILocation(line: 3063, column: 4, scope: !19363)
!19368 = !DILocation(line: 3063, column: 11, scope: !19363)
!19369 = !DILocation(line: 3063, column: 16, scope: !19363)
!19370 = !DILocation(line: 3065, column: 3, scope: !19357)
!19371 = !DILocation(line: 3065, column: 9, scope: !19357)
!19372 = !DILocation(line: 3065, column: 14, scope: !19357)
!19373 = !DILocation(line: 3066, column: 3, scope: !19357)
!19374 = !DILocation(line: 3066, column: 10, scope: !19357)
!19375 = !DILocation(line: 3066, column: 15, scope: !19357)
!19376 = !DILocation(line: 3068, column: 11, scope: !19357)
!19377 = !DILocation(line: 3068, column: 3, scope: !19357)
!19378 = !DILocation(line: 3071, column: 2, scope: !19314)
!19379 = !DILocation(line: 3072, column: 1, scope: !19314)
!19380 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !12510, file: !12510, line: 661, type: !4459, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19381 = !DILocalVariable(name: "__edi", scope: !19382, file: !12510, line: 663, type: !198)
!19382 = distinct !DILexicalBlock(scope: !19380, file: !12510, line: 663, column: 2)
!19383 = !DILocation(line: 663, column: 2, scope: !19382)
!19384 = !DILocalVariable(name: "__esi", scope: !19382, file: !12510, line: 663, type: !198)
!19385 = !DILocalVariable(name: "__edx", scope: !19382, file: !12510, line: 663, type: !198)
!19386 = !DILocalVariable(name: "__ecx", scope: !19382, file: !12510, line: 663, type: !198)
!19387 = !DILocalVariable(name: "__eax", scope: !19382, file: !12510, line: 663, type: !198)
!19388 = !{i32 -2145811452, i32 -2145810722, i32 -2145810488, i32 -2145810437, i32 -2145810409, i32 -2145810384, i32 -2145810700, i32 -2145810687, i32 -2145810249, i32 -2145810130, i32 -2145810595, i32 -2145810568, i32 -2145810540, i32 -2145810510}
!19389 = !DILocation(line: 664, column: 1, scope: !19380)
!19390 = distinct !DISubprogram(name: "ips_host_info", scope: !3, file: !3, line: 2025, type: !19391, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19391 = !DISubroutineType(types: !19392)
!19392 = !{!182, !5540, !821}
!19393 = !DILocalVariable(name: "ha", arg: 1, scope: !19390, file: !3, line: 2025, type: !5540)
!19394 = !DILocation(line: 2025, column: 25, scope: !19390)
!19395 = !DILocalVariable(name: "m", arg: 2, scope: !19390, file: !3, line: 2025, type: !821)
!19396 = !DILocation(line: 2025, column: 46, scope: !19390)
!19397 = !DILocation(line: 2029, column: 11, scope: !19390)
!19398 = !DILocation(line: 2029, column: 2, scope: !19390)
!19399 = !DILocation(line: 2031, column: 7, scope: !19400)
!19400 = distinct !DILexicalBlock(scope: !19390, file: !3, line: 2031, column: 6)
!19401 = !DILocation(line: 2031, column: 41, scope: !19400)
!19402 = !DILocation(line: 2031, column: 62, scope: !19400)
!19403 = !DILocation(line: 2032, column: 7, scope: !19400)
!19404 = !DILocation(line: 2032, column: 44, scope: !19400)
!19405 = !DILocation(line: 2031, column: 6, scope: !19390)
!19406 = !DILocation(line: 2033, column: 14, scope: !19400)
!19407 = !DILocation(line: 2034, column: 23, scope: !19400)
!19408 = !DILocation(line: 2034, column: 27, scope: !19400)
!19409 = !DILocation(line: 2034, column: 35, scope: !19400)
!19410 = !DILocation(line: 2034, column: 6, scope: !19400)
!19411 = !DILocation(line: 2033, column: 3, scope: !19400)
!19412 = !DILocation(line: 2036, column: 12, scope: !19400)
!19413 = !DILocation(line: 2036, column: 3, scope: !19400)
!19414 = !DILocation(line: 2038, column: 6, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19390, file: !3, line: 2038, column: 6)
!19416 = !DILocation(line: 2038, column: 10, scope: !19415)
!19417 = !DILocation(line: 2038, column: 6, scope: !19390)
!19418 = !DILocation(line: 2039, column: 14, scope: !19415)
!19419 = !DILocation(line: 2041, column: 6, scope: !19415)
!19420 = !DILocation(line: 2041, column: 10, scope: !19415)
!19421 = !DILocation(line: 2041, column: 19, scope: !19415)
!19422 = !DILocation(line: 2041, column: 23, scope: !19415)
!19423 = !DILocation(line: 2039, column: 3, scope: !19415)
!19424 = !DILocation(line: 2043, column: 6, scope: !19425)
!19425 = distinct !DILexicalBlock(scope: !19390, file: !3, line: 2043, column: 6)
!19426 = !DILocation(line: 2043, column: 10, scope: !19425)
!19427 = !DILocation(line: 2043, column: 6, scope: !19390)
!19428 = !DILocation(line: 2044, column: 14, scope: !19429)
!19429 = distinct !DILexicalBlock(scope: !19425, file: !3, line: 2043, column: 20)
!19430 = !DILocation(line: 2046, column: 6, scope: !19429)
!19431 = !DILocation(line: 2046, column: 10, scope: !19429)
!19432 = !DILocation(line: 2046, column: 20, scope: !19429)
!19433 = !DILocation(line: 2046, column: 24, scope: !19429)
!19434 = !DILocation(line: 2044, column: 3, scope: !19429)
!19435 = !DILocation(line: 2047, column: 14, scope: !19429)
!19436 = !DILocation(line: 2049, column: 21, scope: !19429)
!19437 = !DILocation(line: 2049, column: 25, scope: !19429)
!19438 = !DILocation(line: 2049, column: 6, scope: !19429)
!19439 = !DILocation(line: 2047, column: 3, scope: !19429)
!19440 = !DILocation(line: 2050, column: 2, scope: !19429)
!19441 = !DILocation(line: 2052, column: 13, scope: !19390)
!19442 = !DILocation(line: 2052, column: 62, scope: !19390)
!19443 = !DILocation(line: 2052, column: 66, scope: !19390)
!19444 = !DILocation(line: 2052, column: 74, scope: !19390)
!19445 = !DILocation(line: 2052, column: 2, scope: !19390)
!19446 = !DILocation(line: 2057, column: 6, scope: !19447)
!19447 = distinct !DILexicalBlock(scope: !19390, file: !3, line: 2057, column: 6)
!19448 = !DILocation(line: 2057, column: 40, scope: !19447)
!19449 = !DILocation(line: 2057, column: 6, scope: !19390)
!19450 = !DILocation(line: 2058, column: 6, scope: !19451)
!19451 = distinct !DILexicalBlock(scope: !19452, file: !3, line: 2058, column: 6)
!19452 = distinct !DILexicalBlock(scope: !19447, file: !3, line: 2057, column: 61)
!19453 = !DILocation(line: 2058, column: 10, scope: !19451)
!19454 = !DILocation(line: 2058, column: 17, scope: !19451)
!19455 = !DILocation(line: 2058, column: 29, scope: !19451)
!19456 = !DILocation(line: 2058, column: 6, scope: !19452)
!19457 = !DILocation(line: 2059, column: 14, scope: !19458)
!19458 = distinct !DILexicalBlock(scope: !19451, file: !3, line: 2058, column: 35)
!19459 = !DILocation(line: 2061, column: 6, scope: !19458)
!19460 = !DILocation(line: 2061, column: 10, scope: !19458)
!19461 = !DILocation(line: 2061, column: 17, scope: !19458)
!19462 = !DILocation(line: 2061, column: 31, scope: !19458)
!19463 = !DILocation(line: 2061, column: 35, scope: !19458)
!19464 = !DILocation(line: 2061, column: 42, scope: !19458)
!19465 = !DILocation(line: 2062, column: 6, scope: !19458)
!19466 = !DILocation(line: 2062, column: 10, scope: !19458)
!19467 = !DILocation(line: 2062, column: 17, scope: !19458)
!19468 = !DILocation(line: 2062, column: 31, scope: !19458)
!19469 = !DILocation(line: 2062, column: 35, scope: !19458)
!19470 = !DILocation(line: 2062, column: 42, scope: !19458)
!19471 = !DILocation(line: 2063, column: 6, scope: !19458)
!19472 = !DILocation(line: 2063, column: 10, scope: !19458)
!19473 = !DILocation(line: 2063, column: 17, scope: !19458)
!19474 = !DILocation(line: 2063, column: 30, scope: !19458)
!19475 = !DILocation(line: 2063, column: 34, scope: !19458)
!19476 = !DILocation(line: 2063, column: 41, scope: !19458)
!19477 = !DILocation(line: 2064, column: 6, scope: !19458)
!19478 = !DILocation(line: 2064, column: 10, scope: !19458)
!19479 = !DILocation(line: 2064, column: 17, scope: !19458)
!19480 = !DILocation(line: 2059, column: 3, scope: !19458)
!19481 = !DILocation(line: 2066, column: 9, scope: !19458)
!19482 = !DILocation(line: 2067, column: 14, scope: !19483)
!19483 = distinct !DILexicalBlock(scope: !19451, file: !3, line: 2066, column: 16)
!19484 = !DILocation(line: 2069, column: 6, scope: !19483)
!19485 = !DILocation(line: 2069, column: 10, scope: !19483)
!19486 = !DILocation(line: 2069, column: 17, scope: !19483)
!19487 = !DILocation(line: 2069, column: 31, scope: !19483)
!19488 = !DILocation(line: 2069, column: 35, scope: !19483)
!19489 = !DILocation(line: 2069, column: 42, scope: !19483)
!19490 = !DILocation(line: 2070, column: 6, scope: !19483)
!19491 = !DILocation(line: 2070, column: 10, scope: !19483)
!19492 = !DILocation(line: 2070, column: 17, scope: !19483)
!19493 = !DILocation(line: 2070, column: 31, scope: !19483)
!19494 = !DILocation(line: 2070, column: 35, scope: !19483)
!19495 = !DILocation(line: 2070, column: 42, scope: !19483)
!19496 = !DILocation(line: 2071, column: 6, scope: !19483)
!19497 = !DILocation(line: 2071, column: 10, scope: !19483)
!19498 = !DILocation(line: 2071, column: 17, scope: !19483)
!19499 = !DILocation(line: 2071, column: 30, scope: !19483)
!19500 = !DILocation(line: 2071, column: 34, scope: !19483)
!19501 = !DILocation(line: 2071, column: 41, scope: !19483)
!19502 = !DILocation(line: 2072, column: 6, scope: !19483)
!19503 = !DILocation(line: 2072, column: 10, scope: !19483)
!19504 = !DILocation(line: 2072, column: 17, scope: !19483)
!19505 = !DILocation(line: 2072, column: 30, scope: !19483)
!19506 = !DILocation(line: 2072, column: 34, scope: !19483)
!19507 = !DILocation(line: 2072, column: 41, scope: !19483)
!19508 = !DILocation(line: 2067, column: 3, scope: !19483)
!19509 = !DILocation(line: 2075, column: 5, scope: !19452)
!19510 = !DILocation(line: 2077, column: 9, scope: !19511)
!19511 = distinct !DILexicalBlock(scope: !19390, file: !3, line: 2077, column: 9)
!19512 = !DILocation(line: 2077, column: 13, scope: !19511)
!19513 = !DILocation(line: 2077, column: 18, scope: !19511)
!19514 = !DILocation(line: 2077, column: 36, scope: !19511)
!19515 = !DILocation(line: 2077, column: 9, scope: !19390)
!19516 = !DILocation(line: 2078, column: 20, scope: !19517)
!19517 = distinct !DILexicalBlock(scope: !19511, file: !3, line: 2077, column: 42)
!19518 = !DILocation(line: 2080, column: 5, scope: !19517)
!19519 = !DILocation(line: 2080, column: 9, scope: !19517)
!19520 = !DILocation(line: 2080, column: 14, scope: !19517)
!19521 = !DILocation(line: 2080, column: 33, scope: !19517)
!19522 = !DILocation(line: 2080, column: 37, scope: !19517)
!19523 = !DILocation(line: 2080, column: 42, scope: !19517)
!19524 = !DILocation(line: 2081, column: 5, scope: !19517)
!19525 = !DILocation(line: 2081, column: 9, scope: !19517)
!19526 = !DILocation(line: 2081, column: 14, scope: !19517)
!19527 = !DILocation(line: 2081, column: 33, scope: !19517)
!19528 = !DILocation(line: 2081, column: 37, scope: !19517)
!19529 = !DILocation(line: 2081, column: 42, scope: !19517)
!19530 = !DILocation(line: 2082, column: 5, scope: !19517)
!19531 = !DILocation(line: 2082, column: 9, scope: !19517)
!19532 = !DILocation(line: 2082, column: 14, scope: !19517)
!19533 = !DILocation(line: 2082, column: 33, scope: !19517)
!19534 = !DILocation(line: 2082, column: 37, scope: !19517)
!19535 = !DILocation(line: 2082, column: 42, scope: !19517)
!19536 = !DILocation(line: 2083, column: 5, scope: !19517)
!19537 = !DILocation(line: 2083, column: 9, scope: !19517)
!19538 = !DILocation(line: 2083, column: 14, scope: !19517)
!19539 = !DILocation(line: 2078, column: 9, scope: !19517)
!19540 = !DILocation(line: 2084, column: 5, scope: !19517)
!19541 = !DILocation(line: 2085, column: 13, scope: !19542)
!19542 = distinct !DILexicalBlock(scope: !19511, file: !3, line: 2084, column: 12)
!19543 = !DILocation(line: 2087, column: 5, scope: !19542)
!19544 = !DILocation(line: 2087, column: 9, scope: !19542)
!19545 = !DILocation(line: 2087, column: 14, scope: !19542)
!19546 = !DILocation(line: 2087, column: 33, scope: !19542)
!19547 = !DILocation(line: 2087, column: 37, scope: !19542)
!19548 = !DILocation(line: 2087, column: 42, scope: !19542)
!19549 = !DILocation(line: 2088, column: 5, scope: !19542)
!19550 = !DILocation(line: 2088, column: 9, scope: !19542)
!19551 = !DILocation(line: 2088, column: 14, scope: !19542)
!19552 = !DILocation(line: 2088, column: 33, scope: !19542)
!19553 = !DILocation(line: 2088, column: 37, scope: !19542)
!19554 = !DILocation(line: 2088, column: 42, scope: !19542)
!19555 = !DILocation(line: 2089, column: 5, scope: !19542)
!19556 = !DILocation(line: 2089, column: 9, scope: !19542)
!19557 = !DILocation(line: 2089, column: 14, scope: !19542)
!19558 = !DILocation(line: 2089, column: 33, scope: !19542)
!19559 = !DILocation(line: 2089, column: 37, scope: !19542)
!19560 = !DILocation(line: 2089, column: 42, scope: !19542)
!19561 = !DILocation(line: 2090, column: 5, scope: !19542)
!19562 = !DILocation(line: 2090, column: 9, scope: !19542)
!19563 = !DILocation(line: 2090, column: 14, scope: !19542)
!19564 = !DILocation(line: 2090, column: 33, scope: !19542)
!19565 = !DILocation(line: 2090, column: 37, scope: !19542)
!19566 = !DILocation(line: 2090, column: 42, scope: !19542)
!19567 = !DILocation(line: 2085, column: 2, scope: !19542)
!19568 = !DILocation(line: 2093, column: 9, scope: !19569)
!19569 = distinct !DILexicalBlock(scope: !19390, file: !3, line: 2093, column: 9)
!19570 = !DILocation(line: 2093, column: 13, scope: !19569)
!19571 = !DILocation(line: 2093, column: 18, scope: !19569)
!19572 = !DILocation(line: 2093, column: 36, scope: !19569)
!19573 = !DILocation(line: 2093, column: 9, scope: !19390)
!19574 = !DILocation(line: 2094, column: 20, scope: !19575)
!19575 = distinct !DILexicalBlock(scope: !19569, file: !3, line: 2093, column: 42)
!19576 = !DILocation(line: 2096, column: 5, scope: !19575)
!19577 = !DILocation(line: 2096, column: 9, scope: !19575)
!19578 = !DILocation(line: 2096, column: 14, scope: !19575)
!19579 = !DILocation(line: 2096, column: 33, scope: !19575)
!19580 = !DILocation(line: 2096, column: 37, scope: !19575)
!19581 = !DILocation(line: 2096, column: 42, scope: !19575)
!19582 = !DILocation(line: 2097, column: 5, scope: !19575)
!19583 = !DILocation(line: 2097, column: 9, scope: !19575)
!19584 = !DILocation(line: 2097, column: 14, scope: !19575)
!19585 = !DILocation(line: 2097, column: 33, scope: !19575)
!19586 = !DILocation(line: 2097, column: 37, scope: !19575)
!19587 = !DILocation(line: 2097, column: 42, scope: !19575)
!19588 = !DILocation(line: 2098, column: 5, scope: !19575)
!19589 = !DILocation(line: 2098, column: 9, scope: !19575)
!19590 = !DILocation(line: 2098, column: 14, scope: !19575)
!19591 = !DILocation(line: 2098, column: 33, scope: !19575)
!19592 = !DILocation(line: 2098, column: 37, scope: !19575)
!19593 = !DILocation(line: 2098, column: 42, scope: !19575)
!19594 = !DILocation(line: 2099, column: 5, scope: !19575)
!19595 = !DILocation(line: 2099, column: 9, scope: !19575)
!19596 = !DILocation(line: 2099, column: 14, scope: !19575)
!19597 = !DILocation(line: 2094, column: 9, scope: !19575)
!19598 = !DILocation(line: 2100, column: 5, scope: !19575)
!19599 = !DILocation(line: 2101, column: 20, scope: !19600)
!19600 = distinct !DILexicalBlock(scope: !19569, file: !3, line: 2100, column: 12)
!19601 = !DILocation(line: 2103, column: 5, scope: !19600)
!19602 = !DILocation(line: 2103, column: 9, scope: !19600)
!19603 = !DILocation(line: 2103, column: 14, scope: !19600)
!19604 = !DILocation(line: 2103, column: 33, scope: !19600)
!19605 = !DILocation(line: 2103, column: 37, scope: !19600)
!19606 = !DILocation(line: 2103, column: 42, scope: !19600)
!19607 = !DILocation(line: 2104, column: 5, scope: !19600)
!19608 = !DILocation(line: 2104, column: 9, scope: !19600)
!19609 = !DILocation(line: 2104, column: 14, scope: !19600)
!19610 = !DILocation(line: 2104, column: 33, scope: !19600)
!19611 = !DILocation(line: 2104, column: 37, scope: !19600)
!19612 = !DILocation(line: 2104, column: 42, scope: !19600)
!19613 = !DILocation(line: 2105, column: 5, scope: !19600)
!19614 = !DILocation(line: 2105, column: 9, scope: !19600)
!19615 = !DILocation(line: 2105, column: 14, scope: !19600)
!19616 = !DILocation(line: 2105, column: 33, scope: !19600)
!19617 = !DILocation(line: 2105, column: 37, scope: !19600)
!19618 = !DILocation(line: 2105, column: 42, scope: !19600)
!19619 = !DILocation(line: 2106, column: 5, scope: !19600)
!19620 = !DILocation(line: 2106, column: 9, scope: !19600)
!19621 = !DILocation(line: 2106, column: 14, scope: !19600)
!19622 = !DILocation(line: 2106, column: 33, scope: !19600)
!19623 = !DILocation(line: 2106, column: 37, scope: !19600)
!19624 = !DILocation(line: 2106, column: 42, scope: !19600)
!19625 = !DILocation(line: 2101, column: 9, scope: !19600)
!19626 = !DILocation(line: 2109, column: 13, scope: !19390)
!19627 = !DILocation(line: 2109, column: 2, scope: !19390)
!19628 = !DILocation(line: 2112, column: 13, scope: !19390)
!19629 = !DILocation(line: 2112, column: 2, scope: !19390)
!19630 = !DILocation(line: 2115, column: 13, scope: !19390)
!19631 = !DILocation(line: 2116, column: 5, scope: !19390)
!19632 = !DILocation(line: 2116, column: 9, scope: !19390)
!19633 = !DILocation(line: 2116, column: 14, scope: !19390)
!19634 = !DILocation(line: 2115, column: 2, scope: !19390)
!19635 = !DILocation(line: 2117, column: 13, scope: !19390)
!19636 = !DILocation(line: 2118, column: 5, scope: !19390)
!19637 = !DILocation(line: 2118, column: 9, scope: !19390)
!19638 = !DILocation(line: 2117, column: 2, scope: !19390)
!19639 = !DILocation(line: 2119, column: 13, scope: !19390)
!19640 = !DILocation(line: 2120, column: 5, scope: !19390)
!19641 = !DILocation(line: 2120, column: 9, scope: !19390)
!19642 = !DILocation(line: 2120, column: 22, scope: !19390)
!19643 = !DILocation(line: 2119, column: 2, scope: !19390)
!19644 = !DILocation(line: 2121, column: 13, scope: !19390)
!19645 = !DILocation(line: 2122, column: 5, scope: !19390)
!19646 = !DILocation(line: 2122, column: 9, scope: !19390)
!19647 = !DILocation(line: 2122, column: 24, scope: !19390)
!19648 = !DILocation(line: 2122, column: 32, scope: !19390)
!19649 = !DILocation(line: 2122, column: 36, scope: !19390)
!19650 = !DILocation(line: 2122, column: 30, scope: !19390)
!19651 = !DILocation(line: 2121, column: 2, scope: !19390)
!19652 = !DILocation(line: 2123, column: 13, scope: !19390)
!19653 = !DILocation(line: 2124, column: 5, scope: !19390)
!19654 = !DILocation(line: 2124, column: 9, scope: !19390)
!19655 = !DILocation(line: 2124, column: 23, scope: !19390)
!19656 = !DILocation(line: 2123, column: 2, scope: !19390)
!19657 = !DILocation(line: 2125, column: 13, scope: !19390)
!19658 = !DILocation(line: 2126, column: 5, scope: !19390)
!19659 = !DILocation(line: 2126, column: 9, scope: !19390)
!19660 = !DILocation(line: 2125, column: 2, scope: !19390)
!19661 = !DILocation(line: 2128, column: 11, scope: !19390)
!19662 = !DILocation(line: 2128, column: 2, scope: !19390)
!19663 = !DILocation(line: 2130, column: 2, scope: !19390)
!19664 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !37, file: !37, line: 660, type: !19665, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19665 = !DISubroutineType(types: !19666)
!19666 = !{null, !2031, !183}
!19667 = !DILocalVariable(name: "dev", arg: 1, scope: !19664, file: !37, line: 660, type: !2031)
!19668 = !DILocation(line: 660, column: 51, scope: !19664)
!19669 = !DILocalVariable(name: "data", arg: 2, scope: !19664, file: !37, line: 660, type: !183)
!19670 = !DILocation(line: 660, column: 62, scope: !19664)
!19671 = !DILocation(line: 662, column: 21, scope: !19664)
!19672 = !DILocation(line: 662, column: 2, scope: !19664)
!19673 = !DILocation(line: 662, column: 7, scope: !19664)
!19674 = !DILocation(line: 662, column: 19, scope: !19664)
!19675 = !DILocation(line: 663, column: 1, scope: !19664)
!19676 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !5826, file: !5826, line: 1865, type: !19677, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19677 = !DISubroutineType(types: !19678)
!19678 = !{!183, !5824}
!19679 = !DILocalVariable(name: "pdev", arg: 1, scope: !19676, file: !5826, line: 1865, type: !5824)
!19680 = !DILocation(line: 1865, column: 53, scope: !19676)
!19681 = !DILocation(line: 1867, column: 26, scope: !19676)
!19682 = !DILocation(line: 1867, column: 32, scope: !19676)
!19683 = !DILocation(line: 1867, column: 9, scope: !19676)
!19684 = !DILocation(line: 1867, column: 2, scope: !19676)
!19685 = distinct !DISubprogram(name: "ips_release", scope: !3, file: !3, line: 642, type: !5223, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19686 = !DILocalVariable(name: "sh", arg: 1, scope: !19685, file: !3, line: 642, type: !5124)
!19687 = !DILocation(line: 642, column: 31, scope: !19685)
!19688 = !DILocalVariable(name: "scb", scope: !19685, file: !3, line: 644, type: !4848)
!19689 = !DILocation(line: 644, column: 13, scope: !19685)
!19690 = !DILocalVariable(name: "ha", scope: !19685, file: !3, line: 645, type: !5540)
!19691 = !DILocation(line: 645, column: 12, scope: !19685)
!19692 = !DILocalVariable(name: "i", scope: !19685, file: !3, line: 646, type: !182)
!19693 = !DILocation(line: 646, column: 6, scope: !19685)
!19694 = !DILocation(line: 650, column: 19, scope: !19685)
!19695 = !DILocation(line: 650, column: 2, scope: !19685)
!19696 = !DILocation(line: 652, column: 9, scope: !19697)
!19697 = distinct !DILexicalBlock(scope: !19685, file: !3, line: 652, column: 2)
!19698 = !DILocation(line: 652, column: 7, scope: !19697)
!19699 = !DILocation(line: 652, column: 14, scope: !19700)
!19700 = distinct !DILexicalBlock(scope: !19697, file: !3, line: 652, column: 2)
!19701 = !DILocation(line: 652, column: 16, scope: !19700)
!19702 = !DILocation(line: 652, column: 35, scope: !19700)
!19703 = !DILocation(line: 652, column: 45, scope: !19700)
!19704 = !DILocation(line: 652, column: 38, scope: !19700)
!19705 = !DILocation(line: 652, column: 51, scope: !19700)
!19706 = !DILocation(line: 652, column: 48, scope: !19700)
!19707 = !DILocation(line: 0, scope: !19700)
!19708 = !DILocation(line: 652, column: 2, scope: !19697)
!19709 = !DILocation(line: 652, column: 56, scope: !19700)
!19710 = !DILocation(line: 652, column: 2, scope: !19700)
!19711 = distinct !{!19711, !19708, !19712}
!19712 = !DILocation(line: 652, column: 60, scope: !19697)
!19713 = !DILocation(line: 654, column: 6, scope: !19714)
!19714 = distinct !DILexicalBlock(scope: !19685, file: !3, line: 654, column: 6)
!19715 = !DILocation(line: 654, column: 8, scope: !19714)
!19716 = !DILocation(line: 654, column: 6, scope: !19685)
!19717 = !DILocation(line: 655, column: 3, scope: !19718)
!19718 = distinct !DILexicalBlock(scope: !19714, file: !3, line: 654, column: 29)
!19719 = !DILocation(line: 657, column: 3, scope: !19718)
!19720 = !DILocation(line: 657, column: 3, scope: !19721)
!19721 = distinct !DILexicalBlock(scope: !19718, file: !3, line: 657, column: 3)
!19722 = !DILocation(line: 657, column: 3, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19721, file: !3, line: 657, column: 3)
!19724 = !DILocation(line: 657, column: 3, scope: !19725)
!19725 = distinct !DILexicalBlock(scope: !19721, file: !3, line: 657, column: 3)
!19726 = !{i32 -2140635116, i32 -2140635087, i32 -2140635041, i32 -2140634983, i32 -2140634929, i32 -2140634875, i32 -2140634820, i32 -2140634789}
!19727 = !DILocation(line: 657, column: 3, scope: !19728)
!19728 = distinct !DILexicalBlock(scope: !19729, file: !3, line: 657, column: 3)
!19729 = distinct !DILexicalBlock(scope: !19721, file: !3, line: 657, column: 3)
!19730 = !{i32 -2140634348, i32 -2140634341, i32 -2140634287, i32 -2140634256, i32 -2140634226}
!19731 = !DILocation(line: 657, column: 3, scope: !19729)
!19732 = !DILocation(line: 658, column: 3, scope: !19718)
!19733 = !DILocation(line: 661, column: 7, scope: !19685)
!19734 = !DILocation(line: 661, column: 5, scope: !19685)
!19735 = !DILocation(line: 663, column: 7, scope: !19736)
!19736 = distinct !DILexicalBlock(scope: !19685, file: !3, line: 663, column: 6)
!19737 = !DILocation(line: 663, column: 6, scope: !19685)
!19738 = !DILocation(line: 664, column: 3, scope: !19736)
!19739 = !DILocation(line: 667, column: 9, scope: !19685)
!19740 = !DILocation(line: 667, column: 13, scope: !19685)
!19741 = !DILocation(line: 667, column: 18, scope: !19685)
!19742 = !DILocation(line: 667, column: 22, scope: !19685)
!19743 = !DILocation(line: 667, column: 31, scope: !19685)
!19744 = !DILocation(line: 667, column: 6, scope: !19685)
!19745 = !DILocation(line: 669, column: 15, scope: !19685)
!19746 = !DILocation(line: 669, column: 19, scope: !19685)
!19747 = !DILocation(line: 669, column: 2, scope: !19685)
!19748 = !DILocation(line: 671, column: 17, scope: !19685)
!19749 = !DILocation(line: 671, column: 2, scope: !19685)
!19750 = !DILocation(line: 671, column: 7, scope: !19685)
!19751 = !DILocation(line: 671, column: 15, scope: !19685)
!19752 = !DILocation(line: 672, column: 2, scope: !19685)
!19753 = !DILocation(line: 672, column: 7, scope: !19685)
!19754 = !DILocation(line: 672, column: 14, scope: !19685)
!19755 = !DILocation(line: 674, column: 2, scope: !19685)
!19756 = !DILocation(line: 674, column: 7, scope: !19685)
!19757 = !DILocation(line: 674, column: 11, scope: !19685)
!19758 = !DILocation(line: 674, column: 23, scope: !19685)
!19759 = !DILocation(line: 674, column: 31, scope: !19685)
!19760 = !DILocation(line: 675, column: 36, scope: !19685)
!19761 = !DILocation(line: 675, column: 2, scope: !19685)
!19762 = !DILocation(line: 675, column: 7, scope: !19685)
!19763 = !DILocation(line: 675, column: 11, scope: !19685)
!19764 = !DILocation(line: 675, column: 23, scope: !19685)
!19765 = !DILocation(line: 675, column: 34, scope: !19685)
!19766 = !DILocation(line: 676, column: 2, scope: !19685)
!19767 = !DILocation(line: 676, column: 7, scope: !19685)
!19768 = !DILocation(line: 676, column: 11, scope: !19685)
!19769 = !DILocation(line: 676, column: 23, scope: !19685)
!19770 = !DILocation(line: 676, column: 29, scope: !19685)
!19771 = !DILocation(line: 677, column: 2, scope: !19685)
!19772 = !DILocation(line: 677, column: 7, scope: !19685)
!19773 = !DILocation(line: 677, column: 11, scope: !19685)
!19774 = !DILocation(line: 677, column: 23, scope: !19685)
!19775 = !DILocation(line: 677, column: 32, scope: !19685)
!19776 = !DILocation(line: 678, column: 2, scope: !19685)
!19777 = !DILocation(line: 678, column: 7, scope: !19685)
!19778 = !DILocation(line: 678, column: 11, scope: !19685)
!19779 = !DILocation(line: 678, column: 23, scope: !19685)
!19780 = !DILocation(line: 678, column: 33, scope: !19685)
!19781 = !DILocation(line: 679, column: 2, scope: !19685)
!19782 = !DILocation(line: 679, column: 7, scope: !19685)
!19783 = !DILocation(line: 679, column: 11, scope: !19685)
!19784 = !DILocation(line: 679, column: 23, scope: !19685)
!19785 = !DILocation(line: 679, column: 33, scope: !19685)
!19786 = !DILocation(line: 680, column: 2, scope: !19685)
!19787 = !DILocation(line: 680, column: 7, scope: !19685)
!19788 = !DILocation(line: 680, column: 11, scope: !19685)
!19789 = !DILocation(line: 680, column: 23, scope: !19685)
!19790 = !DILocation(line: 680, column: 33, scope: !19685)
!19791 = !DILocation(line: 682, column: 2, scope: !19685)
!19792 = !DILocation(line: 685, column: 20, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19685, file: !3, line: 685, column: 6)
!19794 = !DILocation(line: 685, column: 24, scope: !19793)
!19795 = !DILocation(line: 685, column: 29, scope: !19793)
!19796 = !DILocation(line: 685, column: 6, scope: !19793)
!19797 = !DILocation(line: 685, column: 59, scope: !19793)
!19798 = !DILocation(line: 685, column: 6, scope: !19685)
!19799 = !DILocation(line: 686, column: 3, scope: !19793)
!19800 = !DILocation(line: 688, column: 2, scope: !19685)
!19801 = !DILocation(line: 690, column: 9, scope: !19685)
!19802 = !DILocation(line: 690, column: 2, scope: !19685)
!19803 = !DILocation(line: 690, column: 12, scope: !19685)
!19804 = !DILocation(line: 691, column: 9, scope: !19685)
!19805 = !DILocation(line: 691, column: 2, scope: !19685)
!19806 = !DILocation(line: 691, column: 12, scope: !19685)
!19807 = !DILocation(line: 694, column: 11, scope: !19685)
!19808 = !DILocation(line: 694, column: 2, scope: !19685)
!19809 = !DILocation(line: 697, column: 11, scope: !19685)
!19810 = !DILocation(line: 697, column: 15, scope: !19685)
!19811 = !DILocation(line: 697, column: 23, scope: !19685)
!19812 = !DILocation(line: 697, column: 28, scope: !19685)
!19813 = !DILocation(line: 697, column: 2, scope: !19685)
!19814 = !DILocation(line: 699, column: 16, scope: !19685)
!19815 = !DILocation(line: 699, column: 2, scope: !19685)
!19816 = !DILocation(line: 701, column: 26, scope: !19685)
!19817 = !DILocation(line: 703, column: 2, scope: !19685)
!19818 = !DILocation(line: 704, column: 1, scope: !19685)
!19819 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !37, file: !37, line: 655, type: !19820, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19820 = !DISubroutineType(types: !19821)
!19821 = !{!183, !2390}
!19822 = !DILocalVariable(name: "dev", arg: 1, scope: !19819, file: !37, line: 655, type: !2390)
!19823 = !DILocation(line: 655, column: 58, scope: !19819)
!19824 = !DILocation(line: 657, column: 9, scope: !19819)
!19825 = !DILocation(line: 657, column: 14, scope: !19819)
!19826 = !DILocation(line: 657, column: 2, scope: !19819)
!19827 = distinct !DISubprogram(name: "ips_halt", scope: !3, file: !3, line: 716, type: !19828, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19828 = !DISubroutineType(types: !19829)
!19829 = !{!182, !6323, !19830, !183}
!19830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ulong", file: !185, line: 88, baseType: !198)
!19831 = !DILocalVariable(name: "nb", arg: 1, scope: !19827, file: !3, line: 716, type: !6323)
!19832 = !DILocation(line: 716, column: 33, scope: !19827)
!19833 = !DILocalVariable(name: "event", arg: 2, scope: !19827, file: !3, line: 716, type: !19830)
!19834 = !DILocation(line: 716, column: 43, scope: !19827)
!19835 = !DILocalVariable(name: "buf", arg: 3, scope: !19827, file: !3, line: 716, type: !183)
!19836 = !DILocation(line: 716, column: 56, scope: !19827)
!19837 = !DILocalVariable(name: "scb", scope: !19827, file: !3, line: 718, type: !4848)
!19838 = !DILocation(line: 718, column: 13, scope: !19827)
!19839 = !DILocalVariable(name: "ha", scope: !19827, file: !3, line: 719, type: !5540)
!19840 = !DILocation(line: 719, column: 12, scope: !19827)
!19841 = !DILocalVariable(name: "i", scope: !19827, file: !3, line: 720, type: !182)
!19842 = !DILocation(line: 720, column: 6, scope: !19827)
!19843 = !DILocation(line: 722, column: 7, scope: !19844)
!19844 = distinct !DILexicalBlock(scope: !19827, file: !3, line: 722, column: 6)
!19845 = !DILocation(line: 722, column: 13, scope: !19844)
!19846 = !DILocation(line: 722, column: 29, scope: !19844)
!19847 = !DILocation(line: 722, column: 33, scope: !19844)
!19848 = !DILocation(line: 722, column: 39, scope: !19844)
!19849 = !DILocation(line: 722, column: 52, scope: !19844)
!19850 = !DILocation(line: 723, column: 7, scope: !19844)
!19851 = !DILocation(line: 723, column: 13, scope: !19844)
!19852 = !DILocation(line: 722, column: 6, scope: !19827)
!19853 = !DILocation(line: 724, column: 3, scope: !19844)
!19854 = !DILocation(line: 726, column: 9, scope: !19855)
!19855 = distinct !DILexicalBlock(scope: !19827, file: !3, line: 726, column: 2)
!19856 = !DILocation(line: 726, column: 7, scope: !19855)
!19857 = !DILocation(line: 726, column: 14, scope: !19858)
!19858 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 726, column: 2)
!19859 = !DILocation(line: 726, column: 18, scope: !19858)
!19860 = !DILocation(line: 726, column: 16, scope: !19858)
!19861 = !DILocation(line: 726, column: 2, scope: !19855)
!19862 = !DILocation(line: 727, column: 28, scope: !19863)
!19863 = distinct !DILexicalBlock(scope: !19858, file: !3, line: 726, column: 44)
!19864 = !DILocation(line: 727, column: 21, scope: !19863)
!19865 = !DILocation(line: 727, column: 6, scope: !19863)
!19866 = !DILocation(line: 729, column: 8, scope: !19867)
!19867 = distinct !DILexicalBlock(scope: !19863, file: !3, line: 729, column: 7)
!19868 = !DILocation(line: 729, column: 7, scope: !19863)
!19869 = !DILocation(line: 730, column: 4, scope: !19867)
!19870 = !DILocation(line: 732, column: 8, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19863, file: !3, line: 732, column: 7)
!19872 = !DILocation(line: 732, column: 12, scope: !19871)
!19873 = !DILocation(line: 732, column: 7, scope: !19863)
!19874 = !DILocation(line: 733, column: 4, scope: !19871)
!19875 = !DILocation(line: 736, column: 10, scope: !19863)
!19876 = !DILocation(line: 736, column: 14, scope: !19863)
!19877 = !DILocation(line: 736, column: 19, scope: !19863)
!19878 = !DILocation(line: 736, column: 23, scope: !19863)
!19879 = !DILocation(line: 736, column: 32, scope: !19863)
!19880 = !DILocation(line: 736, column: 7, scope: !19863)
!19881 = !DILocation(line: 738, column: 16, scope: !19863)
!19882 = !DILocation(line: 738, column: 20, scope: !19863)
!19883 = !DILocation(line: 738, column: 3, scope: !19863)
!19884 = !DILocation(line: 740, column: 18, scope: !19863)
!19885 = !DILocation(line: 740, column: 3, scope: !19863)
!19886 = !DILocation(line: 740, column: 8, scope: !19863)
!19887 = !DILocation(line: 740, column: 16, scope: !19863)
!19888 = !DILocation(line: 741, column: 3, scope: !19863)
!19889 = !DILocation(line: 741, column: 8, scope: !19863)
!19890 = !DILocation(line: 741, column: 15, scope: !19863)
!19891 = !DILocation(line: 743, column: 3, scope: !19863)
!19892 = !DILocation(line: 743, column: 8, scope: !19863)
!19893 = !DILocation(line: 743, column: 12, scope: !19863)
!19894 = !DILocation(line: 743, column: 24, scope: !19863)
!19895 = !DILocation(line: 743, column: 32, scope: !19863)
!19896 = !DILocation(line: 744, column: 37, scope: !19863)
!19897 = !DILocation(line: 744, column: 3, scope: !19863)
!19898 = !DILocation(line: 744, column: 8, scope: !19863)
!19899 = !DILocation(line: 744, column: 12, scope: !19863)
!19900 = !DILocation(line: 744, column: 24, scope: !19863)
!19901 = !DILocation(line: 744, column: 35, scope: !19863)
!19902 = !DILocation(line: 745, column: 3, scope: !19863)
!19903 = !DILocation(line: 745, column: 8, scope: !19863)
!19904 = !DILocation(line: 745, column: 12, scope: !19863)
!19905 = !DILocation(line: 745, column: 24, scope: !19863)
!19906 = !DILocation(line: 745, column: 30, scope: !19863)
!19907 = !DILocation(line: 746, column: 3, scope: !19863)
!19908 = !DILocation(line: 746, column: 8, scope: !19863)
!19909 = !DILocation(line: 746, column: 12, scope: !19863)
!19910 = !DILocation(line: 746, column: 24, scope: !19863)
!19911 = !DILocation(line: 746, column: 33, scope: !19863)
!19912 = !DILocation(line: 747, column: 3, scope: !19863)
!19913 = !DILocation(line: 747, column: 8, scope: !19863)
!19914 = !DILocation(line: 747, column: 12, scope: !19863)
!19915 = !DILocation(line: 747, column: 24, scope: !19863)
!19916 = !DILocation(line: 747, column: 34, scope: !19863)
!19917 = !DILocation(line: 748, column: 3, scope: !19863)
!19918 = !DILocation(line: 748, column: 8, scope: !19863)
!19919 = !DILocation(line: 748, column: 12, scope: !19863)
!19920 = !DILocation(line: 748, column: 24, scope: !19863)
!19921 = !DILocation(line: 748, column: 34, scope: !19863)
!19922 = !DILocation(line: 749, column: 3, scope: !19863)
!19923 = !DILocation(line: 749, column: 8, scope: !19863)
!19924 = !DILocation(line: 749, column: 12, scope: !19863)
!19925 = !DILocation(line: 749, column: 24, scope: !19863)
!19926 = !DILocation(line: 749, column: 34, scope: !19863)
!19927 = !DILocation(line: 751, column: 3, scope: !19863)
!19928 = !DILocation(line: 754, column: 21, scope: !19929)
!19929 = distinct !DILexicalBlock(scope: !19863, file: !3, line: 754, column: 7)
!19930 = !DILocation(line: 754, column: 25, scope: !19929)
!19931 = !DILocation(line: 754, column: 30, scope: !19929)
!19932 = !DILocation(line: 754, column: 7, scope: !19929)
!19933 = !DILocation(line: 754, column: 60, scope: !19929)
!19934 = !DILocation(line: 754, column: 7, scope: !19863)
!19935 = !DILocation(line: 756, column: 4, scope: !19929)
!19936 = !DILocation(line: 759, column: 4, scope: !19929)
!19937 = !DILocation(line: 761, column: 2, scope: !19863)
!19938 = !DILocation(line: 726, column: 40, scope: !19858)
!19939 = !DILocation(line: 726, column: 2, scope: !19858)
!19940 = distinct !{!19940, !19861, !19941}
!19941 = !DILocation(line: 761, column: 2, scope: !19855)
!19942 = !DILocation(line: 763, column: 2, scope: !19827)
!19943 = !DILocation(line: 764, column: 1, scope: !19827)
!19944 = distinct !DISubprogram(name: "ips_order_controllers", scope: !3, file: !3, line: 6556, type: !4459, scopeLine: 6557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!19945 = !DILocalVariable(name: "i", scope: !19944, file: !3, line: 6558, type: !182)
!19946 = !DILocation(line: 6558, column: 6, scope: !19944)
!19947 = !DILocalVariable(name: "j", scope: !19944, file: !3, line: 6558, type: !182)
!19948 = !DILocation(line: 6558, column: 9, scope: !19944)
!19949 = !DILocalVariable(name: "tmp", scope: !19944, file: !3, line: 6558, type: !182)
!19950 = !DILocation(line: 6558, column: 12, scope: !19944)
!19951 = !DILocalVariable(name: "position", scope: !19944, file: !3, line: 6558, type: !182)
!19952 = !DILocation(line: 6558, column: 17, scope: !19944)
!19953 = !DILocalVariable(name: "nvram", scope: !19944, file: !3, line: 6559, type: !5742)
!19954 = !DILocation(line: 6559, column: 16, scope: !19944)
!19955 = !DILocation(line: 6560, column: 7, scope: !19956)
!19956 = distinct !DILexicalBlock(scope: !19944, file: !3, line: 6560, column: 6)
!19957 = !DILocation(line: 6560, column: 6, scope: !19944)
!19958 = !DILocation(line: 6561, column: 3, scope: !19956)
!19959 = !DILocation(line: 6562, column: 10, scope: !19944)
!19960 = !DILocation(line: 6562, column: 21, scope: !19944)
!19961 = !DILocation(line: 6562, column: 8, scope: !19944)
!19962 = !DILocation(line: 6564, column: 6, scope: !19963)
!19963 = distinct !DILexicalBlock(scope: !19944, file: !3, line: 6564, column: 6)
!19964 = !DILocation(line: 6564, column: 13, scope: !19963)
!19965 = !DILocation(line: 6564, column: 6, scope: !19944)
!19966 = !DILocation(line: 6565, column: 10, scope: !19967)
!19967 = distinct !DILexicalBlock(scope: !19968, file: !3, line: 6565, column: 3)
!19968 = distinct !DILexicalBlock(scope: !19963, file: !3, line: 6564, column: 31)
!19969 = !DILocation(line: 6565, column: 8, scope: !19967)
!19970 = !DILocation(line: 6565, column: 15, scope: !19971)
!19971 = distinct !DILexicalBlock(scope: !19967, file: !3, line: 6565, column: 3)
!19972 = !DILocation(line: 6565, column: 20, scope: !19971)
!19973 = !DILocation(line: 6565, column: 27, scope: !19971)
!19974 = !DILocation(line: 6565, column: 17, scope: !19971)
!19975 = !DILocation(line: 6565, column: 3, scope: !19967)
!19976 = !DILocation(line: 6566, column: 13, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19978, file: !3, line: 6566, column: 4)
!19978 = distinct !DILexicalBlock(scope: !19971, file: !3, line: 6565, column: 50)
!19979 = !DILocation(line: 6566, column: 11, scope: !19977)
!19980 = !DILocation(line: 6566, column: 9, scope: !19977)
!19981 = !DILocation(line: 6566, column: 23, scope: !19982)
!19982 = distinct !DILexicalBlock(scope: !19977, file: !3, line: 6566, column: 4)
!19983 = !DILocation(line: 6566, column: 27, scope: !19982)
!19984 = !DILocation(line: 6566, column: 25, scope: !19982)
!19985 = !DILocation(line: 6566, column: 4, scope: !19977)
!19986 = !DILocation(line: 6567, column: 20, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19982, file: !3, line: 6566, column: 53)
!19988 = !DILocation(line: 6567, column: 13, scope: !19987)
!19989 = !DILocation(line: 6567, column: 24, scope: !19987)
!19990 = !DILocation(line: 6567, column: 5, scope: !19987)
!19991 = !DILocation(line: 6570, column: 10, scope: !19992)
!19992 = distinct !DILexicalBlock(scope: !19993, file: !3, line: 6570, column: 10)
!19993 = distinct !DILexicalBlock(scope: !19987, file: !3, line: 6567, column: 33)
!19994 = !DILocation(line: 6570, column: 17, scope: !19992)
!19995 = !DILocation(line: 6570, column: 31, scope: !19992)
!19996 = !DILocation(line: 6570, column: 34, scope: !19992)
!19997 = !DILocation(line: 6570, column: 10, scope: !19993)
!19998 = !DILocation(line: 6571, column: 29, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !19992, file: !3, line: 6570, column: 42)
!20000 = !DILocation(line: 6572, column: 15, scope: !19999)
!20001 = !DILocation(line: 6571, column: 7, scope: !19999)
!20002 = !DILocation(line: 6573, column: 15, scope: !19999)
!20003 = !DILocation(line: 6574, column: 6, scope: !19999)
!20004 = !DILocation(line: 6575, column: 6, scope: !19993)
!20005 = !DILocation(line: 6580, column: 10, scope: !20006)
!20006 = distinct !DILexicalBlock(scope: !19993, file: !3, line: 6580, column: 10)
!20007 = !DILocation(line: 6580, column: 17, scope: !20006)
!20008 = !DILocation(line: 6580, column: 31, scope: !20006)
!20009 = !DILocation(line: 6580, column: 34, scope: !20006)
!20010 = !DILocation(line: 6580, column: 10, scope: !19993)
!20011 = !DILocation(line: 6581, column: 29, scope: !20012)
!20012 = distinct !DILexicalBlock(scope: !20006, file: !3, line: 6580, column: 42)
!20013 = !DILocation(line: 6582, column: 15, scope: !20012)
!20014 = !DILocation(line: 6581, column: 7, scope: !20012)
!20015 = !DILocation(line: 6583, column: 15, scope: !20012)
!20016 = !DILocation(line: 6584, column: 6, scope: !20012)
!20017 = !DILocation(line: 6585, column: 6, scope: !19993)
!20018 = !DILocation(line: 6590, column: 10, scope: !20019)
!20019 = distinct !DILexicalBlock(scope: !19993, file: !3, line: 6590, column: 10)
!20020 = !DILocation(line: 6590, column: 17, scope: !20019)
!20021 = !DILocation(line: 6590, column: 31, scope: !20019)
!20022 = !DILocation(line: 6590, column: 34, scope: !20019)
!20023 = !DILocation(line: 6590, column: 10, scope: !19993)
!20024 = !DILocation(line: 6591, column: 29, scope: !20025)
!20025 = distinct !DILexicalBlock(scope: !20019, file: !3, line: 6590, column: 42)
!20026 = !DILocation(line: 6592, column: 15, scope: !20025)
!20027 = !DILocation(line: 6591, column: 7, scope: !20025)
!20028 = !DILocation(line: 6593, column: 15, scope: !20025)
!20029 = !DILocation(line: 6594, column: 6, scope: !20025)
!20030 = !DILocation(line: 6595, column: 6, scope: !19993)
!20031 = !DILocation(line: 6603, column: 10, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !19993, file: !3, line: 6603, column: 10)
!20033 = !DILocation(line: 6603, column: 17, scope: !20032)
!20034 = !DILocation(line: 6603, column: 31, scope: !20032)
!20035 = !DILocation(line: 6603, column: 34, scope: !20032)
!20036 = !DILocation(line: 6603, column: 10, scope: !19993)
!20037 = !DILocation(line: 6604, column: 29, scope: !20038)
!20038 = distinct !DILexicalBlock(scope: !20032, file: !3, line: 6603, column: 42)
!20039 = !DILocation(line: 6605, column: 15, scope: !20038)
!20040 = !DILocation(line: 6604, column: 7, scope: !20038)
!20041 = !DILocation(line: 6606, column: 15, scope: !20038)
!20042 = !DILocation(line: 6607, column: 6, scope: !20038)
!20043 = !DILocation(line: 6608, column: 6, scope: !19993)
!20044 = !DILocation(line: 6610, column: 6, scope: !19993)
!20045 = !DILocation(line: 6612, column: 4, scope: !19987)
!20046 = !DILocation(line: 6566, column: 49, scope: !19982)
!20047 = !DILocation(line: 6566, column: 4, scope: !19982)
!20048 = distinct !{!20048, !19985, !20049}
!20049 = !DILocation(line: 6612, column: 4, scope: !19977)
!20050 = !DILocation(line: 6613, column: 3, scope: !19978)
!20051 = !DILocation(line: 6565, column: 46, scope: !19971)
!20052 = !DILocation(line: 6565, column: 3, scope: !19971)
!20053 = distinct !{!20053, !19975, !20054}
!20054 = !DILocation(line: 6613, column: 3, scope: !19967)
!20055 = !DILocation(line: 6615, column: 3, scope: !19968)
!20056 = !DILocation(line: 6618, column: 6, scope: !19944)
!20057 = !DILocation(line: 6619, column: 11, scope: !20058)
!20058 = distinct !DILexicalBlock(scope: !19944, file: !3, line: 6619, column: 2)
!20059 = !DILocation(line: 6619, column: 9, scope: !20058)
!20060 = !DILocation(line: 6619, column: 7, scope: !20058)
!20061 = !DILocation(line: 6619, column: 21, scope: !20062)
!20062 = distinct !DILexicalBlock(scope: !20058, file: !3, line: 6619, column: 2)
!20063 = !DILocation(line: 6619, column: 25, scope: !20062)
!20064 = !DILocation(line: 6619, column: 23, scope: !20062)
!20065 = !DILocation(line: 6619, column: 2, scope: !20058)
!20066 = !DILocation(line: 6620, column: 14, scope: !20067)
!20067 = distinct !DILexicalBlock(scope: !20068, file: !3, line: 6620, column: 7)
!20068 = distinct !DILexicalBlock(scope: !20062, file: !3, line: 6619, column: 51)
!20069 = !DILocation(line: 6620, column: 7, scope: !20067)
!20070 = !DILocation(line: 6620, column: 18, scope: !20067)
!20071 = !DILocation(line: 6620, column: 26, scope: !20067)
!20072 = !DILocation(line: 6620, column: 53, scope: !20067)
!20073 = !DILocation(line: 6621, column: 14, scope: !20067)
!20074 = !DILocation(line: 6621, column: 7, scope: !20067)
!20075 = !DILocation(line: 6621, column: 18, scope: !20067)
!20076 = !DILocation(line: 6621, column: 26, scope: !20067)
!20077 = !DILocation(line: 6620, column: 7, scope: !20068)
!20078 = !DILocation(line: 6622, column: 26, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !20067, file: !3, line: 6621, column: 54)
!20080 = !DILocation(line: 6622, column: 36, scope: !20079)
!20081 = !DILocation(line: 6622, column: 4, scope: !20079)
!20082 = !DILocation(line: 6623, column: 12, scope: !20079)
!20083 = !DILocation(line: 6624, column: 8, scope: !20079)
!20084 = !DILocation(line: 6625, column: 3, scope: !20079)
!20085 = !DILocation(line: 6626, column: 2, scope: !20068)
!20086 = !DILocation(line: 6619, column: 47, scope: !20062)
!20087 = !DILocation(line: 6619, column: 2, scope: !20062)
!20088 = distinct !{!20088, !20065, !20089}
!20089 = !DILocation(line: 6626, column: 2, scope: !20058)
!20090 = !DILocation(line: 6628, column: 7, scope: !20091)
!20091 = distinct !DILexicalBlock(scope: !19944, file: !3, line: 6628, column: 6)
!20092 = !DILocation(line: 6628, column: 6, scope: !19944)
!20093 = !DILocation(line: 6629, column: 3, scope: !20091)
!20094 = !DILocation(line: 6630, column: 11, scope: !20095)
!20095 = distinct !DILexicalBlock(scope: !19944, file: !3, line: 6630, column: 2)
!20096 = !DILocation(line: 6630, column: 9, scope: !20095)
!20097 = !DILocation(line: 6630, column: 7, scope: !20095)
!20098 = !DILocation(line: 6630, column: 21, scope: !20099)
!20099 = distinct !DILexicalBlock(scope: !20095, file: !3, line: 6630, column: 2)
!20100 = !DILocation(line: 6630, column: 25, scope: !20099)
!20101 = !DILocation(line: 6630, column: 23, scope: !20099)
!20102 = !DILocation(line: 6630, column: 2, scope: !20095)
!20103 = !DILocation(line: 6631, column: 14, scope: !20104)
!20104 = distinct !DILexicalBlock(scope: !20105, file: !3, line: 6631, column: 7)
!20105 = distinct !DILexicalBlock(scope: !20099, file: !3, line: 6630, column: 51)
!20106 = !DILocation(line: 6631, column: 7, scope: !20104)
!20107 = !DILocation(line: 6631, column: 18, scope: !20104)
!20108 = !DILocation(line: 6631, column: 26, scope: !20104)
!20109 = !DILocation(line: 6631, column: 52, scope: !20104)
!20110 = !DILocation(line: 6632, column: 14, scope: !20104)
!20111 = !DILocation(line: 6632, column: 7, scope: !20104)
!20112 = !DILocation(line: 6632, column: 18, scope: !20104)
!20113 = !DILocation(line: 6632, column: 26, scope: !20104)
!20114 = !DILocation(line: 6632, column: 52, scope: !20104)
!20115 = !DILocation(line: 6633, column: 14, scope: !20104)
!20116 = !DILocation(line: 6633, column: 7, scope: !20104)
!20117 = !DILocation(line: 6633, column: 18, scope: !20104)
!20118 = !DILocation(line: 6633, column: 26, scope: !20104)
!20119 = !DILocation(line: 6633, column: 53, scope: !20104)
!20120 = !DILocation(line: 6634, column: 14, scope: !20104)
!20121 = !DILocation(line: 6634, column: 7, scope: !20104)
!20122 = !DILocation(line: 6634, column: 18, scope: !20104)
!20123 = !DILocation(line: 6634, column: 26, scope: !20104)
!20124 = !DILocation(line: 6631, column: 7, scope: !20105)
!20125 = !DILocation(line: 6635, column: 26, scope: !20126)
!20126 = distinct !DILexicalBlock(scope: !20104, file: !3, line: 6634, column: 54)
!20127 = !DILocation(line: 6635, column: 36, scope: !20126)
!20128 = !DILocation(line: 6635, column: 4, scope: !20126)
!20129 = !DILocation(line: 6636, column: 12, scope: !20126)
!20130 = !DILocation(line: 6637, column: 3, scope: !20126)
!20131 = !DILocation(line: 6638, column: 2, scope: !20105)
!20132 = !DILocation(line: 6630, column: 47, scope: !20099)
!20133 = !DILocation(line: 6630, column: 2, scope: !20099)
!20134 = distinct !{!20134, !20102, !20135}
!20135 = !DILocation(line: 6638, column: 2, scope: !20095)
!20136 = !DILocation(line: 6640, column: 2, scope: !19944)
!20137 = !DILocation(line: 6641, column: 1, scope: !19944)
!20138 = distinct !DISubprogram(name: "ips_detect", scope: !3, file: !3, line: 553, type: !20139, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!20139 = !DISubroutineType(types: !20140)
!20140 = !{!182, !5138}
!20141 = !DILocalVariable(name: "SHT", arg: 1, scope: !20138, file: !3, line: 553, type: !5138)
!20142 = !DILocation(line: 553, column: 40, scope: !20138)
!20143 = !DILocalVariable(name: "i", scope: !20138, file: !3, line: 555, type: !182)
!20144 = !DILocation(line: 555, column: 6, scope: !20138)
!20145 = !DILocation(line: 564, column: 9, scope: !20146)
!20146 = distinct !DILexicalBlock(scope: !20138, file: !3, line: 564, column: 2)
!20147 = !DILocation(line: 564, column: 7, scope: !20146)
!20148 = !DILocation(line: 564, column: 14, scope: !20149)
!20149 = distinct !DILexicalBlock(scope: !20146, file: !3, line: 564, column: 2)
!20150 = !DILocation(line: 564, column: 18, scope: !20149)
!20151 = !DILocation(line: 564, column: 16, scope: !20149)
!20152 = !DILocation(line: 564, column: 2, scope: !20146)
!20153 = !DILocation(line: 565, column: 25, scope: !20154)
!20154 = distinct !DILexicalBlock(scope: !20155, file: !3, line: 565, column: 7)
!20155 = distinct !DILexicalBlock(scope: !20149, file: !3, line: 564, column: 44)
!20156 = !DILocation(line: 565, column: 7, scope: !20154)
!20157 = !DILocation(line: 565, column: 7, scope: !20155)
!20158 = !DILocation(line: 566, column: 20, scope: !20154)
!20159 = !DILocation(line: 566, column: 13, scope: !20154)
!20160 = !DILocation(line: 566, column: 4, scope: !20154)
!20161 = !DILocation(line: 567, column: 27, scope: !20155)
!20162 = !DILocation(line: 568, column: 2, scope: !20155)
!20163 = !DILocation(line: 564, column: 40, scope: !20149)
!20164 = !DILocation(line: 564, column: 2, scope: !20149)
!20165 = distinct !{!20165, !20152, !20166}
!20166 = !DILocation(line: 568, column: 2, scope: !20146)
!20167 = !DILocation(line: 569, column: 14, scope: !20138)
!20168 = !DILocation(line: 570, column: 10, scope: !20138)
!20169 = !DILocation(line: 570, column: 2, scope: !20138)
!20170 = distinct !DISubprogram(name: "ips_shift_controllers", scope: !3, file: !3, line: 6532, type: !20171, scopeLine: 6533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!20171 = !DISubroutineType(types: !20172)
!20172 = !{null, !182, !182}
!20173 = !DILocalVariable(name: "lowindex", arg: 1, scope: !20170, file: !3, line: 6532, type: !182)
!20174 = !DILocation(line: 6532, column: 27, scope: !20170)
!20175 = !DILocalVariable(name: "highindex", arg: 2, scope: !20170, file: !3, line: 6532, type: !182)
!20176 = !DILocation(line: 6532, column: 41, scope: !20170)
!20177 = !DILocalVariable(name: "ha_sav", scope: !20170, file: !3, line: 6534, type: !5540)
!20178 = !DILocation(line: 6534, column: 12, scope: !20170)
!20179 = !DILocation(line: 6534, column: 28, scope: !20170)
!20180 = !DILocation(line: 6534, column: 21, scope: !20170)
!20181 = !DILocalVariable(name: "sh_sav", scope: !20170, file: !3, line: 6535, type: !5124)
!20182 = !DILocation(line: 6535, column: 20, scope: !20170)
!20183 = !DILocation(line: 6535, column: 36, scope: !20170)
!20184 = !DILocation(line: 6535, column: 29, scope: !20170)
!20185 = !DILocalVariable(name: "i", scope: !20170, file: !3, line: 6536, type: !182)
!20186 = !DILocation(line: 6536, column: 6, scope: !20170)
!20187 = !DILocation(line: 6538, column: 11, scope: !20188)
!20188 = distinct !DILexicalBlock(scope: !20170, file: !3, line: 6538, column: 2)
!20189 = !DILocation(line: 6538, column: 9, scope: !20188)
!20190 = !DILocation(line: 6538, column: 7, scope: !20188)
!20191 = !DILocation(line: 6538, column: 22, scope: !20192)
!20192 = distinct !DILexicalBlock(scope: !20188, file: !3, line: 6538, column: 2)
!20193 = !DILocation(line: 6538, column: 26, scope: !20192)
!20194 = !DILocation(line: 6538, column: 24, scope: !20192)
!20195 = !DILocation(line: 6538, column: 2, scope: !20188)
!20196 = !DILocation(line: 6539, column: 22, scope: !20197)
!20197 = distinct !DILexicalBlock(scope: !20192, file: !3, line: 6538, column: 41)
!20198 = !DILocation(line: 6539, column: 24, scope: !20197)
!20199 = !DILocation(line: 6539, column: 15, scope: !20197)
!20200 = !DILocation(line: 6539, column: 10, scope: !20197)
!20201 = !DILocation(line: 6539, column: 3, scope: !20197)
!20202 = !DILocation(line: 6539, column: 13, scope: !20197)
!20203 = !DILocation(line: 6540, column: 22, scope: !20197)
!20204 = !DILocation(line: 6540, column: 24, scope: !20197)
!20205 = !DILocation(line: 6540, column: 15, scope: !20197)
!20206 = !DILocation(line: 6540, column: 10, scope: !20197)
!20207 = !DILocation(line: 6540, column: 3, scope: !20197)
!20208 = !DILocation(line: 6540, column: 13, scope: !20197)
!20209 = !DILocation(line: 6541, column: 25, scope: !20197)
!20210 = !DILocation(line: 6541, column: 10, scope: !20197)
!20211 = !DILocation(line: 6541, column: 3, scope: !20197)
!20212 = !DILocation(line: 6541, column: 14, scope: !20197)
!20213 = !DILocation(line: 6541, column: 23, scope: !20197)
!20214 = !DILocation(line: 6542, column: 2, scope: !20197)
!20215 = !DILocation(line: 6538, column: 37, scope: !20192)
!20216 = !DILocation(line: 6538, column: 2, scope: !20192)
!20217 = distinct !{!20217, !20195, !20218}
!20218 = !DILocation(line: 6542, column: 2, scope: !20188)
!20219 = !DILocation(line: 6543, column: 21, scope: !20170)
!20220 = !DILocation(line: 6543, column: 2, scope: !20170)
!20221 = !DILocation(line: 6543, column: 10, scope: !20170)
!20222 = !DILocation(line: 6543, column: 19, scope: !20170)
!20223 = !DILocation(line: 6544, column: 21, scope: !20170)
!20224 = !DILocation(line: 6544, column: 9, scope: !20170)
!20225 = !DILocation(line: 6544, column: 2, scope: !20170)
!20226 = !DILocation(line: 6544, column: 19, scope: !20170)
!20227 = !DILocation(line: 6545, column: 21, scope: !20170)
!20228 = !DILocation(line: 6545, column: 9, scope: !20170)
!20229 = !DILocation(line: 6545, column: 2, scope: !20170)
!20230 = !DILocation(line: 6545, column: 19, scope: !20170)
!20231 = !DILocation(line: 6546, column: 1, scope: !20170)
