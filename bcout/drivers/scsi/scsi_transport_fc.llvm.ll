; ModuleID = '../bcout/drivers/scsi/scsi_transport_fc.llvm.bc'
source_filename = "drivers/scsi/scsi_transport_fc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_fc_transport_init6:\09\09\09"
module asm ".long\09fc_transport_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.atomic_t = type { i32 }
%struct.sock = type opaque
%struct.transport_class = type { %struct.class, i32 (%struct.transport_container*, %struct.device*, %struct.device*)*, i32 (%struct.transport_container*, %struct.device*, %struct.device*)*, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.4, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.4 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.24, %struct.list_head, %struct.list_head, %union.anon.25 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.5, i8* }
%union.anon.5 = type { i64 }
%struct.lockref = type { %union.anon.7 }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.9, i32 }
%union.anon.9 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.10, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.10 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.1, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.71, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.54 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.32, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.33, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.34, %union.anon.38, %struct.key_restriction* }
%union.anon.32 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.33 = type { i64 }
%union.anon.34 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.35, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.35 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.38 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.11, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.11 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.17, %union.anon.18, i32 }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.13, %union.anon.14, %union.anon.15, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.20, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.12, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.12 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.13 = type { %struct.hlist_node }
%union.anon.14 = type { %struct.rb_node }
%union.anon.15 = type { %struct.anon.19 }
%struct.anon.19 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.20 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.21, void (i8*)*, i8* }
%union.anon.21 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.22, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.22 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%union.anon.17 = type { %struct.list_head }
%union.anon.18 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.63 }
%struct.anon.63 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.70, i32, [12 x i8] }
%union.anon.70 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.71 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.72, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.75 }
%union.anon.72 = type { %struct.anon.73 }
%struct.anon.73 = type { i64, i64 }
%union.anon.75 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.1 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.24 = type { %struct.list_head }
%union.anon.25 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.79, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.26 }
%union.anon.26 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type { i32, i64, i64, %union.anon.27, %union.anon.28 }
%union.anon.27 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.28 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.79 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.30 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.30 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.40 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.40 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.subsys_private = type opaque
%struct.transport_container = type { %struct.attribute_container, %struct.attribute_group* }
%struct.attribute_container = type { %struct.list_head, %struct.klist, %struct.class*, %struct.attribute_group*, %struct.device_attribute**, i32 (%struct.attribute_container*, %struct.device*)*, i64 }
%struct.klist = type { %struct.spinlock, %struct.list_head, void (%struct.klist_node*)*, void (%struct.klist_node*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.anon.92 = type { i32, i8* }
%struct.anon.96 = type { i32, i8* }
%struct.anon.97 = type { i32, i8* }
%struct.anon.98 = type { i32, i8* }
%struct.anon.99 = type { i32, i8* }
%struct.anon.100 = type { i32, i8*, i32 }
%struct.anon.101 = type { i32, i8* }
%struct.anon.102 = type { i32, i8* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type { %struct.transport_container, %struct.transport_container, %struct.transport_container, i32 (%struct.Scsi_Host*, i32, i32, i64)*, i32, i32, i32, i32, i32, i8, void (%struct.Scsi_Host*)* }
%struct.sk_buff = type { %union.anon.80, %union.anon.83, %union.anon.84, [48 x i8], %union.anon.85, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.87, i32, i32, i32, i16, i16, %union.anon.89, %union.anon.90, %union.anon.91, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.80 = type { %struct.anon.81 }
%struct.anon.81 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.82 }
%union.anon.82 = type { %struct.net_device* }
%struct.net_device = type opaque
%union.anon.83 = type { %struct.sock* }
%union.anon.84 = type { i64 }
%union.anon.85 = type { %struct.anon.86 }
%struct.anon.86 = type { i64, void (%struct.sk_buff*)* }
%union.anon.87 = type { i32 }
%union.anon.89 = type { i32 }
%union.anon.90 = type { i32 }
%union.anon.91 = type { i16 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.fc_nl_event = type { %struct.scsi_nl_hdr, i64, i64, i16, i16, i32, i32, i32 }
%struct.scsi_nl_hdr = type { i8, i8, i16, i16, i16 }
%struct.netlink_skb_parms = type { %struct.scm_creds, i32, i32, i32, %struct.sock*, i8, i32 }
%struct.scm_creds = type { i32, %struct.kuid_t, %struct.kgid_t }
%struct.fc_rport = type { i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i8*, i32, i32, i8, %struct.list_head, %struct.device, %struct.delayed_work, %struct.work_struct, %struct.delayed_work, %struct.work_struct, %struct.work_struct, %struct.request_queue* }
%struct.fc_function_template = type { void (%struct.fc_rport*)*, void (%struct.fc_rport*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, %struct.fc_host_statistics* (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*)*, void (%struct.fc_rport*)*, void (%struct.fc_rport*)*, void (%struct.fc_vport*)*, i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*)*, i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)*, i32, i32, i32, i32 }
%struct.fc_host_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.fc_vport = type { i32, i32, i64, i64, i32, i32, i32, [64 x i8], i8*, %struct.Scsi_Host*, i32, i32, i8, %struct.list_head, %struct.device, %struct.work_struct }
%struct.bsg_job = type { %struct.device*, %struct.kref, i32, i8*, i8*, i32, i32, %struct.bsg_buffer, %struct.bsg_buffer, i32, i32, %struct.request*, %struct.bio*, i8* }
%struct.bsg_buffer = type { i32, i32, %struct.scatterlist* }
%struct.fc_internal = type { %struct.scsi_transport_template, %struct.fc_function_template*, [3 x %struct.device_attribute], [4 x %struct.device_attribute*], [29 x %struct.device_attribute], [30 x %struct.device_attribute*], %struct.transport_container, [10 x %struct.device_attribute], [11 x %struct.device_attribute*], %struct.transport_container, [9 x %struct.device_attribute], [10 x %struct.device_attribute*] }
%struct.fc_host_attrs = type { i64, i64, i64, i32, [32 x i8], i32, i32, i16, [80 x i8], [80 x i8], [256 x i8], [256 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, [32 x i8], i32, i64, [256 x i8], [256 x i8], i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i16, [20 x i8], %struct.workqueue_struct*, [20 x i8], %struct.workqueue_struct*, %struct.request_queue* }
%struct.fc_rport_identifiers = type { i64, i64, i32, i32 }
%struct.fc_vport_identifiers = type { i64, i64, i32, i8, i32, [64 x i8] }
%struct.fc_starget_attrs = type { i64, i64, i32 }
%struct.fc_bsg_request = type <{ i32, %union.anon.93 }>
%union.anon.93 = type { %struct.fc_bsg_host_vendor, [8 x i8] }
%struct.fc_bsg_host_vendor = type { i64, [0 x i32] }
%struct.fc_bsg_reply = type { i32, i32, %union.anon.94 }
%union.anon.94 = type { %struct.fc_bsg_ctels_reply }
%struct.fc_bsg_ctels_reply = type { i32, %struct.anon.95 }
%struct.anon.95 = type { i8, i8, i8, i8 }

@__param_str_dev_loss_tmo = internal constant [31 x i8] c"scsi_transport_fc.dev_loss_tmo\00", align 16, !dbg !0
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@fc_dev_loss_tmo = internal global i32 60, align 4, !dbg !5820
@__param_dev_loss_tmo = internal constant %struct.kernel_param { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__param_str_dev_loss_tmo, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @fc_dev_loss_tmo to i8*) } }, section "__param", align 8, !dbg !5736
@__UNIQUE_ID_dev_loss_tmotype337 = internal constant [45 x i8] c"scsi_transport_fc.parmtype=dev_loss_tmo:uint\00", section ".modinfo", align 1, !dbg !5788
@__UNIQUE_ID_dev_loss_tmo338 = internal constant [276 x i8] c"scsi_transport_fc.parm=dev_loss_tmo:Maximum number of seconds that the FC transport should insulate the loss of a remote port. Once this value is exceeded, the scsi target is removed. Value should be between 1 and SCSI_DEVICE_BLOCK_MAX_TIMEOUT if fast_io_fail_tmo is not set.\00", section ".modinfo", align 1, !dbg !5793
@fc_event_seq = internal global %struct.atomic_t zeroinitializer, align 4, !dbg !5818
@scsi_nl_sock = external dso_local global %struct.sock*, align 8
@.str = private unnamed_addr constant [55 x i8] c"\014%s: Dropped Event : host %d %s data 0x%08x - err %d\0A\00", align 1
@__func__.fc_host_post_fc_event = private unnamed_addr constant [22 x i8] c"fc_host_post_fc_event\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@fc_transport_class = internal global %struct.transport_class { %struct.class { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* @fc_target_setup, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null }, align 8, !dbg !5832
@fc_rport_class = internal global %struct.transport_class { %struct.class { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null }, align 8, !dbg !5844
@fc_host_class = internal global %struct.transport_class { %struct.class { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* @fc_host_setup, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* @fc_host_remove }, align 8, !dbg !5846
@fc_vport_class = internal global %struct.transport_class { %struct.class { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null, i32 (%struct.transport_container*, %struct.device*, %struct.device*)* null }, align 8, !dbg !5848
@fc_statistics_group = internal global %struct.attribute_group { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([31 x %struct.attribute*], [31 x %struct.attribute*]* @fc_statistics_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !5850
@device_attr_starget_node_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_starget_node_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5917
@device_attr_starget_port_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_starget_port_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5919
@device_attr_starget_port_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_starget_port_id, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5921
@.str.2 = private unnamed_addr constant [33 x i8] c"drivers/scsi/scsi_transport_fc.c\00", align 1
@device_attr_host_node_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_node_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5923
@device_attr_host_port_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_port_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5925
@device_attr_host_permanent_port_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.63, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_permanent_port_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5927
@device_attr_host_supported_classes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_supported_classes, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5929
@device_attr_host_supported_fc4s = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_supported_fc4s, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5939
@device_attr_host_supported_speeds = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_supported_speeds, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5941
@device_attr_host_maxframe_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_maxframe_size, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5951
@device_attr_host_max_npiv_vports = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_max_npiv_vports, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5953
@device_attr_host_npiv_vports_inuse = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_npiv_vports_inuse, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5955
@device_attr_host_serial_number = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_serial_number, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5957
@device_attr_host_manufacturer = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.102, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_manufacturer, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5959
@device_attr_host_model = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_model, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5961
@device_attr_host_model_description = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_model_description, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5963
@device_attr_host_hardware_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.105, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_hardware_version, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5965
@device_attr_host_driver_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_driver_version, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5967
@device_attr_host_firmware_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_firmware_version, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5969
@device_attr_host_optionrom_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.108, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_optionrom_version, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5971
@device_attr_host_port_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_port_id, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5973
@device_attr_host_port_type = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_port_type, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5975
@device_attr_host_port_state = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_port_state, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5984
@device_attr_host_active_fc4s = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.128, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_active_fc4s, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5993
@device_attr_host_speed = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_speed, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5995
@device_attr_host_fabric_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.130, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_fabric_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5997
@device_attr_host_symbolic_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_symbolic_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5999
@device_attr_host_system_hostname = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_system_hostname, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_host_system_hostname }, align 8, !dbg !6001
@device_attr_host_dev_loss_tmo = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.133, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_host_dev_loss_tmo, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_private_host_dev_loss_tmo }, align 8, !dbg !6003
@device_attr_host_tgtid_bind_type = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.135, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_private_host_tgtid_bind_type, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_private_host_tgtid_bind_type }, align 8, !dbg !6005
@device_attr_host_issue_lip = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.140, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_private_host_issue_lip }, align 8, !dbg !6016
@device_attr_host_vport_create = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_host_vport_create }, align 8, !dbg !6018
@device_attr_host_vport_delete = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_host_vport_delete }, align 8, !dbg !6020
@device_attr_rport_maxframe_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_maxframe_size, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6022
@device_attr_rport_supported_classes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_supported_classes, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6024
@device_attr_rport_dev_loss_tmo = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.133, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_dev_loss_tmo, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_rport_dev_loss_tmo }, align 8, !dbg !6026
@device_attr_rport_node_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_node_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6028
@device_attr_rport_port_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_port_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6030
@device_attr_rport_port_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_port_id, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6032
@device_attr_rport_roles = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.143, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_roles, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6034
@device_attr_rport_port_state = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_port_state, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6044
@device_attr_rport_scsi_target_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_scsi_target_id, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6046
@device_attr_rport_fast_io_fail_tmo = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.158, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_rport_fast_io_fail_tmo, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_rport_fast_io_fail_tmo }, align 8, !dbg !6048
@device_attr_vport_vport_state = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_vport_state, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6050
@device_attr_vport_vport_last_state = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_vport_last_state, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6059
@device_attr_vport_node_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_node_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6061
@device_attr_vport_port_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_port_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6063
@device_attr_vport_roles = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.143, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_roles, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6065
@device_attr_vport_vport_type = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.171, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_vport_type, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6067
@device_attr_vport_symbolic_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fc_vport_symbolic_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_vport_symbolic_name }, align 8, !dbg !6069
@device_attr_vport_vport_delete = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_vport_delete }, align 8, !dbg !6071
@device_attr_vport_vport_disable = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_fc_vport_disable }, align 8, !dbg !6073
@__UNIQUE_ID_author444 = internal constant [37 x i8] c"scsi_transport_fc.author=James Smart\00", section ".modinfo", align 1, !dbg !5798
@__UNIQUE_ID_description445 = internal constant [54 x i8] c"scsi_transport_fc.description=FC Transport Attributes\00", section ".modinfo", align 1, !dbg !5801
@__UNIQUE_ID_file446 = internal constant [54 x i8] c"scsi_transport_fc.file=drivers/scsi/scsi_transport_fc\00", section ".modinfo", align 1, !dbg !5806
@__UNIQUE_ID_license447 = internal constant [30 x i8] c"scsi_transport_fc.license=GPL\00", section ".modinfo", align 1, !dbg !5808
@__UNIQUE_ID___addressable_fc_transport_init448 = internal global i8* bitcast (i32 ()* @fc_transport_init to i8*), section ".discard.addressable", align 8, !dbg !5811
@__exitcall_fc_transport_exit = internal global void ()* @fc_transport_exit, section ".exitcall.exit", align 8, !dbg !5813
@fc_host_event_code_names = internal constant [13 x %struct.anon.92] [%struct.anon.92 { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0) }, %struct.anon.92 { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0) }, %struct.anon.92 { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0) }, %struct.anon.92 { i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0) }, %struct.anon.92 { i32 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0) }, %struct.anon.92 { i32 259, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, %struct.anon.92 { i32 512, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0) }, %struct.anon.92 { i32 514, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0) }, %struct.anon.92 { i32 513, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0) }, %struct.anon.92 { i32 516, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0) }, %struct.anon.92 { i32 1280, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0) }, %struct.anon.92 { i32 1281, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0) }, %struct.anon.92 { i32 65535, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0) }], align 16, !dbg !5822
@.str.3 = private unnamed_addr constant [4 x i8] c"lip\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"link_up\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"link_down\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"lip_reset\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"rscn\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"adapter_chg\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"port_unknown\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"port_online\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"port_offline\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"port_fabric\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"link_unknown\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"link_FPIN\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"vendor_unique\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"fc_transport\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"fc_remote_ports\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"fc_host\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"fc_wq_%d\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"fc_dl_%d\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"fc_host%d\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"fc_host%d: bsg interface failed to initialize - setup queue\0A\00", align 1
@.str.24 = private unnamed_addr constant [67 x i8] c"\013ERROR: FC BSG request timeout - LLD abort failed with status %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"fc_vports\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.26 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"statistics\00", align 1
@fc_statistics_attrs = internal global [31 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_seconds_since_last_reset, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_tx_frames, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_tx_words, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_rx_frames, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_rx_words, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_lip_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_nos_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_error_frames, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_dumped_frames, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_link_failure_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_loss_of_sync_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_loss_of_signal_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_prim_seq_protocol_err_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_invalid_tx_word_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_invalid_crc_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_input_requests, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_output_requests, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_control_requests, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_input_megabytes, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_output_megabytes, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_packet_alloc_failures, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_packet_aborts, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fcp_frame_alloc_failures, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fc_no_free_exch, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fc_no_free_exch_xid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fc_xid_not_found, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fc_xid_busy, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fc_seq_not_found, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_fc_non_bls_resp, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @device_attr_host_reset_statistics, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !5852
@device_attr_host_seconds_since_last_reset = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_seconds_since_last_reset, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5857
@device_attr_host_tx_frames = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_tx_frames, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5859
@device_attr_host_tx_words = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_tx_words, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5861
@device_attr_host_rx_frames = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_rx_frames, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5863
@device_attr_host_rx_words = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_rx_words, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5865
@device_attr_host_lip_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_lip_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5867
@device_attr_host_nos_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_nos_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5869
@device_attr_host_error_frames = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_error_frames, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5871
@device_attr_host_dumped_frames = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_dumped_frames, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5873
@device_attr_host_link_failure_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_link_failure_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5875
@device_attr_host_loss_of_sync_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_loss_of_sync_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5877
@device_attr_host_loss_of_signal_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_loss_of_signal_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5879
@device_attr_host_prim_seq_protocol_err_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.41, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_prim_seq_protocol_err_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5881
@device_attr_host_invalid_tx_word_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_invalid_tx_word_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5883
@device_attr_host_invalid_crc_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_invalid_crc_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5885
@device_attr_host_fcp_input_requests = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_input_requests, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5887
@device_attr_host_fcp_output_requests = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_output_requests, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5889
@device_attr_host_fcp_control_requests = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_control_requests, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5891
@device_attr_host_fcp_input_megabytes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_input_megabytes, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5893
@device_attr_host_fcp_output_megabytes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_output_megabytes, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5895
@device_attr_host_fcp_packet_alloc_failures = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_packet_alloc_failures, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5897
@device_attr_host_fcp_packet_aborts = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_packet_aborts, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5899
@device_attr_host_fcp_frame_alloc_failures = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fcp_frame_alloc_failures, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5901
@device_attr_host_fc_no_free_exch = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fc_no_free_exch, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5903
@device_attr_host_fc_no_free_exch_xid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fc_no_free_exch_xid, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5905
@device_attr_host_fc_xid_not_found = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fc_xid_not_found, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5907
@device_attr_host_fc_xid_busy = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fc_xid_busy, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5909
@device_attr_host_fc_seq_not_found = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fc_seq_not_found, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5911
@device_attr_host_fc_non_bls_resp = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_fcstat_fc_non_bls_resp, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5913
@device_attr_host_reset_statistics = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @fc_reset_statistics }, align 8, !dbg !5915
@.str.28 = private unnamed_addr constant [25 x i8] c"seconds_since_last_reset\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"0x%llx\0A\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"tx_frames\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"tx_words\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"rx_frames\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"rx_words\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"lip_count\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"nos_count\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"error_frames\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"dumped_frames\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"link_failure_count\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"loss_of_sync_count\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"loss_of_signal_count\00", align 1
@.str.41 = private unnamed_addr constant [28 x i8] c"prim_seq_protocol_err_count\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"invalid_tx_word_count\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"invalid_crc_count\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"fcp_input_requests\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"fcp_output_requests\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"fcp_control_requests\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"fcp_input_megabytes\00", align 1
@.str.48 = private unnamed_addr constant [21 x i8] c"fcp_output_megabytes\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"fcp_packet_alloc_failures\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"fcp_packet_aborts\00", align 1
@.str.51 = private unnamed_addr constant [25 x i8] c"fcp_frame_alloc_failures\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"fc_no_free_exch\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"fc_no_free_exch_xid\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"fc_xid_not_found\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"fc_xid_busy\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"fc_seq_not_found\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"fc_non_bls_resp\00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"reset_statistics\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"node_name\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"port_name\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"port_id\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"0x%06x\0A\00", align 1
@.str.63 = private unnamed_addr constant [20 x i8] c"permanent_port_name\00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"supported_classes\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"unspecified\0A\00", align 1
@.str.66 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@fc_cos_names = internal constant [5 x %struct.anon.96] [%struct.anon.96 { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0) }, %struct.anon.96 { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0) }, %struct.anon.96 { i32 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0) }, %struct.anon.96 { i32 16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0) }, %struct.anon.96 { i32 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0) }], align 16, !dbg !5931
@.str.67 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.69 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"Class 1\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"Class 2\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"Class 3\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"Class 4\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"Class 6\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"supported_fc4s\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"supported_speeds\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"unknown\0A\00", align 1
@fc_port_speed_names = internal constant [16 x %struct.anon.97] [%struct.anon.97 { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0) }, %struct.anon.97 { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0) }, %struct.anon.97 { i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0) }, %struct.anon.97 { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i32 0, i32 0) }, %struct.anon.97 { i32 16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i32 0, i32 0) }, %struct.anon.97 { i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0) }, %struct.anon.97 { i32 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0) }, %struct.anon.97 { i32 128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0) }, %struct.anon.97 { i32 256, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0) }, %struct.anon.97 { i32 512, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0) }, %struct.anon.97 { i32 1024, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i32 0, i32 0) }, %struct.anon.97 { i32 2048, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0) }, %struct.anon.97 { i32 4096, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0) }, %struct.anon.97 { i32 8192, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.92, i32 0, i32 0) }, %struct.anon.97 { i32 16384, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0) }, %struct.anon.97 { i32 32768, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.94, i32 0, i32 0) }], align 16, !dbg !5943
@.str.79 = private unnamed_addr constant [7 x i8] c"1 Gbit\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"2 Gbit\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"4 Gbit\00", align 1
@.str.82 = private unnamed_addr constant [8 x i8] c"10 Gbit\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"8 Gbit\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"16 Gbit\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"32 Gbit\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"20 Gbit\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"40 Gbit\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"50 Gbit\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"100 Gbit\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"25 Gbit\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"64 Gbit\00", align 1
@.str.92 = private unnamed_addr constant [9 x i8] c"128 Gbit\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"256 Gbit\00", align 1
@.str.94 = private unnamed_addr constant [15 x i8] c"Not Negotiated\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"maxframe_size\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"%u bytes\0A\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c"max_npiv_vports\00", align 1
@.str.98 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c"npiv_vports_inuse\00", align 1
@.str.100 = private unnamed_addr constant [14 x i8] c"serial_number\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"manufacturer\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"model\00", align 1
@.str.104 = private unnamed_addr constant [18 x i8] c"model_description\00", align 1
@.str.105 = private unnamed_addr constant [17 x i8] c"hardware_version\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"driver_version\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c"firmware_version\00", align 1
@.str.108 = private unnamed_addr constant [18 x i8] c"optionrom_version\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"port_type\00", align 1
@fc_port_type_names = internal global [8 x %struct.anon.98] [%struct.anon.98 { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0) }, %struct.anon.98 { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0) }, %struct.anon.98 { i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i32 0, i32 0) }, %struct.anon.98 { i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.113, i32 0, i32 0) }, %struct.anon.98 { i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.114, i32 0, i32 0) }, %struct.anon.98 { i32 5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i32 0, i32 0) }, %struct.anon.98 { i32 6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.116, i32 0, i32 0) }, %struct.anon.98 { i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.117, i32 0, i32 0) }], align 16, !dbg !5977
@.str.110 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.112 = private unnamed_addr constant [12 x i8] c"Not Present\00", align 1
@.str.113 = private unnamed_addr constant [34 x i8] c"NPort (fabric via point-to-point)\00", align 1
@.str.114 = private unnamed_addr constant [25 x i8] c"NLPort (fabric via loop)\00", align 1
@.str.115 = private unnamed_addr constant [21 x i8] c"LPort (private loop)\00", align 1
@.str.116 = private unnamed_addr constant [41 x i8] c"Point-To-Point (direct nport connection)\00", align 1
@.str.117 = private unnamed_addr constant [11 x i8] c"NPIV VPORT\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"port_state\00", align 1
@fc_port_state_names = internal global [11 x %struct.anon.99] [%struct.anon.99 { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0) }, %struct.anon.99 { i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i32 0, i32 0) }, %struct.anon.99 { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0) }, %struct.anon.99 { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.120, i32 0, i32 0) }, %struct.anon.99 { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.121, i32 0, i32 0) }, %struct.anon.99 { i32 5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0) }, %struct.anon.99 { i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.123, i32 0, i32 0) }, %struct.anon.99 { i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124, i32 0, i32 0) }, %struct.anon.99 { i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i32 0, i32 0) }, %struct.anon.99 { i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i32 0, i32 0) }, %struct.anon.99 { i32 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.127, i32 0, i32 0) }], align 16, !dbg !5986
@.str.119 = private unnamed_addr constant [7 x i8] c"Online\00", align 1
@.str.120 = private unnamed_addr constant [8 x i8] c"Offline\00", align 1
@.str.121 = private unnamed_addr constant [8 x i8] c"Blocked\00", align 1
@.str.122 = private unnamed_addr constant [9 x i8] c"Bypassed\00", align 1
@.str.123 = private unnamed_addr constant [12 x i8] c"Diagnostics\00", align 1
@.str.124 = private unnamed_addr constant [9 x i8] c"Linkdown\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"Loopback\00", align 1
@.str.127 = private unnamed_addr constant [8 x i8] c"Deleted\00", align 1
@.str.128 = private unnamed_addr constant [12 x i8] c"active_fc4s\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"speed\00", align 1
@.str.130 = private unnamed_addr constant [12 x i8] c"fabric_name\00", align 1
@.str.131 = private unnamed_addr constant [14 x i8] c"symbolic_name\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"system_hostname\00", align 1
@.str.133 = private unnamed_addr constant [13 x i8] c"dev_loss_tmo\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.135 = private unnamed_addr constant [16 x i8] c"tgtid_bind_type\00", align 1
@fc_tgtid_binding_type_names = internal constant [4 x %struct.anon.100] [%struct.anon.100 { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0), i32 4 }, %struct.anon.100 { i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.137, i32 0, i32 0), i32 4 }, %struct.anon.100 { i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.138, i32 0, i32 0), i32 4 }, %struct.anon.100 { i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i32 0, i32 0), i32 7 }], align 16, !dbg !6007
@.str.136 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.137 = private unnamed_addr constant [28 x i8] c"wwpn (World Wide Port Name)\00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"wwnn (World Wide Node Name)\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"port_id (FC Address)\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"issue_lip\00", align 1
@.str.141 = private unnamed_addr constant [13 x i8] c"vport_create\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"vport_delete\00", align 1
@.str.143 = private unnamed_addr constant [6 x i8] c"roles\00", align 1
@.str.144 = private unnamed_addr constant [13 x i8] c"Fabric Port\0A\00", align 1
@.str.145 = private unnamed_addr constant [19 x i8] c"Fabric Controller\0A\00", align 1
@.str.146 = private unnamed_addr constant [18 x i8] c"Directory Server\0A\00", align 1
@.str.147 = private unnamed_addr constant [13 x i8] c"Time Server\0A\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"Management Server\0A\00", align 1
@.str.149 = private unnamed_addr constant [23 x i8] c"Unknown Fabric Entity\0A\00", align 1
@fc_port_role_names = internal constant [7 x %struct.anon.101] [%struct.anon.101 { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i32 0, i32 0) }, %struct.anon.101 { i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.151, i32 0, i32 0) }, %struct.anon.101 { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.152, i32 0, i32 0) }, %struct.anon.101 { i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.153, i32 0, i32 0) }, %struct.anon.101 { i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.154, i32 0, i32 0) }, %struct.anon.101 { i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.155, i32 0, i32 0) }, %struct.anon.101 { i32 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i32 0, i32 0) }], align 16, !dbg !6036
@.str.150 = private unnamed_addr constant [11 x i8] c"FCP Target\00", align 1
@.str.151 = private unnamed_addr constant [14 x i8] c"FCP Initiator\00", align 1
@.str.152 = private unnamed_addr constant [8 x i8] c"IP Port\00", align 1
@.str.153 = private unnamed_addr constant [20 x i8] c"FCP Dummy Initiator\00", align 1
@.str.154 = private unnamed_addr constant [15 x i8] c"NVMe Initiator\00", align 1
@.str.155 = private unnamed_addr constant [12 x i8] c"NVMe Target\00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"NVMe Discovery\00", align 1
@.str.157 = private unnamed_addr constant [15 x i8] c"scsi_target_id\00", align 1
@.str.158 = private unnamed_addr constant [17 x i8] c"fast_io_fail_tmo\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"off\0A\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.161 = private unnamed_addr constant [12 x i8] c"vport_state\00", align 1
@fc_vport_state_names = internal global [10 x %struct.anon.102] [%struct.anon.102 { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0) }, %struct.anon.102 { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0) }, %struct.anon.102 { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.163, i32 0, i32 0) }, %struct.anon.102 { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124, i32 0, i32 0) }, %struct.anon.102 { i32 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i32 0, i32 0) }, %struct.anon.102 { i32 5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.165, i32 0, i32 0) }, %struct.anon.102 { i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.166, i32 0, i32 0) }, %struct.anon.102 { i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0) }, %struct.anon.102 { i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.168, i32 0, i32 0) }, %struct.anon.102 { i32 9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.169, i32 0, i32 0) }], align 16, !dbg !6052
@.str.162 = private unnamed_addr constant [7 x i8] c"Active\00", align 1
@.str.163 = private unnamed_addr constant [9 x i8] c"Disabled\00", align 1
@.str.164 = private unnamed_addr constant [13 x i8] c"Initializing\00", align 1
@.str.165 = private unnamed_addr constant [18 x i8] c"No Fabric Support\00", align 1
@.str.166 = private unnamed_addr constant [20 x i8] c"No Fabric Resources\00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c"Fabric Logout\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"Fabric Rejected WWN\00", align 1
@.str.169 = private unnamed_addr constant [13 x i8] c"VPort Failed\00", align 1
@.str.170 = private unnamed_addr constant [17 x i8] c"vport_last_state\00", align 1
@.str.171 = private unnamed_addr constant [11 x i8] c"vport_type\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"vport_disable\00", align 1
@.str.173 = private unnamed_addr constant [32 x i8] c"include/linux/transport_class.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.174 = private unnamed_addr constant [75 x i8] c"\013ERROR: FC host '%s' attempted to queue work, when no workqueue created.\0A\00", align 1
@.str.175 = private unnamed_addr constant [75 x i8] c"\013ERROR: FC host '%s' attempted to flush work, when no workqueue created.\0A\00", align 1
@.str.176 = private unnamed_addr constant [26 x i8] c"\013%s: allocation failure\0A\00", align 1
@__func__.fc_remote_port_create = private unnamed_addr constant [22 x i8] c"fc_remote_port_create\00", align 1
@.str.177 = private unnamed_addr constant [15 x i8] c"rport-%d:%d-%d\00", align 1
@.str.178 = private unnamed_addr constant [36 x i8] c"\013FC Remote Port device_add failed\0A\00", align 1
@.str.179 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.180 = private unnamed_addr constant [75 x i8] c"blocked FC remote port time out: no longer a FCP target, removing starget\0A\00", align 1
@.str.181 = private unnamed_addr constant [56 x i8] c"blocked FC remote port time out: leaving rport%s alone\0A\00", align 1
@.str.182 = private unnamed_addr constant [13 x i8] c" and starget\00", align 1
@.str.183 = private unnamed_addr constant [51 x i8] c"blocked FC remote port time out: removing rport%s\0A\00", align 1
@.str.184 = private unnamed_addr constant [69 x i8] c"blocked FC remote port time out: removing target and saving binding\0A\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"failed to setup bsg queue\0A\00", align 1
@__func__.fc_vport_setup = private unnamed_addr constant [15 x i8] c"fc_vport_setup\00", align 1
@.str.186 = private unnamed_addr constant [15 x i8] c"vport-%d:%d-%d\00", align 1
@.str.187 = private unnamed_addr constant [37 x i8] c"\013FC Virtual Port device_add failed\0A\00", align 1
@.str.188 = private unnamed_addr constant [38 x i8] c"\013FC Virtual Port LLDD Create failed\0A\00", align 1
@.str.189 = private unnamed_addr constant [51 x i8] c"\013%s: Cannot create vport symlinks for %s, err=%d\0A\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.191 = private unnamed_addr constant [35 x i8] c"%s created via shost%d channel %d\0A\00", align 1
@.str.192 = private unnamed_addr constant [71 x i8] c"%s: %s could not be deleted created via shost%d channel %d - error %d\0A\00", align 1
@__func__.fc_vport_sched_delete = private unnamed_addr constant [22 x i8] c"fc_vport_sched_delete\00", align 1
@llvm.used = appending global [10 x i8*] [i8* bitcast (%struct.kernel_param* @__param_dev_loss_tmo to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_dev_loss_tmotype337, i32 0, i32 0), i8* getelementptr inbounds ([276 x i8], [276 x i8]* @__UNIQUE_ID_dev_loss_tmo338, i32 0, i32 0), i8* bitcast (void ()* @fc_transport_exit to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_author444, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_description445, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_file446, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_license447, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_fc_transport_init448 to i8*), i8* bitcast (void ()** @__exitcall_fc_transport_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fc_get_event_number() #0 !dbg !6082 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6085, metadata !DIExpression()), !dbg !6091
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6096, metadata !DIExpression()), !dbg !6097
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !6098, metadata !DIExpression()), !dbg !6100
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6101, metadata !DIExpression()), !dbg !6109
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6111, metadata !DIExpression()), !dbg !6112
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6113, metadata !DIExpression()), !dbg !6114
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6115, metadata !DIExpression()), !dbg !6116
  store i32 1, i32* %i.addr.i, align 4
  store %struct.atomic_t* @fc_event_seq, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6117
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6117
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6118
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6119
  %conv.i.i = trunc i64 %3 to i32, !dbg !6119
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %2, i32 %conv.i.i) #11, !dbg !6120
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6121
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6121
  call void @kcsan_check_access(i8* %4, i64 %5, i32 7) #11, !dbg !6121
  %6 = load i32, i32* %i.addr.i, align 4, !dbg !6122
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6123
  store i32 %6, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load i32, i32* %i.addr.i.i, align 4, !dbg !6124
  %9 = load i32, i32* %i.addr.i.i, align 4, !dbg !6100
  store i32 %9, i32* %__ret.i.i, align 4, !dbg !6100
  %10 = load i32, i32* %__ret.i.i, align 4, !dbg !6100
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6100
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !6100
  %12 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %10, i32* %counter.i.i) #10, !dbg !6100, !srcloc !6125
  store i32 %12, i32* %__ret.i.i, align 4, !dbg !6100
  %13 = load i32, i32* %__ret.i.i, align 4, !dbg !6100
  store i32 %13, i32* %tmp.i.i, align 4, !dbg !6100
  %14 = load i32, i32* %tmp.i.i, align 4, !dbg !6100
  %add.i.i = add i32 %8, %14, !dbg !6126
  ret i32 %add.i.i, !dbg !6127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_host_post_fc_event(%struct.Scsi_Host* %shost, i32 %event_number, i32 %event_code, i32 %data_len, i8* %data_buf, i64 %vendor_id) #0 !dbg !6128 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %event_number.addr = alloca i32, align 4
  %event_code.addr = alloca i32, align 4
  %data_len.addr = alloca i32, align 4
  %data_buf.addr = alloca i8*, align 8
  %vendor_id.addr = alloca i64, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %nlh = alloca %struct.nlmsghdr*, align 8
  %event = alloca %struct.fc_nl_event*, align 8
  %name = alloca i8*, align 8
  %len = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6131, metadata !DIExpression()), !dbg !6132
  store i32 %event_number, i32* %event_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_number.addr, metadata !6133, metadata !DIExpression()), !dbg !6134
  store i32 %event_code, i32* %event_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_code.addr, metadata !6135, metadata !DIExpression()), !dbg !6136
  store i32 %data_len, i32* %data_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !6137, metadata !DIExpression()), !dbg !6138
  store i8* %data_buf, i8** %data_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_buf.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  store i64 %vendor_id, i64* %vendor_id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vendor_id.addr, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !6143, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.declare(metadata %struct.nlmsghdr** %nlh, metadata !6279, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.declare(metadata %struct.fc_nl_event** %event, metadata !6290, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6312, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6316, metadata !DIExpression()), !dbg !6317
  %0 = load i8*, i8** %data_buf.addr, align 8, !dbg !6318
  %tobool = icmp ne i8* %0, null, !dbg !6318
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6320

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %data_len.addr, align 4, !dbg !6321
  %cmp = icmp ult i32 %1, 4, !dbg !6322
  br i1 %cmp, label %if.then, label %if.end, !dbg !6323

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %data_len.addr, align 4, !dbg !6324
  br label %if.end, !dbg !6325

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.sock*, %struct.sock** @scsi_nl_sock, align 8, !dbg !6326
  %tobool1 = icmp ne %struct.sock* %2, null, !dbg !6326
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6328

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %err, align 4, !dbg !6329
  br label %send_fail, !dbg !6331

if.end3:                                          ; preds = %if.end
  %3 = load i32, i32* %data_len.addr, align 4, !dbg !6332
  %conv = zext i32 %3 to i64, !dbg !6332
  %add = add i64 40, %conv, !dbg !6332
  %add4 = add i64 %add, 7, !dbg !6332
  %and = and i64 %add4, -8, !dbg !6332
  %conv5 = trunc i64 %and to i32, !dbg !6332
  store i32 %conv5, i32* %len, align 4, !dbg !6333
  %4 = load i32, i32* %len, align 4, !dbg !6334
  %conv6 = zext i32 %4 to i64, !dbg !6334
  %call = call %struct.sk_buff* @nlmsg_new(i64 %conv6, i32 3264) #12, !dbg !6335
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !6336
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !6337
  %tobool7 = icmp ne %struct.sk_buff* %5, null, !dbg !6337
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6339

if.then8:                                         ; preds = %if.end3
  store i32 -105, i32* %err, align 4, !dbg !6340
  br label %send_fail, !dbg !6342

if.end9:                                          ; preds = %if.end3
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !6343
  %7 = load i32, i32* %len, align 4, !dbg !6344
  %call10 = call %struct.nlmsghdr* @nlmsg_put(%struct.sk_buff* %6, i32 0, i32 0, i32 17, i32 %7, i32 0) #12, !dbg !6345
  store %struct.nlmsghdr* %call10, %struct.nlmsghdr** %nlh, align 8, !dbg !6346
  %8 = load %struct.nlmsghdr*, %struct.nlmsghdr** %nlh, align 8, !dbg !6347
  %tobool11 = icmp ne %struct.nlmsghdr* %8, null, !dbg !6347
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6349

if.then12:                                        ; preds = %if.end9
  store i32 -105, i32* %err, align 4, !dbg !6350
  br label %send_fail_skb, !dbg !6352

if.end13:                                         ; preds = %if.end9
  %9 = load %struct.nlmsghdr*, %struct.nlmsghdr** %nlh, align 8, !dbg !6353
  %call14 = call i8* @nlmsg_data(%struct.nlmsghdr* %9) #12, !dbg !6354
  %10 = bitcast i8* %call14 to %struct.fc_nl_event*, !dbg !6354
  store %struct.fc_nl_event* %10, %struct.fc_nl_event** %event, align 8, !dbg !6355
  %11 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6356
  %snlh = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %11, i32 0, i32 0, !dbg !6356
  %version = getelementptr inbounds %struct.scsi_nl_hdr, %struct.scsi_nl_hdr* %snlh, i32 0, i32 0, !dbg !6356
  store i8 1, i8* %version, align 8, !dbg !6356
  %12 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6356
  %snlh15 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %12, i32 0, i32 0, !dbg !6356
  %transport = getelementptr inbounds %struct.scsi_nl_hdr, %struct.scsi_nl_hdr* %snlh15, i32 0, i32 1, !dbg !6356
  store i8 1, i8* %transport, align 1, !dbg !6356
  %13 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6356
  %snlh16 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %13, i32 0, i32 0, !dbg !6356
  %magic = getelementptr inbounds %struct.scsi_nl_hdr, %struct.scsi_nl_hdr* %snlh16, i32 0, i32 2, !dbg !6356
  store i16 -24142, i16* %magic, align 2, !dbg !6356
  %14 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6356
  %snlh17 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %14, i32 0, i32 0, !dbg !6356
  %msgtype = getelementptr inbounds %struct.scsi_nl_hdr, %struct.scsi_nl_hdr* %snlh17, i32 0, i32 3, !dbg !6356
  store i16 256, i16* %msgtype, align 4, !dbg !6356
  %15 = load i32, i32* %len, align 4, !dbg !6356
  %conv18 = trunc i32 %15 to i16, !dbg !6356
  %16 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6356
  %snlh19 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %16, i32 0, i32 0, !dbg !6356
  %msglen = getelementptr inbounds %struct.scsi_nl_hdr, %struct.scsi_nl_hdr* %snlh19, i32 0, i32 4, !dbg !6356
  store i16 %conv18, i16* %msglen, align 2, !dbg !6356
  %call20 = call i64 @ktime_get_real_seconds() #12, !dbg !6358
  %17 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6359
  %seconds = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %17, i32 0, i32 1, !dbg !6360
  store i64 %call20, i64* %seconds, align 8, !dbg !6361
  %18 = load i64, i64* %vendor_id.addr, align 8, !dbg !6362
  %19 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6363
  %vendor_id21 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %19, i32 0, i32 2, !dbg !6364
  store i64 %18, i64* %vendor_id21, align 8, !dbg !6365
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6366
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 16, !dbg !6367
  %21 = load i32, i32* %host_no, align 4, !dbg !6367
  %conv22 = trunc i32 %21 to i16, !dbg !6366
  %22 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6368
  %host_no23 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %22, i32 0, i32 3, !dbg !6369
  store i16 %conv22, i16* %host_no23, align 8, !dbg !6370
  %23 = load i32, i32* %data_len.addr, align 4, !dbg !6371
  %conv24 = trunc i32 %23 to i16, !dbg !6371
  %24 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6372
  %event_datalen = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %24, i32 0, i32 4, !dbg !6373
  store i16 %conv24, i16* %event_datalen, align 2, !dbg !6374
  %25 = load i32, i32* %event_number.addr, align 4, !dbg !6375
  %26 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6376
  %event_num = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %26, i32 0, i32 5, !dbg !6377
  store i32 %25, i32* %event_num, align 4, !dbg !6378
  %27 = load i32, i32* %event_code.addr, align 4, !dbg !6379
  %28 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6380
  %event_code25 = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %28, i32 0, i32 6, !dbg !6381
  store i32 %27, i32* %event_code25, align 8, !dbg !6382
  %29 = load i32, i32* %data_len.addr, align 4, !dbg !6383
  %tobool26 = icmp ne i32 %29, 0, !dbg !6383
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !6385

if.then27:                                        ; preds = %if.end13
  %30 = load %struct.fc_nl_event*, %struct.fc_nl_event** %event, align 8, !dbg !6386
  %event_data = getelementptr inbounds %struct.fc_nl_event, %struct.fc_nl_event* %30, i32 0, i32 7, !dbg !6387
  %31 = bitcast i32* %event_data to i8*, !dbg !6388
  %32 = load i8*, i8** %data_buf.addr, align 8, !dbg !6389
  %33 = load i32, i32* %data_len.addr, align 4, !dbg !6390
  %conv28 = zext i32 %33 to i64, !dbg !6390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 1 %32, i64 %conv28, i1 false), !dbg !6388
  br label %if.end29, !dbg !6388

if.end29:                                         ; preds = %if.then27, %if.end13
  %34 = load %struct.sock*, %struct.sock** @scsi_nl_sock, align 8, !dbg !6391
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !6392
  %call30 = call i32 @nlmsg_multicast(%struct.sock* %34, %struct.sk_buff* %35, i32 0, i32 4, i32 3264) #12, !dbg !6393
  br label %return, !dbg !6394

send_fail_skb:                                    ; preds = %if.then12
  call void @llvm.dbg.label(metadata !6395), !dbg !6396
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !6397
  call void @kfree_skb(%struct.sk_buff* %36) #12, !dbg !6398
  br label %send_fail, !dbg !6398

send_fail:                                        ; preds = %send_fail_skb, %if.then8, %if.then2
  call void @llvm.dbg.label(metadata !6399), !dbg !6400
  %37 = load i32, i32* %event_code.addr, align 4, !dbg !6401
  %call31 = call i8* @get_fc_host_event_code_name(i32 %37) #12, !dbg !6402
  store i8* %call31, i8** %name, align 8, !dbg !6403
  %38 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6404
  %host_no32 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %38, i32 0, i32 16, !dbg !6405
  %39 = load i32, i32* %host_no32, align 4, !dbg !6405
  %40 = load i8*, i8** %name, align 8, !dbg !6406
  %tobool33 = icmp ne i8* %40, null, !dbg !6407
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !6407

cond.true:                                        ; preds = %send_fail
  %41 = load i8*, i8** %name, align 8, !dbg !6408
  br label %cond.end, !dbg !6407

cond.false:                                       ; preds = %send_fail
  br label %cond.end, !dbg !6407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %41, %cond.true ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), %cond.false ], !dbg !6407
  %42 = load i32, i32* %data_len.addr, align 4, !dbg !6409
  %tobool34 = icmp ne i32 %42, 0, !dbg !6410
  br i1 %tobool34, label %cond.true35, label %cond.false36, !dbg !6410

cond.true35:                                      ; preds = %cond.end
  %43 = load i8*, i8** %data_buf.addr, align 8, !dbg !6411
  %44 = bitcast i8* %43 to i32*, !dbg !6412
  %45 = load i32, i32* %44, align 4, !dbg !6412
  br label %cond.end37, !dbg !6410

cond.false36:                                     ; preds = %cond.end
  br label %cond.end37, !dbg !6410

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ %45, %cond.true35 ], [ -1, %cond.false36 ], !dbg !6410
  %46 = load i32, i32* %err, align 4, !dbg !6413
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.fc_host_post_fc_event, i64 0, i64 0), i32 %39, i8* %cond, i32 %cond38, i32 %46) #13, !dbg !6414
  br label %return, !dbg !6415

return:                                           ; preds = %cond.end37, %if.end29
  ret void, !dbg !6416
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @nlmsg_new(i64 %payload, i32 %flags) #0 !dbg !6417 {
entry:
  %payload.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %payload, i64* %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload.addr, metadata !6421, metadata !DIExpression()), !dbg !6422
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6423, metadata !DIExpression()), !dbg !6424
  %0 = load i64, i64* %payload.addr, align 8, !dbg !6425
  %conv = trunc i64 %0 to i32, !dbg !6425
  %call = call i32 @nlmsg_total_size(i32 %conv) #12, !dbg !6426
  %1 = load i32, i32* %flags.addr, align 4, !dbg !6427
  %call1 = call %struct.sk_buff* @alloc_skb(i32 %call, i32 %1) #12, !dbg !6428
  ret %struct.sk_buff* %call1, !dbg !6429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.nlmsghdr* @nlmsg_put(%struct.sk_buff* %skb, i32 %portid, i32 %seq, i32 %type, i32 %payload, i32 %flags) #0 !dbg !6430 {
entry:
  %retval = alloca %struct.nlmsghdr*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %portid.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %payload.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  store i32 %portid, i32* %portid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %portid.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seq.addr, metadata !6437, metadata !DIExpression()), !dbg !6438
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store i32 %payload, i32* %payload.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %payload.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !6445
  %call = call i32 @skb_tailroom(%struct.sk_buff* %0) #12, !dbg !6445
  %1 = load i32, i32* %payload.addr, align 4, !dbg !6445
  %call1 = call i32 @nlmsg_total_size(i32 %1) #12, !dbg !6445
  %cmp = icmp slt i32 %call, %call1, !dbg !6445
  %lnot = xor i1 %cmp, true, !dbg !6445
  %lnot2 = xor i1 %lnot, true, !dbg !6445
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6445
  %conv = sext i32 %lnot.ext to i64, !dbg !6445
  %tobool = icmp ne i64 %conv, 0, !dbg !6445
  br i1 %tobool, label %if.then, label %if.end, !dbg !6447

if.then:                                          ; preds = %entry
  store %struct.nlmsghdr* null, %struct.nlmsghdr** %retval, align 8, !dbg !6448
  br label %return, !dbg !6448

if.end:                                           ; preds = %entry
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !6449
  %3 = load i32, i32* %portid.addr, align 4, !dbg !6450
  %4 = load i32, i32* %seq.addr, align 4, !dbg !6451
  %5 = load i32, i32* %type.addr, align 4, !dbg !6452
  %6 = load i32, i32* %payload.addr, align 4, !dbg !6453
  %7 = load i32, i32* %flags.addr, align 4, !dbg !6454
  %call3 = call %struct.nlmsghdr* @__nlmsg_put(%struct.sk_buff* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7) #12, !dbg !6455
  store %struct.nlmsghdr* %call3, %struct.nlmsghdr** %retval, align 8, !dbg !6456
  br label %return, !dbg !6456

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.nlmsghdr*, %struct.nlmsghdr** %retval, align 8, !dbg !6457
  ret %struct.nlmsghdr* %8, !dbg !6457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @nlmsg_data(%struct.nlmsghdr* %nlh) #0 !dbg !6458 {
entry:
  %nlh.addr = alloca %struct.nlmsghdr*, align 8
  store %struct.nlmsghdr* %nlh, %struct.nlmsghdr** %nlh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.nlmsghdr** %nlh.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  %0 = load %struct.nlmsghdr*, %struct.nlmsghdr** %nlh.addr, align 8, !dbg !6465
  %1 = bitcast %struct.nlmsghdr* %0 to i8*, !dbg !6466
  %add.ptr = getelementptr i8, i8* %1, i64 16, !dbg !6467
  ret i8* %add.ptr, !dbg !6468
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_real_seconds() #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nlmsg_multicast(%struct.sock* %sk, %struct.sk_buff* %skb, i32 %portid, i32 %group, i32 %flags) #0 !dbg !6469 {
entry:
  %sk.addr = alloca %struct.sock*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %portid.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.sock* %sk, %struct.sock** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sock** %sk.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !6474, metadata !DIExpression()), !dbg !6475
  store i32 %portid, i32* %portid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %portid.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6482, metadata !DIExpression()), !dbg !6483
  %0 = load i32, i32* %group.addr, align 4, !dbg !6484
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !6485
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 3, !dbg !6485
  %2 = bitcast [48 x i8]* %cb to %struct.netlink_skb_parms*, !dbg !6485
  %dst_group = getelementptr inbounds %struct.netlink_skb_parms, %struct.netlink_skb_parms* %2, i32 0, i32 2, !dbg !6486
  store i32 %0, i32* %dst_group, align 8, !dbg !6487
  %3 = load %struct.sock*, %struct.sock** %sk.addr, align 8, !dbg !6488
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !6489
  %5 = load i32, i32* %portid.addr, align 4, !dbg !6490
  %6 = load i32, i32* %group.addr, align 4, !dbg !6491
  %7 = load i32, i32* %flags.addr, align 4, !dbg !6492
  %call = call i32 @netlink_broadcast(%struct.sock* %3, %struct.sk_buff* %4, i32 %5, i32 %6, i32 %7) #12, !dbg !6493
  store i32 %call, i32* %err, align 4, !dbg !6494
  %8 = load i32, i32* %err, align 4, !dbg !6495
  %cmp = icmp sgt i32 %8, 0, !dbg !6497
  br i1 %cmp, label %if.then, label %if.end, !dbg !6498

if.then:                                          ; preds = %entry
  store i32 0, i32* %err, align 4, !dbg !6499
  br label %if.end, !dbg !6500

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %err, align 4, !dbg !6501
  ret i32 %9, !dbg !6502
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_fc_host_event_code_name(i32 %table_key) #0 !dbg !6503 {
entry:
  %table_key.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %name = alloca i8*, align 8
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6508, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6509, metadata !DIExpression()), !dbg !6507
  store i8* null, i8** %name, align 8, !dbg !6507
  store i32 0, i32* %i, align 4, !dbg !6510
  br label %for.cond, !dbg !6510

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6512
  %conv = sext i32 %0 to i64, !dbg !6512
  %cmp = icmp ult i64 %conv, 13, !dbg !6512
  br i1 %cmp, label %for.body, label %for.end, !dbg !6510

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !6514
  %idxprom = sext i32 %1 to i64, !dbg !6514
  %arrayidx = getelementptr [13 x %struct.anon.92], [13 x %struct.anon.92]* @fc_host_event_code_names, i64 0, i64 %idxprom, !dbg !6514
  %value = getelementptr inbounds %struct.anon.92, %struct.anon.92* %arrayidx, i32 0, i32 0, !dbg !6514
  %2 = load i32, i32* %value, align 16, !dbg !6514
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !6514
  %cmp2 = icmp eq i32 %2, %3, !dbg !6514
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6517

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !6518
  %idxprom4 = sext i32 %4 to i64, !dbg !6518
  %arrayidx5 = getelementptr [13 x %struct.anon.92], [13 x %struct.anon.92]* @fc_host_event_code_names, i64 0, i64 %idxprom4, !dbg !6518
  %name6 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %arrayidx5, i32 0, i32 1, !dbg !6518
  %5 = load i8*, i8** %name6, align 8, !dbg !6518
  store i8* %5, i8** %name, align 8, !dbg !6518
  br label %for.end, !dbg !6518

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6517

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !6512
  %inc = add i32 %6, 1, !dbg !6512
  store i32 %inc, i32* %i, align 4, !dbg !6512
  br label %for.cond, !dbg !6512, !llvm.loop !6520

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i8*, i8** %name, align 8, !dbg !6507
  ret i8* %7, !dbg !6507
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_host_post_event(%struct.Scsi_Host* %shost, i32 %event_number, i32 %event_code, i32 %event_data) #0 !dbg !6521 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %event_number.addr = alloca i32, align 4
  %event_code.addr = alloca i32, align 4
  %event_data.addr = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6524, metadata !DIExpression()), !dbg !6525
  store i32 %event_number, i32* %event_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_number.addr, metadata !6526, metadata !DIExpression()), !dbg !6527
  store i32 %event_code, i32* %event_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_code.addr, metadata !6528, metadata !DIExpression()), !dbg !6529
  store i32 %event_data, i32* %event_data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_data.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6532
  %1 = load i32, i32* %event_number.addr, align 4, !dbg !6533
  %2 = load i32, i32* %event_code.addr, align 4, !dbg !6534
  %3 = bitcast i32* %event_data.addr to i8*, !dbg !6535
  call void @fc_host_post_fc_event(%struct.Scsi_Host* %0, i32 %1, i32 %2, i32 4, i8* %3, i64 0) #12, !dbg !6536
  ret void, !dbg !6537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_host_post_vendor_event(%struct.Scsi_Host* %shost, i32 %event_number, i32 %data_len, i8* %data_buf, i64 %vendor_id) #0 !dbg !6538 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %event_number.addr = alloca i32, align 4
  %data_len.addr = alloca i32, align 4
  %data_buf.addr = alloca i8*, align 8
  %vendor_id.addr = alloca i64, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6541, metadata !DIExpression()), !dbg !6542
  store i32 %event_number, i32* %event_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_number.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  store i32 %data_len, i32* %data_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !6545, metadata !DIExpression()), !dbg !6546
  store i8* %data_buf, i8** %data_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_buf.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  store i64 %vendor_id, i64* %vendor_id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vendor_id.addr, metadata !6549, metadata !DIExpression()), !dbg !6550
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6551
  %1 = load i32, i32* %event_number.addr, align 4, !dbg !6552
  %2 = load i32, i32* %data_len.addr, align 4, !dbg !6553
  %3 = load i8*, i8** %data_buf.addr, align 8, !dbg !6554
  %4 = load i64, i64* %vendor_id.addr, align 8, !dbg !6555
  call void @fc_host_post_fc_event(%struct.Scsi_Host* %0, i32 %1, i32 65535, i32 %2, i8* %3, i64 %4) #12, !dbg !6556
  ret void, !dbg !6557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_host_fpin_rcv(%struct.Scsi_Host* %shost, i32 %fpin_len, i8* %fpin_buf) #0 !dbg !6558 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %fpin_len.addr = alloca i32, align 4
  %fpin_buf.addr = alloca i8*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  store i32 %fpin_len, i32* %fpin_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fpin_len.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  store i8* %fpin_buf, i8** %fpin_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fpin_buf.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6567
  %call = call i32 @fc_get_event_number() #12, !dbg !6568
  %1 = load i32, i32* %fpin_len.addr, align 4, !dbg !6569
  %2 = load i8*, i8** %fpin_buf.addr, align 8, !dbg !6570
  call void @fc_host_post_fc_event(%struct.Scsi_Host* %0, i32 %call, i32 1281, i32 %1, i8* %2, i64 0) #12, !dbg !6571
  ret void, !dbg !6572
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @fc_transport_exit() #5 section ".exit.text" !dbg !6573 {
entry:
  call void @transport_class_unregister(%struct.transport_class* @fc_transport_class) #12, !dbg !6574
  call void @transport_class_unregister(%struct.transport_class* @fc_rport_class) #12, !dbg !6575
  call void @transport_class_unregister(%struct.transport_class* @fc_host_class) #12, !dbg !6576
  call void @transport_class_unregister(%struct.transport_class* @fc_vport_class) #12, !dbg !6577
  ret void, !dbg !6578
}

; Function Attrs: noredzone
declare dso_local void @transport_class_unregister(%struct.transport_class*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_is_fc_rport(%struct.device* %dev) #0 !dbg !6579 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6582, metadata !DIExpression()), !dbg !6583
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6584
  %release = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 31, !dbg !6585
  %1 = load void (%struct.device*)*, void (%struct.device*)** %release, align 8, !dbg !6585
  %cmp = icmp eq void (%struct.device*)* %1, @fc_rport_dev_release, !dbg !6586
  %conv = zext i1 %cmp to i32, !dbg !6586
  ret i32 %conv, !dbg !6587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_rport_dev_release(%struct.device* %dev) #0 !dbg !6588 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6589, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !6591, metadata !DIExpression()), !dbg !6592
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6593, metadata !DIExpression()), !dbg !6595
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6595
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6595
  store i8* %1, i8** %__mptr, align 8, !dbg !6595
  br label %do.body, !dbg !6595

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6596

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6595
  %add.ptr = getelementptr i8, i8* %2, i64 -96, !dbg !6595
  %3 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !6595
  store %struct.fc_rport* %3, %struct.fc_rport** %tmp, align 8, !dbg !6596
  %4 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !6595
  store %struct.fc_rport* %4, %struct.fc_rport** %rport, align 8, !dbg !6592
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6598
  %parent = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 1, !dbg !6599
  %6 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6599
  call void @put_device(%struct.device* %6) #12, !dbg !6600
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !6601
  %8 = bitcast %struct.fc_rport* %7 to i8*, !dbg !6601
  call void @kfree(i8* %8) #12, !dbg !6602
  ret void, !dbg !6603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fc_eh_timed_out(%struct.scsi_cmnd* %scmd) #0 !dbg !6604 {
entry:
  %retval = alloca i32, align 4
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !6607, metadata !DIExpression()), !dbg !6608
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !6609
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6609
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6609
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %1) #12, !dbg !6609
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call, i32 0, i32 3, !dbg !6609
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !6609
  %2 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6609
  %call1 = call i32 @scsi_is_fc_rport(%struct.device* %2) #12, !dbg !6609
  %tobool = icmp ne i32 %call1, 0, !dbg !6609
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6609

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6610, metadata !DIExpression()), !dbg !6612
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !6612
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 1, !dbg !6612
  %4 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !6612
  %call3 = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %4) #12, !dbg !6612
  %dev4 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call3, i32 0, i32 3, !dbg !6612
  %parent5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 1, !dbg !6612
  %5 = load %struct.device*, %struct.device** %parent5, align 8, !dbg !6612
  %6 = bitcast %struct.device* %5 to i8*, !dbg !6612
  store i8* %6, i8** %__mptr, align 8, !dbg !6612
  br label %do.body, !dbg !6612

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6613

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !6612
  %add.ptr = getelementptr i8, i8* %7, i64 -96, !dbg !6612
  %8 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !6612
  store %struct.fc_rport* %8, %struct.fc_rport** %tmp, align 8, !dbg !6613
  %9 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !6612
  br label %cond.end, !dbg !6609

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6609

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.fc_rport* [ %9, %do.end ], [ null, %cond.false ], !dbg !6609
  store %struct.fc_rport* %cond, %struct.fc_rport** %rport, align 8, !dbg !6608
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !6615
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 7, !dbg !6617
  %11 = load i32, i32* %port_state, align 8, !dbg !6617
  %cmp = icmp eq i32 %11, 4, !dbg !6618
  br i1 %cmp, label %if.then, label %if.end, !dbg !6619

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !6620
  br label %return, !dbg !6620

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !6621
  br label %return, !dbg !6621

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6622
  ret i32 %12, !dbg !6622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_target* @scsi_target(%struct.scsi_device* %sdev) #0 !dbg !6623 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6628, metadata !DIExpression()), !dbg !6630
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !6630
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 50, !dbg !6630
  %parent = getelementptr inbounds %struct.device, %struct.device* %sdev_gendev, i32 0, i32 1, !dbg !6630
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6630
  %2 = bitcast %struct.device* %1 to i8*, !dbg !6630
  store i8* %2, i8** %__mptr, align 8, !dbg !6630
  br label %do.body, !dbg !6630

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6631

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6630
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !6630
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !6630
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !6631
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !6630
  ret %struct.scsi_target* %5, !dbg !6633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.scsi_transport_template* @fc_attach_transport(%struct.fc_function_template* %ft) #0 !dbg !6634 {
entry:
  %retval = alloca %struct.scsi_transport_template*, align 8
  %ft.addr = alloca %struct.fc_function_template*, align 8
  %count = alloca i32, align 4
  %i = alloca %struct.fc_internal*, align 8
  store %struct.fc_function_template* %ft, %struct.fc_function_template** %ft.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_function_template** %ft.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !6641, metadata !DIExpression()), !dbg !6642
  %call = call i8* @kzalloc(i64 2600, i32 3264) #12, !dbg !6643
  %0 = bitcast i8* %call to %struct.fc_internal*, !dbg !6643
  store %struct.fc_internal* %0, %struct.fc_internal** %i, align 8, !dbg !6642
  %1 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6644
  %tobool = icmp ne %struct.fc_internal* %1, null, !dbg !6644
  %lnot = xor i1 %tobool, true, !dbg !6644
  %lnot1 = xor i1 %lnot, true, !dbg !6644
  %lnot2 = xor i1 %lnot1, true, !dbg !6644
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6644
  %conv = sext i32 %lnot.ext to i64, !dbg !6644
  %tobool3 = icmp ne i64 %conv, 0, !dbg !6644
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6646

if.then:                                          ; preds = %entry
  store %struct.scsi_transport_template* null, %struct.scsi_transport_template** %retval, align 8, !dbg !6647
  br label %return, !dbg !6647

if.end:                                           ; preds = %entry
  %2 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6648
  %starget_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %2, i32 0, i32 3, !dbg !6649
  %arrayidx = getelementptr [4 x %struct.device_attribute*], [4 x %struct.device_attribute*]* %starget_attrs, i64 0, i64 0, !dbg !6648
  %3 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6650
  %t = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %3, i32 0, i32 0, !dbg !6651
  %target_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t, i32 0, i32 1, !dbg !6652
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %target_attrs, i32 0, i32 0, !dbg !6653
  %attrs = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac, i32 0, i32 4, !dbg !6654
  store %struct.device_attribute** %arrayidx, %struct.device_attribute*** %attrs, align 8, !dbg !6655
  %4 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6656
  %t4 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %4, i32 0, i32 0, !dbg !6657
  %target_attrs5 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t4, i32 0, i32 1, !dbg !6658
  %ac6 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %target_attrs5, i32 0, i32 0, !dbg !6659
  %class = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac6, i32 0, i32 2, !dbg !6660
  store %struct.class* getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_transport_class, i32 0, i32 0), %struct.class** %class, align 8, !dbg !6661
  %5 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6662
  %t7 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %5, i32 0, i32 0, !dbg !6663
  %target_attrs8 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t7, i32 0, i32 1, !dbg !6664
  %ac9 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %target_attrs8, i32 0, i32 0, !dbg !6665
  %match = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac9, i32 0, i32 5, !dbg !6666
  store i32 (%struct.attribute_container*, %struct.device*)* @fc_target_match, i32 (%struct.attribute_container*, %struct.device*)** %match, align 8, !dbg !6667
  %6 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6668
  %t10 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %6, i32 0, i32 0, !dbg !6669
  %target_size = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t10, i32 0, i32 6, !dbg !6670
  store i32 24, i32* %target_size, align 8, !dbg !6671
  %7 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6672
  %t11 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %7, i32 0, i32 0, !dbg !6673
  %target_attrs12 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t11, i32 0, i32 1, !dbg !6674
  %call13 = call i32 @transport_container_register(%struct.transport_container* %target_attrs12) #12, !dbg !6675
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6676
  %host_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 5, !dbg !6677
  %arrayidx14 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs, i64 0, i64 0, !dbg !6676
  %9 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6678
  %t15 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %9, i32 0, i32 0, !dbg !6679
  %host_attrs16 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t15, i32 0, i32 0, !dbg !6680
  %ac17 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs16, i32 0, i32 0, !dbg !6681
  %attrs18 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac17, i32 0, i32 4, !dbg !6682
  store %struct.device_attribute** %arrayidx14, %struct.device_attribute*** %attrs18, align 8, !dbg !6683
  %10 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6684
  %t19 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %10, i32 0, i32 0, !dbg !6685
  %host_attrs20 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t19, i32 0, i32 0, !dbg !6686
  %ac21 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs20, i32 0, i32 0, !dbg !6687
  %class22 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac21, i32 0, i32 2, !dbg !6688
  store %struct.class* getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_host_class, i32 0, i32 0), %struct.class** %class22, align 8, !dbg !6689
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6690
  %t23 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 0, !dbg !6691
  %host_attrs24 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t23, i32 0, i32 0, !dbg !6692
  %ac25 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs24, i32 0, i32 0, !dbg !6693
  %match26 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac25, i32 0, i32 5, !dbg !6694
  store i32 (%struct.attribute_container*, %struct.device*)* @fc_host_match, i32 (%struct.attribute_container*, %struct.device*)** %match26, align 8, !dbg !6695
  %12 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6696
  %t27 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %12, i32 0, i32 0, !dbg !6697
  %host_size = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t27, i32 0, i32 8, !dbg !6698
  store i32 1712, i32* %host_size, align 8, !dbg !6699
  %13 = load %struct.fc_function_template*, %struct.fc_function_template** %ft.addr, align 8, !dbg !6700
  %get_fc_host_stats = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %13, i32 0, i32 13, !dbg !6702
  %14 = load %struct.fc_host_statistics* (%struct.Scsi_Host*)*, %struct.fc_host_statistics* (%struct.Scsi_Host*)** %get_fc_host_stats, align 8, !dbg !6702
  %tobool28 = icmp ne %struct.fc_host_statistics* (%struct.Scsi_Host*)* %14, null, !dbg !6700
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !6703

if.then29:                                        ; preds = %if.end
  %15 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6704
  %t30 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %15, i32 0, i32 0, !dbg !6705
  %host_attrs31 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t30, i32 0, i32 0, !dbg !6706
  %statistics = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs31, i32 0, i32 1, !dbg !6707
  store %struct.attribute_group* @fc_statistics_group, %struct.attribute_group** %statistics, align 8, !dbg !6708
  br label %if.end32, !dbg !6704

if.end32:                                         ; preds = %if.then29, %if.end
  %16 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6709
  %t33 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %16, i32 0, i32 0, !dbg !6710
  %host_attrs34 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t33, i32 0, i32 0, !dbg !6711
  %call35 = call i32 @transport_container_register(%struct.transport_container* %host_attrs34) #12, !dbg !6712
  %17 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6713
  %rport_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %17, i32 0, i32 8, !dbg !6714
  %arrayidx36 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs, i64 0, i64 0, !dbg !6713
  %18 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6715
  %rport_attr_cont = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %18, i32 0, i32 6, !dbg !6716
  %ac37 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %rport_attr_cont, i32 0, i32 0, !dbg !6717
  %attrs38 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac37, i32 0, i32 4, !dbg !6718
  store %struct.device_attribute** %arrayidx36, %struct.device_attribute*** %attrs38, align 8, !dbg !6719
  %19 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6720
  %rport_attr_cont39 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %19, i32 0, i32 6, !dbg !6721
  %ac40 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %rport_attr_cont39, i32 0, i32 0, !dbg !6722
  %class41 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac40, i32 0, i32 2, !dbg !6723
  store %struct.class* getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_rport_class, i32 0, i32 0), %struct.class** %class41, align 8, !dbg !6724
  %20 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6725
  %rport_attr_cont42 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %20, i32 0, i32 6, !dbg !6726
  %ac43 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %rport_attr_cont42, i32 0, i32 0, !dbg !6727
  %match44 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac43, i32 0, i32 5, !dbg !6728
  store i32 (%struct.attribute_container*, %struct.device*)* @fc_rport_match, i32 (%struct.attribute_container*, %struct.device*)** %match44, align 8, !dbg !6729
  %21 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6730
  %rport_attr_cont45 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %21, i32 0, i32 6, !dbg !6731
  %call46 = call i32 @transport_container_register(%struct.transport_container* %rport_attr_cont45) #12, !dbg !6732
  %22 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6733
  %vport_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %22, i32 0, i32 11, !dbg !6734
  %arrayidx47 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs, i64 0, i64 0, !dbg !6733
  %23 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6735
  %vport_attr_cont = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %23, i32 0, i32 9, !dbg !6736
  %ac48 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %vport_attr_cont, i32 0, i32 0, !dbg !6737
  %attrs49 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac48, i32 0, i32 4, !dbg !6738
  store %struct.device_attribute** %arrayidx47, %struct.device_attribute*** %attrs49, align 8, !dbg !6739
  %24 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6740
  %vport_attr_cont50 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %24, i32 0, i32 9, !dbg !6741
  %ac51 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %vport_attr_cont50, i32 0, i32 0, !dbg !6742
  %class52 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac51, i32 0, i32 2, !dbg !6743
  store %struct.class* getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_vport_class, i32 0, i32 0), %struct.class** %class52, align 8, !dbg !6744
  %25 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6745
  %vport_attr_cont53 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %25, i32 0, i32 9, !dbg !6746
  %ac54 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %vport_attr_cont53, i32 0, i32 0, !dbg !6747
  %match55 = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac54, i32 0, i32 5, !dbg !6748
  store i32 (%struct.attribute_container*, %struct.device*)* @fc_vport_match, i32 (%struct.attribute_container*, %struct.device*)** %match55, align 8, !dbg !6749
  %26 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6750
  %vport_attr_cont56 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %26, i32 0, i32 9, !dbg !6751
  %call57 = call i32 @transport_container_register(%struct.transport_container* %vport_attr_cont56) #12, !dbg !6752
  %27 = load %struct.fc_function_template*, %struct.fc_function_template** %ft.addr, align 8, !dbg !6753
  %28 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6754
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %28, i32 0, i32 1, !dbg !6755
  store %struct.fc_function_template* %27, %struct.fc_function_template** %f, align 8, !dbg !6756
  %29 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6757
  %t58 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %29, i32 0, i32 0, !dbg !6758
  %create_work_queue = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t58, i32 0, i32 9, !dbg !6759
  %bf.load = load i8, i8* %create_work_queue, align 4, !dbg !6760
  %bf.clear = and i8 %bf.load, -2, !dbg !6760
  %bf.set = or i8 %bf.clear, 1, !dbg !6760
  store i8 %bf.set, i8* %create_work_queue, align 4, !dbg !6760
  %30 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6761
  %t59 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %30, i32 0, i32 0, !dbg !6762
  %user_scan = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t59, i32 0, i32 3, !dbg !6763
  store i32 (%struct.Scsi_Host*, i32, i32, i64)* @fc_user_scan, i32 (%struct.Scsi_Host*, i32, i32, i64)** %user_scan, align 8, !dbg !6764
  store i32 0, i32* %count, align 4, !dbg !6765
  %31 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6766
  %private_starget_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %31, i32 0, i32 2, !dbg !6766
  %32 = load i32, i32* %count, align 4, !dbg !6766
  %idxprom = sext i32 %32 to i64, !dbg !6766
  %arrayidx60 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs, i64 0, i64 %idxprom, !dbg !6766
  %33 = bitcast %struct.device_attribute* %arrayidx60 to i8*, !dbg !6766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 bitcast (%struct.device_attribute* @device_attr_starget_node_name to i8*), i64 32, i1 false), !dbg !6766
  %34 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6766
  %private_starget_attrs61 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %34, i32 0, i32 2, !dbg !6766
  %35 = load i32, i32* %count, align 4, !dbg !6766
  %idxprom62 = sext i32 %35 to i64, !dbg !6766
  %arrayidx63 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs61, i64 0, i64 %idxprom62, !dbg !6766
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx63, i32 0, i32 0, !dbg !6766
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 1, !dbg !6766
  store i16 292, i16* %mode, align 8, !dbg !6766
  %36 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6766
  %private_starget_attrs64 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %36, i32 0, i32 2, !dbg !6766
  %37 = load i32, i32* %count, align 4, !dbg !6766
  %idxprom65 = sext i32 %37 to i64, !dbg !6766
  %arrayidx66 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs64, i64 0, i64 %idxprom65, !dbg !6766
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx66, i32 0, i32 2, !dbg !6766
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !6766
  %38 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6766
  %private_starget_attrs67 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %38, i32 0, i32 2, !dbg !6766
  %39 = load i32, i32* %count, align 4, !dbg !6766
  %idxprom68 = sext i32 %39 to i64, !dbg !6766
  %arrayidx69 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs67, i64 0, i64 %idxprom68, !dbg !6766
  %40 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6766
  %starget_attrs70 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %40, i32 0, i32 3, !dbg !6766
  %41 = load i32, i32* %count, align 4, !dbg !6766
  %idxprom71 = sext i32 %41 to i64, !dbg !6766
  %arrayidx72 = getelementptr [4 x %struct.device_attribute*], [4 x %struct.device_attribute*]* %starget_attrs70, i64 0, i64 %idxprom71, !dbg !6766
  store %struct.device_attribute* %arrayidx69, %struct.device_attribute** %arrayidx72, align 8, !dbg !6766
  %42 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6767
  %f73 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %42, i32 0, i32 1, !dbg !6767
  %43 = load %struct.fc_function_template*, %struct.fc_function_template** %f73, align 8, !dbg !6767
  %show_starget_node_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %43, i32 0, i32 27, !dbg !6767
  %bf.load74 = load i32, i32* %show_starget_node_name, align 4, !dbg !6767
  %bf.lshr = lshr i32 %bf.load74, 3, !dbg !6767
  %bf.clear75 = and i32 %bf.lshr, 1, !dbg !6767
  %bf.cast = zext i32 %bf.clear75 to i64, !dbg !6767
  %tobool76 = icmp ne i64 %bf.cast, 0, !dbg !6767
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !6766

if.then77:                                        ; preds = %if.end32
  %44 = load i32, i32* %count, align 4, !dbg !6767
  %inc = add i32 %44, 1, !dbg !6767
  store i32 %inc, i32* %count, align 4, !dbg !6767
  br label %if.end78, !dbg !6767

if.end78:                                         ; preds = %if.then77, %if.end32
  %45 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6769
  %private_starget_attrs79 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %45, i32 0, i32 2, !dbg !6769
  %46 = load i32, i32* %count, align 4, !dbg !6769
  %idxprom80 = sext i32 %46 to i64, !dbg !6769
  %arrayidx81 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs79, i64 0, i64 %idxprom80, !dbg !6769
  %47 = bitcast %struct.device_attribute* %arrayidx81 to i8*, !dbg !6769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 bitcast (%struct.device_attribute* @device_attr_starget_port_name to i8*), i64 32, i1 false), !dbg !6769
  %48 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6769
  %private_starget_attrs82 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %48, i32 0, i32 2, !dbg !6769
  %49 = load i32, i32* %count, align 4, !dbg !6769
  %idxprom83 = sext i32 %49 to i64, !dbg !6769
  %arrayidx84 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs82, i64 0, i64 %idxprom83, !dbg !6769
  %attr85 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx84, i32 0, i32 0, !dbg !6769
  %mode86 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr85, i32 0, i32 1, !dbg !6769
  store i16 292, i16* %mode86, align 8, !dbg !6769
  %50 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6769
  %private_starget_attrs87 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %50, i32 0, i32 2, !dbg !6769
  %51 = load i32, i32* %count, align 4, !dbg !6769
  %idxprom88 = sext i32 %51 to i64, !dbg !6769
  %arrayidx89 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs87, i64 0, i64 %idxprom88, !dbg !6769
  %store90 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx89, i32 0, i32 2, !dbg !6769
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store90, align 8, !dbg !6769
  %52 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6769
  %private_starget_attrs91 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %52, i32 0, i32 2, !dbg !6769
  %53 = load i32, i32* %count, align 4, !dbg !6769
  %idxprom92 = sext i32 %53 to i64, !dbg !6769
  %arrayidx93 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs91, i64 0, i64 %idxprom92, !dbg !6769
  %54 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6769
  %starget_attrs94 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %54, i32 0, i32 3, !dbg !6769
  %55 = load i32, i32* %count, align 4, !dbg !6769
  %idxprom95 = sext i32 %55 to i64, !dbg !6769
  %arrayidx96 = getelementptr [4 x %struct.device_attribute*], [4 x %struct.device_attribute*]* %starget_attrs94, i64 0, i64 %idxprom95, !dbg !6769
  store %struct.device_attribute* %arrayidx93, %struct.device_attribute** %arrayidx96, align 8, !dbg !6769
  %56 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6770
  %f97 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %56, i32 0, i32 1, !dbg !6770
  %57 = load %struct.fc_function_template*, %struct.fc_function_template** %f97, align 8, !dbg !6770
  %show_starget_port_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %57, i32 0, i32 27, !dbg !6770
  %bf.load98 = load i32, i32* %show_starget_port_name, align 4, !dbg !6770
  %bf.lshr99 = lshr i32 %bf.load98, 4, !dbg !6770
  %bf.clear100 = and i32 %bf.lshr99, 1, !dbg !6770
  %bf.cast101 = zext i32 %bf.clear100 to i64, !dbg !6770
  %tobool102 = icmp ne i64 %bf.cast101, 0, !dbg !6770
  br i1 %tobool102, label %if.then103, label %if.end105, !dbg !6769

if.then103:                                       ; preds = %if.end78
  %58 = load i32, i32* %count, align 4, !dbg !6770
  %inc104 = add i32 %58, 1, !dbg !6770
  store i32 %inc104, i32* %count, align 4, !dbg !6770
  br label %if.end105, !dbg !6770

if.end105:                                        ; preds = %if.then103, %if.end78
  %59 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6772
  %private_starget_attrs106 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %59, i32 0, i32 2, !dbg !6772
  %60 = load i32, i32* %count, align 4, !dbg !6772
  %idxprom107 = sext i32 %60 to i64, !dbg !6772
  %arrayidx108 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs106, i64 0, i64 %idxprom107, !dbg !6772
  %61 = bitcast %struct.device_attribute* %arrayidx108 to i8*, !dbg !6772
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 bitcast (%struct.device_attribute* @device_attr_starget_port_id to i8*), i64 32, i1 false), !dbg !6772
  %62 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6772
  %private_starget_attrs109 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %62, i32 0, i32 2, !dbg !6772
  %63 = load i32, i32* %count, align 4, !dbg !6772
  %idxprom110 = sext i32 %63 to i64, !dbg !6772
  %arrayidx111 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs109, i64 0, i64 %idxprom110, !dbg !6772
  %attr112 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx111, i32 0, i32 0, !dbg !6772
  %mode113 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr112, i32 0, i32 1, !dbg !6772
  store i16 292, i16* %mode113, align 8, !dbg !6772
  %64 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6772
  %private_starget_attrs114 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %64, i32 0, i32 2, !dbg !6772
  %65 = load i32, i32* %count, align 4, !dbg !6772
  %idxprom115 = sext i32 %65 to i64, !dbg !6772
  %arrayidx116 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs114, i64 0, i64 %idxprom115, !dbg !6772
  %store117 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx116, i32 0, i32 2, !dbg !6772
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store117, align 8, !dbg !6772
  %66 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6772
  %private_starget_attrs118 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %66, i32 0, i32 2, !dbg !6772
  %67 = load i32, i32* %count, align 4, !dbg !6772
  %idxprom119 = sext i32 %67 to i64, !dbg !6772
  %arrayidx120 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %private_starget_attrs118, i64 0, i64 %idxprom119, !dbg !6772
  %68 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6772
  %starget_attrs121 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %68, i32 0, i32 3, !dbg !6772
  %69 = load i32, i32* %count, align 4, !dbg !6772
  %idxprom122 = sext i32 %69 to i64, !dbg !6772
  %arrayidx123 = getelementptr [4 x %struct.device_attribute*], [4 x %struct.device_attribute*]* %starget_attrs121, i64 0, i64 %idxprom122, !dbg !6772
  store %struct.device_attribute* %arrayidx120, %struct.device_attribute** %arrayidx123, align 8, !dbg !6772
  %70 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6773
  %f124 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %70, i32 0, i32 1, !dbg !6773
  %71 = load %struct.fc_function_template*, %struct.fc_function_template** %f124, align 8, !dbg !6773
  %show_starget_port_id = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %71, i32 0, i32 27, !dbg !6773
  %bf.load125 = load i32, i32* %show_starget_port_id, align 4, !dbg !6773
  %bf.lshr126 = lshr i32 %bf.load125, 5, !dbg !6773
  %bf.clear127 = and i32 %bf.lshr126, 1, !dbg !6773
  %bf.cast128 = zext i32 %bf.clear127 to i64, !dbg !6773
  %tobool129 = icmp ne i64 %bf.cast128, 0, !dbg !6773
  br i1 %tobool129, label %if.then130, label %if.end132, !dbg !6772

if.then130:                                       ; preds = %if.end105
  %72 = load i32, i32* %count, align 4, !dbg !6773
  %inc131 = add i32 %72, 1, !dbg !6773
  store i32 %inc131, i32* %count, align 4, !dbg !6773
  br label %if.end132, !dbg !6773

if.end132:                                        ; preds = %if.then130, %if.end105
  br label %do.body, !dbg !6775

do.body:                                          ; preds = %if.end132
  %73 = load i32, i32* %count, align 4, !dbg !6776
  %cmp = icmp sgt i32 %73, 3, !dbg !6776
  %lnot134 = xor i1 %cmp, true, !dbg !6776
  %lnot136 = xor i1 %lnot134, true, !dbg !6776
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !6776
  %conv138 = sext i32 %lnot.ext137 to i64, !dbg !6776
  %tobool139 = icmp ne i64 %conv138, 0, !dbg !6776
  br i1 %tobool139, label %if.then140, label %if.end148, !dbg !6779

if.then140:                                       ; preds = %do.body
  br label %do.body141, !dbg !6776

do.body141:                                       ; preds = %if.then140
  br label %do.body142, !dbg !6780

do.body142:                                       ; preds = %do.body141
  br label %do.end, !dbg !6782

do.end:                                           ; preds = %do.body142
  br label %do.body143, !dbg !6780

do.body143:                                       ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 2202, i32 0, i64 12) #10, !dbg !6784, !srcloc !6786
  br label %do.end144, !dbg !6784

do.end144:                                        ; preds = %do.body143
  br label %do.body145, !dbg !6780

do.body145:                                       ; preds = %do.end144
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 403) #10, !dbg !6787, !srcloc !6790
  unreachable, !dbg !6791

do.end146:                                        ; No predecessors!
  br label %do.end147, !dbg !6780

do.end147:                                        ; preds = %do.end146
  br label %if.end148, !dbg !6780

if.end148:                                        ; preds = %do.end147, %do.body
  br label %do.end149, !dbg !6779

do.end149:                                        ; preds = %if.end148
  %74 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6792
  %starget_attrs150 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %74, i32 0, i32 3, !dbg !6793
  %75 = load i32, i32* %count, align 4, !dbg !6794
  %idxprom151 = sext i32 %75 to i64, !dbg !6792
  %arrayidx152 = getelementptr [4 x %struct.device_attribute*], [4 x %struct.device_attribute*]* %starget_attrs150, i64 0, i64 %idxprom151, !dbg !6792
  store %struct.device_attribute* null, %struct.device_attribute** %arrayidx152, align 8, !dbg !6795
  store i32 0, i32* %count, align 4, !dbg !6796
  %76 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6797
  %private_host_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %76, i32 0, i32 4, !dbg !6797
  %77 = load i32, i32* %count, align 4, !dbg !6797
  %idxprom153 = sext i32 %77 to i64, !dbg !6797
  %arrayidx154 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs, i64 0, i64 %idxprom153, !dbg !6797
  %78 = bitcast %struct.device_attribute* %arrayidx154 to i8*, !dbg !6797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_node_name to i8*), i64 32, i1 false), !dbg !6797
  %79 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6797
  %private_host_attrs155 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %79, i32 0, i32 4, !dbg !6797
  %80 = load i32, i32* %count, align 4, !dbg !6797
  %idxprom156 = sext i32 %80 to i64, !dbg !6797
  %arrayidx157 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs155, i64 0, i64 %idxprom156, !dbg !6797
  %attr158 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx157, i32 0, i32 0, !dbg !6797
  %mode159 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr158, i32 0, i32 1, !dbg !6797
  store i16 292, i16* %mode159, align 8, !dbg !6797
  %81 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6797
  %private_host_attrs160 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %81, i32 0, i32 4, !dbg !6797
  %82 = load i32, i32* %count, align 4, !dbg !6797
  %idxprom161 = sext i32 %82 to i64, !dbg !6797
  %arrayidx162 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs160, i64 0, i64 %idxprom161, !dbg !6797
  %store163 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx162, i32 0, i32 2, !dbg !6797
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store163, align 8, !dbg !6797
  %83 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6797
  %private_host_attrs164 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %83, i32 0, i32 4, !dbg !6797
  %84 = load i32, i32* %count, align 4, !dbg !6797
  %idxprom165 = sext i32 %84 to i64, !dbg !6797
  %arrayidx166 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs164, i64 0, i64 %idxprom165, !dbg !6797
  %85 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6797
  %host_attrs167 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %85, i32 0, i32 5, !dbg !6797
  %86 = load i32, i32* %count, align 4, !dbg !6797
  %idxprom168 = sext i32 %86 to i64, !dbg !6797
  %arrayidx169 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs167, i64 0, i64 %idxprom168, !dbg !6797
  store %struct.device_attribute* %arrayidx166, %struct.device_attribute** %arrayidx169, align 8, !dbg !6797
  %87 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6798
  %f170 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %87, i32 0, i32 1, !dbg !6798
  %88 = load %struct.fc_function_template*, %struct.fc_function_template** %f170, align 8, !dbg !6798
  %show_host_node_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %88, i32 0, i32 27, !dbg !6798
  %bf.load171 = load i32, i32* %show_host_node_name, align 4, !dbg !6798
  %bf.lshr172 = lshr i32 %bf.load171, 6, !dbg !6798
  %bf.clear173 = and i32 %bf.lshr172, 1, !dbg !6798
  %bf.cast174 = zext i32 %bf.clear173 to i64, !dbg !6798
  %tobool175 = icmp ne i64 %bf.cast174, 0, !dbg !6798
  br i1 %tobool175, label %if.then176, label %if.end178, !dbg !6797

if.then176:                                       ; preds = %do.end149
  %89 = load i32, i32* %count, align 4, !dbg !6798
  %inc177 = add i32 %89, 1, !dbg !6798
  store i32 %inc177, i32* %count, align 4, !dbg !6798
  br label %if.end178, !dbg !6798

if.end178:                                        ; preds = %if.then176, %do.end149
  %90 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6800
  %private_host_attrs179 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %90, i32 0, i32 4, !dbg !6800
  %91 = load i32, i32* %count, align 4, !dbg !6800
  %idxprom180 = sext i32 %91 to i64, !dbg !6800
  %arrayidx181 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs179, i64 0, i64 %idxprom180, !dbg !6800
  %92 = bitcast %struct.device_attribute* %arrayidx181 to i8*, !dbg !6800
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_port_name to i8*), i64 32, i1 false), !dbg !6800
  %93 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6800
  %private_host_attrs182 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %93, i32 0, i32 4, !dbg !6800
  %94 = load i32, i32* %count, align 4, !dbg !6800
  %idxprom183 = sext i32 %94 to i64, !dbg !6800
  %arrayidx184 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs182, i64 0, i64 %idxprom183, !dbg !6800
  %attr185 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx184, i32 0, i32 0, !dbg !6800
  %mode186 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr185, i32 0, i32 1, !dbg !6800
  store i16 292, i16* %mode186, align 8, !dbg !6800
  %95 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6800
  %private_host_attrs187 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %95, i32 0, i32 4, !dbg !6800
  %96 = load i32, i32* %count, align 4, !dbg !6800
  %idxprom188 = sext i32 %96 to i64, !dbg !6800
  %arrayidx189 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs187, i64 0, i64 %idxprom188, !dbg !6800
  %store190 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx189, i32 0, i32 2, !dbg !6800
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store190, align 8, !dbg !6800
  %97 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6800
  %private_host_attrs191 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %97, i32 0, i32 4, !dbg !6800
  %98 = load i32, i32* %count, align 4, !dbg !6800
  %idxprom192 = sext i32 %98 to i64, !dbg !6800
  %arrayidx193 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs191, i64 0, i64 %idxprom192, !dbg !6800
  %99 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6800
  %host_attrs194 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %99, i32 0, i32 5, !dbg !6800
  %100 = load i32, i32* %count, align 4, !dbg !6800
  %idxprom195 = sext i32 %100 to i64, !dbg !6800
  %arrayidx196 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs194, i64 0, i64 %idxprom195, !dbg !6800
  store %struct.device_attribute* %arrayidx193, %struct.device_attribute** %arrayidx196, align 8, !dbg !6800
  %101 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6801
  %f197 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %101, i32 0, i32 1, !dbg !6801
  %102 = load %struct.fc_function_template*, %struct.fc_function_template** %f197, align 8, !dbg !6801
  %show_host_port_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %102, i32 0, i32 27, !dbg !6801
  %bf.load198 = load i32, i32* %show_host_port_name, align 4, !dbg !6801
  %bf.lshr199 = lshr i32 %bf.load198, 7, !dbg !6801
  %bf.clear200 = and i32 %bf.lshr199, 1, !dbg !6801
  %bf.cast201 = zext i32 %bf.clear200 to i64, !dbg !6801
  %tobool202 = icmp ne i64 %bf.cast201, 0, !dbg !6801
  br i1 %tobool202, label %if.then203, label %if.end205, !dbg !6800

if.then203:                                       ; preds = %if.end178
  %103 = load i32, i32* %count, align 4, !dbg !6801
  %inc204 = add i32 %103, 1, !dbg !6801
  store i32 %inc204, i32* %count, align 4, !dbg !6801
  br label %if.end205, !dbg !6801

if.end205:                                        ; preds = %if.then203, %if.end178
  %104 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6803
  %private_host_attrs206 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %104, i32 0, i32 4, !dbg !6803
  %105 = load i32, i32* %count, align 4, !dbg !6803
  %idxprom207 = sext i32 %105 to i64, !dbg !6803
  %arrayidx208 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs206, i64 0, i64 %idxprom207, !dbg !6803
  %106 = bitcast %struct.device_attribute* %arrayidx208 to i8*, !dbg !6803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_permanent_port_name to i8*), i64 32, i1 false), !dbg !6803
  %107 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6803
  %private_host_attrs209 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %107, i32 0, i32 4, !dbg !6803
  %108 = load i32, i32* %count, align 4, !dbg !6803
  %idxprom210 = sext i32 %108 to i64, !dbg !6803
  %arrayidx211 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs209, i64 0, i64 %idxprom210, !dbg !6803
  %attr212 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx211, i32 0, i32 0, !dbg !6803
  %mode213 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr212, i32 0, i32 1, !dbg !6803
  store i16 292, i16* %mode213, align 8, !dbg !6803
  %109 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6803
  %private_host_attrs214 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %109, i32 0, i32 4, !dbg !6803
  %110 = load i32, i32* %count, align 4, !dbg !6803
  %idxprom215 = sext i32 %110 to i64, !dbg !6803
  %arrayidx216 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs214, i64 0, i64 %idxprom215, !dbg !6803
  %store217 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx216, i32 0, i32 2, !dbg !6803
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store217, align 8, !dbg !6803
  %111 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6803
  %private_host_attrs218 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %111, i32 0, i32 4, !dbg !6803
  %112 = load i32, i32* %count, align 4, !dbg !6803
  %idxprom219 = sext i32 %112 to i64, !dbg !6803
  %arrayidx220 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs218, i64 0, i64 %idxprom219, !dbg !6803
  %113 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6803
  %host_attrs221 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %113, i32 0, i32 5, !dbg !6803
  %114 = load i32, i32* %count, align 4, !dbg !6803
  %idxprom222 = sext i32 %114 to i64, !dbg !6803
  %arrayidx223 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs221, i64 0, i64 %idxprom222, !dbg !6803
  store %struct.device_attribute* %arrayidx220, %struct.device_attribute** %arrayidx223, align 8, !dbg !6803
  %115 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6804
  %f224 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %115, i32 0, i32 1, !dbg !6804
  %116 = load %struct.fc_function_template*, %struct.fc_function_template** %f224, align 8, !dbg !6804
  %show_host_permanent_port_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %116, i32 0, i32 27, !dbg !6804
  %bf.load225 = load i32, i32* %show_host_permanent_port_name, align 4, !dbg !6804
  %bf.lshr226 = lshr i32 %bf.load225, 8, !dbg !6804
  %bf.clear227 = and i32 %bf.lshr226, 1, !dbg !6804
  %bf.cast228 = zext i32 %bf.clear227 to i64, !dbg !6804
  %tobool229 = icmp ne i64 %bf.cast228, 0, !dbg !6804
  br i1 %tobool229, label %if.then230, label %if.end232, !dbg !6803

if.then230:                                       ; preds = %if.end205
  %117 = load i32, i32* %count, align 4, !dbg !6804
  %inc231 = add i32 %117, 1, !dbg !6804
  store i32 %inc231, i32* %count, align 4, !dbg !6804
  br label %if.end232, !dbg !6804

if.end232:                                        ; preds = %if.then230, %if.end205
  %118 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6806
  %private_host_attrs233 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %118, i32 0, i32 4, !dbg !6806
  %119 = load i32, i32* %count, align 4, !dbg !6806
  %idxprom234 = sext i32 %119 to i64, !dbg !6806
  %arrayidx235 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs233, i64 0, i64 %idxprom234, !dbg !6806
  %120 = bitcast %struct.device_attribute* %arrayidx235 to i8*, !dbg !6806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_supported_classes to i8*), i64 32, i1 false), !dbg !6806
  %121 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6806
  %private_host_attrs236 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %121, i32 0, i32 4, !dbg !6806
  %122 = load i32, i32* %count, align 4, !dbg !6806
  %idxprom237 = sext i32 %122 to i64, !dbg !6806
  %arrayidx238 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs236, i64 0, i64 %idxprom237, !dbg !6806
  %attr239 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx238, i32 0, i32 0, !dbg !6806
  %mode240 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr239, i32 0, i32 1, !dbg !6806
  store i16 292, i16* %mode240, align 8, !dbg !6806
  %123 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6806
  %private_host_attrs241 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %123, i32 0, i32 4, !dbg !6806
  %124 = load i32, i32* %count, align 4, !dbg !6806
  %idxprom242 = sext i32 %124 to i64, !dbg !6806
  %arrayidx243 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs241, i64 0, i64 %idxprom242, !dbg !6806
  %store244 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx243, i32 0, i32 2, !dbg !6806
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store244, align 8, !dbg !6806
  %125 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6806
  %private_host_attrs245 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %125, i32 0, i32 4, !dbg !6806
  %126 = load i32, i32* %count, align 4, !dbg !6806
  %idxprom246 = sext i32 %126 to i64, !dbg !6806
  %arrayidx247 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs245, i64 0, i64 %idxprom246, !dbg !6806
  %127 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6806
  %host_attrs248 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %127, i32 0, i32 5, !dbg !6806
  %128 = load i32, i32* %count, align 4, !dbg !6806
  %idxprom249 = sext i32 %128 to i64, !dbg !6806
  %arrayidx250 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs248, i64 0, i64 %idxprom249, !dbg !6806
  store %struct.device_attribute* %arrayidx247, %struct.device_attribute** %arrayidx250, align 8, !dbg !6806
  %129 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6807
  %f251 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %129, i32 0, i32 1, !dbg !6807
  %130 = load %struct.fc_function_template*, %struct.fc_function_template** %f251, align 8, !dbg !6807
  %show_host_supported_classes = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %130, i32 0, i32 27, !dbg !6807
  %bf.load252 = load i32, i32* %show_host_supported_classes, align 4, !dbg !6807
  %bf.lshr253 = lshr i32 %bf.load252, 9, !dbg !6807
  %bf.clear254 = and i32 %bf.lshr253, 1, !dbg !6807
  %bf.cast255 = zext i32 %bf.clear254 to i64, !dbg !6807
  %tobool256 = icmp ne i64 %bf.cast255, 0, !dbg !6807
  br i1 %tobool256, label %if.then257, label %if.end259, !dbg !6806

if.then257:                                       ; preds = %if.end232
  %131 = load i32, i32* %count, align 4, !dbg !6807
  %inc258 = add i32 %131, 1, !dbg !6807
  store i32 %inc258, i32* %count, align 4, !dbg !6807
  br label %if.end259, !dbg !6807

if.end259:                                        ; preds = %if.then257, %if.end232
  %132 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6809
  %private_host_attrs260 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %132, i32 0, i32 4, !dbg !6809
  %133 = load i32, i32* %count, align 4, !dbg !6809
  %idxprom261 = sext i32 %133 to i64, !dbg !6809
  %arrayidx262 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs260, i64 0, i64 %idxprom261, !dbg !6809
  %134 = bitcast %struct.device_attribute* %arrayidx262 to i8*, !dbg !6809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_supported_fc4s to i8*), i64 32, i1 false), !dbg !6809
  %135 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6809
  %private_host_attrs263 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %135, i32 0, i32 4, !dbg !6809
  %136 = load i32, i32* %count, align 4, !dbg !6809
  %idxprom264 = sext i32 %136 to i64, !dbg !6809
  %arrayidx265 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs263, i64 0, i64 %idxprom264, !dbg !6809
  %attr266 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx265, i32 0, i32 0, !dbg !6809
  %mode267 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr266, i32 0, i32 1, !dbg !6809
  store i16 292, i16* %mode267, align 8, !dbg !6809
  %137 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6809
  %private_host_attrs268 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %137, i32 0, i32 4, !dbg !6809
  %138 = load i32, i32* %count, align 4, !dbg !6809
  %idxprom269 = sext i32 %138 to i64, !dbg !6809
  %arrayidx270 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs268, i64 0, i64 %idxprom269, !dbg !6809
  %store271 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx270, i32 0, i32 2, !dbg !6809
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store271, align 8, !dbg !6809
  %139 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6809
  %private_host_attrs272 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %139, i32 0, i32 4, !dbg !6809
  %140 = load i32, i32* %count, align 4, !dbg !6809
  %idxprom273 = sext i32 %140 to i64, !dbg !6809
  %arrayidx274 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs272, i64 0, i64 %idxprom273, !dbg !6809
  %141 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6809
  %host_attrs275 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %141, i32 0, i32 5, !dbg !6809
  %142 = load i32, i32* %count, align 4, !dbg !6809
  %idxprom276 = sext i32 %142 to i64, !dbg !6809
  %arrayidx277 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs275, i64 0, i64 %idxprom276, !dbg !6809
  store %struct.device_attribute* %arrayidx274, %struct.device_attribute** %arrayidx277, align 8, !dbg !6809
  %143 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6810
  %f278 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %143, i32 0, i32 1, !dbg !6810
  %144 = load %struct.fc_function_template*, %struct.fc_function_template** %f278, align 8, !dbg !6810
  %show_host_supported_fc4s = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %144, i32 0, i32 27, !dbg !6810
  %bf.load279 = load i32, i32* %show_host_supported_fc4s, align 4, !dbg !6810
  %bf.lshr280 = lshr i32 %bf.load279, 10, !dbg !6810
  %bf.clear281 = and i32 %bf.lshr280, 1, !dbg !6810
  %bf.cast282 = zext i32 %bf.clear281 to i64, !dbg !6810
  %tobool283 = icmp ne i64 %bf.cast282, 0, !dbg !6810
  br i1 %tobool283, label %if.then284, label %if.end286, !dbg !6809

if.then284:                                       ; preds = %if.end259
  %145 = load i32, i32* %count, align 4, !dbg !6810
  %inc285 = add i32 %145, 1, !dbg !6810
  store i32 %inc285, i32* %count, align 4, !dbg !6810
  br label %if.end286, !dbg !6810

if.end286:                                        ; preds = %if.then284, %if.end259
  %146 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6812
  %private_host_attrs287 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %146, i32 0, i32 4, !dbg !6812
  %147 = load i32, i32* %count, align 4, !dbg !6812
  %idxprom288 = sext i32 %147 to i64, !dbg !6812
  %arrayidx289 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs287, i64 0, i64 %idxprom288, !dbg !6812
  %148 = bitcast %struct.device_attribute* %arrayidx289 to i8*, !dbg !6812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_supported_speeds to i8*), i64 32, i1 false), !dbg !6812
  %149 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6812
  %private_host_attrs290 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %149, i32 0, i32 4, !dbg !6812
  %150 = load i32, i32* %count, align 4, !dbg !6812
  %idxprom291 = sext i32 %150 to i64, !dbg !6812
  %arrayidx292 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs290, i64 0, i64 %idxprom291, !dbg !6812
  %attr293 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx292, i32 0, i32 0, !dbg !6812
  %mode294 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr293, i32 0, i32 1, !dbg !6812
  store i16 292, i16* %mode294, align 8, !dbg !6812
  %151 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6812
  %private_host_attrs295 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %151, i32 0, i32 4, !dbg !6812
  %152 = load i32, i32* %count, align 4, !dbg !6812
  %idxprom296 = sext i32 %152 to i64, !dbg !6812
  %arrayidx297 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs295, i64 0, i64 %idxprom296, !dbg !6812
  %store298 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx297, i32 0, i32 2, !dbg !6812
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store298, align 8, !dbg !6812
  %153 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6812
  %private_host_attrs299 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %153, i32 0, i32 4, !dbg !6812
  %154 = load i32, i32* %count, align 4, !dbg !6812
  %idxprom300 = sext i32 %154 to i64, !dbg !6812
  %arrayidx301 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs299, i64 0, i64 %idxprom300, !dbg !6812
  %155 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6812
  %host_attrs302 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %155, i32 0, i32 5, !dbg !6812
  %156 = load i32, i32* %count, align 4, !dbg !6812
  %idxprom303 = sext i32 %156 to i64, !dbg !6812
  %arrayidx304 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs302, i64 0, i64 %idxprom303, !dbg !6812
  store %struct.device_attribute* %arrayidx301, %struct.device_attribute** %arrayidx304, align 8, !dbg !6812
  %157 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6813
  %f305 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %157, i32 0, i32 1, !dbg !6813
  %158 = load %struct.fc_function_template*, %struct.fc_function_template** %f305, align 8, !dbg !6813
  %show_host_supported_speeds = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %158, i32 0, i32 27, !dbg !6813
  %bf.load306 = load i32, i32* %show_host_supported_speeds, align 4, !dbg !6813
  %bf.lshr307 = lshr i32 %bf.load306, 11, !dbg !6813
  %bf.clear308 = and i32 %bf.lshr307, 1, !dbg !6813
  %bf.cast309 = zext i32 %bf.clear308 to i64, !dbg !6813
  %tobool310 = icmp ne i64 %bf.cast309, 0, !dbg !6813
  br i1 %tobool310, label %if.then311, label %if.end313, !dbg !6812

if.then311:                                       ; preds = %if.end286
  %159 = load i32, i32* %count, align 4, !dbg !6813
  %inc312 = add i32 %159, 1, !dbg !6813
  store i32 %inc312, i32* %count, align 4, !dbg !6813
  br label %if.end313, !dbg !6813

if.end313:                                        ; preds = %if.then311, %if.end286
  %160 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6815
  %private_host_attrs314 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %160, i32 0, i32 4, !dbg !6815
  %161 = load i32, i32* %count, align 4, !dbg !6815
  %idxprom315 = sext i32 %161 to i64, !dbg !6815
  %arrayidx316 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs314, i64 0, i64 %idxprom315, !dbg !6815
  %162 = bitcast %struct.device_attribute* %arrayidx316 to i8*, !dbg !6815
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_maxframe_size to i8*), i64 32, i1 false), !dbg !6815
  %163 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6815
  %private_host_attrs317 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %163, i32 0, i32 4, !dbg !6815
  %164 = load i32, i32* %count, align 4, !dbg !6815
  %idxprom318 = sext i32 %164 to i64, !dbg !6815
  %arrayidx319 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs317, i64 0, i64 %idxprom318, !dbg !6815
  %attr320 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx319, i32 0, i32 0, !dbg !6815
  %mode321 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr320, i32 0, i32 1, !dbg !6815
  store i16 292, i16* %mode321, align 8, !dbg !6815
  %165 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6815
  %private_host_attrs322 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %165, i32 0, i32 4, !dbg !6815
  %166 = load i32, i32* %count, align 4, !dbg !6815
  %idxprom323 = sext i32 %166 to i64, !dbg !6815
  %arrayidx324 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs322, i64 0, i64 %idxprom323, !dbg !6815
  %store325 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx324, i32 0, i32 2, !dbg !6815
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store325, align 8, !dbg !6815
  %167 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6815
  %private_host_attrs326 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %167, i32 0, i32 4, !dbg !6815
  %168 = load i32, i32* %count, align 4, !dbg !6815
  %idxprom327 = sext i32 %168 to i64, !dbg !6815
  %arrayidx328 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs326, i64 0, i64 %idxprom327, !dbg !6815
  %169 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6815
  %host_attrs329 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %169, i32 0, i32 5, !dbg !6815
  %170 = load i32, i32* %count, align 4, !dbg !6815
  %idxprom330 = sext i32 %170 to i64, !dbg !6815
  %arrayidx331 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs329, i64 0, i64 %idxprom330, !dbg !6815
  store %struct.device_attribute* %arrayidx328, %struct.device_attribute** %arrayidx331, align 8, !dbg !6815
  %171 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6816
  %f332 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %171, i32 0, i32 1, !dbg !6816
  %172 = load %struct.fc_function_template*, %struct.fc_function_template** %f332, align 8, !dbg !6816
  %show_host_maxframe_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %172, i32 0, i32 27, !dbg !6816
  %bf.load333 = load i32, i32* %show_host_maxframe_size, align 4, !dbg !6816
  %bf.lshr334 = lshr i32 %bf.load333, 12, !dbg !6816
  %bf.clear335 = and i32 %bf.lshr334, 1, !dbg !6816
  %bf.cast336 = zext i32 %bf.clear335 to i64, !dbg !6816
  %tobool337 = icmp ne i64 %bf.cast336, 0, !dbg !6816
  br i1 %tobool337, label %if.then338, label %if.end340, !dbg !6815

if.then338:                                       ; preds = %if.end313
  %173 = load i32, i32* %count, align 4, !dbg !6816
  %inc339 = add i32 %173, 1, !dbg !6816
  store i32 %inc339, i32* %count, align 4, !dbg !6816
  br label %if.end340, !dbg !6816

if.end340:                                        ; preds = %if.then338, %if.end313
  %174 = load %struct.fc_function_template*, %struct.fc_function_template** %ft.addr, align 8, !dbg !6818
  %vport_create = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %174, i32 0, i32 19, !dbg !6820
  %175 = load i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)** %vport_create, align 8, !dbg !6820
  %tobool341 = icmp ne i32 (%struct.fc_vport*, i1)* %175, null, !dbg !6818
  br i1 %tobool341, label %if.then342, label %if.end381, !dbg !6821

if.then342:                                       ; preds = %if.end340
  %176 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6822
  %private_host_attrs343 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %176, i32 0, i32 4, !dbg !6822
  %177 = load i32, i32* %count, align 4, !dbg !6822
  %idxprom344 = sext i32 %177 to i64, !dbg !6822
  %arrayidx345 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs343, i64 0, i64 %idxprom344, !dbg !6822
  %178 = bitcast %struct.device_attribute* %arrayidx345 to i8*, !dbg !6822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_max_npiv_vports to i8*), i64 32, i1 false), !dbg !6822
  %179 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6822
  %private_host_attrs346 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %179, i32 0, i32 4, !dbg !6822
  %180 = load i32, i32* %count, align 4, !dbg !6822
  %idxprom347 = sext i32 %180 to i64, !dbg !6822
  %arrayidx348 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs346, i64 0, i64 %idxprom347, !dbg !6822
  %attr349 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx348, i32 0, i32 0, !dbg !6822
  %mode350 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr349, i32 0, i32 1, !dbg !6822
  store i16 292, i16* %mode350, align 8, !dbg !6822
  %181 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6822
  %private_host_attrs351 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %181, i32 0, i32 4, !dbg !6822
  %182 = load i32, i32* %count, align 4, !dbg !6822
  %idxprom352 = sext i32 %182 to i64, !dbg !6822
  %arrayidx353 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs351, i64 0, i64 %idxprom352, !dbg !6822
  %store354 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx353, i32 0, i32 2, !dbg !6822
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store354, align 8, !dbg !6822
  %183 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6822
  %private_host_attrs355 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %183, i32 0, i32 4, !dbg !6822
  %184 = load i32, i32* %count, align 4, !dbg !6822
  %idxprom356 = sext i32 %184 to i64, !dbg !6822
  %arrayidx357 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs355, i64 0, i64 %idxprom356, !dbg !6822
  %185 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6822
  %host_attrs358 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %185, i32 0, i32 5, !dbg !6822
  %186 = load i32, i32* %count, align 4, !dbg !6822
  %idxprom359 = sext i32 %186 to i64, !dbg !6822
  %arrayidx360 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs358, i64 0, i64 %idxprom359, !dbg !6822
  store %struct.device_attribute* %arrayidx357, %struct.device_attribute** %arrayidx360, align 8, !dbg !6822
  %187 = load i32, i32* %count, align 4, !dbg !6822
  %inc361 = add i32 %187, 1, !dbg !6822
  store i32 %inc361, i32* %count, align 4, !dbg !6822
  %188 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6824
  %private_host_attrs362 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %188, i32 0, i32 4, !dbg !6824
  %189 = load i32, i32* %count, align 4, !dbg !6824
  %idxprom363 = sext i32 %189 to i64, !dbg !6824
  %arrayidx364 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs362, i64 0, i64 %idxprom363, !dbg !6824
  %190 = bitcast %struct.device_attribute* %arrayidx364 to i8*, !dbg !6824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_npiv_vports_inuse to i8*), i64 32, i1 false), !dbg !6824
  %191 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6824
  %private_host_attrs365 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %191, i32 0, i32 4, !dbg !6824
  %192 = load i32, i32* %count, align 4, !dbg !6824
  %idxprom366 = sext i32 %192 to i64, !dbg !6824
  %arrayidx367 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs365, i64 0, i64 %idxprom366, !dbg !6824
  %attr368 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx367, i32 0, i32 0, !dbg !6824
  %mode369 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr368, i32 0, i32 1, !dbg !6824
  store i16 292, i16* %mode369, align 8, !dbg !6824
  %193 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6824
  %private_host_attrs370 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %193, i32 0, i32 4, !dbg !6824
  %194 = load i32, i32* %count, align 4, !dbg !6824
  %idxprom371 = sext i32 %194 to i64, !dbg !6824
  %arrayidx372 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs370, i64 0, i64 %idxprom371, !dbg !6824
  %store373 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx372, i32 0, i32 2, !dbg !6824
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store373, align 8, !dbg !6824
  %195 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6824
  %private_host_attrs374 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %195, i32 0, i32 4, !dbg !6824
  %196 = load i32, i32* %count, align 4, !dbg !6824
  %idxprom375 = sext i32 %196 to i64, !dbg !6824
  %arrayidx376 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs374, i64 0, i64 %idxprom375, !dbg !6824
  %197 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6824
  %host_attrs377 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %197, i32 0, i32 5, !dbg !6824
  %198 = load i32, i32* %count, align 4, !dbg !6824
  %idxprom378 = sext i32 %198 to i64, !dbg !6824
  %arrayidx379 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs377, i64 0, i64 %idxprom378, !dbg !6824
  store %struct.device_attribute* %arrayidx376, %struct.device_attribute** %arrayidx379, align 8, !dbg !6824
  %199 = load i32, i32* %count, align 4, !dbg !6824
  %inc380 = add i32 %199, 1, !dbg !6824
  store i32 %inc380, i32* %count, align 4, !dbg !6824
  br label %if.end381, !dbg !6825

if.end381:                                        ; preds = %if.then342, %if.end340
  %200 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6826
  %private_host_attrs382 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %200, i32 0, i32 4, !dbg !6826
  %201 = load i32, i32* %count, align 4, !dbg !6826
  %idxprom383 = sext i32 %201 to i64, !dbg !6826
  %arrayidx384 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs382, i64 0, i64 %idxprom383, !dbg !6826
  %202 = bitcast %struct.device_attribute* %arrayidx384 to i8*, !dbg !6826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_serial_number to i8*), i64 32, i1 false), !dbg !6826
  %203 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6826
  %private_host_attrs385 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %203, i32 0, i32 4, !dbg !6826
  %204 = load i32, i32* %count, align 4, !dbg !6826
  %idxprom386 = sext i32 %204 to i64, !dbg !6826
  %arrayidx387 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs385, i64 0, i64 %idxprom386, !dbg !6826
  %attr388 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx387, i32 0, i32 0, !dbg !6826
  %mode389 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr388, i32 0, i32 1, !dbg !6826
  store i16 292, i16* %mode389, align 8, !dbg !6826
  %205 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6826
  %private_host_attrs390 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %205, i32 0, i32 4, !dbg !6826
  %206 = load i32, i32* %count, align 4, !dbg !6826
  %idxprom391 = sext i32 %206 to i64, !dbg !6826
  %arrayidx392 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs390, i64 0, i64 %idxprom391, !dbg !6826
  %store393 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx392, i32 0, i32 2, !dbg !6826
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store393, align 8, !dbg !6826
  %207 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6826
  %private_host_attrs394 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %207, i32 0, i32 4, !dbg !6826
  %208 = load i32, i32* %count, align 4, !dbg !6826
  %idxprom395 = sext i32 %208 to i64, !dbg !6826
  %arrayidx396 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs394, i64 0, i64 %idxprom395, !dbg !6826
  %209 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6826
  %host_attrs397 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %209, i32 0, i32 5, !dbg !6826
  %210 = load i32, i32* %count, align 4, !dbg !6826
  %idxprom398 = sext i32 %210 to i64, !dbg !6826
  %arrayidx399 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs397, i64 0, i64 %idxprom398, !dbg !6826
  store %struct.device_attribute* %arrayidx396, %struct.device_attribute** %arrayidx399, align 8, !dbg !6826
  %211 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6827
  %f400 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %211, i32 0, i32 1, !dbg !6827
  %212 = load %struct.fc_function_template*, %struct.fc_function_template** %f400, align 8, !dbg !6827
  %show_host_serial_number = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %212, i32 0, i32 27, !dbg !6827
  %bf.load401 = load i32, i32* %show_host_serial_number, align 4, !dbg !6827
  %bf.lshr402 = lshr i32 %bf.load401, 13, !dbg !6827
  %bf.clear403 = and i32 %bf.lshr402, 1, !dbg !6827
  %bf.cast404 = zext i32 %bf.clear403 to i64, !dbg !6827
  %tobool405 = icmp ne i64 %bf.cast404, 0, !dbg !6827
  br i1 %tobool405, label %if.then406, label %if.end408, !dbg !6826

if.then406:                                       ; preds = %if.end381
  %213 = load i32, i32* %count, align 4, !dbg !6827
  %inc407 = add i32 %213, 1, !dbg !6827
  store i32 %inc407, i32* %count, align 4, !dbg !6827
  br label %if.end408, !dbg !6827

if.end408:                                        ; preds = %if.then406, %if.end381
  %214 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6829
  %private_host_attrs409 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %214, i32 0, i32 4, !dbg !6829
  %215 = load i32, i32* %count, align 4, !dbg !6829
  %idxprom410 = sext i32 %215 to i64, !dbg !6829
  %arrayidx411 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs409, i64 0, i64 %idxprom410, !dbg !6829
  %216 = bitcast %struct.device_attribute* %arrayidx411 to i8*, !dbg !6829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_manufacturer to i8*), i64 32, i1 false), !dbg !6829
  %217 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6829
  %private_host_attrs412 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %217, i32 0, i32 4, !dbg !6829
  %218 = load i32, i32* %count, align 4, !dbg !6829
  %idxprom413 = sext i32 %218 to i64, !dbg !6829
  %arrayidx414 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs412, i64 0, i64 %idxprom413, !dbg !6829
  %attr415 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx414, i32 0, i32 0, !dbg !6829
  %mode416 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr415, i32 0, i32 1, !dbg !6829
  store i16 292, i16* %mode416, align 8, !dbg !6829
  %219 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6829
  %private_host_attrs417 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %219, i32 0, i32 4, !dbg !6829
  %220 = load i32, i32* %count, align 4, !dbg !6829
  %idxprom418 = sext i32 %220 to i64, !dbg !6829
  %arrayidx419 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs417, i64 0, i64 %idxprom418, !dbg !6829
  %store420 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx419, i32 0, i32 2, !dbg !6829
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store420, align 8, !dbg !6829
  %221 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6829
  %private_host_attrs421 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %221, i32 0, i32 4, !dbg !6829
  %222 = load i32, i32* %count, align 4, !dbg !6829
  %idxprom422 = sext i32 %222 to i64, !dbg !6829
  %arrayidx423 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs421, i64 0, i64 %idxprom422, !dbg !6829
  %223 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6829
  %host_attrs424 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %223, i32 0, i32 5, !dbg !6829
  %224 = load i32, i32* %count, align 4, !dbg !6829
  %idxprom425 = sext i32 %224 to i64, !dbg !6829
  %arrayidx426 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs424, i64 0, i64 %idxprom425, !dbg !6829
  store %struct.device_attribute* %arrayidx423, %struct.device_attribute** %arrayidx426, align 8, !dbg !6829
  %225 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6830
  %f427 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %225, i32 0, i32 1, !dbg !6830
  %226 = load %struct.fc_function_template*, %struct.fc_function_template** %f427, align 8, !dbg !6830
  %show_host_manufacturer = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %226, i32 0, i32 27, !dbg !6830
  %bf.load428 = load i32, i32* %show_host_manufacturer, align 4, !dbg !6830
  %bf.lshr429 = lshr i32 %bf.load428, 14, !dbg !6830
  %bf.clear430 = and i32 %bf.lshr429, 1, !dbg !6830
  %bf.cast431 = zext i32 %bf.clear430 to i64, !dbg !6830
  %tobool432 = icmp ne i64 %bf.cast431, 0, !dbg !6830
  br i1 %tobool432, label %if.then433, label %if.end435, !dbg !6829

if.then433:                                       ; preds = %if.end408
  %227 = load i32, i32* %count, align 4, !dbg !6830
  %inc434 = add i32 %227, 1, !dbg !6830
  store i32 %inc434, i32* %count, align 4, !dbg !6830
  br label %if.end435, !dbg !6830

if.end435:                                        ; preds = %if.then433, %if.end408
  %228 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6832
  %private_host_attrs436 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %228, i32 0, i32 4, !dbg !6832
  %229 = load i32, i32* %count, align 4, !dbg !6832
  %idxprom437 = sext i32 %229 to i64, !dbg !6832
  %arrayidx438 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs436, i64 0, i64 %idxprom437, !dbg !6832
  %230 = bitcast %struct.device_attribute* %arrayidx438 to i8*, !dbg !6832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_model to i8*), i64 32, i1 false), !dbg !6832
  %231 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6832
  %private_host_attrs439 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %231, i32 0, i32 4, !dbg !6832
  %232 = load i32, i32* %count, align 4, !dbg !6832
  %idxprom440 = sext i32 %232 to i64, !dbg !6832
  %arrayidx441 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs439, i64 0, i64 %idxprom440, !dbg !6832
  %attr442 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx441, i32 0, i32 0, !dbg !6832
  %mode443 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr442, i32 0, i32 1, !dbg !6832
  store i16 292, i16* %mode443, align 8, !dbg !6832
  %233 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6832
  %private_host_attrs444 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %233, i32 0, i32 4, !dbg !6832
  %234 = load i32, i32* %count, align 4, !dbg !6832
  %idxprom445 = sext i32 %234 to i64, !dbg !6832
  %arrayidx446 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs444, i64 0, i64 %idxprom445, !dbg !6832
  %store447 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx446, i32 0, i32 2, !dbg !6832
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store447, align 8, !dbg !6832
  %235 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6832
  %private_host_attrs448 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %235, i32 0, i32 4, !dbg !6832
  %236 = load i32, i32* %count, align 4, !dbg !6832
  %idxprom449 = sext i32 %236 to i64, !dbg !6832
  %arrayidx450 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs448, i64 0, i64 %idxprom449, !dbg !6832
  %237 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6832
  %host_attrs451 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %237, i32 0, i32 5, !dbg !6832
  %238 = load i32, i32* %count, align 4, !dbg !6832
  %idxprom452 = sext i32 %238 to i64, !dbg !6832
  %arrayidx453 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs451, i64 0, i64 %idxprom452, !dbg !6832
  store %struct.device_attribute* %arrayidx450, %struct.device_attribute** %arrayidx453, align 8, !dbg !6832
  %239 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6833
  %f454 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %239, i32 0, i32 1, !dbg !6833
  %240 = load %struct.fc_function_template*, %struct.fc_function_template** %f454, align 8, !dbg !6833
  %show_host_model = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %240, i32 0, i32 27, !dbg !6833
  %bf.load455 = load i32, i32* %show_host_model, align 4, !dbg !6833
  %bf.lshr456 = lshr i32 %bf.load455, 15, !dbg !6833
  %bf.clear457 = and i32 %bf.lshr456, 1, !dbg !6833
  %bf.cast458 = zext i32 %bf.clear457 to i64, !dbg !6833
  %tobool459 = icmp ne i64 %bf.cast458, 0, !dbg !6833
  br i1 %tobool459, label %if.then460, label %if.end462, !dbg !6832

if.then460:                                       ; preds = %if.end435
  %241 = load i32, i32* %count, align 4, !dbg !6833
  %inc461 = add i32 %241, 1, !dbg !6833
  store i32 %inc461, i32* %count, align 4, !dbg !6833
  br label %if.end462, !dbg !6833

if.end462:                                        ; preds = %if.then460, %if.end435
  %242 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6835
  %private_host_attrs463 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %242, i32 0, i32 4, !dbg !6835
  %243 = load i32, i32* %count, align 4, !dbg !6835
  %idxprom464 = sext i32 %243 to i64, !dbg !6835
  %arrayidx465 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs463, i64 0, i64 %idxprom464, !dbg !6835
  %244 = bitcast %struct.device_attribute* %arrayidx465 to i8*, !dbg !6835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_model_description to i8*), i64 32, i1 false), !dbg !6835
  %245 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6835
  %private_host_attrs466 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %245, i32 0, i32 4, !dbg !6835
  %246 = load i32, i32* %count, align 4, !dbg !6835
  %idxprom467 = sext i32 %246 to i64, !dbg !6835
  %arrayidx468 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs466, i64 0, i64 %idxprom467, !dbg !6835
  %attr469 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx468, i32 0, i32 0, !dbg !6835
  %mode470 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr469, i32 0, i32 1, !dbg !6835
  store i16 292, i16* %mode470, align 8, !dbg !6835
  %247 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6835
  %private_host_attrs471 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %247, i32 0, i32 4, !dbg !6835
  %248 = load i32, i32* %count, align 4, !dbg !6835
  %idxprom472 = sext i32 %248 to i64, !dbg !6835
  %arrayidx473 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs471, i64 0, i64 %idxprom472, !dbg !6835
  %store474 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx473, i32 0, i32 2, !dbg !6835
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store474, align 8, !dbg !6835
  %249 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6835
  %private_host_attrs475 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %249, i32 0, i32 4, !dbg !6835
  %250 = load i32, i32* %count, align 4, !dbg !6835
  %idxprom476 = sext i32 %250 to i64, !dbg !6835
  %arrayidx477 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs475, i64 0, i64 %idxprom476, !dbg !6835
  %251 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6835
  %host_attrs478 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %251, i32 0, i32 5, !dbg !6835
  %252 = load i32, i32* %count, align 4, !dbg !6835
  %idxprom479 = sext i32 %252 to i64, !dbg !6835
  %arrayidx480 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs478, i64 0, i64 %idxprom479, !dbg !6835
  store %struct.device_attribute* %arrayidx477, %struct.device_attribute** %arrayidx480, align 8, !dbg !6835
  %253 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6836
  %f481 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %253, i32 0, i32 1, !dbg !6836
  %254 = load %struct.fc_function_template*, %struct.fc_function_template** %f481, align 8, !dbg !6836
  %show_host_model_description = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %254, i32 0, i32 27, !dbg !6836
  %bf.load482 = load i32, i32* %show_host_model_description, align 4, !dbg !6836
  %bf.lshr483 = lshr i32 %bf.load482, 16, !dbg !6836
  %bf.clear484 = and i32 %bf.lshr483, 1, !dbg !6836
  %bf.cast485 = zext i32 %bf.clear484 to i64, !dbg !6836
  %tobool486 = icmp ne i64 %bf.cast485, 0, !dbg !6836
  br i1 %tobool486, label %if.then487, label %if.end489, !dbg !6835

if.then487:                                       ; preds = %if.end462
  %255 = load i32, i32* %count, align 4, !dbg !6836
  %inc488 = add i32 %255, 1, !dbg !6836
  store i32 %inc488, i32* %count, align 4, !dbg !6836
  br label %if.end489, !dbg !6836

if.end489:                                        ; preds = %if.then487, %if.end462
  %256 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6838
  %private_host_attrs490 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %256, i32 0, i32 4, !dbg !6838
  %257 = load i32, i32* %count, align 4, !dbg !6838
  %idxprom491 = sext i32 %257 to i64, !dbg !6838
  %arrayidx492 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs490, i64 0, i64 %idxprom491, !dbg !6838
  %258 = bitcast %struct.device_attribute* %arrayidx492 to i8*, !dbg !6838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_hardware_version to i8*), i64 32, i1 false), !dbg !6838
  %259 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6838
  %private_host_attrs493 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %259, i32 0, i32 4, !dbg !6838
  %260 = load i32, i32* %count, align 4, !dbg !6838
  %idxprom494 = sext i32 %260 to i64, !dbg !6838
  %arrayidx495 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs493, i64 0, i64 %idxprom494, !dbg !6838
  %attr496 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx495, i32 0, i32 0, !dbg !6838
  %mode497 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr496, i32 0, i32 1, !dbg !6838
  store i16 292, i16* %mode497, align 8, !dbg !6838
  %261 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6838
  %private_host_attrs498 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %261, i32 0, i32 4, !dbg !6838
  %262 = load i32, i32* %count, align 4, !dbg !6838
  %idxprom499 = sext i32 %262 to i64, !dbg !6838
  %arrayidx500 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs498, i64 0, i64 %idxprom499, !dbg !6838
  %store501 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx500, i32 0, i32 2, !dbg !6838
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store501, align 8, !dbg !6838
  %263 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6838
  %private_host_attrs502 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %263, i32 0, i32 4, !dbg !6838
  %264 = load i32, i32* %count, align 4, !dbg !6838
  %idxprom503 = sext i32 %264 to i64, !dbg !6838
  %arrayidx504 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs502, i64 0, i64 %idxprom503, !dbg !6838
  %265 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6838
  %host_attrs505 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %265, i32 0, i32 5, !dbg !6838
  %266 = load i32, i32* %count, align 4, !dbg !6838
  %idxprom506 = sext i32 %266 to i64, !dbg !6838
  %arrayidx507 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs505, i64 0, i64 %idxprom506, !dbg !6838
  store %struct.device_attribute* %arrayidx504, %struct.device_attribute** %arrayidx507, align 8, !dbg !6838
  %267 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6839
  %f508 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %267, i32 0, i32 1, !dbg !6839
  %268 = load %struct.fc_function_template*, %struct.fc_function_template** %f508, align 8, !dbg !6839
  %show_host_hardware_version = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %268, i32 0, i32 27, !dbg !6839
  %bf.load509 = load i32, i32* %show_host_hardware_version, align 4, !dbg !6839
  %bf.lshr510 = lshr i32 %bf.load509, 17, !dbg !6839
  %bf.clear511 = and i32 %bf.lshr510, 1, !dbg !6839
  %bf.cast512 = zext i32 %bf.clear511 to i64, !dbg !6839
  %tobool513 = icmp ne i64 %bf.cast512, 0, !dbg !6839
  br i1 %tobool513, label %if.then514, label %if.end516, !dbg !6838

if.then514:                                       ; preds = %if.end489
  %269 = load i32, i32* %count, align 4, !dbg !6839
  %inc515 = add i32 %269, 1, !dbg !6839
  store i32 %inc515, i32* %count, align 4, !dbg !6839
  br label %if.end516, !dbg !6839

if.end516:                                        ; preds = %if.then514, %if.end489
  %270 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6841
  %private_host_attrs517 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %270, i32 0, i32 4, !dbg !6841
  %271 = load i32, i32* %count, align 4, !dbg !6841
  %idxprom518 = sext i32 %271 to i64, !dbg !6841
  %arrayidx519 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs517, i64 0, i64 %idxprom518, !dbg !6841
  %272 = bitcast %struct.device_attribute* %arrayidx519 to i8*, !dbg !6841
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_driver_version to i8*), i64 32, i1 false), !dbg !6841
  %273 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6841
  %private_host_attrs520 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %273, i32 0, i32 4, !dbg !6841
  %274 = load i32, i32* %count, align 4, !dbg !6841
  %idxprom521 = sext i32 %274 to i64, !dbg !6841
  %arrayidx522 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs520, i64 0, i64 %idxprom521, !dbg !6841
  %attr523 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx522, i32 0, i32 0, !dbg !6841
  %mode524 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr523, i32 0, i32 1, !dbg !6841
  store i16 292, i16* %mode524, align 8, !dbg !6841
  %275 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6841
  %private_host_attrs525 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %275, i32 0, i32 4, !dbg !6841
  %276 = load i32, i32* %count, align 4, !dbg !6841
  %idxprom526 = sext i32 %276 to i64, !dbg !6841
  %arrayidx527 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs525, i64 0, i64 %idxprom526, !dbg !6841
  %store528 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx527, i32 0, i32 2, !dbg !6841
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store528, align 8, !dbg !6841
  %277 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6841
  %private_host_attrs529 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %277, i32 0, i32 4, !dbg !6841
  %278 = load i32, i32* %count, align 4, !dbg !6841
  %idxprom530 = sext i32 %278 to i64, !dbg !6841
  %arrayidx531 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs529, i64 0, i64 %idxprom530, !dbg !6841
  %279 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6841
  %host_attrs532 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %279, i32 0, i32 5, !dbg !6841
  %280 = load i32, i32* %count, align 4, !dbg !6841
  %idxprom533 = sext i32 %280 to i64, !dbg !6841
  %arrayidx534 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs532, i64 0, i64 %idxprom533, !dbg !6841
  store %struct.device_attribute* %arrayidx531, %struct.device_attribute** %arrayidx534, align 8, !dbg !6841
  %281 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6842
  %f535 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %281, i32 0, i32 1, !dbg !6842
  %282 = load %struct.fc_function_template*, %struct.fc_function_template** %f535, align 8, !dbg !6842
  %show_host_driver_version = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %282, i32 0, i32 27, !dbg !6842
  %bf.load536 = load i32, i32* %show_host_driver_version, align 4, !dbg !6842
  %bf.lshr537 = lshr i32 %bf.load536, 18, !dbg !6842
  %bf.clear538 = and i32 %bf.lshr537, 1, !dbg !6842
  %bf.cast539 = zext i32 %bf.clear538 to i64, !dbg !6842
  %tobool540 = icmp ne i64 %bf.cast539, 0, !dbg !6842
  br i1 %tobool540, label %if.then541, label %if.end543, !dbg !6841

if.then541:                                       ; preds = %if.end516
  %283 = load i32, i32* %count, align 4, !dbg !6842
  %inc542 = add i32 %283, 1, !dbg !6842
  store i32 %inc542, i32* %count, align 4, !dbg !6842
  br label %if.end543, !dbg !6842

if.end543:                                        ; preds = %if.then541, %if.end516
  %284 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6844
  %private_host_attrs544 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %284, i32 0, i32 4, !dbg !6844
  %285 = load i32, i32* %count, align 4, !dbg !6844
  %idxprom545 = sext i32 %285 to i64, !dbg !6844
  %arrayidx546 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs544, i64 0, i64 %idxprom545, !dbg !6844
  %286 = bitcast %struct.device_attribute* %arrayidx546 to i8*, !dbg !6844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_firmware_version to i8*), i64 32, i1 false), !dbg !6844
  %287 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6844
  %private_host_attrs547 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %287, i32 0, i32 4, !dbg !6844
  %288 = load i32, i32* %count, align 4, !dbg !6844
  %idxprom548 = sext i32 %288 to i64, !dbg !6844
  %arrayidx549 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs547, i64 0, i64 %idxprom548, !dbg !6844
  %attr550 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx549, i32 0, i32 0, !dbg !6844
  %mode551 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr550, i32 0, i32 1, !dbg !6844
  store i16 292, i16* %mode551, align 8, !dbg !6844
  %289 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6844
  %private_host_attrs552 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %289, i32 0, i32 4, !dbg !6844
  %290 = load i32, i32* %count, align 4, !dbg !6844
  %idxprom553 = sext i32 %290 to i64, !dbg !6844
  %arrayidx554 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs552, i64 0, i64 %idxprom553, !dbg !6844
  %store555 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx554, i32 0, i32 2, !dbg !6844
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store555, align 8, !dbg !6844
  %291 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6844
  %private_host_attrs556 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %291, i32 0, i32 4, !dbg !6844
  %292 = load i32, i32* %count, align 4, !dbg !6844
  %idxprom557 = sext i32 %292 to i64, !dbg !6844
  %arrayidx558 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs556, i64 0, i64 %idxprom557, !dbg !6844
  %293 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6844
  %host_attrs559 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %293, i32 0, i32 5, !dbg !6844
  %294 = load i32, i32* %count, align 4, !dbg !6844
  %idxprom560 = sext i32 %294 to i64, !dbg !6844
  %arrayidx561 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs559, i64 0, i64 %idxprom560, !dbg !6844
  store %struct.device_attribute* %arrayidx558, %struct.device_attribute** %arrayidx561, align 8, !dbg !6844
  %295 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6845
  %f562 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %295, i32 0, i32 1, !dbg !6845
  %296 = load %struct.fc_function_template*, %struct.fc_function_template** %f562, align 8, !dbg !6845
  %show_host_firmware_version = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %296, i32 0, i32 27, !dbg !6845
  %bf.load563 = load i32, i32* %show_host_firmware_version, align 4, !dbg !6845
  %bf.lshr564 = lshr i32 %bf.load563, 19, !dbg !6845
  %bf.clear565 = and i32 %bf.lshr564, 1, !dbg !6845
  %bf.cast566 = zext i32 %bf.clear565 to i64, !dbg !6845
  %tobool567 = icmp ne i64 %bf.cast566, 0, !dbg !6845
  br i1 %tobool567, label %if.then568, label %if.end570, !dbg !6844

if.then568:                                       ; preds = %if.end543
  %297 = load i32, i32* %count, align 4, !dbg !6845
  %inc569 = add i32 %297, 1, !dbg !6845
  store i32 %inc569, i32* %count, align 4, !dbg !6845
  br label %if.end570, !dbg !6845

if.end570:                                        ; preds = %if.then568, %if.end543
  %298 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6847
  %private_host_attrs571 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %298, i32 0, i32 4, !dbg !6847
  %299 = load i32, i32* %count, align 4, !dbg !6847
  %idxprom572 = sext i32 %299 to i64, !dbg !6847
  %arrayidx573 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs571, i64 0, i64 %idxprom572, !dbg !6847
  %300 = bitcast %struct.device_attribute* %arrayidx573 to i8*, !dbg !6847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_optionrom_version to i8*), i64 32, i1 false), !dbg !6847
  %301 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6847
  %private_host_attrs574 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %301, i32 0, i32 4, !dbg !6847
  %302 = load i32, i32* %count, align 4, !dbg !6847
  %idxprom575 = sext i32 %302 to i64, !dbg !6847
  %arrayidx576 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs574, i64 0, i64 %idxprom575, !dbg !6847
  %attr577 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx576, i32 0, i32 0, !dbg !6847
  %mode578 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr577, i32 0, i32 1, !dbg !6847
  store i16 292, i16* %mode578, align 8, !dbg !6847
  %303 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6847
  %private_host_attrs579 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %303, i32 0, i32 4, !dbg !6847
  %304 = load i32, i32* %count, align 4, !dbg !6847
  %idxprom580 = sext i32 %304 to i64, !dbg !6847
  %arrayidx581 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs579, i64 0, i64 %idxprom580, !dbg !6847
  %store582 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx581, i32 0, i32 2, !dbg !6847
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store582, align 8, !dbg !6847
  %305 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6847
  %private_host_attrs583 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %305, i32 0, i32 4, !dbg !6847
  %306 = load i32, i32* %count, align 4, !dbg !6847
  %idxprom584 = sext i32 %306 to i64, !dbg !6847
  %arrayidx585 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs583, i64 0, i64 %idxprom584, !dbg !6847
  %307 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6847
  %host_attrs586 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %307, i32 0, i32 5, !dbg !6847
  %308 = load i32, i32* %count, align 4, !dbg !6847
  %idxprom587 = sext i32 %308 to i64, !dbg !6847
  %arrayidx588 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs586, i64 0, i64 %idxprom587, !dbg !6847
  store %struct.device_attribute* %arrayidx585, %struct.device_attribute** %arrayidx588, align 8, !dbg !6847
  %309 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6848
  %f589 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %309, i32 0, i32 1, !dbg !6848
  %310 = load %struct.fc_function_template*, %struct.fc_function_template** %f589, align 8, !dbg !6848
  %show_host_optionrom_version = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %310, i32 0, i32 27, !dbg !6848
  %bf.load590 = load i32, i32* %show_host_optionrom_version, align 4, !dbg !6848
  %bf.lshr591 = lshr i32 %bf.load590, 20, !dbg !6848
  %bf.clear592 = and i32 %bf.lshr591, 1, !dbg !6848
  %bf.cast593 = zext i32 %bf.clear592 to i64, !dbg !6848
  %tobool594 = icmp ne i64 %bf.cast593, 0, !dbg !6848
  br i1 %tobool594, label %if.then595, label %if.end597, !dbg !6847

if.then595:                                       ; preds = %if.end570
  %311 = load i32, i32* %count, align 4, !dbg !6848
  %inc596 = add i32 %311, 1, !dbg !6848
  store i32 %inc596, i32* %count, align 4, !dbg !6848
  br label %if.end597, !dbg !6848

if.end597:                                        ; preds = %if.then595, %if.end570
  %312 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6850
  %private_host_attrs598 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %312, i32 0, i32 4, !dbg !6850
  %313 = load i32, i32* %count, align 4, !dbg !6850
  %idxprom599 = sext i32 %313 to i64, !dbg !6850
  %arrayidx600 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs598, i64 0, i64 %idxprom599, !dbg !6850
  %314 = bitcast %struct.device_attribute* %arrayidx600 to i8*, !dbg !6850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %314, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_port_id to i8*), i64 32, i1 false), !dbg !6850
  %315 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6850
  %private_host_attrs601 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %315, i32 0, i32 4, !dbg !6850
  %316 = load i32, i32* %count, align 4, !dbg !6850
  %idxprom602 = sext i32 %316 to i64, !dbg !6850
  %arrayidx603 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs601, i64 0, i64 %idxprom602, !dbg !6850
  %attr604 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx603, i32 0, i32 0, !dbg !6850
  %mode605 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr604, i32 0, i32 1, !dbg !6850
  store i16 292, i16* %mode605, align 8, !dbg !6850
  %317 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6850
  %private_host_attrs606 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %317, i32 0, i32 4, !dbg !6850
  %318 = load i32, i32* %count, align 4, !dbg !6850
  %idxprom607 = sext i32 %318 to i64, !dbg !6850
  %arrayidx608 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs606, i64 0, i64 %idxprom607, !dbg !6850
  %store609 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx608, i32 0, i32 2, !dbg !6850
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store609, align 8, !dbg !6850
  %319 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6850
  %private_host_attrs610 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %319, i32 0, i32 4, !dbg !6850
  %320 = load i32, i32* %count, align 4, !dbg !6850
  %idxprom611 = sext i32 %320 to i64, !dbg !6850
  %arrayidx612 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs610, i64 0, i64 %idxprom611, !dbg !6850
  %321 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6850
  %host_attrs613 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %321, i32 0, i32 5, !dbg !6850
  %322 = load i32, i32* %count, align 4, !dbg !6850
  %idxprom614 = sext i32 %322 to i64, !dbg !6850
  %arrayidx615 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs613, i64 0, i64 %idxprom614, !dbg !6850
  store %struct.device_attribute* %arrayidx612, %struct.device_attribute** %arrayidx615, align 8, !dbg !6850
  %323 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6851
  %f616 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %323, i32 0, i32 1, !dbg !6851
  %324 = load %struct.fc_function_template*, %struct.fc_function_template** %f616, align 8, !dbg !6851
  %show_host_port_id = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %324, i32 0, i32 27, !dbg !6851
  %bf.load617 = load i32, i32* %show_host_port_id, align 4, !dbg !6851
  %bf.lshr618 = lshr i32 %bf.load617, 21, !dbg !6851
  %bf.clear619 = and i32 %bf.lshr618, 1, !dbg !6851
  %bf.cast620 = zext i32 %bf.clear619 to i64, !dbg !6851
  %tobool621 = icmp ne i64 %bf.cast620, 0, !dbg !6851
  br i1 %tobool621, label %if.then622, label %if.end624, !dbg !6850

if.then622:                                       ; preds = %if.end597
  %325 = load i32, i32* %count, align 4, !dbg !6851
  %inc623 = add i32 %325, 1, !dbg !6851
  store i32 %inc623, i32* %count, align 4, !dbg !6851
  br label %if.end624, !dbg !6851

if.end624:                                        ; preds = %if.then622, %if.end597
  %326 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6853
  %private_host_attrs625 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %326, i32 0, i32 4, !dbg !6853
  %327 = load i32, i32* %count, align 4, !dbg !6853
  %idxprom626 = sext i32 %327 to i64, !dbg !6853
  %arrayidx627 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs625, i64 0, i64 %idxprom626, !dbg !6853
  %328 = bitcast %struct.device_attribute* %arrayidx627 to i8*, !dbg !6853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_port_type to i8*), i64 32, i1 false), !dbg !6853
  %329 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6853
  %private_host_attrs628 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %329, i32 0, i32 4, !dbg !6853
  %330 = load i32, i32* %count, align 4, !dbg !6853
  %idxprom629 = sext i32 %330 to i64, !dbg !6853
  %arrayidx630 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs628, i64 0, i64 %idxprom629, !dbg !6853
  %attr631 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx630, i32 0, i32 0, !dbg !6853
  %mode632 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr631, i32 0, i32 1, !dbg !6853
  store i16 292, i16* %mode632, align 8, !dbg !6853
  %331 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6853
  %private_host_attrs633 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %331, i32 0, i32 4, !dbg !6853
  %332 = load i32, i32* %count, align 4, !dbg !6853
  %idxprom634 = sext i32 %332 to i64, !dbg !6853
  %arrayidx635 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs633, i64 0, i64 %idxprom634, !dbg !6853
  %store636 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx635, i32 0, i32 2, !dbg !6853
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store636, align 8, !dbg !6853
  %333 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6853
  %private_host_attrs637 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %333, i32 0, i32 4, !dbg !6853
  %334 = load i32, i32* %count, align 4, !dbg !6853
  %idxprom638 = sext i32 %334 to i64, !dbg !6853
  %arrayidx639 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs637, i64 0, i64 %idxprom638, !dbg !6853
  %335 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6853
  %host_attrs640 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %335, i32 0, i32 5, !dbg !6853
  %336 = load i32, i32* %count, align 4, !dbg !6853
  %idxprom641 = sext i32 %336 to i64, !dbg !6853
  %arrayidx642 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs640, i64 0, i64 %idxprom641, !dbg !6853
  store %struct.device_attribute* %arrayidx639, %struct.device_attribute** %arrayidx642, align 8, !dbg !6853
  %337 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6854
  %f643 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %337, i32 0, i32 1, !dbg !6854
  %338 = load %struct.fc_function_template*, %struct.fc_function_template** %f643, align 8, !dbg !6854
  %show_host_port_type = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %338, i32 0, i32 27, !dbg !6854
  %bf.load644 = load i32, i32* %show_host_port_type, align 4, !dbg !6854
  %bf.lshr645 = lshr i32 %bf.load644, 22, !dbg !6854
  %bf.clear646 = and i32 %bf.lshr645, 1, !dbg !6854
  %bf.cast647 = zext i32 %bf.clear646 to i64, !dbg !6854
  %tobool648 = icmp ne i64 %bf.cast647, 0, !dbg !6854
  br i1 %tobool648, label %if.then649, label %if.end651, !dbg !6853

if.then649:                                       ; preds = %if.end624
  %339 = load i32, i32* %count, align 4, !dbg !6854
  %inc650 = add i32 %339, 1, !dbg !6854
  store i32 %inc650, i32* %count, align 4, !dbg !6854
  br label %if.end651, !dbg !6854

if.end651:                                        ; preds = %if.then649, %if.end624
  %340 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6856
  %private_host_attrs652 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %340, i32 0, i32 4, !dbg !6856
  %341 = load i32, i32* %count, align 4, !dbg !6856
  %idxprom653 = sext i32 %341 to i64, !dbg !6856
  %arrayidx654 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs652, i64 0, i64 %idxprom653, !dbg !6856
  %342 = bitcast %struct.device_attribute* %arrayidx654 to i8*, !dbg !6856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_port_state to i8*), i64 32, i1 false), !dbg !6856
  %343 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6856
  %private_host_attrs655 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %343, i32 0, i32 4, !dbg !6856
  %344 = load i32, i32* %count, align 4, !dbg !6856
  %idxprom656 = sext i32 %344 to i64, !dbg !6856
  %arrayidx657 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs655, i64 0, i64 %idxprom656, !dbg !6856
  %attr658 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx657, i32 0, i32 0, !dbg !6856
  %mode659 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr658, i32 0, i32 1, !dbg !6856
  store i16 292, i16* %mode659, align 8, !dbg !6856
  %345 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6856
  %private_host_attrs660 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %345, i32 0, i32 4, !dbg !6856
  %346 = load i32, i32* %count, align 4, !dbg !6856
  %idxprom661 = sext i32 %346 to i64, !dbg !6856
  %arrayidx662 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs660, i64 0, i64 %idxprom661, !dbg !6856
  %store663 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx662, i32 0, i32 2, !dbg !6856
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store663, align 8, !dbg !6856
  %347 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6856
  %private_host_attrs664 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %347, i32 0, i32 4, !dbg !6856
  %348 = load i32, i32* %count, align 4, !dbg !6856
  %idxprom665 = sext i32 %348 to i64, !dbg !6856
  %arrayidx666 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs664, i64 0, i64 %idxprom665, !dbg !6856
  %349 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6856
  %host_attrs667 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %349, i32 0, i32 5, !dbg !6856
  %350 = load i32, i32* %count, align 4, !dbg !6856
  %idxprom668 = sext i32 %350 to i64, !dbg !6856
  %arrayidx669 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs667, i64 0, i64 %idxprom668, !dbg !6856
  store %struct.device_attribute* %arrayidx666, %struct.device_attribute** %arrayidx669, align 8, !dbg !6856
  %351 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6857
  %f670 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %351, i32 0, i32 1, !dbg !6857
  %352 = load %struct.fc_function_template*, %struct.fc_function_template** %f670, align 8, !dbg !6857
  %show_host_port_state = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %352, i32 0, i32 27, !dbg !6857
  %bf.load671 = load i32, i32* %show_host_port_state, align 4, !dbg !6857
  %bf.lshr672 = lshr i32 %bf.load671, 23, !dbg !6857
  %bf.clear673 = and i32 %bf.lshr672, 1, !dbg !6857
  %bf.cast674 = zext i32 %bf.clear673 to i64, !dbg !6857
  %tobool675 = icmp ne i64 %bf.cast674, 0, !dbg !6857
  br i1 %tobool675, label %if.then676, label %if.end678, !dbg !6856

if.then676:                                       ; preds = %if.end651
  %353 = load i32, i32* %count, align 4, !dbg !6857
  %inc677 = add i32 %353, 1, !dbg !6857
  store i32 %inc677, i32* %count, align 4, !dbg !6857
  br label %if.end678, !dbg !6857

if.end678:                                        ; preds = %if.then676, %if.end651
  %354 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6859
  %private_host_attrs679 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %354, i32 0, i32 4, !dbg !6859
  %355 = load i32, i32* %count, align 4, !dbg !6859
  %idxprom680 = sext i32 %355 to i64, !dbg !6859
  %arrayidx681 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs679, i64 0, i64 %idxprom680, !dbg !6859
  %356 = bitcast %struct.device_attribute* %arrayidx681 to i8*, !dbg !6859
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %356, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_active_fc4s to i8*), i64 32, i1 false), !dbg !6859
  %357 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6859
  %private_host_attrs682 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %357, i32 0, i32 4, !dbg !6859
  %358 = load i32, i32* %count, align 4, !dbg !6859
  %idxprom683 = sext i32 %358 to i64, !dbg !6859
  %arrayidx684 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs682, i64 0, i64 %idxprom683, !dbg !6859
  %attr685 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx684, i32 0, i32 0, !dbg !6859
  %mode686 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr685, i32 0, i32 1, !dbg !6859
  store i16 292, i16* %mode686, align 8, !dbg !6859
  %359 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6859
  %private_host_attrs687 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %359, i32 0, i32 4, !dbg !6859
  %360 = load i32, i32* %count, align 4, !dbg !6859
  %idxprom688 = sext i32 %360 to i64, !dbg !6859
  %arrayidx689 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs687, i64 0, i64 %idxprom688, !dbg !6859
  %store690 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx689, i32 0, i32 2, !dbg !6859
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store690, align 8, !dbg !6859
  %361 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6859
  %private_host_attrs691 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %361, i32 0, i32 4, !dbg !6859
  %362 = load i32, i32* %count, align 4, !dbg !6859
  %idxprom692 = sext i32 %362 to i64, !dbg !6859
  %arrayidx693 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs691, i64 0, i64 %idxprom692, !dbg !6859
  %363 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6859
  %host_attrs694 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %363, i32 0, i32 5, !dbg !6859
  %364 = load i32, i32* %count, align 4, !dbg !6859
  %idxprom695 = sext i32 %364 to i64, !dbg !6859
  %arrayidx696 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs694, i64 0, i64 %idxprom695, !dbg !6859
  store %struct.device_attribute* %arrayidx693, %struct.device_attribute** %arrayidx696, align 8, !dbg !6859
  %365 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6860
  %f697 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %365, i32 0, i32 1, !dbg !6860
  %366 = load %struct.fc_function_template*, %struct.fc_function_template** %f697, align 8, !dbg !6860
  %show_host_active_fc4s = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %366, i32 0, i32 27, !dbg !6860
  %bf.load698 = load i32, i32* %show_host_active_fc4s, align 4, !dbg !6860
  %bf.lshr699 = lshr i32 %bf.load698, 24, !dbg !6860
  %bf.clear700 = and i32 %bf.lshr699, 1, !dbg !6860
  %bf.cast701 = zext i32 %bf.clear700 to i64, !dbg !6860
  %tobool702 = icmp ne i64 %bf.cast701, 0, !dbg !6860
  br i1 %tobool702, label %if.then703, label %if.end705, !dbg !6859

if.then703:                                       ; preds = %if.end678
  %367 = load i32, i32* %count, align 4, !dbg !6860
  %inc704 = add i32 %367, 1, !dbg !6860
  store i32 %inc704, i32* %count, align 4, !dbg !6860
  br label %if.end705, !dbg !6860

if.end705:                                        ; preds = %if.then703, %if.end678
  %368 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6862
  %private_host_attrs706 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %368, i32 0, i32 4, !dbg !6862
  %369 = load i32, i32* %count, align 4, !dbg !6862
  %idxprom707 = sext i32 %369 to i64, !dbg !6862
  %arrayidx708 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs706, i64 0, i64 %idxprom707, !dbg !6862
  %370 = bitcast %struct.device_attribute* %arrayidx708 to i8*, !dbg !6862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %370, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_speed to i8*), i64 32, i1 false), !dbg !6862
  %371 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6862
  %private_host_attrs709 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %371, i32 0, i32 4, !dbg !6862
  %372 = load i32, i32* %count, align 4, !dbg !6862
  %idxprom710 = sext i32 %372 to i64, !dbg !6862
  %arrayidx711 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs709, i64 0, i64 %idxprom710, !dbg !6862
  %attr712 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx711, i32 0, i32 0, !dbg !6862
  %mode713 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr712, i32 0, i32 1, !dbg !6862
  store i16 292, i16* %mode713, align 8, !dbg !6862
  %373 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6862
  %private_host_attrs714 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %373, i32 0, i32 4, !dbg !6862
  %374 = load i32, i32* %count, align 4, !dbg !6862
  %idxprom715 = sext i32 %374 to i64, !dbg !6862
  %arrayidx716 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs714, i64 0, i64 %idxprom715, !dbg !6862
  %store717 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx716, i32 0, i32 2, !dbg !6862
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store717, align 8, !dbg !6862
  %375 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6862
  %private_host_attrs718 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %375, i32 0, i32 4, !dbg !6862
  %376 = load i32, i32* %count, align 4, !dbg !6862
  %idxprom719 = sext i32 %376 to i64, !dbg !6862
  %arrayidx720 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs718, i64 0, i64 %idxprom719, !dbg !6862
  %377 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6862
  %host_attrs721 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %377, i32 0, i32 5, !dbg !6862
  %378 = load i32, i32* %count, align 4, !dbg !6862
  %idxprom722 = sext i32 %378 to i64, !dbg !6862
  %arrayidx723 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs721, i64 0, i64 %idxprom722, !dbg !6862
  store %struct.device_attribute* %arrayidx720, %struct.device_attribute** %arrayidx723, align 8, !dbg !6862
  %379 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6863
  %f724 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %379, i32 0, i32 1, !dbg !6863
  %380 = load %struct.fc_function_template*, %struct.fc_function_template** %f724, align 8, !dbg !6863
  %show_host_speed = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %380, i32 0, i32 27, !dbg !6863
  %bf.load725 = load i32, i32* %show_host_speed, align 4, !dbg !6863
  %bf.lshr726 = lshr i32 %bf.load725, 25, !dbg !6863
  %bf.clear727 = and i32 %bf.lshr726, 1, !dbg !6863
  %bf.cast728 = zext i32 %bf.clear727 to i64, !dbg !6863
  %tobool729 = icmp ne i64 %bf.cast728, 0, !dbg !6863
  br i1 %tobool729, label %if.then730, label %if.end732, !dbg !6862

if.then730:                                       ; preds = %if.end705
  %381 = load i32, i32* %count, align 4, !dbg !6863
  %inc731 = add i32 %381, 1, !dbg !6863
  store i32 %inc731, i32* %count, align 4, !dbg !6863
  br label %if.end732, !dbg !6863

if.end732:                                        ; preds = %if.then730, %if.end705
  %382 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6865
  %private_host_attrs733 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %382, i32 0, i32 4, !dbg !6865
  %383 = load i32, i32* %count, align 4, !dbg !6865
  %idxprom734 = sext i32 %383 to i64, !dbg !6865
  %arrayidx735 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs733, i64 0, i64 %idxprom734, !dbg !6865
  %384 = bitcast %struct.device_attribute* %arrayidx735 to i8*, !dbg !6865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %384, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_fabric_name to i8*), i64 32, i1 false), !dbg !6865
  %385 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6865
  %private_host_attrs736 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %385, i32 0, i32 4, !dbg !6865
  %386 = load i32, i32* %count, align 4, !dbg !6865
  %idxprom737 = sext i32 %386 to i64, !dbg !6865
  %arrayidx738 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs736, i64 0, i64 %idxprom737, !dbg !6865
  %attr739 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx738, i32 0, i32 0, !dbg !6865
  %mode740 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr739, i32 0, i32 1, !dbg !6865
  store i16 292, i16* %mode740, align 8, !dbg !6865
  %387 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6865
  %private_host_attrs741 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %387, i32 0, i32 4, !dbg !6865
  %388 = load i32, i32* %count, align 4, !dbg !6865
  %idxprom742 = sext i32 %388 to i64, !dbg !6865
  %arrayidx743 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs741, i64 0, i64 %idxprom742, !dbg !6865
  %store744 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx743, i32 0, i32 2, !dbg !6865
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store744, align 8, !dbg !6865
  %389 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6865
  %private_host_attrs745 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %389, i32 0, i32 4, !dbg !6865
  %390 = load i32, i32* %count, align 4, !dbg !6865
  %idxprom746 = sext i32 %390 to i64, !dbg !6865
  %arrayidx747 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs745, i64 0, i64 %idxprom746, !dbg !6865
  %391 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6865
  %host_attrs748 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %391, i32 0, i32 5, !dbg !6865
  %392 = load i32, i32* %count, align 4, !dbg !6865
  %idxprom749 = sext i32 %392 to i64, !dbg !6865
  %arrayidx750 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs748, i64 0, i64 %idxprom749, !dbg !6865
  store %struct.device_attribute* %arrayidx747, %struct.device_attribute** %arrayidx750, align 8, !dbg !6865
  %393 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6866
  %f751 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %393, i32 0, i32 1, !dbg !6866
  %394 = load %struct.fc_function_template*, %struct.fc_function_template** %f751, align 8, !dbg !6866
  %show_host_fabric_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %394, i32 0, i32 27, !dbg !6866
  %bf.load752 = load i32, i32* %show_host_fabric_name, align 4, !dbg !6866
  %bf.lshr753 = lshr i32 %bf.load752, 26, !dbg !6866
  %bf.clear754 = and i32 %bf.lshr753, 1, !dbg !6866
  %bf.cast755 = zext i32 %bf.clear754 to i64, !dbg !6866
  %tobool756 = icmp ne i64 %bf.cast755, 0, !dbg !6866
  br i1 %tobool756, label %if.then757, label %if.end759, !dbg !6865

if.then757:                                       ; preds = %if.end732
  %395 = load i32, i32* %count, align 4, !dbg !6866
  %inc758 = add i32 %395, 1, !dbg !6866
  store i32 %inc758, i32* %count, align 4, !dbg !6866
  br label %if.end759, !dbg !6866

if.end759:                                        ; preds = %if.then757, %if.end732
  %396 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6868
  %private_host_attrs760 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %396, i32 0, i32 4, !dbg !6868
  %397 = load i32, i32* %count, align 4, !dbg !6868
  %idxprom761 = sext i32 %397 to i64, !dbg !6868
  %arrayidx762 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs760, i64 0, i64 %idxprom761, !dbg !6868
  %398 = bitcast %struct.device_attribute* %arrayidx762 to i8*, !dbg !6868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %398, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_symbolic_name to i8*), i64 32, i1 false), !dbg !6868
  %399 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6868
  %private_host_attrs763 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %399, i32 0, i32 4, !dbg !6868
  %400 = load i32, i32* %count, align 4, !dbg !6868
  %idxprom764 = sext i32 %400 to i64, !dbg !6868
  %arrayidx765 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs763, i64 0, i64 %idxprom764, !dbg !6868
  %attr766 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx765, i32 0, i32 0, !dbg !6868
  %mode767 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr766, i32 0, i32 1, !dbg !6868
  store i16 292, i16* %mode767, align 8, !dbg !6868
  %401 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6868
  %private_host_attrs768 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %401, i32 0, i32 4, !dbg !6868
  %402 = load i32, i32* %count, align 4, !dbg !6868
  %idxprom769 = sext i32 %402 to i64, !dbg !6868
  %arrayidx770 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs768, i64 0, i64 %idxprom769, !dbg !6868
  %store771 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx770, i32 0, i32 2, !dbg !6868
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store771, align 8, !dbg !6868
  %403 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6868
  %private_host_attrs772 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %403, i32 0, i32 4, !dbg !6868
  %404 = load i32, i32* %count, align 4, !dbg !6868
  %idxprom773 = sext i32 %404 to i64, !dbg !6868
  %arrayidx774 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs772, i64 0, i64 %idxprom773, !dbg !6868
  %405 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6868
  %host_attrs775 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %405, i32 0, i32 5, !dbg !6868
  %406 = load i32, i32* %count, align 4, !dbg !6868
  %idxprom776 = sext i32 %406 to i64, !dbg !6868
  %arrayidx777 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs775, i64 0, i64 %idxprom776, !dbg !6868
  store %struct.device_attribute* %arrayidx774, %struct.device_attribute** %arrayidx777, align 8, !dbg !6868
  %407 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6869
  %f778 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %407, i32 0, i32 1, !dbg !6869
  %408 = load %struct.fc_function_template*, %struct.fc_function_template** %f778, align 8, !dbg !6869
  %show_host_symbolic_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %408, i32 0, i32 27, !dbg !6869
  %bf.load779 = load i32, i32* %show_host_symbolic_name, align 4, !dbg !6869
  %bf.lshr780 = lshr i32 %bf.load779, 27, !dbg !6869
  %bf.clear781 = and i32 %bf.lshr780, 1, !dbg !6869
  %bf.cast782 = zext i32 %bf.clear781 to i64, !dbg !6869
  %tobool783 = icmp ne i64 %bf.cast782, 0, !dbg !6869
  br i1 %tobool783, label %if.then784, label %if.end786, !dbg !6868

if.then784:                                       ; preds = %if.end759
  %409 = load i32, i32* %count, align 4, !dbg !6869
  %inc785 = add i32 %409, 1, !dbg !6869
  store i32 %inc785, i32* %count, align 4, !dbg !6869
  br label %if.end786, !dbg !6869

if.end786:                                        ; preds = %if.then784, %if.end759
  %410 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6871
  %private_host_attrs787 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %410, i32 0, i32 4, !dbg !6871
  %411 = load i32, i32* %count, align 4, !dbg !6871
  %idxprom788 = sext i32 %411 to i64, !dbg !6871
  %arrayidx789 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs787, i64 0, i64 %idxprom788, !dbg !6871
  %412 = bitcast %struct.device_attribute* %arrayidx789 to i8*, !dbg !6871
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %412, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_system_hostname to i8*), i64 32, i1 false), !dbg !6871
  %413 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6872
  %f790 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %413, i32 0, i32 1, !dbg !6872
  %414 = load %struct.fc_function_template*, %struct.fc_function_template** %f790, align 8, !dbg !6872
  %set_host_system_hostname = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %414, i32 0, i32 12, !dbg !6872
  %415 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %set_host_system_hostname, align 8, !dbg !6872
  %tobool791 = icmp ne void (%struct.Scsi_Host*)* %415, null, !dbg !6872
  br i1 %tobool791, label %if.end802, label %if.then792, !dbg !6871

if.then792:                                       ; preds = %if.end786
  %416 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6874
  %private_host_attrs793 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %416, i32 0, i32 4, !dbg !6874
  %417 = load i32, i32* %count, align 4, !dbg !6874
  %idxprom794 = sext i32 %417 to i64, !dbg !6874
  %arrayidx795 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs793, i64 0, i64 %idxprom794, !dbg !6874
  %attr796 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx795, i32 0, i32 0, !dbg !6874
  %mode797 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr796, i32 0, i32 1, !dbg !6874
  store i16 292, i16* %mode797, align 8, !dbg !6874
  %418 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6874
  %private_host_attrs798 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %418, i32 0, i32 4, !dbg !6874
  %419 = load i32, i32* %count, align 4, !dbg !6874
  %idxprom799 = sext i32 %419 to i64, !dbg !6874
  %arrayidx800 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs798, i64 0, i64 %idxprom799, !dbg !6874
  %store801 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx800, i32 0, i32 2, !dbg !6874
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store801, align 8, !dbg !6874
  br label %if.end802, !dbg !6874

if.end802:                                        ; preds = %if.then792, %if.end786
  %420 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6871
  %private_host_attrs803 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %420, i32 0, i32 4, !dbg !6871
  %421 = load i32, i32* %count, align 4, !dbg !6871
  %idxprom804 = sext i32 %421 to i64, !dbg !6871
  %arrayidx805 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs803, i64 0, i64 %idxprom804, !dbg !6871
  %422 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6871
  %host_attrs806 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %422, i32 0, i32 5, !dbg !6871
  %423 = load i32, i32* %count, align 4, !dbg !6871
  %idxprom807 = sext i32 %423 to i64, !dbg !6871
  %arrayidx808 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs806, i64 0, i64 %idxprom807, !dbg !6871
  store %struct.device_attribute* %arrayidx805, %struct.device_attribute** %arrayidx808, align 8, !dbg !6871
  %424 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6876
  %f809 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %424, i32 0, i32 1, !dbg !6876
  %425 = load %struct.fc_function_template*, %struct.fc_function_template** %f809, align 8, !dbg !6876
  %show_host_system_hostname = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %425, i32 0, i32 27, !dbg !6876
  %bf.load810 = load i32, i32* %show_host_system_hostname, align 4, !dbg !6876
  %bf.lshr811 = lshr i32 %bf.load810, 28, !dbg !6876
  %bf.clear812 = and i32 %bf.lshr811, 1, !dbg !6876
  %bf.cast813 = zext i32 %bf.clear812 to i64, !dbg !6876
  %tobool814 = icmp ne i64 %bf.cast813, 0, !dbg !6876
  br i1 %tobool814, label %if.then815, label %if.end817, !dbg !6871

if.then815:                                       ; preds = %if.end802
  %426 = load i32, i32* %count, align 4, !dbg !6876
  %inc816 = add i32 %426, 1, !dbg !6876
  store i32 %inc816, i32* %count, align 4, !dbg !6876
  br label %if.end817, !dbg !6876

if.end817:                                        ; preds = %if.then815, %if.end802
  %427 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6878
  %private_host_attrs818 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %427, i32 0, i32 4, !dbg !6878
  %428 = load i32, i32* %count, align 4, !dbg !6878
  %idxprom819 = sext i32 %428 to i64, !dbg !6878
  %arrayidx820 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs818, i64 0, i64 %idxprom819, !dbg !6878
  %429 = bitcast %struct.device_attribute* %arrayidx820 to i8*, !dbg !6878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %429, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_dev_loss_tmo to i8*), i64 32, i1 false), !dbg !6878
  %430 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6878
  %private_host_attrs821 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %430, i32 0, i32 4, !dbg !6878
  %431 = load i32, i32* %count, align 4, !dbg !6878
  %idxprom822 = sext i32 %431 to i64, !dbg !6878
  %arrayidx823 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs821, i64 0, i64 %idxprom822, !dbg !6878
  %432 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6878
  %host_attrs824 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %432, i32 0, i32 5, !dbg !6878
  %433 = load i32, i32* %count, align 4, !dbg !6878
  %idxprom825 = sext i32 %433 to i64, !dbg !6878
  %arrayidx826 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs824, i64 0, i64 %idxprom825, !dbg !6878
  store %struct.device_attribute* %arrayidx823, %struct.device_attribute** %arrayidx826, align 8, !dbg !6878
  %434 = load i32, i32* %count, align 4, !dbg !6878
  %inc827 = add i32 %434, 1, !dbg !6878
  store i32 %inc827, i32* %count, align 4, !dbg !6878
  %435 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6880
  %private_host_attrs828 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %435, i32 0, i32 4, !dbg !6880
  %436 = load i32, i32* %count, align 4, !dbg !6880
  %idxprom829 = sext i32 %436 to i64, !dbg !6880
  %arrayidx830 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs828, i64 0, i64 %idxprom829, !dbg !6880
  %437 = bitcast %struct.device_attribute* %arrayidx830 to i8*, !dbg !6880
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %437, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_tgtid_bind_type to i8*), i64 32, i1 false), !dbg !6880
  %438 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6880
  %private_host_attrs831 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %438, i32 0, i32 4, !dbg !6880
  %439 = load i32, i32* %count, align 4, !dbg !6880
  %idxprom832 = sext i32 %439 to i64, !dbg !6880
  %arrayidx833 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs831, i64 0, i64 %idxprom832, !dbg !6880
  %440 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6880
  %host_attrs834 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %440, i32 0, i32 5, !dbg !6880
  %441 = load i32, i32* %count, align 4, !dbg !6880
  %idxprom835 = sext i32 %441 to i64, !dbg !6880
  %arrayidx836 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs834, i64 0, i64 %idxprom835, !dbg !6880
  store %struct.device_attribute* %arrayidx833, %struct.device_attribute** %arrayidx836, align 8, !dbg !6880
  %442 = load i32, i32* %count, align 4, !dbg !6880
  %inc837 = add i32 %442, 1, !dbg !6880
  store i32 %inc837, i32* %count, align 4, !dbg !6880
  %443 = load %struct.fc_function_template*, %struct.fc_function_template** %ft.addr, align 8, !dbg !6882
  %issue_fc_host_lip = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %443, i32 0, i32 15, !dbg !6884
  %444 = load i32 (%struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*)** %issue_fc_host_lip, align 8, !dbg !6884
  %tobool838 = icmp ne i32 (%struct.Scsi_Host*)* %444, null, !dbg !6882
  br i1 %tobool838, label %if.then839, label %if.end850, !dbg !6885

if.then839:                                       ; preds = %if.end817
  %445 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6886
  %private_host_attrs840 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %445, i32 0, i32 4, !dbg !6886
  %446 = load i32, i32* %count, align 4, !dbg !6886
  %idxprom841 = sext i32 %446 to i64, !dbg !6886
  %arrayidx842 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs840, i64 0, i64 %idxprom841, !dbg !6886
  %447 = bitcast %struct.device_attribute* %arrayidx842 to i8*, !dbg !6886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %447, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_issue_lip to i8*), i64 32, i1 false), !dbg !6886
  %448 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6886
  %private_host_attrs843 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %448, i32 0, i32 4, !dbg !6886
  %449 = load i32, i32* %count, align 4, !dbg !6886
  %idxprom844 = sext i32 %449 to i64, !dbg !6886
  %arrayidx845 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs843, i64 0, i64 %idxprom844, !dbg !6886
  %450 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6886
  %host_attrs846 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %450, i32 0, i32 5, !dbg !6886
  %451 = load i32, i32* %count, align 4, !dbg !6886
  %idxprom847 = sext i32 %451 to i64, !dbg !6886
  %arrayidx848 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs846, i64 0, i64 %idxprom847, !dbg !6886
  store %struct.device_attribute* %arrayidx845, %struct.device_attribute** %arrayidx848, align 8, !dbg !6886
  %452 = load i32, i32* %count, align 4, !dbg !6886
  %inc849 = add i32 %452, 1, !dbg !6886
  store i32 %inc849, i32* %count, align 4, !dbg !6886
  br label %if.end850, !dbg !6886

if.end850:                                        ; preds = %if.then839, %if.end817
  %453 = load %struct.fc_function_template*, %struct.fc_function_template** %ft.addr, align 8, !dbg !6888
  %vport_create851 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %453, i32 0, i32 19, !dbg !6890
  %454 = load i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)** %vport_create851, align 8, !dbg !6890
  %tobool852 = icmp ne i32 (%struct.fc_vport*, i1)* %454, null, !dbg !6888
  br i1 %tobool852, label %if.then853, label %if.end864, !dbg !6891

if.then853:                                       ; preds = %if.end850
  %455 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6892
  %private_host_attrs854 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %455, i32 0, i32 4, !dbg !6892
  %456 = load i32, i32* %count, align 4, !dbg !6892
  %idxprom855 = sext i32 %456 to i64, !dbg !6892
  %arrayidx856 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs854, i64 0, i64 %idxprom855, !dbg !6892
  %457 = bitcast %struct.device_attribute* %arrayidx856 to i8*, !dbg !6892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %457, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_vport_create to i8*), i64 32, i1 false), !dbg !6892
  %458 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6892
  %private_host_attrs857 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %458, i32 0, i32 4, !dbg !6892
  %459 = load i32, i32* %count, align 4, !dbg !6892
  %idxprom858 = sext i32 %459 to i64, !dbg !6892
  %arrayidx859 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs857, i64 0, i64 %idxprom858, !dbg !6892
  %460 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6892
  %host_attrs860 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %460, i32 0, i32 5, !dbg !6892
  %461 = load i32, i32* %count, align 4, !dbg !6892
  %idxprom861 = sext i32 %461 to i64, !dbg !6892
  %arrayidx862 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs860, i64 0, i64 %idxprom861, !dbg !6892
  store %struct.device_attribute* %arrayidx859, %struct.device_attribute** %arrayidx862, align 8, !dbg !6892
  %462 = load i32, i32* %count, align 4, !dbg !6892
  %inc863 = add i32 %462, 1, !dbg !6892
  store i32 %inc863, i32* %count, align 4, !dbg !6892
  br label %if.end864, !dbg !6892

if.end864:                                        ; preds = %if.then853, %if.end850
  %463 = load %struct.fc_function_template*, %struct.fc_function_template** %ft.addr, align 8, !dbg !6894
  %vport_delete = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %463, i32 0, i32 21, !dbg !6896
  %464 = load i32 (%struct.fc_vport*)*, i32 (%struct.fc_vport*)** %vport_delete, align 8, !dbg !6896
  %tobool865 = icmp ne i32 (%struct.fc_vport*)* %464, null, !dbg !6894
  br i1 %tobool865, label %if.then866, label %if.end877, !dbg !6897

if.then866:                                       ; preds = %if.end864
  %465 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6898
  %private_host_attrs867 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %465, i32 0, i32 4, !dbg !6898
  %466 = load i32, i32* %count, align 4, !dbg !6898
  %idxprom868 = sext i32 %466 to i64, !dbg !6898
  %arrayidx869 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs867, i64 0, i64 %idxprom868, !dbg !6898
  %467 = bitcast %struct.device_attribute* %arrayidx869 to i8*, !dbg !6898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %467, i8* align 8 bitcast (%struct.device_attribute* @device_attr_host_vport_delete to i8*), i64 32, i1 false), !dbg !6898
  %468 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6898
  %private_host_attrs870 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %468, i32 0, i32 4, !dbg !6898
  %469 = load i32, i32* %count, align 4, !dbg !6898
  %idxprom871 = sext i32 %469 to i64, !dbg !6898
  %arrayidx872 = getelementptr [29 x %struct.device_attribute], [29 x %struct.device_attribute]* %private_host_attrs870, i64 0, i64 %idxprom871, !dbg !6898
  %470 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6898
  %host_attrs873 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %470, i32 0, i32 5, !dbg !6898
  %471 = load i32, i32* %count, align 4, !dbg !6898
  %idxprom874 = sext i32 %471 to i64, !dbg !6898
  %arrayidx875 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs873, i64 0, i64 %idxprom874, !dbg !6898
  store %struct.device_attribute* %arrayidx872, %struct.device_attribute** %arrayidx875, align 8, !dbg !6898
  %472 = load i32, i32* %count, align 4, !dbg !6898
  %inc876 = add i32 %472, 1, !dbg !6898
  store i32 %inc876, i32* %count, align 4, !dbg !6898
  br label %if.end877, !dbg !6898

if.end877:                                        ; preds = %if.then866, %if.end864
  br label %do.body878, !dbg !6900

do.body878:                                       ; preds = %if.end877
  %473 = load i32, i32* %count, align 4, !dbg !6901
  %cmp879 = icmp sgt i32 %473, 29, !dbg !6901
  %lnot881 = xor i1 %cmp879, true, !dbg !6901
  %lnot883 = xor i1 %lnot881, true, !dbg !6901
  %lnot.ext884 = zext i1 %lnot883 to i32, !dbg !6901
  %conv885 = sext i32 %lnot.ext884 to i64, !dbg !6901
  %tobool886 = icmp ne i64 %conv885, 0, !dbg !6901
  br i1 %tobool886, label %if.then887, label %if.end896, !dbg !6904

if.then887:                                       ; preds = %do.body878
  br label %do.body888, !dbg !6901

do.body888:                                       ; preds = %if.then887
  br label %do.body889, !dbg !6905

do.body889:                                       ; preds = %do.body888
  br label %do.end890, !dbg !6907

do.end890:                                        ; preds = %do.body889
  br label %do.body891, !dbg !6905

do.body891:                                       ; preds = %do.end890
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 2250, i32 0, i64 12) #10, !dbg !6909, !srcloc !6911
  br label %do.end892, !dbg !6909

do.end892:                                        ; preds = %do.body891
  br label %do.body893, !dbg !6905

do.body893:                                       ; preds = %do.end892
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 404) #10, !dbg !6912, !srcloc !6915
  unreachable, !dbg !6916

do.end894:                                        ; No predecessors!
  br label %do.end895, !dbg !6905

do.end895:                                        ; preds = %do.end894
  br label %if.end896, !dbg !6905

if.end896:                                        ; preds = %do.end895, %do.body878
  br label %do.end897, !dbg !6904

do.end897:                                        ; preds = %if.end896
  %474 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6917
  %host_attrs898 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %474, i32 0, i32 5, !dbg !6918
  %475 = load i32, i32* %count, align 4, !dbg !6919
  %idxprom899 = sext i32 %475 to i64, !dbg !6917
  %arrayidx900 = getelementptr [30 x %struct.device_attribute*], [30 x %struct.device_attribute*]* %host_attrs898, i64 0, i64 %idxprom899, !dbg !6917
  store %struct.device_attribute* null, %struct.device_attribute** %arrayidx900, align 8, !dbg !6920
  store i32 0, i32* %count, align 4, !dbg !6921
  %476 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6922
  %private_rport_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %476, i32 0, i32 7, !dbg !6922
  %477 = load i32, i32* %count, align 4, !dbg !6922
  %idxprom901 = sext i32 %477 to i64, !dbg !6922
  %arrayidx902 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs, i64 0, i64 %idxprom901, !dbg !6922
  %478 = bitcast %struct.device_attribute* %arrayidx902 to i8*, !dbg !6922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_maxframe_size to i8*), i64 32, i1 false), !dbg !6922
  %479 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6922
  %private_rport_attrs903 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %479, i32 0, i32 7, !dbg !6922
  %480 = load i32, i32* %count, align 4, !dbg !6922
  %idxprom904 = sext i32 %480 to i64, !dbg !6922
  %arrayidx905 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs903, i64 0, i64 %idxprom904, !dbg !6922
  %attr906 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx905, i32 0, i32 0, !dbg !6922
  %mode907 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr906, i32 0, i32 1, !dbg !6922
  store i16 292, i16* %mode907, align 8, !dbg !6922
  %481 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6922
  %private_rport_attrs908 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %481, i32 0, i32 7, !dbg !6922
  %482 = load i32, i32* %count, align 4, !dbg !6922
  %idxprom909 = sext i32 %482 to i64, !dbg !6922
  %arrayidx910 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs908, i64 0, i64 %idxprom909, !dbg !6922
  %store911 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx910, i32 0, i32 2, !dbg !6922
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store911, align 8, !dbg !6922
  %483 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6922
  %private_rport_attrs912 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %483, i32 0, i32 7, !dbg !6922
  %484 = load i32, i32* %count, align 4, !dbg !6922
  %idxprom913 = sext i32 %484 to i64, !dbg !6922
  %arrayidx914 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs912, i64 0, i64 %idxprom913, !dbg !6922
  %485 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6922
  %rport_attrs915 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %485, i32 0, i32 8, !dbg !6922
  %486 = load i32, i32* %count, align 4, !dbg !6922
  %idxprom916 = sext i32 %486 to i64, !dbg !6922
  %arrayidx917 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs915, i64 0, i64 %idxprom916, !dbg !6922
  store %struct.device_attribute* %arrayidx914, %struct.device_attribute** %arrayidx917, align 8, !dbg !6922
  %487 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6923
  %f918 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %487, i32 0, i32 1, !dbg !6923
  %488 = load %struct.fc_function_template*, %struct.fc_function_template** %f918, align 8, !dbg !6923
  %show_rport_maxframe_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %488, i32 0, i32 27, !dbg !6923
  %bf.load919 = load i32, i32* %show_rport_maxframe_size, align 4, !dbg !6923
  %bf.clear920 = and i32 %bf.load919, 1, !dbg !6923
  %bf.cast921 = zext i32 %bf.clear920 to i64, !dbg !6923
  %tobool922 = icmp ne i64 %bf.cast921, 0, !dbg !6923
  br i1 %tobool922, label %if.then923, label %if.end925, !dbg !6922

if.then923:                                       ; preds = %do.end897
  %489 = load i32, i32* %count, align 4, !dbg !6923
  %inc924 = add i32 %489, 1, !dbg !6923
  store i32 %inc924, i32* %count, align 4, !dbg !6923
  br label %if.end925, !dbg !6923

if.end925:                                        ; preds = %if.then923, %do.end897
  %490 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6925
  %private_rport_attrs926 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %490, i32 0, i32 7, !dbg !6925
  %491 = load i32, i32* %count, align 4, !dbg !6925
  %idxprom927 = sext i32 %491 to i64, !dbg !6925
  %arrayidx928 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs926, i64 0, i64 %idxprom927, !dbg !6925
  %492 = bitcast %struct.device_attribute* %arrayidx928 to i8*, !dbg !6925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %492, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_supported_classes to i8*), i64 32, i1 false), !dbg !6925
  %493 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6925
  %private_rport_attrs929 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %493, i32 0, i32 7, !dbg !6925
  %494 = load i32, i32* %count, align 4, !dbg !6925
  %idxprom930 = sext i32 %494 to i64, !dbg !6925
  %arrayidx931 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs929, i64 0, i64 %idxprom930, !dbg !6925
  %attr932 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx931, i32 0, i32 0, !dbg !6925
  %mode933 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr932, i32 0, i32 1, !dbg !6925
  store i16 292, i16* %mode933, align 8, !dbg !6925
  %495 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6925
  %private_rport_attrs934 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %495, i32 0, i32 7, !dbg !6925
  %496 = load i32, i32* %count, align 4, !dbg !6925
  %idxprom935 = sext i32 %496 to i64, !dbg !6925
  %arrayidx936 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs934, i64 0, i64 %idxprom935, !dbg !6925
  %store937 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx936, i32 0, i32 2, !dbg !6925
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store937, align 8, !dbg !6925
  %497 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6925
  %private_rport_attrs938 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %497, i32 0, i32 7, !dbg !6925
  %498 = load i32, i32* %count, align 4, !dbg !6925
  %idxprom939 = sext i32 %498 to i64, !dbg !6925
  %arrayidx940 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs938, i64 0, i64 %idxprom939, !dbg !6925
  %499 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6925
  %rport_attrs941 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %499, i32 0, i32 8, !dbg !6925
  %500 = load i32, i32* %count, align 4, !dbg !6925
  %idxprom942 = sext i32 %500 to i64, !dbg !6925
  %arrayidx943 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs941, i64 0, i64 %idxprom942, !dbg !6925
  store %struct.device_attribute* %arrayidx940, %struct.device_attribute** %arrayidx943, align 8, !dbg !6925
  %501 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6926
  %f944 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %501, i32 0, i32 1, !dbg !6926
  %502 = load %struct.fc_function_template*, %struct.fc_function_template** %f944, align 8, !dbg !6926
  %show_rport_supported_classes = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %502, i32 0, i32 27, !dbg !6926
  %bf.load945 = load i32, i32* %show_rport_supported_classes, align 4, !dbg !6926
  %bf.lshr946 = lshr i32 %bf.load945, 1, !dbg !6926
  %bf.clear947 = and i32 %bf.lshr946, 1, !dbg !6926
  %bf.cast948 = zext i32 %bf.clear947 to i64, !dbg !6926
  %tobool949 = icmp ne i64 %bf.cast948, 0, !dbg !6926
  br i1 %tobool949, label %if.then950, label %if.end952, !dbg !6925

if.then950:                                       ; preds = %if.end925
  %503 = load i32, i32* %count, align 4, !dbg !6926
  %inc951 = add i32 %503, 1, !dbg !6926
  store i32 %inc951, i32* %count, align 4, !dbg !6926
  br label %if.end952, !dbg !6926

if.end952:                                        ; preds = %if.then950, %if.end925
  %504 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6928
  %private_rport_attrs953 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %504, i32 0, i32 7, !dbg !6928
  %505 = load i32, i32* %count, align 4, !dbg !6928
  %idxprom954 = sext i32 %505 to i64, !dbg !6928
  %arrayidx955 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs953, i64 0, i64 %idxprom954, !dbg !6928
  %506 = bitcast %struct.device_attribute* %arrayidx955 to i8*, !dbg !6928
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %506, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_dev_loss_tmo to i8*), i64 32, i1 false), !dbg !6928
  %507 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6929
  %f956 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %507, i32 0, i32 1, !dbg !6929
  %508 = load %struct.fc_function_template*, %struct.fc_function_template** %f956, align 8, !dbg !6929
  %set_rport_dev_loss_tmo = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %508, i32 0, i32 1, !dbg !6929
  %509 = load void (%struct.fc_rport*, i32)*, void (%struct.fc_rport*, i32)** %set_rport_dev_loss_tmo, align 8, !dbg !6929
  %tobool957 = icmp ne void (%struct.fc_rport*, i32)* %509, null, !dbg !6929
  br i1 %tobool957, label %if.end968, label %if.then958, !dbg !6928

if.then958:                                       ; preds = %if.end952
  %510 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6931
  %private_rport_attrs959 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %510, i32 0, i32 7, !dbg !6931
  %511 = load i32, i32* %count, align 4, !dbg !6931
  %idxprom960 = sext i32 %511 to i64, !dbg !6931
  %arrayidx961 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs959, i64 0, i64 %idxprom960, !dbg !6931
  %attr962 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx961, i32 0, i32 0, !dbg !6931
  %mode963 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr962, i32 0, i32 1, !dbg !6931
  store i16 292, i16* %mode963, align 8, !dbg !6931
  %512 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6931
  %private_rport_attrs964 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %512, i32 0, i32 7, !dbg !6931
  %513 = load i32, i32* %count, align 4, !dbg !6931
  %idxprom965 = sext i32 %513 to i64, !dbg !6931
  %arrayidx966 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs964, i64 0, i64 %idxprom965, !dbg !6931
  %store967 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx966, i32 0, i32 2, !dbg !6931
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store967, align 8, !dbg !6931
  br label %if.end968, !dbg !6931

if.end968:                                        ; preds = %if.then958, %if.end952
  %514 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6928
  %private_rport_attrs969 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %514, i32 0, i32 7, !dbg !6928
  %515 = load i32, i32* %count, align 4, !dbg !6928
  %idxprom970 = sext i32 %515 to i64, !dbg !6928
  %arrayidx971 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs969, i64 0, i64 %idxprom970, !dbg !6928
  %516 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6928
  %rport_attrs972 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %516, i32 0, i32 8, !dbg !6928
  %517 = load i32, i32* %count, align 4, !dbg !6928
  %idxprom973 = sext i32 %517 to i64, !dbg !6928
  %arrayidx974 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs972, i64 0, i64 %idxprom973, !dbg !6928
  store %struct.device_attribute* %arrayidx971, %struct.device_attribute** %arrayidx974, align 8, !dbg !6928
  %518 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6933
  %f975 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %518, i32 0, i32 1, !dbg !6933
  %519 = load %struct.fc_function_template*, %struct.fc_function_template** %f975, align 8, !dbg !6933
  %show_rport_dev_loss_tmo = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %519, i32 0, i32 27, !dbg !6933
  %bf.load976 = load i32, i32* %show_rport_dev_loss_tmo, align 4, !dbg !6933
  %bf.lshr977 = lshr i32 %bf.load976, 2, !dbg !6933
  %bf.clear978 = and i32 %bf.lshr977, 1, !dbg !6933
  %bf.cast979 = zext i32 %bf.clear978 to i64, !dbg !6933
  %tobool980 = icmp ne i64 %bf.cast979, 0, !dbg !6933
  br i1 %tobool980, label %if.then981, label %if.end983, !dbg !6928

if.then981:                                       ; preds = %if.end968
  %520 = load i32, i32* %count, align 4, !dbg !6933
  %inc982 = add i32 %520, 1, !dbg !6933
  store i32 %inc982, i32* %count, align 4, !dbg !6933
  br label %if.end983, !dbg !6933

if.end983:                                        ; preds = %if.then981, %if.end968
  %521 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6935
  %private_rport_attrs984 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %521, i32 0, i32 7, !dbg !6935
  %522 = load i32, i32* %count, align 4, !dbg !6935
  %idxprom985 = sext i32 %522 to i64, !dbg !6935
  %arrayidx986 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs984, i64 0, i64 %idxprom985, !dbg !6935
  %523 = bitcast %struct.device_attribute* %arrayidx986 to i8*, !dbg !6935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %523, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_node_name to i8*), i64 32, i1 false), !dbg !6935
  %524 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6935
  %private_rport_attrs987 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %524, i32 0, i32 7, !dbg !6935
  %525 = load i32, i32* %count, align 4, !dbg !6935
  %idxprom988 = sext i32 %525 to i64, !dbg !6935
  %arrayidx989 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs987, i64 0, i64 %idxprom988, !dbg !6935
  %attr990 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx989, i32 0, i32 0, !dbg !6935
  %mode991 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr990, i32 0, i32 1, !dbg !6935
  store i16 292, i16* %mode991, align 8, !dbg !6935
  %526 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6935
  %private_rport_attrs992 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %526, i32 0, i32 7, !dbg !6935
  %527 = load i32, i32* %count, align 4, !dbg !6935
  %idxprom993 = sext i32 %527 to i64, !dbg !6935
  %arrayidx994 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs992, i64 0, i64 %idxprom993, !dbg !6935
  %store995 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx994, i32 0, i32 2, !dbg !6935
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store995, align 8, !dbg !6935
  %528 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6935
  %private_rport_attrs996 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %528, i32 0, i32 7, !dbg !6935
  %529 = load i32, i32* %count, align 4, !dbg !6935
  %idxprom997 = sext i32 %529 to i64, !dbg !6935
  %arrayidx998 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs996, i64 0, i64 %idxprom997, !dbg !6935
  %530 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6935
  %rport_attrs999 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %530, i32 0, i32 8, !dbg !6935
  %531 = load i32, i32* %count, align 4, !dbg !6935
  %idxprom1000 = sext i32 %531 to i64, !dbg !6935
  %arrayidx1001 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs999, i64 0, i64 %idxprom1000, !dbg !6935
  store %struct.device_attribute* %arrayidx998, %struct.device_attribute** %arrayidx1001, align 8, !dbg !6935
  %532 = load i32, i32* %count, align 4, !dbg !6935
  %inc1002 = add i32 %532, 1, !dbg !6935
  store i32 %inc1002, i32* %count, align 4, !dbg !6935
  %533 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6936
  %private_rport_attrs1003 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %533, i32 0, i32 7, !dbg !6936
  %534 = load i32, i32* %count, align 4, !dbg !6936
  %idxprom1004 = sext i32 %534 to i64, !dbg !6936
  %arrayidx1005 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1003, i64 0, i64 %idxprom1004, !dbg !6936
  %535 = bitcast %struct.device_attribute* %arrayidx1005 to i8*, !dbg !6936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %535, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_port_name to i8*), i64 32, i1 false), !dbg !6936
  %536 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6936
  %private_rport_attrs1006 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %536, i32 0, i32 7, !dbg !6936
  %537 = load i32, i32* %count, align 4, !dbg !6936
  %idxprom1007 = sext i32 %537 to i64, !dbg !6936
  %arrayidx1008 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1006, i64 0, i64 %idxprom1007, !dbg !6936
  %attr1009 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1008, i32 0, i32 0, !dbg !6936
  %mode1010 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1009, i32 0, i32 1, !dbg !6936
  store i16 292, i16* %mode1010, align 8, !dbg !6936
  %538 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6936
  %private_rport_attrs1011 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %538, i32 0, i32 7, !dbg !6936
  %539 = load i32, i32* %count, align 4, !dbg !6936
  %idxprom1012 = sext i32 %539 to i64, !dbg !6936
  %arrayidx1013 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1011, i64 0, i64 %idxprom1012, !dbg !6936
  %store1014 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1013, i32 0, i32 2, !dbg !6936
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1014, align 8, !dbg !6936
  %540 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6936
  %private_rport_attrs1015 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %540, i32 0, i32 7, !dbg !6936
  %541 = load i32, i32* %count, align 4, !dbg !6936
  %idxprom1016 = sext i32 %541 to i64, !dbg !6936
  %arrayidx1017 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1015, i64 0, i64 %idxprom1016, !dbg !6936
  %542 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6936
  %rport_attrs1018 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %542, i32 0, i32 8, !dbg !6936
  %543 = load i32, i32* %count, align 4, !dbg !6936
  %idxprom1019 = sext i32 %543 to i64, !dbg !6936
  %arrayidx1020 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1018, i64 0, i64 %idxprom1019, !dbg !6936
  store %struct.device_attribute* %arrayidx1017, %struct.device_attribute** %arrayidx1020, align 8, !dbg !6936
  %544 = load i32, i32* %count, align 4, !dbg !6936
  %inc1021 = add i32 %544, 1, !dbg !6936
  store i32 %inc1021, i32* %count, align 4, !dbg !6936
  %545 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6937
  %private_rport_attrs1022 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %545, i32 0, i32 7, !dbg !6937
  %546 = load i32, i32* %count, align 4, !dbg !6937
  %idxprom1023 = sext i32 %546 to i64, !dbg !6937
  %arrayidx1024 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1022, i64 0, i64 %idxprom1023, !dbg !6937
  %547 = bitcast %struct.device_attribute* %arrayidx1024 to i8*, !dbg !6937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %547, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_port_id to i8*), i64 32, i1 false), !dbg !6937
  %548 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6937
  %private_rport_attrs1025 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %548, i32 0, i32 7, !dbg !6937
  %549 = load i32, i32* %count, align 4, !dbg !6937
  %idxprom1026 = sext i32 %549 to i64, !dbg !6937
  %arrayidx1027 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1025, i64 0, i64 %idxprom1026, !dbg !6937
  %attr1028 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1027, i32 0, i32 0, !dbg !6937
  %mode1029 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1028, i32 0, i32 1, !dbg !6937
  store i16 292, i16* %mode1029, align 8, !dbg !6937
  %550 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6937
  %private_rport_attrs1030 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %550, i32 0, i32 7, !dbg !6937
  %551 = load i32, i32* %count, align 4, !dbg !6937
  %idxprom1031 = sext i32 %551 to i64, !dbg !6937
  %arrayidx1032 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1030, i64 0, i64 %idxprom1031, !dbg !6937
  %store1033 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1032, i32 0, i32 2, !dbg !6937
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1033, align 8, !dbg !6937
  %552 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6937
  %private_rport_attrs1034 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %552, i32 0, i32 7, !dbg !6937
  %553 = load i32, i32* %count, align 4, !dbg !6937
  %idxprom1035 = sext i32 %553 to i64, !dbg !6937
  %arrayidx1036 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1034, i64 0, i64 %idxprom1035, !dbg !6937
  %554 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6937
  %rport_attrs1037 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %554, i32 0, i32 8, !dbg !6937
  %555 = load i32, i32* %count, align 4, !dbg !6937
  %idxprom1038 = sext i32 %555 to i64, !dbg !6937
  %arrayidx1039 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1037, i64 0, i64 %idxprom1038, !dbg !6937
  store %struct.device_attribute* %arrayidx1036, %struct.device_attribute** %arrayidx1039, align 8, !dbg !6937
  %556 = load i32, i32* %count, align 4, !dbg !6937
  %inc1040 = add i32 %556, 1, !dbg !6937
  store i32 %inc1040, i32* %count, align 4, !dbg !6937
  %557 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6938
  %private_rport_attrs1041 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %557, i32 0, i32 7, !dbg !6938
  %558 = load i32, i32* %count, align 4, !dbg !6938
  %idxprom1042 = sext i32 %558 to i64, !dbg !6938
  %arrayidx1043 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1041, i64 0, i64 %idxprom1042, !dbg !6938
  %559 = bitcast %struct.device_attribute* %arrayidx1043 to i8*, !dbg !6938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %559, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_roles to i8*), i64 32, i1 false), !dbg !6938
  %560 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6938
  %private_rport_attrs1044 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %560, i32 0, i32 7, !dbg !6938
  %561 = load i32, i32* %count, align 4, !dbg !6938
  %idxprom1045 = sext i32 %561 to i64, !dbg !6938
  %arrayidx1046 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1044, i64 0, i64 %idxprom1045, !dbg !6938
  %attr1047 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1046, i32 0, i32 0, !dbg !6938
  %mode1048 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1047, i32 0, i32 1, !dbg !6938
  store i16 292, i16* %mode1048, align 8, !dbg !6938
  %562 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6938
  %private_rport_attrs1049 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %562, i32 0, i32 7, !dbg !6938
  %563 = load i32, i32* %count, align 4, !dbg !6938
  %idxprom1050 = sext i32 %563 to i64, !dbg !6938
  %arrayidx1051 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1049, i64 0, i64 %idxprom1050, !dbg !6938
  %store1052 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1051, i32 0, i32 2, !dbg !6938
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1052, align 8, !dbg !6938
  %564 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6938
  %private_rport_attrs1053 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %564, i32 0, i32 7, !dbg !6938
  %565 = load i32, i32* %count, align 4, !dbg !6938
  %idxprom1054 = sext i32 %565 to i64, !dbg !6938
  %arrayidx1055 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1053, i64 0, i64 %idxprom1054, !dbg !6938
  %566 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6938
  %rport_attrs1056 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %566, i32 0, i32 8, !dbg !6938
  %567 = load i32, i32* %count, align 4, !dbg !6938
  %idxprom1057 = sext i32 %567 to i64, !dbg !6938
  %arrayidx1058 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1056, i64 0, i64 %idxprom1057, !dbg !6938
  store %struct.device_attribute* %arrayidx1055, %struct.device_attribute** %arrayidx1058, align 8, !dbg !6938
  %568 = load i32, i32* %count, align 4, !dbg !6938
  %inc1059 = add i32 %568, 1, !dbg !6938
  store i32 %inc1059, i32* %count, align 4, !dbg !6938
  %569 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6939
  %private_rport_attrs1060 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %569, i32 0, i32 7, !dbg !6939
  %570 = load i32, i32* %count, align 4, !dbg !6939
  %idxprom1061 = sext i32 %570 to i64, !dbg !6939
  %arrayidx1062 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1060, i64 0, i64 %idxprom1061, !dbg !6939
  %571 = bitcast %struct.device_attribute* %arrayidx1062 to i8*, !dbg !6939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %571, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_port_state to i8*), i64 32, i1 false), !dbg !6939
  %572 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6939
  %private_rport_attrs1063 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %572, i32 0, i32 7, !dbg !6939
  %573 = load i32, i32* %count, align 4, !dbg !6939
  %idxprom1064 = sext i32 %573 to i64, !dbg !6939
  %arrayidx1065 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1063, i64 0, i64 %idxprom1064, !dbg !6939
  %attr1066 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1065, i32 0, i32 0, !dbg !6939
  %mode1067 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1066, i32 0, i32 1, !dbg !6939
  store i16 292, i16* %mode1067, align 8, !dbg !6939
  %574 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6939
  %private_rport_attrs1068 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %574, i32 0, i32 7, !dbg !6939
  %575 = load i32, i32* %count, align 4, !dbg !6939
  %idxprom1069 = sext i32 %575 to i64, !dbg !6939
  %arrayidx1070 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1068, i64 0, i64 %idxprom1069, !dbg !6939
  %store1071 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1070, i32 0, i32 2, !dbg !6939
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1071, align 8, !dbg !6939
  %576 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6939
  %private_rport_attrs1072 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %576, i32 0, i32 7, !dbg !6939
  %577 = load i32, i32* %count, align 4, !dbg !6939
  %idxprom1073 = sext i32 %577 to i64, !dbg !6939
  %arrayidx1074 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1072, i64 0, i64 %idxprom1073, !dbg !6939
  %578 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6939
  %rport_attrs1075 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %578, i32 0, i32 8, !dbg !6939
  %579 = load i32, i32* %count, align 4, !dbg !6939
  %idxprom1076 = sext i32 %579 to i64, !dbg !6939
  %arrayidx1077 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1075, i64 0, i64 %idxprom1076, !dbg !6939
  store %struct.device_attribute* %arrayidx1074, %struct.device_attribute** %arrayidx1077, align 8, !dbg !6939
  %580 = load i32, i32* %count, align 4, !dbg !6939
  %inc1078 = add i32 %580, 1, !dbg !6939
  store i32 %inc1078, i32* %count, align 4, !dbg !6939
  %581 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6940
  %private_rport_attrs1079 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %581, i32 0, i32 7, !dbg !6940
  %582 = load i32, i32* %count, align 4, !dbg !6940
  %idxprom1080 = sext i32 %582 to i64, !dbg !6940
  %arrayidx1081 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1079, i64 0, i64 %idxprom1080, !dbg !6940
  %583 = bitcast %struct.device_attribute* %arrayidx1081 to i8*, !dbg !6940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %583, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_scsi_target_id to i8*), i64 32, i1 false), !dbg !6940
  %584 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6940
  %private_rport_attrs1082 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %584, i32 0, i32 7, !dbg !6940
  %585 = load i32, i32* %count, align 4, !dbg !6940
  %idxprom1083 = sext i32 %585 to i64, !dbg !6940
  %arrayidx1084 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1082, i64 0, i64 %idxprom1083, !dbg !6940
  %attr1085 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1084, i32 0, i32 0, !dbg !6940
  %mode1086 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1085, i32 0, i32 1, !dbg !6940
  store i16 292, i16* %mode1086, align 8, !dbg !6940
  %586 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6940
  %private_rport_attrs1087 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %586, i32 0, i32 7, !dbg !6940
  %587 = load i32, i32* %count, align 4, !dbg !6940
  %idxprom1088 = sext i32 %587 to i64, !dbg !6940
  %arrayidx1089 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1087, i64 0, i64 %idxprom1088, !dbg !6940
  %store1090 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1089, i32 0, i32 2, !dbg !6940
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1090, align 8, !dbg !6940
  %588 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6940
  %private_rport_attrs1091 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %588, i32 0, i32 7, !dbg !6940
  %589 = load i32, i32* %count, align 4, !dbg !6940
  %idxprom1092 = sext i32 %589 to i64, !dbg !6940
  %arrayidx1093 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1091, i64 0, i64 %idxprom1092, !dbg !6940
  %590 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6940
  %rport_attrs1094 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %590, i32 0, i32 8, !dbg !6940
  %591 = load i32, i32* %count, align 4, !dbg !6940
  %idxprom1095 = sext i32 %591 to i64, !dbg !6940
  %arrayidx1096 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1094, i64 0, i64 %idxprom1095, !dbg !6940
  store %struct.device_attribute* %arrayidx1093, %struct.device_attribute** %arrayidx1096, align 8, !dbg !6940
  %592 = load i32, i32* %count, align 4, !dbg !6940
  %inc1097 = add i32 %592, 1, !dbg !6940
  store i32 %inc1097, i32* %count, align 4, !dbg !6940
  %593 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6941
  %private_rport_attrs1098 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %593, i32 0, i32 7, !dbg !6941
  %594 = load i32, i32* %count, align 4, !dbg !6941
  %idxprom1099 = sext i32 %594 to i64, !dbg !6941
  %arrayidx1100 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1098, i64 0, i64 %idxprom1099, !dbg !6941
  %595 = bitcast %struct.device_attribute* %arrayidx1100 to i8*, !dbg !6941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %595, i8* align 8 bitcast (%struct.device_attribute* @device_attr_rport_fast_io_fail_tmo to i8*), i64 32, i1 false), !dbg !6941
  %596 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6941
  %private_rport_attrs1101 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %596, i32 0, i32 7, !dbg !6941
  %597 = load i32, i32* %count, align 4, !dbg !6941
  %idxprom1102 = sext i32 %597 to i64, !dbg !6941
  %arrayidx1103 = getelementptr [10 x %struct.device_attribute], [10 x %struct.device_attribute]* %private_rport_attrs1101, i64 0, i64 %idxprom1102, !dbg !6941
  %598 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6941
  %rport_attrs1104 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %598, i32 0, i32 8, !dbg !6941
  %599 = load i32, i32* %count, align 4, !dbg !6941
  %idxprom1105 = sext i32 %599 to i64, !dbg !6941
  %arrayidx1106 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1104, i64 0, i64 %idxprom1105, !dbg !6941
  store %struct.device_attribute* %arrayidx1103, %struct.device_attribute** %arrayidx1106, align 8, !dbg !6941
  %600 = load i32, i32* %count, align 4, !dbg !6941
  %inc1107 = add i32 %600, 1, !dbg !6941
  store i32 %inc1107, i32* %count, align 4, !dbg !6941
  br label %do.body1108, !dbg !6943

do.body1108:                                      ; preds = %if.end983
  %601 = load i32, i32* %count, align 4, !dbg !6944
  %cmp1109 = icmp sgt i32 %601, 10, !dbg !6944
  %lnot1111 = xor i1 %cmp1109, true, !dbg !6944
  %lnot1113 = xor i1 %lnot1111, true, !dbg !6944
  %lnot.ext1114 = zext i1 %lnot1113 to i32, !dbg !6944
  %conv1115 = sext i32 %lnot.ext1114 to i64, !dbg !6944
  %tobool1116 = icmp ne i64 %conv1115, 0, !dbg !6944
  br i1 %tobool1116, label %if.then1117, label %if.end1126, !dbg !6947

if.then1117:                                      ; preds = %do.body1108
  br label %do.body1118, !dbg !6944

do.body1118:                                      ; preds = %if.then1117
  br label %do.body1119, !dbg !6948

do.body1119:                                      ; preds = %do.body1118
  br label %do.end1120, !dbg !6950

do.end1120:                                       ; preds = %do.body1119
  br label %do.body1121, !dbg !6948

do.body1121:                                      ; preds = %do.end1120
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 2269, i32 0, i64 12) #10, !dbg !6952, !srcloc !6954
  br label %do.end1122, !dbg !6952

do.end1122:                                       ; preds = %do.body1121
  br label %do.body1123, !dbg !6948

do.body1123:                                      ; preds = %do.end1122
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 405) #10, !dbg !6955, !srcloc !6958
  unreachable, !dbg !6959

do.end1124:                                       ; No predecessors!
  br label %do.end1125, !dbg !6948

do.end1125:                                       ; preds = %do.end1124
  br label %if.end1126, !dbg !6948

if.end1126:                                       ; preds = %do.end1125, %do.body1108
  br label %do.end1127, !dbg !6947

do.end1127:                                       ; preds = %if.end1126
  %602 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6960
  %rport_attrs1128 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %602, i32 0, i32 8, !dbg !6961
  %603 = load i32, i32* %count, align 4, !dbg !6962
  %idxprom1129 = sext i32 %603 to i64, !dbg !6960
  %arrayidx1130 = getelementptr [11 x %struct.device_attribute*], [11 x %struct.device_attribute*]* %rport_attrs1128, i64 0, i64 %idxprom1129, !dbg !6960
  store %struct.device_attribute* null, %struct.device_attribute** %arrayidx1130, align 8, !dbg !6963
  store i32 0, i32* %count, align 4, !dbg !6964
  %604 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6965
  %private_vport_attrs = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %604, i32 0, i32 10, !dbg !6965
  %605 = load i32, i32* %count, align 4, !dbg !6965
  %idxprom1131 = sext i32 %605 to i64, !dbg !6965
  %arrayidx1132 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs, i64 0, i64 %idxprom1131, !dbg !6965
  %606 = bitcast %struct.device_attribute* %arrayidx1132 to i8*, !dbg !6965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %606, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_vport_state to i8*), i64 32, i1 false), !dbg !6965
  %607 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6965
  %private_vport_attrs1133 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %607, i32 0, i32 10, !dbg !6965
  %608 = load i32, i32* %count, align 4, !dbg !6965
  %idxprom1134 = sext i32 %608 to i64, !dbg !6965
  %arrayidx1135 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1133, i64 0, i64 %idxprom1134, !dbg !6965
  %attr1136 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1135, i32 0, i32 0, !dbg !6965
  %mode1137 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1136, i32 0, i32 1, !dbg !6965
  store i16 292, i16* %mode1137, align 8, !dbg !6965
  %609 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6965
  %private_vport_attrs1138 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %609, i32 0, i32 10, !dbg !6965
  %610 = load i32, i32* %count, align 4, !dbg !6965
  %idxprom1139 = sext i32 %610 to i64, !dbg !6965
  %arrayidx1140 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1138, i64 0, i64 %idxprom1139, !dbg !6965
  %store1141 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1140, i32 0, i32 2, !dbg !6965
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1141, align 8, !dbg !6965
  %611 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6965
  %private_vport_attrs1142 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %611, i32 0, i32 10, !dbg !6965
  %612 = load i32, i32* %count, align 4, !dbg !6965
  %idxprom1143 = sext i32 %612 to i64, !dbg !6965
  %arrayidx1144 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1142, i64 0, i64 %idxprom1143, !dbg !6965
  %613 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6965
  %vport_attrs1145 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %613, i32 0, i32 11, !dbg !6965
  %614 = load i32, i32* %count, align 4, !dbg !6965
  %idxprom1146 = sext i32 %614 to i64, !dbg !6965
  %arrayidx1147 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1145, i64 0, i64 %idxprom1146, !dbg !6965
  store %struct.device_attribute* %arrayidx1144, %struct.device_attribute** %arrayidx1147, align 8, !dbg !6965
  %615 = load i32, i32* %count, align 4, !dbg !6965
  %inc1148 = add i32 %615, 1, !dbg !6965
  store i32 %inc1148, i32* %count, align 4, !dbg !6965
  %616 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6966
  %private_vport_attrs1149 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %616, i32 0, i32 10, !dbg !6966
  %617 = load i32, i32* %count, align 4, !dbg !6966
  %idxprom1150 = sext i32 %617 to i64, !dbg !6966
  %arrayidx1151 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1149, i64 0, i64 %idxprom1150, !dbg !6966
  %618 = bitcast %struct.device_attribute* %arrayidx1151 to i8*, !dbg !6966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %618, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_vport_last_state to i8*), i64 32, i1 false), !dbg !6966
  %619 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6966
  %private_vport_attrs1152 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %619, i32 0, i32 10, !dbg !6966
  %620 = load i32, i32* %count, align 4, !dbg !6966
  %idxprom1153 = sext i32 %620 to i64, !dbg !6966
  %arrayidx1154 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1152, i64 0, i64 %idxprom1153, !dbg !6966
  %attr1155 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1154, i32 0, i32 0, !dbg !6966
  %mode1156 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1155, i32 0, i32 1, !dbg !6966
  store i16 292, i16* %mode1156, align 8, !dbg !6966
  %621 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6966
  %private_vport_attrs1157 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %621, i32 0, i32 10, !dbg !6966
  %622 = load i32, i32* %count, align 4, !dbg !6966
  %idxprom1158 = sext i32 %622 to i64, !dbg !6966
  %arrayidx1159 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1157, i64 0, i64 %idxprom1158, !dbg !6966
  %store1160 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1159, i32 0, i32 2, !dbg !6966
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1160, align 8, !dbg !6966
  %623 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6966
  %private_vport_attrs1161 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %623, i32 0, i32 10, !dbg !6966
  %624 = load i32, i32* %count, align 4, !dbg !6966
  %idxprom1162 = sext i32 %624 to i64, !dbg !6966
  %arrayidx1163 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1161, i64 0, i64 %idxprom1162, !dbg !6966
  %625 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6966
  %vport_attrs1164 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %625, i32 0, i32 11, !dbg !6966
  %626 = load i32, i32* %count, align 4, !dbg !6966
  %idxprom1165 = sext i32 %626 to i64, !dbg !6966
  %arrayidx1166 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1164, i64 0, i64 %idxprom1165, !dbg !6966
  store %struct.device_attribute* %arrayidx1163, %struct.device_attribute** %arrayidx1166, align 8, !dbg !6966
  %627 = load i32, i32* %count, align 4, !dbg !6966
  %inc1167 = add i32 %627, 1, !dbg !6966
  store i32 %inc1167, i32* %count, align 4, !dbg !6966
  %628 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6967
  %private_vport_attrs1168 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %628, i32 0, i32 10, !dbg !6967
  %629 = load i32, i32* %count, align 4, !dbg !6967
  %idxprom1169 = sext i32 %629 to i64, !dbg !6967
  %arrayidx1170 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1168, i64 0, i64 %idxprom1169, !dbg !6967
  %630 = bitcast %struct.device_attribute* %arrayidx1170 to i8*, !dbg !6967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %630, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_node_name to i8*), i64 32, i1 false), !dbg !6967
  %631 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6967
  %private_vport_attrs1171 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %631, i32 0, i32 10, !dbg !6967
  %632 = load i32, i32* %count, align 4, !dbg !6967
  %idxprom1172 = sext i32 %632 to i64, !dbg !6967
  %arrayidx1173 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1171, i64 0, i64 %idxprom1172, !dbg !6967
  %attr1174 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1173, i32 0, i32 0, !dbg !6967
  %mode1175 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1174, i32 0, i32 1, !dbg !6967
  store i16 292, i16* %mode1175, align 8, !dbg !6967
  %633 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6967
  %private_vport_attrs1176 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %633, i32 0, i32 10, !dbg !6967
  %634 = load i32, i32* %count, align 4, !dbg !6967
  %idxprom1177 = sext i32 %634 to i64, !dbg !6967
  %arrayidx1178 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1176, i64 0, i64 %idxprom1177, !dbg !6967
  %store1179 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1178, i32 0, i32 2, !dbg !6967
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1179, align 8, !dbg !6967
  %635 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6967
  %private_vport_attrs1180 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %635, i32 0, i32 10, !dbg !6967
  %636 = load i32, i32* %count, align 4, !dbg !6967
  %idxprom1181 = sext i32 %636 to i64, !dbg !6967
  %arrayidx1182 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1180, i64 0, i64 %idxprom1181, !dbg !6967
  %637 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6967
  %vport_attrs1183 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %637, i32 0, i32 11, !dbg !6967
  %638 = load i32, i32* %count, align 4, !dbg !6967
  %idxprom1184 = sext i32 %638 to i64, !dbg !6967
  %arrayidx1185 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1183, i64 0, i64 %idxprom1184, !dbg !6967
  store %struct.device_attribute* %arrayidx1182, %struct.device_attribute** %arrayidx1185, align 8, !dbg !6967
  %639 = load i32, i32* %count, align 4, !dbg !6967
  %inc1186 = add i32 %639, 1, !dbg !6967
  store i32 %inc1186, i32* %count, align 4, !dbg !6967
  %640 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6968
  %private_vport_attrs1187 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %640, i32 0, i32 10, !dbg !6968
  %641 = load i32, i32* %count, align 4, !dbg !6968
  %idxprom1188 = sext i32 %641 to i64, !dbg !6968
  %arrayidx1189 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1187, i64 0, i64 %idxprom1188, !dbg !6968
  %642 = bitcast %struct.device_attribute* %arrayidx1189 to i8*, !dbg !6968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %642, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_port_name to i8*), i64 32, i1 false), !dbg !6968
  %643 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6968
  %private_vport_attrs1190 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %643, i32 0, i32 10, !dbg !6968
  %644 = load i32, i32* %count, align 4, !dbg !6968
  %idxprom1191 = sext i32 %644 to i64, !dbg !6968
  %arrayidx1192 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1190, i64 0, i64 %idxprom1191, !dbg !6968
  %attr1193 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1192, i32 0, i32 0, !dbg !6968
  %mode1194 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1193, i32 0, i32 1, !dbg !6968
  store i16 292, i16* %mode1194, align 8, !dbg !6968
  %645 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6968
  %private_vport_attrs1195 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %645, i32 0, i32 10, !dbg !6968
  %646 = load i32, i32* %count, align 4, !dbg !6968
  %idxprom1196 = sext i32 %646 to i64, !dbg !6968
  %arrayidx1197 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1195, i64 0, i64 %idxprom1196, !dbg !6968
  %store1198 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1197, i32 0, i32 2, !dbg !6968
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1198, align 8, !dbg !6968
  %647 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6968
  %private_vport_attrs1199 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %647, i32 0, i32 10, !dbg !6968
  %648 = load i32, i32* %count, align 4, !dbg !6968
  %idxprom1200 = sext i32 %648 to i64, !dbg !6968
  %arrayidx1201 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1199, i64 0, i64 %idxprom1200, !dbg !6968
  %649 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6968
  %vport_attrs1202 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %649, i32 0, i32 11, !dbg !6968
  %650 = load i32, i32* %count, align 4, !dbg !6968
  %idxprom1203 = sext i32 %650 to i64, !dbg !6968
  %arrayidx1204 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1202, i64 0, i64 %idxprom1203, !dbg !6968
  store %struct.device_attribute* %arrayidx1201, %struct.device_attribute** %arrayidx1204, align 8, !dbg !6968
  %651 = load i32, i32* %count, align 4, !dbg !6968
  %inc1205 = add i32 %651, 1, !dbg !6968
  store i32 %inc1205, i32* %count, align 4, !dbg !6968
  %652 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6969
  %private_vport_attrs1206 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %652, i32 0, i32 10, !dbg !6969
  %653 = load i32, i32* %count, align 4, !dbg !6969
  %idxprom1207 = sext i32 %653 to i64, !dbg !6969
  %arrayidx1208 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1206, i64 0, i64 %idxprom1207, !dbg !6969
  %654 = bitcast %struct.device_attribute* %arrayidx1208 to i8*, !dbg !6969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %654, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_roles to i8*), i64 32, i1 false), !dbg !6969
  %655 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6969
  %private_vport_attrs1209 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %655, i32 0, i32 10, !dbg !6969
  %656 = load i32, i32* %count, align 4, !dbg !6969
  %idxprom1210 = sext i32 %656 to i64, !dbg !6969
  %arrayidx1211 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1209, i64 0, i64 %idxprom1210, !dbg !6969
  %attr1212 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1211, i32 0, i32 0, !dbg !6969
  %mode1213 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1212, i32 0, i32 1, !dbg !6969
  store i16 292, i16* %mode1213, align 8, !dbg !6969
  %657 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6969
  %private_vport_attrs1214 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %657, i32 0, i32 10, !dbg !6969
  %658 = load i32, i32* %count, align 4, !dbg !6969
  %idxprom1215 = sext i32 %658 to i64, !dbg !6969
  %arrayidx1216 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1214, i64 0, i64 %idxprom1215, !dbg !6969
  %store1217 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1216, i32 0, i32 2, !dbg !6969
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1217, align 8, !dbg !6969
  %659 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6969
  %private_vport_attrs1218 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %659, i32 0, i32 10, !dbg !6969
  %660 = load i32, i32* %count, align 4, !dbg !6969
  %idxprom1219 = sext i32 %660 to i64, !dbg !6969
  %arrayidx1220 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1218, i64 0, i64 %idxprom1219, !dbg !6969
  %661 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6969
  %vport_attrs1221 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %661, i32 0, i32 11, !dbg !6969
  %662 = load i32, i32* %count, align 4, !dbg !6969
  %idxprom1222 = sext i32 %662 to i64, !dbg !6969
  %arrayidx1223 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1221, i64 0, i64 %idxprom1222, !dbg !6969
  store %struct.device_attribute* %arrayidx1220, %struct.device_attribute** %arrayidx1223, align 8, !dbg !6969
  %663 = load i32, i32* %count, align 4, !dbg !6969
  %inc1224 = add i32 %663, 1, !dbg !6969
  store i32 %inc1224, i32* %count, align 4, !dbg !6969
  %664 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6970
  %private_vport_attrs1225 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %664, i32 0, i32 10, !dbg !6970
  %665 = load i32, i32* %count, align 4, !dbg !6970
  %idxprom1226 = sext i32 %665 to i64, !dbg !6970
  %arrayidx1227 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1225, i64 0, i64 %idxprom1226, !dbg !6970
  %666 = bitcast %struct.device_attribute* %arrayidx1227 to i8*, !dbg !6970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %666, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_vport_type to i8*), i64 32, i1 false), !dbg !6970
  %667 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6970
  %private_vport_attrs1228 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %667, i32 0, i32 10, !dbg !6970
  %668 = load i32, i32* %count, align 4, !dbg !6970
  %idxprom1229 = sext i32 %668 to i64, !dbg !6970
  %arrayidx1230 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1228, i64 0, i64 %idxprom1229, !dbg !6970
  %attr1231 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1230, i32 0, i32 0, !dbg !6970
  %mode1232 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1231, i32 0, i32 1, !dbg !6970
  store i16 292, i16* %mode1232, align 8, !dbg !6970
  %669 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6970
  %private_vport_attrs1233 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %669, i32 0, i32 10, !dbg !6970
  %670 = load i32, i32* %count, align 4, !dbg !6970
  %idxprom1234 = sext i32 %670 to i64, !dbg !6970
  %arrayidx1235 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1233, i64 0, i64 %idxprom1234, !dbg !6970
  %store1236 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1235, i32 0, i32 2, !dbg !6970
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1236, align 8, !dbg !6970
  %671 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6970
  %private_vport_attrs1237 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %671, i32 0, i32 10, !dbg !6970
  %672 = load i32, i32* %count, align 4, !dbg !6970
  %idxprom1238 = sext i32 %672 to i64, !dbg !6970
  %arrayidx1239 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1237, i64 0, i64 %idxprom1238, !dbg !6970
  %673 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6970
  %vport_attrs1240 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %673, i32 0, i32 11, !dbg !6970
  %674 = load i32, i32* %count, align 4, !dbg !6970
  %idxprom1241 = sext i32 %674 to i64, !dbg !6970
  %arrayidx1242 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1240, i64 0, i64 %idxprom1241, !dbg !6970
  store %struct.device_attribute* %arrayidx1239, %struct.device_attribute** %arrayidx1242, align 8, !dbg !6970
  %675 = load i32, i32* %count, align 4, !dbg !6970
  %inc1243 = add i32 %675, 1, !dbg !6970
  store i32 %inc1243, i32* %count, align 4, !dbg !6970
  %676 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6971
  %private_vport_attrs1244 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %676, i32 0, i32 10, !dbg !6971
  %677 = load i32, i32* %count, align 4, !dbg !6971
  %idxprom1245 = sext i32 %677 to i64, !dbg !6971
  %arrayidx1246 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1244, i64 0, i64 %idxprom1245, !dbg !6971
  %678 = bitcast %struct.device_attribute* %arrayidx1246 to i8*, !dbg !6971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %678, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_symbolic_name to i8*), i64 32, i1 false), !dbg !6971
  %679 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6972
  %f1247 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %679, i32 0, i32 1, !dbg !6972
  %680 = load %struct.fc_function_template*, %struct.fc_function_template** %f1247, align 8, !dbg !6972
  %set_vport_symbolic_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %680, i32 0, i32 18, !dbg !6972
  %681 = load void (%struct.fc_vport*)*, void (%struct.fc_vport*)** %set_vport_symbolic_name, align 8, !dbg !6972
  %tobool1248 = icmp ne void (%struct.fc_vport*)* %681, null, !dbg !6972
  br i1 %tobool1248, label %if.end1259, label %if.then1249, !dbg !6971

if.then1249:                                      ; preds = %do.end1127
  %682 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6974
  %private_vport_attrs1250 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %682, i32 0, i32 10, !dbg !6974
  %683 = load i32, i32* %count, align 4, !dbg !6974
  %idxprom1251 = sext i32 %683 to i64, !dbg !6974
  %arrayidx1252 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1250, i64 0, i64 %idxprom1251, !dbg !6974
  %attr1253 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1252, i32 0, i32 0, !dbg !6974
  %mode1254 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1253, i32 0, i32 1, !dbg !6974
  store i16 292, i16* %mode1254, align 8, !dbg !6974
  %684 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6974
  %private_vport_attrs1255 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %684, i32 0, i32 10, !dbg !6974
  %685 = load i32, i32* %count, align 4, !dbg !6974
  %idxprom1256 = sext i32 %685 to i64, !dbg !6974
  %arrayidx1257 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1255, i64 0, i64 %idxprom1256, !dbg !6974
  %store1258 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx1257, i32 0, i32 2, !dbg !6974
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1258, align 8, !dbg !6974
  br label %if.end1259, !dbg !6974

if.end1259:                                       ; preds = %if.then1249, %do.end1127
  %686 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6971
  %private_vport_attrs1260 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %686, i32 0, i32 10, !dbg !6971
  %687 = load i32, i32* %count, align 4, !dbg !6971
  %idxprom1261 = sext i32 %687 to i64, !dbg !6971
  %arrayidx1262 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1260, i64 0, i64 %idxprom1261, !dbg !6971
  %688 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6971
  %vport_attrs1263 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %688, i32 0, i32 11, !dbg !6971
  %689 = load i32, i32* %count, align 4, !dbg !6971
  %idxprom1264 = sext i32 %689 to i64, !dbg !6971
  %arrayidx1265 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1263, i64 0, i64 %idxprom1264, !dbg !6971
  store %struct.device_attribute* %arrayidx1262, %struct.device_attribute** %arrayidx1265, align 8, !dbg !6971
  %690 = load i32, i32* %count, align 4, !dbg !6971
  %inc1266 = add i32 %690, 1, !dbg !6971
  store i32 %inc1266, i32* %count, align 4, !dbg !6971
  %691 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6976
  %private_vport_attrs1267 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %691, i32 0, i32 10, !dbg !6976
  %692 = load i32, i32* %count, align 4, !dbg !6976
  %idxprom1268 = sext i32 %692 to i64, !dbg !6976
  %arrayidx1269 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1267, i64 0, i64 %idxprom1268, !dbg !6976
  %693 = bitcast %struct.device_attribute* %arrayidx1269 to i8*, !dbg !6976
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %693, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_vport_delete to i8*), i64 32, i1 false), !dbg !6976
  %694 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6976
  %private_vport_attrs1270 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %694, i32 0, i32 10, !dbg !6976
  %695 = load i32, i32* %count, align 4, !dbg !6976
  %idxprom1271 = sext i32 %695 to i64, !dbg !6976
  %arrayidx1272 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1270, i64 0, i64 %idxprom1271, !dbg !6976
  %696 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6976
  %vport_attrs1273 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %696, i32 0, i32 11, !dbg !6976
  %697 = load i32, i32* %count, align 4, !dbg !6976
  %idxprom1274 = sext i32 %697 to i64, !dbg !6976
  %arrayidx1275 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1273, i64 0, i64 %idxprom1274, !dbg !6976
  store %struct.device_attribute* %arrayidx1272, %struct.device_attribute** %arrayidx1275, align 8, !dbg !6976
  %698 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6977
  %f1276 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %698, i32 0, i32 1, !dbg !6977
  %699 = load %struct.fc_function_template*, %struct.fc_function_template** %f1276, align 8, !dbg !6977
  %vport_delete1277 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %699, i32 0, i32 21, !dbg !6977
  %700 = load i32 (%struct.fc_vport*)*, i32 (%struct.fc_vport*)** %vport_delete1277, align 8, !dbg !6977
  %tobool1278 = icmp ne i32 (%struct.fc_vport*)* %700, null, !dbg !6977
  br i1 %tobool1278, label %if.then1279, label %if.end1281, !dbg !6976

if.then1279:                                      ; preds = %if.end1259
  %701 = load i32, i32* %count, align 4, !dbg !6977
  %inc1280 = add i32 %701, 1, !dbg !6977
  store i32 %inc1280, i32* %count, align 4, !dbg !6977
  br label %if.end1281, !dbg !6977

if.end1281:                                       ; preds = %if.then1279, %if.end1259
  %702 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6979
  %private_vport_attrs1282 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %702, i32 0, i32 10, !dbg !6979
  %703 = load i32, i32* %count, align 4, !dbg !6979
  %idxprom1283 = sext i32 %703 to i64, !dbg !6979
  %arrayidx1284 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1282, i64 0, i64 %idxprom1283, !dbg !6979
  %704 = bitcast %struct.device_attribute* %arrayidx1284 to i8*, !dbg !6979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %704, i8* align 8 bitcast (%struct.device_attribute* @device_attr_vport_vport_disable to i8*), i64 32, i1 false), !dbg !6979
  %705 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6979
  %private_vport_attrs1285 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %705, i32 0, i32 10, !dbg !6979
  %706 = load i32, i32* %count, align 4, !dbg !6979
  %idxprom1286 = sext i32 %706 to i64, !dbg !6979
  %arrayidx1287 = getelementptr [9 x %struct.device_attribute], [9 x %struct.device_attribute]* %private_vport_attrs1285, i64 0, i64 %idxprom1286, !dbg !6979
  %707 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6979
  %vport_attrs1288 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %707, i32 0, i32 11, !dbg !6979
  %708 = load i32, i32* %count, align 4, !dbg !6979
  %idxprom1289 = sext i32 %708 to i64, !dbg !6979
  %arrayidx1290 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1288, i64 0, i64 %idxprom1289, !dbg !6979
  store %struct.device_attribute* %arrayidx1287, %struct.device_attribute** %arrayidx1290, align 8, !dbg !6979
  %709 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6980
  %f1291 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %709, i32 0, i32 1, !dbg !6980
  %710 = load %struct.fc_function_template*, %struct.fc_function_template** %f1291, align 8, !dbg !6980
  %vport_disable = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %710, i32 0, i32 20, !dbg !6980
  %711 = load i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)** %vport_disable, align 8, !dbg !6980
  %tobool1292 = icmp ne i32 (%struct.fc_vport*, i1)* %711, null, !dbg !6980
  br i1 %tobool1292, label %if.then1293, label %if.end1295, !dbg !6979

if.then1293:                                      ; preds = %if.end1281
  %712 = load i32, i32* %count, align 4, !dbg !6980
  %inc1294 = add i32 %712, 1, !dbg !6980
  store i32 %inc1294, i32* %count, align 4, !dbg !6980
  br label %if.end1295, !dbg !6980

if.end1295:                                       ; preds = %if.then1293, %if.end1281
  br label %do.body1296, !dbg !6982

do.body1296:                                      ; preds = %if.end1295
  %713 = load i32, i32* %count, align 4, !dbg !6983
  %cmp1297 = icmp sgt i32 %713, 9, !dbg !6983
  %lnot1299 = xor i1 %cmp1297, true, !dbg !6983
  %lnot1301 = xor i1 %lnot1299, true, !dbg !6983
  %lnot.ext1302 = zext i1 %lnot1301 to i32, !dbg !6983
  %conv1303 = sext i32 %lnot.ext1302 to i64, !dbg !6983
  %tobool1304 = icmp ne i64 %conv1303, 0, !dbg !6983
  br i1 %tobool1304, label %if.then1305, label %if.end1314, !dbg !6986

if.then1305:                                      ; preds = %do.body1296
  br label %do.body1306, !dbg !6983

do.body1306:                                      ; preds = %if.then1305
  br label %do.body1307, !dbg !6987

do.body1307:                                      ; preds = %do.body1306
  br label %do.end1308, !dbg !6989

do.end1308:                                       ; preds = %do.body1307
  br label %do.body1309, !dbg !6987

do.body1309:                                      ; preds = %do.end1308
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 2287, i32 0, i64 12) #10, !dbg !6991, !srcloc !6993
  br label %do.end1310, !dbg !6991

do.end1310:                                       ; preds = %do.body1309
  br label %do.body1311, !dbg !6987

do.body1311:                                      ; preds = %do.end1310
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 406) #10, !dbg !6994, !srcloc !6997
  unreachable, !dbg !6998

do.end1312:                                       ; No predecessors!
  br label %do.end1313, !dbg !6987

do.end1313:                                       ; preds = %do.end1312
  br label %if.end1314, !dbg !6987

if.end1314:                                       ; preds = %do.end1313, %do.body1296
  br label %do.end1315, !dbg !6986

do.end1315:                                       ; preds = %if.end1314
  %714 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !6999
  %vport_attrs1316 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %714, i32 0, i32 11, !dbg !7000
  %715 = load i32, i32* %count, align 4, !dbg !7001
  %idxprom1317 = sext i32 %715 to i64, !dbg !6999
  %arrayidx1318 = getelementptr [10 x %struct.device_attribute*], [10 x %struct.device_attribute*]* %vport_attrs1316, i64 0, i64 %idxprom1317, !dbg !6999
  store %struct.device_attribute* null, %struct.device_attribute** %arrayidx1318, align 8, !dbg !7002
  %716 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7003
  %t1319 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %716, i32 0, i32 0, !dbg !7004
  store %struct.scsi_transport_template* %t1319, %struct.scsi_transport_template** %retval, align 8, !dbg !7005
  br label %return, !dbg !7005

return:                                           ; preds = %do.end1315, %if.then
  %717 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %retval, align 8, !dbg !7006
  ret %struct.scsi_transport_template* %717, !dbg !7006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7007 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7010, metadata !DIExpression()), !dbg !7014
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7020, metadata !DIExpression()), !dbg !7021
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7022, metadata !DIExpression()), !dbg !7023
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7024, metadata !DIExpression()), !dbg !7025
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7026, metadata !DIExpression()), !dbg !7030
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7032, metadata !DIExpression()), !dbg !7036
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7038, metadata !DIExpression()), !dbg !7042
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7047, metadata !DIExpression()), !dbg !7048
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7049, metadata !DIExpression()), !dbg !7050
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7051, metadata !DIExpression()), !dbg !7052
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7053, metadata !DIExpression()), !dbg !7054
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7055, metadata !DIExpression()), !dbg !7056
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7057, metadata !DIExpression()), !dbg !7058
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7059, metadata !DIExpression()), !dbg !7060
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7061, metadata !DIExpression()), !dbg !7062
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  %0 = load i64, i64* %size.addr, align 8, !dbg !7067
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7068
  %or = or i32 %1, 256, !dbg !7069
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7070
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !7071
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7072

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7073
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7074
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7075

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7076
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7077
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7078
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !7079
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7056
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7080
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7081
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7082
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7083
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7084
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7085
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !7086
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7086
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7086
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7086
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !7086
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7087
  br label %kmalloc.exit, !dbg !7087

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7088
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7089
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7089
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7091

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7092
  br label %kmalloc_index.exit.i, !dbg !7092

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7093
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7095
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7096

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7097
  br label %kmalloc_index.exit.i, !dbg !7097

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7098
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7100
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7101

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7102
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7103
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7104

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7105
  br label %kmalloc_index.exit.i, !dbg !7105

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7106
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7108
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7109

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7110
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7111
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7112

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7113
  br label %kmalloc_index.exit.i, !dbg !7113

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7114
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7116
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7117

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7118
  br label %kmalloc_index.exit.i, !dbg !7118

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7119
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7121
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7122

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7123
  br label %kmalloc_index.exit.i, !dbg !7123

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7124
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7126
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7127

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7128
  br label %kmalloc_index.exit.i, !dbg !7128

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7129
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7131
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7132

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7133
  br label %kmalloc_index.exit.i, !dbg !7133

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7134
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7136
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7137

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7138
  br label %kmalloc_index.exit.i, !dbg !7138

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7139
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7141
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7142

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7143
  br label %kmalloc_index.exit.i, !dbg !7143

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7144
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7146
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7147

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7148
  br label %kmalloc_index.exit.i, !dbg !7148

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7149
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7151
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7152

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7153
  br label %kmalloc_index.exit.i, !dbg !7153

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7154
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7156
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7157

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7158
  br label %kmalloc_index.exit.i, !dbg !7158

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7159
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7161
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7162

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7163
  br label %kmalloc_index.exit.i, !dbg !7163

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7164
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7166
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7167

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7168
  br label %kmalloc_index.exit.i, !dbg !7168

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7169
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7171
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7172

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7173
  br label %kmalloc_index.exit.i, !dbg !7173

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7174
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7176
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7177

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7178
  br label %kmalloc_index.exit.i, !dbg !7178

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7179
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7181
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7182

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7183
  br label %kmalloc_index.exit.i, !dbg !7183

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7184
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7186
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7187

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7188
  br label %kmalloc_index.exit.i, !dbg !7188

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7189
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7191
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7192

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7193
  br label %kmalloc_index.exit.i, !dbg !7193

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7194
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7196
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7197

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7198
  br label %kmalloc_index.exit.i, !dbg !7198

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7199
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7201
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7202

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7203
  br label %kmalloc_index.exit.i, !dbg !7203

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7204
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7206
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7207

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7208
  br label %kmalloc_index.exit.i, !dbg !7208

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7209
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7211
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7212

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7213
  br label %kmalloc_index.exit.i, !dbg !7213

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7214
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7216
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7217

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7218
  br label %kmalloc_index.exit.i, !dbg !7218

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7219
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7221
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7222

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7223
  br label %kmalloc_index.exit.i, !dbg !7223

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7224
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7226
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7227

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7228
  br label %kmalloc_index.exit.i, !dbg !7228

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7229
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7231
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7232

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7233
  br label %kmalloc_index.exit.i, !dbg !7233

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7234, !srcloc !7237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !7238, !srcloc !7241
  unreachable, !dbg !7242

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7243
  store i32 %45, i32* %index.i, align 4, !dbg !7244
  %46 = load i32, i32* %index.i, align 4, !dbg !7245
  %tobool.i = icmp ne i32 %46, 0, !dbg !7245
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7247

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7248
  br label %kmalloc.exit, !dbg !7248

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7249
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7250
  %and.i.i = and i32 %48, 17, !dbg !7250
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7250
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7250
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7250
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7250
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7252

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7253
  br label %kmalloc_type.exit.i, !dbg !7253

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7254
  %and2.i.i = and i32 %49, 1, !dbg !7255
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7254
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7254
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7254
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7256
  br label %kmalloc_type.exit.i, !dbg !7256

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7257
  %idxprom.i = zext i32 %51 to i64, !dbg !7258
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7258
  %52 = load i32, i32* %index.i, align 4, !dbg !7259
  %idxprom6.i = zext i32 %52 to i64, !dbg !7258
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7258
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7258
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7260
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7261
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7262
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7263
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !7264
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7264
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7264
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7264
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !7264
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7025
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7265
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !7266
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7267
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7268
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !7269
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7270
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !7271
  store i8* %62, i8** %retval.i, align 8, !dbg !7272
  br label %kmalloc.exit, !dbg !7272

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !7273
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !7274
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !7275
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7275
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7275
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7275
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !7275
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7276
  br label %kmalloc.exit, !dbg !7276

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !7277
  ret i8* %65, !dbg !7278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_target_match(%struct.attribute_container* %cont, %struct.device* %dev) #0 !dbg !7279 {
entry:
  %retval = alloca i32, align 4
  %cont.addr = alloca %struct.attribute_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.attribute_container* %cont, %struct.attribute_container** %cont.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_container** %cont.addr, metadata !7280, metadata !DIExpression()), !dbg !7281
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7282, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !7284, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !7286, metadata !DIExpression()), !dbg !7287
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7288
  %call = call i32 @scsi_is_target_device(%struct.device* %0) #12, !dbg !7290
  %tobool = icmp ne i32 %call, 0, !dbg !7290
  br i1 %tobool, label %if.end, label %if.then, !dbg !7291

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7292
  br label %return, !dbg !7292

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7293
  %parent = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 1, !dbg !7294
  %2 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7294
  %call1 = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %2) #12, !dbg !7295
  store %struct.Scsi_Host* %call1, %struct.Scsi_Host** %shost, align 8, !dbg !7296
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7297
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 11, !dbg !7299
  %4 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !7299
  %tobool2 = icmp ne %struct.scsi_transport_template* %4, null, !dbg !7297
  br i1 %tobool2, label %lor.lhs.false, label %if.then4, !dbg !7300

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7301
  %transportt3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 11, !dbg !7302
  %6 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt3, align 8, !dbg !7302
  %host_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %6, i32 0, i32 0, !dbg !7303
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs, i32 0, i32 0, !dbg !7304
  %class = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac, i32 0, i32 2, !dbg !7305
  %7 = load %struct.class*, %struct.class** %class, align 8, !dbg !7305
  %cmp = icmp ne %struct.class* %7, getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_host_class, i32 0, i32 0), !dbg !7306
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7307

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7308
  br label %return, !dbg !7308

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7309, metadata !DIExpression()), !dbg !7311
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7311
  %transportt6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !7311
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt6, align 8, !dbg !7311
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !7311
  store i8* %10, i8** %__mptr, align 8, !dbg !7311
  br label %do.body, !dbg !7311

do.body:                                          ; preds = %if.end5
  br label %do.end, !dbg !7312

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !7311
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !7311
  %12 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !7311
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp, align 8, !dbg !7312
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !7311
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !7314
  %14 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7315
  %t = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %14, i32 0, i32 0, !dbg !7316
  %target_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t, i32 0, i32 1, !dbg !7317
  %ac7 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %target_attrs, i32 0, i32 0, !dbg !7318
  %15 = load %struct.attribute_container*, %struct.attribute_container** %cont.addr, align 8, !dbg !7319
  %cmp8 = icmp eq %struct.attribute_container* %ac7, %15, !dbg !7320
  %conv = zext i1 %cmp8 to i32, !dbg !7320
  store i32 %conv, i32* %retval, align 4, !dbg !7321
  br label %return, !dbg !7321

return:                                           ; preds = %do.end, %if.then4, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7322
  ret i32 %16, !dbg !7322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @transport_container_register(%struct.transport_container* %tc) #0 !dbg !7323 {
entry:
  %tc.addr = alloca %struct.transport_container*, align 8
  store %struct.transport_container* %tc, %struct.transport_container** %tc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transport_container** %tc.addr, metadata !7326, metadata !DIExpression()), !dbg !7327
  %0 = load %struct.transport_container*, %struct.transport_container** %tc.addr, align 8, !dbg !7328
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %0, i32 0, i32 0, !dbg !7329
  %call = call i32 @attribute_container_register(%struct.attribute_container* %ac) #12, !dbg !7330
  ret i32 %call, !dbg !7331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_host_match(%struct.attribute_container* %cont, %struct.device* %dev) #0 !dbg !7332 {
entry:
  %retval = alloca i32, align 4
  %cont.addr = alloca %struct.attribute_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.attribute_container* %cont, %struct.attribute_container** %cont.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_container** %cont.addr, metadata !7333, metadata !DIExpression()), !dbg !7334
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !7339, metadata !DIExpression()), !dbg !7340
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7341
  %call = call i32 @scsi_is_host_device(%struct.device* %0) #12, !dbg !7343
  %tobool = icmp ne i32 %call, 0, !dbg !7343
  br i1 %tobool, label %if.end, label %if.then, !dbg !7344

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7346
  %call1 = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !7347
  store %struct.Scsi_Host* %call1, %struct.Scsi_Host** %shost, align 8, !dbg !7348
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7349
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !7351
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !7351
  %tobool2 = icmp ne %struct.scsi_transport_template* %3, null, !dbg !7349
  br i1 %tobool2, label %lor.lhs.false, label %if.then4, !dbg !7352

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7353
  %transportt3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 11, !dbg !7354
  %5 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt3, align 8, !dbg !7354
  %host_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %5, i32 0, i32 0, !dbg !7355
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs, i32 0, i32 0, !dbg !7356
  %class = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac, i32 0, i32 2, !dbg !7357
  %6 = load %struct.class*, %struct.class** %class, align 8, !dbg !7357
  %cmp = icmp ne %struct.class* %6, getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_host_class, i32 0, i32 0), !dbg !7358
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7359

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7360
  br label %return, !dbg !7360

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7361, metadata !DIExpression()), !dbg !7363
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7363
  %transportt6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 11, !dbg !7363
  %8 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt6, align 8, !dbg !7363
  %9 = bitcast %struct.scsi_transport_template* %8 to i8*, !dbg !7363
  store i8* %9, i8** %__mptr, align 8, !dbg !7363
  br label %do.body, !dbg !7363

do.body:                                          ; preds = %if.end5
  br label %do.end, !dbg !7364

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !7363
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !7363
  %11 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !7363
  store %struct.fc_internal* %11, %struct.fc_internal** %tmp, align 8, !dbg !7364
  %12 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !7363
  store %struct.fc_internal* %12, %struct.fc_internal** %i, align 8, !dbg !7366
  %13 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7367
  %t = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %13, i32 0, i32 0, !dbg !7368
  %host_attrs7 = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t, i32 0, i32 0, !dbg !7369
  %ac8 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs7, i32 0, i32 0, !dbg !7370
  %14 = load %struct.attribute_container*, %struct.attribute_container** %cont.addr, align 8, !dbg !7371
  %cmp9 = icmp eq %struct.attribute_container* %ac8, %14, !dbg !7372
  %conv = zext i1 %cmp9 to i32, !dbg !7372
  store i32 %conv, i32* %retval, align 4, !dbg !7373
  br label %return, !dbg !7373

return:                                           ; preds = %do.end, %if.then4, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7374
  ret i32 %15, !dbg !7374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_rport_match(%struct.attribute_container* %cont, %struct.device* %dev) #0 !dbg !7375 {
entry:
  %retval = alloca i32, align 4
  %cont.addr = alloca %struct.attribute_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.attribute_container* %cont, %struct.attribute_container** %cont.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_container** %cont.addr, metadata !7376, metadata !DIExpression()), !dbg !7377
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7378, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !7380, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !7382, metadata !DIExpression()), !dbg !7383
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7384
  %call = call i32 @scsi_is_fc_rport(%struct.device* %0) #12, !dbg !7386
  %tobool = icmp ne i32 %call, 0, !dbg !7386
  br i1 %tobool, label %if.end, label %if.then, !dbg !7387

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7388
  br label %return, !dbg !7388

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7389
  %parent = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 1, !dbg !7390
  %2 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7390
  %call1 = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %2) #12, !dbg !7391
  store %struct.Scsi_Host* %call1, %struct.Scsi_Host** %shost, align 8, !dbg !7392
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7393
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 11, !dbg !7395
  %4 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !7395
  %tobool2 = icmp ne %struct.scsi_transport_template* %4, null, !dbg !7393
  br i1 %tobool2, label %lor.lhs.false, label %if.then4, !dbg !7396

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7397
  %transportt3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 11, !dbg !7398
  %6 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt3, align 8, !dbg !7398
  %host_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %6, i32 0, i32 0, !dbg !7399
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs, i32 0, i32 0, !dbg !7400
  %class = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac, i32 0, i32 2, !dbg !7401
  %7 = load %struct.class*, %struct.class** %class, align 8, !dbg !7401
  %cmp = icmp ne %struct.class* %7, getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_host_class, i32 0, i32 0), !dbg !7402
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7403

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7404
  br label %return, !dbg !7404

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7405, metadata !DIExpression()), !dbg !7407
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7407
  %transportt6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !7407
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt6, align 8, !dbg !7407
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !7407
  store i8* %10, i8** %__mptr, align 8, !dbg !7407
  br label %do.body, !dbg !7407

do.body:                                          ; preds = %if.end5
  br label %do.end, !dbg !7408

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !7407
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !7407
  %12 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !7407
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp, align 8, !dbg !7408
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !7407
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !7410
  %14 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7411
  %rport_attr_cont = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %14, i32 0, i32 6, !dbg !7412
  %ac7 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %rport_attr_cont, i32 0, i32 0, !dbg !7413
  %15 = load %struct.attribute_container*, %struct.attribute_container** %cont.addr, align 8, !dbg !7414
  %cmp8 = icmp eq %struct.attribute_container* %ac7, %15, !dbg !7415
  %conv = zext i1 %cmp8 to i32, !dbg !7415
  store i32 %conv, i32* %retval, align 4, !dbg !7416
  br label %return, !dbg !7416

return:                                           ; preds = %do.end, %if.then4, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7417
  ret i32 %16, !dbg !7417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_vport_match(%struct.attribute_container* %cont, %struct.device* %dev) #0 !dbg !7418 {
entry:
  %retval = alloca i32, align 4
  %cont.addr = alloca %struct.attribute_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp10 = alloca %struct.fc_internal*, align 8
  store %struct.attribute_container* %cont, %struct.attribute_container** %cont.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_container** %cont.addr, metadata !7419, metadata !DIExpression()), !dbg !7420
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !7427, metadata !DIExpression()), !dbg !7428
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7429
  %call = call i32 @scsi_is_fc_vport(%struct.device* %0) #12, !dbg !7431
  %tobool = icmp ne i32 %call, 0, !dbg !7431
  br i1 %tobool, label %if.end, label %if.then, !dbg !7432

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7433
  br label %return, !dbg !7433

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7434, metadata !DIExpression()), !dbg !7436
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7436
  %2 = bitcast %struct.device* %1 to i8*, !dbg !7436
  store i8* %2, i8** %__mptr, align 8, !dbg !7436
  br label %do.body, !dbg !7436

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7437

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7436
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !7436
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !7436
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !7437
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !7436
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !7439
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !7440
  %shost1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 9, !dbg !7440
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost1, align 8, !dbg !7440
  store %struct.Scsi_Host* %7, %struct.Scsi_Host** %shost, align 8, !dbg !7441
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7442
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !7444
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !7444
  %tobool2 = icmp ne %struct.scsi_transport_template* %9, null, !dbg !7442
  br i1 %tobool2, label %lor.lhs.false, label %if.then4, !dbg !7445

lor.lhs.false:                                    ; preds = %do.end
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7446
  %transportt3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 11, !dbg !7447
  %11 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt3, align 8, !dbg !7447
  %host_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %11, i32 0, i32 0, !dbg !7448
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %host_attrs, i32 0, i32 0, !dbg !7449
  %class = getelementptr inbounds %struct.attribute_container, %struct.attribute_container* %ac, i32 0, i32 2, !dbg !7450
  %12 = load %struct.class*, %struct.class** %class, align 8, !dbg !7450
  %cmp = icmp ne %struct.class* %12, getelementptr inbounds (%struct.transport_class, %struct.transport_class* @fc_host_class, i32 0, i32 0), !dbg !7451
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7452

if.then4:                                         ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval, align 4, !dbg !7453
  br label %return, !dbg !7453

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !7454, metadata !DIExpression()), !dbg !7456
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7456
  %transportt7 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 11, !dbg !7456
  %14 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt7, align 8, !dbg !7456
  %15 = bitcast %struct.scsi_transport_template* %14 to i8*, !dbg !7456
  store i8* %15, i8** %__mptr6, align 8, !dbg !7456
  br label %do.body8, !dbg !7456

do.body8:                                         ; preds = %if.end5
  br label %do.end9, !dbg !7457

do.end9:                                          ; preds = %do.body8
  %16 = load i8*, i8** %__mptr6, align 8, !dbg !7456
  %add.ptr11 = getelementptr i8, i8* %16, i64 0, !dbg !7456
  %17 = bitcast i8* %add.ptr11 to %struct.fc_internal*, !dbg !7456
  store %struct.fc_internal* %17, %struct.fc_internal** %tmp10, align 8, !dbg !7457
  %18 = load %struct.fc_internal*, %struct.fc_internal** %tmp10, align 8, !dbg !7456
  store %struct.fc_internal* %18, %struct.fc_internal** %i, align 8, !dbg !7459
  %19 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7460
  %vport_attr_cont = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %19, i32 0, i32 9, !dbg !7461
  %ac12 = getelementptr inbounds %struct.transport_container, %struct.transport_container* %vport_attr_cont, i32 0, i32 0, !dbg !7462
  %20 = load %struct.attribute_container*, %struct.attribute_container** %cont.addr, align 8, !dbg !7463
  %cmp13 = icmp eq %struct.attribute_container* %ac12, %20, !dbg !7464
  %conv = zext i1 %cmp13 to i32, !dbg !7464
  store i32 %conv, i32* %retval, align 4, !dbg !7465
  br label %return, !dbg !7465

return:                                           ; preds = %do.end9, %if.then4, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7466
  ret i32 %21, !dbg !7466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_user_scan(%struct.Scsi_Host* %shost, i32 %channel, i32 %id, i64 %lun) #0 !dbg !7467 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %lun.addr = alloca i64, align 8
  %chlo = alloca i32, align 4
  %chhi = alloca i32, align 4
  %tgtlo = alloca i32, align 4
  %tgthi = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7468, metadata !DIExpression()), !dbg !7469
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7470, metadata !DIExpression()), !dbg !7471
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  store i64 %lun, i64* %lun.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lun.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata i32* %chlo, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata i32* %chhi, metadata !7478, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %tgtlo, metadata !7480, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.declare(metadata i32* %tgthi, metadata !7482, metadata !DIExpression()), !dbg !7483
  %0 = load i32, i32* %channel.addr, align 4, !dbg !7484
  %cmp = icmp ne i32 %0, -1, !dbg !7486
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7487

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %channel.addr, align 4, !dbg !7488
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7489
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 19, !dbg !7490
  %3 = load i32, i32* %max_channel, align 8, !dbg !7490
  %cmp1 = icmp ugt i32 %1, %3, !dbg !7491
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !7492

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %id.addr, align 4, !dbg !7493
  %cmp2 = icmp ne i32 %4, -1, !dbg !7494
  br i1 %cmp2, label %land.lhs.true3, label %lor.lhs.false5, !dbg !7495

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %id.addr, align 4, !dbg !7496
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7497
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 20, !dbg !7498
  %7 = load i32, i32* %max_id, align 4, !dbg !7498
  %cmp4 = icmp uge i32 %5, %7, !dbg !7499
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !7500

lor.lhs.false5:                                   ; preds = %land.lhs.true3, %lor.lhs.false
  %8 = load i64, i64* %lun.addr, align 8, !dbg !7501
  %cmp6 = icmp ne i64 %8, -1, !dbg !7502
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !7503

land.lhs.true7:                                   ; preds = %lor.lhs.false5
  %9 = load i64, i64* %lun.addr, align 8, !dbg !7504
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7505
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 21, !dbg !7506
  %11 = load i64, i64* %max_lun, align 8, !dbg !7506
  %cmp8 = icmp ugt i64 %9, %11, !dbg !7507
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7508

if.then:                                          ; preds = %land.lhs.true7, %land.lhs.true3, %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !7509
  br label %return, !dbg !7509

if.end:                                           ; preds = %land.lhs.true7, %lor.lhs.false5
  %12 = load i32, i32* %channel.addr, align 4, !dbg !7510
  %cmp9 = icmp eq i32 %12, -1, !dbg !7512
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !7513

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %chlo, align 4, !dbg !7514
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7516
  %max_channel11 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 19, !dbg !7517
  %14 = load i32, i32* %max_channel11, align 8, !dbg !7517
  %add = add i32 %14, 1, !dbg !7518
  store i32 %add, i32* %chhi, align 4, !dbg !7519
  br label %if.end13, !dbg !7520

if.else:                                          ; preds = %if.end
  %15 = load i32, i32* %channel.addr, align 4, !dbg !7521
  store i32 %15, i32* %chlo, align 4, !dbg !7523
  %16 = load i32, i32* %channel.addr, align 4, !dbg !7524
  %add12 = add i32 %16, 1, !dbg !7525
  store i32 %add12, i32* %chhi, align 4, !dbg !7526
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %17 = load i32, i32* %id.addr, align 4, !dbg !7527
  %cmp14 = icmp eq i32 %17, -1, !dbg !7529
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !7530

if.then15:                                        ; preds = %if.end13
  store i32 0, i32* %tgtlo, align 4, !dbg !7531
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7533
  %max_id16 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 20, !dbg !7534
  %19 = load i32, i32* %max_id16, align 4, !dbg !7534
  store i32 %19, i32* %tgthi, align 4, !dbg !7535
  br label %if.end19, !dbg !7536

if.else17:                                        ; preds = %if.end13
  %20 = load i32, i32* %id.addr, align 4, !dbg !7537
  store i32 %20, i32* %tgtlo, align 4, !dbg !7539
  %21 = load i32, i32* %id.addr, align 4, !dbg !7540
  %add18 = add i32 %21, 1, !dbg !7541
  store i32 %add18, i32* %tgthi, align 4, !dbg !7542
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then15
  br label %for.cond, !dbg !7543

for.cond:                                         ; preds = %for.inc24, %if.end19
  %22 = load i32, i32* %chlo, align 4, !dbg !7544
  %23 = load i32, i32* %chhi, align 4, !dbg !7547
  %cmp20 = icmp ult i32 %22, %23, !dbg !7548
  br i1 %cmp20, label %for.body, label %for.end26, !dbg !7549

for.body:                                         ; preds = %for.cond
  br label %for.cond21, !dbg !7550

for.cond21:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %tgtlo, align 4, !dbg !7551
  %25 = load i32, i32* %tgthi, align 4, !dbg !7554
  %cmp22 = icmp ult i32 %24, %25, !dbg !7555
  br i1 %cmp22, label %for.body23, label %for.end, !dbg !7556

for.body23:                                       ; preds = %for.cond21
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7557
  %27 = load i32, i32* %chlo, align 4, !dbg !7558
  %28 = load i32, i32* %tgtlo, align 4, !dbg !7559
  %29 = load i64, i64* %lun.addr, align 8, !dbg !7560
  call void @fc_user_scan_tgt(%struct.Scsi_Host* %26, i32 %27, i32 %28, i64 %29) #12, !dbg !7561
  br label %for.inc, !dbg !7561

for.inc:                                          ; preds = %for.body23
  %30 = load i32, i32* %tgtlo, align 4, !dbg !7562
  %inc = add i32 %30, 1, !dbg !7562
  store i32 %inc, i32* %tgtlo, align 4, !dbg !7562
  br label %for.cond21, !dbg !7563, !llvm.loop !7564

for.end:                                          ; preds = %for.cond21
  br label %for.inc24, !dbg !7565

for.inc24:                                        ; preds = %for.end
  %31 = load i32, i32* %chlo, align 4, !dbg !7566
  %inc25 = add i32 %31, 1, !dbg !7566
  store i32 %inc25, i32* %chlo, align 4, !dbg !7566
  br label %for.cond, !dbg !7567, !llvm.loop !7568

for.end26:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7570
  br label %return, !dbg !7570

return:                                           ; preds = %for.end26, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7571
  ret i32 %32, !dbg !7571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_release_transport(%struct.scsi_transport_template* %t) #0 !dbg !7572 {
entry:
  %t.addr = alloca %struct.scsi_transport_template*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.scsi_transport_template* %t, %struct.scsi_transport_template** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_transport_template** %t.addr, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !7577, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7579, metadata !DIExpression()), !dbg !7581
  %0 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %t.addr, align 8, !dbg !7581
  %1 = bitcast %struct.scsi_transport_template* %0 to i8*, !dbg !7581
  store i8* %1, i8** %__mptr, align 8, !dbg !7581
  br label %do.body, !dbg !7581

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7582

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7581
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7581
  %3 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !7581
  store %struct.fc_internal* %3, %struct.fc_internal** %tmp, align 8, !dbg !7582
  %4 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !7581
  store %struct.fc_internal* %4, %struct.fc_internal** %i, align 8, !dbg !7578
  %5 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7584
  %t1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %5, i32 0, i32 0, !dbg !7585
  %target_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t1, i32 0, i32 1, !dbg !7586
  call void @transport_container_unregister(%struct.transport_container* %target_attrs) #12, !dbg !7587
  %6 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7588
  %t2 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %6, i32 0, i32 0, !dbg !7589
  %host_attrs = getelementptr inbounds %struct.scsi_transport_template, %struct.scsi_transport_template* %t2, i32 0, i32 0, !dbg !7590
  call void @transport_container_unregister(%struct.transport_container* %host_attrs) #12, !dbg !7591
  %7 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7592
  %rport_attr_cont = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %7, i32 0, i32 6, !dbg !7593
  call void @transport_container_unregister(%struct.transport_container* %rport_attr_cont) #12, !dbg !7594
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7595
  %vport_attr_cont = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 9, !dbg !7596
  call void @transport_container_unregister(%struct.transport_container* %vport_attr_cont) #12, !dbg !7597
  %9 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !7598
  %10 = bitcast %struct.fc_internal* %9 to i8*, !dbg !7598
  call void @kfree(i8* %10) #12, !dbg !7599
  ret void, !dbg !7600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @transport_container_unregister(%struct.transport_container* %tc) #0 !dbg !7601 {
entry:
  %tc.addr = alloca %struct.transport_container*, align 8
  store %struct.transport_container* %tc, %struct.transport_container** %tc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transport_container** %tc.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  %0 = load %struct.transport_container*, %struct.transport_container** %tc.addr, align 8, !dbg !7606
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %0, i32 0, i32 0, !dbg !7606
  %call = call i32 @attribute_container_unregister(%struct.attribute_container* %ac) #12, !dbg !7606
  %tobool = icmp ne i32 %call, 0, !dbg !7606
  %lnot = xor i1 %tobool, true, !dbg !7606
  %lnot1 = xor i1 %lnot, true, !dbg !7606
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7606
  %conv = sext i32 %lnot.ext to i64, !dbg !7606
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7606
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7608

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7609

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !7610

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !7612

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !7610

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.173, i64 0, i64 0), i32 92, i32 0, i64 12) #10, !dbg !7614, !srcloc !7616
  br label %do.end5, !dbg !7614

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !7610

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 290) #10, !dbg !7617, !srcloc !7620
  unreachable, !dbg !7621

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !7610

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !7610

if.end:                                           ; preds = %do.end8, %entry
  ret void, !dbg !7622
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_remove_host(%struct.Scsi_Host* %shost) #0 !dbg !7623 {
entry:
  %lock.addr.i116 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i116, metadata !7624, metadata !DIExpression()), !dbg !7629
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !7632
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !7638
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %next_vport = alloca %struct.fc_vport*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %next_rport = alloca %struct.fc_rport*, align 8
  %work_q = alloca %struct.workqueue_struct*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.fc_vport*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp26 = alloca %struct.fc_vport*, align 8
  %__mptr36 = alloca i8*, align 8
  %tmp41 = alloca %struct.fc_vport*, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp47 = alloca %struct.fc_rport*, align 8
  %__mptr49 = alloca i8*, align 8
  %tmp54 = alloca %struct.fc_rport*, align 8
  %__mptr66 = alloca i8*, align 8
  %tmp71 = alloca %struct.fc_rport*, align 8
  %__mptr74 = alloca i8*, align 8
  %tmp78 = alloca %struct.fc_rport*, align 8
  %__mptr80 = alloca i8*, align 8
  %tmp85 = alloca %struct.fc_rport*, align 8
  %__mptr99 = alloca i8*, align 8
  %tmp104 = alloca %struct.fc_rport*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7645, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !7647, metadata !DIExpression()), !dbg !7648
  store %struct.fc_vport* null, %struct.fc_vport** %vport, align 8, !dbg !7648
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %next_vport, metadata !7649, metadata !DIExpression()), !dbg !7650
  store %struct.fc_vport* null, %struct.fc_vport** %next_vport, align 8, !dbg !7650
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !7651, metadata !DIExpression()), !dbg !7652
  store %struct.fc_rport* null, %struct.fc_rport** %rport, align 8, !dbg !7652
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %next_rport, metadata !7653, metadata !DIExpression()), !dbg !7654
  store %struct.fc_rport* null, %struct.fc_rport** %next_rport, align 8, !dbg !7654
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %work_q, metadata !7655, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !7657, metadata !DIExpression()), !dbg !7658
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7659
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !7659
  %1 = load i8*, i8** %shost_data, align 8, !dbg !7659
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !7659
  store %struct.fc_host_attrs* %2, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7658
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7660, metadata !DIExpression()), !dbg !7661
  br label %do.body, !dbg !7662

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7663

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7664, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7667, metadata !DIExpression()), !dbg !7666
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7666
  %conv = zext i1 %cmp to i32, !dbg !7666
  store i32 1, i32* %tmp, align 4, !dbg !7666
  %3 = load i32, i32* %tmp, align 4, !dbg !7666
  br label %do.body2, !dbg !7668

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7669

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7670

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7672, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7676, metadata !DIExpression()), !dbg !7675
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7675
  %conv8 = zext i1 %cmp7 to i32, !dbg !7675
  store i32 1, i32* %tmp9, align 4, !dbg !7675
  %4 = load i32, i32* %tmp9, align 4, !dbg !7675
  %call = call i64 @arch_local_irq_save() #12, !dbg !7677
  store i64 %call, i64* %flags, align 8, !dbg !7677
  br label %do.end, !dbg !7677

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7670

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7669

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7678, !srcloc !7679
  br label %do.body12, !dbg !7678

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7680
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 4, !dbg !7680
  %6 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !7680
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7681
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7682
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !7682
  br label %do.end14, !dbg !7680

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7678

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7669

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7668

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7663

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7683, metadata !DIExpression()), !dbg !7686
  %9 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7686
  %vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 28, !dbg !7686
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vports, i32 0, i32 0, !dbg !7686
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7686
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7686
  store i8* %11, i8** %__mptr, align 8, !dbg !7686
  br label %do.body19, !dbg !7686

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !7687

do.end20:                                         ; preds = %do.body19
  %12 = load i8*, i8** %__mptr, align 8, !dbg !7686
  %add.ptr = getelementptr i8, i8* %12, i64 -136, !dbg !7686
  %13 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !7686
  store %struct.fc_vport* %13, %struct.fc_vport** %tmp21, align 8, !dbg !7687
  %14 = load %struct.fc_vport*, %struct.fc_vport** %tmp21, align 8, !dbg !7686
  store %struct.fc_vport* %14, %struct.fc_vport** %vport, align 8, !dbg !7689
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !7690, metadata !DIExpression()), !dbg !7692
  %15 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !7692
  %peers = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %15, i32 0, i32 13, !dbg !7692
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers, i32 0, i32 0, !dbg !7692
  %16 = load %struct.list_head*, %struct.list_head** %next23, align 8, !dbg !7692
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !7692
  store i8* %17, i8** %__mptr22, align 8, !dbg !7692
  br label %do.body24, !dbg !7692

do.body24:                                        ; preds = %do.end20
  br label %do.end25, !dbg !7693

do.end25:                                         ; preds = %do.body24
  %18 = load i8*, i8** %__mptr22, align 8, !dbg !7692
  %add.ptr27 = getelementptr i8, i8* %18, i64 -136, !dbg !7692
  %19 = bitcast i8* %add.ptr27 to %struct.fc_vport*, !dbg !7692
  store %struct.fc_vport* %19, %struct.fc_vport** %tmp26, align 8, !dbg !7693
  %20 = load %struct.fc_vport*, %struct.fc_vport** %tmp26, align 8, !dbg !7692
  store %struct.fc_vport* %20, %struct.fc_vport** %next_vport, align 8, !dbg !7689
  br label %for.cond, !dbg !7689

for.cond:                                         ; preds = %do.end40, %do.end25
  %21 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !7695
  %peers28 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %21, i32 0, i32 13, !dbg !7695
  %22 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7695
  %vports29 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %22, i32 0, i32 28, !dbg !7695
  %cmp30 = icmp eq %struct.list_head* %peers28, %vports29, !dbg !7695
  %lnot = xor i1 %cmp30, true, !dbg !7695
  br i1 %lnot, label %for.body, label %for.end, !dbg !7689

for.body:                                         ; preds = %for.cond
  %23 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !7697
  %flags32 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %23, i32 0, i32 12, !dbg !7699
  %24 = load i8, i8* %flags32, align 8, !dbg !7700
  %conv33 = zext i8 %24 to i32, !dbg !7700
  %or = or i32 %conv33, 2, !dbg !7700
  %conv34 = trunc i32 %or to i8, !dbg !7700
  store i8 %conv34, i8* %flags32, align 8, !dbg !7700
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7701
  %26 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !7702
  %vport_delete_work = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %26, i32 0, i32 15, !dbg !7703
  %call35 = call i32 @fc_queue_work(%struct.Scsi_Host* %25, %struct.work_struct* %vport_delete_work) #12, !dbg !7704
  br label %for.inc, !dbg !7705

for.inc:                                          ; preds = %for.body
  %27 = load %struct.fc_vport*, %struct.fc_vport** %next_vport, align 8, !dbg !7695
  store %struct.fc_vport* %27, %struct.fc_vport** %vport, align 8, !dbg !7695
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !7706, metadata !DIExpression()), !dbg !7708
  %28 = load %struct.fc_vport*, %struct.fc_vport** %next_vport, align 8, !dbg !7708
  %peers37 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %28, i32 0, i32 13, !dbg !7708
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers37, i32 0, i32 0, !dbg !7708
  %29 = load %struct.list_head*, %struct.list_head** %next38, align 8, !dbg !7708
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !7708
  store i8* %30, i8** %__mptr36, align 8, !dbg !7708
  br label %do.body39, !dbg !7708

do.body39:                                        ; preds = %for.inc
  br label %do.end40, !dbg !7709

do.end40:                                         ; preds = %do.body39
  %31 = load i8*, i8** %__mptr36, align 8, !dbg !7708
  %add.ptr42 = getelementptr i8, i8* %31, i64 -136, !dbg !7708
  %32 = bitcast i8* %add.ptr42 to %struct.fc_vport*, !dbg !7708
  store %struct.fc_vport* %32, %struct.fc_vport** %tmp41, align 8, !dbg !7709
  %33 = load %struct.fc_vport*, %struct.fc_vport** %tmp41, align 8, !dbg !7708
  store %struct.fc_vport* %33, %struct.fc_vport** %next_vport, align 8, !dbg !7695
  br label %for.cond, !dbg !7695, !llvm.loop !7711

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !7713, metadata !DIExpression()), !dbg !7716
  %34 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7716
  %rports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %34, i32 0, i32 26, !dbg !7716
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %rports, i32 0, i32 0, !dbg !7716
  %35 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !7716
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !7716
  store i8* %36, i8** %__mptr43, align 8, !dbg !7716
  br label %do.body45, !dbg !7716

do.body45:                                        ; preds = %for.end
  br label %do.end46, !dbg !7717

do.end46:                                         ; preds = %do.body45
  %37 = load i8*, i8** %__mptr43, align 8, !dbg !7716
  %add.ptr48 = getelementptr i8, i8* %37, i64 -80, !dbg !7716
  %38 = bitcast i8* %add.ptr48 to %struct.fc_rport*, !dbg !7716
  store %struct.fc_rport* %38, %struct.fc_rport** %tmp47, align 8, !dbg !7717
  %39 = load %struct.fc_rport*, %struct.fc_rport** %tmp47, align 8, !dbg !7716
  store %struct.fc_rport* %39, %struct.fc_rport** %rport, align 8, !dbg !7719
  call void @llvm.dbg.declare(metadata i8** %__mptr49, metadata !7720, metadata !DIExpression()), !dbg !7722
  %40 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7722
  %peers50 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %40, i32 0, i32 14, !dbg !7722
  %next51 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers50, i32 0, i32 0, !dbg !7722
  %41 = load %struct.list_head*, %struct.list_head** %next51, align 8, !dbg !7722
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !7722
  store i8* %42, i8** %__mptr49, align 8, !dbg !7722
  br label %do.body52, !dbg !7722

do.body52:                                        ; preds = %do.end46
  br label %do.end53, !dbg !7723

do.end53:                                         ; preds = %do.body52
  %43 = load i8*, i8** %__mptr49, align 8, !dbg !7722
  %add.ptr55 = getelementptr i8, i8* %43, i64 -80, !dbg !7722
  %44 = bitcast i8* %add.ptr55 to %struct.fc_rport*, !dbg !7722
  store %struct.fc_rport* %44, %struct.fc_rport** %tmp54, align 8, !dbg !7723
  %45 = load %struct.fc_rport*, %struct.fc_rport** %tmp54, align 8, !dbg !7722
  store %struct.fc_rport* %45, %struct.fc_rport** %next_rport, align 8, !dbg !7719
  br label %for.cond56, !dbg !7719

for.cond56:                                       ; preds = %do.end70, %do.end53
  %46 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7725
  %peers57 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %46, i32 0, i32 14, !dbg !7725
  %47 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7725
  %rports58 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %47, i32 0, i32 26, !dbg !7725
  %cmp59 = icmp eq %struct.list_head* %peers57, %rports58, !dbg !7725
  %lnot61 = xor i1 %cmp59, true, !dbg !7725
  br i1 %lnot61, label %for.body62, label %for.end73, !dbg !7719

for.body62:                                       ; preds = %for.cond56
  %48 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7727
  %peers63 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %48, i32 0, i32 14, !dbg !7729
  call void @list_del(%struct.list_head* %peers63) #12, !dbg !7730
  %49 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7731
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %49, i32 0, i32 7, !dbg !7732
  store i32 10, i32* %port_state, align 8, !dbg !7733
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7734
  %51 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7735
  %rport_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %51, i32 0, i32 20, !dbg !7736
  %call64 = call i32 @fc_queue_work(%struct.Scsi_Host* %50, %struct.work_struct* %rport_delete_work) #12, !dbg !7737
  br label %for.inc65, !dbg !7738

for.inc65:                                        ; preds = %for.body62
  %52 = load %struct.fc_rport*, %struct.fc_rport** %next_rport, align 8, !dbg !7725
  store %struct.fc_rport* %52, %struct.fc_rport** %rport, align 8, !dbg !7725
  call void @llvm.dbg.declare(metadata i8** %__mptr66, metadata !7739, metadata !DIExpression()), !dbg !7741
  %53 = load %struct.fc_rport*, %struct.fc_rport** %next_rport, align 8, !dbg !7741
  %peers67 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %53, i32 0, i32 14, !dbg !7741
  %next68 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers67, i32 0, i32 0, !dbg !7741
  %54 = load %struct.list_head*, %struct.list_head** %next68, align 8, !dbg !7741
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !7741
  store i8* %55, i8** %__mptr66, align 8, !dbg !7741
  br label %do.body69, !dbg !7741

do.body69:                                        ; preds = %for.inc65
  br label %do.end70, !dbg !7742

do.end70:                                         ; preds = %do.body69
  %56 = load i8*, i8** %__mptr66, align 8, !dbg !7741
  %add.ptr72 = getelementptr i8, i8* %56, i64 -80, !dbg !7741
  %57 = bitcast i8* %add.ptr72 to %struct.fc_rport*, !dbg !7741
  store %struct.fc_rport* %57, %struct.fc_rport** %tmp71, align 8, !dbg !7742
  %58 = load %struct.fc_rport*, %struct.fc_rport** %tmp71, align 8, !dbg !7741
  store %struct.fc_rport* %58, %struct.fc_rport** %next_rport, align 8, !dbg !7725
  br label %for.cond56, !dbg !7725, !llvm.loop !7744

for.end73:                                        ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata i8** %__mptr74, metadata !7746, metadata !DIExpression()), !dbg !7749
  %59 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7749
  %rport_bindings = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %59, i32 0, i32 27, !dbg !7749
  %next75 = getelementptr inbounds %struct.list_head, %struct.list_head* %rport_bindings, i32 0, i32 0, !dbg !7749
  %60 = load %struct.list_head*, %struct.list_head** %next75, align 8, !dbg !7749
  %61 = bitcast %struct.list_head* %60 to i8*, !dbg !7749
  store i8* %61, i8** %__mptr74, align 8, !dbg !7749
  br label %do.body76, !dbg !7749

do.body76:                                        ; preds = %for.end73
  br label %do.end77, !dbg !7750

do.end77:                                         ; preds = %do.body76
  %62 = load i8*, i8** %__mptr74, align 8, !dbg !7749
  %add.ptr79 = getelementptr i8, i8* %62, i64 -80, !dbg !7749
  %63 = bitcast i8* %add.ptr79 to %struct.fc_rport*, !dbg !7749
  store %struct.fc_rport* %63, %struct.fc_rport** %tmp78, align 8, !dbg !7750
  %64 = load %struct.fc_rport*, %struct.fc_rport** %tmp78, align 8, !dbg !7749
  store %struct.fc_rport* %64, %struct.fc_rport** %rport, align 8, !dbg !7752
  call void @llvm.dbg.declare(metadata i8** %__mptr80, metadata !7753, metadata !DIExpression()), !dbg !7755
  %65 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7755
  %peers81 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %65, i32 0, i32 14, !dbg !7755
  %next82 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers81, i32 0, i32 0, !dbg !7755
  %66 = load %struct.list_head*, %struct.list_head** %next82, align 8, !dbg !7755
  %67 = bitcast %struct.list_head* %66 to i8*, !dbg !7755
  store i8* %67, i8** %__mptr80, align 8, !dbg !7755
  br label %do.body83, !dbg !7755

do.body83:                                        ; preds = %do.end77
  br label %do.end84, !dbg !7756

do.end84:                                         ; preds = %do.body83
  %68 = load i8*, i8** %__mptr80, align 8, !dbg !7755
  %add.ptr86 = getelementptr i8, i8* %68, i64 -80, !dbg !7755
  %69 = bitcast i8* %add.ptr86 to %struct.fc_rport*, !dbg !7755
  store %struct.fc_rport* %69, %struct.fc_rport** %tmp85, align 8, !dbg !7756
  %70 = load %struct.fc_rport*, %struct.fc_rport** %tmp85, align 8, !dbg !7755
  store %struct.fc_rport* %70, %struct.fc_rport** %next_rport, align 8, !dbg !7752
  br label %for.cond87, !dbg !7752

for.cond87:                                       ; preds = %do.end103, %do.end84
  %71 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7758
  %peers88 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %71, i32 0, i32 14, !dbg !7758
  %72 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7758
  %rport_bindings89 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %72, i32 0, i32 27, !dbg !7758
  %cmp90 = icmp eq %struct.list_head* %peers88, %rport_bindings89, !dbg !7758
  %lnot92 = xor i1 %cmp90, true, !dbg !7758
  br i1 %lnot92, label %for.body93, label %for.end106, !dbg !7752

for.body93:                                       ; preds = %for.cond87
  %73 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7760
  %peers94 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %73, i32 0, i32 14, !dbg !7762
  call void @list_del(%struct.list_head* %peers94) #12, !dbg !7763
  %74 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7764
  %port_state95 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %74, i32 0, i32 7, !dbg !7765
  store i32 10, i32* %port_state95, align 8, !dbg !7766
  %75 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7767
  %76 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7768
  %rport_delete_work96 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %76, i32 0, i32 20, !dbg !7769
  %call97 = call i32 @fc_queue_work(%struct.Scsi_Host* %75, %struct.work_struct* %rport_delete_work96) #12, !dbg !7770
  br label %for.inc98, !dbg !7771

for.inc98:                                        ; preds = %for.body93
  %77 = load %struct.fc_rport*, %struct.fc_rport** %next_rport, align 8, !dbg !7758
  store %struct.fc_rport* %77, %struct.fc_rport** %rport, align 8, !dbg !7758
  call void @llvm.dbg.declare(metadata i8** %__mptr99, metadata !7772, metadata !DIExpression()), !dbg !7774
  %78 = load %struct.fc_rport*, %struct.fc_rport** %next_rport, align 8, !dbg !7774
  %peers100 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %78, i32 0, i32 14, !dbg !7774
  %next101 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers100, i32 0, i32 0, !dbg !7774
  %79 = load %struct.list_head*, %struct.list_head** %next101, align 8, !dbg !7774
  %80 = bitcast %struct.list_head* %79 to i8*, !dbg !7774
  store i8* %80, i8** %__mptr99, align 8, !dbg !7774
  br label %do.body102, !dbg !7774

do.body102:                                       ; preds = %for.inc98
  br label %do.end103, !dbg !7775

do.end103:                                        ; preds = %do.body102
  %81 = load i8*, i8** %__mptr99, align 8, !dbg !7774
  %add.ptr105 = getelementptr i8, i8* %81, i64 -80, !dbg !7774
  %82 = bitcast i8* %add.ptr105 to %struct.fc_rport*, !dbg !7774
  store %struct.fc_rport* %82, %struct.fc_rport** %tmp104, align 8, !dbg !7775
  %83 = load %struct.fc_rport*, %struct.fc_rport** %tmp104, align 8, !dbg !7774
  store %struct.fc_rport* %83, %struct.fc_rport** %next_rport, align 8, !dbg !7758
  br label %for.cond87, !dbg !7758, !llvm.loop !7777

for.end106:                                       ; preds = %for.cond87
  %84 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7779
  %host_lock107 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %84, i32 0, i32 4, !dbg !7780
  %85 = load %struct.spinlock*, %struct.spinlock** %host_lock107, align 8, !dbg !7780
  %86 = load i64, i64* %flags, align 8, !dbg !7781
  store %struct.spinlock* %85, %struct.spinlock** %lock.addr.i116, align 8
  store i64 %86, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !7785
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !7785
  store i32 1, i32* %tmp.i, align 4, !dbg !7785
  %87 = load i32, i32* %tmp.i, align 4, !dbg !7785
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !7792
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !7792
  store i32 1, i32* %tmp8.i, align 4, !dbg !7792
  %88 = load i32, i32* %tmp8.i, align 4, !dbg !7792
  %89 = load i64, i64* %flags.addr.i, align 8, !dbg !7794
  call void @arch_local_irq_restore(i64 %89) #11, !dbg !7794
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7795, !srcloc !7797
  %90 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i116, align 8, !dbg !7798
  %91 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %90, i32 0, i32 0, !dbg !7798
  %rlock.i117 = bitcast %union.anon.0* %91 to %struct.raw_spinlock*, !dbg !7798
  %92 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7800
  call void @scsi_flush_work(%struct.Scsi_Host* %92) #12, !dbg !7801
  %93 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7802
  %work_q108 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %93, i32 0, i32 34, !dbg !7804
  %94 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q108, align 8, !dbg !7804
  %tobool = icmp ne %struct.workqueue_struct* %94, null, !dbg !7802
  br i1 %tobool, label %if.then, label %if.end, !dbg !7805

if.then:                                          ; preds = %for.end106
  %95 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7806
  %work_q109 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %95, i32 0, i32 34, !dbg !7808
  %96 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q109, align 8, !dbg !7808
  store %struct.workqueue_struct* %96, %struct.workqueue_struct** %work_q, align 8, !dbg !7809
  %97 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7810
  %work_q110 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %97, i32 0, i32 34, !dbg !7811
  store %struct.workqueue_struct* null, %struct.workqueue_struct** %work_q110, align 8, !dbg !7812
  %98 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q, align 8, !dbg !7813
  call void @destroy_workqueue(%struct.workqueue_struct* %98) #12, !dbg !7814
  br label %if.end, !dbg !7815

if.end:                                           ; preds = %if.then, %for.end106
  %99 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7816
  %devloss_work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %99, i32 0, i32 36, !dbg !7818
  %100 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q, align 8, !dbg !7818
  %tobool111 = icmp ne %struct.workqueue_struct* %100, null, !dbg !7816
  br i1 %tobool111, label %if.then112, label %if.end115, !dbg !7819

if.then112:                                       ; preds = %if.end
  %101 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7820
  %devloss_work_q113 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %101, i32 0, i32 36, !dbg !7822
  %102 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q113, align 8, !dbg !7822
  store %struct.workqueue_struct* %102, %struct.workqueue_struct** %work_q, align 8, !dbg !7823
  %103 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7824
  %devloss_work_q114 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %103, i32 0, i32 36, !dbg !7825
  store %struct.workqueue_struct* null, %struct.workqueue_struct** %devloss_work_q114, align 8, !dbg !7826
  %104 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q, align 8, !dbg !7827
  call void @destroy_workqueue(%struct.workqueue_struct* %104) #12, !dbg !7828
  br label %if.end115, !dbg !7829

if.end115:                                        ; preds = %if.then112, %if.end
  ret void, !dbg !7830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7831 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7835, metadata !DIExpression()), !dbg !7836
  %call = call i64 @arch_local_save_flags() #12, !dbg !7837
  store i64 %call, i64* %f, align 8, !dbg !7838
  call void @arch_local_irq_disable() #12, !dbg !7839
  %0 = load i64, i64* %f, align 8, !dbg !7840
  ret i64 %0, !dbg !7841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_queue_work(%struct.Scsi_Host* %shost, %struct.work_struct* %work) #0 !dbg !7842 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7845, metadata !DIExpression()), !dbg !7846
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7847, metadata !DIExpression()), !dbg !7848
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7849
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !7849
  %1 = load i8*, i8** %shost_data, align 8, !dbg !7849
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !7849
  %work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %2, i32 0, i32 34, !dbg !7849
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q, align 8, !dbg !7849
  %tobool = icmp ne %struct.workqueue_struct* %3, null, !dbg !7849
  %lnot = xor i1 %tobool, true, !dbg !7849
  %lnot1 = xor i1 %lnot, true, !dbg !7849
  %lnot2 = xor i1 %lnot1, true, !dbg !7849
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7849
  %conv = sext i32 %lnot.ext to i64, !dbg !7849
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7849
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7851

if.then:                                          ; preds = %entry
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7852
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 10, !dbg !7854
  %5 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !7854
  %name = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %5, i32 0, i32 1, !dbg !7855
  %6 = load i8*, i8** %name, align 8, !dbg !7855
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.174, i64 0, i64 0), i8* %6) #13, !dbg !7856
  call void @dump_stack() #13, !dbg !7857
  store i32 -22, i32* %retval, align 4, !dbg !7858
  br label %return, !dbg !7858

if.end:                                           ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7859
  %shost_data4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 49, !dbg !7859
  %8 = load i8*, i8** %shost_data4, align 8, !dbg !7859
  %9 = bitcast i8* %8 to %struct.fc_host_attrs*, !dbg !7859
  %work_q5 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 34, !dbg !7859
  %10 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q5, align 8, !dbg !7859
  %11 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7860
  %call6 = call zeroext i1 @queue_work(%struct.workqueue_struct* %10, %struct.work_struct* %11) #12, !dbg !7861
  %conv7 = zext i1 %call6 to i32, !dbg !7861
  store i32 %conv7, i32* %retval, align 4, !dbg !7862
  br label %return, !dbg !7862

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7863
  ret i32 %12, !dbg !7863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !7864 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7870
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !7871
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7872
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7873
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !7874
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7875
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !7876
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: noredzone
declare dso_local void @scsi_flush_work(%struct.Scsi_Host*) #2

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.fc_rport* @fc_remote_port_add(%struct.Scsi_Host* %shost, i32 %channel, %struct.fc_rport_identifiers* %ids) #0 !dbg !7879 {
entry:
  %lock.addr.i270 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i270, metadata !7624, metadata !DIExpression()), !dbg !7889
  %flags.addr.i271 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i271, metadata !7631, metadata !DIExpression()), !dbg !7891
  %tmp.i272 = alloca i32, align 4
  %tmp8.i273 = alloca i32, align 4
  %lock.addr.i265 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i265, metadata !7624, metadata !DIExpression()), !dbg !7892
  %flags.addr.i266 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i266, metadata !7631, metadata !DIExpression()), !dbg !7898
  %tmp.i267 = alloca i32, align 4
  %tmp8.i268 = alloca i32, align 4
  %lock.addr.i260 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i260, metadata !7624, metadata !DIExpression()), !dbg !7899
  %flags.addr.i261 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i261, metadata !7631, metadata !DIExpression()), !dbg !7910
  %tmp.i262 = alloca i32, align 4
  %tmp8.i263 = alloca i32, align 4
  %lock.addr.i258 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i258, metadata !7633, metadata !DIExpression()), !dbg !7911
  %lock.addr.i253 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i253, metadata !7624, metadata !DIExpression()), !dbg !7918
  %flags.addr.i254 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i254, metadata !7631, metadata !DIExpression()), !dbg !7920
  %tmp.i255 = alloca i32, align 4
  %tmp8.i256 = alloca i32, align 4
  %lock.addr.i251 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i251, metadata !7633, metadata !DIExpression()), !dbg !7921
  %lock.addr.i249 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i249, metadata !7624, metadata !DIExpression()), !dbg !7928
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !7930
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !7931
  %retval = alloca %struct.fc_rport*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %ids.addr = alloca %struct.fc_rport_identifiers*, align 8
  %fci = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %flags = alloca i64, align 8
  %match = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__mptr22 = alloca i8*, align 8
  %tmp25 = alloca %struct.fc_rport*, align 8
  %__dummy85 = alloca i64, align 8
  %__dummy286 = alloca i64, align 8
  %tmp89 = alloca i32, align 4
  %__dummy93 = alloca i64, align 8
  %__dummy294 = alloca i64, align 8
  %tmp97 = alloca i32, align 4
  %__dummy121 = alloca i64, align 8
  %__dummy2122 = alloca i64, align 8
  %tmp125 = alloca i32, align 4
  %__dummy129 = alloca i64, align 8
  %__dummy2130 = alloca i64, align 8
  %tmp133 = alloca i32, align 4
  %__mptr154 = alloca i8*, align 8
  %tmp159 = alloca %struct.fc_rport*, align 8
  %__mptr165 = alloca i8*, align 8
  %tmp169 = alloca %struct.fc_rport*, align 8
  %__mptr213 = alloca i8*, align 8
  %tmp218 = alloca %struct.fc_rport*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store %struct.fc_rport_identifiers* %ids, %struct.fc_rport_identifiers** %ids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport_identifiers** %ids.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %fci, metadata !7944, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7946, metadata !DIExpression()), !dbg !7948
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7948
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 11, !dbg !7948
  %1 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !7948
  %2 = bitcast %struct.scsi_transport_template* %1 to i8*, !dbg !7948
  store i8* %2, i8** %__mptr, align 8, !dbg !7948
  br label %do.body, !dbg !7948

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7949

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7948
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7948
  %4 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !7948
  store %struct.fc_internal* %4, %struct.fc_internal** %tmp, align 8, !dbg !7949
  %5 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !7948
  store %struct.fc_internal* %5, %struct.fc_internal** %fci, align 8, !dbg !7945
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !7951, metadata !DIExpression()), !dbg !7952
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7953
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 49, !dbg !7953
  %7 = load i8*, i8** %shost_data, align 8, !dbg !7953
  %8 = bitcast i8* %7 to %struct.fc_host_attrs*, !dbg !7953
  store %struct.fc_host_attrs* %8, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7952
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata i32* %match, metadata !7958, metadata !DIExpression()), !dbg !7959
  store i32 0, i32* %match, align 4, !dbg !7959
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7960
  call void @fc_flush_work(%struct.Scsi_Host* %9) #12, !dbg !7961
  br label %do.body1, !dbg !7962

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !7963

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7964, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7967, metadata !DIExpression()), !dbg !7966
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7966
  %conv = zext i1 %cmp to i32, !dbg !7966
  store i32 1, i32* %tmp3, align 4, !dbg !7966
  %10 = load i32, i32* %tmp3, align 4, !dbg !7966
  br label %do.body4, !dbg !7968

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !7969

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !7970

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !7972, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !7976, metadata !DIExpression()), !dbg !7975
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !7975
  %conv10 = zext i1 %cmp9 to i32, !dbg !7975
  store i32 1, i32* %tmp11, align 4, !dbg !7975
  %11 = load i32, i32* %tmp11, align 4, !dbg !7975
  %call = call i64 @arch_local_irq_save() #12, !dbg !7977
  store i64 %call, i64* %flags, align 8, !dbg !7977
  br label %do.end12, !dbg !7977

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !7970

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !7969

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7978, !srcloc !7979
  br label %do.body15, !dbg !7978

do.body15:                                        ; preds = %do.body14
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7980
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 4, !dbg !7980
  %13 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !7980
  store %struct.spinlock* %13, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7981
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !7982
  %rlock.i = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !7982
  br label %do.end17, !dbg !7980

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !7978

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7969

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !7968

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !7963

do.end21:                                         ; preds = %do.end20
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !7983, metadata !DIExpression()), !dbg !7985
  %16 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7985
  %rports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %16, i32 0, i32 26, !dbg !7985
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rports, i32 0, i32 0, !dbg !7985
  %17 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7985
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !7985
  store i8* %18, i8** %__mptr22, align 8, !dbg !7985
  br label %do.body23, !dbg !7985

do.body23:                                        ; preds = %do.end21
  br label %do.end24, !dbg !7986

do.end24:                                         ; preds = %do.body23
  %19 = load i8*, i8** %__mptr22, align 8, !dbg !7985
  %add.ptr26 = getelementptr i8, i8* %19, i64 -80, !dbg !7985
  %20 = bitcast i8* %add.ptr26 to %struct.fc_rport*, !dbg !7985
  store %struct.fc_rport* %20, %struct.fc_rport** %tmp25, align 8, !dbg !7986
  %21 = load %struct.fc_rport*, %struct.fc_rport** %tmp25, align 8, !dbg !7985
  store %struct.fc_rport* %21, %struct.fc_rport** %rport, align 8, !dbg !7988
  br label %for.cond, !dbg !7988

for.cond:                                         ; preds = %do.end158, %do.end24
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7989
  %peers = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %22, i32 0, i32 14, !dbg !7989
  %23 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !7989
  %rports27 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %23, i32 0, i32 26, !dbg !7989
  %cmp28 = icmp eq %struct.list_head* %peers, %rports27, !dbg !7989
  %lnot = xor i1 %cmp28, true, !dbg !7989
  br i1 %lnot, label %for.body, label %for.end, !dbg !7988

for.body:                                         ; preds = %for.cond
  %24 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7990
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %24, i32 0, i32 7, !dbg !7991
  %25 = load i32, i32* %port_state, align 8, !dbg !7991
  %cmp30 = icmp eq i32 %25, 4, !dbg !7992
  br i1 %cmp30, label %land.lhs.true, label %lor.lhs.false, !dbg !7993

lor.lhs.false:                                    ; preds = %for.body
  %26 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7994
  %port_state32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %26, i32 0, i32 7, !dbg !7995
  %27 = load i32, i32* %port_state32, align 8, !dbg !7995
  %cmp33 = icmp eq i32 %27, 1, !dbg !7996
  br i1 %cmp33, label %land.lhs.true, label %if.end153, !dbg !7997

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %28 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !7998
  %channel35 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %28, i32 0, i32 11, !dbg !7999
  %29 = load i32, i32* %channel35, align 8, !dbg !7999
  %30 = load i32, i32* %channel.addr, align 4, !dbg !8000
  %cmp36 = icmp eq i32 %29, %30, !dbg !8001
  br i1 %cmp36, label %if.then, label %if.end153, !dbg !8002

if.then:                                          ; preds = %land.lhs.true
  %31 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8003
  %tgtid_bind_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %31, i32 0, i32 25, !dbg !8004
  %32 = load i32, i32* %tgtid_bind_type, align 4, !dbg !8004
  switch i32 %32, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb42
    i32 3, label %sw.bb48
  ], !dbg !8005

sw.bb:                                            ; preds = %if.then, %if.then
  %33 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8006
  %port_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %33, i32 0, i32 4, !dbg !8009
  %34 = load i64, i64* %port_name, align 8, !dbg !8009
  %35 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8010
  %port_name38 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %35, i32 0, i32 1, !dbg !8011
  %36 = load i64, i64* %port_name38, align 8, !dbg !8011
  %cmp39 = icmp eq i64 %34, %36, !dbg !8012
  br i1 %cmp39, label %if.then41, label %if.end, !dbg !8013

if.then41:                                        ; preds = %sw.bb
  store i32 1, i32* %match, align 4, !dbg !8014
  br label %if.end, !dbg !8015

if.end:                                           ; preds = %if.then41, %sw.bb
  br label %sw.epilog, !dbg !8016

sw.bb42:                                          ; preds = %if.then
  %37 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8017
  %node_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %37, i32 0, i32 3, !dbg !8019
  %38 = load i64, i64* %node_name, align 8, !dbg !8019
  %39 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8020
  %node_name43 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %39, i32 0, i32 0, !dbg !8021
  %40 = load i64, i64* %node_name43, align 8, !dbg !8021
  %cmp44 = icmp eq i64 %38, %40, !dbg !8022
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8023

if.then46:                                        ; preds = %sw.bb42
  store i32 1, i32* %match, align 4, !dbg !8024
  br label %if.end47, !dbg !8025

if.end47:                                         ; preds = %if.then46, %sw.bb42
  br label %sw.epilog, !dbg !8026

sw.bb48:                                          ; preds = %if.then
  %41 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8027
  %port_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %41, i32 0, i32 5, !dbg !8029
  %42 = load i32, i32* %port_id, align 8, !dbg !8029
  %43 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8030
  %port_id49 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %43, i32 0, i32 2, !dbg !8031
  %44 = load i32, i32* %port_id49, align 8, !dbg !8031
  %cmp50 = icmp eq i32 %42, %44, !dbg !8032
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !8033

if.then52:                                        ; preds = %sw.bb48
  store i32 1, i32* %match, align 4, !dbg !8034
  br label %if.end53, !dbg !8035

if.end53:                                         ; preds = %if.then52, %sw.bb48
  br label %sw.epilog, !dbg !8036

sw.epilog:                                        ; preds = %if.then, %if.end53, %if.end47, %if.end
  %45 = load i32, i32* %match, align 4, !dbg !8037
  %tobool = icmp ne i32 %45, 0, !dbg !8037
  br i1 %tobool, label %if.then54, label %if.end152, !dbg !8038

if.then54:                                        ; preds = %sw.epilog
  %46 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8039
  %node_name55 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %46, i32 0, i32 3, !dbg !8040
  %47 = bitcast i64* %node_name55 to i8*, !dbg !8041
  %48 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8042
  %node_name56 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %48, i32 0, i32 0, !dbg !8043
  %49 = bitcast i64* %node_name56 to i8*, !dbg !8041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %49, i64 8, i1 false), !dbg !8041
  %50 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8044
  %port_name57 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %50, i32 0, i32 4, !dbg !8045
  %51 = bitcast i64* %port_name57 to i8*, !dbg !8046
  %52 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8047
  %port_name58 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %52, i32 0, i32 1, !dbg !8048
  %53 = bitcast i64* %port_name58 to i8*, !dbg !8046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %53, i64 8, i1 false), !dbg !8046
  %54 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8049
  %port_id59 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %54, i32 0, i32 2, !dbg !8050
  %55 = load i32, i32* %port_id59, align 8, !dbg !8050
  %56 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8051
  %port_id60 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %56, i32 0, i32 5, !dbg !8052
  store i32 %55, i32* %port_id60, align 8, !dbg !8053
  %57 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8054
  %port_state61 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %57, i32 0, i32 7, !dbg !8055
  store i32 2, i32* %port_state61, align 8, !dbg !8056
  %58 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8057
  %roles = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %58, i32 0, i32 3, !dbg !8058
  %59 = load i32, i32* %roles, align 4, !dbg !8058
  %60 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8059
  %roles62 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %60, i32 0, i32 6, !dbg !8060
  store i32 %59, i32* %roles62, align 4, !dbg !8061
  %61 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8062
  %host_lock63 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %61, i32 0, i32 4, !dbg !8063
  %62 = load %struct.spinlock*, %struct.spinlock** %host_lock63, align 8, !dbg !8063
  %63 = load i64, i64* %flags, align 8, !dbg !8064
  store %struct.spinlock* %62, %struct.spinlock** %lock.addr.i249, align 8
  store i64 %63, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8065
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8065
  store i32 1, i32* %tmp.i, align 4, !dbg !8065
  %64 = load i32, i32* %tmp.i, align 4, !dbg !8065
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8066
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8066
  store i32 1, i32* %tmp8.i, align 4, !dbg !8066
  %65 = load i32, i32* %tmp8.i, align 4, !dbg !8066
  %66 = load i64, i64* %flags.addr.i, align 8, !dbg !8067
  call void @arch_local_irq_restore(i64 %66) #11, !dbg !8067
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8068, !srcloc !7797
  %67 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i249, align 8, !dbg !8069
  %68 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %67, i32 0, i32 0, !dbg !8069
  %rlock.i250 = bitcast %union.anon.0* %68 to %struct.raw_spinlock*, !dbg !8069
  %69 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !8070
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %69, i32 0, i32 1, !dbg !8072
  %70 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !8072
  %dd_fcrport_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %70, i32 0, i32 24, !dbg !8073
  %71 = load i32, i32* %dd_fcrport_size, align 8, !dbg !8073
  %tobool64 = icmp ne i32 %71, 0, !dbg !8070
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !8074

if.then65:                                        ; preds = %if.then54
  %72 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8075
  %dd_data = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %72, i32 0, i32 10, !dbg !8076
  %73 = load i8*, i8** %dd_data, align 8, !dbg !8076
  %74 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !8077
  %f66 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %74, i32 0, i32 1, !dbg !8078
  %75 = load %struct.fc_function_template*, %struct.fc_function_template** %f66, align 8, !dbg !8078
  %dd_fcrport_size67 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %75, i32 0, i32 24, !dbg !8079
  %76 = load i32, i32* %dd_fcrport_size67, align 8, !dbg !8079
  %conv68 = zext i32 %76 to i64, !dbg !8077
  call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 0, i64 %conv68, i1 false), !dbg !8080
  br label %if.end69, !dbg !8080

if.end69:                                         ; preds = %if.then65, %if.then54
  %77 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8081
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %77, i32 0, i32 8, !dbg !8083
  %78 = load i32, i32* %scsi_target_id, align 4, !dbg !8083
  %cmp70 = icmp ne i32 %78, -1, !dbg !8084
  br i1 %cmp70, label %land.lhs.true72, label %if.end76, !dbg !8085

land.lhs.true72:                                  ; preds = %if.end69
  %79 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8086
  %roles73 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %79, i32 0, i32 3, !dbg !8087
  %80 = load i32, i32* %roles73, align 4, !dbg !8087
  %and = and i32 %80, 1, !dbg !8088
  %tobool74 = icmp ne i32 %and, 0, !dbg !8088
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !8089

if.then75:                                        ; preds = %land.lhs.true72
  %81 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8090
  store %struct.fc_rport* %81, %struct.fc_rport** %retval, align 8, !dbg !8091
  br label %return, !dbg !8091

if.end76:                                         ; preds = %land.lhs.true72, %if.end69
  %82 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8092
  %fail_io_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %82, i32 0, i32 18, !dbg !8094
  %call77 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %fail_io_work) #12, !dbg !8095
  br i1 %call77, label %if.end79, label %if.then78, !dbg !8096

if.then78:                                        ; preds = %if.end76
  %83 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8097
  call void @fc_flush_devloss(%struct.Scsi_Host* %83) #12, !dbg !8098
  br label %if.end79, !dbg !8098

if.end79:                                         ; preds = %if.then78, %if.end76
  %84 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8099
  %dev_loss_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %84, i32 0, i32 16, !dbg !8101
  %call80 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %dev_loss_work) #12, !dbg !8102
  br i1 %call80, label %if.end82, label %if.then81, !dbg !8103

if.then81:                                        ; preds = %if.end79
  %85 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8104
  call void @fc_flush_devloss(%struct.Scsi_Host* %85) #12, !dbg !8105
  br label %if.end82, !dbg !8105

if.end82:                                         ; preds = %if.then81, %if.end79
  br label %do.body83, !dbg !8106

do.body83:                                        ; preds = %if.end82
  br label %do.body84, !dbg !8107

do.body84:                                        ; preds = %do.body83
  call void @llvm.dbg.declare(metadata i64* %__dummy85, metadata !8108, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.declare(metadata i64* %__dummy286, metadata !8111, metadata !DIExpression()), !dbg !8110
  %cmp87 = icmp eq i64* %__dummy85, %__dummy286, !dbg !8110
  %conv88 = zext i1 %cmp87 to i32, !dbg !8110
  store i32 1, i32* %tmp89, align 4, !dbg !8110
  %86 = load i32, i32* %tmp89, align 4, !dbg !8110
  br label %do.body90, !dbg !8112

do.body90:                                        ; preds = %do.body84
  br label %do.body91, !dbg !8113

do.body91:                                        ; preds = %do.body90
  br label %do.body92, !dbg !8114

do.body92:                                        ; preds = %do.body91
  call void @llvm.dbg.declare(metadata i64* %__dummy93, metadata !8116, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.declare(metadata i64* %__dummy294, metadata !8120, metadata !DIExpression()), !dbg !8119
  %cmp95 = icmp eq i64* %__dummy93, %__dummy294, !dbg !8119
  %conv96 = zext i1 %cmp95 to i32, !dbg !8119
  store i32 1, i32* %tmp97, align 4, !dbg !8119
  %87 = load i32, i32* %tmp97, align 4, !dbg !8119
  %call98 = call i64 @arch_local_irq_save() #12, !dbg !8121
  store i64 %call98, i64* %flags, align 8, !dbg !8121
  br label %do.end99, !dbg !8121

do.end99:                                         ; preds = %do.body92
  br label %do.end100, !dbg !8114

do.end100:                                        ; preds = %do.end99
  br label %do.body101, !dbg !8113

do.body101:                                       ; preds = %do.end100
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8122, !srcloc !8123
  br label %do.body102, !dbg !8122

do.body102:                                       ; preds = %do.body101
  %88 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8124
  %host_lock103 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %88, i32 0, i32 4, !dbg !8124
  %89 = load %struct.spinlock*, %struct.spinlock** %host_lock103, align 8, !dbg !8124
  store %struct.spinlock* %89, %struct.spinlock** %lock.addr.i251, align 8
  %90 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i251, align 8, !dbg !8125
  %91 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %90, i32 0, i32 0, !dbg !8126
  %rlock.i252 = bitcast %union.anon.0* %91 to %struct.raw_spinlock*, !dbg !8126
  br label %do.end105, !dbg !8124

do.end105:                                        ; preds = %do.body102
  br label %do.end106, !dbg !8122

do.end106:                                        ; preds = %do.end105
  br label %do.end107, !dbg !8113

do.end107:                                        ; preds = %do.end106
  br label %do.end108, !dbg !8112

do.end108:                                        ; preds = %do.end107
  br label %do.end109, !dbg !8107

do.end109:                                        ; preds = %do.end108
  %92 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8127
  %flags110 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %92, i32 0, i32 13, !dbg !8128
  %93 = load i8, i8* %flags110, align 8, !dbg !8129
  %conv111 = zext i8 %93 to i32, !dbg !8129
  %and112 = and i32 %conv111, -14, !dbg !8129
  %conv113 = trunc i32 %and112 to i8, !dbg !8129
  store i8 %conv113, i8* %flags110, align 8, !dbg !8129
  %94 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8130
  %host_lock114 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %94, i32 0, i32 4, !dbg !8131
  %95 = load %struct.spinlock*, %struct.spinlock** %host_lock114, align 8, !dbg !8131
  %96 = load i64, i64* %flags, align 8, !dbg !8132
  store %struct.spinlock* %95, %struct.spinlock** %lock.addr.i253, align 8
  store i64 %96, i64* %flags.addr.i254, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8133
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8133
  store i32 1, i32* %tmp.i255, align 4, !dbg !8133
  %97 = load i32, i32* %tmp.i255, align 4, !dbg !8133
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8134
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8134
  store i32 1, i32* %tmp8.i256, align 4, !dbg !8134
  %98 = load i32, i32* %tmp8.i256, align 4, !dbg !8134
  %99 = load i64, i64* %flags.addr.i254, align 8, !dbg !8135
  call void @arch_local_irq_restore(i64 %99) #11, !dbg !8135
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8136, !srcloc !7797
  %100 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i253, align 8, !dbg !8137
  %101 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %100, i32 0, i32 0, !dbg !8137
  %rlock.i257 = bitcast %union.anon.0* %101 to %struct.raw_spinlock*, !dbg !8137
  %102 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8138
  %scsi_target_id115 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %102, i32 0, i32 8, !dbg !8139
  %103 = load i32, i32* %scsi_target_id115, align 4, !dbg !8139
  %cmp116 = icmp ne i32 %103, -1, !dbg !8140
  br i1 %cmp116, label %if.then118, label %if.end151, !dbg !8141

if.then118:                                       ; preds = %do.end109
  %104 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8142
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %104, i32 0, i32 15, !dbg !8143
  call void @scsi_target_unblock(%struct.device* %dev, i32 2) #12, !dbg !8144
  br label %do.body119, !dbg !8145

do.body119:                                       ; preds = %if.then118
  br label %do.body120, !dbg !8146

do.body120:                                       ; preds = %do.body119
  call void @llvm.dbg.declare(metadata i64* %__dummy121, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata i64* %__dummy2122, metadata !8150, metadata !DIExpression()), !dbg !8149
  %cmp123 = icmp eq i64* %__dummy121, %__dummy2122, !dbg !8149
  %conv124 = zext i1 %cmp123 to i32, !dbg !8149
  store i32 1, i32* %tmp125, align 4, !dbg !8149
  %105 = load i32, i32* %tmp125, align 4, !dbg !8149
  br label %do.body126, !dbg !8151

do.body126:                                       ; preds = %do.body120
  br label %do.body127, !dbg !8152

do.body127:                                       ; preds = %do.body126
  br label %do.body128, !dbg !8153

do.body128:                                       ; preds = %do.body127
  call void @llvm.dbg.declare(metadata i64* %__dummy129, metadata !8155, metadata !DIExpression()), !dbg !8158
  call void @llvm.dbg.declare(metadata i64* %__dummy2130, metadata !8159, metadata !DIExpression()), !dbg !8158
  %cmp131 = icmp eq i64* %__dummy129, %__dummy2130, !dbg !8158
  %conv132 = zext i1 %cmp131 to i32, !dbg !8158
  store i32 1, i32* %tmp133, align 4, !dbg !8158
  %106 = load i32, i32* %tmp133, align 4, !dbg !8158
  %call134 = call i64 @arch_local_irq_save() #12, !dbg !8160
  store i64 %call134, i64* %flags, align 8, !dbg !8160
  br label %do.end135, !dbg !8160

do.end135:                                        ; preds = %do.body128
  br label %do.end136, !dbg !8153

do.end136:                                        ; preds = %do.end135
  br label %do.body137, !dbg !8152

do.body137:                                       ; preds = %do.end136
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8161, !srcloc !8162
  br label %do.body138, !dbg !8161

do.body138:                                       ; preds = %do.body137
  %107 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8163
  %host_lock139 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %107, i32 0, i32 4, !dbg !8163
  %108 = load %struct.spinlock*, %struct.spinlock** %host_lock139, align 8, !dbg !8163
  store %struct.spinlock* %108, %struct.spinlock** %lock.addr.i258, align 8
  %109 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i258, align 8, !dbg !8164
  %110 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %109, i32 0, i32 0, !dbg !8165
  %rlock.i259 = bitcast %union.anon.0* %110 to %struct.raw_spinlock*, !dbg !8165
  br label %do.end141, !dbg !8163

do.end141:                                        ; preds = %do.body138
  br label %do.end142, !dbg !8161

do.end142:                                        ; preds = %do.end141
  br label %do.end143, !dbg !8152

do.end143:                                        ; preds = %do.end142
  br label %do.end144, !dbg !8151

do.end144:                                        ; preds = %do.end143
  br label %do.end145, !dbg !8146

do.end145:                                        ; preds = %do.end144
  %111 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8166
  %flags146 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %111, i32 0, i32 13, !dbg !8167
  %112 = load i8, i8* %flags146, align 8, !dbg !8168
  %conv147 = zext i8 %112 to i32, !dbg !8168
  %or = or i32 %conv147, 2, !dbg !8168
  %conv148 = trunc i32 %or to i8, !dbg !8168
  store i8 %conv148, i8* %flags146, align 8, !dbg !8168
  %113 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8169
  %114 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8170
  %scan_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %114, i32 0, i32 17, !dbg !8171
  %call149 = call i32 @scsi_queue_work(%struct.Scsi_Host* %113, %struct.work_struct* %scan_work) #12, !dbg !8172
  %115 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8173
  %host_lock150 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %115, i32 0, i32 4, !dbg !8174
  %116 = load %struct.spinlock*, %struct.spinlock** %host_lock150, align 8, !dbg !8174
  %117 = load i64, i64* %flags, align 8, !dbg !8175
  store %struct.spinlock* %116, %struct.spinlock** %lock.addr.i260, align 8
  store i64 %117, i64* %flags.addr.i261, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8176
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8176
  store i32 1, i32* %tmp.i262, align 4, !dbg !8176
  %118 = load i32, i32* %tmp.i262, align 4, !dbg !8176
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8177
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8177
  store i32 1, i32* %tmp8.i263, align 4, !dbg !8177
  %119 = load i32, i32* %tmp8.i263, align 4, !dbg !8177
  %120 = load i64, i64* %flags.addr.i261, align 8, !dbg !8178
  call void @arch_local_irq_restore(i64 %120) #11, !dbg !8178
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8179, !srcloc !7797
  %121 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i260, align 8, !dbg !8180
  %122 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %121, i32 0, i32 0, !dbg !8180
  %rlock.i264 = bitcast %union.anon.0* %122 to %struct.raw_spinlock*, !dbg !8180
  br label %if.end151, !dbg !8181

if.end151:                                        ; preds = %do.end145, %do.end109
  %123 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8182
  call void @fc_bsg_goose_queue(%struct.fc_rport* %123) #12, !dbg !8183
  %124 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8184
  store %struct.fc_rport* %124, %struct.fc_rport** %retval, align 8, !dbg !8185
  br label %return, !dbg !8185

if.end152:                                        ; preds = %sw.epilog
  br label %if.end153, !dbg !8186

if.end153:                                        ; preds = %if.end152, %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !8187

for.inc:                                          ; preds = %if.end153
  call void @llvm.dbg.declare(metadata i8** %__mptr154, metadata !8188, metadata !DIExpression()), !dbg !8190
  %125 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8190
  %peers155 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %125, i32 0, i32 14, !dbg !8190
  %next156 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers155, i32 0, i32 0, !dbg !8190
  %126 = load %struct.list_head*, %struct.list_head** %next156, align 8, !dbg !8190
  %127 = bitcast %struct.list_head* %126 to i8*, !dbg !8190
  store i8* %127, i8** %__mptr154, align 8, !dbg !8190
  br label %do.body157, !dbg !8190

do.body157:                                       ; preds = %for.inc
  br label %do.end158, !dbg !8191

do.end158:                                        ; preds = %do.body157
  %128 = load i8*, i8** %__mptr154, align 8, !dbg !8190
  %add.ptr160 = getelementptr i8, i8* %128, i64 -80, !dbg !8190
  %129 = bitcast i8* %add.ptr160 to %struct.fc_rport*, !dbg !8190
  store %struct.fc_rport* %129, %struct.fc_rport** %tmp159, align 8, !dbg !8191
  %130 = load %struct.fc_rport*, %struct.fc_rport** %tmp159, align 8, !dbg !8190
  store %struct.fc_rport* %130, %struct.fc_rport** %rport, align 8, !dbg !7989
  br label %for.cond, !dbg !7989, !llvm.loop !8193

for.end:                                          ; preds = %for.cond
  %131 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8195
  %tgtid_bind_type161 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %131, i32 0, i32 25, !dbg !8196
  %132 = load i32, i32* %tgtid_bind_type161, align 4, !dbg !8196
  %cmp162 = icmp ne i32 %132, 0, !dbg !8197
  br i1 %cmp162, label %if.then164, label %if.end246, !dbg !8198

if.then164:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr165, metadata !8199, metadata !DIExpression()), !dbg !8202
  %133 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8202
  %rport_bindings = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %133, i32 0, i32 27, !dbg !8202
  %next166 = getelementptr inbounds %struct.list_head, %struct.list_head* %rport_bindings, i32 0, i32 0, !dbg !8202
  %134 = load %struct.list_head*, %struct.list_head** %next166, align 8, !dbg !8202
  %135 = bitcast %struct.list_head* %134 to i8*, !dbg !8202
  store i8* %135, i8** %__mptr165, align 8, !dbg !8202
  br label %do.body167, !dbg !8202

do.body167:                                       ; preds = %if.then164
  br label %do.end168, !dbg !8203

do.end168:                                        ; preds = %do.body167
  %136 = load i8*, i8** %__mptr165, align 8, !dbg !8202
  %add.ptr170 = getelementptr i8, i8* %136, i64 -80, !dbg !8202
  %137 = bitcast i8* %add.ptr170 to %struct.fc_rport*, !dbg !8202
  store %struct.fc_rport* %137, %struct.fc_rport** %tmp169, align 8, !dbg !8203
  %138 = load %struct.fc_rport*, %struct.fc_rport** %tmp169, align 8, !dbg !8202
  store %struct.fc_rport* %138, %struct.fc_rport** %rport, align 8, !dbg !8205
  br label %for.cond171, !dbg !8205

for.cond171:                                      ; preds = %do.end217, %do.end168
  %139 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8206
  %peers172 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %139, i32 0, i32 14, !dbg !8206
  %140 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8206
  %rport_bindings173 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %140, i32 0, i32 27, !dbg !8206
  %cmp174 = icmp eq %struct.list_head* %peers172, %rport_bindings173, !dbg !8206
  %lnot176 = xor i1 %cmp174, true, !dbg !8206
  br i1 %lnot176, label %for.body177, label %for.end220, !dbg !8205

for.body177:                                      ; preds = %for.cond171
  %141 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8208
  %channel178 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %141, i32 0, i32 11, !dbg !8211
  %142 = load i32, i32* %channel178, align 8, !dbg !8211
  %143 = load i32, i32* %channel.addr, align 4, !dbg !8212
  %cmp179 = icmp ne i32 %142, %143, !dbg !8213
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !8214

if.then181:                                       ; preds = %for.body177
  br label %for.inc212, !dbg !8215

if.end182:                                        ; preds = %for.body177
  %144 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8216
  %tgtid_bind_type183 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %144, i32 0, i32 25, !dbg !8217
  %145 = load i32, i32* %tgtid_bind_type183, align 4, !dbg !8217
  switch i32 %145, label %sw.epilog206 [
    i32 1, label %sw.bb184
    i32 2, label %sw.bb191
    i32 3, label %sw.bb198
    i32 0, label %sw.bb205
  ], !dbg !8218

sw.bb184:                                         ; preds = %if.end182
  %146 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8219
  %port_name185 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %146, i32 0, i32 4, !dbg !8222
  %147 = load i64, i64* %port_name185, align 8, !dbg !8222
  %148 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8223
  %port_name186 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %148, i32 0, i32 1, !dbg !8224
  %149 = load i64, i64* %port_name186, align 8, !dbg !8224
  %cmp187 = icmp eq i64 %147, %149, !dbg !8225
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !8226

if.then189:                                       ; preds = %sw.bb184
  store i32 1, i32* %match, align 4, !dbg !8227
  br label %if.end190, !dbg !8228

if.end190:                                        ; preds = %if.then189, %sw.bb184
  br label %sw.epilog206, !dbg !8229

sw.bb191:                                         ; preds = %if.end182
  %150 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8230
  %node_name192 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %150, i32 0, i32 3, !dbg !8232
  %151 = load i64, i64* %node_name192, align 8, !dbg !8232
  %152 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8233
  %node_name193 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %152, i32 0, i32 0, !dbg !8234
  %153 = load i64, i64* %node_name193, align 8, !dbg !8234
  %cmp194 = icmp eq i64 %151, %153, !dbg !8235
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !8236

if.then196:                                       ; preds = %sw.bb191
  store i32 1, i32* %match, align 4, !dbg !8237
  br label %if.end197, !dbg !8238

if.end197:                                        ; preds = %if.then196, %sw.bb191
  br label %sw.epilog206, !dbg !8239

sw.bb198:                                         ; preds = %if.end182
  %154 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8240
  %port_id199 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %154, i32 0, i32 5, !dbg !8242
  %155 = load i32, i32* %port_id199, align 8, !dbg !8242
  %156 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8243
  %port_id200 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %156, i32 0, i32 2, !dbg !8244
  %157 = load i32, i32* %port_id200, align 8, !dbg !8244
  %cmp201 = icmp eq i32 %155, %157, !dbg !8245
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !8246

if.then203:                                       ; preds = %sw.bb198
  store i32 1, i32* %match, align 4, !dbg !8247
  br label %if.end204, !dbg !8248

if.end204:                                        ; preds = %if.then203, %sw.bb198
  br label %sw.epilog206, !dbg !8249

sw.bb205:                                         ; preds = %if.end182
  br label %sw.epilog206, !dbg !8250

sw.epilog206:                                     ; preds = %if.end182, %sw.bb205, %if.end204, %if.end197, %if.end190
  %158 = load i32, i32* %match, align 4, !dbg !8251
  %tobool207 = icmp ne i32 %158, 0, !dbg !8251
  br i1 %tobool207, label %if.then208, label %if.end211, !dbg !8253

if.then208:                                       ; preds = %sw.epilog206
  %159 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8254
  %peers209 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %159, i32 0, i32 14, !dbg !8256
  %160 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8257
  %rports210 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %160, i32 0, i32 26, !dbg !8258
  call void @list_move_tail(%struct.list_head* %peers209, %struct.list_head* %rports210) #12, !dbg !8259
  br label %for.end220, !dbg !8260

if.end211:                                        ; preds = %sw.epilog206
  br label %for.inc212, !dbg !8261

for.inc212:                                       ; preds = %if.end211, %if.then181
  call void @llvm.dbg.declare(metadata i8** %__mptr213, metadata !8262, metadata !DIExpression()), !dbg !8264
  %161 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8264
  %peers214 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %161, i32 0, i32 14, !dbg !8264
  %next215 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers214, i32 0, i32 0, !dbg !8264
  %162 = load %struct.list_head*, %struct.list_head** %next215, align 8, !dbg !8264
  %163 = bitcast %struct.list_head* %162 to i8*, !dbg !8264
  store i8* %163, i8** %__mptr213, align 8, !dbg !8264
  br label %do.body216, !dbg !8264

do.body216:                                       ; preds = %for.inc212
  br label %do.end217, !dbg !8265

do.end217:                                        ; preds = %do.body216
  %164 = load i8*, i8** %__mptr213, align 8, !dbg !8264
  %add.ptr219 = getelementptr i8, i8* %164, i64 -80, !dbg !8264
  %165 = bitcast i8* %add.ptr219 to %struct.fc_rport*, !dbg !8264
  store %struct.fc_rport* %165, %struct.fc_rport** %tmp218, align 8, !dbg !8265
  %166 = load %struct.fc_rport*, %struct.fc_rport** %tmp218, align 8, !dbg !8264
  store %struct.fc_rport* %166, %struct.fc_rport** %rport, align 8, !dbg !8206
  br label %for.cond171, !dbg !8206, !llvm.loop !8267

for.end220:                                       ; preds = %if.then208, %for.cond171
  %167 = load i32, i32* %match, align 4, !dbg !8269
  %tobool221 = icmp ne i32 %167, 0, !dbg !8269
  br i1 %tobool221, label %if.then222, label %if.end245, !dbg !8270

if.then222:                                       ; preds = %for.end220
  %168 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8271
  %node_name223 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %168, i32 0, i32 3, !dbg !8272
  %169 = bitcast i64* %node_name223 to i8*, !dbg !8273
  %170 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8274
  %node_name224 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %170, i32 0, i32 0, !dbg !8275
  %171 = bitcast i64* %node_name224 to i8*, !dbg !8273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %171, i64 8, i1 false), !dbg !8273
  %172 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8276
  %port_name225 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %172, i32 0, i32 4, !dbg !8277
  %173 = bitcast i64* %port_name225 to i8*, !dbg !8278
  %174 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8279
  %port_name226 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %174, i32 0, i32 1, !dbg !8280
  %175 = bitcast i64* %port_name226 to i8*, !dbg !8278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %175, i64 8, i1 false), !dbg !8278
  %176 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8281
  %port_id227 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %176, i32 0, i32 2, !dbg !8282
  %177 = load i32, i32* %port_id227, align 8, !dbg !8282
  %178 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8283
  %port_id228 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %178, i32 0, i32 5, !dbg !8284
  store i32 %177, i32* %port_id228, align 8, !dbg !8285
  %179 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8286
  %port_state229 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %179, i32 0, i32 7, !dbg !8287
  store i32 2, i32* %port_state229, align 8, !dbg !8288
  %180 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8289
  %flags230 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %180, i32 0, i32 13, !dbg !8290
  %181 = load i8, i8* %flags230, align 8, !dbg !8291
  %conv231 = zext i8 %181 to i32, !dbg !8291
  %and232 = and i32 %conv231, -5, !dbg !8291
  %conv233 = trunc i32 %and232 to i8, !dbg !8291
  store i8 %conv233, i8* %flags230, align 8, !dbg !8291
  %182 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !8292
  %f234 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %182, i32 0, i32 1, !dbg !8294
  %183 = load %struct.fc_function_template*, %struct.fc_function_template** %f234, align 8, !dbg !8294
  %dd_fcrport_size235 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %183, i32 0, i32 24, !dbg !8295
  %184 = load i32, i32* %dd_fcrport_size235, align 8, !dbg !8295
  %tobool236 = icmp ne i32 %184, 0, !dbg !8292
  br i1 %tobool236, label %if.then237, label %if.end242, !dbg !8296

if.then237:                                       ; preds = %if.then222
  %185 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8297
  %dd_data238 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %185, i32 0, i32 10, !dbg !8298
  %186 = load i8*, i8** %dd_data238, align 8, !dbg !8298
  %187 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !8299
  %f239 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %187, i32 0, i32 1, !dbg !8300
  %188 = load %struct.fc_function_template*, %struct.fc_function_template** %f239, align 8, !dbg !8300
  %dd_fcrport_size240 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %188, i32 0, i32 24, !dbg !8301
  %189 = load i32, i32* %dd_fcrport_size240, align 8, !dbg !8301
  %conv241 = zext i32 %189 to i64, !dbg !8299
  call void @llvm.memset.p0i8.i64(i8* align 1 %186, i8 0, i64 %conv241, i1 false), !dbg !8302
  br label %if.end242, !dbg !8302

if.end242:                                        ; preds = %if.then237, %if.then222
  %190 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8303
  %host_lock243 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %190, i32 0, i32 4, !dbg !8304
  %191 = load %struct.spinlock*, %struct.spinlock** %host_lock243, align 8, !dbg !8304
  %192 = load i64, i64* %flags, align 8, !dbg !8305
  store %struct.spinlock* %191, %struct.spinlock** %lock.addr.i265, align 8
  store i64 %192, i64* %flags.addr.i266, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8306
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8306
  store i32 1, i32* %tmp.i267, align 4, !dbg !8306
  %193 = load i32, i32* %tmp.i267, align 4, !dbg !8306
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8307
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8307
  store i32 1, i32* %tmp8.i268, align 4, !dbg !8307
  %194 = load i32, i32* %tmp8.i268, align 4, !dbg !8307
  %195 = load i64, i64* %flags.addr.i266, align 8, !dbg !8308
  call void @arch_local_irq_restore(i64 %195) #11, !dbg !8308
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8309, !srcloc !7797
  %196 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i265, align 8, !dbg !8310
  %197 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %196, i32 0, i32 0, !dbg !8310
  %rlock.i269 = bitcast %union.anon.0* %197 to %struct.raw_spinlock*, !dbg !8310
  %198 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8311
  %199 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8312
  %roles244 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %199, i32 0, i32 3, !dbg !8313
  %200 = load i32, i32* %roles244, align 4, !dbg !8313
  call void @fc_remote_port_rolechg(%struct.fc_rport* %198, i32 %200) #12, !dbg !8314
  %201 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8315
  store %struct.fc_rport* %201, %struct.fc_rport** %retval, align 8, !dbg !8316
  br label %return, !dbg !8316

if.end245:                                        ; preds = %for.end220
  br label %if.end246, !dbg !8317

if.end246:                                        ; preds = %if.end245, %for.end
  %202 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8318
  %host_lock247 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %202, i32 0, i32 4, !dbg !8319
  %203 = load %struct.spinlock*, %struct.spinlock** %host_lock247, align 8, !dbg !8319
  %204 = load i64, i64* %flags, align 8, !dbg !8320
  store %struct.spinlock* %203, %struct.spinlock** %lock.addr.i270, align 8
  store i64 %204, i64* %flags.addr.i271, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8321
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8321
  store i32 1, i32* %tmp.i272, align 4, !dbg !8321
  %205 = load i32, i32* %tmp.i272, align 4, !dbg !8321
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8322
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8322
  store i32 1, i32* %tmp8.i273, align 4, !dbg !8322
  %206 = load i32, i32* %tmp8.i273, align 4, !dbg !8322
  %207 = load i64, i64* %flags.addr.i271, align 8, !dbg !8323
  call void @arch_local_irq_restore(i64 %207) #11, !dbg !8323
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8324, !srcloc !7797
  %208 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i270, align 8, !dbg !8325
  %209 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %208, i32 0, i32 0, !dbg !8325
  %rlock.i274 = bitcast %union.anon.0* %209 to %struct.raw_spinlock*, !dbg !8325
  %210 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8326
  %211 = load i32, i32* %channel.addr, align 4, !dbg !8327
  %212 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8328
  %call248 = call %struct.fc_rport* @fc_remote_port_create(%struct.Scsi_Host* %210, i32 %211, %struct.fc_rport_identifiers* %212) #12, !dbg !8329
  store %struct.fc_rport* %call248, %struct.fc_rport** %rport, align 8, !dbg !8330
  %213 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8331
  store %struct.fc_rport* %213, %struct.fc_rport** %retval, align 8, !dbg !8332
  br label %return, !dbg !8332

return:                                           ; preds = %if.end246, %if.end242, %if.end151, %if.then75
  %214 = load %struct.fc_rport*, %struct.fc_rport** %retval, align 8, !dbg !8333
  ret %struct.fc_rport* %214, !dbg !8333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_flush_work(%struct.Scsi_Host* %shost) #0 !dbg !8334 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !8335, metadata !DIExpression()), !dbg !8336
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8337
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !8337
  %1 = load i8*, i8** %shost_data, align 8, !dbg !8337
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !8337
  %work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %2, i32 0, i32 34, !dbg !8337
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q, align 8, !dbg !8337
  %tobool = icmp ne %struct.workqueue_struct* %3, null, !dbg !8337
  br i1 %tobool, label %if.end, label %if.then, !dbg !8339

if.then:                                          ; preds = %entry
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8340
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 10, !dbg !8342
  %5 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !8342
  %name = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %5, i32 0, i32 1, !dbg !8343
  %6 = load i8*, i8** %name, align 8, !dbg !8343
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.175, i64 0, i64 0), i8* %6) #13, !dbg !8344
  call void @dump_stack() #13, !dbg !8345
  br label %return, !dbg !8346

if.end:                                           ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8347
  %shost_data1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 49, !dbg !8347
  %8 = load i8*, i8** %shost_data1, align 8, !dbg !8347
  %9 = bitcast i8* %8 to %struct.fc_host_attrs*, !dbg !8347
  %work_q2 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 34, !dbg !8347
  %10 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q2, align 8, !dbg !8347
  call void @flush_workqueue(%struct.workqueue_struct* %10) #12, !dbg !8348
  br label %return, !dbg !8349

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8349
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work(%struct.delayed_work*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_flush_devloss(%struct.Scsi_Host* %shost) #0 !dbg !8350 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8353
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !8353
  %1 = load i8*, i8** %shost_data, align 8, !dbg !8353
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !8353
  %devloss_work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %2, i32 0, i32 36, !dbg !8353
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q, align 8, !dbg !8353
  %tobool = icmp ne %struct.workqueue_struct* %3, null, !dbg !8353
  br i1 %tobool, label %if.end, label %if.then, !dbg !8355

if.then:                                          ; preds = %entry
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8356
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 10, !dbg !8358
  %5 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !8358
  %name = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %5, i32 0, i32 1, !dbg !8359
  %6 = load i8*, i8** %name, align 8, !dbg !8359
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.175, i64 0, i64 0), i8* %6) #13, !dbg !8360
  call void @dump_stack() #13, !dbg !8361
  br label %return, !dbg !8362

if.end:                                           ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8363
  %shost_data1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 49, !dbg !8363
  %8 = load i8*, i8** %shost_data1, align 8, !dbg !8363
  %9 = bitcast i8* %8 to %struct.fc_host_attrs*, !dbg !8363
  %devloss_work_q2 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 36, !dbg !8363
  %10 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q2, align 8, !dbg !8363
  call void @flush_workqueue(%struct.workqueue_struct* %10) #12, !dbg !8364
  br label %return, !dbg !8365

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8365
}

; Function Attrs: noredzone
declare dso_local void @scsi_target_unblock(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_queue_work(%struct.Scsi_Host*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_bsg_goose_queue(%struct.fc_rport* %rport) #0 !dbg !8366 {
entry:
  %rport.addr = alloca %struct.fc_rport*, align 8
  %q = alloca %struct.request_queue*, align 8
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !8369, metadata !DIExpression()), !dbg !8370
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8371
  %rqst_q = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 21, !dbg !8372
  %1 = load %struct.request_queue*, %struct.request_queue** %rqst_q, align 8, !dbg !8372
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !8370
  %2 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8373
  %tobool = icmp ne %struct.request_queue* %2, null, !dbg !8373
  br i1 %tobool, label %if.then, label %if.end, !dbg !8375

if.then:                                          ; preds = %entry
  %3 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8376
  call void @blk_mq_run_hw_queues(%struct.request_queue* %3, i1 zeroext true) #12, !dbg !8377
  br label %if.end, !dbg !8377

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !8379 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8386
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !8387
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8388
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8389
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #12, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_remote_port_rolechg(%struct.fc_rport* %rport, i32 %roles) #0 !dbg !8392 {
entry:
  %lock.addr.i120 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i120, metadata !7633, metadata !DIExpression()), !dbg !8393
  %lock.addr.i115 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i115, metadata !7624, metadata !DIExpression()), !dbg !8402
  %flags.addr.i116 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i116, metadata !7631, metadata !DIExpression()), !dbg !8404
  %tmp.i117 = alloca i32, align 4
  %tmp8.i118 = alloca i32, align 4
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !7633, metadata !DIExpression()), !dbg !8405
  %lock.addr.i108 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i108, metadata !7624, metadata !DIExpression()), !dbg !8412
  %flags.addr.i109 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i109, metadata !7631, metadata !DIExpression()), !dbg !8414
  %tmp.i110 = alloca i32, align 4
  %tmp8.i111 = alloca i32, align 4
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !7624, metadata !DIExpression()), !dbg !8415
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !8417
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !8418
  %rport.addr = alloca %struct.fc_rport*, align 8
  %roles.addr = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %flags = alloca i64, align 8
  %create = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  %__dummy75 = alloca i64, align 8
  %__dummy276 = alloca i64, align 8
  %tmp79 = alloca i32, align 4
  %__dummy83 = alloca i64, align 8
  %__dummy284 = alloca i64, align 8
  %tmp87 = alloca i32, align 4
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  store i32 %roles, i32* %roles.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roles.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !8429, metadata !DIExpression()), !dbg !8430
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8431
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 15, !dbg !8431
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !8431
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8431
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !8431
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !8432, metadata !DIExpression()), !dbg !8433
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8434
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !8434
  %3 = load i8*, i8** %shost_data, align 8, !dbg !8434
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !8434
  store %struct.fc_host_attrs* %4, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8433
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8435, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.declare(metadata i32* %create, metadata !8437, metadata !DIExpression()), !dbg !8438
  store i32 0, i32* %create, align 4, !dbg !8438
  br label %do.body, !dbg !8439

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8440

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8441, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8444, metadata !DIExpression()), !dbg !8443
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8443
  %conv = zext i1 %cmp to i32, !dbg !8443
  store i32 1, i32* %tmp, align 4, !dbg !8443
  %5 = load i32, i32* %tmp, align 4, !dbg !8443
  br label %do.body2, !dbg !8445

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8446

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8447

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8449, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8453, metadata !DIExpression()), !dbg !8452
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8452
  %conv8 = zext i1 %cmp7 to i32, !dbg !8452
  store i32 1, i32* %tmp9, align 4, !dbg !8452
  %6 = load i32, i32* %tmp9, align 4, !dbg !8452
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !8454
  store i64 %call10, i64* %flags, align 8, !dbg !8454
  br label %do.end, !dbg !8454

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8447

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8446

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8455, !srcloc !8456
  br label %do.body13, !dbg !8455

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8457
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 4, !dbg !8457
  %8 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !8457
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8458
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8459
  %rlock.i = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !8459
  br label %do.end15, !dbg !8457

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8455

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8446

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8445

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8440

do.end19:                                         ; preds = %do.end18
  %11 = load i32, i32* %roles.addr, align 4, !dbg !8460
  %and = and i32 %11, 1, !dbg !8462
  %tobool = icmp ne i32 %and, 0, !dbg !8462
  br i1 %tobool, label %if.then, label %if.end29, !dbg !8463

if.then:                                          ; preds = %do.end19
  %12 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8464
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %12, i32 0, i32 8, !dbg !8467
  %13 = load i32, i32* %scsi_target_id, align 4, !dbg !8467
  %cmp20 = icmp eq i32 %13, -1, !dbg !8468
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !8469

if.then22:                                        ; preds = %if.then
  %14 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8470
  %next_target_id = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %14, i32 0, i32 30, !dbg !8472
  %15 = load i32, i32* %next_target_id, align 4, !dbg !8473
  %inc = add i32 %15, 1, !dbg !8473
  store i32 %inc, i32* %next_target_id, align 4, !dbg !8473
  %16 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8474
  %scsi_target_id23 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %16, i32 0, i32 8, !dbg !8475
  store i32 %15, i32* %scsi_target_id23, align 4, !dbg !8476
  store i32 1, i32* %create, align 4, !dbg !8477
  br label %if.end28, !dbg !8478

if.else:                                          ; preds = %if.then
  %17 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8479
  %roles24 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %17, i32 0, i32 6, !dbg !8481
  %18 = load i32, i32* %roles24, align 4, !dbg !8481
  %and25 = and i32 %18, 1, !dbg !8482
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8482
  br i1 %tobool26, label %if.end, label %if.then27, !dbg !8483

if.then27:                                        ; preds = %if.else
  store i32 1, i32* %create, align 4, !dbg !8484
  br label %if.end, !dbg !8485

if.end:                                           ; preds = %if.then27, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then22
  br label %if.end29, !dbg !8486

if.end29:                                         ; preds = %if.end28, %do.end19
  %19 = load i32, i32* %roles.addr, align 4, !dbg !8487
  %20 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8488
  %roles30 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %20, i32 0, i32 6, !dbg !8489
  store i32 %19, i32* %roles30, align 4, !dbg !8490
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8491
  %host_lock31 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 4, !dbg !8492
  %22 = load %struct.spinlock*, %struct.spinlock** %host_lock31, align 8, !dbg !8492
  %23 = load i64, i64* %flags, align 8, !dbg !8493
  store %struct.spinlock* %22, %struct.spinlock** %lock.addr.i108, align 8
  store i64 %23, i64* %flags.addr.i109, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8494
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8494
  store i32 1, i32* %tmp.i110, align 4, !dbg !8494
  %24 = load i32, i32* %tmp.i110, align 4, !dbg !8494
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8495
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8495
  store i32 1, i32* %tmp8.i111, align 4, !dbg !8495
  %25 = load i32, i32* %tmp8.i111, align 4, !dbg !8495
  %26 = load i64, i64* %flags.addr.i109, align 8, !dbg !8496
  call void @arch_local_irq_restore(i64 %26) #11, !dbg !8496
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8497, !srcloc !7797
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i108, align 8, !dbg !8498
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !8498
  %rlock.i112 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !8498
  %29 = load i32, i32* %create, align 4, !dbg !8499
  %tobool32 = icmp ne i32 %29, 0, !dbg !8499
  br i1 %tobool32, label %if.then33, label %if.end105, !dbg !8500

if.then33:                                        ; preds = %if.end29
  %30 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8501
  %fail_io_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %30, i32 0, i32 18, !dbg !8503
  %call34 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %fail_io_work) #12, !dbg !8504
  br i1 %call34, label %if.end36, label %if.then35, !dbg !8505

if.then35:                                        ; preds = %if.then33
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8506
  call void @fc_flush_devloss(%struct.Scsi_Host* %31) #12, !dbg !8507
  br label %if.end36, !dbg !8507

if.end36:                                         ; preds = %if.then35, %if.then33
  %32 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8508
  %dev_loss_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %32, i32 0, i32 16, !dbg !8510
  %call37 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %dev_loss_work) #12, !dbg !8511
  br i1 %call37, label %if.end39, label %if.then38, !dbg !8512

if.then38:                                        ; preds = %if.end36
  %33 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8513
  call void @fc_flush_devloss(%struct.Scsi_Host* %33) #12, !dbg !8514
  br label %if.end39, !dbg !8514

if.end39:                                         ; preds = %if.then38, %if.end36
  br label %do.body40, !dbg !8515

do.body40:                                        ; preds = %if.end39
  br label %do.body41, !dbg !8516

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !8517, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !8520, metadata !DIExpression()), !dbg !8519
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !8519
  %conv45 = zext i1 %cmp44 to i32, !dbg !8519
  store i32 1, i32* %tmp46, align 4, !dbg !8519
  %34 = load i32, i32* %tmp46, align 4, !dbg !8519
  br label %do.body47, !dbg !8521

do.body47:                                        ; preds = %do.body41
  br label %do.body48, !dbg !8522

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !8523

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !8525, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !8529, metadata !DIExpression()), !dbg !8528
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !8528
  %conv53 = zext i1 %cmp52 to i32, !dbg !8528
  store i32 1, i32* %tmp54, align 4, !dbg !8528
  %35 = load i32, i32* %tmp54, align 4, !dbg !8528
  %call55 = call i64 @arch_local_irq_save() #12, !dbg !8530
  store i64 %call55, i64* %flags, align 8, !dbg !8530
  br label %do.end56, !dbg !8530

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !8523

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !8522

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8531, !srcloc !8532
  br label %do.body59, !dbg !8531

do.body59:                                        ; preds = %do.body58
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8533
  %host_lock60 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %36, i32 0, i32 4, !dbg !8533
  %37 = load %struct.spinlock*, %struct.spinlock** %host_lock60, align 8, !dbg !8533
  store %struct.spinlock* %37, %struct.spinlock** %lock.addr.i113, align 8
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !8534
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !8535
  %rlock.i114 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !8535
  br label %do.end62, !dbg !8533

do.end62:                                         ; preds = %do.body59
  br label %do.end63, !dbg !8531

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !8522

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !8521

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !8516

do.end66:                                         ; preds = %do.end65
  %40 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8536
  %flags67 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %40, i32 0, i32 13, !dbg !8537
  %41 = load i8, i8* %flags67, align 8, !dbg !8538
  %conv68 = zext i8 %41 to i32, !dbg !8538
  %and69 = and i32 %conv68, -14, !dbg !8538
  %conv70 = trunc i32 %and69 to i8, !dbg !8538
  store i8 %conv70, i8* %flags67, align 8, !dbg !8538
  %42 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8539
  %host_lock71 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %42, i32 0, i32 4, !dbg !8540
  %43 = load %struct.spinlock*, %struct.spinlock** %host_lock71, align 8, !dbg !8540
  %44 = load i64, i64* %flags, align 8, !dbg !8541
  store %struct.spinlock* %43, %struct.spinlock** %lock.addr.i115, align 8
  store i64 %44, i64* %flags.addr.i116, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8542
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8542
  store i32 1, i32* %tmp.i117, align 4, !dbg !8542
  %45 = load i32, i32* %tmp.i117, align 4, !dbg !8542
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8543
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8543
  store i32 1, i32* %tmp8.i118, align 4, !dbg !8543
  %46 = load i32, i32* %tmp8.i118, align 4, !dbg !8543
  %47 = load i64, i64* %flags.addr.i116, align 8, !dbg !8544
  call void @arch_local_irq_restore(i64 %47) #11, !dbg !8544
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8545, !srcloc !7797
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i115, align 8, !dbg !8546
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !8546
  %rlock.i119 = bitcast %union.anon.0* %49 to %struct.raw_spinlock*, !dbg !8546
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8547
  call void @fc_flush_work(%struct.Scsi_Host* %50) #12, !dbg !8548
  %51 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8549
  %dev72 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %51, i32 0, i32 15, !dbg !8550
  call void @scsi_target_unblock(%struct.device* %dev72, i32 2) #12, !dbg !8551
  br label %do.body73, !dbg !8552

do.body73:                                        ; preds = %do.end66
  br label %do.body74, !dbg !8553

do.body74:                                        ; preds = %do.body73
  call void @llvm.dbg.declare(metadata i64* %__dummy75, metadata !8554, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.declare(metadata i64* %__dummy276, metadata !8557, metadata !DIExpression()), !dbg !8556
  %cmp77 = icmp eq i64* %__dummy75, %__dummy276, !dbg !8556
  %conv78 = zext i1 %cmp77 to i32, !dbg !8556
  store i32 1, i32* %tmp79, align 4, !dbg !8556
  %52 = load i32, i32* %tmp79, align 4, !dbg !8556
  br label %do.body80, !dbg !8558

do.body80:                                        ; preds = %do.body74
  br label %do.body81, !dbg !8559

do.body81:                                        ; preds = %do.body80
  br label %do.body82, !dbg !8560

do.body82:                                        ; preds = %do.body81
  call void @llvm.dbg.declare(metadata i64* %__dummy83, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata i64* %__dummy284, metadata !8566, metadata !DIExpression()), !dbg !8565
  %cmp85 = icmp eq i64* %__dummy83, %__dummy284, !dbg !8565
  %conv86 = zext i1 %cmp85 to i32, !dbg !8565
  store i32 1, i32* %tmp87, align 4, !dbg !8565
  %53 = load i32, i32* %tmp87, align 4, !dbg !8565
  %call88 = call i64 @arch_local_irq_save() #12, !dbg !8567
  store i64 %call88, i64* %flags, align 8, !dbg !8567
  br label %do.end89, !dbg !8567

do.end89:                                         ; preds = %do.body82
  br label %do.end90, !dbg !8560

do.end90:                                         ; preds = %do.end89
  br label %do.body91, !dbg !8559

do.body91:                                        ; preds = %do.end90
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8568, !srcloc !8569
  br label %do.body92, !dbg !8568

do.body92:                                        ; preds = %do.body91
  %54 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8570
  %host_lock93 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %54, i32 0, i32 4, !dbg !8570
  %55 = load %struct.spinlock*, %struct.spinlock** %host_lock93, align 8, !dbg !8570
  store %struct.spinlock* %55, %struct.spinlock** %lock.addr.i120, align 8
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i120, align 8, !dbg !8571
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !8572
  %rlock.i121 = bitcast %union.anon.0* %57 to %struct.raw_spinlock*, !dbg !8572
  br label %do.end95, !dbg !8570

do.end95:                                         ; preds = %do.body92
  br label %do.end96, !dbg !8568

do.end96:                                         ; preds = %do.end95
  br label %do.end97, !dbg !8559

do.end97:                                         ; preds = %do.end96
  br label %do.end98, !dbg !8558

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !8553

do.end99:                                         ; preds = %do.end98
  %58 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8573
  %flags100 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %58, i32 0, i32 13, !dbg !8574
  %59 = load i8, i8* %flags100, align 8, !dbg !8575
  %conv101 = zext i8 %59 to i32, !dbg !8575
  %or = or i32 %conv101, 2, !dbg !8575
  %conv102 = trunc i32 %or to i8, !dbg !8575
  store i8 %conv102, i8* %flags100, align 8, !dbg !8575
  %60 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8576
  %61 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8577
  %scan_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %61, i32 0, i32 17, !dbg !8578
  %call103 = call i32 @scsi_queue_work(%struct.Scsi_Host* %60, %struct.work_struct* %scan_work) #12, !dbg !8579
  %62 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8580
  %host_lock104 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %62, i32 0, i32 4, !dbg !8581
  %63 = load %struct.spinlock*, %struct.spinlock** %host_lock104, align 8, !dbg !8581
  %64 = load i64, i64* %flags, align 8, !dbg !8582
  store %struct.spinlock* %63, %struct.spinlock** %lock.addr.i106, align 8
  store i64 %64, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8583
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8583
  store i32 1, i32* %tmp.i, align 4, !dbg !8583
  %65 = load i32, i32* %tmp.i, align 4, !dbg !8583
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8584
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8584
  store i32 1, i32* %tmp8.i, align 4, !dbg !8584
  %66 = load i32, i32* %tmp8.i, align 4, !dbg !8584
  %67 = load i64, i64* %flags.addr.i, align 8, !dbg !8585
  call void @arch_local_irq_restore(i64 %67) #11, !dbg !8585
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8586, !srcloc !7797
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !8587
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !8587
  %rlock.i107 = bitcast %union.anon.0* %69 to %struct.raw_spinlock*, !dbg !8587
  br label %if.end105, !dbg !8588

if.end105:                                        ; preds = %do.end99, %if.end29
  ret void, !dbg !8589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.fc_rport* @fc_remote_port_create(%struct.Scsi_Host* %shost, i32 %channel, %struct.fc_rport_identifiers* %ids) #0 !dbg !8590 {
entry:
  %lock.addr.i169 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i169, metadata !7633, metadata !DIExpression()), !dbg !8591
  %lock.addr.i164 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i164, metadata !7624, metadata !DIExpression()), !dbg !8598
  %flags.addr.i165 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i165, metadata !7631, metadata !DIExpression()), !dbg !8600
  %tmp.i166 = alloca i32, align 4
  %tmp8.i167 = alloca i32, align 4
  %lock.addr.i162 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i162, metadata !7624, metadata !DIExpression()), !dbg !8601
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !8603
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !8604
  %retval = alloca %struct.fc_rport*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %ids.addr = alloca %struct.fc_rport_identifiers*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %fci = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %dev = alloca %struct.device*, align 8
  %flags = alloca i64, align 8
  %error = alloca i32, align 4
  %size = alloca i64, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral35 = alloca %struct.atomic64_t, align 8
  %.compoundliteral50 = alloca %struct.atomic64_t, align 8
  %.compoundliteral60 = alloca %struct.atomic64_t, align 8
  %.compoundliteral70 = alloca %struct.atomic64_t, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp80 = alloca i32, align 4
  %__dummy84 = alloca i64, align 8
  %__dummy285 = alloca i64, align 8
  %tmp88 = alloca i32, align 4
  %__dummy134 = alloca i64, align 8
  %__dummy2135 = alloca i64, align 8
  %tmp138 = alloca i32, align 4
  %__dummy142 = alloca i64, align 8
  %__dummy2143 = alloca i64, align 8
  %tmp146 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !8611, metadata !DIExpression()), !dbg !8612
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8613, metadata !DIExpression()), !dbg !8614
  store %struct.fc_rport_identifiers* %ids, %struct.fc_rport_identifiers** %ids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport_identifiers** %ids.addr, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !8617, metadata !DIExpression()), !dbg !8618
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8619
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !8619
  %1 = load i8*, i8** %shost_data, align 8, !dbg !8619
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !8619
  store %struct.fc_host_attrs* %2, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8618
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %fci, metadata !8620, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8622, metadata !DIExpression()), !dbg !8624
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8624
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 11, !dbg !8624
  %4 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !8624
  %5 = bitcast %struct.scsi_transport_template* %4 to i8*, !dbg !8624
  store i8* %5, i8** %__mptr, align 8, !dbg !8624
  br label %do.body, !dbg !8624

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8625

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !8624
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !8624
  %7 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !8624
  store %struct.fc_internal* %7, %struct.fc_internal** %tmp, align 8, !dbg !8625
  %8 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !8624
  store %struct.fc_internal* %8, %struct.fc_internal** %fci, align 8, !dbg !8621
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8629, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8631, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8633, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8635, metadata !DIExpression()), !dbg !8636
  %9 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !8637
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %9, i32 0, i32 1, !dbg !8638
  %10 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !8638
  %dd_fcrport_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %10, i32 0, i32 24, !dbg !8639
  %11 = load i32, i32* %dd_fcrport_size, align 8, !dbg !8639
  %conv = zext i32 %11 to i64, !dbg !8637
  %add = add i64 1072, %conv, !dbg !8640
  store i64 %add, i64* %size, align 8, !dbg !8641
  %12 = load i64, i64* %size, align 8, !dbg !8642
  %call = call i8* @kzalloc(i64 %12, i32 3264) #12, !dbg !8643
  %13 = bitcast i8* %call to %struct.fc_rport*, !dbg !8643
  store %struct.fc_rport* %13, %struct.fc_rport** %rport, align 8, !dbg !8644
  %14 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8645
  %tobool = icmp ne %struct.fc_rport* %14, null, !dbg !8645
  %lnot = xor i1 %tobool, true, !dbg !8645
  %lnot1 = xor i1 %lnot, true, !dbg !8645
  %lnot2 = xor i1 %lnot1, true, !dbg !8645
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8645
  %conv3 = sext i32 %lnot.ext to i64, !dbg !8645
  %tobool4 = icmp ne i64 %conv3, 0, !dbg !8645
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8647

if.then:                                          ; preds = %do.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.fc_remote_port_create, i64 0, i64 0)) #13, !dbg !8648
  store %struct.fc_rport* null, %struct.fc_rport** %retval, align 8, !dbg !8650
  br label %return, !dbg !8650

if.end:                                           ; preds = %do.end
  %15 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8651
  %maxframe_size = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %15, i32 0, i32 0, !dbg !8652
  store i32 -1, i32* %maxframe_size, align 8, !dbg !8653
  %16 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8654
  %supported_classes = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %16, i32 0, i32 1, !dbg !8655
  store i32 0, i32* %supported_classes, align 4, !dbg !8656
  %17 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8657
  %dev_loss_tmo = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %17, i32 0, i32 24, !dbg !8658
  %18 = load i32, i32* %dev_loss_tmo, align 8, !dbg !8658
  %19 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8659
  %dev_loss_tmo6 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %19, i32 0, i32 2, !dbg !8660
  store i32 %18, i32* %dev_loss_tmo6, align 8, !dbg !8661
  %20 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8662
  %node_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %20, i32 0, i32 3, !dbg !8663
  %21 = bitcast i64* %node_name to i8*, !dbg !8664
  %22 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8665
  %node_name7 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %22, i32 0, i32 0, !dbg !8666
  %23 = bitcast i64* %node_name7 to i8*, !dbg !8664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %23, i64 8, i1 false), !dbg !8664
  %24 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8667
  %port_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %24, i32 0, i32 4, !dbg !8668
  %25 = bitcast i64* %port_name to i8*, !dbg !8669
  %26 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8670
  %port_name8 = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %26, i32 0, i32 1, !dbg !8671
  %27 = bitcast i64* %port_name8 to i8*, !dbg !8669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 8, i1 false), !dbg !8669
  %28 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8672
  %port_id = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %28, i32 0, i32 2, !dbg !8673
  %29 = load i32, i32* %port_id, align 8, !dbg !8673
  %30 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8674
  %port_id9 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %30, i32 0, i32 5, !dbg !8675
  store i32 %29, i32* %port_id9, align 8, !dbg !8676
  %31 = load %struct.fc_rport_identifiers*, %struct.fc_rport_identifiers** %ids.addr, align 8, !dbg !8677
  %roles = getelementptr inbounds %struct.fc_rport_identifiers, %struct.fc_rport_identifiers* %31, i32 0, i32 3, !dbg !8678
  %32 = load i32, i32* %roles, align 4, !dbg !8678
  %33 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8679
  %roles10 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %33, i32 0, i32 6, !dbg !8680
  store i32 %32, i32* %roles10, align 4, !dbg !8681
  %34 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8682
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %34, i32 0, i32 7, !dbg !8683
  store i32 2, i32* %port_state, align 8, !dbg !8684
  %35 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !8685
  %f11 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %35, i32 0, i32 1, !dbg !8687
  %36 = load %struct.fc_function_template*, %struct.fc_function_template** %f11, align 8, !dbg !8687
  %dd_fcrport_size12 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %36, i32 0, i32 24, !dbg !8688
  %37 = load i32, i32* %dd_fcrport_size12, align 8, !dbg !8688
  %tobool13 = icmp ne i32 %37, 0, !dbg !8685
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8689

if.then14:                                        ; preds = %if.end
  %38 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8690
  %arrayidx = getelementptr %struct.fc_rport, %struct.fc_rport* %38, i64 1, !dbg !8690
  %39 = bitcast %struct.fc_rport* %arrayidx to i8*, !dbg !8691
  %40 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8692
  %dd_data = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %40, i32 0, i32 10, !dbg !8693
  store i8* %39, i8** %dd_data, align 8, !dbg !8694
  br label %if.end15, !dbg !8692

if.end15:                                         ; preds = %if.then14, %if.end
  %41 = load i32, i32* %channel.addr, align 4, !dbg !8695
  %42 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8696
  %channel16 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %42, i32 0, i32 11, !dbg !8697
  store i32 %41, i32* %channel16, align 8, !dbg !8698
  %43 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8699
  %fast_io_fail_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %43, i32 0, i32 9, !dbg !8700
  store i32 -1, i32* %fast_io_fail_tmo, align 8, !dbg !8701
  br label %do.body17, !dbg !8702

do.body17:                                        ; preds = %if.end15
  br label %do.body18, !dbg !8703

do.body18:                                        ; preds = %do.body17
  %44 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8705
  %dev_loss_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %44, i32 0, i32 16, !dbg !8705
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev_loss_work, i32 0, i32 0, !dbg !8705
  call void @__init_work(%struct.work_struct* %work, i32 0) #12, !dbg !8705
  %45 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8705
  %dev_loss_work19 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %45, i32 0, i32 16, !dbg !8705
  %work20 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev_loss_work19, i32 0, i32 0, !dbg !8705
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work20, i32 0, i32 0, !dbg !8705
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !8705
  store i64 68719476704, i64* %counter, align 8, !dbg !8705
  %46 = bitcast %struct.atomic64_t* %data to i8*, !dbg !8705
  %47 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !8705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 8, i1 false), !dbg !8705
  %48 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8705
  %dev_loss_work21 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %48, i32 0, i32 16, !dbg !8705
  %work22 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev_loss_work21, i32 0, i32 0, !dbg !8705
  %entry23 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work22, i32 0, i32 1, !dbg !8705
  call void @INIT_LIST_HEAD(%struct.list_head* %entry23) #12, !dbg !8705
  %49 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8705
  %dev_loss_work24 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %49, i32 0, i32 16, !dbg !8705
  %work25 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev_loss_work24, i32 0, i32 0, !dbg !8705
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work25, i32 0, i32 2, !dbg !8705
  store void (%struct.work_struct*)* @fc_timeout_deleted_rport, void (%struct.work_struct*)** %func, align 8, !dbg !8705
  br label %do.end26, !dbg !8705

do.end26:                                         ; preds = %do.body18
  %50 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8703
  %dev_loss_work27 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %50, i32 0, i32 16, !dbg !8703
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev_loss_work27, i32 0, i32 1, !dbg !8703
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #12, !dbg !8703
  br label %do.end28, !dbg !8703

do.end28:                                         ; preds = %do.end26
  br label %do.body29, !dbg !8707

do.body29:                                        ; preds = %do.end28
  br label %do.body30, !dbg !8708

do.body30:                                        ; preds = %do.body29
  %51 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8710
  %fail_io_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %51, i32 0, i32 18, !dbg !8710
  %work31 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %fail_io_work, i32 0, i32 0, !dbg !8710
  call void @__init_work(%struct.work_struct* %work31, i32 0) #12, !dbg !8710
  %52 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8710
  %fail_io_work32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %52, i32 0, i32 18, !dbg !8710
  %work33 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %fail_io_work32, i32 0, i32 0, !dbg !8710
  %data34 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work33, i32 0, i32 0, !dbg !8710
  %counter36 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral35, i32 0, i32 0, !dbg !8710
  store i64 68719476704, i64* %counter36, align 8, !dbg !8710
  %53 = bitcast %struct.atomic64_t* %data34 to i8*, !dbg !8710
  %54 = bitcast %struct.atomic64_t* %.compoundliteral35 to i8*, !dbg !8710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 8, i1 false), !dbg !8710
  %55 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8710
  %fail_io_work37 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %55, i32 0, i32 18, !dbg !8710
  %work38 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %fail_io_work37, i32 0, i32 0, !dbg !8710
  %entry39 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work38, i32 0, i32 1, !dbg !8710
  call void @INIT_LIST_HEAD(%struct.list_head* %entry39) #12, !dbg !8710
  %56 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8710
  %fail_io_work40 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %56, i32 0, i32 18, !dbg !8710
  %work41 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %fail_io_work40, i32 0, i32 0, !dbg !8710
  %func42 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work41, i32 0, i32 2, !dbg !8710
  store void (%struct.work_struct*)* @fc_timeout_fail_rport_io, void (%struct.work_struct*)** %func42, align 8, !dbg !8710
  br label %do.end43, !dbg !8710

do.end43:                                         ; preds = %do.body30
  %57 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8708
  %fail_io_work44 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %57, i32 0, i32 18, !dbg !8708
  %timer45 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %fail_io_work44, i32 0, i32 1, !dbg !8708
  call void @init_timer_key(%struct.timer_list* %timer45, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #12, !dbg !8708
  br label %do.end46, !dbg !8708

do.end46:                                         ; preds = %do.end43
  br label %do.body47, !dbg !8712

do.body47:                                        ; preds = %do.end46
  %58 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8713
  %scan_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %58, i32 0, i32 17, !dbg !8713
  call void @__init_work(%struct.work_struct* %scan_work, i32 0) #12, !dbg !8713
  %59 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8713
  %scan_work48 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %59, i32 0, i32 17, !dbg !8713
  %data49 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %scan_work48, i32 0, i32 0, !dbg !8713
  %counter51 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral50, i32 0, i32 0, !dbg !8713
  store i64 68719476704, i64* %counter51, align 8, !dbg !8713
  %60 = bitcast %struct.atomic64_t* %data49 to i8*, !dbg !8713
  %61 = bitcast %struct.atomic64_t* %.compoundliteral50 to i8*, !dbg !8713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 8, i1 false), !dbg !8713
  %62 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8713
  %scan_work52 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %62, i32 0, i32 17, !dbg !8713
  %entry53 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %scan_work52, i32 0, i32 1, !dbg !8713
  call void @INIT_LIST_HEAD(%struct.list_head* %entry53) #12, !dbg !8713
  %63 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8713
  %scan_work54 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %63, i32 0, i32 17, !dbg !8713
  %func55 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %scan_work54, i32 0, i32 2, !dbg !8713
  store void (%struct.work_struct*)* @fc_scsi_scan_rport, void (%struct.work_struct*)** %func55, align 8, !dbg !8713
  br label %do.end56, !dbg !8713

do.end56:                                         ; preds = %do.body47
  br label %do.body57, !dbg !8715

do.body57:                                        ; preds = %do.end56
  %64 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8716
  %stgt_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %64, i32 0, i32 19, !dbg !8716
  call void @__init_work(%struct.work_struct* %stgt_delete_work, i32 0) #12, !dbg !8716
  %65 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8716
  %stgt_delete_work58 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %65, i32 0, i32 19, !dbg !8716
  %data59 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %stgt_delete_work58, i32 0, i32 0, !dbg !8716
  %counter61 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral60, i32 0, i32 0, !dbg !8716
  store i64 68719476704, i64* %counter61, align 8, !dbg !8716
  %66 = bitcast %struct.atomic64_t* %data59 to i8*, !dbg !8716
  %67 = bitcast %struct.atomic64_t* %.compoundliteral60 to i8*, !dbg !8716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 8, i1 false), !dbg !8716
  %68 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8716
  %stgt_delete_work62 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %68, i32 0, i32 19, !dbg !8716
  %entry63 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %stgt_delete_work62, i32 0, i32 1, !dbg !8716
  call void @INIT_LIST_HEAD(%struct.list_head* %entry63) #12, !dbg !8716
  %69 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8716
  %stgt_delete_work64 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %69, i32 0, i32 19, !dbg !8716
  %func65 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %stgt_delete_work64, i32 0, i32 2, !dbg !8716
  store void (%struct.work_struct*)* @fc_starget_delete, void (%struct.work_struct*)** %func65, align 8, !dbg !8716
  br label %do.end66, !dbg !8716

do.end66:                                         ; preds = %do.body57
  br label %do.body67, !dbg !8718

do.body67:                                        ; preds = %do.end66
  %70 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8719
  %rport_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %70, i32 0, i32 20, !dbg !8719
  call void @__init_work(%struct.work_struct* %rport_delete_work, i32 0) #12, !dbg !8719
  %71 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8719
  %rport_delete_work68 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %71, i32 0, i32 20, !dbg !8719
  %data69 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %rport_delete_work68, i32 0, i32 0, !dbg !8719
  %counter71 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral70, i32 0, i32 0, !dbg !8719
  store i64 68719476704, i64* %counter71, align 8, !dbg !8719
  %72 = bitcast %struct.atomic64_t* %data69 to i8*, !dbg !8719
  %73 = bitcast %struct.atomic64_t* %.compoundliteral70 to i8*, !dbg !8719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 8, i1 false), !dbg !8719
  %74 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8719
  %rport_delete_work72 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %74, i32 0, i32 20, !dbg !8719
  %entry73 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %rport_delete_work72, i32 0, i32 1, !dbg !8719
  call void @INIT_LIST_HEAD(%struct.list_head* %entry73) #12, !dbg !8719
  %75 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8719
  %rport_delete_work74 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %75, i32 0, i32 20, !dbg !8719
  %func75 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %rport_delete_work74, i32 0, i32 2, !dbg !8719
  store void (%struct.work_struct*)* @fc_rport_final_delete, void (%struct.work_struct*)** %func75, align 8, !dbg !8719
  br label %do.end76, !dbg !8719

do.end76:                                         ; preds = %do.body67
  br label %do.body77, !dbg !8721

do.body77:                                        ; preds = %do.end76
  br label %do.body78, !dbg !8722

do.body78:                                        ; preds = %do.body77
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8723, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8726, metadata !DIExpression()), !dbg !8725
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8725
  %conv79 = zext i1 %cmp to i32, !dbg !8725
  store i32 1, i32* %tmp80, align 4, !dbg !8725
  %76 = load i32, i32* %tmp80, align 4, !dbg !8725
  br label %do.body81, !dbg !8727

do.body81:                                        ; preds = %do.body78
  br label %do.body82, !dbg !8728

do.body82:                                        ; preds = %do.body81
  br label %do.body83, !dbg !8729

do.body83:                                        ; preds = %do.body82
  call void @llvm.dbg.declare(metadata i64* %__dummy84, metadata !8731, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.declare(metadata i64* %__dummy285, metadata !8735, metadata !DIExpression()), !dbg !8734
  %cmp86 = icmp eq i64* %__dummy84, %__dummy285, !dbg !8734
  %conv87 = zext i1 %cmp86 to i32, !dbg !8734
  store i32 1, i32* %tmp88, align 4, !dbg !8734
  %77 = load i32, i32* %tmp88, align 4, !dbg !8734
  %call89 = call i64 @arch_local_irq_save() #12, !dbg !8736
  store i64 %call89, i64* %flags, align 8, !dbg !8736
  br label %do.end90, !dbg !8736

do.end90:                                         ; preds = %do.body83
  br label %do.end91, !dbg !8729

do.end91:                                         ; preds = %do.end90
  br label %do.body92, !dbg !8728

do.body92:                                        ; preds = %do.end91
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8737, !srcloc !8738
  br label %do.body93, !dbg !8737

do.body93:                                        ; preds = %do.body92
  %78 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8739
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %78, i32 0, i32 4, !dbg !8739
  %79 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !8739
  store %struct.spinlock* %79, %struct.spinlock** %lock.addr.i, align 8
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8740
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !8741
  %rlock.i = bitcast %union.anon.0* %81 to %struct.raw_spinlock*, !dbg !8741
  br label %do.end95, !dbg !8739

do.end95:                                         ; preds = %do.body93
  br label %do.end96, !dbg !8737

do.end96:                                         ; preds = %do.end95
  br label %do.end97, !dbg !8728

do.end97:                                         ; preds = %do.end96
  br label %do.end98, !dbg !8727

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !8722

do.end99:                                         ; preds = %do.end98
  %82 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8742
  %next_rport_number = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %82, i32 0, i32 29, !dbg !8743
  %83 = load i32, i32* %next_rport_number, align 8, !dbg !8744
  %inc = add i32 %83, 1, !dbg !8744
  store i32 %inc, i32* %next_rport_number, align 8, !dbg !8744
  %84 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8745
  %number = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %84, i32 0, i32 12, !dbg !8746
  store i32 %83, i32* %number, align 4, !dbg !8747
  %85 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8748
  %roles100 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %85, i32 0, i32 6, !dbg !8750
  %86 = load i32, i32* %roles100, align 4, !dbg !8750
  %and = and i32 %86, 1, !dbg !8751
  %tobool101 = icmp ne i32 %and, 0, !dbg !8751
  br i1 %tobool101, label %if.then105, label %lor.lhs.false, !dbg !8752

lor.lhs.false:                                    ; preds = %do.end99
  %87 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8753
  %roles102 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %87, i32 0, i32 6, !dbg !8754
  %88 = load i32, i32* %roles102, align 4, !dbg !8754
  %and103 = and i32 %88, 8, !dbg !8755
  %tobool104 = icmp ne i32 %and103, 0, !dbg !8755
  br i1 %tobool104, label %if.then105, label %if.else, !dbg !8756

if.then105:                                       ; preds = %lor.lhs.false, %do.end99
  %89 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8757
  %next_target_id = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %89, i32 0, i32 30, !dbg !8758
  %90 = load i32, i32* %next_target_id, align 4, !dbg !8759
  %inc106 = add i32 %90, 1, !dbg !8759
  store i32 %inc106, i32* %next_target_id, align 4, !dbg !8759
  %91 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8760
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %91, i32 0, i32 8, !dbg !8761
  store i32 %90, i32* %scsi_target_id, align 4, !dbg !8762
  br label %if.end108, !dbg !8760

if.else:                                          ; preds = %lor.lhs.false
  %92 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8763
  %scsi_target_id107 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %92, i32 0, i32 8, !dbg !8764
  store i32 -1, i32* %scsi_target_id107, align 4, !dbg !8765
  br label %if.end108

if.end108:                                        ; preds = %if.else, %if.then105
  %93 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8766
  %peers = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %93, i32 0, i32 14, !dbg !8767
  %94 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !8768
  %rports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %94, i32 0, i32 26, !dbg !8769
  call void @list_add_tail(%struct.list_head* %peers, %struct.list_head* %rports) #12, !dbg !8770
  %95 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8771
  %call109 = call %struct.Scsi_Host* @scsi_host_get(%struct.Scsi_Host* %95) #12, !dbg !8772
  %96 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8773
  %host_lock110 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %96, i32 0, i32 4, !dbg !8774
  %97 = load %struct.spinlock*, %struct.spinlock** %host_lock110, align 8, !dbg !8774
  %98 = load i64, i64* %flags, align 8, !dbg !8775
  store %struct.spinlock* %97, %struct.spinlock** %lock.addr.i164, align 8
  store i64 %98, i64* %flags.addr.i165, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8776
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8776
  store i32 1, i32* %tmp.i166, align 4, !dbg !8776
  %99 = load i32, i32* %tmp.i166, align 4, !dbg !8776
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8777
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8777
  store i32 1, i32* %tmp8.i167, align 4, !dbg !8777
  %100 = load i32, i32* %tmp8.i167, align 4, !dbg !8777
  %101 = load i64, i64* %flags.addr.i165, align 8, !dbg !8778
  call void @arch_local_irq_restore(i64 %101) #11, !dbg !8778
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8779, !srcloc !7797
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i164, align 8, !dbg !8780
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !8780
  %rlock.i168 = bitcast %union.anon.0* %103 to %struct.raw_spinlock*, !dbg !8780
  %104 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8781
  %dev111 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %104, i32 0, i32 15, !dbg !8782
  store %struct.device* %dev111, %struct.device** %dev, align 8, !dbg !8783
  %105 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8784
  call void @device_initialize(%struct.device* %105) #12, !dbg !8785
  %106 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8786
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %106, i32 0, i32 47, !dbg !8787
  %call112 = call %struct.device* @get_device(%struct.device* %shost_gendev) #12, !dbg !8788
  %107 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8789
  %parent = getelementptr inbounds %struct.device, %struct.device* %107, i32 0, i32 1, !dbg !8790
  store %struct.device* %call112, %struct.device** %parent, align 8, !dbg !8791
  %108 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8792
  %release = getelementptr inbounds %struct.device, %struct.device* %108, i32 0, i32 31, !dbg !8793
  store void (%struct.device*)* @fc_rport_dev_release, void (%struct.device*)** %release, align 8, !dbg !8794
  %109 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8795
  %110 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8796
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %110, i32 0, i32 16, !dbg !8797
  %111 = load i32, i32* %host_no, align 4, !dbg !8797
  %112 = load i32, i32* %channel.addr, align 4, !dbg !8798
  %113 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8799
  %number113 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %113, i32 0, i32 12, !dbg !8800
  %114 = load i32, i32* %number113, align 4, !dbg !8800
  %call114 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %109, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.177, i64 0, i64 0), i32 %111, i32 %112, i32 %114) #12, !dbg !8801
  %115 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8802
  call void @transport_setup_device(%struct.device* %115) #12, !dbg !8803
  %116 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8804
  %call115 = call i32 @device_add(%struct.device* %116) #12, !dbg !8805
  store i32 %call115, i32* %error, align 4, !dbg !8806
  %117 = load i32, i32* %error, align 4, !dbg !8807
  %tobool116 = icmp ne i32 %117, 0, !dbg !8807
  br i1 %tobool116, label %if.then117, label %if.end119, !dbg !8809

if.then117:                                       ; preds = %if.end108
  %call118 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.178, i64 0, i64 0)) #13, !dbg !8810
  br label %delete_rport, !dbg !8812

if.end119:                                        ; preds = %if.end108
  %118 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8813
  %call120 = call i32 @transport_add_device(%struct.device* %118) #12, !dbg !8814
  %119 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8815
  call void @transport_configure_device(%struct.device* %119) #12, !dbg !8816
  %120 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8817
  %121 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8818
  %call121 = call i32 @fc_bsg_rportadd(%struct.Scsi_Host* %120, %struct.fc_rport* %121) #12, !dbg !8819
  %122 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8820
  %roles122 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %122, i32 0, i32 6, !dbg !8822
  %123 = load i32, i32* %roles122, align 4, !dbg !8822
  %and123 = and i32 %123, 1, !dbg !8823
  %tobool124 = icmp ne i32 %and123, 0, !dbg !8823
  br i1 %tobool124, label %if.then125, label %if.end131, !dbg !8824

if.then125:                                       ; preds = %if.end119
  %124 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8825
  %flags126 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %124, i32 0, i32 13, !dbg !8827
  %125 = load i8, i8* %flags126, align 8, !dbg !8828
  %conv127 = zext i8 %125 to i32, !dbg !8828
  %or = or i32 %conv127, 2, !dbg !8828
  %conv128 = trunc i32 %or to i8, !dbg !8828
  store i8 %conv128, i8* %flags126, align 8, !dbg !8828
  %126 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8829
  %127 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8830
  %scan_work129 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %127, i32 0, i32 17, !dbg !8831
  %call130 = call i32 @scsi_queue_work(%struct.Scsi_Host* %126, %struct.work_struct* %scan_work129) #12, !dbg !8832
  br label %if.end131, !dbg !8833

if.end131:                                        ; preds = %if.then125, %if.end119
  %128 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8834
  store %struct.fc_rport* %128, %struct.fc_rport** %retval, align 8, !dbg !8835
  br label %return, !dbg !8835

delete_rport:                                     ; preds = %if.then117
  call void @llvm.dbg.label(metadata !8836), !dbg !8837
  %129 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8838
  call void @transport_destroy_device(%struct.device* %129) #12, !dbg !8839
  br label %do.body132, !dbg !8840

do.body132:                                       ; preds = %delete_rport
  br label %do.body133, !dbg !8841

do.body133:                                       ; preds = %do.body132
  call void @llvm.dbg.declare(metadata i64* %__dummy134, metadata !8842, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.declare(metadata i64* %__dummy2135, metadata !8845, metadata !DIExpression()), !dbg !8844
  %cmp136 = icmp eq i64* %__dummy134, %__dummy2135, !dbg !8844
  %conv137 = zext i1 %cmp136 to i32, !dbg !8844
  store i32 1, i32* %tmp138, align 4, !dbg !8844
  %130 = load i32, i32* %tmp138, align 4, !dbg !8844
  br label %do.body139, !dbg !8846

do.body139:                                       ; preds = %do.body133
  br label %do.body140, !dbg !8847

do.body140:                                       ; preds = %do.body139
  br label %do.body141, !dbg !8848

do.body141:                                       ; preds = %do.body140
  call void @llvm.dbg.declare(metadata i64* %__dummy142, metadata !8850, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata i64* %__dummy2143, metadata !8854, metadata !DIExpression()), !dbg !8853
  %cmp144 = icmp eq i64* %__dummy142, %__dummy2143, !dbg !8853
  %conv145 = zext i1 %cmp144 to i32, !dbg !8853
  store i32 1, i32* %tmp146, align 4, !dbg !8853
  %131 = load i32, i32* %tmp146, align 4, !dbg !8853
  %call147 = call i64 @arch_local_irq_save() #12, !dbg !8855
  store i64 %call147, i64* %flags, align 8, !dbg !8855
  br label %do.end148, !dbg !8855

do.end148:                                        ; preds = %do.body141
  br label %do.end149, !dbg !8848

do.end149:                                        ; preds = %do.end148
  br label %do.body150, !dbg !8847

do.body150:                                       ; preds = %do.end149
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8856, !srcloc !8857
  br label %do.body151, !dbg !8856

do.body151:                                       ; preds = %do.body150
  %132 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8858
  %host_lock152 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %132, i32 0, i32 4, !dbg !8858
  %133 = load %struct.spinlock*, %struct.spinlock** %host_lock152, align 8, !dbg !8858
  store %struct.spinlock* %133, %struct.spinlock** %lock.addr.i169, align 8
  %134 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i169, align 8, !dbg !8859
  %135 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %134, i32 0, i32 0, !dbg !8860
  %rlock.i170 = bitcast %union.anon.0* %135 to %struct.raw_spinlock*, !dbg !8860
  br label %do.end154, !dbg !8858

do.end154:                                        ; preds = %do.body151
  br label %do.end155, !dbg !8856

do.end155:                                        ; preds = %do.end154
  br label %do.end156, !dbg !8847

do.end156:                                        ; preds = %do.end155
  br label %do.end157, !dbg !8846

do.end157:                                        ; preds = %do.end156
  br label %do.end158, !dbg !8841

do.end158:                                        ; preds = %do.end157
  %136 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8861
  %peers159 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %136, i32 0, i32 14, !dbg !8862
  call void @list_del(%struct.list_head* %peers159) #12, !dbg !8863
  %137 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8864
  call void @scsi_host_put(%struct.Scsi_Host* %137) #12, !dbg !8865
  %138 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8866
  %host_lock160 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %138, i32 0, i32 4, !dbg !8867
  %139 = load %struct.spinlock*, %struct.spinlock** %host_lock160, align 8, !dbg !8867
  %140 = load i64, i64* %flags, align 8, !dbg !8868
  store %struct.spinlock* %139, %struct.spinlock** %lock.addr.i162, align 8
  store i64 %140, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8869
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8869
  store i32 1, i32* %tmp.i, align 4, !dbg !8869
  %141 = load i32, i32* %tmp.i, align 4, !dbg !8869
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8870
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8870
  store i32 1, i32* %tmp8.i, align 4, !dbg !8870
  %142 = load i32, i32* %tmp8.i, align 4, !dbg !8870
  %143 = load i64, i64* %flags.addr.i, align 8, !dbg !8871
  call void @arch_local_irq_restore(i64 %143) #11, !dbg !8871
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8872, !srcloc !7797
  %144 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i162, align 8, !dbg !8873
  %145 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %144, i32 0, i32 0, !dbg !8873
  %rlock.i163 = bitcast %union.anon.0* %145 to %struct.raw_spinlock*, !dbg !8873
  %146 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8874
  %parent161 = getelementptr inbounds %struct.device, %struct.device* %146, i32 0, i32 1, !dbg !8875
  %147 = load %struct.device*, %struct.device** %parent161, align 8, !dbg !8875
  call void @put_device(%struct.device* %147) #12, !dbg !8876
  %148 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !8877
  %149 = bitcast %struct.fc_rport* %148 to i8*, !dbg !8877
  call void @kfree(i8* %149) #12, !dbg !8878
  store %struct.fc_rport* null, %struct.fc_rport** %retval, align 8, !dbg !8879
  br label %return, !dbg !8879

return:                                           ; preds = %do.end158, %if.end131, %if.then
  %150 = load %struct.fc_rport*, %struct.fc_rport** %retval, align 8, !dbg !8880
  ret %struct.fc_rport* %150, !dbg !8880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fc_remote_port_delete(%struct.fc_rport* %rport) #0 !dbg !8881 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !7624, metadata !DIExpression()), !dbg !8882
  %flags.addr.i46 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i46, metadata !7631, metadata !DIExpression()), !dbg !8884
  %tmp.i47 = alloca i32, align 4
  %tmp8.i48 = alloca i32, align 4
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !7624, metadata !DIExpression()), !dbg !8885
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !8889
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !8890
  %rport.addr = alloca %struct.fc_rport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %timeout = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !8897, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !8899, metadata !DIExpression()), !dbg !8900
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8901
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 15, !dbg !8901
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !8901
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8901
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !8901
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !8900
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !8902, metadata !DIExpression()), !dbg !8903
  %2 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8904
  %dev_loss_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %2, i32 0, i32 2, !dbg !8905
  %3 = load i32, i32* %dev_loss_tmo, align 8, !dbg !8905
  %conv = zext i32 %3 to i64, !dbg !8904
  store i64 %conv, i64* %timeout, align 8, !dbg !8903
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8906, metadata !DIExpression()), !dbg !8907
  br label %do.body, !dbg !8908

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8909

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8910, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8913, metadata !DIExpression()), !dbg !8912
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8912
  %conv2 = zext i1 %cmp to i32, !dbg !8912
  store i32 1, i32* %tmp, align 4, !dbg !8912
  %4 = load i32, i32* %tmp, align 4, !dbg !8912
  br label %do.body3, !dbg !8914

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !8915

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !8916

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !8918, metadata !DIExpression()), !dbg !8921
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !8922, metadata !DIExpression()), !dbg !8921
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !8921
  %conv9 = zext i1 %cmp8 to i32, !dbg !8921
  store i32 1, i32* %tmp10, align 4, !dbg !8921
  %5 = load i32, i32* %tmp10, align 4, !dbg !8921
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !8923
  store i64 %call11, i64* %flags, align 8, !dbg !8923
  br label %do.end, !dbg !8923

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !8916

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !8915

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8924, !srcloc !8925
  br label %do.body14, !dbg !8924

do.body14:                                        ; preds = %do.body13
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8926
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 4, !dbg !8926
  %7 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !8926
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8927
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8928
  %rlock.i = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !8928
  br label %do.end16, !dbg !8926

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !8924

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8915

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8914

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8909

do.end20:                                         ; preds = %do.end19
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8929
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 7, !dbg !8930
  %11 = load i32, i32* %port_state, align 8, !dbg !8930
  %cmp21 = icmp ne i32 %11, 2, !dbg !8931
  br i1 %cmp21, label %if.then, label %if.end, !dbg !8932

if.then:                                          ; preds = %do.end20
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8933
  %host_lock23 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 4, !dbg !8934
  %13 = load %struct.spinlock*, %struct.spinlock** %host_lock23, align 8, !dbg !8934
  %14 = load i64, i64* %flags, align 8, !dbg !8935
  store %struct.spinlock* %13, %struct.spinlock** %lock.addr.i43, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8936
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8936
  store i32 1, i32* %tmp.i, align 4, !dbg !8936
  %15 = load i32, i32* %tmp.i, align 4, !dbg !8936
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8937
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8937
  store i32 1, i32* %tmp8.i, align 4, !dbg !8937
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !8937
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !8938
  call void @arch_local_irq_restore(i64 %17) #11, !dbg !8938
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8939, !srcloc !7797
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !8940
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !8940
  %rlock.i44 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !8940
  br label %return, !dbg !8941

if.end:                                           ; preds = %do.end20
  %20 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8942
  %port_state24 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %20, i32 0, i32 7, !dbg !8943
  store i32 4, i32* %port_state24, align 8, !dbg !8944
  %21 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8945
  %flags25 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %21, i32 0, i32 13, !dbg !8946
  %22 = load i8, i8* %flags25, align 8, !dbg !8947
  %conv26 = zext i8 %22 to i32, !dbg !8947
  %or = or i32 %conv26, 1, !dbg !8947
  %conv27 = trunc i32 %or to i8, !dbg !8947
  store i8 %conv27, i8* %flags25, align 8, !dbg !8947
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8948
  %host_lock28 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 4, !dbg !8949
  %24 = load %struct.spinlock*, %struct.spinlock** %host_lock28, align 8, !dbg !8949
  %25 = load i64, i64* %flags, align 8, !dbg !8950
  store %struct.spinlock* %24, %struct.spinlock** %lock.addr.i45, align 8
  store i64 %25, i64* %flags.addr.i46, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !8951
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !8951
  store i32 1, i32* %tmp.i47, align 4, !dbg !8951
  %26 = load i32, i32* %tmp.i47, align 4, !dbg !8951
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !8952
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !8952
  store i32 1, i32* %tmp8.i48, align 4, !dbg !8952
  %27 = load i32, i32* %tmp8.i48, align 4, !dbg !8952
  %28 = load i64, i64* %flags.addr.i46, align 8, !dbg !8953
  call void @arch_local_irq_restore(i64 %28) #11, !dbg !8953
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8954, !srcloc !7797
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !8955
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !8955
  %rlock.i49 = bitcast %union.anon.0* %30 to %struct.raw_spinlock*, !dbg !8955
  %31 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8956
  %dev29 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %31, i32 0, i32 15, !dbg !8957
  call void @scsi_target_block(%struct.device* %dev29) #12, !dbg !8958
  %32 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8959
  %fast_io_fail_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %32, i32 0, i32 9, !dbg !8961
  %33 = load i32, i32* %fast_io_fail_tmo, align 8, !dbg !8961
  %cmp30 = icmp ne i32 %33, -1, !dbg !8962
  br i1 %cmp30, label %land.lhs.true, label %if.end40, !dbg !8963

land.lhs.true:                                    ; preds = %if.end
  %34 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8964
  %fast_io_fail_tmo32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %34, i32 0, i32 9, !dbg !8965
  %35 = load i32, i32* %fast_io_fail_tmo32, align 8, !dbg !8965
  %conv33 = zext i32 %35 to i64, !dbg !8964
  %36 = load i64, i64* %timeout, align 8, !dbg !8966
  %cmp34 = icmp ult i64 %conv33, %36, !dbg !8967
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !8968

if.then36:                                        ; preds = %land.lhs.true
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8969
  %38 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8970
  %fail_io_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %38, i32 0, i32 18, !dbg !8971
  %39 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8972
  %fast_io_fail_tmo37 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %39, i32 0, i32 9, !dbg !8973
  %40 = load i32, i32* %fast_io_fail_tmo37, align 8, !dbg !8973
  %mul = mul i32 %40, 250, !dbg !8974
  %conv38 = zext i32 %mul to i64, !dbg !8972
  %call39 = call i32 @fc_queue_devloss_work(%struct.Scsi_Host* %37, %struct.delayed_work* %fail_io_work, i64 %conv38) #12, !dbg !8975
  br label %if.end40, !dbg !8975

if.end40:                                         ; preds = %if.then36, %land.lhs.true, %if.end
  %41 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !8976
  %42 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !8977
  %dev_loss_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %42, i32 0, i32 16, !dbg !8978
  %43 = load i64, i64* %timeout, align 8, !dbg !8979
  %mul41 = mul i64 %43, 250, !dbg !8980
  %call42 = call i32 @fc_queue_devloss_work(%struct.Scsi_Host* %41, %struct.delayed_work* %dev_loss_work, i64 %mul41) #12, !dbg !8981
  br label %return, !dbg !8982

return:                                           ; preds = %if.end40, %if.then
  ret void, !dbg !8982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.Scsi_Host* @dev_to_shost(%struct.device* %dev) #0 !dbg !8983 {
entry:
  %retval = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8986, metadata !DIExpression()), !dbg !8987
  br label %while.cond, !dbg !8988

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8989
  %call = call i32 @scsi_is_host_device(%struct.device* %0) #12, !dbg !8990
  %tobool = icmp ne i32 %call, 0, !dbg !8991
  %lnot = xor i1 %tobool, true, !dbg !8991
  br i1 %lnot, label %while.body, label %while.end, !dbg !8988

while.body:                                       ; preds = %while.cond
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8992
  %parent = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 1, !dbg !8995
  %2 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8995
  %tobool1 = icmp ne %struct.device* %2, null, !dbg !8992
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8996

if.then:                                          ; preds = %while.body
  store %struct.Scsi_Host* null, %struct.Scsi_Host** %retval, align 8, !dbg !8997
  br label %return, !dbg !8997

if.end:                                           ; preds = %while.body
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8998
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 1, !dbg !8999
  %4 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !8999
  store %struct.device* %4, %struct.device** %dev.addr, align 8, !dbg !9000
  br label %while.cond, !dbg !8988, !llvm.loop !9001

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9003, metadata !DIExpression()), !dbg !9005
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9005
  %6 = bitcast %struct.device* %5 to i8*, !dbg !9005
  store i8* %6, i8** %__mptr, align 8, !dbg !9005
  br label %do.body, !dbg !9005

do.body:                                          ; preds = %while.end
  br label %do.end, !dbg !9006

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !9005
  %add.ptr = getelementptr i8, i8* %7, i64 -624, !dbg !9005
  %8 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !9005
  store %struct.Scsi_Host* %8, %struct.Scsi_Host** %tmp, align 8, !dbg !9006
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !9005
  store %struct.Scsi_Host* %9, %struct.Scsi_Host** %retval, align 8, !dbg !9008
  br label %return, !dbg !9008

return:                                           ; preds = %do.end, %if.then
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %retval, align 8, !dbg !9009
  ret %struct.Scsi_Host* %10, !dbg !9009
}

; Function Attrs: noredzone
declare dso_local void @scsi_target_block(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_queue_devloss_work(%struct.Scsi_Host* %shost, %struct.delayed_work* %work, i64 %delay) #0 !dbg !9010 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %work.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9014, metadata !DIExpression()), !dbg !9015
  store %struct.delayed_work* %work, %struct.delayed_work** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %work.addr, metadata !9016, metadata !DIExpression()), !dbg !9017
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !9018, metadata !DIExpression()), !dbg !9019
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9020
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !9020
  %1 = load i8*, i8** %shost_data, align 8, !dbg !9020
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !9020
  %devloss_work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %2, i32 0, i32 36, !dbg !9020
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q, align 8, !dbg !9020
  %tobool = icmp ne %struct.workqueue_struct* %3, null, !dbg !9020
  %lnot = xor i1 %tobool, true, !dbg !9020
  %lnot1 = xor i1 %lnot, true, !dbg !9020
  %lnot2 = xor i1 %lnot1, true, !dbg !9020
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9020
  %conv = sext i32 %lnot.ext to i64, !dbg !9020
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9020
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9022

if.then:                                          ; preds = %entry
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9023
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 10, !dbg !9025
  %5 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !9025
  %name = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %5, i32 0, i32 1, !dbg !9026
  %6 = load i8*, i8** %name, align 8, !dbg !9026
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.174, i64 0, i64 0), i8* %6) #13, !dbg !9027
  call void @dump_stack() #13, !dbg !9028
  store i32 -22, i32* %retval, align 4, !dbg !9029
  br label %return, !dbg !9029

if.end:                                           ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9030
  %shost_data4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 49, !dbg !9030
  %8 = load i8*, i8** %shost_data4, align 8, !dbg !9030
  %9 = bitcast i8* %8 to %struct.fc_host_attrs*, !dbg !9030
  %devloss_work_q5 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 36, !dbg !9030
  %10 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q5, align 8, !dbg !9030
  %11 = load %struct.delayed_work*, %struct.delayed_work** %work.addr, align 8, !dbg !9031
  %12 = load i64, i64* %delay.addr, align 8, !dbg !9032
  %call6 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %10, %struct.delayed_work* %11, i64 %12) #12, !dbg !9033
  %conv7 = zext i1 %call6 to i32, !dbg !9033
  store i32 %conv7, i32* %retval, align 4, !dbg !9034
  br label %return, !dbg !9034

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9035
  ret i32 %13, !dbg !9035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fc_block_rport(%struct.fc_rport* %rport) #0 !dbg !9036 {
entry:
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !7633, metadata !DIExpression()), !dbg !9039
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !7624, metadata !DIExpression()), !dbg !9047
  %flags.addr.i60 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i60, metadata !7631, metadata !DIExpression()), !dbg !9049
  %tmp.i61 = alloca i32, align 4
  %tmp8.i62 = alloca i32, align 4
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !7624, metadata !DIExpression()), !dbg !9050
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !9052
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !9053
  %retval = alloca i32, align 4
  %rport.addr = alloca %struct.fc_rport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !9060, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !9064
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 15, !dbg !9064
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !9064
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9064
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !9064
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !9063
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9065, metadata !DIExpression()), !dbg !9066
  br label %do.body, !dbg !9067

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9068

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9072, metadata !DIExpression()), !dbg !9071
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9071
  %conv = zext i1 %cmp to i32, !dbg !9071
  store i32 1, i32* %tmp, align 4, !dbg !9071
  %2 = load i32, i32* %tmp, align 4, !dbg !9071
  br label %do.body2, !dbg !9073

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9074

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9075

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9077, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9081, metadata !DIExpression()), !dbg !9080
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9080
  %conv8 = zext i1 %cmp7 to i32, !dbg !9080
  store i32 1, i32* %tmp9, align 4, !dbg !9080
  %3 = load i32, i32* %tmp9, align 4, !dbg !9080
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !9082
  store i64 %call10, i64* %flags, align 8, !dbg !9082
  br label %do.end, !dbg !9082

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9075

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9074

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9083, !srcloc !9084
  br label %do.body13, !dbg !9083

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9085
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 4, !dbg !9085
  %5 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !9085
  store %struct.spinlock* %5, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9086
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9087
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9087
  br label %do.end15, !dbg !9085

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9083

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9074

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9073

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9068

do.end19:                                         ; preds = %do.end18
  br label %while.cond, !dbg !9088

while.cond:                                       ; preds = %do.end51, %do.end19
  %8 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !9089
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %8, i32 0, i32 7, !dbg !9090
  %9 = load i32, i32* %port_state, align 8, !dbg !9090
  %cmp20 = icmp eq i32 %9, 4, !dbg !9091
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !9092

land.rhs:                                         ; preds = %while.cond
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !9093
  %flags22 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 13, !dbg !9094
  %11 = load i8, i8* %flags22, align 8, !dbg !9094
  %conv23 = zext i8 %11 to i32, !dbg !9093
  %and = and i32 %conv23, 4, !dbg !9095
  %tobool = icmp ne i32 %and, 0, !dbg !9096
  %lnot = xor i1 %tobool, true, !dbg !9096
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !9097
  br i1 %12, label %while.body, label %while.end, !dbg !9088

while.body:                                       ; preds = %land.end
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9098
  %host_lock24 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 4, !dbg !9099
  %14 = load %struct.spinlock*, %struct.spinlock** %host_lock24, align 8, !dbg !9099
  %15 = load i64, i64* %flags, align 8, !dbg !9100
  store %struct.spinlock* %14, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %15, i64* %flags.addr.i60, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9101
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9101
  store i32 1, i32* %tmp.i61, align 4, !dbg !9101
  %16 = load i32, i32* %tmp.i61, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9102
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9102
  store i32 1, i32* %tmp8.i62, align 4, !dbg !9102
  %17 = load i32, i32* %tmp8.i62, align 4, !dbg !9102
  %18 = load i64, i64* %flags.addr.i60, align 8, !dbg !9103
  call void @arch_local_irq_restore(i64 %18) #11, !dbg !9103
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9104, !srcloc !7797
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !9105
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !9105
  %rlock.i63 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !9105
  call void @msleep(i32 1000) #12, !dbg !9106
  br label %do.body25, !dbg !9107

do.body25:                                        ; preds = %while.body
  br label %do.body26, !dbg !9108

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9109, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !9112, metadata !DIExpression()), !dbg !9111
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !9111
  %conv30 = zext i1 %cmp29 to i32, !dbg !9111
  store i32 1, i32* %tmp31, align 4, !dbg !9111
  %21 = load i32, i32* %tmp31, align 4, !dbg !9111
  br label %do.body32, !dbg !9113

do.body32:                                        ; preds = %do.body26
  br label %do.body33, !dbg !9114

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !9115

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !9117, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !9121, metadata !DIExpression()), !dbg !9120
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !9120
  %conv38 = zext i1 %cmp37 to i32, !dbg !9120
  store i32 1, i32* %tmp39, align 4, !dbg !9120
  %22 = load i32, i32* %tmp39, align 4, !dbg !9120
  %call40 = call i64 @arch_local_irq_save() #12, !dbg !9122
  store i64 %call40, i64* %flags, align 8, !dbg !9122
  br label %do.end41, !dbg !9122

do.end41:                                         ; preds = %do.body34
  br label %do.end42, !dbg !9115

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !9114

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9123, !srcloc !9124
  br label %do.body44, !dbg !9123

do.body44:                                        ; preds = %do.body43
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9125
  %host_lock45 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 4, !dbg !9125
  %24 = load %struct.spinlock*, %struct.spinlock** %host_lock45, align 8, !dbg !9125
  store %struct.spinlock* %24, %struct.spinlock** %lock.addr.i64, align 8
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !9126
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !9127
  %rlock.i65 = bitcast %union.anon.0* %26 to %struct.raw_spinlock*, !dbg !9127
  br label %do.end47, !dbg !9125

do.end47:                                         ; preds = %do.body44
  br label %do.end48, !dbg !9123

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !9114

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !9113

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !9108

do.end51:                                         ; preds = %do.end50
  br label %while.cond, !dbg !9088, !llvm.loop !9128

while.end:                                        ; preds = %land.end
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9130
  %host_lock52 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %27, i32 0, i32 4, !dbg !9131
  %28 = load %struct.spinlock*, %struct.spinlock** %host_lock52, align 8, !dbg !9131
  %29 = load i64, i64* %flags, align 8, !dbg !9132
  store %struct.spinlock* %28, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9133
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9133
  store i32 1, i32* %tmp.i, align 4, !dbg !9133
  %30 = load i32, i32* %tmp.i, align 4, !dbg !9133
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9134
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9134
  store i32 1, i32* %tmp8.i, align 4, !dbg !9134
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !9134
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !9135
  call void @arch_local_irq_restore(i64 %32) #11, !dbg !9135
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9136, !srcloc !7797
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !9137
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !9137
  %rlock.i58 = bitcast %union.anon.0* %34 to %struct.raw_spinlock*, !dbg !9137
  %35 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !9138
  %flags53 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %35, i32 0, i32 13, !dbg !9140
  %36 = load i8, i8* %flags53, align 8, !dbg !9140
  %conv54 = zext i8 %36 to i32, !dbg !9138
  %and55 = and i32 %conv54, 4, !dbg !9141
  %tobool56 = icmp ne i32 %and55, 0, !dbg !9141
  br i1 %tobool56, label %if.then, label %if.end, !dbg !9142

if.then:                                          ; preds = %while.end
  store i32 8201, i32* %retval, align 4, !dbg !9143
  br label %return, !dbg !9143

if.end:                                           ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !9144
  br label %return, !dbg !9144

return:                                           ; preds = %if.end, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !9145
  ret i32 %37, !dbg !9145
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fc_block_scsi_eh(%struct.scsi_cmnd* %cmnd) #0 !dbg !9146 {
entry:
  %retval = alloca i32, align 4
  %cmnd.addr = alloca %struct.scsi_cmnd*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp23 = alloca i64, align 8
  store %struct.scsi_cmnd* %cmnd, %struct.scsi_cmnd** %cmnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmnd.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !9149, metadata !DIExpression()), !dbg !9150
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmnd.addr, align 8, !dbg !9151
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !9151
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9151
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %1) #12, !dbg !9151
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call, i32 0, i32 3, !dbg !9151
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !9151
  %2 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9151
  %call1 = call i32 @scsi_is_fc_rport(%struct.device* %2) #12, !dbg !9151
  %tobool = icmp ne i32 %call1, 0, !dbg !9151
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9151

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9152, metadata !DIExpression()), !dbg !9154
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmnd.addr, align 8, !dbg !9154
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 1, !dbg !9154
  %4 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !9154
  %call3 = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %4) #12, !dbg !9154
  %dev4 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call3, i32 0, i32 3, !dbg !9154
  %parent5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 1, !dbg !9154
  %5 = load %struct.device*, %struct.device** %parent5, align 8, !dbg !9154
  %6 = bitcast %struct.device* %5 to i8*, !dbg !9154
  store i8* %6, i8** %__mptr, align 8, !dbg !9154
  br label %do.body, !dbg !9154

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9155

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !9154
  %add.ptr = getelementptr i8, i8* %7, i64 -96, !dbg !9154
  %8 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !9154
  store %struct.fc_rport* %8, %struct.fc_rport** %tmp, align 8, !dbg !9155
  %9 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !9154
  br label %cond.end, !dbg !9151

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9151

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.fc_rport* [ %9, %do.end ], [ null, %cond.false ], !dbg !9151
  store %struct.fc_rport* %cond, %struct.fc_rport** %rport, align 8, !dbg !9150
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9157, metadata !DIExpression()), !dbg !9160
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !9160
  %tobool6 = icmp ne %struct.fc_rport* %10, null, !dbg !9160
  %lnot = xor i1 %tobool6, true, !dbg !9160
  %lnot7 = xor i1 %lnot, true, !dbg !9160
  %lnot8 = xor i1 %lnot7, true, !dbg !9160
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !9160
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9160
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !9161
  %tobool9 = icmp ne i32 %11, 0, !dbg !9161
  %lnot10 = xor i1 %tobool9, true, !dbg !9161
  %lnot12 = xor i1 %lnot10, true, !dbg !9161
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !9161
  %conv = sext i32 %lnot.ext13 to i64, !dbg !9161
  %tobool14 = icmp ne i64 %conv, 0, !dbg !9161
  br i1 %tobool14, label %if.then, label %if.end, !dbg !9160

if.then:                                          ; preds = %cond.end
  br label %do.body15, !dbg !9161

do.body15:                                        ; preds = %if.then
  br label %do.body16, !dbg !9163

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !9165

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !9163

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 3312, i32 2307, i64 12) #10, !dbg !9167, !srcloc !9169
  br label %do.end19, !dbg !9167

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 433) #10, !dbg !9170, !srcloc !9172
  br label %do.body20, !dbg !9163

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !9173

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !9163

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !9163

if.end:                                           ; preds = %do.end22, %cond.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !9160
  %tobool24 = icmp ne i32 %12, 0, !dbg !9160
  %lnot25 = xor i1 %tobool24, true, !dbg !9160
  %lnot27 = xor i1 %lnot25, true, !dbg !9160
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !9160
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !9160
  store i64 %conv29, i64* %tmp23, align 8, !dbg !9161
  %13 = load i64, i64* %tmp23, align 8, !dbg !9160
  %tobool30 = icmp ne i64 %13, 0, !dbg !9175
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !9176

if.then31:                                        ; preds = %if.end
  store i32 8201, i32* %retval, align 4, !dbg !9177
  br label %return, !dbg !9177

if.end32:                                         ; preds = %if.end
  %14 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !9178
  %call33 = call i32 @fc_block_rport(%struct.fc_rport* %14) #12, !dbg !9179
  store i32 %call33, i32* %retval, align 4, !dbg !9180
  br label %return, !dbg !9180

return:                                           ; preds = %if.end32, %if.then31
  %15 = load i32, i32* %retval, align 4, !dbg !9181
  ret i32 %15, !dbg !9181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.fc_vport* @fc_vport_create(%struct.Scsi_Host* %shost, i32 %channel, %struct.fc_vport_identifiers* %ids) #0 !dbg !9182 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %ids.addr = alloca %struct.fc_vport_identifiers*, align 8
  %stat = alloca i32, align 4
  %vport = alloca %struct.fc_vport*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9194, metadata !DIExpression()), !dbg !9195
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9196, metadata !DIExpression()), !dbg !9197
  store %struct.fc_vport_identifiers* %ids, %struct.fc_vport_identifiers** %ids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_vport_identifiers** %ids.addr, metadata !9198, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !9200, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !9202, metadata !DIExpression()), !dbg !9203
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9204
  %1 = load i32, i32* %channel.addr, align 4, !dbg !9205
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9206
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 47, !dbg !9207
  %3 = load %struct.fc_vport_identifiers*, %struct.fc_vport_identifiers** %ids.addr, align 8, !dbg !9208
  %call = call i32 @fc_vport_setup(%struct.Scsi_Host* %0, i32 %1, %struct.device* %shost_gendev, %struct.fc_vport_identifiers* %3, %struct.fc_vport** %vport) #12, !dbg !9209
  store i32 %call, i32* %stat, align 4, !dbg !9210
  %4 = load i32, i32* %stat, align 4, !dbg !9211
  %tobool = icmp ne i32 %4, 0, !dbg !9211
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9211

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9211

cond.false:                                       ; preds = %entry
  %5 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9212
  br label %cond.end, !dbg !9211

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.fc_vport* [ null, %cond.true ], [ %5, %cond.false ], !dbg !9211
  ret %struct.fc_vport* %cond, !dbg !9213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_vport_setup(%struct.Scsi_Host* %shost, i32 %channel, %struct.device* %pdev, %struct.fc_vport_identifiers* %ids, %struct.fc_vport** %ret_vport) #0 !dbg !9214 {
entry:
  %lock.addr.i176 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i176, metadata !7633, metadata !DIExpression()), !dbg !9218
  %lock.addr.i171 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i171, metadata !7624, metadata !DIExpression()), !dbg !9225
  %flags.addr.i172 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i172, metadata !7631, metadata !DIExpression()), !dbg !9227
  %tmp.i173 = alloca i32, align 4
  %tmp8.i174 = alloca i32, align 4
  %lock.addr.i169 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i169, metadata !7633, metadata !DIExpression()), !dbg !9228
  %lock.addr.i164 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i164, metadata !7624, metadata !DIExpression()), !dbg !9235
  %flags.addr.i165 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i165, metadata !7631, metadata !DIExpression()), !dbg !9237
  %tmp.i166 = alloca i32, align 4
  %tmp8.i167 = alloca i32, align 4
  %lock.addr.i159 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i159, metadata !7624, metadata !DIExpression()), !dbg !9238
  %flags.addr.i160 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i160, metadata !7631, metadata !DIExpression()), !dbg !9242
  %tmp.i161 = alloca i32, align 4
  %tmp8.i162 = alloca i32, align 4
  %lock.addr.i157 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i157, metadata !7624, metadata !DIExpression()), !dbg !9243
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !9245
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !9246
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %pdev.addr = alloca %struct.device*, align 8
  %ids.addr = alloca %struct.fc_vport_identifiers*, align 8
  %ret_vport.addr = alloca %struct.fc_vport**, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %fci = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %dev = alloca %struct.device*, align 8
  %flags = alloca i64, align 8
  %size = alloca i64, align 8
  %error = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %__dummy95 = alloca i64, align 8
  %__dummy296 = alloca i64, align 8
  %tmp99 = alloca i32, align 4
  %__dummy103 = alloca i64, align 8
  %__dummy2104 = alloca i64, align 8
  %tmp107 = alloca i32, align 4
  %__dummy128 = alloca i64, align 8
  %__dummy2129 = alloca i64, align 8
  %tmp132 = alloca i32, align 4
  %__dummy136 = alloca i64, align 8
  %__dummy2137 = alloca i64, align 8
  %tmp140 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9253, metadata !DIExpression()), !dbg !9254
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store %struct.device* %pdev, %struct.device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %pdev.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store %struct.fc_vport_identifiers* %ids, %struct.fc_vport_identifiers** %ids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_vport_identifiers** %ids.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  store %struct.fc_vport** %ret_vport, %struct.fc_vport*** %ret_vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_vport*** %ret_vport.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !9263, metadata !DIExpression()), !dbg !9264
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9265
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 49, !dbg !9265
  %1 = load i8*, i8** %shost_data, align 8, !dbg !9265
  %2 = bitcast i8* %1 to %struct.fc_host_attrs*, !dbg !9265
  store %struct.fc_host_attrs* %2, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9264
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %fci, metadata !9266, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9268, metadata !DIExpression()), !dbg !9270
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9270
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 11, !dbg !9270
  %4 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !9270
  %5 = bitcast %struct.scsi_transport_template* %4 to i8*, !dbg !9270
  store i8* %5, i8** %__mptr, align 8, !dbg !9270
  br label %do.body, !dbg !9270

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9271

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9270
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !9270
  %7 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !9270
  store %struct.fc_internal* %7, %struct.fc_internal** %tmp, align 8, !dbg !9271
  %8 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !9270
  store %struct.fc_internal* %8, %struct.fc_internal** %fci, align 8, !dbg !9267
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !9273, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9275, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9277, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9279, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata i32* %error, metadata !9281, metadata !DIExpression()), !dbg !9282
  %9 = load %struct.fc_vport**, %struct.fc_vport*** %ret_vport.addr, align 8, !dbg !9283
  store %struct.fc_vport* null, %struct.fc_vport** %9, align 8, !dbg !9284
  %10 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !9285
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %10, i32 0, i32 1, !dbg !9287
  %11 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !9287
  %vport_create = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %11, i32 0, i32 19, !dbg !9288
  %12 = load i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)** %vport_create, align 8, !dbg !9288
  %tobool = icmp ne i32 (%struct.fc_vport*, i1)* %12, null, !dbg !9285
  br i1 %tobool, label %if.end, label %if.then, !dbg !9289

if.then:                                          ; preds = %do.end
  store i32 -2, i32* %retval, align 4, !dbg !9290
  br label %return, !dbg !9290

if.end:                                           ; preds = %do.end
  %13 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !9291
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %13, i32 0, i32 1, !dbg !9292
  %14 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !9292
  %dd_fcvport_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %14, i32 0, i32 25, !dbg !9293
  %15 = load i32, i32* %dd_fcvport_size, align 4, !dbg !9293
  %conv = zext i32 %15 to i64, !dbg !9291
  %add = add i64 880, %conv, !dbg !9294
  store i64 %add, i64* %size, align 8, !dbg !9295
  %16 = load i64, i64* %size, align 8, !dbg !9296
  %call = call i8* @kzalloc(i64 %16, i32 3264) #12, !dbg !9297
  %17 = bitcast i8* %call to %struct.fc_vport*, !dbg !9297
  store %struct.fc_vport* %17, %struct.fc_vport** %vport, align 8, !dbg !9298
  %18 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9299
  %tobool2 = icmp ne %struct.fc_vport* %18, null, !dbg !9299
  %lnot = xor i1 %tobool2, true, !dbg !9299
  %lnot3 = xor i1 %lnot, true, !dbg !9299
  %lnot4 = xor i1 %lnot3, true, !dbg !9299
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !9299
  %conv5 = sext i32 %lnot.ext to i64, !dbg !9299
  %tobool6 = icmp ne i64 %conv5, 0, !dbg !9299
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !9301

if.then7:                                         ; preds = %if.end
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.fc_vport_setup, i64 0, i64 0)) #13, !dbg !9302
  store i32 -12, i32* %retval, align 4, !dbg !9304
  br label %return, !dbg !9304

if.end9:                                          ; preds = %if.end
  %19 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9305
  %vport_state = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %19, i32 0, i32 0, !dbg !9306
  store i32 0, i32* %vport_state, align 8, !dbg !9307
  %20 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9308
  %vport_last_state = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %20, i32 0, i32 1, !dbg !9309
  store i32 0, i32* %vport_last_state, align 4, !dbg !9310
  %21 = load %struct.fc_vport_identifiers*, %struct.fc_vport_identifiers** %ids.addr, align 8, !dbg !9311
  %node_name = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %21, i32 0, i32 0, !dbg !9312
  %22 = load i64, i64* %node_name, align 8, !dbg !9312
  %23 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9313
  %node_name10 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %23, i32 0, i32 2, !dbg !9314
  store i64 %22, i64* %node_name10, align 8, !dbg !9315
  %24 = load %struct.fc_vport_identifiers*, %struct.fc_vport_identifiers** %ids.addr, align 8, !dbg !9316
  %port_name = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %24, i32 0, i32 1, !dbg !9317
  %25 = load i64, i64* %port_name, align 8, !dbg !9317
  %26 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9318
  %port_name11 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %26, i32 0, i32 3, !dbg !9319
  store i64 %25, i64* %port_name11, align 8, !dbg !9320
  %27 = load %struct.fc_vport_identifiers*, %struct.fc_vport_identifiers** %ids.addr, align 8, !dbg !9321
  %roles = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %27, i32 0, i32 2, !dbg !9322
  %28 = load i32, i32* %roles, align 8, !dbg !9322
  %29 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9323
  %roles12 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %29, i32 0, i32 4, !dbg !9324
  store i32 %28, i32* %roles12, align 8, !dbg !9325
  %30 = load %struct.fc_vport_identifiers*, %struct.fc_vport_identifiers** %ids.addr, align 8, !dbg !9326
  %vport_type = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %30, i32 0, i32 4, !dbg !9327
  %31 = load i32, i32* %vport_type, align 8, !dbg !9327
  %32 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9328
  %vport_type13 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %32, i32 0, i32 6, !dbg !9329
  store i32 %31, i32* %vport_type13, align 8, !dbg !9330
  %33 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !9331
  %f14 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %33, i32 0, i32 1, !dbg !9333
  %34 = load %struct.fc_function_template*, %struct.fc_function_template** %f14, align 8, !dbg !9333
  %dd_fcvport_size15 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %34, i32 0, i32 25, !dbg !9334
  %35 = load i32, i32* %dd_fcvport_size15, align 4, !dbg !9334
  %tobool16 = icmp ne i32 %35, 0, !dbg !9331
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9335

if.then17:                                        ; preds = %if.end9
  %36 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9336
  %arrayidx = getelementptr %struct.fc_vport, %struct.fc_vport* %36, i64 1, !dbg !9336
  %37 = bitcast %struct.fc_vport* %arrayidx to i8*, !dbg !9337
  %38 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9338
  %dd_data = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %38, i32 0, i32 8, !dbg !9339
  store i8* %37, i8** %dd_data, align 8, !dbg !9340
  br label %if.end18, !dbg !9338

if.end18:                                         ; preds = %if.then17, %if.end9
  %39 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9341
  %40 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9342
  %shost19 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %40, i32 0, i32 9, !dbg !9343
  store %struct.Scsi_Host* %39, %struct.Scsi_Host** %shost19, align 8, !dbg !9344
  %41 = load i32, i32* %channel.addr, align 4, !dbg !9345
  %42 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9346
  %channel20 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %42, i32 0, i32 10, !dbg !9347
  store i32 %41, i32* %channel20, align 8, !dbg !9348
  %43 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9349
  %flags21 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %43, i32 0, i32 12, !dbg !9350
  store i8 1, i8* %flags21, align 8, !dbg !9351
  br label %do.body22, !dbg !9352

do.body22:                                        ; preds = %if.end18
  %44 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9353
  %vport_delete_work = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %44, i32 0, i32 15, !dbg !9353
  call void @__init_work(%struct.work_struct* %vport_delete_work, i32 0) #12, !dbg !9353
  %45 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9353
  %vport_delete_work23 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %45, i32 0, i32 15, !dbg !9353
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %vport_delete_work23, i32 0, i32 0, !dbg !9353
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !9353
  store i64 68719476704, i64* %counter, align 8, !dbg !9353
  %46 = bitcast %struct.atomic64_t* %data to i8*, !dbg !9353
  %47 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !9353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 8, i1 false), !dbg !9353
  %48 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9353
  %vport_delete_work24 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %48, i32 0, i32 15, !dbg !9353
  %entry25 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %vport_delete_work24, i32 0, i32 1, !dbg !9353
  call void @INIT_LIST_HEAD(%struct.list_head* %entry25) #12, !dbg !9353
  %49 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9353
  %vport_delete_work26 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %49, i32 0, i32 15, !dbg !9353
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %vport_delete_work26, i32 0, i32 2, !dbg !9353
  store void (%struct.work_struct*)* @fc_vport_sched_delete, void (%struct.work_struct*)** %func, align 8, !dbg !9353
  br label %do.end27, !dbg !9353

do.end27:                                         ; preds = %do.body22
  br label %do.body28, !dbg !9355

do.body28:                                        ; preds = %do.end27
  br label %do.body29, !dbg !9356

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9357, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9360, metadata !DIExpression()), !dbg !9359
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9359
  %conv30 = zext i1 %cmp to i32, !dbg !9359
  store i32 1, i32* %tmp31, align 4, !dbg !9359
  %50 = load i32, i32* %tmp31, align 4, !dbg !9359
  br label %do.body32, !dbg !9361

do.body32:                                        ; preds = %do.body29
  br label %do.body33, !dbg !9362

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !9363

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !9365, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !9369, metadata !DIExpression()), !dbg !9368
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !9368
  %conv38 = zext i1 %cmp37 to i32, !dbg !9368
  store i32 1, i32* %tmp39, align 4, !dbg !9368
  %51 = load i32, i32* %tmp39, align 4, !dbg !9368
  %call40 = call i64 @arch_local_irq_save() #12, !dbg !9370
  store i64 %call40, i64* %flags, align 8, !dbg !9370
  br label %do.end41, !dbg !9370

do.end41:                                         ; preds = %do.body34
  br label %do.end42, !dbg !9363

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !9362

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9371, !srcloc !9372
  br label %do.body44, !dbg !9371

do.body44:                                        ; preds = %do.body43
  %52 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9373
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %52, i32 0, i32 4, !dbg !9373
  %53 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !9373
  store %struct.spinlock* %53, %struct.spinlock** %lock.addr.i, align 8
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9374
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !9375
  %rlock.i = bitcast %union.anon.0* %55 to %struct.raw_spinlock*, !dbg !9375
  br label %do.end46, !dbg !9373

do.end46:                                         ; preds = %do.body44
  br label %do.end47, !dbg !9371

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !9362

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !9361

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !9356

do.end50:                                         ; preds = %do.end49
  %56 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9376
  %npiv_vports_inuse = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %56, i32 0, i32 32, !dbg !9377
  %57 = load i16, i16* %npiv_vports_inuse, align 4, !dbg !9377
  %conv51 = zext i16 %57 to i32, !dbg !9376
  %58 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9378
  %max_npiv_vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %58, i32 0, i32 7, !dbg !9379
  %59 = load i16, i16* %max_npiv_vports, align 4, !dbg !9379
  %conv52 = zext i16 %59 to i32, !dbg !9378
  %cmp53 = icmp sge i32 %conv51, %conv52, !dbg !9380
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !9381

if.then55:                                        ; preds = %do.end50
  %60 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9382
  %host_lock56 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %60, i32 0, i32 4, !dbg !9383
  %61 = load %struct.spinlock*, %struct.spinlock** %host_lock56, align 8, !dbg !9383
  %62 = load i64, i64* %flags, align 8, !dbg !9384
  store %struct.spinlock* %61, %struct.spinlock** %lock.addr.i159, align 8
  store i64 %62, i64* %flags.addr.i160, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9385
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9385
  store i32 1, i32* %tmp.i161, align 4, !dbg !9385
  %63 = load i32, i32* %tmp.i161, align 4, !dbg !9385
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9386
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9386
  store i32 1, i32* %tmp8.i162, align 4, !dbg !9386
  %64 = load i32, i32* %tmp8.i162, align 4, !dbg !9386
  %65 = load i64, i64* %flags.addr.i160, align 8, !dbg !9387
  call void @arch_local_irq_restore(i64 %65) #11, !dbg !9387
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9388, !srcloc !7797
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i159, align 8, !dbg !9389
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !9389
  %rlock.i163 = bitcast %union.anon.0* %67 to %struct.raw_spinlock*, !dbg !9389
  %68 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9390
  %69 = bitcast %struct.fc_vport* %68 to i8*, !dbg !9390
  call void @kfree(i8* %69) #12, !dbg !9391
  store i32 -28, i32* %retval, align 4, !dbg !9392
  br label %return, !dbg !9392

if.end57:                                         ; preds = %do.end50
  %70 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9393
  %npiv_vports_inuse58 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %70, i32 0, i32 32, !dbg !9394
  %71 = load i16, i16* %npiv_vports_inuse58, align 4, !dbg !9395
  %inc = add i16 %71, 1, !dbg !9395
  store i16 %inc, i16* %npiv_vports_inuse58, align 4, !dbg !9395
  %72 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9396
  %next_vport_number = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %72, i32 0, i32 31, !dbg !9397
  %73 = load i32, i32* %next_vport_number, align 8, !dbg !9398
  %inc59 = add i32 %73, 1, !dbg !9398
  store i32 %inc59, i32* %next_vport_number, align 8, !dbg !9398
  %74 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9399
  %number = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %74, i32 0, i32 11, !dbg !9400
  store i32 %73, i32* %number, align 4, !dbg !9401
  %75 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9402
  %peers = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %75, i32 0, i32 13, !dbg !9403
  %76 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9404
  %vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %76, i32 0, i32 28, !dbg !9405
  call void @list_add_tail(%struct.list_head* %peers, %struct.list_head* %vports) #12, !dbg !9406
  %77 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9407
  %call60 = call %struct.Scsi_Host* @scsi_host_get(%struct.Scsi_Host* %77) #12, !dbg !9408
  %78 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9409
  %host_lock61 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %78, i32 0, i32 4, !dbg !9410
  %79 = load %struct.spinlock*, %struct.spinlock** %host_lock61, align 8, !dbg !9410
  %80 = load i64, i64* %flags, align 8, !dbg !9411
  store %struct.spinlock* %79, %struct.spinlock** %lock.addr.i164, align 8
  store i64 %80, i64* %flags.addr.i165, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9412
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9412
  store i32 1, i32* %tmp.i166, align 4, !dbg !9412
  %81 = load i32, i32* %tmp.i166, align 4, !dbg !9412
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9413
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9413
  store i32 1, i32* %tmp8.i167, align 4, !dbg !9413
  %82 = load i32, i32* %tmp8.i167, align 4, !dbg !9413
  %83 = load i64, i64* %flags.addr.i165, align 8, !dbg !9414
  call void @arch_local_irq_restore(i64 %83) #11, !dbg !9414
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9415, !srcloc !7797
  %84 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i164, align 8, !dbg !9416
  %85 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %84, i32 0, i32 0, !dbg !9416
  %rlock.i168 = bitcast %union.anon.0* %85 to %struct.raw_spinlock*, !dbg !9416
  %86 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9417
  %dev62 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %86, i32 0, i32 14, !dbg !9418
  store %struct.device* %dev62, %struct.device** %dev, align 8, !dbg !9419
  %87 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9420
  call void @device_initialize(%struct.device* %87) #12, !dbg !9421
  %88 = load %struct.device*, %struct.device** %pdev.addr, align 8, !dbg !9422
  %call63 = call %struct.device* @get_device(%struct.device* %88) #12, !dbg !9423
  %89 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9424
  %parent = getelementptr inbounds %struct.device, %struct.device* %89, i32 0, i32 1, !dbg !9425
  store %struct.device* %call63, %struct.device** %parent, align 8, !dbg !9426
  %90 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9427
  %release = getelementptr inbounds %struct.device, %struct.device* %90, i32 0, i32 31, !dbg !9428
  store void (%struct.device*)* @fc_vport_dev_release, void (%struct.device*)** %release, align 8, !dbg !9429
  %91 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9430
  %92 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9431
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %92, i32 0, i32 16, !dbg !9432
  %93 = load i32, i32* %host_no, align 4, !dbg !9432
  %94 = load i32, i32* %channel.addr, align 4, !dbg !9433
  %95 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9434
  %number64 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %95, i32 0, i32 11, !dbg !9435
  %96 = load i32, i32* %number64, align 4, !dbg !9435
  %call65 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %91, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.186, i64 0, i64 0), i32 %93, i32 %94, i32 %96) #12, !dbg !9436
  %97 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9437
  call void @transport_setup_device(%struct.device* %97) #12, !dbg !9438
  %98 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9439
  %call66 = call i32 @device_add(%struct.device* %98) #12, !dbg !9440
  store i32 %call66, i32* %error, align 4, !dbg !9441
  %99 = load i32, i32* %error, align 4, !dbg !9442
  %tobool67 = icmp ne i32 %99, 0, !dbg !9442
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !9444

if.then68:                                        ; preds = %if.end57
  %call69 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.187, i64 0, i64 0)) #13, !dbg !9445
  br label %delete_vport, !dbg !9447

if.end70:                                         ; preds = %if.end57
  %100 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9448
  %call71 = call i32 @transport_add_device(%struct.device* %100) #12, !dbg !9449
  %101 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9450
  call void @transport_configure_device(%struct.device* %101) #12, !dbg !9451
  %102 = load %struct.fc_internal*, %struct.fc_internal** %fci, align 8, !dbg !9452
  %f72 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %102, i32 0, i32 1, !dbg !9453
  %103 = load %struct.fc_function_template*, %struct.fc_function_template** %f72, align 8, !dbg !9453
  %vport_create73 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %103, i32 0, i32 19, !dbg !9454
  %104 = load i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)** %vport_create73, align 8, !dbg !9454
  %105 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9455
  %106 = load %struct.fc_vport_identifiers*, %struct.fc_vport_identifiers** %ids.addr, align 8, !dbg !9456
  %disable = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %106, i32 0, i32 3, !dbg !9457
  %107 = load i8, i8* %disable, align 4, !dbg !9457
  %tobool74 = trunc i8 %107 to i1, !dbg !9457
  %call75 = call i32 %104(%struct.fc_vport* %105, i1 zeroext %tobool74) #12, !dbg !9452
  store i32 %call75, i32* %error, align 4, !dbg !9458
  %108 = load i32, i32* %error, align 4, !dbg !9459
  %tobool76 = icmp ne i32 %108, 0, !dbg !9459
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !9461

if.then77:                                        ; preds = %if.end70
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.188, i64 0, i64 0)) #13, !dbg !9462
  br label %delete_vport_all, !dbg !9464

if.end79:                                         ; preds = %if.end70
  %109 = load %struct.device*, %struct.device** %pdev.addr, align 8, !dbg !9465
  %110 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9467
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %110, i32 0, i32 47, !dbg !9468
  %cmp80 = icmp ne %struct.device* %109, %shost_gendev, !dbg !9469
  br i1 %cmp80, label %if.then82, label %if.end92, !dbg !9470

if.then82:                                        ; preds = %if.end79
  %111 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9471
  %shost_gendev83 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %111, i32 0, i32 47, !dbg !9473
  %kobj = getelementptr inbounds %struct.device, %struct.device* %shost_gendev83, i32 0, i32 0, !dbg !9474
  %112 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9475
  %kobj84 = getelementptr inbounds %struct.device, %struct.device* %112, i32 0, i32 0, !dbg !9476
  %113 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9477
  %call85 = call i8* @dev_name(%struct.device* %113) #12, !dbg !9478
  %call86 = call i32 @sysfs_create_link(%struct.kobject* %kobj, %struct.kobject* %kobj84, i8* %call85) #12, !dbg !9479
  store i32 %call86, i32* %error, align 4, !dbg !9480
  %114 = load i32, i32* %error, align 4, !dbg !9481
  %tobool87 = icmp ne i32 %114, 0, !dbg !9481
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !9483

if.then88:                                        ; preds = %if.then82
  %115 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9484
  %call89 = call i8* @dev_name(%struct.device* %115) #12, !dbg !9485
  %116 = load i32, i32* %error, align 4, !dbg !9486
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.fc_vport_setup, i64 0, i64 0), i8* %call89, i32 %116) #13, !dbg !9487
  br label %if.end91, !dbg !9487

if.end91:                                         ; preds = %if.then88, %if.then82
  br label %if.end92, !dbg !9488

if.end92:                                         ; preds = %if.end91, %if.end79
  br label %do.body93, !dbg !9489

do.body93:                                        ; preds = %if.end92
  br label %do.body94, !dbg !9490

do.body94:                                        ; preds = %do.body93
  call void @llvm.dbg.declare(metadata i64* %__dummy95, metadata !9491, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.declare(metadata i64* %__dummy296, metadata !9494, metadata !DIExpression()), !dbg !9493
  %cmp97 = icmp eq i64* %__dummy95, %__dummy296, !dbg !9493
  %conv98 = zext i1 %cmp97 to i32, !dbg !9493
  store i32 1, i32* %tmp99, align 4, !dbg !9493
  %117 = load i32, i32* %tmp99, align 4, !dbg !9493
  br label %do.body100, !dbg !9495

do.body100:                                       ; preds = %do.body94
  br label %do.body101, !dbg !9496

do.body101:                                       ; preds = %do.body100
  br label %do.body102, !dbg !9497

do.body102:                                       ; preds = %do.body101
  call void @llvm.dbg.declare(metadata i64* %__dummy103, metadata !9499, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata i64* %__dummy2104, metadata !9503, metadata !DIExpression()), !dbg !9502
  %cmp105 = icmp eq i64* %__dummy103, %__dummy2104, !dbg !9502
  %conv106 = zext i1 %cmp105 to i32, !dbg !9502
  store i32 1, i32* %tmp107, align 4, !dbg !9502
  %118 = load i32, i32* %tmp107, align 4, !dbg !9502
  %call108 = call i64 @arch_local_irq_save() #12, !dbg !9504
  store i64 %call108, i64* %flags, align 8, !dbg !9504
  br label %do.end109, !dbg !9504

do.end109:                                        ; preds = %do.body102
  br label %do.end110, !dbg !9497

do.end110:                                        ; preds = %do.end109
  br label %do.body111, !dbg !9496

do.body111:                                       ; preds = %do.end110
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9505, !srcloc !9506
  br label %do.body112, !dbg !9505

do.body112:                                       ; preds = %do.body111
  %119 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9507
  %host_lock113 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %119, i32 0, i32 4, !dbg !9507
  %120 = load %struct.spinlock*, %struct.spinlock** %host_lock113, align 8, !dbg !9507
  store %struct.spinlock* %120, %struct.spinlock** %lock.addr.i169, align 8
  %121 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i169, align 8, !dbg !9508
  %122 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %121, i32 0, i32 0, !dbg !9509
  %rlock.i170 = bitcast %union.anon.0* %122 to %struct.raw_spinlock*, !dbg !9509
  br label %do.end115, !dbg !9507

do.end115:                                        ; preds = %do.body112
  br label %do.end116, !dbg !9505

do.end116:                                        ; preds = %do.end115
  br label %do.end117, !dbg !9496

do.end117:                                        ; preds = %do.end116
  br label %do.end118, !dbg !9495

do.end118:                                        ; preds = %do.end117
  br label %do.end119, !dbg !9490

do.end119:                                        ; preds = %do.end118
  %123 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9510
  %flags120 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %123, i32 0, i32 12, !dbg !9511
  %124 = load i8, i8* %flags120, align 8, !dbg !9512
  %conv121 = zext i8 %124 to i32, !dbg !9512
  %and = and i32 %conv121, -2, !dbg !9512
  %conv122 = trunc i32 %and to i8, !dbg !9512
  store i8 %conv122, i8* %flags120, align 8, !dbg !9512
  %125 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9513
  %host_lock123 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %125, i32 0, i32 4, !dbg !9514
  %126 = load %struct.spinlock*, %struct.spinlock** %host_lock123, align 8, !dbg !9514
  %127 = load i64, i64* %flags, align 8, !dbg !9515
  store %struct.spinlock* %126, %struct.spinlock** %lock.addr.i171, align 8
  store i64 %127, i64* %flags.addr.i172, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9516
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9516
  store i32 1, i32* %tmp.i173, align 4, !dbg !9516
  %128 = load i32, i32* %tmp.i173, align 4, !dbg !9516
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9517
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9517
  store i32 1, i32* %tmp8.i174, align 4, !dbg !9517
  %129 = load i32, i32* %tmp8.i174, align 4, !dbg !9517
  %130 = load i64, i64* %flags.addr.i172, align 8, !dbg !9518
  call void @arch_local_irq_restore(i64 %130) #11, !dbg !9518
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9519, !srcloc !7797
  %131 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i171, align 8, !dbg !9520
  %132 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %131, i32 0, i32 0, !dbg !9520
  %rlock.i175 = bitcast %union.anon.0* %132 to %struct.raw_spinlock*, !dbg !9520
  %133 = load %struct.device*, %struct.device** %pdev.addr, align 8, !dbg !9521
  %134 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9522
  %call124 = call i8* @dev_name(%struct.device* %134) #12, !dbg !9523
  %135 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9524
  %host_no125 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %135, i32 0, i32 16, !dbg !9525
  %136 = load i32, i32* %host_no125, align 4, !dbg !9525
  %137 = load i32, i32* %channel.addr, align 4, !dbg !9526
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i64 0, i64 0), %struct.device* %133, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.191, i64 0, i64 0), i8* %call124, i32 %136, i32 %137) #13, !dbg !9527
  %138 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9528
  %139 = load %struct.fc_vport**, %struct.fc_vport*** %ret_vport.addr, align 8, !dbg !9529
  store %struct.fc_vport* %138, %struct.fc_vport** %139, align 8, !dbg !9530
  store i32 0, i32* %retval, align 4, !dbg !9531
  br label %return, !dbg !9531

delete_vport_all:                                 ; preds = %if.then77
  call void @llvm.dbg.label(metadata !9532), !dbg !9533
  %140 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9534
  call void @transport_remove_device(%struct.device* %140) #12, !dbg !9535
  %141 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9536
  call void @device_del(%struct.device* %141) #12, !dbg !9537
  br label %delete_vport, !dbg !9537

delete_vport:                                     ; preds = %delete_vport_all, %if.then68
  call void @llvm.dbg.label(metadata !9538), !dbg !9539
  %142 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9540
  call void @transport_destroy_device(%struct.device* %142) #12, !dbg !9541
  br label %do.body126, !dbg !9542

do.body126:                                       ; preds = %delete_vport
  br label %do.body127, !dbg !9543

do.body127:                                       ; preds = %do.body126
  call void @llvm.dbg.declare(metadata i64* %__dummy128, metadata !9544, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.declare(metadata i64* %__dummy2129, metadata !9547, metadata !DIExpression()), !dbg !9546
  %cmp130 = icmp eq i64* %__dummy128, %__dummy2129, !dbg !9546
  %conv131 = zext i1 %cmp130 to i32, !dbg !9546
  store i32 1, i32* %tmp132, align 4, !dbg !9546
  %143 = load i32, i32* %tmp132, align 4, !dbg !9546
  br label %do.body133, !dbg !9548

do.body133:                                       ; preds = %do.body127
  br label %do.body134, !dbg !9549

do.body134:                                       ; preds = %do.body133
  br label %do.body135, !dbg !9550

do.body135:                                       ; preds = %do.body134
  call void @llvm.dbg.declare(metadata i64* %__dummy136, metadata !9552, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i64* %__dummy2137, metadata !9556, metadata !DIExpression()), !dbg !9555
  %cmp138 = icmp eq i64* %__dummy136, %__dummy2137, !dbg !9555
  %conv139 = zext i1 %cmp138 to i32, !dbg !9555
  store i32 1, i32* %tmp140, align 4, !dbg !9555
  %144 = load i32, i32* %tmp140, align 4, !dbg !9555
  %call141 = call i64 @arch_local_irq_save() #12, !dbg !9557
  store i64 %call141, i64* %flags, align 8, !dbg !9557
  br label %do.end142, !dbg !9557

do.end142:                                        ; preds = %do.body135
  br label %do.end143, !dbg !9550

do.end143:                                        ; preds = %do.end142
  br label %do.body144, !dbg !9549

do.body144:                                       ; preds = %do.end143
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9558, !srcloc !9559
  br label %do.body145, !dbg !9558

do.body145:                                       ; preds = %do.body144
  %145 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9560
  %host_lock146 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %145, i32 0, i32 4, !dbg !9560
  %146 = load %struct.spinlock*, %struct.spinlock** %host_lock146, align 8, !dbg !9560
  store %struct.spinlock* %146, %struct.spinlock** %lock.addr.i176, align 8
  %147 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i176, align 8, !dbg !9561
  %148 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %147, i32 0, i32 0, !dbg !9562
  %rlock.i177 = bitcast %union.anon.0* %148 to %struct.raw_spinlock*, !dbg !9562
  br label %do.end148, !dbg !9560

do.end148:                                        ; preds = %do.body145
  br label %do.end149, !dbg !9558

do.end149:                                        ; preds = %do.end148
  br label %do.end150, !dbg !9549

do.end150:                                        ; preds = %do.end149
  br label %do.end151, !dbg !9548

do.end151:                                        ; preds = %do.end150
  br label %do.end152, !dbg !9543

do.end152:                                        ; preds = %do.end151
  %149 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9563
  %peers153 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %149, i32 0, i32 13, !dbg !9564
  call void @list_del(%struct.list_head* %peers153) #12, !dbg !9565
  %150 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9566
  call void @scsi_host_put(%struct.Scsi_Host* %150) #12, !dbg !9567
  %151 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9568
  %npiv_vports_inuse154 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %151, i32 0, i32 32, !dbg !9569
  %152 = load i16, i16* %npiv_vports_inuse154, align 4, !dbg !9570
  %dec = add i16 %152, -1, !dbg !9570
  store i16 %dec, i16* %npiv_vports_inuse154, align 4, !dbg !9570
  %153 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9571
  %host_lock155 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %153, i32 0, i32 4, !dbg !9572
  %154 = load %struct.spinlock*, %struct.spinlock** %host_lock155, align 8, !dbg !9572
  %155 = load i64, i64* %flags, align 8, !dbg !9573
  store %struct.spinlock* %154, %struct.spinlock** %lock.addr.i157, align 8
  store i64 %155, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9574
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9574
  store i32 1, i32* %tmp.i, align 4, !dbg !9574
  %156 = load i32, i32* %tmp.i, align 4, !dbg !9574
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9575
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9575
  store i32 1, i32* %tmp8.i, align 4, !dbg !9575
  %157 = load i32, i32* %tmp8.i, align 4, !dbg !9575
  %158 = load i64, i64* %flags.addr.i, align 8, !dbg !9576
  call void @arch_local_irq_restore(i64 %158) #11, !dbg !9576
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9577, !srcloc !7797
  %159 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i157, align 8, !dbg !9578
  %160 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %159, i32 0, i32 0, !dbg !9578
  %rlock.i158 = bitcast %union.anon.0* %160 to %struct.raw_spinlock*, !dbg !9578
  %161 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9579
  %parent156 = getelementptr inbounds %struct.device, %struct.device* %161, i32 0, i32 1, !dbg !9580
  %162 = load %struct.device*, %struct.device** %parent156, align 8, !dbg !9580
  call void @put_device(%struct.device* %162) #12, !dbg !9581
  %163 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !9582
  %164 = bitcast %struct.fc_vport* %163 to i8*, !dbg !9582
  call void @kfree(i8* %164) #12, !dbg !9583
  %165 = load i32, i32* %error, align 4, !dbg !9584
  store i32 %165, i32* %retval, align 4, !dbg !9585
  br label %return, !dbg !9585

return:                                           ; preds = %do.end152, %do.end119, %if.then55, %if.then7, %if.then
  %166 = load i32, i32* %retval, align 4, !dbg !9586
  ret i32 %166, !dbg !9586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fc_vport_terminate(%struct.fc_vport* %vport) #0 !dbg !9587 {
entry:
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !7624, metadata !DIExpression()), !dbg !9588
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !9590
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !9591
  %retval = alloca i32, align 4
  %vport.addr = alloca %struct.fc_vport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %dev = alloca %struct.device*, align 8
  %flags = alloca i64, align 8
  %stat = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp7 = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.fc_vport* %vport, %struct.fc_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !9600, metadata !DIExpression()), !dbg !9601
  %0 = load %struct.fc_vport*, %struct.fc_vport** %vport.addr, align 8, !dbg !9602
  %shost1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %0, i32 0, i32 9, !dbg !9602
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost1, align 8, !dbg !9602
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %shost, align 8, !dbg !9601
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !9603, metadata !DIExpression()), !dbg !9604
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9605
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !9605
  %3 = load i8*, i8** %shost_data, align 8, !dbg !9605
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !9605
  store %struct.fc_host_attrs* %4, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9604
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !9606, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9608, metadata !DIExpression()), !dbg !9610
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9610
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 11, !dbg !9610
  %6 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !9610
  %7 = bitcast %struct.scsi_transport_template* %6 to i8*, !dbg !9610
  store i8* %7, i8** %__mptr, align 8, !dbg !9610
  br label %do.body, !dbg !9610

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9611

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !9610
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !9610
  %9 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !9610
  store %struct.fc_internal* %9, %struct.fc_internal** %tmp, align 8, !dbg !9611
  %10 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !9610
  store %struct.fc_internal* %10, %struct.fc_internal** %i, align 8, !dbg !9607
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9613, metadata !DIExpression()), !dbg !9614
  %11 = load %struct.fc_vport*, %struct.fc_vport** %vport.addr, align 8, !dbg !9615
  %dev2 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %11, i32 0, i32 14, !dbg !9616
  store %struct.device* %dev2, %struct.device** %dev, align 8, !dbg !9614
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9617, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !9619, metadata !DIExpression()), !dbg !9620
  %12 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !9621
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %12, i32 0, i32 1, !dbg !9623
  %13 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !9623
  %vport_delete = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %13, i32 0, i32 21, !dbg !9624
  %14 = load i32 (%struct.fc_vport*)*, i32 (%struct.fc_vport*)** %vport_delete, align 8, !dbg !9624
  %tobool = icmp ne i32 (%struct.fc_vport*)* %14, null, !dbg !9621
  br i1 %tobool, label %if.then, label %if.else, !dbg !9625

if.then:                                          ; preds = %do.end
  %15 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !9626
  %f3 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %15, i32 0, i32 1, !dbg !9627
  %16 = load %struct.fc_function_template*, %struct.fc_function_template** %f3, align 8, !dbg !9627
  %vport_delete4 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %16, i32 0, i32 21, !dbg !9628
  %17 = load i32 (%struct.fc_vport*)*, i32 (%struct.fc_vport*)** %vport_delete4, align 8, !dbg !9628
  %18 = load %struct.fc_vport*, %struct.fc_vport** %vport.addr, align 8, !dbg !9629
  %call = call i32 %17(%struct.fc_vport* %18) #12, !dbg !9626
  store i32 %call, i32* %stat, align 4, !dbg !9630
  br label %if.end, !dbg !9631

if.else:                                          ; preds = %do.end
  store i32 -2, i32* %stat, align 4, !dbg !9632
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body5, !dbg !9633

do.body5:                                         ; preds = %if.end
  br label %do.body6, !dbg !9634

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9635, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9638, metadata !DIExpression()), !dbg !9637
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9637
  %conv = zext i1 %cmp to i32, !dbg !9637
  store i32 1, i32* %tmp7, align 4, !dbg !9637
  %19 = load i32, i32* %tmp7, align 4, !dbg !9637
  br label %do.body8, !dbg !9639

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !9640

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !9641

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !9643, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !9647, metadata !DIExpression()), !dbg !9646
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !9646
  %conv14 = zext i1 %cmp13 to i32, !dbg !9646
  store i32 1, i32* %tmp15, align 4, !dbg !9646
  %20 = load i32, i32* %tmp15, align 4, !dbg !9646
  %call16 = call i64 @arch_local_irq_save() #12, !dbg !9648
  store i64 %call16, i64* %flags, align 8, !dbg !9648
  br label %do.end17, !dbg !9648

do.end17:                                         ; preds = %do.body10
  br label %do.end18, !dbg !9641

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !9640

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9649, !srcloc !9650
  br label %do.body20, !dbg !9649

do.body20:                                        ; preds = %do.body19
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9651
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 4, !dbg !9651
  %22 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !9651
  store %struct.spinlock* %22, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9652
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9653
  %rlock.i = bitcast %union.anon.0* %24 to %struct.raw_spinlock*, !dbg !9653
  br label %do.end22, !dbg !9651

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !9649

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9640

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9639

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9634

do.end26:                                         ; preds = %do.end25
  %25 = load %struct.fc_vport*, %struct.fc_vport** %vport.addr, align 8, !dbg !9654
  %flags27 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %25, i32 0, i32 12, !dbg !9655
  %26 = load i8, i8* %flags27, align 8, !dbg !9656
  %conv28 = zext i8 %26 to i32, !dbg !9656
  %and = and i32 %conv28, -3, !dbg !9656
  %conv29 = trunc i32 %and to i8, !dbg !9656
  store i8 %conv29, i8* %flags27, align 8, !dbg !9656
  %27 = load i32, i32* %stat, align 4, !dbg !9657
  %tobool30 = icmp ne i32 %27, 0, !dbg !9657
  br i1 %tobool30, label %if.end35, label %if.then31, !dbg !9659

if.then31:                                        ; preds = %do.end26
  %28 = load %struct.fc_vport*, %struct.fc_vport** %vport.addr, align 8, !dbg !9660
  %flags32 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %28, i32 0, i32 12, !dbg !9662
  %29 = load i8, i8* %flags32, align 8, !dbg !9663
  %conv33 = zext i8 %29 to i32, !dbg !9663
  %or = or i32 %conv33, 4, !dbg !9663
  %conv34 = trunc i32 %or to i8, !dbg !9663
  store i8 %conv34, i8* %flags32, align 8, !dbg !9663
  %30 = load %struct.fc_vport*, %struct.fc_vport** %vport.addr, align 8, !dbg !9664
  %peers = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %30, i32 0, i32 13, !dbg !9665
  call void @list_del(%struct.list_head* %peers) #12, !dbg !9666
  %31 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9667
  %npiv_vports_inuse = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %31, i32 0, i32 32, !dbg !9668
  %32 = load i16, i16* %npiv_vports_inuse, align 4, !dbg !9669
  %dec = add i16 %32, -1, !dbg !9669
  store i16 %dec, i16* %npiv_vports_inuse, align 4, !dbg !9669
  %33 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9670
  call void @scsi_host_put(%struct.Scsi_Host* %33) #12, !dbg !9671
  br label %if.end35, !dbg !9672

if.end35:                                         ; preds = %if.then31, %do.end26
  %34 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9673
  %host_lock36 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %34, i32 0, i32 4, !dbg !9674
  %35 = load %struct.spinlock*, %struct.spinlock** %host_lock36, align 8, !dbg !9674
  %36 = load i64, i64* %flags, align 8, !dbg !9675
  store %struct.spinlock* %35, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !9676
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !9676
  store i32 1, i32* %tmp.i, align 4, !dbg !9676
  %37 = load i32, i32* %tmp.i, align 4, !dbg !9676
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !9677
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !9677
  store i32 1, i32* %tmp8.i, align 4, !dbg !9677
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !9677
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !9678
  call void @arch_local_irq_restore(i64 %39) #11, !dbg !9678
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9679, !srcloc !7797
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !9680
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !9680
  %rlock.i47 = bitcast %union.anon.0* %41 to %struct.raw_spinlock*, !dbg !9680
  %42 = load i32, i32* %stat, align 4, !dbg !9681
  %tobool37 = icmp ne i32 %42, 0, !dbg !9681
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !9683

if.then38:                                        ; preds = %if.end35
  %43 = load i32, i32* %stat, align 4, !dbg !9684
  store i32 %43, i32* %retval, align 4, !dbg !9685
  br label %return, !dbg !9685

if.end39:                                         ; preds = %if.end35
  %44 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9686
  %parent = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 1, !dbg !9688
  %45 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9688
  %46 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9689
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %46, i32 0, i32 47, !dbg !9690
  %cmp40 = icmp ne %struct.device* %45, %shost_gendev, !dbg !9691
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !9692

if.then42:                                        ; preds = %if.end39
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9693
  %shost_gendev43 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 47, !dbg !9694
  %kobj = getelementptr inbounds %struct.device, %struct.device* %shost_gendev43, i32 0, i32 0, !dbg !9695
  %48 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9696
  %call44 = call i8* @dev_name(%struct.device* %48) #12, !dbg !9697
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* %call44) #12, !dbg !9698
  br label %if.end45, !dbg !9698

if.end45:                                         ; preds = %if.then42, %if.end39
  %49 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9699
  call void @transport_remove_device(%struct.device* %49) #12, !dbg !9700
  %50 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9701
  call void @device_del(%struct.device* %50) #12, !dbg !9702
  %51 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9703
  call void @transport_destroy_device(%struct.device* %51) #12, !dbg !9704
  %52 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9705
  call void @put_device(%struct.device* %52) #12, !dbg !9706
  store i32 0, i32* %retval, align 4, !dbg !9707
  br label %return, !dbg !9707

return:                                           ; preds = %if.end45, %if.then38
  %53 = load i32, i32* %retval, align 4, !dbg !9708
  ret i32 %53, !dbg !9708
}

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #2

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_link(%struct.kobject*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9709 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9714
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9716
  %1 = load i8*, i8** %init_name, align 8, !dbg !9716
  %tobool = icmp ne i8* %1, null, !dbg !9714
  br i1 %tobool, label %if.then, label %if.end, !dbg !9717

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9718
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9719
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9719
  store i8* %3, i8** %retval, align 8, !dbg !9720
  br label %return, !dbg !9720

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9721
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9722
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !9723
  store i8* %call, i8** %retval, align 8, !dbg !9724
  br label %return, !dbg !9724

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9725
  ret i8* %5, !dbg !9725
}

; Function Attrs: noredzone
declare dso_local void @transport_remove_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @transport_destroy_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_transport_init() #5 section ".init.text" !dbg !9726 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9729, metadata !DIExpression()), !dbg !9733
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !9737, metadata !DIExpression()), !dbg !9738
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9739, metadata !DIExpression()), !dbg !9741
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9743, metadata !DIExpression()), !dbg !9744
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9745, metadata !DIExpression()), !dbg !9746
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !9747, metadata !DIExpression()), !dbg !9748
  %retval = alloca i32, align 4
  %error = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %error, metadata !9749, metadata !DIExpression()), !dbg !9750
  store %struct.atomic_t* @fc_event_seq, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9751
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !9751
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9752
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !9753
  %conv.i.i = trunc i64 %3 to i32, !dbg !9753
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %2, i32 %conv.i.i) #11, !dbg !9754
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9755
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9755
  call void @kcsan_check_access(i8* %4, i64 %5, i32 5) #11, !dbg !9755
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9756
  %7 = load i32, i32* %i.addr.i, align 4, !dbg !9757
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %7, i32* %i.addr.i.i, align 4
  %8 = load i32, i32* %i.addr.i.i, align 4, !dbg !9758
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9758
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !9758
  store volatile i32 %8, i32* %counter.i.i, align 4, !dbg !9758
  %call = call i32 @transport_class_register(%struct.transport_class* @fc_host_class) #12, !dbg !9760
  store i32 %call, i32* %error, align 4, !dbg !9761
  %10 = load i32, i32* %error, align 4, !dbg !9762
  %tobool = icmp ne i32 %10, 0, !dbg !9762
  br i1 %tobool, label %if.then, label %if.end, !dbg !9764

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %error, align 4, !dbg !9765
  store i32 %11, i32* %retval, align 4, !dbg !9766
  br label %return, !dbg !9766

if.end:                                           ; preds = %entry
  %call1 = call i32 @transport_class_register(%struct.transport_class* @fc_vport_class) #12, !dbg !9767
  store i32 %call1, i32* %error, align 4, !dbg !9768
  %12 = load i32, i32* %error, align 4, !dbg !9769
  %tobool2 = icmp ne i32 %12, 0, !dbg !9769
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9771

if.then3:                                         ; preds = %if.end
  br label %unreg_host_class, !dbg !9772

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @transport_class_register(%struct.transport_class* @fc_rport_class) #12, !dbg !9773
  store i32 %call5, i32* %error, align 4, !dbg !9774
  %13 = load i32, i32* %error, align 4, !dbg !9775
  %tobool6 = icmp ne i32 %13, 0, !dbg !9775
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9777

if.then7:                                         ; preds = %if.end4
  br label %unreg_vport_class, !dbg !9778

if.end8:                                          ; preds = %if.end4
  %call9 = call i32 @transport_class_register(%struct.transport_class* @fc_transport_class) #12, !dbg !9779
  store i32 %call9, i32* %error, align 4, !dbg !9780
  %14 = load i32, i32* %error, align 4, !dbg !9781
  %tobool10 = icmp ne i32 %14, 0, !dbg !9781
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9783

if.then11:                                        ; preds = %if.end8
  br label %unreg_rport_class, !dbg !9784

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !9785
  br label %return, !dbg !9785

unreg_rport_class:                                ; preds = %if.then11
  call void @llvm.dbg.label(metadata !9786), !dbg !9787
  call void @transport_class_unregister(%struct.transport_class* @fc_rport_class) #12, !dbg !9788
  br label %unreg_vport_class, !dbg !9788

unreg_vport_class:                                ; preds = %unreg_rport_class, %if.then7
  call void @llvm.dbg.label(metadata !9789), !dbg !9790
  call void @transport_class_unregister(%struct.transport_class* @fc_vport_class) #12, !dbg !9791
  br label %unreg_host_class, !dbg !9791

unreg_host_class:                                 ; preds = %unreg_vport_class, %if.then3
  call void @llvm.dbg.label(metadata !9792), !dbg !9793
  call void @transport_class_unregister(%struct.transport_class* @fc_host_class) #12, !dbg !9794
  %15 = load i32, i32* %error, align 4, !dbg !9795
  store i32 %15, i32* %retval, align 4, !dbg !9796
  br label %return, !dbg !9796

return:                                           ; preds = %unreg_host_class, %if.end12, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9797
  ret i32 %16, !dbg !9797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !9798 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9802, metadata !DIExpression()), !dbg !9803
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9804, metadata !DIExpression()), !dbg !9805
  ret i1 true, !dbg !9806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !9807 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9815, metadata !DIExpression()), !dbg !9816
  ret void, !dbg !9817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @alloc_skb(i32 %size, i32 %priority) #0 !dbg !9818 {
entry:
  %size.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !9823, metadata !DIExpression()), !dbg !9824
  %0 = load i32, i32* %size.addr, align 4, !dbg !9825
  %1 = load i32, i32* %priority.addr, align 4, !dbg !9826
  %call = call %struct.sk_buff* @__alloc_skb(i32 %0, i32 %1, i32 0, i32 -1) #12, !dbg !9827
  ret %struct.sk_buff* %call, !dbg !9828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nlmsg_total_size(i32 %payload) #0 !dbg !9829 {
entry:
  %payload.addr = alloca i32, align 4
  store i32 %payload, i32* %payload.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %payload.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  %0 = load i32, i32* %payload.addr, align 4, !dbg !9832
  %call = call i32 @nlmsg_msg_size(i32 %0) #12, !dbg !9832
  %add = add i32 %call, 4, !dbg !9832
  %sub = sub i32 %add, 1, !dbg !9832
  %and = and i32 %sub, -4, !dbg !9832
  ret i32 %and, !dbg !9833
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__alloc_skb(i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nlmsg_msg_size(i32 %payload) #0 !dbg !9834 {
entry:
  %payload.addr = alloca i32, align 4
  store i32 %payload, i32* %payload.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %payload.addr, metadata !9835, metadata !DIExpression()), !dbg !9836
  %0 = load i32, i32* %payload.addr, align 4, !dbg !9837
  %add = add i32 16, %0, !dbg !9838
  ret i32 %add, !dbg !9839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_tailroom(%struct.sk_buff* %skb) #0 !dbg !9840 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !9845, metadata !DIExpression()), !dbg !9846
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9847
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #12, !dbg !9848
  br i1 %call, label %cond.true, label %cond.false, !dbg !9848

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9848

cond.false:                                       ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9849
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 35, !dbg !9850
  %2 = load i32, i32* %end, align 4, !dbg !9850
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9851
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 34, !dbg !9852
  %4 = load i32, i32* %tail, align 8, !dbg !9852
  %sub = sub i32 %2, %4, !dbg !9853
  br label %cond.end, !dbg !9848

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !9848
  ret i32 %cond, !dbg !9854
}

; Function Attrs: noredzone
declare dso_local %struct.nlmsghdr* @__nlmsg_put(%struct.sk_buff*, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #0 !dbg !9855 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9860
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !9861
  %1 = load i32, i32* %data_len, align 4, !dbg !9861
  %tobool = icmp ne i32 %1, 0, !dbg !9860
  ret i1 %tobool, !dbg !9862
}

; Function Attrs: noredzone
declare dso_local i32 @netlink_broadcast(%struct.sock*, %struct.sk_buff*, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_target_setup(%struct.transport_container* %tc, %struct.device* %dev, %struct.device* %cdev) #0 !dbg !9863 {
entry:
  %tc.addr = alloca %struct.transport_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %cdev.addr = alloca %struct.device*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.fc_rport*, align 8
  store %struct.transport_container* %tc, %struct.transport_container** %tc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transport_container** %tc.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  store %struct.device* %cdev, %struct.device** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cdev.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9872, metadata !DIExpression()), !dbg !9874
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9874
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9874
  store i8* %1, i8** %__mptr, align 8, !dbg !9874
  br label %do.body, !dbg !9874

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9875

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9874
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !9874
  %3 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !9874
  store %struct.scsi_target* %3, %struct.scsi_target** %tmp, align 8, !dbg !9875
  %4 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !9874
  store %struct.scsi_target* %4, %struct.scsi_target** %starget, align 8, !dbg !9871
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !9877, metadata !DIExpression()), !dbg !9878
  %5 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9879
  %dev1 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %5, i32 0, i32 3, !dbg !9879
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !9879
  %6 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9879
  %call = call i32 @scsi_is_fc_rport(%struct.device* %6) #12, !dbg !9879
  %tobool = icmp ne i32 %call, 0, !dbg !9879
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9879

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !9880, metadata !DIExpression()), !dbg !9882
  %7 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9882
  %dev3 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %7, i32 0, i32 3, !dbg !9882
  %parent4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !9882
  %8 = load %struct.device*, %struct.device** %parent4, align 8, !dbg !9882
  %9 = bitcast %struct.device* %8 to i8*, !dbg !9882
  store i8* %9, i8** %__mptr2, align 8, !dbg !9882
  br label %do.body5, !dbg !9882

do.body5:                                         ; preds = %cond.true
  br label %do.end6, !dbg !9883

do.end6:                                          ; preds = %do.body5
  %10 = load i8*, i8** %__mptr2, align 8, !dbg !9882
  %add.ptr8 = getelementptr i8, i8* %10, i64 -96, !dbg !9882
  %11 = bitcast i8* %add.ptr8 to %struct.fc_rport*, !dbg !9882
  store %struct.fc_rport* %11, %struct.fc_rport** %tmp7, align 8, !dbg !9883
  %12 = load %struct.fc_rport*, %struct.fc_rport** %tmp7, align 8, !dbg !9882
  br label %cond.end, !dbg !9879

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !9879

cond.end:                                         ; preds = %cond.false, %do.end6
  %cond = phi %struct.fc_rport* [ %12, %do.end6 ], [ null, %cond.false ], !dbg !9879
  store %struct.fc_rport* %cond, %struct.fc_rport** %rport, align 8, !dbg !9878
  %13 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !9885
  %tobool9 = icmp ne %struct.fc_rport* %13, null, !dbg !9885
  br i1 %tobool9, label %if.then, label %if.else, !dbg !9887

if.then:                                          ; preds = %cond.end
  %14 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !9888
  %node_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %14, i32 0, i32 3, !dbg !9890
  %15 = load i64, i64* %node_name, align 8, !dbg !9890
  %16 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9891
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %16, i32 0, i32 15, !dbg !9891
  %17 = bitcast [0 x i64]* %starget_data to %struct.fc_starget_attrs*, !dbg !9891
  %node_name10 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %17, i32 0, i32 0, !dbg !9891
  store i64 %15, i64* %node_name10, align 8, !dbg !9892
  %18 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !9893
  %port_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %18, i32 0, i32 4, !dbg !9894
  %19 = load i64, i64* %port_name, align 8, !dbg !9894
  %20 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9895
  %starget_data11 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %20, i32 0, i32 15, !dbg !9895
  %21 = bitcast [0 x i64]* %starget_data11 to %struct.fc_starget_attrs*, !dbg !9895
  %port_name12 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %21, i32 0, i32 1, !dbg !9895
  store i64 %19, i64* %port_name12, align 8, !dbg !9896
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !9897
  %port_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %22, i32 0, i32 5, !dbg !9898
  %23 = load i32, i32* %port_id, align 8, !dbg !9898
  %24 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9899
  %starget_data13 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %24, i32 0, i32 15, !dbg !9899
  %25 = bitcast [0 x i64]* %starget_data13 to %struct.fc_starget_attrs*, !dbg !9899
  %port_id14 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %25, i32 0, i32 2, !dbg !9899
  store i32 %23, i32* %port_id14, align 8, !dbg !9900
  br label %if.end, !dbg !9901

if.else:                                          ; preds = %cond.end
  %26 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9902
  %starget_data15 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %26, i32 0, i32 15, !dbg !9902
  %27 = bitcast [0 x i64]* %starget_data15 to %struct.fc_starget_attrs*, !dbg !9902
  %node_name16 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %27, i32 0, i32 0, !dbg !9902
  store i64 -1, i64* %node_name16, align 8, !dbg !9904
  %28 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9905
  %starget_data17 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %28, i32 0, i32 15, !dbg !9905
  %29 = bitcast [0 x i64]* %starget_data17 to %struct.fc_starget_attrs*, !dbg !9905
  %port_name18 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %29, i32 0, i32 1, !dbg !9905
  store i64 -1, i64* %port_name18, align 8, !dbg !9906
  %30 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9907
  %starget_data19 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %30, i32 0, i32 15, !dbg !9907
  %31 = bitcast [0 x i64]* %starget_data19 to %struct.fc_starget_attrs*, !dbg !9907
  %port_id20 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %31, i32 0, i32 2, !dbg !9907
  store i32 -1, i32* %port_id20, align 8, !dbg !9908
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !9909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_host_setup(%struct.transport_container* %tc, %struct.device* %dev, %struct.device* %cdev) #0 !dbg !9910 {
entry:
  %retval = alloca i32, align 4
  %tc.addr = alloca %struct.transport_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %cdev.addr = alloca %struct.device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  store %struct.transport_container* %tc, %struct.transport_container** %tc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transport_container** %tc.addr, metadata !9911, metadata !DIExpression()), !dbg !9912
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9913, metadata !DIExpression()), !dbg !9914
  store %struct.device* %cdev, %struct.device** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cdev.addr, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !9917, metadata !DIExpression()), !dbg !9918
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9919
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %0) #12, !dbg !9920
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !9918
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !9921, metadata !DIExpression()), !dbg !9922
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9923
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 49, !dbg !9923
  %2 = load i8*, i8** %shost_data, align 8, !dbg !9923
  %3 = bitcast i8* %2 to %struct.fc_host_attrs*, !dbg !9923
  store %struct.fc_host_attrs* %3, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9922
  %4 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9924
  %node_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %4, i32 0, i32 0, !dbg !9925
  store i64 -1, i64* %node_name, align 8, !dbg !9926
  %5 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9927
  %port_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 1, !dbg !9928
  store i64 -1, i64* %port_name, align 8, !dbg !9929
  %6 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9930
  %permanent_port_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %6, i32 0, i32 2, !dbg !9931
  store i64 -1, i64* %permanent_port_name, align 8, !dbg !9932
  %7 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9933
  %supported_classes = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %7, i32 0, i32 3, !dbg !9934
  store i32 0, i32* %supported_classes, align 8, !dbg !9935
  %8 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9936
  %supported_fc4s = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %8, i32 0, i32 4, !dbg !9937
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %supported_fc4s, i64 0, i64 0, !dbg !9938
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay, i8 0, i64 32, i1 false), !dbg !9938
  %9 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9939
  %supported_speeds = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 5, !dbg !9940
  store i32 0, i32* %supported_speeds, align 4, !dbg !9941
  %10 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9942
  %maxframe_size = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %10, i32 0, i32 6, !dbg !9943
  store i32 -1, i32* %maxframe_size, align 8, !dbg !9944
  %11 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9945
  %max_npiv_vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %11, i32 0, i32 7, !dbg !9946
  store i16 0, i16* %max_npiv_vports, align 4, !dbg !9947
  %12 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9948
  %serial_number = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %12, i32 0, i32 8, !dbg !9949
  %arraydecay1 = getelementptr inbounds [80 x i8], [80 x i8]* %serial_number, i64 0, i64 0, !dbg !9950
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay1, i8 0, i64 80, i1 false), !dbg !9950
  %13 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9951
  %manufacturer = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %13, i32 0, i32 9, !dbg !9952
  %arraydecay2 = getelementptr inbounds [80 x i8], [80 x i8]* %manufacturer, i64 0, i64 0, !dbg !9953
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay2, i8 0, i64 80, i1 false), !dbg !9953
  %14 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9954
  %model = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %14, i32 0, i32 10, !dbg !9955
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %model, i64 0, i64 0, !dbg !9956
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay3, i8 0, i64 256, i1 false), !dbg !9956
  %15 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9957
  %model_description = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %15, i32 0, i32 11, !dbg !9958
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %model_description, i64 0, i64 0, !dbg !9959
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay4, i8 0, i64 256, i1 false), !dbg !9959
  %16 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9960
  %hardware_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %16, i32 0, i32 12, !dbg !9961
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %hardware_version, i64 0, i64 0, !dbg !9962
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay5, i8 0, i64 64, i1 false), !dbg !9962
  %17 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9963
  %driver_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %17, i32 0, i32 13, !dbg !9964
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %driver_version, i64 0, i64 0, !dbg !9965
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay6, i8 0, i64 64, i1 false), !dbg !9965
  %18 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9966
  %firmware_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %18, i32 0, i32 14, !dbg !9967
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %firmware_version, i64 0, i64 0, !dbg !9968
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay7, i8 0, i64 64, i1 false), !dbg !9968
  %19 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9969
  %optionrom_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %19, i32 0, i32 15, !dbg !9970
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %optionrom_version, i64 0, i64 0, !dbg !9971
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay8, i8 0, i64 64, i1 false), !dbg !9971
  %20 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9972
  %port_id = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %20, i32 0, i32 16, !dbg !9973
  store i32 -1, i32* %port_id, align 8, !dbg !9974
  %21 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9975
  %port_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %21, i32 0, i32 17, !dbg !9976
  store i32 0, i32* %port_type, align 4, !dbg !9977
  %22 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9978
  %port_state = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %22, i32 0, i32 18, !dbg !9979
  store i32 0, i32* %port_state, align 8, !dbg !9980
  %23 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9981
  %active_fc4s = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %23, i32 0, i32 19, !dbg !9982
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %active_fc4s, i64 0, i64 0, !dbg !9983
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay9, i8 0, i64 32, i1 false), !dbg !9983
  %24 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9984
  %speed = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %24, i32 0, i32 20, !dbg !9985
  store i32 0, i32* %speed, align 4, !dbg !9986
  %25 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9987
  %fabric_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %25, i32 0, i32 21, !dbg !9988
  store i64 -1, i64* %fabric_name, align 8, !dbg !9989
  %26 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9990
  %symbolic_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %26, i32 0, i32 22, !dbg !9991
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %symbolic_name, i64 0, i64 0, !dbg !9992
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay10, i8 0, i64 256, i1 false), !dbg !9992
  %27 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9993
  %system_hostname = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %27, i32 0, i32 23, !dbg !9994
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %system_hostname, i64 0, i64 0, !dbg !9995
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay11, i8 0, i64 256, i1 false), !dbg !9995
  %28 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9996
  %tgtid_bind_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %28, i32 0, i32 25, !dbg !9997
  store i32 1, i32* %tgtid_bind_type, align 4, !dbg !9998
  %29 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !9999
  %rports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %29, i32 0, i32 26, !dbg !10000
  call void @INIT_LIST_HEAD(%struct.list_head* %rports) #12, !dbg !10001
  %30 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10002
  %rport_bindings = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %30, i32 0, i32 27, !dbg !10003
  call void @INIT_LIST_HEAD(%struct.list_head* %rport_bindings) #12, !dbg !10004
  %31 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10005
  %vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %31, i32 0, i32 28, !dbg !10006
  call void @INIT_LIST_HEAD(%struct.list_head* %vports) #12, !dbg !10007
  %32 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10008
  %next_rport_number = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %32, i32 0, i32 29, !dbg !10009
  store i32 0, i32* %next_rport_number, align 8, !dbg !10010
  %33 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10011
  %next_target_id = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %33, i32 0, i32 30, !dbg !10012
  store i32 0, i32* %next_target_id, align 4, !dbg !10013
  %34 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10014
  %next_vport_number = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %34, i32 0, i32 31, !dbg !10015
  store i32 0, i32* %next_vport_number, align 8, !dbg !10016
  %35 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10017
  %npiv_vports_inuse = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %35, i32 0, i32 32, !dbg !10018
  store i16 0, i16* %npiv_vports_inuse, align 4, !dbg !10019
  %36 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10020
  %work_q_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %36, i32 0, i32 33, !dbg !10021
  %arraydecay12 = getelementptr inbounds [20 x i8], [20 x i8]* %work_q_name, i64 0, i64 0, !dbg !10020
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10022
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %37, i32 0, i32 16, !dbg !10023
  %38 = load i32, i32* %host_no, align 4, !dbg !10023
  %call13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay12, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i32 %38) #12, !dbg !10024
  %39 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10025
  %work_q_name14 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %39, i32 0, i32 33, !dbg !10026
  %arraydecay15 = getelementptr inbounds [20 x i8], [20 x i8]* %work_q_name14, i64 0, i64 0, !dbg !10025
  %call16 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 0, i32 0, i8* %arraydecay15) #12, !dbg !10027
  %40 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10028
  %work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %40, i32 0, i32 34, !dbg !10029
  store %struct.workqueue_struct* %call16, %struct.workqueue_struct** %work_q, align 8, !dbg !10030
  %41 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10031
  %work_q17 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %41, i32 0, i32 34, !dbg !10033
  %42 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q17, align 8, !dbg !10033
  %tobool = icmp ne %struct.workqueue_struct* %42, null, !dbg !10031
  br i1 %tobool, label %if.end, label %if.then, !dbg !10034

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10035
  br label %return, !dbg !10035

if.end:                                           ; preds = %entry
  %43 = load i32, i32* @fc_dev_loss_tmo, align 4, !dbg !10036
  %44 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10037
  %dev_loss_tmo = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %44, i32 0, i32 24, !dbg !10038
  store i32 %43, i32* %dev_loss_tmo, align 8, !dbg !10039
  %45 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10040
  %devloss_work_q_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %45, i32 0, i32 35, !dbg !10041
  %arraydecay18 = getelementptr inbounds [20 x i8], [20 x i8]* %devloss_work_q_name, i64 0, i64 0, !dbg !10040
  %46 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10042
  %host_no19 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %46, i32 0, i32 16, !dbg !10043
  %47 = load i32, i32* %host_no19, align 4, !dbg !10043
  %call20 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay18, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i32 %47) #12, !dbg !10044
  %48 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10045
  %devloss_work_q_name21 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %48, i32 0, i32 35, !dbg !10046
  %arraydecay22 = getelementptr inbounds [20 x i8], [20 x i8]* %devloss_work_q_name21, i64 0, i64 0, !dbg !10045
  %call23 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 0, i32 0, i8* %arraydecay22) #12, !dbg !10047
  %49 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10048
  %devloss_work_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %49, i32 0, i32 36, !dbg !10049
  store %struct.workqueue_struct* %call23, %struct.workqueue_struct** %devloss_work_q, align 8, !dbg !10050
  %50 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10051
  %devloss_work_q24 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %50, i32 0, i32 36, !dbg !10053
  %51 = load %struct.workqueue_struct*, %struct.workqueue_struct** %devloss_work_q24, align 8, !dbg !10053
  %tobool25 = icmp ne %struct.workqueue_struct* %51, null, !dbg !10051
  br i1 %tobool25, label %if.end29, label %if.then26, !dbg !10054

if.then26:                                        ; preds = %if.end
  %52 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10055
  %work_q27 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %52, i32 0, i32 34, !dbg !10057
  %53 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q27, align 8, !dbg !10057
  call void @destroy_workqueue(%struct.workqueue_struct* %53) #12, !dbg !10058
  %54 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10059
  %work_q28 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %54, i32 0, i32 34, !dbg !10060
  store %struct.workqueue_struct* null, %struct.workqueue_struct** %work_q28, align 8, !dbg !10061
  store i32 -12, i32* %retval, align 4, !dbg !10062
  br label %return, !dbg !10062

if.end29:                                         ; preds = %if.end
  %55 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10063
  %56 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10064
  %call30 = call i32 @fc_bsg_hostadd(%struct.Scsi_Host* %55, %struct.fc_host_attrs* %56) #12, !dbg !10065
  store i32 0, i32* %retval, align 4, !dbg !10066
  br label %return, !dbg !10066

return:                                           ; preds = %if.end29, %if.then26, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !10067
  ret i32 %57, !dbg !10067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_host_remove(%struct.transport_container* %tc, %struct.device* %dev, %struct.device* %cdev) #0 !dbg !10068 {
entry:
  %tc.addr = alloca %struct.transport_container*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %cdev.addr = alloca %struct.device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  store %struct.transport_container* %tc, %struct.transport_container** %tc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transport_container** %tc.addr, metadata !10069, metadata !DIExpression()), !dbg !10070
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  store %struct.device* %cdev, %struct.device** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cdev.addr, metadata !10073, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !10075, metadata !DIExpression()), !dbg !10076
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10077
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %0) #12, !dbg !10078
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !10076
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !10079, metadata !DIExpression()), !dbg !10080
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10081
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 49, !dbg !10081
  %2 = load i8*, i8** %shost_data, align 8, !dbg !10081
  %3 = bitcast i8* %2 to %struct.fc_host_attrs*, !dbg !10081
  store %struct.fc_host_attrs* %3, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10080
  %4 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !10082
  %rqst_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %4, i32 0, i32 37, !dbg !10083
  %5 = load %struct.request_queue*, %struct.request_queue** %rqst_q, align 8, !dbg !10083
  call void @fc_bsg_remove(%struct.request_queue* %5) #12, !dbg !10084
  ret i32 0, !dbg !10085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !10086 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  br label %do.body, !dbg !10089

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10090

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10092

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10090

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10094
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10094
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10094
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !10094
  br label %do.end3, !dbg !10094

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !10090

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10096
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10097
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !10098
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !10099
  ret void, !dbg !10100
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_hostadd(%struct.Scsi_Host* %shost, %struct.fc_host_attrs* %fc_host) #0 !dbg !10101 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %fc_host.addr = alloca %struct.fc_host_attrs*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %q = alloca %struct.request_queue*, align 8
  %bsg_name = alloca [20 x i8], align 16
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  store %struct.fc_host_attrs* %fc_host, %struct.fc_host_attrs** %fc_host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host.addr, metadata !10106, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10108, metadata !DIExpression()), !dbg !10109
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10110
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 47, !dbg !10111
  store %struct.device* %shost_gendev, %struct.device** %dev, align 8, !dbg !10109
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !10112, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10114, metadata !DIExpression()), !dbg !10116
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10116
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 11, !dbg !10116
  %2 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !10116
  %3 = bitcast %struct.scsi_transport_template* %2 to i8*, !dbg !10116
  store i8* %3, i8** %__mptr, align 8, !dbg !10116
  br label %do.body, !dbg !10116

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10117

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !10116
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !10116
  %5 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !10116
  store %struct.fc_internal* %5, %struct.fc_internal** %tmp, align 8, !dbg !10117
  %6 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !10116
  store %struct.fc_internal* %6, %struct.fc_internal** %i, align 8, !dbg !10113
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !10119, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.declare(metadata [20 x i8]* %bsg_name, metadata !10121, metadata !DIExpression()), !dbg !10122
  %7 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host.addr, align 8, !dbg !10123
  %rqst_q = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %7, i32 0, i32 37, !dbg !10124
  store %struct.request_queue* null, %struct.request_queue** %rqst_q, align 8, !dbg !10125
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10126
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !10128
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !10128
  %bsg_request = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 22, !dbg !10129
  %10 = load i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)** %bsg_request, align 8, !dbg !10129
  %tobool = icmp ne i32 (%struct.bsg_job*)* %10, null, !dbg !10126
  br i1 %tobool, label %if.end, label %if.then, !dbg !10130

if.then:                                          ; preds = %do.end
  store i32 -524, i32* %retval, align 4, !dbg !10131
  br label %return, !dbg !10131

if.end:                                           ; preds = %do.end
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %bsg_name, i64 0, i64 0, !dbg !10132
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10133
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 16, !dbg !10134
  %12 = load i32, i32* %host_no, align 4, !dbg !10134
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i32 %12) #12, !dbg !10135
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10136
  %arraydecay1 = getelementptr inbounds [20 x i8], [20 x i8]* %bsg_name, i64 0, i64 0, !dbg !10137
  %14 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10138
  %f2 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %14, i32 0, i32 1, !dbg !10139
  %15 = load %struct.fc_function_template*, %struct.fc_function_template** %f2, align 8, !dbg !10139
  %dd_bsg_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %15, i32 0, i32 26, !dbg !10140
  %16 = load i32, i32* %dd_bsg_size, align 8, !dbg !10140
  %call3 = call %struct.request_queue* @bsg_setup_queue(%struct.device* %13, i8* %arraydecay1, i32 (%struct.bsg_job*)* @fc_bsg_dispatch, i32 (%struct.request*)* @fc_bsg_job_timeout, i32 %16) #12, !dbg !10141
  store %struct.request_queue* %call3, %struct.request_queue** %q, align 8, !dbg !10142
  %17 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !10143
  %18 = bitcast %struct.request_queue* %17 to i8*, !dbg !10143
  %call4 = call zeroext i1 @IS_ERR(i8* %18) #12, !dbg !10145
  br i1 %call4, label %if.then5, label %if.end8, !dbg !10146

if.then5:                                         ; preds = %if.end
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10147
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10147
  %host_no6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 16, !dbg !10147
  %21 = load i32, i32* %host_no6, align 4, !dbg !10147
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i64 0, i64 0), i32 %21) #13, !dbg !10147
  %22 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !10149
  %23 = bitcast %struct.request_queue* %22 to i8*, !dbg !10149
  %call7 = call i64 @PTR_ERR(i8* %23) #12, !dbg !10150
  %conv = trunc i64 %call7 to i32, !dbg !10150
  store i32 %conv, i32* %retval, align 4, !dbg !10151
  br label %return, !dbg !10151

if.end8:                                          ; preds = %if.end
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10152
  %25 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !10153
  call void @__scsi_init_queue(%struct.Scsi_Host* %24, %struct.request_queue* %25) #12, !dbg !10154
  %26 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !10155
  call void @blk_queue_rq_timeout(%struct.request_queue* %26, i32 2500) #12, !dbg !10156
  %27 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !10157
  %28 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host.addr, align 8, !dbg !10158
  %rqst_q9 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %28, i32 0, i32 37, !dbg !10159
  store %struct.request_queue* %27, %struct.request_queue** %rqst_q9, align 8, !dbg !10160
  store i32 0, i32* %retval, align 4, !dbg !10161
  br label %return, !dbg !10161

return:                                           ; preds = %if.end8, %if.then5, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !10162
  ret i32 %29, !dbg !10162
}

; Function Attrs: noredzone
declare dso_local %struct.request_queue* @bsg_setup_queue(%struct.device*, i8*, i32 (%struct.bsg_job*)*, i32 (%struct.request*)*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_dispatch(%struct.bsg_job* %job) #0 !dbg !10163 {
entry:
  %retval = alloca i32, align 4
  %job.addr = alloca %struct.bsg_job*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.bsg_job* %job, %struct.bsg_job** %job.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !10166, metadata !DIExpression()), !dbg !10167
  %0 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10168
  %call = call %struct.Scsi_Host* @fc_bsg_to_shost(%struct.bsg_job* %0) #12, !dbg !10169
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !10167
  %1 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10170
  %dev = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %1, i32 0, i32 0, !dbg !10172
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10172
  %call1 = call i32 @scsi_is_fc_rport(%struct.device* %2) #12, !dbg !10173
  %tobool = icmp ne i32 %call1, 0, !dbg !10173
  br i1 %tobool, label %if.then, label %if.else, !dbg !10174

if.then:                                          ; preds = %entry
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10175
  %4 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10176
  %call2 = call i32 @fc_bsg_rport_dispatch(%struct.Scsi_Host* %3, %struct.bsg_job* %4) #12, !dbg !10177
  store i32 %call2, i32* %retval, align 4, !dbg !10178
  br label %return, !dbg !10178

if.else:                                          ; preds = %entry
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10179
  %6 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10180
  %call3 = call i32 @fc_bsg_host_dispatch(%struct.Scsi_Host* %5, %struct.bsg_job* %6) #12, !dbg !10181
  store i32 %call3, i32* %retval, align 4, !dbg !10182
  br label %return, !dbg !10182

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10183
  ret i32 %7, !dbg !10183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_job_timeout(%struct.request* %req) #0 !dbg !10184 {
entry:
  %retval = alloca i32, align 4
  %req.addr = alloca %struct.request*, align 8
  %job = alloca %struct.bsg_job*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %err = alloca i32, align 4
  %inflight = alloca i32, align 4
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job, metadata !10189, metadata !DIExpression()), !dbg !10190
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !10191
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #12, !dbg !10192
  %1 = bitcast i8* %call to %struct.bsg_job*, !dbg !10192
  store %struct.bsg_job* %1, %struct.bsg_job** %job, align 8, !dbg !10190
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !10193, metadata !DIExpression()), !dbg !10194
  %2 = load %struct.bsg_job*, %struct.bsg_job** %job, align 8, !dbg !10195
  %call1 = call %struct.Scsi_Host* @fc_bsg_to_shost(%struct.bsg_job* %2) #12, !dbg !10196
  store %struct.Scsi_Host* %call1, %struct.Scsi_Host** %shost, align 8, !dbg !10194
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !10197, metadata !DIExpression()), !dbg !10198
  %3 = load %struct.bsg_job*, %struct.bsg_job** %job, align 8, !dbg !10199
  %call2 = call %struct.fc_rport* @fc_bsg_to_rport(%struct.bsg_job* %3) #12, !dbg !10200
  store %struct.fc_rport* %call2, %struct.fc_rport** %rport, align 8, !dbg !10198
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !10201, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10203, metadata !DIExpression()), !dbg !10205
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10205
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 11, !dbg !10205
  %5 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !10205
  %6 = bitcast %struct.scsi_transport_template* %5 to i8*, !dbg !10205
  store i8* %6, i8** %__mptr, align 8, !dbg !10205
  br label %do.body, !dbg !10205

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10206

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !10205
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !10205
  %8 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !10205
  store %struct.fc_internal* %8, %struct.fc_internal** %tmp, align 8, !dbg !10206
  %9 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !10205
  store %struct.fc_internal* %9, %struct.fc_internal** %i, align 8, !dbg !10202
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10208, metadata !DIExpression()), !dbg !10209
  store i32 0, i32* %err, align 4, !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %inflight, metadata !10210, metadata !DIExpression()), !dbg !10211
  store i32 0, i32* %inflight, align 4, !dbg !10211
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !10212
  %tobool = icmp ne %struct.fc_rport* %10, null, !dbg !10212
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10214

land.lhs.true:                                    ; preds = %do.end
  %11 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !10215
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %11, i32 0, i32 7, !dbg !10216
  %12 = load i32, i32* %port_state, align 8, !dbg !10216
  %cmp = icmp eq i32 %12, 4, !dbg !10217
  br i1 %cmp, label %if.then, label %if.end, !dbg !10218

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !10219
  br label %return, !dbg !10219

if.end:                                           ; preds = %land.lhs.true, %do.end
  %13 = load %struct.bsg_job*, %struct.bsg_job** %job, align 8, !dbg !10220
  %call3 = call i32 @bsg_job_get(%struct.bsg_job* %13) #12, !dbg !10221
  store i32 %call3, i32* %inflight, align 4, !dbg !10222
  %14 = load i32, i32* %inflight, align 4, !dbg !10223
  %tobool4 = icmp ne i32 %14, 0, !dbg !10223
  br i1 %tobool4, label %land.lhs.true5, label %if.end18, !dbg !10225

land.lhs.true5:                                   ; preds = %if.end
  %15 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10226
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %15, i32 0, i32 1, !dbg !10227
  %16 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !10227
  %bsg_timeout = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %16, i32 0, i32 23, !dbg !10228
  %17 = load i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)** %bsg_timeout, align 8, !dbg !10228
  %tobool6 = icmp ne i32 (%struct.bsg_job*)* %17, null, !dbg !10226
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !10229

if.then7:                                         ; preds = %land.lhs.true5
  %18 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10230
  %f8 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %18, i32 0, i32 1, !dbg !10232
  %19 = load %struct.fc_function_template*, %struct.fc_function_template** %f8, align 8, !dbg !10232
  %bsg_timeout9 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %19, i32 0, i32 23, !dbg !10233
  %20 = load i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)** %bsg_timeout9, align 8, !dbg !10233
  %21 = load %struct.bsg_job*, %struct.bsg_job** %job, align 8, !dbg !10234
  %call10 = call i32 %20(%struct.bsg_job* %21) #12, !dbg !10230
  store i32 %call10, i32* %err, align 4, !dbg !10235
  %22 = load i32, i32* %err, align 4, !dbg !10236
  %cmp11 = icmp eq i32 %22, -11, !dbg !10238
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !10239

if.then12:                                        ; preds = %if.then7
  %23 = load %struct.bsg_job*, %struct.bsg_job** %job, align 8, !dbg !10240
  call void @bsg_job_put(%struct.bsg_job* %23) #12, !dbg !10242
  store i32 1, i32* %retval, align 4, !dbg !10243
  br label %return, !dbg !10243

if.else:                                          ; preds = %if.then7
  %24 = load i32, i32* %err, align 4, !dbg !10244
  %tobool13 = icmp ne i32 %24, 0, !dbg !10244
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !10246

if.then14:                                        ; preds = %if.else
  %25 = load i32, i32* %err, align 4, !dbg !10247
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.24, i64 0, i64 0), i32 %25) #13, !dbg !10248
  br label %if.end16, !dbg !10248

if.end16:                                         ; preds = %if.then14, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !10249

if.end18:                                         ; preds = %if.end17, %land.lhs.true5, %if.end
  %26 = load i32, i32* %inflight, align 4, !dbg !10250
  %tobool19 = icmp ne i32 %26, 0, !dbg !10250
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !10252

if.then20:                                        ; preds = %if.end18
  %27 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !10253
  call void @blk_mq_end_request(%struct.request* %27, i8 zeroext 10) #12, !dbg !10254
  br label %if.end21, !dbg !10254

if.end21:                                         ; preds = %if.then20, %if.end18
  store i32 0, i32* %retval, align 4, !dbg !10255
  br label %return, !dbg !10255

return:                                           ; preds = %if.end21, %if.then12, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !10256
  ret i32 %28, !dbg !10256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !10257 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10261, metadata !DIExpression()), !dbg !10262
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10263
  %1 = ptrtoint i8* %0 to i64, !dbg !10263
  %2 = inttoptr i64 %1 to i8*, !dbg !10263
  %3 = ptrtoint i8* %2 to i64, !dbg !10263
  %cmp = icmp uge i64 %3, -4095, !dbg !10263
  %lnot = xor i1 %cmp, true, !dbg !10263
  %lnot1 = xor i1 %lnot, true, !dbg !10263
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10263
  %conv = sext i32 %lnot.ext to i64, !dbg !10263
  %tobool = icmp ne i64 %conv, 0, !dbg !10263
  ret i1 %tobool, !dbg !10264
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !10265 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10268, metadata !DIExpression()), !dbg !10269
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10270
  %1 = ptrtoint i8* %0 to i64, !dbg !10271
  ret i64 %1, !dbg !10272
}

; Function Attrs: noredzone
declare dso_local void @__scsi_init_queue(%struct.Scsi_Host*, %struct.request_queue*) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_rq_timeout(%struct.request_queue*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.Scsi_Host* @fc_bsg_to_shost(%struct.bsg_job* %job) #0 !dbg !10273 {
entry:
  %retval = alloca %struct.Scsi_Host*, align 8
  %job.addr = alloca %struct.bsg_job*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.bsg_job* %job, %struct.bsg_job** %job.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  %0 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10278
  %dev = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %0, i32 0, i32 0, !dbg !10280
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10280
  %call = call i32 @scsi_is_host_device(%struct.device* %1) #12, !dbg !10281
  %tobool = icmp ne i32 %call, 0, !dbg !10281
  br i1 %tobool, label %if.then, label %if.end, !dbg !10282

if.then:                                          ; preds = %entry
  %2 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10283
  %dev1 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %2, i32 0, i32 0, !dbg !10284
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !10284
  %call2 = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %3) #12, !dbg !10285
  store %struct.Scsi_Host* %call2, %struct.Scsi_Host** %retval, align 8, !dbg !10286
  br label %return, !dbg !10286

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10287, metadata !DIExpression()), !dbg !10289
  %4 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10289
  %dev3 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %4, i32 0, i32 0, !dbg !10289
  %5 = load %struct.device*, %struct.device** %dev3, align 8, !dbg !10289
  %6 = bitcast %struct.device* %5 to i8*, !dbg !10289
  store i8* %6, i8** %__mptr, align 8, !dbg !10289
  br label %do.body, !dbg !10289

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !10290

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !10289
  %add.ptr = getelementptr i8, i8* %7, i64 -96, !dbg !10289
  %8 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !10289
  store %struct.fc_rport* %8, %struct.fc_rport** %tmp, align 8, !dbg !10290
  %9 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !10289
  %dev4 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %9, i32 0, i32 15, !dbg !10292
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 1, !dbg !10292
  %10 = load %struct.device*, %struct.device** %parent, align 8, !dbg !10292
  %call5 = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %10) #12, !dbg !10292
  store %struct.Scsi_Host* %call5, %struct.Scsi_Host** %retval, align 8, !dbg !10293
  br label %return, !dbg !10293

return:                                           ; preds = %do.end, %if.then
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %retval, align 8, !dbg !10294
  ret %struct.Scsi_Host* %11, !dbg !10294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_rport_dispatch(%struct.Scsi_Host* %shost, %struct.bsg_job* %job) #0 !dbg !10295 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %job.addr = alloca %struct.bsg_job*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %bsg_request = alloca %struct.fc_bsg_request*, align 8
  %bsg_reply = alloca %struct.fc_bsg_reply*, align 8
  %cmdlen = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10298, metadata !DIExpression()), !dbg !10299
  store %struct.bsg_job* %job, %struct.bsg_job** %job.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job.addr, metadata !10300, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !10302, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10304, metadata !DIExpression()), !dbg !10306
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10306
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 11, !dbg !10306
  %1 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !10306
  %2 = bitcast %struct.scsi_transport_template* %1 to i8*, !dbg !10306
  store i8* %2, i8** %__mptr, align 8, !dbg !10306
  br label %do.body, !dbg !10306

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10307

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10306
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10306
  %4 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !10306
  store %struct.fc_internal* %4, %struct.fc_internal** %tmp, align 8, !dbg !10307
  %5 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !10306
  store %struct.fc_internal* %5, %struct.fc_internal** %i, align 8, !dbg !10303
  call void @llvm.dbg.declare(metadata %struct.fc_bsg_request** %bsg_request, metadata !10309, metadata !DIExpression()), !dbg !10357
  %6 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10358
  %request = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %6, i32 0, i32 3, !dbg !10359
  %7 = load i8*, i8** %request, align 8, !dbg !10359
  %8 = bitcast i8* %7 to %struct.fc_bsg_request*, !dbg !10358
  store %struct.fc_bsg_request* %8, %struct.fc_bsg_request** %bsg_request, align 8, !dbg !10357
  call void @llvm.dbg.declare(metadata %struct.fc_bsg_reply** %bsg_reply, metadata !10360, metadata !DIExpression()), !dbg !10384
  %9 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10385
  %reply = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %9, i32 0, i32 4, !dbg !10386
  %10 = load i8*, i8** %reply, align 8, !dbg !10386
  %11 = bitcast i8* %10 to %struct.fc_bsg_reply*, !dbg !10385
  store %struct.fc_bsg_reply* %11, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10384
  call void @llvm.dbg.declare(metadata i32* %cmdlen, metadata !10387, metadata !DIExpression()), !dbg !10388
  store i32 4, i32* %cmdlen, align 4, !dbg !10388
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10389, metadata !DIExpression()), !dbg !10390
  %12 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10391
  %request_len = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %12, i32 0, i32 5, !dbg !10393
  %13 = load i32, i32* %request_len, align 8, !dbg !10393
  %14 = load i32, i32* %cmdlen, align 4, !dbg !10394
  %cmp = icmp ult i32 %13, %14, !dbg !10395
  br i1 %cmp, label %if.then, label %if.end, !dbg !10396

if.then:                                          ; preds = %do.end
  store i32 -42, i32* %ret, align 4, !dbg !10397
  br label %fail_rport_msg, !dbg !10399

if.end:                                           ; preds = %do.end
  %15 = load %struct.fc_bsg_request*, %struct.fc_bsg_request** %bsg_request, align 8, !dbg !10400
  %msgcode = getelementptr inbounds %struct.fc_bsg_request, %struct.fc_bsg_request* %15, i32 0, i32 0, !dbg !10401
  %16 = load i32, i32* %msgcode, align 1, !dbg !10401
  switch i32 %16, label %sw.default [
    i32 1073741825, label %sw.bb
    i32 1073741826, label %sw.bb2
  ], !dbg !10402

sw.bb:                                            ; preds = %if.end
  %17 = load i32, i32* %cmdlen, align 4, !dbg !10403
  %conv = sext i32 %17 to i64, !dbg !10403
  %add = add i64 %conv, 1, !dbg !10403
  %conv1 = trunc i64 %add to i32, !dbg !10403
  store i32 %conv1, i32* %cmdlen, align 4, !dbg !10403
  br label %check_bidi, !dbg !10405

sw.bb2:                                           ; preds = %if.end
  %18 = load i32, i32* %cmdlen, align 4, !dbg !10406
  %conv3 = sext i32 %18 to i64, !dbg !10406
  %add4 = add i64 %conv3, 12, !dbg !10406
  %conv5 = trunc i64 %add4 to i32, !dbg !10406
  store i32 %conv5, i32* %cmdlen, align 4, !dbg !10406
  br label %check_bidi, !dbg !10407

check_bidi:                                       ; preds = %sw.bb2, %sw.bb
  call void @llvm.dbg.label(metadata !10408), !dbg !10409
  %19 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10410
  %request_payload = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %19, i32 0, i32 7, !dbg !10412
  %payload_len = getelementptr inbounds %struct.bsg_buffer, %struct.bsg_buffer* %request_payload, i32 0, i32 0, !dbg !10413
  %20 = load i32, i32* %payload_len, align 8, !dbg !10413
  %tobool = icmp ne i32 %20, 0, !dbg !10410
  br i1 %tobool, label %lor.lhs.false, label %if.then8, !dbg !10414

lor.lhs.false:                                    ; preds = %check_bidi
  %21 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10415
  %reply_payload = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %21, i32 0, i32 8, !dbg !10416
  %payload_len6 = getelementptr inbounds %struct.bsg_buffer, %struct.bsg_buffer* %reply_payload, i32 0, i32 0, !dbg !10417
  %22 = load i32, i32* %payload_len6, align 8, !dbg !10417
  %tobool7 = icmp ne i32 %22, 0, !dbg !10415
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !10418

if.then8:                                         ; preds = %lor.lhs.false, %check_bidi
  store i32 -22, i32* %ret, align 4, !dbg !10419
  br label %fail_rport_msg, !dbg !10421

if.end9:                                          ; preds = %lor.lhs.false
  br label %sw.epilog, !dbg !10422

sw.default:                                       ; preds = %if.end
  store i32 -53, i32* %ret, align 4, !dbg !10423
  br label %fail_rport_msg, !dbg !10424

sw.epilog:                                        ; preds = %if.end9
  %23 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10425
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %23, i32 0, i32 1, !dbg !10426
  %24 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !10426
  %bsg_request10 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %24, i32 0, i32 22, !dbg !10427
  %25 = load i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)** %bsg_request10, align 8, !dbg !10427
  %26 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10428
  %call = call i32 %25(%struct.bsg_job* %26) #12, !dbg !10425
  store i32 %call, i32* %ret, align 4, !dbg !10429
  %27 = load i32, i32* %ret, align 4, !dbg !10430
  %tobool11 = icmp ne i32 %27, 0, !dbg !10430
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !10432

if.then12:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !10433
  br label %return, !dbg !10433

if.end13:                                         ; preds = %sw.epilog
  br label %fail_rport_msg, !dbg !10430

fail_rport_msg:                                   ; preds = %if.end13, %sw.default, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !10434), !dbg !10435
  br label %do.body14, !dbg !10436

do.body14:                                        ; preds = %fail_rport_msg
  %28 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10437
  %reply_len = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %28, i32 0, i32 6, !dbg !10437
  %29 = load i32, i32* %reply_len, align 4, !dbg !10437
  %conv15 = zext i32 %29 to i64, !dbg !10437
  %cmp16 = icmp ult i64 %conv15, 4, !dbg !10437
  %lnot = xor i1 %cmp16, true, !dbg !10437
  %lnot18 = xor i1 %lnot, true, !dbg !10437
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !10437
  %conv19 = sext i32 %lnot.ext to i64, !dbg !10437
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !10437
  br i1 %tobool20, label %if.then21, label %if.end30, !dbg !10440

if.then21:                                        ; preds = %do.body14
  br label %do.body22, !dbg !10437

do.body22:                                        ; preds = %if.then21
  br label %do.body23, !dbg !10441

do.body23:                                        ; preds = %do.body22
  br label %do.end24, !dbg !10443

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !10441

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 3725, i32 0, i64 12) #10, !dbg !10445, !srcloc !10447
  br label %do.end26, !dbg !10445

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !10441

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 441) #10, !dbg !10448, !srcloc !10451
  unreachable, !dbg !10452

do.end28:                                         ; No predecessors!
  br label %do.end29, !dbg !10441

do.end29:                                         ; preds = %do.end28
  br label %if.end30, !dbg !10441

if.end30:                                         ; preds = %do.end29, %do.body14
  br label %do.end31, !dbg !10440

do.end31:                                         ; preds = %if.end30
  %30 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10453
  %reply_payload_rcv_len = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %30, i32 0, i32 1, !dbg !10454
  store i32 0, i32* %reply_payload_rcv_len, align 4, !dbg !10455
  %31 = load i32, i32* %ret, align 4, !dbg !10456
  %32 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10457
  %result = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %32, i32 0, i32 0, !dbg !10458
  store i32 %31, i32* %result, align 4, !dbg !10459
  %33 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10460
  %reply_len32 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %33, i32 0, i32 6, !dbg !10461
  store i32 4, i32* %reply_len32, align 4, !dbg !10462
  %34 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10463
  %35 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10464
  %result33 = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %35, i32 0, i32 0, !dbg !10465
  %36 = load i32, i32* %result33, align 4, !dbg !10465
  %37 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10466
  %reply_payload_rcv_len34 = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %37, i32 0, i32 1, !dbg !10467
  %38 = load i32, i32* %reply_payload_rcv_len34, align 4, !dbg !10467
  call void @bsg_job_done(%struct.bsg_job* %34, i32 %36, i32 %38) #12, !dbg !10468
  store i32 0, i32* %retval, align 4, !dbg !10469
  br label %return, !dbg !10469

return:                                           ; preds = %do.end31, %if.then12
  %39 = load i32, i32* %retval, align 4, !dbg !10470
  ret i32 %39, !dbg !10470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_host_dispatch(%struct.Scsi_Host* %shost, %struct.bsg_job* %job) #0 !dbg !10471 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %job.addr = alloca %struct.bsg_job*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %bsg_request = alloca %struct.fc_bsg_request*, align 8
  %bsg_reply = alloca %struct.fc_bsg_reply*, align 8
  %cmdlen = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10472, metadata !DIExpression()), !dbg !10473
  store %struct.bsg_job* %job, %struct.bsg_job** %job.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10478, metadata !DIExpression()), !dbg !10480
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10480
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 11, !dbg !10480
  %1 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !10480
  %2 = bitcast %struct.scsi_transport_template* %1 to i8*, !dbg !10480
  store i8* %2, i8** %__mptr, align 8, !dbg !10480
  br label %do.body, !dbg !10480

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10481

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10480
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10480
  %4 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !10480
  store %struct.fc_internal* %4, %struct.fc_internal** %tmp, align 8, !dbg !10481
  %5 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !10480
  store %struct.fc_internal* %5, %struct.fc_internal** %i, align 8, !dbg !10477
  call void @llvm.dbg.declare(metadata %struct.fc_bsg_request** %bsg_request, metadata !10483, metadata !DIExpression()), !dbg !10484
  %6 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10485
  %request = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %6, i32 0, i32 3, !dbg !10486
  %7 = load i8*, i8** %request, align 8, !dbg !10486
  %8 = bitcast i8* %7 to %struct.fc_bsg_request*, !dbg !10485
  store %struct.fc_bsg_request* %8, %struct.fc_bsg_request** %bsg_request, align 8, !dbg !10484
  call void @llvm.dbg.declare(metadata %struct.fc_bsg_reply** %bsg_reply, metadata !10487, metadata !DIExpression()), !dbg !10488
  %9 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10489
  %reply = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %9, i32 0, i32 4, !dbg !10490
  %10 = load i8*, i8** %reply, align 8, !dbg !10490
  %11 = bitcast i8* %10 to %struct.fc_bsg_reply*, !dbg !10489
  store %struct.fc_bsg_reply* %11, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10488
  call void @llvm.dbg.declare(metadata i32* %cmdlen, metadata !10491, metadata !DIExpression()), !dbg !10492
  store i32 4, i32* %cmdlen, align 4, !dbg !10492
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10493, metadata !DIExpression()), !dbg !10494
  %12 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10495
  %request_len = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %12, i32 0, i32 5, !dbg !10497
  %13 = load i32, i32* %request_len, align 8, !dbg !10497
  %14 = load i32, i32* %cmdlen, align 4, !dbg !10498
  %cmp = icmp ult i32 %13, %14, !dbg !10499
  br i1 %cmp, label %if.then, label %if.end, !dbg !10500

if.then:                                          ; preds = %do.end
  store i32 -42, i32* %ret, align 4, !dbg !10501
  br label %fail_host_msg, !dbg !10503

if.end:                                           ; preds = %do.end
  %15 = load %struct.fc_bsg_request*, %struct.fc_bsg_request** %bsg_request, align 8, !dbg !10504
  %msgcode = getelementptr inbounds %struct.fc_bsg_request, %struct.fc_bsg_request* %15, i32 0, i32 0, !dbg !10505
  %16 = load i32, i32* %msgcode, align 1, !dbg !10505
  switch i32 %16, label %sw.default [
    i32 -2147483647, label %sw.bb
    i32 -2147483646, label %sw.bb2
    i32 -2147483645, label %sw.bb6
    i32 -2147483644, label %sw.bb14
    i32 -2147483393, label %sw.bb27
  ], !dbg !10506

sw.bb:                                            ; preds = %if.end
  %17 = load i32, i32* %cmdlen, align 4, !dbg !10507
  %conv = sext i32 %17 to i64, !dbg !10507
  %add = add i64 %conv, 4, !dbg !10507
  %conv1 = trunc i64 %add to i32, !dbg !10507
  store i32 %conv1, i32* %cmdlen, align 4, !dbg !10507
  br label %sw.epilog, !dbg !10509

sw.bb2:                                           ; preds = %if.end
  %18 = load i32, i32* %cmdlen, align 4, !dbg !10510
  %conv3 = sext i32 %18 to i64, !dbg !10510
  %add4 = add i64 %conv3, 4, !dbg !10510
  %conv5 = trunc i64 %add4 to i32, !dbg !10510
  store i32 %conv5, i32* %cmdlen, align 4, !dbg !10510
  br label %sw.epilog, !dbg !10511

sw.bb6:                                           ; preds = %if.end
  %19 = load i32, i32* %cmdlen, align 4, !dbg !10512
  %conv7 = sext i32 %19 to i64, !dbg !10512
  %add8 = add i64 %conv7, 4, !dbg !10512
  %conv9 = trunc i64 %add8 to i32, !dbg !10512
  store i32 %conv9, i32* %cmdlen, align 4, !dbg !10512
  %20 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10513
  %request_payload = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %20, i32 0, i32 7, !dbg !10515
  %payload_len = getelementptr inbounds %struct.bsg_buffer, %struct.bsg_buffer* %request_payload, i32 0, i32 0, !dbg !10516
  %21 = load i32, i32* %payload_len, align 8, !dbg !10516
  %tobool = icmp ne i32 %21, 0, !dbg !10513
  br i1 %tobool, label %lor.lhs.false, label %if.then12, !dbg !10517

lor.lhs.false:                                    ; preds = %sw.bb6
  %22 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10518
  %reply_payload = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %22, i32 0, i32 8, !dbg !10519
  %payload_len10 = getelementptr inbounds %struct.bsg_buffer, %struct.bsg_buffer* %reply_payload, i32 0, i32 0, !dbg !10520
  %23 = load i32, i32* %payload_len10, align 8, !dbg !10520
  %tobool11 = icmp ne i32 %23, 0, !dbg !10518
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !10521

if.then12:                                        ; preds = %lor.lhs.false, %sw.bb6
  store i32 -22, i32* %ret, align 4, !dbg !10522
  br label %fail_host_msg, !dbg !10524

if.end13:                                         ; preds = %lor.lhs.false
  br label %sw.epilog, !dbg !10525

sw.bb14:                                          ; preds = %if.end
  %24 = load i32, i32* %cmdlen, align 4, !dbg !10526
  %conv15 = sext i32 %24 to i64, !dbg !10526
  %add16 = add i64 %conv15, 16, !dbg !10526
  %conv17 = trunc i64 %add16 to i32, !dbg !10526
  store i32 %conv17, i32* %cmdlen, align 4, !dbg !10526
  %25 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10527
  %request_payload18 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %25, i32 0, i32 7, !dbg !10529
  %payload_len19 = getelementptr inbounds %struct.bsg_buffer, %struct.bsg_buffer* %request_payload18, i32 0, i32 0, !dbg !10530
  %26 = load i32, i32* %payload_len19, align 8, !dbg !10530
  %tobool20 = icmp ne i32 %26, 0, !dbg !10527
  br i1 %tobool20, label %lor.lhs.false21, label %if.then25, !dbg !10531

lor.lhs.false21:                                  ; preds = %sw.bb14
  %27 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10532
  %reply_payload22 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %27, i32 0, i32 8, !dbg !10533
  %payload_len23 = getelementptr inbounds %struct.bsg_buffer, %struct.bsg_buffer* %reply_payload22, i32 0, i32 0, !dbg !10534
  %28 = load i32, i32* %payload_len23, align 8, !dbg !10534
  %tobool24 = icmp ne i32 %28, 0, !dbg !10532
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !10535

if.then25:                                        ; preds = %lor.lhs.false21, %sw.bb14
  store i32 -22, i32* %ret, align 4, !dbg !10536
  br label %fail_host_msg, !dbg !10538

if.end26:                                         ; preds = %lor.lhs.false21
  br label %sw.epilog, !dbg !10539

sw.bb27:                                          ; preds = %if.end
  %29 = load i32, i32* %cmdlen, align 4, !dbg !10540
  %conv28 = sext i32 %29 to i64, !dbg !10540
  %add29 = add i64 %conv28, 8, !dbg !10540
  %conv30 = trunc i64 %add29 to i32, !dbg !10540
  store i32 %conv30, i32* %cmdlen, align 4, !dbg !10540
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10541
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %30, i32 0, i32 10, !dbg !10543
  %31 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !10543
  %vendor_id = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %31, i32 0, i32 47, !dbg !10544
  %32 = load i64, i64* %vendor_id, align 8, !dbg !10544
  %cmp31 = icmp eq i64 %32, 0, !dbg !10545
  br i1 %cmp31, label %if.then39, label %lor.lhs.false33, !dbg !10546

lor.lhs.false33:                                  ; preds = %sw.bb27
  %33 = load %struct.fc_bsg_request*, %struct.fc_bsg_request** %bsg_request, align 8, !dbg !10547
  %rqst_data = getelementptr inbounds %struct.fc_bsg_request, %struct.fc_bsg_request* %33, i32 0, i32 1, !dbg !10548
  %h_vendor = bitcast %union.anon.93* %rqst_data to %struct.fc_bsg_host_vendor*, !dbg !10549
  %vendor_id34 = getelementptr inbounds %struct.fc_bsg_host_vendor, %struct.fc_bsg_host_vendor* %h_vendor, i32 0, i32 0, !dbg !10550
  %34 = load i64, i64* %vendor_id34, align 1, !dbg !10550
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10551
  %hostt35 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 10, !dbg !10552
  %36 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt35, align 8, !dbg !10552
  %vendor_id36 = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %36, i32 0, i32 47, !dbg !10553
  %37 = load i64, i64* %vendor_id36, align 8, !dbg !10553
  %cmp37 = icmp ne i64 %34, %37, !dbg !10554
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !10555

if.then39:                                        ; preds = %lor.lhs.false33, %sw.bb27
  store i32 -3, i32* %ret, align 4, !dbg !10556
  br label %fail_host_msg, !dbg !10558

if.end40:                                         ; preds = %lor.lhs.false33
  br label %sw.epilog, !dbg !10559

sw.default:                                       ; preds = %if.end
  store i32 -53, i32* %ret, align 4, !dbg !10560
  br label %fail_host_msg, !dbg !10561

sw.epilog:                                        ; preds = %if.end40, %if.end26, %if.end13, %sw.bb2, %sw.bb
  %38 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10562
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %38, i32 0, i32 1, !dbg !10563
  %39 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !10563
  %bsg_request41 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %39, i32 0, i32 22, !dbg !10564
  %40 = load i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)** %bsg_request41, align 8, !dbg !10564
  %41 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10565
  %call = call i32 %40(%struct.bsg_job* %41) #12, !dbg !10562
  store i32 %call, i32* %ret, align 4, !dbg !10566
  %42 = load i32, i32* %ret, align 4, !dbg !10567
  %tobool42 = icmp ne i32 %42, 0, !dbg !10567
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !10569

if.then43:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !10570
  br label %return, !dbg !10570

if.end44:                                         ; preds = %sw.epilog
  br label %fail_host_msg, !dbg !10567

fail_host_msg:                                    ; preds = %if.end44, %sw.default, %if.then39, %if.then25, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !10571), !dbg !10572
  br label %do.body45, !dbg !10573

do.body45:                                        ; preds = %fail_host_msg
  %43 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10574
  %reply_len = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %43, i32 0, i32 6, !dbg !10574
  %44 = load i32, i32* %reply_len, align 4, !dbg !10574
  %conv46 = zext i32 %44 to i64, !dbg !10574
  %cmp47 = icmp ult i64 %conv46, 4, !dbg !10574
  %lnot = xor i1 %cmp47, true, !dbg !10574
  %lnot49 = xor i1 %lnot, true, !dbg !10574
  %lnot.ext = zext i1 %lnot49 to i32, !dbg !10574
  %conv50 = sext i32 %lnot.ext to i64, !dbg !10574
  %tobool51 = icmp ne i64 %conv50, 0, !dbg !10574
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !10577

if.then52:                                        ; preds = %do.body45
  br label %do.body53, !dbg !10574

do.body53:                                        ; preds = %if.then52
  br label %do.body54, !dbg !10578

do.body54:                                        ; preds = %do.body53
  br label %do.end55, !dbg !10580

do.end55:                                         ; preds = %do.body54
  br label %do.body56, !dbg !10578

do.body56:                                        ; preds = %do.end55
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 3656, i32 0, i64 12) #10, !dbg !10582, !srcloc !10584
  br label %do.end57, !dbg !10582

do.end57:                                         ; preds = %do.body56
  br label %do.body58, !dbg !10578

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 439) #10, !dbg !10585, !srcloc !10588
  unreachable, !dbg !10589

do.end59:                                         ; No predecessors!
  br label %do.end60, !dbg !10578

do.end60:                                         ; preds = %do.end59
  br label %if.end61, !dbg !10578

if.end61:                                         ; preds = %do.end60, %do.body45
  br label %do.end62, !dbg !10577

do.end62:                                         ; preds = %if.end61
  %45 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10590
  %reply_payload_rcv_len = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %45, i32 0, i32 1, !dbg !10591
  store i32 0, i32* %reply_payload_rcv_len, align 4, !dbg !10592
  %46 = load i32, i32* %ret, align 4, !dbg !10593
  %47 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10594
  %result = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %47, i32 0, i32 0, !dbg !10595
  store i32 %46, i32* %result, align 4, !dbg !10596
  %48 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10597
  %reply_len63 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %48, i32 0, i32 6, !dbg !10598
  store i32 4, i32* %reply_len63, align 4, !dbg !10599
  %49 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10600
  %50 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10601
  %result64 = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %50, i32 0, i32 0, !dbg !10602
  %51 = load i32, i32* %result64, align 4, !dbg !10602
  %52 = load %struct.fc_bsg_reply*, %struct.fc_bsg_reply** %bsg_reply, align 8, !dbg !10603
  %reply_payload_rcv_len65 = getelementptr inbounds %struct.fc_bsg_reply, %struct.fc_bsg_reply* %52, i32 0, i32 1, !dbg !10604
  %53 = load i32, i32* %reply_payload_rcv_len65, align 4, !dbg !10604
  call void @bsg_job_done(%struct.bsg_job* %49, i32 %51, i32 %53) #12, !dbg !10605
  store i32 0, i32* %retval, align 4, !dbg !10606
  br label %return, !dbg !10606

return:                                           ; preds = %do.end62, %if.then43
  %54 = load i32, i32* %retval, align 4, !dbg !10607
  ret i32 %54, !dbg !10607
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_is_host_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @bsg_job_done(%struct.bsg_job*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #0 !dbg !10608 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !10613
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !10614
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !10613
  ret i8* %1, !dbg !10615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.fc_rport* @fc_bsg_to_rport(%struct.bsg_job* %job) #0 !dbg !10616 {
entry:
  %retval = alloca %struct.fc_rport*, align 8
  %job.addr = alloca %struct.bsg_job*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.bsg_job* %job, %struct.bsg_job** %job.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  %0 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10621
  %dev = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %0, i32 0, i32 0, !dbg !10623
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10623
  %call = call i32 @scsi_is_fc_rport(%struct.device* %1) #12, !dbg !10624
  %tobool = icmp ne i32 %call, 0, !dbg !10624
  br i1 %tobool, label %if.then, label %if.end, !dbg !10625

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10626, metadata !DIExpression()), !dbg !10628
  %2 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !10628
  %dev1 = getelementptr inbounds %struct.bsg_job, %struct.bsg_job* %2, i32 0, i32 0, !dbg !10628
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !10628
  %4 = bitcast %struct.device* %3 to i8*, !dbg !10628
  store i8* %4, i8** %__mptr, align 8, !dbg !10628
  br label %do.body, !dbg !10628

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !10629

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !10628
  %add.ptr = getelementptr i8, i8* %5, i64 -96, !dbg !10628
  %6 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !10628
  store %struct.fc_rport* %6, %struct.fc_rport** %tmp, align 8, !dbg !10629
  %7 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !10628
  store %struct.fc_rport* %7, %struct.fc_rport** %retval, align 8, !dbg !10631
  br label %return, !dbg !10631

if.end:                                           ; preds = %entry
  store %struct.fc_rport* null, %struct.fc_rport** %retval, align 8, !dbg !10632
  br label %return, !dbg !10632

return:                                           ; preds = %if.end, %do.end
  %8 = load %struct.fc_rport*, %struct.fc_rport** %retval, align 8, !dbg !10633
  ret %struct.fc_rport* %8, !dbg !10633
}

; Function Attrs: noredzone
declare dso_local i32 @bsg_job_get(%struct.bsg_job*) #2

; Function Attrs: noredzone
declare dso_local void @bsg_job_put(%struct.bsg_job*) #2

; Function Attrs: noredzone
declare dso_local void @blk_mq_end_request(%struct.request*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_bsg_remove(%struct.request_queue* %q) #0 !dbg !10634 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !10635, metadata !DIExpression()), !dbg !10636
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !10637
  call void @bsg_remove_queue(%struct.request_queue* %0) #12, !dbg !10638
  ret void, !dbg !10639
}

; Function Attrs: noredzone
declare dso_local void @bsg_remove_queue(%struct.request_queue*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !10640 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10644, metadata !DIExpression()), !dbg !10649
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10651, metadata !DIExpression()), !dbg !10652
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10653, metadata !DIExpression()), !dbg !10654
  %0 = load i64, i64* %size.addr, align 8, !dbg !10655
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10657
  br i1 %1, label %if.then, label %if.end447, !dbg !10658

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10659
  %tobool = icmp ne i64 %2, 0, !dbg !10659
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10662

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10663
  br label %return, !dbg !10663

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10664
  %cmp = icmp ult i64 %3, 4096, !dbg !10666
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10667

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10668
  br label %return, !dbg !10668

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub = sub i64 %4, 1, !dbg !10669
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10669
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10669

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub4 = sub i64 %6, 1, !dbg !10669
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10669
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10669

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub6 = sub i64 %8, 1, !dbg !10669
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10669
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10669

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10669

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub9 = sub i64 %9, 1, !dbg !10669
  %and = and i64 %sub9, -9223372036854775808, !dbg !10669
  %tobool10 = icmp ne i64 %and, 0, !dbg !10669
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10669

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10669

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub13 = sub i64 %10, 1, !dbg !10669
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10669
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10669
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10669

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10669

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub18 = sub i64 %11, 1, !dbg !10669
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10669
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10669
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10669

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10669

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub23 = sub i64 %12, 1, !dbg !10669
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10669
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10669
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10669

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10669

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub28 = sub i64 %13, 1, !dbg !10669
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10669
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10669
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10669

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10669

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub33 = sub i64 %14, 1, !dbg !10669
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10669
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10669
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10669

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10669

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub38 = sub i64 %15, 1, !dbg !10669
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10669
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10669
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10669

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10669

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub43 = sub i64 %16, 1, !dbg !10669
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10669
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10669
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10669

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10669

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub48 = sub i64 %17, 1, !dbg !10669
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10669
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10669
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10669

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10669

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub53 = sub i64 %18, 1, !dbg !10669
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10669
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10669
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10669

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10669

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub58 = sub i64 %19, 1, !dbg !10669
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10669
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10669
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10669

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10669

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub63 = sub i64 %20, 1, !dbg !10669
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10669
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10669
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10669

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10669

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub68 = sub i64 %21, 1, !dbg !10669
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10669
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10669
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10669

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10669

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub73 = sub i64 %22, 1, !dbg !10669
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10669
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10669
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10669

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10669

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub78 = sub i64 %23, 1, !dbg !10669
  %and79 = and i64 %sub78, 562949953421312, !dbg !10669
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10669
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10669

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10669

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub83 = sub i64 %24, 1, !dbg !10669
  %and84 = and i64 %sub83, 281474976710656, !dbg !10669
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10669
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10669

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10669

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub88 = sub i64 %25, 1, !dbg !10669
  %and89 = and i64 %sub88, 140737488355328, !dbg !10669
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10669
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10669

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10669

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub93 = sub i64 %26, 1, !dbg !10669
  %and94 = and i64 %sub93, 70368744177664, !dbg !10669
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10669
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10669

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10669

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub98 = sub i64 %27, 1, !dbg !10669
  %and99 = and i64 %sub98, 35184372088832, !dbg !10669
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10669
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10669

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10669

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub103 = sub i64 %28, 1, !dbg !10669
  %and104 = and i64 %sub103, 17592186044416, !dbg !10669
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10669
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10669

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10669

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub108 = sub i64 %29, 1, !dbg !10669
  %and109 = and i64 %sub108, 8796093022208, !dbg !10669
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10669
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10669

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10669

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub113 = sub i64 %30, 1, !dbg !10669
  %and114 = and i64 %sub113, 4398046511104, !dbg !10669
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10669
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10669

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10669

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub118 = sub i64 %31, 1, !dbg !10669
  %and119 = and i64 %sub118, 2199023255552, !dbg !10669
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10669
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10669

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10669

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub123 = sub i64 %32, 1, !dbg !10669
  %and124 = and i64 %sub123, 1099511627776, !dbg !10669
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10669
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10669

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10669

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub128 = sub i64 %33, 1, !dbg !10669
  %and129 = and i64 %sub128, 549755813888, !dbg !10669
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10669
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10669

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10669

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub133 = sub i64 %34, 1, !dbg !10669
  %and134 = and i64 %sub133, 274877906944, !dbg !10669
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10669
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10669

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10669

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub138 = sub i64 %35, 1, !dbg !10669
  %and139 = and i64 %sub138, 137438953472, !dbg !10669
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10669
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10669

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10669

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub143 = sub i64 %36, 1, !dbg !10669
  %and144 = and i64 %sub143, 68719476736, !dbg !10669
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10669
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10669

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10669

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub148 = sub i64 %37, 1, !dbg !10669
  %and149 = and i64 %sub148, 34359738368, !dbg !10669
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10669
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10669

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10669

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub153 = sub i64 %38, 1, !dbg !10669
  %and154 = and i64 %sub153, 17179869184, !dbg !10669
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10669
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10669

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10669

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub158 = sub i64 %39, 1, !dbg !10669
  %and159 = and i64 %sub158, 8589934592, !dbg !10669
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10669
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10669

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10669

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub163 = sub i64 %40, 1, !dbg !10669
  %and164 = and i64 %sub163, 4294967296, !dbg !10669
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10669
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10669

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10669

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub168 = sub i64 %41, 1, !dbg !10669
  %and169 = and i64 %sub168, 2147483648, !dbg !10669
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10669
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10669

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10669

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub173 = sub i64 %42, 1, !dbg !10669
  %and174 = and i64 %sub173, 1073741824, !dbg !10669
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10669
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10669

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10669

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub178 = sub i64 %43, 1, !dbg !10669
  %and179 = and i64 %sub178, 536870912, !dbg !10669
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10669
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10669

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10669

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub183 = sub i64 %44, 1, !dbg !10669
  %and184 = and i64 %sub183, 268435456, !dbg !10669
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10669
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10669

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10669

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub188 = sub i64 %45, 1, !dbg !10669
  %and189 = and i64 %sub188, 134217728, !dbg !10669
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10669
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10669

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10669

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub193 = sub i64 %46, 1, !dbg !10669
  %and194 = and i64 %sub193, 67108864, !dbg !10669
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10669
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10669

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10669

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub198 = sub i64 %47, 1, !dbg !10669
  %and199 = and i64 %sub198, 33554432, !dbg !10669
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10669
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10669

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10669

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub203 = sub i64 %48, 1, !dbg !10669
  %and204 = and i64 %sub203, 16777216, !dbg !10669
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10669
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10669

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10669

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub208 = sub i64 %49, 1, !dbg !10669
  %and209 = and i64 %sub208, 8388608, !dbg !10669
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10669
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10669

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10669

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub213 = sub i64 %50, 1, !dbg !10669
  %and214 = and i64 %sub213, 4194304, !dbg !10669
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10669
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10669

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10669

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub218 = sub i64 %51, 1, !dbg !10669
  %and219 = and i64 %sub218, 2097152, !dbg !10669
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10669
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10669

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10669

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub223 = sub i64 %52, 1, !dbg !10669
  %and224 = and i64 %sub223, 1048576, !dbg !10669
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10669
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10669

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10669

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub228 = sub i64 %53, 1, !dbg !10669
  %and229 = and i64 %sub228, 524288, !dbg !10669
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10669
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10669

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10669

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub233 = sub i64 %54, 1, !dbg !10669
  %and234 = and i64 %sub233, 262144, !dbg !10669
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10669
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10669

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10669

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub238 = sub i64 %55, 1, !dbg !10669
  %and239 = and i64 %sub238, 131072, !dbg !10669
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10669
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10669

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10669

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub243 = sub i64 %56, 1, !dbg !10669
  %and244 = and i64 %sub243, 65536, !dbg !10669
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10669
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10669

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10669

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub248 = sub i64 %57, 1, !dbg !10669
  %and249 = and i64 %sub248, 32768, !dbg !10669
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10669
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10669

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10669

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub253 = sub i64 %58, 1, !dbg !10669
  %and254 = and i64 %sub253, 16384, !dbg !10669
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10669
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10669

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10669

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub258 = sub i64 %59, 1, !dbg !10669
  %and259 = and i64 %sub258, 8192, !dbg !10669
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10669
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10669

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10669

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub263 = sub i64 %60, 1, !dbg !10669
  %and264 = and i64 %sub263, 4096, !dbg !10669
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10669
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10669

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10669

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub268 = sub i64 %61, 1, !dbg !10669
  %and269 = and i64 %sub268, 2048, !dbg !10669
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10669
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10669

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10669

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub273 = sub i64 %62, 1, !dbg !10669
  %and274 = and i64 %sub273, 1024, !dbg !10669
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10669
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10669

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10669

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub278 = sub i64 %63, 1, !dbg !10669
  %and279 = and i64 %sub278, 512, !dbg !10669
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10669
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10669

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10669

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub283 = sub i64 %64, 1, !dbg !10669
  %and284 = and i64 %sub283, 256, !dbg !10669
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10669
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10669

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10669

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub288 = sub i64 %65, 1, !dbg !10669
  %and289 = and i64 %sub288, 128, !dbg !10669
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10669
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10669

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10669

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub293 = sub i64 %66, 1, !dbg !10669
  %and294 = and i64 %sub293, 64, !dbg !10669
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10669
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10669

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10669

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub298 = sub i64 %67, 1, !dbg !10669
  %and299 = and i64 %sub298, 32, !dbg !10669
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10669
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10669

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10669

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub303 = sub i64 %68, 1, !dbg !10669
  %and304 = and i64 %sub303, 16, !dbg !10669
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10669
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10669

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10669

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub308 = sub i64 %69, 1, !dbg !10669
  %and309 = and i64 %sub308, 8, !dbg !10669
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10669
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10669

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10669

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub313 = sub i64 %70, 1, !dbg !10669
  %and314 = and i64 %sub313, 4, !dbg !10669
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10669
  %71 = zext i1 %tobool315 to i64, !dbg !10669
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10669
  br label %cond.end, !dbg !10669

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10669
  br label %cond.end317, !dbg !10669

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10669
  br label %cond.end319, !dbg !10669

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10669
  br label %cond.end321, !dbg !10669

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10669
  br label %cond.end323, !dbg !10669

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10669
  br label %cond.end325, !dbg !10669

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10669
  br label %cond.end327, !dbg !10669

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10669
  br label %cond.end329, !dbg !10669

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10669
  br label %cond.end331, !dbg !10669

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10669
  br label %cond.end333, !dbg !10669

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10669
  br label %cond.end335, !dbg !10669

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10669
  br label %cond.end337, !dbg !10669

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10669
  br label %cond.end339, !dbg !10669

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10669
  br label %cond.end341, !dbg !10669

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10669
  br label %cond.end343, !dbg !10669

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10669
  br label %cond.end345, !dbg !10669

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10669
  br label %cond.end347, !dbg !10669

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10669
  br label %cond.end349, !dbg !10669

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10669
  br label %cond.end351, !dbg !10669

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10669
  br label %cond.end353, !dbg !10669

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10669
  br label %cond.end355, !dbg !10669

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10669
  br label %cond.end357, !dbg !10669

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10669
  br label %cond.end359, !dbg !10669

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10669
  br label %cond.end361, !dbg !10669

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10669
  br label %cond.end363, !dbg !10669

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10669
  br label %cond.end365, !dbg !10669

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10669
  br label %cond.end367, !dbg !10669

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10669
  br label %cond.end369, !dbg !10669

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10669
  br label %cond.end371, !dbg !10669

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10669
  br label %cond.end373, !dbg !10669

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10669
  br label %cond.end375, !dbg !10669

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10669
  br label %cond.end377, !dbg !10669

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10669
  br label %cond.end379, !dbg !10669

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10669
  br label %cond.end381, !dbg !10669

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10669
  br label %cond.end383, !dbg !10669

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10669
  br label %cond.end385, !dbg !10669

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10669
  br label %cond.end387, !dbg !10669

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10669
  br label %cond.end389, !dbg !10669

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10669
  br label %cond.end391, !dbg !10669

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10669
  br label %cond.end393, !dbg !10669

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10669
  br label %cond.end395, !dbg !10669

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10669
  br label %cond.end397, !dbg !10669

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10669
  br label %cond.end399, !dbg !10669

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10669
  br label %cond.end401, !dbg !10669

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10669
  br label %cond.end403, !dbg !10669

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10669
  br label %cond.end405, !dbg !10669

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10669
  br label %cond.end407, !dbg !10669

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10669
  br label %cond.end409, !dbg !10669

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10669
  br label %cond.end411, !dbg !10669

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10669
  br label %cond.end413, !dbg !10669

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10669
  br label %cond.end415, !dbg !10669

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10669
  br label %cond.end417, !dbg !10669

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10669
  br label %cond.end419, !dbg !10669

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10669
  br label %cond.end421, !dbg !10669

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10669
  br label %cond.end423, !dbg !10669

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10669
  br label %cond.end425, !dbg !10669

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10669
  br label %cond.end427, !dbg !10669

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10669
  br label %cond.end429, !dbg !10669

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10669
  br label %cond.end431, !dbg !10669

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10669
  br label %cond.end433, !dbg !10669

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10669
  br label %cond.end435, !dbg !10669

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10669
  br label %cond.end437, !dbg !10669

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10669
  br label %cond.end440, !dbg !10669

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10669

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10669
  br label %cond.end444, !dbg !10669

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10669
  %sub443 = sub i64 %72, 1, !dbg !10669
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !10669
  br label %cond.end444, !dbg !10669

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10669
  %sub446 = sub i32 %cond445, 12, !dbg !10670
  %add = add i32 %sub446, 1, !dbg !10671
  store i32 %add, i32* %retval, align 4, !dbg !10672
  br label %return, !dbg !10672

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10673
  %dec = add i64 %73, -1, !dbg !10673
  store i64 %dec, i64* %size.addr, align 8, !dbg !10673
  %74 = load i64, i64* %size.addr, align 8, !dbg !10674
  %shr = lshr i64 %74, 12, !dbg !10674
  store i64 %shr, i64* %size.addr, align 8, !dbg !10674
  %75 = load i64, i64* %size.addr, align 8, !dbg !10675
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10652
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10676
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10677
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !10676, !srcloc !10678
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10676
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10679
  %add.i = add i32 %79, 1, !dbg !10680
  store i32 %add.i, i32* %retval, align 4, !dbg !10681
  br label %return, !dbg !10681

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10682
  ret i32 %80, !dbg !10682
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !10683 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10644, metadata !DIExpression()), !dbg !10687
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10651, metadata !DIExpression()), !dbg !10689
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  %0 = load i64, i64* %n.addr, align 8, !dbg !10692
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10689
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10693
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10694
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !10693, !srcloc !10678
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10693
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10695
  %add.i = add i32 %4, 1, !dbg !10696
  %sub = sub i32 %add.i, 1, !dbg !10697
  ret i32 %sub, !dbg !10698
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10699 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10703, metadata !DIExpression()), !dbg !10704
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10705, metadata !DIExpression()), !dbg !10706
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10707, metadata !DIExpression()), !dbg !10708
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10709, metadata !DIExpression()), !dbg !10710
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10711
  ret i8* %0, !dbg !10712
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_is_target_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @attribute_container_register(%struct.attribute_container*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_seconds_since_last_reset(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10713 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10716, metadata !DIExpression()), !dbg !10715
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10717, metadata !DIExpression()), !dbg !10715
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10715
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10715
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 0) #12, !dbg !10715
  ret i64 %call, !dbg !10715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fc_stat_show(%struct.device* %dev, i8* %buf, i64 %offset) #0 !dbg !10718 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %buf.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %stats = alloca %struct.fc_host_statistics*, align 8
  %ret = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp13 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10721, metadata !DIExpression()), !dbg !10722
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10723, metadata !DIExpression()), !dbg !10724
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10725, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !10727, metadata !DIExpression()), !dbg !10728
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10729
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10729
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !10729
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !10729
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !10728
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !10730, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10732, metadata !DIExpression()), !dbg !10734
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10734
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !10734
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !10734
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !10734
  store i8* %4, i8** %__mptr, align 8, !dbg !10734
  br label %do.body, !dbg !10734

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10735

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !10734
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !10734
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !10734
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !10735
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !10734
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !10731
  call void @llvm.dbg.declare(metadata %struct.fc_host_statistics** %stats, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10739, metadata !DIExpression()), !dbg !10740
  store i64 -2, i64* %ret, align 8, !dbg !10740
  %8 = load i64, i64* %offset.addr, align 8, !dbg !10741
  %cmp = icmp ugt i64 %8, 232, !dbg !10743
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10744

lor.lhs.false:                                    ; preds = %do.end
  %9 = load i64, i64* %offset.addr, align 8, !dbg !10745
  %rem = urem i64 %9, 8, !dbg !10746
  %cmp1 = icmp ne i64 %rem, 0, !dbg !10747
  br i1 %cmp1, label %if.then, label %if.end20, !dbg !10748

if.then:                                          ; preds = %lor.lhs.false, %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10749, metadata !DIExpression()), !dbg !10751
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10751
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !10752
  %tobool = icmp ne i32 %10, 0, !dbg !10752
  %lnot = xor i1 %tobool, true, !dbg !10752
  %lnot2 = xor i1 %lnot, true, !dbg !10752
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10752
  %conv = sext i32 %lnot.ext to i64, !dbg !10752
  %tobool3 = icmp ne i64 %conv, 0, !dbg !10752
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10751

if.then4:                                         ; preds = %if.then
  br label %do.body5, !dbg !10752

do.body5:                                         ; preds = %if.then4
  br label %do.body6, !dbg !10754

do.body6:                                         ; preds = %do.body5
  br label %do.end7, !dbg !10756

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !10754

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1695, i32 2305, i64 12) #10, !dbg !10758, !srcloc !10760
  br label %do.end9, !dbg !10758

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 389) #10, !dbg !10761, !srcloc !10763
  br label %do.body10, !dbg !10754

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !10764

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !10754

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !10754

if.end:                                           ; preds = %do.end12, %if.then
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !10751
  %tobool14 = icmp ne i32 %11, 0, !dbg !10751
  %lnot15 = xor i1 %tobool14, true, !dbg !10751
  %lnot17 = xor i1 %lnot15, true, !dbg !10751
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !10751
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !10751
  store i64 %conv19, i64* %tmp13, align 8, !dbg !10752
  %12 = load i64, i64* %tmp13, align 8, !dbg !10751
  br label %if.end20, !dbg !10766

if.end20:                                         ; preds = %if.end, %lor.lhs.false
  %13 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10767
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %13, i32 0, i32 1, !dbg !10769
  %14 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !10769
  %get_fc_host_stats = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %14, i32 0, i32 13, !dbg !10770
  %15 = load %struct.fc_host_statistics* (%struct.Scsi_Host*)*, %struct.fc_host_statistics* (%struct.Scsi_Host*)** %get_fc_host_stats, align 8, !dbg !10770
  %tobool21 = icmp ne %struct.fc_host_statistics* (%struct.Scsi_Host*)* %15, null, !dbg !10767
  br i1 %tobool21, label %if.then22, label %if.end32, !dbg !10771

if.then22:                                        ; preds = %if.end20
  %16 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10772
  %f23 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %16, i32 0, i32 1, !dbg !10774
  %17 = load %struct.fc_function_template*, %struct.fc_function_template** %f23, align 8, !dbg !10774
  %get_fc_host_stats24 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %17, i32 0, i32 13, !dbg !10775
  %18 = load %struct.fc_host_statistics* (%struct.Scsi_Host*)*, %struct.fc_host_statistics* (%struct.Scsi_Host*)** %get_fc_host_stats24, align 8, !dbg !10775
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10776
  %call25 = call %struct.fc_host_statistics* %18(%struct.Scsi_Host* %19) #12, !dbg !10777
  store %struct.fc_host_statistics* %call25, %struct.fc_host_statistics** %stats, align 8, !dbg !10778
  %20 = load %struct.fc_host_statistics*, %struct.fc_host_statistics** %stats, align 8, !dbg !10779
  %tobool26 = icmp ne %struct.fc_host_statistics* %20, null, !dbg !10779
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !10781

if.then27:                                        ; preds = %if.then22
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !10782
  %22 = load %struct.fc_host_statistics*, %struct.fc_host_statistics** %stats, align 8, !dbg !10783
  %23 = bitcast %struct.fc_host_statistics* %22 to i8*, !dbg !10784
  %24 = load i64, i64* %offset.addr, align 8, !dbg !10785
  %add.ptr28 = getelementptr i8, i8* %23, i64 %24, !dbg !10786
  %25 = bitcast i8* %add.ptr28 to i64*, !dbg !10787
  %26 = load i64, i64* %25, align 8, !dbg !10787
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %26) #12, !dbg !10788
  %conv30 = sext i32 %call29 to i64, !dbg !10788
  store i64 %conv30, i64* %ret, align 8, !dbg !10789
  br label %if.end31, !dbg !10790

if.end31:                                         ; preds = %if.then27, %if.then22
  br label %if.end32, !dbg !10791

if.end32:                                         ; preds = %if.end31, %if.end20
  %27 = load i64, i64* %ret, align 8, !dbg !10792
  ret i64 %27, !dbg !10793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_tx_frames(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10794 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10795, metadata !DIExpression()), !dbg !10796
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10797, metadata !DIExpression()), !dbg !10796
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10798, metadata !DIExpression()), !dbg !10796
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10796
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10796
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 8) #12, !dbg !10796
  ret i64 %call, !dbg !10796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_tx_words(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10799 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10800, metadata !DIExpression()), !dbg !10801
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10802, metadata !DIExpression()), !dbg !10801
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10803, metadata !DIExpression()), !dbg !10801
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10801
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10801
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 16) #12, !dbg !10801
  ret i64 %call, !dbg !10801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_rx_frames(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10804 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10807, metadata !DIExpression()), !dbg !10806
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10808, metadata !DIExpression()), !dbg !10806
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10806
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10806
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 24) #12, !dbg !10806
  ret i64 %call, !dbg !10806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_rx_words(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10809 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10810, metadata !DIExpression()), !dbg !10811
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10812, metadata !DIExpression()), !dbg !10811
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10813, metadata !DIExpression()), !dbg !10811
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10811
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10811
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 32) #12, !dbg !10811
  ret i64 %call, !dbg !10811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_lip_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10814 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10817, metadata !DIExpression()), !dbg !10816
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10818, metadata !DIExpression()), !dbg !10816
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10816
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10816
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 40) #12, !dbg !10816
  ret i64 %call, !dbg !10816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_nos_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10819 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10820, metadata !DIExpression()), !dbg !10821
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10822, metadata !DIExpression()), !dbg !10821
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10823, metadata !DIExpression()), !dbg !10821
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10821
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10821
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 48) #12, !dbg !10821
  ret i64 %call, !dbg !10821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_error_frames(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10824 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10827, metadata !DIExpression()), !dbg !10826
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10828, metadata !DIExpression()), !dbg !10826
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10826
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10826
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 56) #12, !dbg !10826
  ret i64 %call, !dbg !10826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_dumped_frames(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10829 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10830, metadata !DIExpression()), !dbg !10831
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10832, metadata !DIExpression()), !dbg !10831
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10833, metadata !DIExpression()), !dbg !10831
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10831
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10831
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 64) #12, !dbg !10831
  ret i64 %call, !dbg !10831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_link_failure_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10834 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10835, metadata !DIExpression()), !dbg !10836
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10837, metadata !DIExpression()), !dbg !10836
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10838, metadata !DIExpression()), !dbg !10836
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10836
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10836
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 72) #12, !dbg !10836
  ret i64 %call, !dbg !10836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_loss_of_sync_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10839 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10840, metadata !DIExpression()), !dbg !10841
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10842, metadata !DIExpression()), !dbg !10841
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10843, metadata !DIExpression()), !dbg !10841
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10841
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10841
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 80) #12, !dbg !10841
  ret i64 %call, !dbg !10841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_loss_of_signal_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10844 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10847, metadata !DIExpression()), !dbg !10846
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10848, metadata !DIExpression()), !dbg !10846
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10846
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10846
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 88) #12, !dbg !10846
  ret i64 %call, !dbg !10846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_prim_seq_protocol_err_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10849 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10850, metadata !DIExpression()), !dbg !10851
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10852, metadata !DIExpression()), !dbg !10851
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10853, metadata !DIExpression()), !dbg !10851
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10851
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10851
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 96) #12, !dbg !10851
  ret i64 %call, !dbg !10851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_invalid_tx_word_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10854 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10857, metadata !DIExpression()), !dbg !10856
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10858, metadata !DIExpression()), !dbg !10856
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10856
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10856
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 104) #12, !dbg !10856
  ret i64 %call, !dbg !10856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_invalid_crc_count(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10859 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10860, metadata !DIExpression()), !dbg !10861
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10862, metadata !DIExpression()), !dbg !10861
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10863, metadata !DIExpression()), !dbg !10861
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10861
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10861
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 112) #12, !dbg !10861
  ret i64 %call, !dbg !10861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_input_requests(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10864 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10867, metadata !DIExpression()), !dbg !10866
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10868, metadata !DIExpression()), !dbg !10866
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10866
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10866
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 120) #12, !dbg !10866
  ret i64 %call, !dbg !10866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_output_requests(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10869 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10872, metadata !DIExpression()), !dbg !10871
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10873, metadata !DIExpression()), !dbg !10871
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10871
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10871
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 128) #12, !dbg !10871
  ret i64 %call, !dbg !10871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_control_requests(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10874 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10877, metadata !DIExpression()), !dbg !10876
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10878, metadata !DIExpression()), !dbg !10876
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10876
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10876
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 136) #12, !dbg !10876
  ret i64 %call, !dbg !10876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_input_megabytes(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10879 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10880, metadata !DIExpression()), !dbg !10881
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10882, metadata !DIExpression()), !dbg !10881
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10883, metadata !DIExpression()), !dbg !10881
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10881
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10881
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 144) #12, !dbg !10881
  ret i64 %call, !dbg !10881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_output_megabytes(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10884 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10885, metadata !DIExpression()), !dbg !10886
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10887, metadata !DIExpression()), !dbg !10886
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10888, metadata !DIExpression()), !dbg !10886
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10886
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10886
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 152) #12, !dbg !10886
  ret i64 %call, !dbg !10886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_packet_alloc_failures(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10889 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10890, metadata !DIExpression()), !dbg !10891
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10892, metadata !DIExpression()), !dbg !10891
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10893, metadata !DIExpression()), !dbg !10891
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10891
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10891
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 160) #12, !dbg !10891
  ret i64 %call, !dbg !10891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_packet_aborts(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10894 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10895, metadata !DIExpression()), !dbg !10896
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10897, metadata !DIExpression()), !dbg !10896
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10898, metadata !DIExpression()), !dbg !10896
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10896
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10896
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 168) #12, !dbg !10896
  ret i64 %call, !dbg !10896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fcp_frame_alloc_failures(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10899 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10900, metadata !DIExpression()), !dbg !10901
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10902, metadata !DIExpression()), !dbg !10901
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10903, metadata !DIExpression()), !dbg !10901
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10901
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10901
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 176) #12, !dbg !10901
  ret i64 %call, !dbg !10901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fc_no_free_exch(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10904 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10907, metadata !DIExpression()), !dbg !10906
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10908, metadata !DIExpression()), !dbg !10906
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10906
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10906
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 184) #12, !dbg !10906
  ret i64 %call, !dbg !10906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fc_no_free_exch_xid(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10909 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10912, metadata !DIExpression()), !dbg !10911
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10913, metadata !DIExpression()), !dbg !10911
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10911
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10911
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 192) #12, !dbg !10911
  ret i64 %call, !dbg !10911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fc_xid_not_found(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10914 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10915, metadata !DIExpression()), !dbg !10916
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10917, metadata !DIExpression()), !dbg !10916
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10918, metadata !DIExpression()), !dbg !10916
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10916
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10916
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 200) #12, !dbg !10916
  ret i64 %call, !dbg !10916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fc_xid_busy(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10919 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10920, metadata !DIExpression()), !dbg !10921
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10922, metadata !DIExpression()), !dbg !10921
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10923, metadata !DIExpression()), !dbg !10921
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10921
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10921
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 208) #12, !dbg !10921
  ret i64 %call, !dbg !10921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fc_seq_not_found(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10924 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10925, metadata !DIExpression()), !dbg !10926
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10927, metadata !DIExpression()), !dbg !10926
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10928, metadata !DIExpression()), !dbg !10926
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10926
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10926
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 216) #12, !dbg !10926
  ret i64 %call, !dbg !10926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fcstat_fc_non_bls_resp(%struct.device* %cd, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10929 {
entry:
  %cd.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %cd, %struct.device** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cd.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10932, metadata !DIExpression()), !dbg !10931
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10933, metadata !DIExpression()), !dbg !10931
  %0 = load %struct.device*, %struct.device** %cd.addr, align 8, !dbg !10931
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !10931
  %call = call i64 @fc_stat_show(%struct.device* %0, i8* %1, i64 224) #12, !dbg !10931
  ret i64 %call, !dbg !10931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fc_reset_statistics(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !10934 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10937, metadata !DIExpression()), !dbg !10938
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10939, metadata !DIExpression()), !dbg !10940
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10941, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !10943, metadata !DIExpression()), !dbg !10944
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10945
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10945
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !10945
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !10945
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !10944
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !10946, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10948, metadata !DIExpression()), !dbg !10950
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10950
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !10950
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !10950
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !10950
  store i8* %4, i8** %__mptr, align 8, !dbg !10950
  br label %do.body, !dbg !10950

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10951

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !10950
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !10950
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !10950
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !10951
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !10950
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !10947
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10953
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !10955
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !10955
  %reset_fc_host_stats = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 14, !dbg !10956
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %reset_fc_host_stats, align 8, !dbg !10956
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !10953
  br i1 %tobool, label %if.then, label %if.end, !dbg !10957

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !10958
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !10960
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !10960
  %reset_fc_host_stats2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 14, !dbg !10961
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %reset_fc_host_stats2, align 8, !dbg !10961
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10962
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !10958
  %15 = load i64, i64* %count.addr, align 8, !dbg !10963
  store i64 %15, i64* %retval, align 8, !dbg !10964
  br label %return, !dbg !10964

if.end:                                           ; preds = %do.end
  store i64 -2, i64* %retval, align 8, !dbg !10965
  br label %return, !dbg !10965

return:                                           ; preds = %if.end, %if.then
  %16 = load i64, i64* %retval, align 8, !dbg !10966
  ret i64 %16, !dbg !10966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_is_fc_vport(%struct.device* %dev) #0 !dbg !10967 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10970
  %release = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 31, !dbg !10971
  %1 = load void (%struct.device*)*, void (%struct.device*)** %release, align 8, !dbg !10971
  %cmp = icmp eq void (%struct.device*)* %1, @fc_vport_dev_release, !dbg !10972
  %conv = zext i1 %cmp to i32, !dbg !10972
  ret i32 %conv, !dbg !10973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_vport_dev_release(%struct.device* %dev) #0 !dbg !10974 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10975, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !10977, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10979, metadata !DIExpression()), !dbg !10981
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10981
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10981
  store i8* %1, i8** %__mptr, align 8, !dbg !10981
  br label %do.body, !dbg !10981

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10982

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10981
  %add.ptr = getelementptr i8, i8* %2, i64 -152, !dbg !10981
  %3 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !10981
  store %struct.fc_vport* %3, %struct.fc_vport** %tmp, align 8, !dbg !10982
  %4 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !10981
  store %struct.fc_vport* %4, %struct.fc_vport** %vport, align 8, !dbg !10978
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10984
  %parent = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 1, !dbg !10985
  %6 = load %struct.device*, %struct.device** %parent, align 8, !dbg !10985
  call void @put_device(%struct.device* %6) #12, !dbg !10986
  %7 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !10987
  %8 = bitcast %struct.fc_vport* %7 to i8*, !dbg !10987
  call void @kfree(i8* %8) #12, !dbg !10988
  ret void, !dbg !10989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_user_scan_tgt(%struct.Scsi_Host* %shost, i32 %channel, i32 %id, i64 %lun) #0 !dbg !10990 {
entry:
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !7624, metadata !DIExpression()), !dbg !10993
  %flags.addr.i52 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i52, metadata !7631, metadata !DIExpression()), !dbg !11000
  %tmp.i53 = alloca i32, align 4
  %tmp8.i54 = alloca i32, align 4
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !7624, metadata !DIExpression()), !dbg !11001
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !11003
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !11004
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %lun.addr = alloca i64, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.fc_rport*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.fc_rport*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !11011, metadata !DIExpression()), !dbg !11012
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !11015, metadata !DIExpression()), !dbg !11016
  store i64 %lun, i64* %lun.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lun.addr, metadata !11017, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !11019, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11021, metadata !DIExpression()), !dbg !11022
  br label %do.body, !dbg !11023

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11024

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11025, metadata !DIExpression()), !dbg !11027
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11028, metadata !DIExpression()), !dbg !11027
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11027
  %conv = zext i1 %cmp to i32, !dbg !11027
  store i32 1, i32* %tmp, align 4, !dbg !11027
  %0 = load i32, i32* %tmp, align 4, !dbg !11027
  br label %do.body2, !dbg !11029

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11030

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11031

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11033, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11037, metadata !DIExpression()), !dbg !11036
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11036
  %conv8 = zext i1 %cmp7 to i32, !dbg !11036
  store i32 1, i32* %tmp9, align 4, !dbg !11036
  %1 = load i32, i32* %tmp9, align 4, !dbg !11036
  %call = call i64 @arch_local_irq_save() #12, !dbg !11038
  store i64 %call, i64* %flags, align 8, !dbg !11038
  br label %do.end, !dbg !11038

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11031

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11030

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11039, !srcloc !11040
  br label %do.body12, !dbg !11039

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11041
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !11041
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !11041
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11042
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !11043
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !11043
  br label %do.end14, !dbg !11041

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11039

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11030

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11029

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11024

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11044, metadata !DIExpression()), !dbg !11046
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11046
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 49, !dbg !11046
  %7 = load i8*, i8** %shost_data, align 8, !dbg !11046
  %8 = bitcast i8* %7 to %struct.fc_host_attrs*, !dbg !11046
  %rports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %8, i32 0, i32 26, !dbg !11046
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rports, i32 0, i32 0, !dbg !11046
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11046
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !11046
  store i8* %10, i8** %__mptr, align 8, !dbg !11046
  br label %do.body19, !dbg !11046

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !11047

do.end20:                                         ; preds = %do.body19
  %11 = load i8*, i8** %__mptr, align 8, !dbg !11046
  %add.ptr = getelementptr i8, i8* %11, i64 -80, !dbg !11046
  %12 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !11046
  store %struct.fc_rport* %12, %struct.fc_rport** %tmp21, align 8, !dbg !11047
  %13 = load %struct.fc_rport*, %struct.fc_rport** %tmp21, align 8, !dbg !11046
  store %struct.fc_rport* %13, %struct.fc_rport** %rport, align 8, !dbg !11049
  br label %for.cond, !dbg !11049

for.cond:                                         ; preds = %do.end45, %do.end20
  %14 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11050
  %peers = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %14, i32 0, i32 14, !dbg !11050
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11050
  %shost_data22 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 49, !dbg !11050
  %16 = load i8*, i8** %shost_data22, align 8, !dbg !11050
  %17 = bitcast i8* %16 to %struct.fc_host_attrs*, !dbg !11050
  %rports23 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %17, i32 0, i32 26, !dbg !11050
  %cmp24 = icmp eq %struct.list_head* %peers, %rports23, !dbg !11050
  %lnot = xor i1 %cmp24, true, !dbg !11050
  br i1 %lnot, label %for.body, label %for.end, !dbg !11049

for.body:                                         ; preds = %for.cond
  %18 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11051
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %18, i32 0, i32 8, !dbg !11053
  %19 = load i32, i32* %scsi_target_id, align 4, !dbg !11053
  %cmp26 = icmp eq i32 %19, -1, !dbg !11054
  br i1 %cmp26, label %if.then, label %if.end, !dbg !11055

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11056

if.end:                                           ; preds = %for.body
  %20 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11057
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %20, i32 0, i32 7, !dbg !11059
  %21 = load i32, i32* %port_state, align 8, !dbg !11059
  %cmp28 = icmp ne i32 %21, 2, !dbg !11060
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !11061

if.then30:                                        ; preds = %if.end
  br label %for.inc, !dbg !11062

if.end31:                                         ; preds = %if.end
  %22 = load i32, i32* %channel.addr, align 4, !dbg !11063
  %23 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11064
  %channel32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %23, i32 0, i32 11, !dbg !11065
  %24 = load i32, i32* %channel32, align 8, !dbg !11065
  %cmp33 = icmp eq i32 %22, %24, !dbg !11066
  br i1 %cmp33, label %land.lhs.true, label %if.end40, !dbg !11067

land.lhs.true:                                    ; preds = %if.end31
  %25 = load i32, i32* %id.addr, align 4, !dbg !11068
  %26 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11069
  %scsi_target_id35 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %26, i32 0, i32 8, !dbg !11070
  %27 = load i32, i32* %scsi_target_id35, align 4, !dbg !11070
  %cmp36 = icmp eq i32 %25, %27, !dbg !11071
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !11072

if.then38:                                        ; preds = %land.lhs.true
  %28 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11073
  %host_lock39 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %28, i32 0, i32 4, !dbg !11074
  %29 = load %struct.spinlock*, %struct.spinlock** %host_lock39, align 8, !dbg !11074
  %30 = load i64, i64* %flags, align 8, !dbg !11075
  store %struct.spinlock* %29, %struct.spinlock** %lock.addr.i51, align 8
  store i64 %30, i64* %flags.addr.i52, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !11076
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !11076
  store i32 1, i32* %tmp.i53, align 4, !dbg !11076
  %31 = load i32, i32* %tmp.i53, align 4, !dbg !11076
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !11077
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !11077
  store i32 1, i32* %tmp8.i54, align 4, !dbg !11077
  %32 = load i32, i32* %tmp8.i54, align 4, !dbg !11077
  %33 = load i64, i64* %flags.addr.i52, align 8, !dbg !11078
  call void @arch_local_irq_restore(i64 %33) #11, !dbg !11078
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11079, !srcloc !7797
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !11080
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !11080
  %rlock.i55 = bitcast %union.anon.0* %35 to %struct.raw_spinlock*, !dbg !11080
  %36 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11081
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %36, i32 0, i32 15, !dbg !11082
  %37 = load i32, i32* %channel.addr, align 4, !dbg !11083
  %38 = load i32, i32* %id.addr, align 4, !dbg !11084
  %39 = load i64, i64* %lun.addr, align 8, !dbg !11085
  call void @scsi_scan_target(%struct.device* %dev, i32 %37, i32 %38, i64 %39, i32 2) #12, !dbg !11086
  br label %return, !dbg !11087

if.end40:                                         ; preds = %land.lhs.true, %if.end31
  br label %for.inc, !dbg !11088

for.inc:                                          ; preds = %if.end40, %if.then30, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !11089, metadata !DIExpression()), !dbg !11091
  %40 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11091
  %peers42 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %40, i32 0, i32 14, !dbg !11091
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers42, i32 0, i32 0, !dbg !11091
  %41 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !11091
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !11091
  store i8* %42, i8** %__mptr41, align 8, !dbg !11091
  br label %do.body44, !dbg !11091

do.body44:                                        ; preds = %for.inc
  br label %do.end45, !dbg !11092

do.end45:                                         ; preds = %do.body44
  %43 = load i8*, i8** %__mptr41, align 8, !dbg !11091
  %add.ptr47 = getelementptr i8, i8* %43, i64 -80, !dbg !11091
  %44 = bitcast i8* %add.ptr47 to %struct.fc_rport*, !dbg !11091
  store %struct.fc_rport* %44, %struct.fc_rport** %tmp46, align 8, !dbg !11092
  %45 = load %struct.fc_rport*, %struct.fc_rport** %tmp46, align 8, !dbg !11091
  store %struct.fc_rport* %45, %struct.fc_rport** %rport, align 8, !dbg !11050
  br label %for.cond, !dbg !11050, !llvm.loop !11094

for.end:                                          ; preds = %for.cond
  %46 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11096
  %host_lock48 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %46, i32 0, i32 4, !dbg !11097
  %47 = load %struct.spinlock*, %struct.spinlock** %host_lock48, align 8, !dbg !11097
  %48 = load i64, i64* %flags, align 8, !dbg !11098
  store %struct.spinlock* %47, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %48, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !11099
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !11099
  store i32 1, i32* %tmp.i, align 4, !dbg !11099
  %49 = load i32, i32* %tmp.i, align 4, !dbg !11099
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !11100
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !11100
  store i32 1, i32* %tmp8.i, align 4, !dbg !11100
  %50 = load i32, i32* %tmp8.i, align 4, !dbg !11100
  %51 = load i64, i64* %flags.addr.i, align 8, !dbg !11101
  call void @arch_local_irq_restore(i64 %51) #11, !dbg !11101
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11102, !srcloc !7797
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !11103
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !11103
  %rlock.i50 = bitcast %union.anon.0* %53 to %struct.raw_spinlock*, !dbg !11103
  br label %return, !dbg !11104

return:                                           ; preds = %for.end, %if.then38
  ret void, !dbg !11104
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_target(%struct.device*, i32, i32, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_starget_node_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11105 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.fc_internal*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11106, metadata !DIExpression()), !dbg !11107
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11108, metadata !DIExpression()), !dbg !11107
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11109, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !11110, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11111, metadata !DIExpression()), !dbg !11113
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11113
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11113
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11113
  %2 = bitcast %struct.device* %1 to i8*, !dbg !11113
  store i8* %2, i8** %__mptr, align 8, !dbg !11113
  br label %do.body, !dbg !11113

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11114

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11113
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !11113
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !11113
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !11114
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !11113
  store %struct.scsi_target* %5, %struct.scsi_target** %starget, align 8, !dbg !11107
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11116, metadata !DIExpression()), !dbg !11107
  %6 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11107
  %dev1 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %6, i32 0, i32 3, !dbg !11107
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !11107
  %7 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !11107
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %7) #12, !dbg !11107
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11107
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11117, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11118, metadata !DIExpression()), !dbg !11120
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11120
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !11120
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11120
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !11120
  store i8* %10, i8** %__mptr3, align 8, !dbg !11120
  br label %do.body4, !dbg !11120

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !11121

do.end5:                                          ; preds = %do.body4
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !11120
  %add.ptr7 = getelementptr i8, i8* %11, i64 0, !dbg !11120
  %12 = bitcast i8* %add.ptr7 to %struct.fc_internal*, !dbg !11120
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp6, align 8, !dbg !11121
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp6, align 8, !dbg !11120
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !11107
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !11123, metadata !DIExpression()), !dbg !11107
  %14 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11107
  %dev8 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %14, i32 0, i32 3, !dbg !11107
  %parent9 = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 1, !dbg !11107
  %15 = load %struct.device*, %struct.device** %parent9, align 8, !dbg !11107
  %call10 = call i32 @scsi_is_fc_rport(%struct.device* %15) #12, !dbg !11107
  %tobool = icmp ne i32 %call10, 0, !dbg !11107
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11107

cond.true:                                        ; preds = %do.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !11124, metadata !DIExpression()), !dbg !11126
  %16 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11126
  %dev12 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %16, i32 0, i32 3, !dbg !11126
  %parent13 = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 1, !dbg !11126
  %17 = load %struct.device*, %struct.device** %parent13, align 8, !dbg !11126
  %18 = bitcast %struct.device* %17 to i8*, !dbg !11126
  store i8* %18, i8** %__mptr11, align 8, !dbg !11126
  br label %do.body14, !dbg !11126

do.body14:                                        ; preds = %cond.true
  br label %do.end15, !dbg !11127

do.end15:                                         ; preds = %do.body14
  %19 = load i8*, i8** %__mptr11, align 8, !dbg !11126
  %add.ptr17 = getelementptr i8, i8* %19, i64 -96, !dbg !11126
  %20 = bitcast i8* %add.ptr17 to %struct.fc_rport*, !dbg !11126
  store %struct.fc_rport* %20, %struct.fc_rport** %tmp16, align 8, !dbg !11127
  %21 = load %struct.fc_rport*, %struct.fc_rport** %tmp16, align 8, !dbg !11126
  br label %cond.end, !dbg !11107

cond.false:                                       ; preds = %do.end5
  br label %cond.end, !dbg !11107

cond.end:                                         ; preds = %cond.false, %do.end15
  %cond = phi %struct.fc_rport* [ %21, %do.end15 ], [ null, %cond.false ], !dbg !11107
  store %struct.fc_rport* %cond, %struct.fc_rport** %rport, align 8, !dbg !11107
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11129
  %tobool18 = icmp ne %struct.fc_rport* %22, null, !dbg !11129
  br i1 %tobool18, label %if.then, label %if.else, !dbg !11107

if.then:                                          ; preds = %cond.end
  %23 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11129
  %node_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %23, i32 0, i32 3, !dbg !11129
  %24 = load i64, i64* %node_name, align 8, !dbg !11129
  %25 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11129
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %25, i32 0, i32 15, !dbg !11129
  %26 = bitcast [0 x i64]* %starget_data to %struct.fc_starget_attrs*, !dbg !11129
  %node_name19 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %26, i32 0, i32 0, !dbg !11129
  store i64 %24, i64* %node_name19, align 8, !dbg !11129
  br label %if.end24, !dbg !11129

if.else:                                          ; preds = %cond.end
  %27 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11131
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %27, i32 0, i32 1, !dbg !11131
  %28 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11131
  %get_starget_node_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %28, i32 0, i32 2, !dbg !11131
  %29 = load void (%struct.scsi_target*)*, void (%struct.scsi_target*)** %get_starget_node_name, align 8, !dbg !11131
  %tobool20 = icmp ne void (%struct.scsi_target*)* %29, null, !dbg !11131
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !11129

if.then21:                                        ; preds = %if.else
  %30 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11131
  %f22 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %30, i32 0, i32 1, !dbg !11131
  %31 = load %struct.fc_function_template*, %struct.fc_function_template** %f22, align 8, !dbg !11131
  %get_starget_node_name23 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %31, i32 0, i32 2, !dbg !11131
  %32 = load void (%struct.scsi_target*)*, void (%struct.scsi_target*)** %get_starget_node_name23, align 8, !dbg !11131
  %33 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11131
  call void %32(%struct.scsi_target* %33) #12, !dbg !11131
  br label %if.end, !dbg !11131

if.end:                                           ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !11107
  %35 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11107
  %starget_data25 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %35, i32 0, i32 15, !dbg !11107
  %36 = bitcast [0 x i64]* %starget_data25 to %struct.fc_starget_attrs*, !dbg !11107
  %node_name26 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %36, i32 0, i32 0, !dbg !11107
  %37 = load i64, i64* %node_name26, align 8, !dbg !11107
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %34, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %37) #12, !dbg !11107
  %conv = sext i32 %call27 to i64, !dbg !11107
  ret i64 %conv, !dbg !11107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_starget_port_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11133 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.fc_internal*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11134, metadata !DIExpression()), !dbg !11135
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11136, metadata !DIExpression()), !dbg !11135
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11137, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !11138, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11139, metadata !DIExpression()), !dbg !11141
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11141
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11141
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11141
  %2 = bitcast %struct.device* %1 to i8*, !dbg !11141
  store i8* %2, i8** %__mptr, align 8, !dbg !11141
  br label %do.body, !dbg !11141

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11142

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11141
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !11141
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !11141
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !11142
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !11141
  store %struct.scsi_target* %5, %struct.scsi_target** %starget, align 8, !dbg !11135
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11144, metadata !DIExpression()), !dbg !11135
  %6 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11135
  %dev1 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %6, i32 0, i32 3, !dbg !11135
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !11135
  %7 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !11135
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %7) #12, !dbg !11135
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11135
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11145, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11146, metadata !DIExpression()), !dbg !11148
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11148
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !11148
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11148
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !11148
  store i8* %10, i8** %__mptr3, align 8, !dbg !11148
  br label %do.body4, !dbg !11148

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !11149

do.end5:                                          ; preds = %do.body4
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !11148
  %add.ptr7 = getelementptr i8, i8* %11, i64 0, !dbg !11148
  %12 = bitcast i8* %add.ptr7 to %struct.fc_internal*, !dbg !11148
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp6, align 8, !dbg !11149
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp6, align 8, !dbg !11148
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !11135
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !11151, metadata !DIExpression()), !dbg !11135
  %14 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11135
  %dev8 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %14, i32 0, i32 3, !dbg !11135
  %parent9 = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 1, !dbg !11135
  %15 = load %struct.device*, %struct.device** %parent9, align 8, !dbg !11135
  %call10 = call i32 @scsi_is_fc_rport(%struct.device* %15) #12, !dbg !11135
  %tobool = icmp ne i32 %call10, 0, !dbg !11135
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11135

cond.true:                                        ; preds = %do.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !11152, metadata !DIExpression()), !dbg !11154
  %16 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11154
  %dev12 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %16, i32 0, i32 3, !dbg !11154
  %parent13 = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 1, !dbg !11154
  %17 = load %struct.device*, %struct.device** %parent13, align 8, !dbg !11154
  %18 = bitcast %struct.device* %17 to i8*, !dbg !11154
  store i8* %18, i8** %__mptr11, align 8, !dbg !11154
  br label %do.body14, !dbg !11154

do.body14:                                        ; preds = %cond.true
  br label %do.end15, !dbg !11155

do.end15:                                         ; preds = %do.body14
  %19 = load i8*, i8** %__mptr11, align 8, !dbg !11154
  %add.ptr17 = getelementptr i8, i8* %19, i64 -96, !dbg !11154
  %20 = bitcast i8* %add.ptr17 to %struct.fc_rport*, !dbg !11154
  store %struct.fc_rport* %20, %struct.fc_rport** %tmp16, align 8, !dbg !11155
  %21 = load %struct.fc_rport*, %struct.fc_rport** %tmp16, align 8, !dbg !11154
  br label %cond.end, !dbg !11135

cond.false:                                       ; preds = %do.end5
  br label %cond.end, !dbg !11135

cond.end:                                         ; preds = %cond.false, %do.end15
  %cond = phi %struct.fc_rport* [ %21, %do.end15 ], [ null, %cond.false ], !dbg !11135
  store %struct.fc_rport* %cond, %struct.fc_rport** %rport, align 8, !dbg !11135
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11157
  %tobool18 = icmp ne %struct.fc_rport* %22, null, !dbg !11157
  br i1 %tobool18, label %if.then, label %if.else, !dbg !11135

if.then:                                          ; preds = %cond.end
  %23 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11157
  %port_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %23, i32 0, i32 4, !dbg !11157
  %24 = load i64, i64* %port_name, align 8, !dbg !11157
  %25 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11157
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %25, i32 0, i32 15, !dbg !11157
  %26 = bitcast [0 x i64]* %starget_data to %struct.fc_starget_attrs*, !dbg !11157
  %port_name19 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %26, i32 0, i32 1, !dbg !11157
  store i64 %24, i64* %port_name19, align 8, !dbg !11157
  br label %if.end24, !dbg !11157

if.else:                                          ; preds = %cond.end
  %27 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11159
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %27, i32 0, i32 1, !dbg !11159
  %28 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11159
  %get_starget_port_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %28, i32 0, i32 3, !dbg !11159
  %29 = load void (%struct.scsi_target*)*, void (%struct.scsi_target*)** %get_starget_port_name, align 8, !dbg !11159
  %tobool20 = icmp ne void (%struct.scsi_target*)* %29, null, !dbg !11159
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !11157

if.then21:                                        ; preds = %if.else
  %30 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11159
  %f22 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %30, i32 0, i32 1, !dbg !11159
  %31 = load %struct.fc_function_template*, %struct.fc_function_template** %f22, align 8, !dbg !11159
  %get_starget_port_name23 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %31, i32 0, i32 3, !dbg !11159
  %32 = load void (%struct.scsi_target*)*, void (%struct.scsi_target*)** %get_starget_port_name23, align 8, !dbg !11159
  %33 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11159
  call void %32(%struct.scsi_target* %33) #12, !dbg !11159
  br label %if.end, !dbg !11159

if.end:                                           ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !11135
  %35 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11135
  %starget_data25 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %35, i32 0, i32 15, !dbg !11135
  %36 = bitcast [0 x i64]* %starget_data25 to %struct.fc_starget_attrs*, !dbg !11135
  %port_name26 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %36, i32 0, i32 1, !dbg !11135
  %37 = load i64, i64* %port_name26, align 8, !dbg !11135
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %34, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %37) #12, !dbg !11135
  %conv = sext i32 %call27 to i64, !dbg !11135
  ret i64 %conv, !dbg !11135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_starget_port_id(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11161 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.fc_internal*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11164, metadata !DIExpression()), !dbg !11163
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11165, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !11166, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11167, metadata !DIExpression()), !dbg !11169
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11169
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11169
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11169
  %2 = bitcast %struct.device* %1 to i8*, !dbg !11169
  store i8* %2, i8** %__mptr, align 8, !dbg !11169
  br label %do.body, !dbg !11169

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11170

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11169
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !11169
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !11169
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !11170
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !11169
  store %struct.scsi_target* %5, %struct.scsi_target** %starget, align 8, !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11172, metadata !DIExpression()), !dbg !11163
  %6 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11163
  %dev1 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %6, i32 0, i32 3, !dbg !11163
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !11163
  %7 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !11163
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %7) #12, !dbg !11163
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11173, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11174, metadata !DIExpression()), !dbg !11176
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11176
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !11176
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11176
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !11176
  store i8* %10, i8** %__mptr3, align 8, !dbg !11176
  br label %do.body4, !dbg !11176

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !11177

do.end5:                                          ; preds = %do.body4
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !11176
  %add.ptr7 = getelementptr i8, i8* %11, i64 0, !dbg !11176
  %12 = bitcast i8* %add.ptr7 to %struct.fc_internal*, !dbg !11176
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp6, align 8, !dbg !11177
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp6, align 8, !dbg !11176
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !11179, metadata !DIExpression()), !dbg !11163
  %14 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11163
  %dev8 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %14, i32 0, i32 3, !dbg !11163
  %parent9 = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 1, !dbg !11163
  %15 = load %struct.device*, %struct.device** %parent9, align 8, !dbg !11163
  %call10 = call i32 @scsi_is_fc_rport(%struct.device* %15) #12, !dbg !11163
  %tobool = icmp ne i32 %call10, 0, !dbg !11163
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11163

cond.true:                                        ; preds = %do.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !11180, metadata !DIExpression()), !dbg !11182
  %16 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11182
  %dev12 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %16, i32 0, i32 3, !dbg !11182
  %parent13 = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 1, !dbg !11182
  %17 = load %struct.device*, %struct.device** %parent13, align 8, !dbg !11182
  %18 = bitcast %struct.device* %17 to i8*, !dbg !11182
  store i8* %18, i8** %__mptr11, align 8, !dbg !11182
  br label %do.body14, !dbg !11182

do.body14:                                        ; preds = %cond.true
  br label %do.end15, !dbg !11183

do.end15:                                         ; preds = %do.body14
  %19 = load i8*, i8** %__mptr11, align 8, !dbg !11182
  %add.ptr17 = getelementptr i8, i8* %19, i64 -96, !dbg !11182
  %20 = bitcast i8* %add.ptr17 to %struct.fc_rport*, !dbg !11182
  store %struct.fc_rport* %20, %struct.fc_rport** %tmp16, align 8, !dbg !11183
  %21 = load %struct.fc_rport*, %struct.fc_rport** %tmp16, align 8, !dbg !11182
  br label %cond.end, !dbg !11163

cond.false:                                       ; preds = %do.end5
  br label %cond.end, !dbg !11163

cond.end:                                         ; preds = %cond.false, %do.end15
  %cond = phi %struct.fc_rport* [ %21, %do.end15 ], [ null, %cond.false ], !dbg !11163
  store %struct.fc_rport* %cond, %struct.fc_rport** %rport, align 8, !dbg !11163
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11185
  %tobool18 = icmp ne %struct.fc_rport* %22, null, !dbg !11185
  br i1 %tobool18, label %if.then, label %if.else, !dbg !11163

if.then:                                          ; preds = %cond.end
  %23 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11185
  %port_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %23, i32 0, i32 5, !dbg !11185
  %24 = load i32, i32* %port_id, align 8, !dbg !11185
  %25 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11185
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %25, i32 0, i32 15, !dbg !11185
  %26 = bitcast [0 x i64]* %starget_data to %struct.fc_starget_attrs*, !dbg !11185
  %port_id19 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %26, i32 0, i32 2, !dbg !11185
  store i32 %24, i32* %port_id19, align 8, !dbg !11185
  br label %if.end24, !dbg !11185

if.else:                                          ; preds = %cond.end
  %27 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11187
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %27, i32 0, i32 1, !dbg !11187
  %28 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11187
  %get_starget_port_id = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %28, i32 0, i32 4, !dbg !11187
  %29 = load void (%struct.scsi_target*)*, void (%struct.scsi_target*)** %get_starget_port_id, align 8, !dbg !11187
  %tobool20 = icmp ne void (%struct.scsi_target*)* %29, null, !dbg !11187
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !11185

if.then21:                                        ; preds = %if.else
  %30 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11187
  %f22 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %30, i32 0, i32 1, !dbg !11187
  %31 = load %struct.fc_function_template*, %struct.fc_function_template** %f22, align 8, !dbg !11187
  %get_starget_port_id23 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %31, i32 0, i32 4, !dbg !11187
  %32 = load void (%struct.scsi_target*)*, void (%struct.scsi_target*)** %get_starget_port_id23, align 8, !dbg !11187
  %33 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11187
  call void %32(%struct.scsi_target* %33) #12, !dbg !11187
  br label %if.end, !dbg !11187

if.end:                                           ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !11163
  %35 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11163
  %starget_data25 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %35, i32 0, i32 15, !dbg !11163
  %36 = bitcast [0 x i64]* %starget_data25 to %struct.fc_starget_attrs*, !dbg !11163
  %port_id26 = getelementptr inbounds %struct.fc_starget_attrs, %struct.fc_starget_attrs* %36, i32 0, i32 2, !dbg !11163
  %37 = load i32, i32* %port_id26, align 8, !dbg !11163
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %34, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i32 %37) #12, !dbg !11163
  %conv = sext i32 %call27 to i64, !dbg !11163
  ret i64 %conv, !dbg !11163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_node_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11189 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11190, metadata !DIExpression()), !dbg !11191
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11192, metadata !DIExpression()), !dbg !11191
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11193, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11194, metadata !DIExpression()), !dbg !11191
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11191
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11191
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11191
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11191
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11191
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11191
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11191
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11191
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11191
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11191
  %node_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 0, !dbg !11191
  %6 = load i64, i64* %node_name, align 8, !dbg !11191
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %6) #12, !dbg !11191
  %conv = sext i32 %call1 to i64, !dbg !11191
  ret i64 %conv, !dbg !11191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_port_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11195 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11196, metadata !DIExpression()), !dbg !11197
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11198, metadata !DIExpression()), !dbg !11197
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11199, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11200, metadata !DIExpression()), !dbg !11197
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11197
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11197
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11197
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11197
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11197
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11197
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11197
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11197
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11197
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11197
  %port_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 1, !dbg !11197
  %6 = load i64, i64* %port_name, align 8, !dbg !11197
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %6) #12, !dbg !11197
  %conv = sext i32 %call1 to i64, !dbg !11197
  ret i64 %conv, !dbg !11197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_permanent_port_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11201 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11202, metadata !DIExpression()), !dbg !11203
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11204, metadata !DIExpression()), !dbg !11203
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11205, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11206, metadata !DIExpression()), !dbg !11203
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11203
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11203
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11203
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11203
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11203
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11203
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11203
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11203
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11203
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11203
  %permanent_port_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 2, !dbg !11203
  %6 = load i64, i64* %permanent_port_name, align 8, !dbg !11203
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %6) #12, !dbg !11203
  %conv = sext i32 %call1 to i64, !dbg !11203
  ret i64 %conv, !dbg !11203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_supported_classes(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11207 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11208, metadata !DIExpression()), !dbg !11209
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11210, metadata !DIExpression()), !dbg !11211
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11212, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11214, metadata !DIExpression()), !dbg !11215
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11216
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11216
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11216
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11216
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11215
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11217
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !11217
  %3 = load i8*, i8** %shost_data, align 8, !dbg !11217
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !11217
  %supported_classes = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %4, i32 0, i32 3, !dbg !11217
  %5 = load i32, i32* %supported_classes, align 8, !dbg !11217
  %cmp = icmp eq i32 %5, 0, !dbg !11219
  br i1 %cmp, label %if.then, label %if.end, !dbg !11220

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !11221
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !11222
  %conv = sext i32 %call1 to i64, !dbg !11222
  store i64 %conv, i64* %retval, align 8, !dbg !11223
  br label %return, !dbg !11223

if.end:                                           ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11224
  %shost_data2 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 49, !dbg !11224
  %8 = load i8*, i8** %shost_data2, align 8, !dbg !11224
  %9 = bitcast i8* %8 to %struct.fc_host_attrs*, !dbg !11224
  %supported_classes3 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 3, !dbg !11224
  %10 = load i32, i32* %supported_classes3, align 8, !dbg !11224
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !11225
  %call4 = call i64 @get_fc_cos_names(i32 %10, i8* %11) #12, !dbg !11226
  store i64 %call4, i64* %retval, align 8, !dbg !11227
  br label %return, !dbg !11227

return:                                           ; preds = %if.end, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !11228
  ret i64 %12, !dbg !11228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_fc_cos_names(i32 %table_key, i8* %buf) #0 !dbg !11229 {
entry:
  %table_key.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %prefix = alloca i8*, align 8
  %len = alloca i64, align 8
  %i = alloca i32, align 4
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !11232, metadata !DIExpression()), !dbg !11233
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11234, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !11235, metadata !DIExpression()), !dbg !11233
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66, i64 0, i64 0), i8** %prefix, align 8, !dbg !11233
  call void @llvm.dbg.declare(metadata i64* %len, metadata !11236, metadata !DIExpression()), !dbg !11233
  store i64 0, i64* %len, align 8, !dbg !11233
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11237, metadata !DIExpression()), !dbg !11233
  store i32 0, i32* %i, align 4, !dbg !11238
  br label %for.cond, !dbg !11238

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11240
  %conv = sext i32 %0 to i64, !dbg !11240
  %cmp = icmp ult i64 %conv, 5, !dbg !11240
  br i1 %cmp, label %for.body, label %for.end, !dbg !11238

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11242
  %idxprom = sext i32 %1 to i64, !dbg !11242
  %arrayidx = getelementptr [5 x %struct.anon.96], [5 x %struct.anon.96]* @fc_cos_names, i64 0, i64 %idxprom, !dbg !11242
  %value = getelementptr inbounds %struct.anon.96, %struct.anon.96* %arrayidx, i32 0, i32 0, !dbg !11242
  %2 = load i32, i32* %value, align 16, !dbg !11242
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !11242
  %and = and i32 %2, %3, !dbg !11242
  %tobool = icmp ne i32 %and, 0, !dbg !11242
  br i1 %tobool, label %if.then, label %if.end, !dbg !11245

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !11246
  %5 = load i64, i64* %len, align 8, !dbg !11246
  %add.ptr = getelementptr i8, i8* %4, i64 %5, !dbg !11246
  %6 = load i8*, i8** %prefix, align 8, !dbg !11246
  %7 = load i32, i32* %i, align 4, !dbg !11246
  %idxprom2 = sext i32 %7 to i64, !dbg !11246
  %arrayidx3 = getelementptr [5 x %struct.anon.96], [5 x %struct.anon.96]* @fc_cos_names, i64 0, i64 %idxprom2, !dbg !11246
  %name = getelementptr inbounds %struct.anon.96, %struct.anon.96* %arrayidx3, i32 0, i32 1, !dbg !11246
  %8 = load i8*, i8** %name, align 8, !dbg !11246
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8* %6, i8* %8) #12, !dbg !11246
  %conv4 = sext i32 %call to i64, !dbg !11246
  %9 = load i64, i64* %len, align 8, !dbg !11246
  %add = add i64 %9, %conv4, !dbg !11246
  store i64 %add, i64* %len, align 8, !dbg !11246
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i8** %prefix, align 8, !dbg !11246
  br label %if.end, !dbg !11246

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11245

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !11240
  %inc = add i32 %10, 1, !dbg !11240
  store i32 %inc, i32* %i, align 4, !dbg !11240
  br label %for.cond, !dbg !11240, !llvm.loop !11248

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !11233
  %12 = load i64, i64* %len, align 8, !dbg !11233
  %add.ptr5 = getelementptr i8, i8* %11, i64 %12, !dbg !11233
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !11233
  %conv7 = sext i32 %call6 to i64, !dbg !11233
  %13 = load i64, i64* %len, align 8, !dbg !11233
  %add8 = add i64 %13, %conv7, !dbg !11233
  store i64 %add8, i64* %len, align 8, !dbg !11233
  %14 = load i64, i64* %len, align 8, !dbg !11233
  ret i64 %14, !dbg !11233
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_supported_fc4s(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11249 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11250, metadata !DIExpression()), !dbg !11251
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11252, metadata !DIExpression()), !dbg !11253
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11254, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11256, metadata !DIExpression()), !dbg !11257
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11258
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11258
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11258
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11258
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11257
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11259
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11260
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11260
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11260
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11260
  %supported_fc4s = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 4, !dbg !11260
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %supported_fc4s, i64 0, i64 0, !dbg !11260
  %call1 = call i32 @show_fc_fc4s(i8* %2, i8* %arraydecay) #12, !dbg !11261
  %conv = sext i32 %call1 to i64, !dbg !11262
  ret i64 %conv, !dbg !11263
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @show_fc_fc4s(i8* %buf, i8* %fc4_list) #0 !dbg !11264 {
entry:
  %buf.addr = alloca i8*, align 8
  %fc4_list.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11267, metadata !DIExpression()), !dbg !11268
  store i8* %fc4_list, i8** %fc4_list.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fc4_list.addr, metadata !11269, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11271, metadata !DIExpression()), !dbg !11272
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11273, metadata !DIExpression()), !dbg !11274
  store i32 0, i32* %len, align 4, !dbg !11274
  store i32 0, i32* %i, align 4, !dbg !11275
  br label %for.cond, !dbg !11277

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11278
  %cmp = icmp slt i32 %0, 32, !dbg !11280
  br i1 %cmp, label %for.body, label %for.end, !dbg !11281

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !11282
  %2 = load i32, i32* %len, align 4, !dbg !11283
  %idx.ext = sext i32 %2 to i64, !dbg !11284
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11284
  %3 = load i8*, i8** %fc4_list.addr, align 8, !dbg !11285
  %4 = load i8, i8* %3, align 1, !dbg !11286
  %conv = zext i8 %4 to i32, !dbg !11286
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0), i32 %conv) #12, !dbg !11287
  %5 = load i32, i32* %len, align 4, !dbg !11288
  %add = add i32 %5, %call, !dbg !11288
  store i32 %add, i32* %len, align 4, !dbg !11288
  br label %for.inc, !dbg !11289

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !11290
  %inc = add i32 %6, 1, !dbg !11290
  store i32 %inc, i32* %i, align 4, !dbg !11290
  %7 = load i8*, i8** %fc4_list.addr, align 8, !dbg !11291
  %incdec.ptr = getelementptr i8, i8* %7, i32 1, !dbg !11291
  store i8* %incdec.ptr, i8** %fc4_list.addr, align 8, !dbg !11291
  br label %for.cond, !dbg !11292, !llvm.loop !11293

for.end:                                          ; preds = %for.cond
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !11295
  %9 = load i32, i32* %len, align 4, !dbg !11296
  %idx.ext1 = sext i32 %9 to i64, !dbg !11297
  %add.ptr2 = getelementptr i8, i8* %8, i64 %idx.ext1, !dbg !11297
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !11298
  %10 = load i32, i32* %len, align 4, !dbg !11299
  %add4 = add i32 %10, %call3, !dbg !11299
  store i32 %add4, i32* %len, align 4, !dbg !11299
  %11 = load i32, i32* %len, align 4, !dbg !11300
  ret i32 %11, !dbg !11301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_supported_speeds(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11302 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11303, metadata !DIExpression()), !dbg !11304
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11309, metadata !DIExpression()), !dbg !11310
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11311
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11311
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11311
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11311
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11310
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11312
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !11312
  %3 = load i8*, i8** %shost_data, align 8, !dbg !11312
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !11312
  %supported_speeds = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %4, i32 0, i32 5, !dbg !11312
  %5 = load i32, i32* %supported_speeds, align 4, !dbg !11312
  %cmp = icmp eq i32 %5, 0, !dbg !11314
  br i1 %cmp, label %if.then, label %if.end, !dbg !11315

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !11316
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !11317
  %conv = sext i32 %call1 to i64, !dbg !11317
  store i64 %conv, i64* %retval, align 8, !dbg !11318
  br label %return, !dbg !11318

if.end:                                           ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11319
  %shost_data2 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 49, !dbg !11319
  %8 = load i8*, i8** %shost_data2, align 8, !dbg !11319
  %9 = bitcast i8* %8 to %struct.fc_host_attrs*, !dbg !11319
  %supported_speeds3 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %9, i32 0, i32 5, !dbg !11319
  %10 = load i32, i32* %supported_speeds3, align 4, !dbg !11319
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !11320
  %call4 = call i64 @get_fc_port_speed_names(i32 %10, i8* %11) #12, !dbg !11321
  store i64 %call4, i64* %retval, align 8, !dbg !11322
  br label %return, !dbg !11322

return:                                           ; preds = %if.end, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !11323
  ret i64 %12, !dbg !11323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_fc_port_speed_names(i32 %table_key, i8* %buf) #0 !dbg !11324 {
entry:
  %table_key.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %prefix = alloca i8*, align 8
  %len = alloca i64, align 8
  %i = alloca i32, align 4
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11327, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !11328, metadata !DIExpression()), !dbg !11326
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66, i64 0, i64 0), i8** %prefix, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata i64* %len, metadata !11329, metadata !DIExpression()), !dbg !11326
  store i64 0, i64* %len, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11330, metadata !DIExpression()), !dbg !11326
  store i32 0, i32* %i, align 4, !dbg !11331
  br label %for.cond, !dbg !11331

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11333
  %conv = sext i32 %0 to i64, !dbg !11333
  %cmp = icmp ult i64 %conv, 16, !dbg !11333
  br i1 %cmp, label %for.body, label %for.end, !dbg !11331

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11335
  %idxprom = sext i32 %1 to i64, !dbg !11335
  %arrayidx = getelementptr [16 x %struct.anon.97], [16 x %struct.anon.97]* @fc_port_speed_names, i64 0, i64 %idxprom, !dbg !11335
  %value = getelementptr inbounds %struct.anon.97, %struct.anon.97* %arrayidx, i32 0, i32 0, !dbg !11335
  %2 = load i32, i32* %value, align 16, !dbg !11335
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !11335
  %and = and i32 %2, %3, !dbg !11335
  %tobool = icmp ne i32 %and, 0, !dbg !11335
  br i1 %tobool, label %if.then, label %if.end, !dbg !11338

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !11339
  %5 = load i64, i64* %len, align 8, !dbg !11339
  %add.ptr = getelementptr i8, i8* %4, i64 %5, !dbg !11339
  %6 = load i8*, i8** %prefix, align 8, !dbg !11339
  %7 = load i32, i32* %i, align 4, !dbg !11339
  %idxprom2 = sext i32 %7 to i64, !dbg !11339
  %arrayidx3 = getelementptr [16 x %struct.anon.97], [16 x %struct.anon.97]* @fc_port_speed_names, i64 0, i64 %idxprom2, !dbg !11339
  %name = getelementptr inbounds %struct.anon.97, %struct.anon.97* %arrayidx3, i32 0, i32 1, !dbg !11339
  %8 = load i8*, i8** %name, align 8, !dbg !11339
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8* %6, i8* %8) #12, !dbg !11339
  %conv4 = sext i32 %call to i64, !dbg !11339
  %9 = load i64, i64* %len, align 8, !dbg !11339
  %add = add i64 %9, %conv4, !dbg !11339
  store i64 %add, i64* %len, align 8, !dbg !11339
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i8** %prefix, align 8, !dbg !11339
  br label %if.end, !dbg !11339

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11338

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !11333
  %inc = add i32 %10, 1, !dbg !11333
  store i32 %inc, i32* %i, align 4, !dbg !11333
  br label %for.cond, !dbg !11333, !llvm.loop !11341

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !11326
  %12 = load i64, i64* %len, align 8, !dbg !11326
  %add.ptr5 = getelementptr i8, i8* %11, i64 %12, !dbg !11326
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !11326
  %conv7 = sext i32 %call6 to i64, !dbg !11326
  %13 = load i64, i64* %len, align 8, !dbg !11326
  %add8 = add i64 %13, %conv7, !dbg !11326
  store i64 %add8, i64* %len, align 8, !dbg !11326
  %14 = load i64, i64* %len, align 8, !dbg !11326
  ret i64 %14, !dbg !11326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_maxframe_size(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11342 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11345, metadata !DIExpression()), !dbg !11344
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11346, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11347, metadata !DIExpression()), !dbg !11344
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11344
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11344
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11344
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11344
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11344
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11344
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11344
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11344
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11344
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11344
  %maxframe_size = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 6, !dbg !11344
  %6 = load i32, i32* %maxframe_size, align 8, !dbg !11344
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i32 %6) #12, !dbg !11344
  %conv = sext i32 %call1 to i64, !dbg !11344
  ret i64 %conv, !dbg !11344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_max_npiv_vports(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11348 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11349, metadata !DIExpression()), !dbg !11350
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11351, metadata !DIExpression()), !dbg !11350
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11352, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11353, metadata !DIExpression()), !dbg !11350
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11350
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11350
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11350
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11350
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11350
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11350
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11350
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11350
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11350
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11350
  %max_npiv_vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 7, !dbg !11350
  %6 = load i16, i16* %max_npiv_vports, align 4, !dbg !11350
  %conv = zext i16 %6 to i32, !dbg !11350
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i64 0, i64 0), i32 %conv) #12, !dbg !11350
  %conv2 = sext i32 %call1 to i64, !dbg !11350
  ret i64 %conv2, !dbg !11350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_npiv_vports_inuse(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11354 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11355, metadata !DIExpression()), !dbg !11356
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11357, metadata !DIExpression()), !dbg !11356
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11358, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11359, metadata !DIExpression()), !dbg !11356
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11356
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11356
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11356
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11356
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11356
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11356
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11356
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11356
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11356
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11356
  %npiv_vports_inuse = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 32, !dbg !11356
  %6 = load i16, i16* %npiv_vports_inuse, align 4, !dbg !11356
  %conv = zext i16 %6 to i32, !dbg !11356
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i64 0, i64 0), i32 %conv) #12, !dbg !11356
  %conv2 = sext i32 %call1 to i64, !dbg !11356
  ret i64 %conv2, !dbg !11356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_serial_number(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11360 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11361, metadata !DIExpression()), !dbg !11362
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11363, metadata !DIExpression()), !dbg !11362
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11364, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11365, metadata !DIExpression()), !dbg !11362
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11362
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11362
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11362
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11362
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11362
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11362
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11362
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11362
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11362
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11362
  %serial_number = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 8, !dbg !11362
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %serial_number, i64 0, i64 0, !dbg !11362
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11362
  %conv = sext i32 %call1 to i64, !dbg !11362
  ret i64 %conv, !dbg !11362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_manufacturer(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11366 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11367, metadata !DIExpression()), !dbg !11368
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11369, metadata !DIExpression()), !dbg !11368
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11370, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11371, metadata !DIExpression()), !dbg !11368
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11368
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11368
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11368
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11368
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11368
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11368
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11368
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11368
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11368
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11368
  %manufacturer = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 9, !dbg !11368
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %manufacturer, i64 0, i64 0, !dbg !11368
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11368
  %conv = sext i32 %call1 to i64, !dbg !11368
  ret i64 %conv, !dbg !11368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_model(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11372 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11373, metadata !DIExpression()), !dbg !11374
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11375, metadata !DIExpression()), !dbg !11374
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11376, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11377, metadata !DIExpression()), !dbg !11374
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11374
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11374
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11374
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11374
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11374
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11374
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11374
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11374
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11374
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11374
  %model = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 10, !dbg !11374
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %model, i64 0, i64 0, !dbg !11374
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 257, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11374
  %conv = sext i32 %call1 to i64, !dbg !11374
  ret i64 %conv, !dbg !11374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_model_description(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11378 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11379, metadata !DIExpression()), !dbg !11380
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11381, metadata !DIExpression()), !dbg !11380
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11382, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11383, metadata !DIExpression()), !dbg !11380
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11380
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11380
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11380
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11380
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11380
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11380
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11380
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11380
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11380
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11380
  %model_description = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 11, !dbg !11380
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %model_description, i64 0, i64 0, !dbg !11380
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 257, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11380
  %conv = sext i32 %call1 to i64, !dbg !11380
  ret i64 %conv, !dbg !11380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_hardware_version(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11384 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11387, metadata !DIExpression()), !dbg !11386
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11388, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11389, metadata !DIExpression()), !dbg !11386
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11386
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11386
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11386
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11386
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11386
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11386
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11386
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11386
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11386
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11386
  %hardware_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 12, !dbg !11386
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %hardware_version, i64 0, i64 0, !dbg !11386
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11386
  %conv = sext i32 %call1 to i64, !dbg !11386
  ret i64 %conv, !dbg !11386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_driver_version(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11390 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11393, metadata !DIExpression()), !dbg !11392
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11394, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11395, metadata !DIExpression()), !dbg !11392
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11392
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11392
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11392
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11392
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11392
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11392
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11392
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11392
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11392
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11392
  %driver_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 13, !dbg !11392
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %driver_version, i64 0, i64 0, !dbg !11392
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11392
  %conv = sext i32 %call1 to i64, !dbg !11392
  ret i64 %conv, !dbg !11392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_firmware_version(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11396 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11397, metadata !DIExpression()), !dbg !11398
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11399, metadata !DIExpression()), !dbg !11398
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11400, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11401, metadata !DIExpression()), !dbg !11398
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11398
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11398
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11398
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11398
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11398
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11398
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11398
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11398
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11398
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11398
  %firmware_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 14, !dbg !11398
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %firmware_version, i64 0, i64 0, !dbg !11398
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11398
  %conv = sext i32 %call1 to i64, !dbg !11398
  ret i64 %conv, !dbg !11398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_optionrom_version(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11402 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11403, metadata !DIExpression()), !dbg !11404
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11405, metadata !DIExpression()), !dbg !11404
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11406, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11407, metadata !DIExpression()), !dbg !11404
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11404
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11404
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11404
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11404
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11404
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11404
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11404
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11404
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11404
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11404
  %optionrom_version = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 15, !dbg !11404
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %optionrom_version, i64 0, i64 0, !dbg !11404
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11404
  %conv = sext i32 %call1 to i64, !dbg !11404
  ret i64 %conv, !dbg !11404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_port_id(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11408 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11409, metadata !DIExpression()), !dbg !11410
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11411, metadata !DIExpression()), !dbg !11410
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11412, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11413, metadata !DIExpression()), !dbg !11410
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11410
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11410
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11410
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11410
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11410
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11414, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11415, metadata !DIExpression()), !dbg !11417
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11417
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11417
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11417
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11417
  store i8* %4, i8** %__mptr, align 8, !dbg !11417
  br label %do.body, !dbg !11417

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11418

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11417
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11417
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11417
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11418
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11417
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11410
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11420
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11420
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11420
  %get_host_port_id = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 5, !dbg !11420
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_port_id, align 8, !dbg !11420
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11420
  br i1 %tobool, label %if.then, label %if.end, !dbg !11410

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11420
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11420
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11420
  %get_host_port_id2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 5, !dbg !11420
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_port_id2, align 8, !dbg !11420
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11420
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11420
  br label %if.end, !dbg !11420

if.end:                                           ; preds = %if.then, %do.end
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !11410
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11410
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 49, !dbg !11410
  %17 = load i8*, i8** %shost_data, align 8, !dbg !11410
  %18 = bitcast i8* %17 to %struct.fc_host_attrs*, !dbg !11410
  %port_id = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %18, i32 0, i32 16, !dbg !11410
  %19 = load i32, i32* %port_id, align 8, !dbg !11410
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i32 %19) #12, !dbg !11410
  %conv = sext i32 %call3 to i64, !dbg !11410
  ret i64 %conv, !dbg !11410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_port_type(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11422 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11423, metadata !DIExpression()), !dbg !11424
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11425, metadata !DIExpression()), !dbg !11424
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11426, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11427, metadata !DIExpression()), !dbg !11424
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11424
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11424
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11424
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11424
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11424
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11428, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11429, metadata !DIExpression()), !dbg !11431
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11431
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11431
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11431
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11431
  store i8* %4, i8** %__mptr, align 8, !dbg !11431
  br label %do.body, !dbg !11431

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11432

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11431
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11431
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11431
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11432
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11431
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11424
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11434, metadata !DIExpression()), !dbg !11424
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11435
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11435
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11435
  %get_host_port_type = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 6, !dbg !11435
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_port_type, align 8, !dbg !11435
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11435
  br i1 %tobool, label %if.then, label %if.end, !dbg !11424

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11435
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11435
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11435
  %get_host_port_type2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 6, !dbg !11435
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_port_type2, align 8, !dbg !11435
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11435
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11435
  br label %if.end, !dbg !11435

if.end:                                           ; preds = %if.then, %do.end
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11424
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 49, !dbg !11424
  %16 = load i8*, i8** %shost_data, align 8, !dbg !11424
  %17 = bitcast i8* %16 to %struct.fc_host_attrs*, !dbg !11424
  %port_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %17, i32 0, i32 17, !dbg !11424
  %18 = load i32, i32* %port_type, align 4, !dbg !11424
  %call3 = call i8* @get_fc_port_type_name(i32 %18) #12, !dbg !11424
  store i8* %call3, i8** %name, align 8, !dbg !11424
  %19 = load i8*, i8** %name, align 8, !dbg !11437
  %tobool4 = icmp ne i8* %19, null, !dbg !11437
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11424

if.then5:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !11437
  br label %return, !dbg !11437

if.end6:                                          ; preds = %if.end
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !11424
  %21 = load i8*, i8** %name, align 8, !dbg !11424
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %20, i64 50, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %21) #12, !dbg !11424
  %conv = sext i32 %call7 to i64, !dbg !11424
  store i64 %conv, i64* %retval, align 8, !dbg !11424
  br label %return, !dbg !11424

return:                                           ; preds = %if.end6, %if.then5
  %22 = load i64, i64* %retval, align 8, !dbg !11424
  ret i64 %22, !dbg !11424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_fc_port_type_name(i32 %table_key) #0 !dbg !11439 {
entry:
  %table_key.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %name = alloca i8*, align 8
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !11442, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11444, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11445, metadata !DIExpression()), !dbg !11443
  store i8* null, i8** %name, align 8, !dbg !11443
  store i32 0, i32* %i, align 4, !dbg !11446
  br label %for.cond, !dbg !11446

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11448
  %conv = sext i32 %0 to i64, !dbg !11448
  %cmp = icmp ult i64 %conv, 8, !dbg !11448
  br i1 %cmp, label %for.body, label %for.end, !dbg !11446

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11450
  %idxprom = sext i32 %1 to i64, !dbg !11450
  %arrayidx = getelementptr [8 x %struct.anon.98], [8 x %struct.anon.98]* @fc_port_type_names, i64 0, i64 %idxprom, !dbg !11450
  %value = getelementptr inbounds %struct.anon.98, %struct.anon.98* %arrayidx, i32 0, i32 0, !dbg !11450
  %2 = load i32, i32* %value, align 16, !dbg !11450
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !11450
  %cmp2 = icmp eq i32 %2, %3, !dbg !11450
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11453

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !11454
  %idxprom4 = sext i32 %4 to i64, !dbg !11454
  %arrayidx5 = getelementptr [8 x %struct.anon.98], [8 x %struct.anon.98]* @fc_port_type_names, i64 0, i64 %idxprom4, !dbg !11454
  %name6 = getelementptr inbounds %struct.anon.98, %struct.anon.98* %arrayidx5, i32 0, i32 1, !dbg !11454
  %5 = load i8*, i8** %name6, align 8, !dbg !11454
  store i8* %5, i8** %name, align 8, !dbg !11454
  br label %for.end, !dbg !11454

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11453

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !11448
  %inc = add i32 %6, 1, !dbg !11448
  store i32 %inc, i32* %i, align 4, !dbg !11448
  br label %for.cond, !dbg !11448, !llvm.loop !11456

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i8*, i8** %name, align 8, !dbg !11443
  ret i8* %7, !dbg !11443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_port_state(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11457 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11458, metadata !DIExpression()), !dbg !11459
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11460, metadata !DIExpression()), !dbg !11459
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11461, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11462, metadata !DIExpression()), !dbg !11459
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11459
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11459
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11459
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11459
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11459
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11463, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11464, metadata !DIExpression()), !dbg !11466
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11466
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11466
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11466
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11466
  store i8* %4, i8** %__mptr, align 8, !dbg !11466
  br label %do.body, !dbg !11466

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11467

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11466
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11466
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11466
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11467
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11466
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11459
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11469, metadata !DIExpression()), !dbg !11459
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11470
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11470
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11470
  %get_host_port_state = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 7, !dbg !11470
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_port_state, align 8, !dbg !11470
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11470
  br i1 %tobool, label %if.then, label %if.end, !dbg !11459

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11470
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11470
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11470
  %get_host_port_state2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 7, !dbg !11470
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_port_state2, align 8, !dbg !11470
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11470
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11470
  br label %if.end, !dbg !11470

if.end:                                           ; preds = %if.then, %do.end
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11459
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 49, !dbg !11459
  %16 = load i8*, i8** %shost_data, align 8, !dbg !11459
  %17 = bitcast i8* %16 to %struct.fc_host_attrs*, !dbg !11459
  %port_state = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %17, i32 0, i32 18, !dbg !11459
  %18 = load i32, i32* %port_state, align 8, !dbg !11459
  %call3 = call i8* @get_fc_port_state_name(i32 %18) #12, !dbg !11459
  store i8* %call3, i8** %name, align 8, !dbg !11459
  %19 = load i8*, i8** %name, align 8, !dbg !11472
  %tobool4 = icmp ne i8* %19, null, !dbg !11472
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11459

if.then5:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !11472
  br label %return, !dbg !11472

if.end6:                                          ; preds = %if.end
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !11459
  %21 = load i8*, i8** %name, align 8, !dbg !11459
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %20, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %21) #12, !dbg !11459
  %conv = sext i32 %call7 to i64, !dbg !11459
  store i64 %conv, i64* %retval, align 8, !dbg !11459
  br label %return, !dbg !11459

return:                                           ; preds = %if.end6, %if.then5
  %22 = load i64, i64* %retval, align 8, !dbg !11459
  ret i64 %22, !dbg !11459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_fc_port_state_name(i32 %table_key) #0 !dbg !11474 {
entry:
  %table_key.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %name = alloca i8*, align 8
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !11477, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11479, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11480, metadata !DIExpression()), !dbg !11478
  store i8* null, i8** %name, align 8, !dbg !11478
  store i32 0, i32* %i, align 4, !dbg !11481
  br label %for.cond, !dbg !11481

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11483
  %conv = sext i32 %0 to i64, !dbg !11483
  %cmp = icmp ult i64 %conv, 11, !dbg !11483
  br i1 %cmp, label %for.body, label %for.end, !dbg !11481

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11485
  %idxprom = sext i32 %1 to i64, !dbg !11485
  %arrayidx = getelementptr [11 x %struct.anon.99], [11 x %struct.anon.99]* @fc_port_state_names, i64 0, i64 %idxprom, !dbg !11485
  %value = getelementptr inbounds %struct.anon.99, %struct.anon.99* %arrayidx, i32 0, i32 0, !dbg !11485
  %2 = load i32, i32* %value, align 16, !dbg !11485
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !11485
  %cmp2 = icmp eq i32 %2, %3, !dbg !11485
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11488

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !11489
  %idxprom4 = sext i32 %4 to i64, !dbg !11489
  %arrayidx5 = getelementptr [11 x %struct.anon.99], [11 x %struct.anon.99]* @fc_port_state_names, i64 0, i64 %idxprom4, !dbg !11489
  %name6 = getelementptr inbounds %struct.anon.99, %struct.anon.99* %arrayidx5, i32 0, i32 1, !dbg !11489
  %5 = load i8*, i8** %name6, align 8, !dbg !11489
  store i8* %5, i8** %name, align 8, !dbg !11489
  br label %for.end, !dbg !11489

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11488

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !11483
  %inc = add i32 %6, 1, !dbg !11483
  store i32 %inc, i32* %i, align 4, !dbg !11483
  br label %for.cond, !dbg !11483, !llvm.loop !11491

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i8*, i8** %name, align 8, !dbg !11478
  ret i8* %7, !dbg !11478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_active_fc4s(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11492 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11493, metadata !DIExpression()), !dbg !11494
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11499, metadata !DIExpression()), !dbg !11500
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11501
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11501
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11501
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11501
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11500
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11502, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11504, metadata !DIExpression()), !dbg !11506
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11506
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11506
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11506
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11506
  store i8* %4, i8** %__mptr, align 8, !dbg !11506
  br label %do.body, !dbg !11506

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11507

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11506
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11506
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11506
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11507
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11506
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11503
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11509
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11511
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11511
  %get_host_active_fc4s = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 8, !dbg !11512
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_active_fc4s, align 8, !dbg !11512
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11509
  br i1 %tobool, label %if.then, label %if.end, !dbg !11513

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11514
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11515
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11515
  %get_host_active_fc4s2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 8, !dbg !11516
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_active_fc4s2, align 8, !dbg !11516
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11517
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11514
  br label %if.end, !dbg !11514

if.end:                                           ; preds = %if.then, %do.end
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !11518
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11519
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 49, !dbg !11519
  %17 = load i8*, i8** %shost_data, align 8, !dbg !11519
  %18 = bitcast i8* %17 to %struct.fc_host_attrs*, !dbg !11519
  %active_fc4s = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %18, i32 0, i32 19, !dbg !11519
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %active_fc4s, i64 0, i64 0, !dbg !11519
  %call3 = call i32 @show_fc_fc4s(i8* %15, i8* %arraydecay) #12, !dbg !11520
  %conv = sext i32 %call3 to i64, !dbg !11521
  ret i64 %conv, !dbg !11522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_speed(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11523 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11524, metadata !DIExpression()), !dbg !11525
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11526, metadata !DIExpression()), !dbg !11527
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11530, metadata !DIExpression()), !dbg !11531
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11532
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11532
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11532
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11532
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11531
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11533, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11535, metadata !DIExpression()), !dbg !11537
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11537
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11537
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11537
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11537
  store i8* %4, i8** %__mptr, align 8, !dbg !11537
  br label %do.body, !dbg !11537

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11538

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11537
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11537
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11537
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11538
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11537
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11534
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11540
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11542
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11542
  %get_host_speed = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 9, !dbg !11543
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_speed, align 8, !dbg !11543
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11540
  br i1 %tobool, label %if.then, label %if.end, !dbg !11544

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11545
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11546
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11546
  %get_host_speed2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 9, !dbg !11547
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_speed2, align 8, !dbg !11547
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11548
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11545
  br label %if.end, !dbg !11545

if.end:                                           ; preds = %if.then, %do.end
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11549
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 49, !dbg !11549
  %16 = load i8*, i8** %shost_data, align 8, !dbg !11549
  %17 = bitcast i8* %16 to %struct.fc_host_attrs*, !dbg !11549
  %speed = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %17, i32 0, i32 20, !dbg !11549
  %18 = load i32, i32* %speed, align 4, !dbg !11549
  %cmp = icmp eq i32 %18, 0, !dbg !11551
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !11552

if.then3:                                         ; preds = %if.end
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !11553
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %19, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !11554
  %conv = sext i32 %call4 to i64, !dbg !11554
  store i64 %conv, i64* %retval, align 8, !dbg !11555
  br label %return, !dbg !11555

if.end5:                                          ; preds = %if.end
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11556
  %shost_data6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 49, !dbg !11556
  %21 = load i8*, i8** %shost_data6, align 8, !dbg !11556
  %22 = bitcast i8* %21 to %struct.fc_host_attrs*, !dbg !11556
  %speed7 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %22, i32 0, i32 20, !dbg !11556
  %23 = load i32, i32* %speed7, align 4, !dbg !11556
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !11557
  %call8 = call i64 @get_fc_port_speed_names(i32 %23, i8* %24) #12, !dbg !11558
  store i64 %call8, i64* %retval, align 8, !dbg !11559
  br label %return, !dbg !11559

return:                                           ; preds = %if.end5, %if.then3
  %25 = load i64, i64* %retval, align 8, !dbg !11560
  ret i64 %25, !dbg !11560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_fabric_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11561 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11562, metadata !DIExpression()), !dbg !11563
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11564, metadata !DIExpression()), !dbg !11563
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11565, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11566, metadata !DIExpression()), !dbg !11563
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11563
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11563
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11563
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11563
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11563
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11567, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11568, metadata !DIExpression()), !dbg !11570
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11570
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11570
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11570
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11570
  store i8* %4, i8** %__mptr, align 8, !dbg !11570
  br label %do.body, !dbg !11570

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11571

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11570
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11570
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11570
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11571
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11570
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11563
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11573
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11573
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11573
  %get_host_fabric_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 10, !dbg !11573
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_fabric_name, align 8, !dbg !11573
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11573
  br i1 %tobool, label %if.then, label %if.end, !dbg !11563

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11573
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11573
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11573
  %get_host_fabric_name2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 10, !dbg !11573
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_fabric_name2, align 8, !dbg !11573
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11573
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11573
  br label %if.end, !dbg !11573

if.end:                                           ; preds = %if.then, %do.end
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !11563
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11563
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 49, !dbg !11563
  %17 = load i8*, i8** %shost_data, align 8, !dbg !11563
  %18 = bitcast i8* %17 to %struct.fc_host_attrs*, !dbg !11563
  %fabric_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %18, i32 0, i32 21, !dbg !11563
  %19 = load i64, i64* %fabric_name, align 8, !dbg !11563
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %19) #12, !dbg !11563
  %conv = sext i32 %call3 to i64, !dbg !11563
  ret i64 %conv, !dbg !11563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_symbolic_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11575 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11576, metadata !DIExpression()), !dbg !11577
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11578, metadata !DIExpression()), !dbg !11577
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11579, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11580, metadata !DIExpression()), !dbg !11577
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11577
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11577
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11577
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11577
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11577
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11581, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11582, metadata !DIExpression()), !dbg !11584
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11584
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11584
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11584
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11584
  store i8* %4, i8** %__mptr, align 8, !dbg !11584
  br label %do.body, !dbg !11584

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11585

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11584
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11584
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11584
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11585
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11584
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11577
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11587
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11587
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11587
  %get_host_symbolic_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 11, !dbg !11587
  %10 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_symbolic_name, align 8, !dbg !11587
  %tobool = icmp ne void (%struct.Scsi_Host*)* %10, null, !dbg !11587
  br i1 %tobool, label %if.then, label %if.end, !dbg !11577

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11587
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11587
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11587
  %get_host_symbolic_name2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 11, !dbg !11587
  %13 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %get_host_symbolic_name2, align 8, !dbg !11587
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11587
  call void %13(%struct.Scsi_Host* %14) #12, !dbg !11587
  br label %if.end, !dbg !11587

if.end:                                           ; preds = %if.then, %do.end
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !11577
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11577
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 49, !dbg !11577
  %17 = load i8*, i8** %shost_data, align 8, !dbg !11577
  %18 = bitcast i8* %17 to %struct.fc_host_attrs*, !dbg !11577
  %symbolic_name = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %18, i32 0, i32 22, !dbg !11577
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %symbolic_name, i64 0, i64 0, !dbg !11577
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 257, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11577
  %conv = sext i32 %call3 to i64, !dbg !11577
  ret i64 %conv, !dbg !11577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_system_hostname(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11589 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11590, metadata !DIExpression()), !dbg !11591
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11592, metadata !DIExpression()), !dbg !11591
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11593, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11594, metadata !DIExpression()), !dbg !11591
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11591
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11591
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11591
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11591
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11591
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11591
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11591
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11591
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11591
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11591
  %system_hostname = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 23, !dbg !11591
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %system_hostname, i64 0, i64 0, !dbg !11591
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 257, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11591
  %conv = sext i32 %call1 to i64, !dbg !11591
  ret i64 %conv, !dbg !11591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_host_system_hostname(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !11595 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %cnt = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11596, metadata !DIExpression()), !dbg !11597
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11598, metadata !DIExpression()), !dbg !11597
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11599, metadata !DIExpression()), !dbg !11597
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11600, metadata !DIExpression()), !dbg !11597
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11601, metadata !DIExpression()), !dbg !11597
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11597
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11597
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11597
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11597
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11597
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11602, metadata !DIExpression()), !dbg !11597
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11603, metadata !DIExpression()), !dbg !11605
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11605
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11605
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11605
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11605
  store i8* %4, i8** %__mptr, align 8, !dbg !11605
  br label %do.body, !dbg !11605

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11606

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11605
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11605
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11605
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11606
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11605
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11597
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !11608, metadata !DIExpression()), !dbg !11597
  %8 = load i64, i64* %count.addr, align 8, !dbg !11597
  %conv = trunc i64 %8 to i32, !dbg !11597
  store i32 %conv, i32* %cnt, align 4, !dbg !11597
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !11609
  %10 = load i32, i32* %cnt, align 4, !dbg !11609
  %sub = sub i32 %10, 1, !dbg !11609
  %idxprom = zext i32 %sub to i64, !dbg !11609
  %arrayidx = getelementptr i8, i8* %9, i64 %idxprom, !dbg !11609
  %11 = load i8, i8* %arrayidx, align 1, !dbg !11609
  %conv1 = sext i8 %11 to i32, !dbg !11609
  %cmp = icmp eq i32 %conv1, 10, !dbg !11609
  br i1 %cmp, label %if.then, label %if.end, !dbg !11597

if.then:                                          ; preds = %do.end
  %12 = load i32, i32* %cnt, align 4, !dbg !11609
  %dec = add i32 %12, -1, !dbg !11609
  store i32 %dec, i32* %cnt, align 4, !dbg !11609
  br label %if.end, !dbg !11609

if.end:                                           ; preds = %if.then, %do.end
  %13 = load i32, i32* %cnt, align 4, !dbg !11611
  %cmp3 = icmp ugt i32 %13, 255, !dbg !11611
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11597

if.then5:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !11611
  br label %return, !dbg !11611

if.end6:                                          ; preds = %if.end
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11597
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 49, !dbg !11597
  %15 = load i8*, i8** %shost_data, align 8, !dbg !11597
  %16 = bitcast i8* %15 to %struct.fc_host_attrs*, !dbg !11597
  %system_hostname = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %16, i32 0, i32 23, !dbg !11597
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %system_hostname, i64 0, i64 0, !dbg !11597
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !11597
  %18 = load i32, i32* %cnt, align 4, !dbg !11597
  %conv7 = zext i32 %18 to i64, !dbg !11597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %17, i64 %conv7, i1 false), !dbg !11597
  %19 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11597
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %19, i32 0, i32 1, !dbg !11597
  %20 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11597
  %set_host_system_hostname = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %20, i32 0, i32 12, !dbg !11597
  %21 = load void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*)** %set_host_system_hostname, align 8, !dbg !11597
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11597
  call void %21(%struct.Scsi_Host* %22) #12, !dbg !11597
  %23 = load i64, i64* %count.addr, align 8, !dbg !11597
  store i64 %23, i64* %retval, align 8, !dbg !11597
  br label %return, !dbg !11597

return:                                           ; preds = %if.end6, %if.then5
  %24 = load i64, i64* %retval, align 8, !dbg !11597
  ret i64 %24, !dbg !11597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_host_dev_loss_tmo(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11613 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11614, metadata !DIExpression()), !dbg !11615
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11616, metadata !DIExpression()), !dbg !11615
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11617, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11618, metadata !DIExpression()), !dbg !11615
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11615
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11615
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11615
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11615
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11615
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11615
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11615
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 49, !dbg !11615
  %4 = load i8*, i8** %shost_data, align 8, !dbg !11615
  %5 = bitcast i8* %4 to %struct.fc_host_attrs*, !dbg !11615
  %dev_loss_tmo = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %5, i32 0, i32 24, !dbg !11615
  %6 = load i32, i32* %dev_loss_tmo, align 8, !dbg !11615
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0), i32 %6) #12, !dbg !11615
  %conv = sext i32 %call1 to i64, !dbg !11615
  ret i64 %conv, !dbg !11615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_private_host_dev_loss_tmo(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !11619 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !7624, metadata !DIExpression()), !dbg !11620
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !11622
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !11623
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %val = alloca i64, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp26 = alloca %struct.fc_rport*, align 8
  %__mptr31 = alloca i8*, align 8
  %tmp36 = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11636, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11638, metadata !DIExpression()), !dbg !11639
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11640
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11640
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11640
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11640
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11639
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !11641, metadata !DIExpression()), !dbg !11642
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11643
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !11643
  %3 = load i8*, i8** %shost_data, align 8, !dbg !11643
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !11643
  store %struct.fc_host_attrs* %4, %struct.fc_host_attrs** %fc_host, align 8, !dbg !11642
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !11644, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11646, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11650, metadata !DIExpression()), !dbg !11651
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !11652
  %call1 = call i32 @fc_str_to_dev_loss(i8* %5, i64* %val) #12, !dbg !11653
  store i32 %call1, i32* %rc, align 4, !dbg !11654
  %6 = load i32, i32* %rc, align 4, !dbg !11655
  %tobool = icmp ne i32 %6, 0, !dbg !11655
  br i1 %tobool, label %if.then, label %if.end, !dbg !11657

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %rc, align 4, !dbg !11658
  %conv = sext i32 %7 to i64, !dbg !11658
  store i64 %conv, i64* %retval, align 8, !dbg !11659
  br label %return, !dbg !11659

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %val, align 8, !dbg !11660
  %conv2 = trunc i64 %8 to i32, !dbg !11660
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11661
  %shost_data3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 49, !dbg !11661
  %10 = load i8*, i8** %shost_data3, align 8, !dbg !11661
  %11 = bitcast i8* %10 to %struct.fc_host_attrs*, !dbg !11661
  %dev_loss_tmo = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %11, i32 0, i32 24, !dbg !11661
  store i32 %conv2, i32* %dev_loss_tmo, align 8, !dbg !11662
  br label %do.body, !dbg !11663

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !11664

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11665, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11668, metadata !DIExpression()), !dbg !11667
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11667
  %conv5 = zext i1 %cmp to i32, !dbg !11667
  store i32 1, i32* %tmp, align 4, !dbg !11667
  %12 = load i32, i32* %tmp, align 4, !dbg !11667
  br label %do.body6, !dbg !11669

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !11670

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !11671

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !11673, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !11677, metadata !DIExpression()), !dbg !11676
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !11676
  %conv12 = zext i1 %cmp11 to i32, !dbg !11676
  store i32 1, i32* %tmp13, align 4, !dbg !11676
  %13 = load i32, i32* %tmp13, align 4, !dbg !11676
  %call14 = call i64 @arch_local_irq_save() #12, !dbg !11678
  store i64 %call14, i64* %flags, align 8, !dbg !11678
  br label %do.end, !dbg !11678

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !11671

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !11670

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11679, !srcloc !11680
  br label %do.body17, !dbg !11679

do.body17:                                        ; preds = %do.body16
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11681
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 4, !dbg !11681
  %15 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !11681
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11682
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !11683
  %rlock.i = bitcast %union.anon.0* %17 to %struct.raw_spinlock*, !dbg !11683
  br label %do.end19, !dbg !11681

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !11679

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11670

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11669

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !11664

do.end23:                                         ; preds = %do.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11684, metadata !DIExpression()), !dbg !11687
  %18 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !11687
  %rports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %18, i32 0, i32 26, !dbg !11687
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rports, i32 0, i32 0, !dbg !11687
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11687
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !11687
  store i8* %20, i8** %__mptr, align 8, !dbg !11687
  br label %do.body24, !dbg !11687

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !11688

do.end25:                                         ; preds = %do.body24
  %21 = load i8*, i8** %__mptr, align 8, !dbg !11687
  %add.ptr = getelementptr i8, i8* %21, i64 -80, !dbg !11687
  %22 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !11687
  store %struct.fc_rport* %22, %struct.fc_rport** %tmp26, align 8, !dbg !11688
  %23 = load %struct.fc_rport*, %struct.fc_rport** %tmp26, align 8, !dbg !11687
  store %struct.fc_rport* %23, %struct.fc_rport** %rport, align 8, !dbg !11690
  br label %for.cond, !dbg !11690

for.cond:                                         ; preds = %do.end35, %do.end25
  %24 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11691
  %peers = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %24, i32 0, i32 14, !dbg !11691
  %25 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !11691
  %rports27 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %25, i32 0, i32 26, !dbg !11691
  %cmp28 = icmp eq %struct.list_head* %peers, %rports27, !dbg !11691
  %lnot = xor i1 %cmp28, true, !dbg !11691
  br i1 %lnot, label %for.body, label %for.end, !dbg !11690

for.body:                                         ; preds = %for.cond
  %26 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11693
  %27 = load i64, i64* %val, align 8, !dbg !11694
  %call30 = call i32 @fc_rport_set_dev_loss_tmo(%struct.fc_rport* %26, i64 %27) #12, !dbg !11695
  br label %for.inc, !dbg !11695

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !11696, metadata !DIExpression()), !dbg !11698
  %28 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11698
  %peers32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %28, i32 0, i32 14, !dbg !11698
  %next33 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers32, i32 0, i32 0, !dbg !11698
  %29 = load %struct.list_head*, %struct.list_head** %next33, align 8, !dbg !11698
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !11698
  store i8* %30, i8** %__mptr31, align 8, !dbg !11698
  br label %do.body34, !dbg !11698

do.body34:                                        ; preds = %for.inc
  br label %do.end35, !dbg !11699

do.end35:                                         ; preds = %do.body34
  %31 = load i8*, i8** %__mptr31, align 8, !dbg !11698
  %add.ptr37 = getelementptr i8, i8* %31, i64 -80, !dbg !11698
  %32 = bitcast i8* %add.ptr37 to %struct.fc_rport*, !dbg !11698
  store %struct.fc_rport* %32, %struct.fc_rport** %tmp36, align 8, !dbg !11699
  %33 = load %struct.fc_rport*, %struct.fc_rport** %tmp36, align 8, !dbg !11698
  store %struct.fc_rport* %33, %struct.fc_rport** %rport, align 8, !dbg !11691
  br label %for.cond, !dbg !11691, !llvm.loop !11701

for.end:                                          ; preds = %for.cond
  %34 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11703
  %host_lock38 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %34, i32 0, i32 4, !dbg !11704
  %35 = load %struct.spinlock*, %struct.spinlock** %host_lock38, align 8, !dbg !11704
  %36 = load i64, i64* %flags, align 8, !dbg !11705
  store %struct.spinlock* %35, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !11706
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !11706
  store i32 1, i32* %tmp.i, align 4, !dbg !11706
  %37 = load i32, i32* %tmp.i, align 4, !dbg !11706
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !11707
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !11707
  store i32 1, i32* %tmp8.i, align 4, !dbg !11707
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !11707
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !11708
  call void @arch_local_irq_restore(i64 %39) #11, !dbg !11708
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11709, !srcloc !7797
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !11710
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !11710
  %rlock.i40 = bitcast %union.anon.0* %41 to %struct.raw_spinlock*, !dbg !11710
  %42 = load i64, i64* %count.addr, align 8, !dbg !11711
  store i64 %42, i64* %retval, align 8, !dbg !11712
  br label %return, !dbg !11712

return:                                           ; preds = %for.end, %if.then
  %43 = load i64, i64* %retval, align 8, !dbg !11713
  ret i64 %43, !dbg !11713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_str_to_dev_loss(i8* %buf, i64* %val) #0 !dbg !11714 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i64*, align 8
  %cp = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11718, metadata !DIExpression()), !dbg !11719
  store i64* %val, i64** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !11720, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !11722, metadata !DIExpression()), !dbg !11723
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11724
  %call = call i64 @simple_strtoul(i8* %0, i8** %cp, i32 0) #12, !dbg !11725
  %1 = load i64*, i64** %val.addr, align 8, !dbg !11726
  store i64 %call, i64* %1, align 8, !dbg !11727
  %2 = load i8*, i8** %cp, align 8, !dbg !11728
  %3 = load i8, i8* %2, align 1, !dbg !11730
  %conv = sext i8 %3 to i32, !dbg !11730
  %tobool = icmp ne i32 %conv, 0, !dbg !11730
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11731

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %cp, align 8, !dbg !11732
  %5 = load i8, i8* %4, align 1, !dbg !11733
  %conv1 = sext i8 %5 to i32, !dbg !11733
  %cmp = icmp ne i32 %conv1, 10, !dbg !11734
  br i1 %cmp, label %if.then, label %if.end, !dbg !11735

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11736
  br label %return, !dbg !11736

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load i64*, i64** %val.addr, align 8, !dbg !11737
  %7 = load i64, i64* %6, align 8, !dbg !11739
  %cmp3 = icmp ugt i64 %7, 4294967295, !dbg !11740
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11741

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11742
  br label %return, !dbg !11742

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11743
  br label %return, !dbg !11743

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !11744
  ret i32 %8, !dbg !11744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_rport_set_dev_loss_tmo(%struct.fc_rport* %rport, i64 %val) #0 !dbg !11745 {
entry:
  %retval = alloca i32, align 4
  %rport.addr = alloca %struct.fc_rport*, align 8
  %val.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !11748, metadata !DIExpression()), !dbg !11749
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11752, metadata !DIExpression()), !dbg !11753
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !11754
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 15, !dbg !11754
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !11754
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11754
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11754
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11753
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11755, metadata !DIExpression()), !dbg !11756
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11757, metadata !DIExpression()), !dbg !11759
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11759
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11759
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11759
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11759
  store i8* %4, i8** %__mptr, align 8, !dbg !11759
  br label %do.body, !dbg !11759

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11760

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11759
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11759
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11759
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11760
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11759
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11756
  %8 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !11762
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %8, i32 0, i32 7, !dbg !11764
  %9 = load i32, i32* %port_state, align 8, !dbg !11764
  %cmp = icmp eq i32 %9, 4, !dbg !11765
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11766

lor.lhs.false:                                    ; preds = %do.end
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !11767
  %port_state1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 7, !dbg !11768
  %11 = load i32, i32* %port_state1, align 8, !dbg !11768
  %cmp2 = icmp eq i32 %11, 10, !dbg !11769
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !11770

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %12 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !11771
  %port_state4 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %12, i32 0, i32 7, !dbg !11772
  %13 = load i32, i32* %port_state4, align 8, !dbg !11772
  %cmp5 = icmp eq i32 %13, 1, !dbg !11773
  br i1 %cmp5, label %if.then, label %if.end, !dbg !11774

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %do.end
  store i32 -16, i32* %retval, align 4, !dbg !11775
  br label %return, !dbg !11775

if.end:                                           ; preds = %lor.lhs.false3
  %14 = load i64, i64* %val.addr, align 8, !dbg !11776
  %cmp6 = icmp ugt i64 %14, 4294967295, !dbg !11778
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11779

if.then7:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11780
  br label %return, !dbg !11780

if.end8:                                          ; preds = %if.end
  %15 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !11781
  %fast_io_fail_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %15, i32 0, i32 9, !dbg !11783
  %16 = load i32, i32* %fast_io_fail_tmo, align 8, !dbg !11783
  %cmp9 = icmp eq i32 %16, -1, !dbg !11784
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !11785

land.lhs.true:                                    ; preds = %if.end8
  %17 = load i64, i64* %val.addr, align 8, !dbg !11786
  %cmp10 = icmp ugt i64 %17, 600, !dbg !11787
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11788

if.then11:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11789
  br label %return, !dbg !11789

if.end12:                                         ; preds = %land.lhs.true, %if.end8
  %18 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11790
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %18, i32 0, i32 1, !dbg !11791
  %19 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11791
  %set_rport_dev_loss_tmo = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %19, i32 0, i32 1, !dbg !11792
  %20 = load void (%struct.fc_rport*, i32)*, void (%struct.fc_rport*, i32)** %set_rport_dev_loss_tmo, align 8, !dbg !11792
  %21 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !11793
  %22 = load i64, i64* %val.addr, align 8, !dbg !11794
  %conv = trunc i64 %22 to i32, !dbg !11794
  call void %20(%struct.fc_rport* %21, i32 %conv) #12, !dbg !11790
  store i32 0, i32* %retval, align 4, !dbg !11795
  br label %return, !dbg !11795

return:                                           ; preds = %if.end12, %if.then11, %if.then7, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !11796
  ret i32 %23, !dbg !11796
}

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_private_host_tgtid_bind_type(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11797 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11804, metadata !DIExpression()), !dbg !11805
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11806
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11806
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11806
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11806
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11805
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11807, metadata !DIExpression()), !dbg !11808
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11809
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !11809
  %3 = load i8*, i8** %shost_data, align 8, !dbg !11809
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !11809
  %tgtid_bind_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %4, i32 0, i32 25, !dbg !11809
  %5 = load i32, i32* %tgtid_bind_type, align 4, !dbg !11809
  %call1 = call i8* @get_fc_tgtid_bind_type_name(i32 %5) #12, !dbg !11810
  store i8* %call1, i8** %name, align 8, !dbg !11811
  %6 = load i8*, i8** %name, align 8, !dbg !11812
  %tobool = icmp ne i8* %6, null, !dbg !11812
  br i1 %tobool, label %if.end, label %if.then, !dbg !11814

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !11815
  br label %return, !dbg !11815

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !11816
  %8 = load i8*, i8** %name, align 8, !dbg !11817
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %8) #12, !dbg !11818
  %conv = sext i32 %call2 to i64, !dbg !11818
  store i64 %conv, i64* %retval, align 8, !dbg !11819
  br label %return, !dbg !11819

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !11820
  ret i64 %9, !dbg !11820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_private_host_tgtid_bind_type(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !11821 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !7624, metadata !DIExpression()), !dbg !11822
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !11826
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !11827
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %val = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp30 = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11840, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11842, metadata !DIExpression()), !dbg !11843
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11844
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11844
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11844
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11844
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11843
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !11845, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11849, metadata !DIExpression()), !dbg !11850
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11851
  %call1 = call i32 @get_fc_tgtid_bind_type_match(i8* %2, i32* %val) #12, !dbg !11853
  %tobool = icmp ne i32 %call1, 0, !dbg !11853
  br i1 %tobool, label %if.then, label %if.end, !dbg !11854

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !11855
  br label %return, !dbg !11855

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %val, align 4, !dbg !11856
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11857
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 49, !dbg !11857
  %5 = load i8*, i8** %shost_data, align 8, !dbg !11857
  %6 = bitcast i8* %5 to %struct.fc_host_attrs*, !dbg !11857
  %tgtid_bind_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %6, i32 0, i32 25, !dbg !11857
  %7 = load i32, i32* %tgtid_bind_type, align 4, !dbg !11857
  %cmp = icmp ne i32 %3, %7, !dbg !11858
  br i1 %cmp, label %if.then2, label %if.end33, !dbg !11859

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !11860

do.body:                                          ; preds = %if.then2
  br label %do.body3, !dbg !11861

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11862, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11865, metadata !DIExpression()), !dbg !11864
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !11864
  %conv = zext i1 %cmp4 to i32, !dbg !11864
  store i32 1, i32* %tmp, align 4, !dbg !11864
  %8 = load i32, i32* %tmp, align 4, !dbg !11864
  br label %do.body5, !dbg !11866

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !11867

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11868

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11870, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11874, metadata !DIExpression()), !dbg !11873
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11873
  %conv11 = zext i1 %cmp10 to i32, !dbg !11873
  store i32 1, i32* %tmp12, align 4, !dbg !11873
  %9 = load i32, i32* %tmp12, align 4, !dbg !11873
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !11875
  store i64 %call13, i64* %flags, align 8, !dbg !11875
  br label %do.end, !dbg !11875

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !11868

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11867

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11876, !srcloc !11877
  br label %do.body16, !dbg !11876

do.body16:                                        ; preds = %do.body15
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11878
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 4, !dbg !11878
  %11 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !11878
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11879
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !11880
  %rlock.i = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !11880
  br label %do.end18, !dbg !11878

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11876

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11867

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11866

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11861

do.end22:                                         ; preds = %do.end21
  br label %while.cond, !dbg !11881

while.cond:                                       ; preds = %do.end29, %do.end22
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11882
  %shost_data23 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 49, !dbg !11882
  %15 = load i8*, i8** %shost_data23, align 8, !dbg !11882
  %16 = bitcast i8* %15 to %struct.fc_host_attrs*, !dbg !11882
  %rport_bindings = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %16, i32 0, i32 27, !dbg !11882
  %call24 = call i32 @list_empty(%struct.list_head* %rport_bindings) #12, !dbg !11883
  %tobool25 = icmp ne i32 %call24, 0, !dbg !11884
  %lnot = xor i1 %tobool25, true, !dbg !11884
  br i1 %lnot, label %while.body, label %while.end, !dbg !11881

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11885, metadata !DIExpression()), !dbg !11888
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11888
  %shost_data26 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %17, i32 0, i32 49, !dbg !11888
  %18 = load i8*, i8** %shost_data26, align 8, !dbg !11888
  %19 = bitcast i8* %18 to %struct.fc_host_attrs*, !dbg !11888
  %rport_bindings27 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %19, i32 0, i32 27, !dbg !11888
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rport_bindings27, i32 0, i32 0, !dbg !11888
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11888
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !11888
  store i8* %21, i8** %__mptr, align 8, !dbg !11888
  br label %do.body28, !dbg !11888

do.body28:                                        ; preds = %while.body
  br label %do.end29, !dbg !11889

do.end29:                                         ; preds = %do.body28
  %22 = load i8*, i8** %__mptr, align 8, !dbg !11888
  %add.ptr = getelementptr i8, i8* %22, i64 -80, !dbg !11888
  %23 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !11888
  store %struct.fc_rport* %23, %struct.fc_rport** %tmp30, align 8, !dbg !11889
  %24 = load %struct.fc_rport*, %struct.fc_rport** %tmp30, align 8, !dbg !11888
  store %struct.fc_rport* %24, %struct.fc_rport** %rport, align 8, !dbg !11891
  %25 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11892
  %peers = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %25, i32 0, i32 14, !dbg !11893
  call void @list_del(%struct.list_head* %peers) #12, !dbg !11894
  %26 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11895
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %26, i32 0, i32 7, !dbg !11896
  store i32 10, i32* %port_state, align 8, !dbg !11897
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11898
  %28 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !11899
  %rport_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %28, i32 0, i32 20, !dbg !11900
  %call31 = call i32 @fc_queue_work(%struct.Scsi_Host* %27, %struct.work_struct* %rport_delete_work) #12, !dbg !11901
  br label %while.cond, !dbg !11881, !llvm.loop !11902

while.end:                                        ; preds = %while.cond
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11904
  %host_lock32 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 4, !dbg !11905
  %30 = load %struct.spinlock*, %struct.spinlock** %host_lock32, align 8, !dbg !11905
  %31 = load i64, i64* %flags, align 8, !dbg !11906
  store %struct.spinlock* %30, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !11907
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !11907
  store i32 1, i32* %tmp.i, align 4, !dbg !11907
  %32 = load i32, i32* %tmp.i, align 4, !dbg !11907
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !11908
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !11908
  store i32 1, i32* %tmp8.i, align 4, !dbg !11908
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !11908
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !11909
  call void @arch_local_irq_restore(i64 %34) #11, !dbg !11909
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11910, !srcloc !7797
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !11911
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !11911
  %rlock.i37 = bitcast %union.anon.0* %36 to %struct.raw_spinlock*, !dbg !11911
  br label %if.end33, !dbg !11912

if.end33:                                         ; preds = %while.end, %if.end
  %37 = load i32, i32* %val, align 4, !dbg !11913
  %38 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11914
  %shost_data34 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %38, i32 0, i32 49, !dbg !11914
  %39 = load i8*, i8** %shost_data34, align 8, !dbg !11914
  %40 = bitcast i8* %39 to %struct.fc_host_attrs*, !dbg !11914
  %tgtid_bind_type35 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %40, i32 0, i32 25, !dbg !11914
  store i32 %37, i32* %tgtid_bind_type35, align 4, !dbg !11915
  %41 = load i64, i64* %count.addr, align 8, !dbg !11916
  store i64 %41, i64* %retval, align 8, !dbg !11917
  br label %return, !dbg !11917

return:                                           ; preds = %if.end33, %if.then
  %42 = load i64, i64* %retval, align 8, !dbg !11918
  ret i64 %42, !dbg !11918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_fc_tgtid_bind_type_name(i32 %table_key) #0 !dbg !11919 {
entry:
  %table_key.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %name = alloca i8*, align 8
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !11922, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11924, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11925, metadata !DIExpression()), !dbg !11923
  store i8* null, i8** %name, align 8, !dbg !11923
  store i32 0, i32* %i, align 4, !dbg !11926
  br label %for.cond, !dbg !11926

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11928
  %conv = sext i32 %0 to i64, !dbg !11928
  %cmp = icmp ult i64 %conv, 4, !dbg !11928
  br i1 %cmp, label %for.body, label %for.end, !dbg !11926

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11930
  %idxprom = sext i32 %1 to i64, !dbg !11930
  %arrayidx = getelementptr [4 x %struct.anon.100], [4 x %struct.anon.100]* @fc_tgtid_binding_type_names, i64 0, i64 %idxprom, !dbg !11930
  %value = getelementptr inbounds %struct.anon.100, %struct.anon.100* %arrayidx, i32 0, i32 0, !dbg !11930
  %2 = load i32, i32* %value, align 8, !dbg !11930
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !11930
  %cmp2 = icmp eq i32 %2, %3, !dbg !11930
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11933

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !11934
  %idxprom4 = sext i32 %4 to i64, !dbg !11934
  %arrayidx5 = getelementptr [4 x %struct.anon.100], [4 x %struct.anon.100]* @fc_tgtid_binding_type_names, i64 0, i64 %idxprom4, !dbg !11934
  %name6 = getelementptr inbounds %struct.anon.100, %struct.anon.100* %arrayidx5, i32 0, i32 1, !dbg !11934
  %5 = load i8*, i8** %name6, align 8, !dbg !11934
  store i8* %5, i8** %name, align 8, !dbg !11934
  br label %for.end, !dbg !11934

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11933

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !11928
  %inc = add i32 %6, 1, !dbg !11928
  store i32 %inc, i32* %i, align 4, !dbg !11928
  br label %for.cond, !dbg !11928, !llvm.loop !11936

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i8*, i8** %name, align 8, !dbg !11923
  ret i8* %7, !dbg !11923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_fc_tgtid_bind_type_match(i8* %table_key, i32* %value) #0 !dbg !11937 {
entry:
  %retval = alloca i32, align 4
  %table_key.addr = alloca i8*, align 8
  %value.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store i8* %table_key, i8** %table_key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %table_key.addr, metadata !11941, metadata !DIExpression()), !dbg !11942
  store i32* %value, i32** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %value.addr, metadata !11943, metadata !DIExpression()), !dbg !11942
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11944, metadata !DIExpression()), !dbg !11942
  store i32 0, i32* %i, align 4, !dbg !11945
  br label %for.cond, !dbg !11945

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11947
  %conv = sext i32 %0 to i64, !dbg !11947
  %cmp = icmp ult i64 %conv, 4, !dbg !11947
  br i1 %cmp, label %for.body, label %for.end, !dbg !11945

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %table_key.addr, align 8, !dbg !11949
  %2 = load i32, i32* %i, align 4, !dbg !11949
  %idxprom = sext i32 %2 to i64, !dbg !11949
  %arrayidx = getelementptr [4 x %struct.anon.100], [4 x %struct.anon.100]* @fc_tgtid_binding_type_names, i64 0, i64 %idxprom, !dbg !11949
  %name = getelementptr inbounds %struct.anon.100, %struct.anon.100* %arrayidx, i32 0, i32 1, !dbg !11949
  %3 = load i8*, i8** %name, align 8, !dbg !11949
  %4 = load i32, i32* %i, align 4, !dbg !11949
  %idxprom2 = sext i32 %4 to i64, !dbg !11949
  %arrayidx3 = getelementptr [4 x %struct.anon.100], [4 x %struct.anon.100]* @fc_tgtid_binding_type_names, i64 0, i64 %idxprom2, !dbg !11949
  %matchlen = getelementptr inbounds %struct.anon.100, %struct.anon.100* %arrayidx3, i32 0, i32 2, !dbg !11949
  %5 = load i32, i32* %matchlen, align 8, !dbg !11949
  %conv4 = sext i32 %5 to i64, !dbg !11949
  %call = call i32 @strncmp(i8* %1, i8* %3, i64 %conv4) #12, !dbg !11949
  %cmp5 = icmp eq i32 %call, 0, !dbg !11949
  br i1 %cmp5, label %if.then, label %if.end, !dbg !11952

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !11953
  %idxprom7 = sext i32 %6 to i64, !dbg !11953
  %arrayidx8 = getelementptr [4 x %struct.anon.100], [4 x %struct.anon.100]* @fc_tgtid_binding_type_names, i64 0, i64 %idxprom7, !dbg !11953
  %value9 = getelementptr inbounds %struct.anon.100, %struct.anon.100* %arrayidx8, i32 0, i32 0, !dbg !11953
  %7 = load i32, i32* %value9, align 8, !dbg !11953
  %8 = load i32*, i32** %value.addr, align 8, !dbg !11953
  store i32 %7, i32* %8, align 4, !dbg !11953
  store i32 0, i32* %retval, align 4, !dbg !11953
  br label %return, !dbg !11953

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11952

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !11947
  %inc = add i32 %9, 1, !dbg !11947
  store i32 %inc, i32* %i, align 4, !dbg !11947
  br label %for.cond, !dbg !11947, !llvm.loop !11955

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !11942
  br label %return, !dbg !11942

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !11942
  ret i32 %10, !dbg !11942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !11956 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11961, metadata !DIExpression()), !dbg !11962
  br label %do.body, !dbg !11963

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11965

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11963
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11963
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11963
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !11965
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !11963
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11967
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !11968
  %conv = zext i1 %cmp to i32, !dbg !11968
  ret i32 %conv, !dbg !11969
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_private_host_issue_lip(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !11970 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11971, metadata !DIExpression()), !dbg !11972
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11973, metadata !DIExpression()), !dbg !11974
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11975, metadata !DIExpression()), !dbg !11976
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11977, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11979, metadata !DIExpression()), !dbg !11980
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11981
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11981
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11981
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !11981
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11980
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !11982, metadata !DIExpression()), !dbg !11983
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11984, metadata !DIExpression()), !dbg !11986
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11986
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !11986
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !11986
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !11986
  store i8* %4, i8** %__mptr, align 8, !dbg !11986
  br label %do.body, !dbg !11986

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11987

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11986
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11986
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !11986
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !11987
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !11986
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !11983
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11989, metadata !DIExpression()), !dbg !11990
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11991
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !11993
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !11993
  %issue_fc_host_lip = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 15, !dbg !11994
  %10 = load i32 (%struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*)** %issue_fc_host_lip, align 8, !dbg !11994
  %tobool = icmp ne i32 (%struct.Scsi_Host*)* %10, null, !dbg !11991
  br i1 %tobool, label %if.then, label %if.end, !dbg !11995

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !11996
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !11998
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !11998
  %issue_fc_host_lip2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 15, !dbg !11999
  %13 = load i32 (%struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*)** %issue_fc_host_lip2, align 8, !dbg !11999
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12000
  %call3 = call i32 %13(%struct.Scsi_Host* %14) #12, !dbg !11996
  store i32 %call3, i32* %ret, align 4, !dbg !12001
  %15 = load i32, i32* %ret, align 4, !dbg !12002
  %tobool4 = icmp ne i32 %15, 0, !dbg !12002
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !12002

cond.true:                                        ; preds = %if.then
  %16 = load i32, i32* %ret, align 4, !dbg !12003
  %conv = sext i32 %16 to i64, !dbg !12003
  br label %cond.end, !dbg !12002

cond.false:                                       ; preds = %if.then
  %17 = load i64, i64* %count.addr, align 8, !dbg !12004
  br label %cond.end, !dbg !12002

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %17, %cond.false ], !dbg !12002
  store i64 %cond, i64* %retval, align 8, !dbg !12005
  br label %return, !dbg !12005

if.end:                                           ; preds = %do.end
  store i64 -2, i64* %retval, align 8, !dbg !12006
  br label %return, !dbg !12006

return:                                           ; preds = %if.end, %cond.end
  %18 = load i64, i64* %retval, align 8, !dbg !12007
  ret i64 %18, !dbg !12007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_host_vport_create(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12008 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %vid = alloca %struct.fc_vport_identifiers, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %cnt = alloca i32, align 4
  %stat = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12011, metadata !DIExpression()), !dbg !12012
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12013, metadata !DIExpression()), !dbg !12014
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12015, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12017, metadata !DIExpression()), !dbg !12018
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12019
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12019
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12019
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !12019
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !12018
  call void @llvm.dbg.declare(metadata %struct.fc_vport_identifiers* %vid, metadata !12020, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12022, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !12024, metadata !DIExpression()), !dbg !12025
  %2 = load i64, i64* %count.addr, align 8, !dbg !12026
  %conv = trunc i64 %2 to i32, !dbg !12026
  store i32 %conv, i32* %cnt, align 4, !dbg !12025
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !12027, metadata !DIExpression()), !dbg !12028
  %3 = bitcast %struct.fc_vport_identifiers* %vid to i8*, !dbg !12029
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 96, i1 false), !dbg !12029
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !12030
  %5 = load i32, i32* %cnt, align 4, !dbg !12032
  %sub = sub i32 %5, 1, !dbg !12033
  %idxprom = zext i32 %sub to i64, !dbg !12030
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !12030
  %6 = load i8, i8* %arrayidx, align 1, !dbg !12030
  %conv1 = sext i8 %6 to i32, !dbg !12030
  %cmp = icmp eq i32 %conv1, 10, !dbg !12034
  br i1 %cmp, label %if.then, label %if.end, !dbg !12035

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %cnt, align 4, !dbg !12036
  %dec = add i32 %7, -1, !dbg !12036
  store i32 %dec, i32* %cnt, align 4, !dbg !12036
  br label %if.end, !dbg !12037

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %cnt, align 4, !dbg !12038
  %cmp3 = icmp ne i32 %8, 33, !dbg !12040
  br i1 %cmp3, label %if.then9, label %lor.lhs.false, !dbg !12041

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12042
  %arrayidx5 = getelementptr i8, i8* %9, i64 16, !dbg !12042
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !12042
  %conv6 = sext i8 %10 to i32, !dbg !12042
  %cmp7 = icmp ne i32 %conv6, 58, !dbg !12043
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12044

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !12045
  br label %return, !dbg !12045

if.end10:                                         ; preds = %lor.lhs.false
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !12046
  %arrayidx11 = getelementptr i8, i8* %11, i64 0, !dbg !12046
  %port_name = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %vid, i32 0, i32 1, !dbg !12047
  %call12 = call i32 @fc_parse_wwn(i8* %arrayidx11, i64* %port_name) #12, !dbg !12048
  store i32 %call12, i32* %stat, align 4, !dbg !12049
  %12 = load i32, i32* %stat, align 4, !dbg !12050
  %tobool = icmp ne i32 %12, 0, !dbg !12050
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !12052

if.then13:                                        ; preds = %if.end10
  %13 = load i32, i32* %stat, align 4, !dbg !12053
  %conv14 = sext i32 %13 to i64, !dbg !12053
  store i64 %conv14, i64* %retval, align 8, !dbg !12054
  br label %return, !dbg !12054

if.end15:                                         ; preds = %if.end10
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !12055
  %arrayidx16 = getelementptr i8, i8* %14, i64 17, !dbg !12055
  %node_name = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %vid, i32 0, i32 0, !dbg !12056
  %call17 = call i32 @fc_parse_wwn(i8* %arrayidx16, i64* %node_name) #12, !dbg !12057
  store i32 %call17, i32* %stat, align 4, !dbg !12058
  %15 = load i32, i32* %stat, align 4, !dbg !12059
  %tobool18 = icmp ne i32 %15, 0, !dbg !12059
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !12061

if.then19:                                        ; preds = %if.end15
  %16 = load i32, i32* %stat, align 4, !dbg !12062
  %conv20 = sext i32 %16 to i64, !dbg !12062
  store i64 %conv20, i64* %retval, align 8, !dbg !12063
  br label %return, !dbg !12063

if.end21:                                         ; preds = %if.end15
  %roles = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %vid, i32 0, i32 2, !dbg !12064
  store i32 2, i32* %roles, align 8, !dbg !12065
  %vport_type = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %vid, i32 0, i32 4, !dbg !12066
  store i32 7, i32* %vport_type, align 8, !dbg !12067
  %disable = getelementptr inbounds %struct.fc_vport_identifiers, %struct.fc_vport_identifiers* %vid, i32 0, i32 3, !dbg !12068
  store i8 0, i8* %disable, align 4, !dbg !12069
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12070
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12071
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 47, !dbg !12072
  %call22 = call i32 @fc_vport_setup(%struct.Scsi_Host* %17, i32 0, %struct.device* %shost_gendev, %struct.fc_vport_identifiers* %vid, %struct.fc_vport** %vport) #12, !dbg !12073
  store i32 %call22, i32* %stat, align 4, !dbg !12074
  %19 = load i32, i32* %stat, align 4, !dbg !12075
  %tobool23 = icmp ne i32 %19, 0, !dbg !12075
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12075

cond.true:                                        ; preds = %if.end21
  %20 = load i32, i32* %stat, align 4, !dbg !12076
  %conv24 = sext i32 %20 to i64, !dbg !12076
  br label %cond.end, !dbg !12075

cond.false:                                       ; preds = %if.end21
  %21 = load i64, i64* %count.addr, align 8, !dbg !12077
  br label %cond.end, !dbg !12075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv24, %cond.true ], [ %21, %cond.false ], !dbg !12075
  store i64 %cond, i64* %retval, align 8, !dbg !12078
  br label %return, !dbg !12078

return:                                           ; preds = %cond.end, %if.then19, %if.then13, %if.then9
  %22 = load i64, i64* %retval, align 8, !dbg !12079
  ret i64 %22, !dbg !12079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_parse_wwn(i8* %ns, i64* %nm) #0 !dbg !12080 {
entry:
  %retval = alloca i32, align 4
  %ns.addr = alloca i8*, align 8
  %nm.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %wwn = alloca [8 x i8], align 1
  %value = alloca i32, align 4
  store i8* %ns, i8** %ns.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ns.addr, metadata !12083, metadata !DIExpression()), !dbg !12084
  store i64* %nm, i64** %nm.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %nm.addr, metadata !12085, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12087, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata [8 x i8]* %wwn, metadata !12091, metadata !DIExpression()), !dbg !12093
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %wwn, i64 0, i64 0, !dbg !12094
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 8, i1 false), !dbg !12094
  store i32 0, i32* %i, align 4, !dbg !12095
  store i32 0, i32* %j, align 4, !dbg !12097
  br label %for.cond, !dbg !12098

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12099
  %cmp = icmp ult i32 %0, 16, !dbg !12101
  br i1 %cmp, label %for.body, label %for.end, !dbg !12102

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %value, metadata !12103, metadata !DIExpression()), !dbg !12105
  %1 = load i8*, i8** %ns.addr, align 8, !dbg !12106
  %incdec.ptr = getelementptr i8, i8* %1, i32 1, !dbg !12106
  store i8* %incdec.ptr, i8** %ns.addr, align 8, !dbg !12106
  %2 = load i8, i8* %1, align 1, !dbg !12107
  %call = call i32 @hex_to_bin(i8 signext %2) #12, !dbg !12108
  store i32 %call, i32* %value, align 4, !dbg !12109
  %3 = load i32, i32* %value, align 4, !dbg !12110
  %cmp1 = icmp sge i32 %3, 0, !dbg !12112
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12113

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %j, align 4, !dbg !12114
  %shl = shl i32 %4, 4, !dbg !12115
  %5 = load i32, i32* %value, align 4, !dbg !12116
  %or = or i32 %shl, %5, !dbg !12117
  store i32 %or, i32* %j, align 4, !dbg !12118
  br label %if.end, !dbg !12119

if.else:                                          ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !12120
  br label %return, !dbg !12120

if.end:                                           ; preds = %if.then
  %6 = load i32, i32* %i, align 4, !dbg !12121
  %rem = urem i32 %6, 2, !dbg !12123
  %tobool = icmp ne i32 %rem, 0, !dbg !12123
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !12124

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %j, align 4, !dbg !12125
  %and = and i32 %7, 255, !dbg !12127
  %conv = trunc i32 %and to i8, !dbg !12125
  %8 = load i32, i32* %i, align 4, !dbg !12128
  %div = udiv i32 %8, 2, !dbg !12129
  %idxprom = zext i32 %div to i64, !dbg !12130
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %wwn, i64 0, i64 %idxprom, !dbg !12130
  store i8 %conv, i8* %arrayidx, align 1, !dbg !12131
  store i32 0, i32* %j, align 4, !dbg !12132
  br label %if.end3, !dbg !12133

if.end3:                                          ; preds = %if.then2, %if.end
  br label %for.inc, !dbg !12134

for.inc:                                          ; preds = %if.end3
  %9 = load i32, i32* %i, align 4, !dbg !12135
  %inc = add i32 %9, 1, !dbg !12135
  store i32 %inc, i32* %i, align 4, !dbg !12135
  br label %for.cond, !dbg !12136, !llvm.loop !12137

for.end:                                          ; preds = %for.cond
  %arraydecay4 = getelementptr inbounds [8 x i8], [8 x i8]* %wwn, i64 0, i64 0, !dbg !12139
  %call5 = call i64 @wwn_to_u64(i8* %arraydecay4) #12, !dbg !12140
  %10 = load i64*, i64** %nm.addr, align 8, !dbg !12141
  store i64 %call5, i64* %10, align 8, !dbg !12142
  store i32 0, i32* %retval, align 4, !dbg !12143
  br label %return, !dbg !12143

return:                                           ; preds = %for.end, %if.else
  %11 = load i32, i32* %retval, align 4, !dbg !12144
  ret i32 %11, !dbg !12144
}

; Function Attrs: noredzone
declare dso_local i32 @hex_to_bin(i8 signext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @wwn_to_u64(i8* %wwn) #0 !dbg !12145 {
entry:
  %p.addr.i.i.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i.i, metadata !12150, metadata !DIExpression()), !dbg !12157
  %p.addr.i.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i, metadata !12171, metadata !DIExpression()), !dbg !12172
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !12173, metadata !DIExpression()), !dbg !12174
  %wwn.addr = alloca i8*, align 8
  store i8* %wwn, i8** %wwn.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wwn.addr, metadata !12175, metadata !DIExpression()), !dbg !12176
  %0 = load i8*, i8** %wwn.addr, align 8, !dbg !12177
  store i8* %0, i8** %p.addr.i, align 8
  %1 = load i8*, i8** %p.addr.i, align 8, !dbg !12178
  %2 = bitcast i8* %1 to i64*, !dbg !12179
  store i64* %2, i64** %p.addr.i.i, align 8
  %3 = load i64*, i64** %p.addr.i.i, align 8, !dbg !12180
  store i64* %3, i64** %p.addr.i.i.i, align 8
  %4 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %5 = load i64, i64* %4, align 8, !dbg !12181
  %6 = call i1 @llvm.is.constant.i64(i64 %5) #10, !dbg !12181
  br i1 %6, label %cond.true.i.i.i, label %cond.false.i.i.i, !dbg !12181

cond.true.i.i.i:                                  ; preds = %entry
  %7 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %8 = load i64, i64* %7, align 8, !dbg !12181
  %and.i.i.i = and i64 %8, 255, !dbg !12181
  %shl.i.i.i = shl i64 %and.i.i.i, 56, !dbg !12181
  %9 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %10 = load i64, i64* %9, align 8, !dbg !12181
  %and1.i.i.i = and i64 %10, 65280, !dbg !12181
  %shl2.i.i.i = shl i64 %and1.i.i.i, 40, !dbg !12181
  %or.i.i.i = or i64 %shl.i.i.i, %shl2.i.i.i, !dbg !12181
  %11 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %12 = load i64, i64* %11, align 8, !dbg !12181
  %and3.i.i.i = and i64 %12, 16711680, !dbg !12181
  %shl4.i.i.i = shl i64 %and3.i.i.i, 24, !dbg !12181
  %or5.i.i.i = or i64 %or.i.i.i, %shl4.i.i.i, !dbg !12181
  %13 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %14 = load i64, i64* %13, align 8, !dbg !12181
  %and6.i.i.i = and i64 %14, 4278190080, !dbg !12181
  %shl7.i.i.i = shl i64 %and6.i.i.i, 8, !dbg !12181
  %or8.i.i.i = or i64 %or5.i.i.i, %shl7.i.i.i, !dbg !12181
  %15 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %16 = load i64, i64* %15, align 8, !dbg !12181
  %and9.i.i.i = and i64 %16, 1095216660480, !dbg !12181
  %shr.i.i.i = lshr i64 %and9.i.i.i, 8, !dbg !12181
  %or10.i.i.i = or i64 %or8.i.i.i, %shr.i.i.i, !dbg !12181
  %17 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %18 = load i64, i64* %17, align 8, !dbg !12181
  %and11.i.i.i = and i64 %18, 280375465082880, !dbg !12181
  %shr12.i.i.i = lshr i64 %and11.i.i.i, 24, !dbg !12181
  %or13.i.i.i = or i64 %or10.i.i.i, %shr12.i.i.i, !dbg !12181
  %19 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %20 = load i64, i64* %19, align 8, !dbg !12181
  %and14.i.i.i = and i64 %20, 71776119061217280, !dbg !12181
  %shr15.i.i.i = lshr i64 %and14.i.i.i, 40, !dbg !12181
  %or16.i.i.i = or i64 %or13.i.i.i, %shr15.i.i.i, !dbg !12181
  %21 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %22 = load i64, i64* %21, align 8, !dbg !12181
  %and17.i.i.i = and i64 %22, -72057594037927936, !dbg !12181
  %shr18.i.i.i = lshr i64 %and17.i.i.i, 56, !dbg !12181
  %or19.i.i.i = or i64 %or16.i.i.i, %shr18.i.i.i, !dbg !12181
  br label %get_unaligned_be64.exit, !dbg !12181

cond.false.i.i.i:                                 ; preds = %entry
  %23 = load i64*, i64** %p.addr.i.i.i, align 8, !dbg !12181
  %24 = load i64, i64* %23, align 8, !dbg !12181
  %call.i.i.i = call i64 @__fswab64(i64 %24) #14, !dbg !12181
  br label %get_unaligned_be64.exit, !dbg !12181

get_unaligned_be64.exit:                          ; preds = %cond.true.i.i.i, %cond.false.i.i.i
  %cond.i.i.i = phi i64 [ %or19.i.i.i, %cond.true.i.i.i ], [ %call.i.i.i, %cond.false.i.i.i ], !dbg !12181
  ret i64 %cond.i.i.i, !dbg !12182
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #8 !dbg !12183 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !12186, metadata !DIExpression()), !dbg !12187
  %0 = load i64, i64* %val.addr, align 8, !dbg !12188
  %call = call i64 @__arch_swab64(i64 %0) #14, !dbg !12189
  ret i64 %call, !dbg !12190
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #8 !dbg !12191 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !12193, metadata !DIExpression()), !dbg !12194
  %0 = load i64, i64* %val.addr, align 8, !dbg !12195
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #15, !dbg !12196, !srcloc !12197
  store i64 %1, i64* %val.addr, align 8, !dbg !12196
  %2 = load i64, i64* %val.addr, align 8, !dbg !12198
  ret i64 %2, !dbg !12199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_host_vport_delete(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12200 {
entry:
  %lock.addr.i80 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i80, metadata !7624, metadata !DIExpression()), !dbg !12201
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !12203
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !12204
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %wwpn = alloca i64, align 8
  %wwnn = alloca i64, align 8
  %flags = alloca i64, align 8
  %cnt = alloca i32, align 4
  %stat = alloca i32, align 4
  %match = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp45 = alloca %struct.fc_vport*, align 8
  %__mptr66 = alloca i8*, align 8
  %tmp71 = alloca %struct.fc_vport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12211, metadata !DIExpression()), !dbg !12212
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12213, metadata !DIExpression()), !dbg !12214
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12215, metadata !DIExpression()), !dbg !12216
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12217, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12219, metadata !DIExpression()), !dbg !12220
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12221
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12221
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12221
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !12221
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !12220
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !12222, metadata !DIExpression()), !dbg !12223
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12224
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 49, !dbg !12224
  %3 = load i8*, i8** %shost_data, align 8, !dbg !12224
  %4 = bitcast i8* %3 to %struct.fc_host_attrs*, !dbg !12224
  store %struct.fc_host_attrs* %4, %struct.fc_host_attrs** %fc_host, align 8, !dbg !12223
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12225, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.declare(metadata i64* %wwpn, metadata !12227, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.declare(metadata i64* %wwnn, metadata !12229, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12231, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !12233, metadata !DIExpression()), !dbg !12234
  %5 = load i64, i64* %count.addr, align 8, !dbg !12235
  %conv = trunc i64 %5 to i32, !dbg !12235
  store i32 %conv, i32* %cnt, align 4, !dbg !12234
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !12236, metadata !DIExpression()), !dbg !12237
  call void @llvm.dbg.declare(metadata i32* %match, metadata !12238, metadata !DIExpression()), !dbg !12239
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12240
  %7 = load i32, i32* %cnt, align 4, !dbg !12242
  %sub = sub i32 %7, 1, !dbg !12243
  %idxprom = zext i32 %sub to i64, !dbg !12240
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !12240
  %8 = load i8, i8* %arrayidx, align 1, !dbg !12240
  %conv1 = sext i8 %8 to i32, !dbg !12240
  %cmp = icmp eq i32 %conv1, 10, !dbg !12244
  br i1 %cmp, label %if.then, label %if.end, !dbg !12245

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %cnt, align 4, !dbg !12246
  %dec = add i32 %9, -1, !dbg !12246
  store i32 %dec, i32* %cnt, align 4, !dbg !12246
  br label %if.end, !dbg !12247

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %cnt, align 4, !dbg !12248
  %cmp3 = icmp ne i32 %10, 33, !dbg !12250
  br i1 %cmp3, label %if.then9, label %lor.lhs.false, !dbg !12251

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !12252
  %arrayidx5 = getelementptr i8, i8* %11, i64 16, !dbg !12252
  %12 = load i8, i8* %arrayidx5, align 1, !dbg !12252
  %conv6 = sext i8 %12 to i32, !dbg !12252
  %cmp7 = icmp ne i32 %conv6, 58, !dbg !12253
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12254

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !12255
  br label %return, !dbg !12255

if.end10:                                         ; preds = %lor.lhs.false
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !12256
  %arrayidx11 = getelementptr i8, i8* %13, i64 0, !dbg !12256
  %call12 = call i32 @fc_parse_wwn(i8* %arrayidx11, i64* %wwpn) #12, !dbg !12257
  store i32 %call12, i32* %stat, align 4, !dbg !12258
  %14 = load i32, i32* %stat, align 4, !dbg !12259
  %tobool = icmp ne i32 %14, 0, !dbg !12259
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !12261

if.then13:                                        ; preds = %if.end10
  %15 = load i32, i32* %stat, align 4, !dbg !12262
  %conv14 = sext i32 %15 to i64, !dbg !12262
  store i64 %conv14, i64* %retval, align 8, !dbg !12263
  br label %return, !dbg !12263

if.end15:                                         ; preds = %if.end10
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !12264
  %arrayidx16 = getelementptr i8, i8* %16, i64 17, !dbg !12264
  %call17 = call i32 @fc_parse_wwn(i8* %arrayidx16, i64* %wwnn) #12, !dbg !12265
  store i32 %call17, i32* %stat, align 4, !dbg !12266
  %17 = load i32, i32* %stat, align 4, !dbg !12267
  %tobool18 = icmp ne i32 %17, 0, !dbg !12267
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !12269

if.then19:                                        ; preds = %if.end15
  %18 = load i32, i32* %stat, align 4, !dbg !12270
  %conv20 = sext i32 %18 to i64, !dbg !12270
  store i64 %conv20, i64* %retval, align 8, !dbg !12271
  br label %return, !dbg !12271

if.end21:                                         ; preds = %if.end15
  br label %do.body, !dbg !12272

do.body:                                          ; preds = %if.end21
  br label %do.body22, !dbg !12273

do.body22:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12274, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12277, metadata !DIExpression()), !dbg !12276
  %cmp23 = icmp eq i64* %__dummy, %__dummy2, !dbg !12276
  %conv24 = zext i1 %cmp23 to i32, !dbg !12276
  store i32 1, i32* %tmp, align 4, !dbg !12276
  %19 = load i32, i32* %tmp, align 4, !dbg !12276
  br label %do.body25, !dbg !12278

do.body25:                                        ; preds = %do.body22
  br label %do.body26, !dbg !12279

do.body26:                                        ; preds = %do.body25
  br label %do.body27, !dbg !12280

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !12282, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !12286, metadata !DIExpression()), !dbg !12285
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !12285
  %conv31 = zext i1 %cmp30 to i32, !dbg !12285
  store i32 1, i32* %tmp32, align 4, !dbg !12285
  %20 = load i32, i32* %tmp32, align 4, !dbg !12285
  %call33 = call i64 @arch_local_irq_save() #12, !dbg !12287
  store i64 %call33, i64* %flags, align 8, !dbg !12287
  br label %do.end, !dbg !12287

do.end:                                           ; preds = %do.body27
  br label %do.end34, !dbg !12280

do.end34:                                         ; preds = %do.end
  br label %do.body35, !dbg !12279

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12288, !srcloc !12289
  br label %do.body36, !dbg !12288

do.body36:                                        ; preds = %do.body35
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12290
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 4, !dbg !12290
  %22 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !12290
  store %struct.spinlock* %22, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12291
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !12292
  %rlock.i = bitcast %union.anon.0* %24 to %struct.raw_spinlock*, !dbg !12292
  br label %do.end38, !dbg !12290

do.end38:                                         ; preds = %do.body36
  br label %do.end39, !dbg !12288

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !12279

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !12278

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !12273

do.end42:                                         ; preds = %do.end41
  store i32 0, i32* %match, align 4, !dbg !12293
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12294, metadata !DIExpression()), !dbg !12297
  %25 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !12297
  %vports = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %25, i32 0, i32 28, !dbg !12297
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vports, i32 0, i32 0, !dbg !12297
  %26 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12297
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !12297
  store i8* %27, i8** %__mptr, align 8, !dbg !12297
  br label %do.body43, !dbg !12297

do.body43:                                        ; preds = %do.end42
  br label %do.end44, !dbg !12298

do.end44:                                         ; preds = %do.body43
  %28 = load i8*, i8** %__mptr, align 8, !dbg !12297
  %add.ptr = getelementptr i8, i8* %28, i64 -136, !dbg !12297
  %29 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12297
  store %struct.fc_vport* %29, %struct.fc_vport** %tmp45, align 8, !dbg !12298
  %30 = load %struct.fc_vport*, %struct.fc_vport** %tmp45, align 8, !dbg !12297
  store %struct.fc_vport* %30, %struct.fc_vport** %vport, align 8, !dbg !12300
  br label %for.cond, !dbg !12300

for.cond:                                         ; preds = %do.end70, %do.end44
  %31 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12301
  %peers = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %31, i32 0, i32 13, !dbg !12301
  %32 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !12301
  %vports46 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %32, i32 0, i32 28, !dbg !12301
  %cmp47 = icmp eq %struct.list_head* %peers, %vports46, !dbg !12301
  %lnot = xor i1 %cmp47, true, !dbg !12301
  br i1 %lnot, label %for.body, label %for.end, !dbg !12300

for.body:                                         ; preds = %for.cond
  %33 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12303
  %channel = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %33, i32 0, i32 10, !dbg !12306
  %34 = load i32, i32* %channel, align 8, !dbg !12306
  %cmp49 = icmp eq i32 %34, 0, !dbg !12307
  br i1 %cmp49, label %land.lhs.true, label %if.end65, !dbg !12308

land.lhs.true:                                    ; preds = %for.body
  %35 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12309
  %port_name = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %35, i32 0, i32 3, !dbg !12310
  %36 = load i64, i64* %port_name, align 8, !dbg !12310
  %37 = load i64, i64* %wwpn, align 8, !dbg !12311
  %cmp51 = icmp eq i64 %36, %37, !dbg !12312
  br i1 %cmp51, label %land.lhs.true53, label %if.end65, !dbg !12313

land.lhs.true53:                                  ; preds = %land.lhs.true
  %38 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12314
  %node_name = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %38, i32 0, i32 2, !dbg !12315
  %39 = load i64, i64* %node_name, align 8, !dbg !12315
  %40 = load i64, i64* %wwnn, align 8, !dbg !12316
  %cmp54 = icmp eq i64 %39, %40, !dbg !12317
  br i1 %cmp54, label %if.then56, label %if.end65, !dbg !12318

if.then56:                                        ; preds = %land.lhs.true53
  %41 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12319
  %flags57 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %41, i32 0, i32 12, !dbg !12322
  %42 = load i8, i8* %flags57, align 8, !dbg !12322
  %conv58 = zext i8 %42 to i32, !dbg !12319
  %and = and i32 %conv58, 7, !dbg !12323
  %tobool59 = icmp ne i32 %and, 0, !dbg !12323
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !12324

if.then60:                                        ; preds = %if.then56
  br label %for.end, !dbg !12325

if.end61:                                         ; preds = %if.then56
  %43 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12326
  %flags62 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %43, i32 0, i32 12, !dbg !12327
  %44 = load i8, i8* %flags62, align 8, !dbg !12328
  %conv63 = zext i8 %44 to i32, !dbg !12328
  %or = or i32 %conv63, 2, !dbg !12328
  %conv64 = trunc i32 %or to i8, !dbg !12328
  store i8 %conv64, i8* %flags62, align 8, !dbg !12328
  store i32 1, i32* %match, align 4, !dbg !12329
  br label %for.end, !dbg !12330

if.end65:                                         ; preds = %land.lhs.true53, %land.lhs.true, %for.body
  br label %for.inc, !dbg !12331

for.inc:                                          ; preds = %if.end65
  call void @llvm.dbg.declare(metadata i8** %__mptr66, metadata !12332, metadata !DIExpression()), !dbg !12334
  %45 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12334
  %peers67 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %45, i32 0, i32 13, !dbg !12334
  %next68 = getelementptr inbounds %struct.list_head, %struct.list_head* %peers67, i32 0, i32 0, !dbg !12334
  %46 = load %struct.list_head*, %struct.list_head** %next68, align 8, !dbg !12334
  %47 = bitcast %struct.list_head* %46 to i8*, !dbg !12334
  store i8* %47, i8** %__mptr66, align 8, !dbg !12334
  br label %do.body69, !dbg !12334

do.body69:                                        ; preds = %for.inc
  br label %do.end70, !dbg !12335

do.end70:                                         ; preds = %do.body69
  %48 = load i8*, i8** %__mptr66, align 8, !dbg !12334
  %add.ptr72 = getelementptr i8, i8* %48, i64 -136, !dbg !12334
  %49 = bitcast i8* %add.ptr72 to %struct.fc_vport*, !dbg !12334
  store %struct.fc_vport* %49, %struct.fc_vport** %tmp71, align 8, !dbg !12335
  %50 = load %struct.fc_vport*, %struct.fc_vport** %tmp71, align 8, !dbg !12334
  store %struct.fc_vport* %50, %struct.fc_vport** %vport, align 8, !dbg !12301
  br label %for.cond, !dbg !12301, !llvm.loop !12337

for.end:                                          ; preds = %if.end61, %if.then60, %for.cond
  %51 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12339
  %host_lock73 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %51, i32 0, i32 4, !dbg !12340
  %52 = load %struct.spinlock*, %struct.spinlock** %host_lock73, align 8, !dbg !12340
  %53 = load i64, i64* %flags, align 8, !dbg !12341
  store %struct.spinlock* %52, %struct.spinlock** %lock.addr.i80, align 8
  store i64 %53, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !12342
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !12342
  store i32 1, i32* %tmp.i, align 4, !dbg !12342
  %54 = load i32, i32* %tmp.i, align 4, !dbg !12342
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !12343
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !12343
  store i32 1, i32* %tmp8.i, align 4, !dbg !12343
  %55 = load i32, i32* %tmp8.i, align 4, !dbg !12343
  %56 = load i64, i64* %flags.addr.i, align 8, !dbg !12344
  call void @arch_local_irq_restore(i64 %56) #11, !dbg !12344
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12345, !srcloc !7797
  %57 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i80, align 8, !dbg !12346
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0, !dbg !12346
  %rlock.i81 = bitcast %union.anon.0* %58 to %struct.raw_spinlock*, !dbg !12346
  %59 = load i32, i32* %match, align 4, !dbg !12347
  %tobool74 = icmp ne i32 %59, 0, !dbg !12347
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !12349

if.then75:                                        ; preds = %for.end
  store i64 -19, i64* %retval, align 8, !dbg !12350
  br label %return, !dbg !12350

if.end76:                                         ; preds = %for.end
  %60 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12351
  %call77 = call i32 @fc_vport_terminate(%struct.fc_vport* %60) #12, !dbg !12352
  store i32 %call77, i32* %stat, align 4, !dbg !12353
  %61 = load i32, i32* %stat, align 4, !dbg !12354
  %tobool78 = icmp ne i32 %61, 0, !dbg !12354
  br i1 %tobool78, label %cond.true, label %cond.false, !dbg !12354

cond.true:                                        ; preds = %if.end76
  %62 = load i32, i32* %stat, align 4, !dbg !12355
  %conv79 = sext i32 %62 to i64, !dbg !12355
  br label %cond.end, !dbg !12354

cond.false:                                       ; preds = %if.end76
  %63 = load i64, i64* %count.addr, align 8, !dbg !12356
  br label %cond.end, !dbg !12354

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv79, %cond.true ], [ %63, %cond.false ], !dbg !12354
  store i64 %cond, i64* %retval, align 8, !dbg !12357
  br label %return, !dbg !12357

return:                                           ; preds = %cond.end, %if.then75, %if.then19, %if.then13, %if.then9
  %64 = load i64, i64* %retval, align 8, !dbg !12358
  ret i64 %64, !dbg !12358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_maxframe_size(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12359 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12362, metadata !DIExpression()), !dbg !12361
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12363, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12364, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12365, metadata !DIExpression()), !dbg !12367
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12367
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12367
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12367
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12367
  store i8* %2, i8** %__mptr, align 8, !dbg !12367
  br label %do.body, !dbg !12367

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12368

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12367
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12367
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12367
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12368
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12367
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12361
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12361
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12361
  %maxframe_size = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 0, !dbg !12361
  %8 = load i32, i32* %maxframe_size, align 8, !dbg !12361
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i32 %8) #12, !dbg !12361
  %conv = sext i32 %call to i64, !dbg !12361
  ret i64 %conv, !dbg !12361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_supported_classes(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12370 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12371, metadata !DIExpression()), !dbg !12372
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12373, metadata !DIExpression()), !dbg !12374
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12375, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12377, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12379, metadata !DIExpression()), !dbg !12381
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12381
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12381
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12381
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12381
  store i8* %2, i8** %__mptr, align 8, !dbg !12381
  br label %do.body, !dbg !12381

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12382

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12381
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12381
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12381
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12382
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12381
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12378
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12384
  %supported_classes = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 1, !dbg !12386
  %7 = load i32, i32* %supported_classes, align 4, !dbg !12386
  %cmp = icmp eq i32 %7, 0, !dbg !12387
  br i1 %cmp, label %if.then, label %if.end, !dbg !12388

if.then:                                          ; preds = %do.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12389
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !12390
  %conv = sext i32 %call to i64, !dbg !12390
  store i64 %conv, i64* %retval, align 8, !dbg !12391
  br label %return, !dbg !12391

if.end:                                           ; preds = %do.end
  %9 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12392
  %supported_classes1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %9, i32 0, i32 1, !dbg !12393
  %10 = load i32, i32* %supported_classes1, align 4, !dbg !12393
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !12394
  %call2 = call i64 @get_fc_cos_names(i32 %10, i8* %11) #12, !dbg !12395
  store i64 %call2, i64* %retval, align 8, !dbg !12396
  br label %return, !dbg !12396

return:                                           ; preds = %if.end, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !12397
  ret i64 %12, !dbg !12397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_dev_loss_tmo(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12398 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.fc_internal*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12399, metadata !DIExpression()), !dbg !12400
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12401, metadata !DIExpression()), !dbg !12400
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12402, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12403, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12404, metadata !DIExpression()), !dbg !12406
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12406
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12406
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12406
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12406
  store i8* %2, i8** %__mptr, align 8, !dbg !12406
  br label %do.body, !dbg !12406

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12407

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12406
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12406
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12406
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12407
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12406
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12400
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12409, metadata !DIExpression()), !dbg !12400
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12400
  %dev1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 15, !dbg !12400
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !12400
  %7 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !12400
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %7) #12, !dbg !12400
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !12400
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !12410, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !12411, metadata !DIExpression()), !dbg !12413
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12413
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !12413
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !12413
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !12413
  store i8* %10, i8** %__mptr3, align 8, !dbg !12413
  br label %do.body4, !dbg !12413

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !12414

do.end5:                                          ; preds = %do.body4
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !12413
  %add.ptr7 = getelementptr i8, i8* %11, i64 0, !dbg !12413
  %12 = bitcast i8* %add.ptr7 to %struct.fc_internal*, !dbg !12413
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp6, align 8, !dbg !12414
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp6, align 8, !dbg !12413
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !12400
  %14 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !12416
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %14, i32 0, i32 1, !dbg !12416
  %15 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !12416
  %get_rport_dev_loss_tmo = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %15, i32 0, i32 0, !dbg !12416
  %16 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %get_rport_dev_loss_tmo, align 8, !dbg !12416
  %tobool = icmp ne void (%struct.fc_rport*)* %16, null, !dbg !12416
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12416

land.lhs.true:                                    ; preds = %do.end5
  %17 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12416
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %17, i32 0, i32 7, !dbg !12416
  %18 = load i32, i32* %port_state, align 8, !dbg !12416
  %cmp = icmp eq i32 %18, 4, !dbg !12416
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !12416

lor.lhs.false:                                    ; preds = %land.lhs.true
  %19 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12416
  %port_state8 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %19, i32 0, i32 7, !dbg !12416
  %20 = load i32, i32* %port_state8, align 8, !dbg !12416
  %cmp9 = icmp eq i32 %20, 10, !dbg !12416
  br i1 %cmp9, label %if.end, label %lor.lhs.false10, !dbg !12416

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %21 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12416
  %port_state11 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %21, i32 0, i32 7, !dbg !12416
  %22 = load i32, i32* %port_state11, align 8, !dbg !12416
  %cmp12 = icmp eq i32 %22, 1, !dbg !12416
  br i1 %cmp12, label %if.end, label %if.then, !dbg !12400

if.then:                                          ; preds = %lor.lhs.false10
  %23 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !12416
  %f13 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %23, i32 0, i32 1, !dbg !12416
  %24 = load %struct.fc_function_template*, %struct.fc_function_template** %f13, align 8, !dbg !12416
  %get_rport_dev_loss_tmo14 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %24, i32 0, i32 0, !dbg !12416
  %25 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %get_rport_dev_loss_tmo14, align 8, !dbg !12416
  %26 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12416
  call void %25(%struct.fc_rport* %26) #12, !dbg !12416
  br label %if.end, !dbg !12416

if.end:                                           ; preds = %if.then, %lor.lhs.false10, %lor.lhs.false, %land.lhs.true, %do.end5
  %27 = load i8*, i8** %buf.addr, align 8, !dbg !12400
  %28 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12400
  %dev_loss_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %28, i32 0, i32 2, !dbg !12400
  %29 = load i32, i32* %dev_loss_tmo, align 8, !dbg !12400
  %call15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %27, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0), i32 %29) #12, !dbg !12400
  %conv = sext i32 %call15 to i64, !dbg !12400
  ret i64 %conv, !dbg !12400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_rport_dev_loss_tmo(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12418 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %val = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12427, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12429, metadata !DIExpression()), !dbg !12431
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12431
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12431
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12431
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12431
  store i8* %2, i8** %__mptr, align 8, !dbg !12431
  br label %do.body, !dbg !12431

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12432

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12431
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12431
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12431
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12432
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12431
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12428
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12434, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12436, metadata !DIExpression()), !dbg !12437
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12438
  %call = call i32 @fc_str_to_dev_loss(i8* %6, i64* %val) #12, !dbg !12439
  store i32 %call, i32* %rc, align 4, !dbg !12440
  %7 = load i32, i32* %rc, align 4, !dbg !12441
  %tobool = icmp ne i32 %7, 0, !dbg !12441
  br i1 %tobool, label %if.then, label %if.end, !dbg !12443

if.then:                                          ; preds = %do.end
  %8 = load i32, i32* %rc, align 4, !dbg !12444
  %conv = sext i32 %8 to i64, !dbg !12444
  store i64 %conv, i64* %retval, align 8, !dbg !12445
  br label %return, !dbg !12445

if.end:                                           ; preds = %do.end
  %9 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12446
  %10 = load i64, i64* %val, align 8, !dbg !12447
  %call1 = call i32 @fc_rport_set_dev_loss_tmo(%struct.fc_rport* %9, i64 %10) #12, !dbg !12448
  store i32 %call1, i32* %rc, align 4, !dbg !12449
  %11 = load i32, i32* %rc, align 4, !dbg !12450
  %tobool2 = icmp ne i32 %11, 0, !dbg !12450
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !12452

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %rc, align 4, !dbg !12453
  %conv4 = sext i32 %12 to i64, !dbg !12453
  store i64 %conv4, i64* %retval, align 8, !dbg !12454
  br label %return, !dbg !12454

if.end5:                                          ; preds = %if.end
  %13 = load i64, i64* %count.addr, align 8, !dbg !12455
  store i64 %13, i64* %retval, align 8, !dbg !12456
  br label %return, !dbg !12456

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !12457
  ret i64 %14, !dbg !12457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_node_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12458 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12459, metadata !DIExpression()), !dbg !12460
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12461, metadata !DIExpression()), !dbg !12460
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12462, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12463, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12464, metadata !DIExpression()), !dbg !12466
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12466
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12466
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12466
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12466
  store i8* %2, i8** %__mptr, align 8, !dbg !12466
  br label %do.body, !dbg !12466

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12467

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12466
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12466
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12466
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12467
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12466
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12460
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12460
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12460
  %node_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 3, !dbg !12460
  %8 = load i64, i64* %node_name, align 8, !dbg !12460
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %8) #12, !dbg !12460
  %conv = sext i32 %call to i64, !dbg !12460
  ret i64 %conv, !dbg !12460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_port_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12469 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12472, metadata !DIExpression()), !dbg !12471
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12473, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12474, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12475, metadata !DIExpression()), !dbg !12477
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12477
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12477
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12477
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12477
  store i8* %2, i8** %__mptr, align 8, !dbg !12477
  br label %do.body, !dbg !12477

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12478

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12477
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12477
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12477
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12478
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12477
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12471
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12471
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12471
  %port_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 4, !dbg !12471
  %8 = load i64, i64* %port_name, align 8, !dbg !12471
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %8) #12, !dbg !12471
  %conv = sext i32 %call to i64, !dbg !12471
  ret i64 %conv, !dbg !12471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_port_id(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12480 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12481, metadata !DIExpression()), !dbg !12482
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12483, metadata !DIExpression()), !dbg !12482
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12484, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12485, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12486, metadata !DIExpression()), !dbg !12488
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12488
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12488
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12488
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12488
  store i8* %2, i8** %__mptr, align 8, !dbg !12488
  br label %do.body, !dbg !12488

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12489

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12488
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12488
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12488
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12489
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12488
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12482
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12482
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12482
  %port_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 5, !dbg !12482
  %8 = load i32, i32* %port_id, align 8, !dbg !12482
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i32 %8) #12, !dbg !12482
  %conv = sext i32 %call to i64, !dbg !12482
  ret i64 %conv, !dbg !12482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_roles(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12491 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12492, metadata !DIExpression()), !dbg !12493
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12494, metadata !DIExpression()), !dbg !12495
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12496, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12498, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12500, metadata !DIExpression()), !dbg !12502
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12502
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12502
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12502
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12502
  store i8* %2, i8** %__mptr, align 8, !dbg !12502
  br label %do.body, !dbg !12502

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12503

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12502
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12502
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12502
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12503
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12502
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12499
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12505
  %port_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 5, !dbg !12507
  %7 = load i32, i32* %port_id, align 8, !dbg !12507
  %cmp = icmp ne i32 %7, -1, !dbg !12508
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12509

land.lhs.true:                                    ; preds = %do.end
  %8 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12510
  %port_id1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %8, i32 0, i32 5, !dbg !12511
  %9 = load i32, i32* %port_id1, align 8, !dbg !12511
  %and = and i32 %9, 16777200, !dbg !12512
  %cmp2 = icmp eq i32 %and, 16777200, !dbg !12513
  br i1 %cmp2, label %if.then, label %if.else, !dbg !12514

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12515
  %port_id3 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 5, !dbg !12517
  %11 = load i32, i32* %port_id3, align 8, !dbg !12517
  %and4 = and i32 %11, 15, !dbg !12518
  switch i32 %and4, label %sw.default [
    i32 14, label %sw.bb
    i32 13, label %sw.bb5
    i32 12, label %sw.bb8
    i32 11, label %sw.bb11
    i32 10, label %sw.bb14
  ], !dbg !12519

sw.bb:                                            ; preds = %if.then
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !12520
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.144, i64 0, i64 0)) #12, !dbg !12522
  %conv = sext i32 %call to i64, !dbg !12522
  store i64 %conv, i64* %retval, align 8, !dbg !12523
  br label %return, !dbg !12523

sw.bb5:                                           ; preds = %if.then
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !12524
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %13, i64 30, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.145, i64 0, i64 0)) #12, !dbg !12525
  %conv7 = sext i32 %call6 to i64, !dbg !12525
  store i64 %conv7, i64* %retval, align 8, !dbg !12526
  br label %return, !dbg !12526

sw.bb8:                                           ; preds = %if.then
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !12527
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.146, i64 0, i64 0)) #12, !dbg !12528
  %conv10 = sext i32 %call9 to i64, !dbg !12528
  store i64 %conv10, i64* %retval, align 8, !dbg !12529
  br label %return, !dbg !12529

sw.bb11:                                          ; preds = %if.then
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !12530
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.147, i64 0, i64 0)) #12, !dbg !12531
  %conv13 = sext i32 %call12 to i64, !dbg !12531
  store i64 %conv13, i64* %retval, align 8, !dbg !12532
  br label %return, !dbg !12532

sw.bb14:                                          ; preds = %if.then
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !12533
  %call15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %16, i64 30, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.148, i64 0, i64 0)) #12, !dbg !12534
  %conv16 = sext i32 %call15 to i64, !dbg !12534
  store i64 %conv16, i64* %retval, align 8, !dbg !12535
  br label %return, !dbg !12535

sw.default:                                       ; preds = %if.then
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !12536
  %call17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.149, i64 0, i64 0)) #12, !dbg !12537
  %conv18 = sext i32 %call17 to i64, !dbg !12537
  store i64 %conv18, i64* %retval, align 8, !dbg !12538
  br label %return, !dbg !12538

if.else:                                          ; preds = %land.lhs.true, %do.end
  %18 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12539
  %roles = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %18, i32 0, i32 6, !dbg !12542
  %19 = load i32, i32* %roles, align 4, !dbg !12542
  %cmp19 = icmp eq i32 %19, 0, !dbg !12543
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !12544

if.then21:                                        ; preds = %if.else
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !12545
  %call22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %20, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !12546
  %conv23 = sext i32 %call22 to i64, !dbg !12546
  store i64 %conv23, i64* %retval, align 8, !dbg !12547
  br label %return, !dbg !12547

if.end:                                           ; preds = %if.else
  %21 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12548
  %roles24 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %21, i32 0, i32 6, !dbg !12549
  %22 = load i32, i32* %roles24, align 4, !dbg !12549
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !12550
  %call25 = call i64 @get_fc_port_roles_names(i32 %22, i8* %23) #12, !dbg !12551
  store i64 %call25, i64* %retval, align 8, !dbg !12552
  br label %return, !dbg !12552

return:                                           ; preds = %if.end, %if.then21, %sw.default, %sw.bb14, %sw.bb11, %sw.bb8, %sw.bb5, %sw.bb
  %24 = load i64, i64* %retval, align 8, !dbg !12553
  ret i64 %24, !dbg !12553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_fc_port_roles_names(i32 %table_key, i8* %buf) #0 !dbg !12554 {
entry:
  %table_key.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %prefix = alloca i8*, align 8
  %len = alloca i64, align 8
  %i = alloca i32, align 4
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !12555, metadata !DIExpression()), !dbg !12556
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12557, metadata !DIExpression()), !dbg !12556
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !12558, metadata !DIExpression()), !dbg !12556
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66, i64 0, i64 0), i8** %prefix, align 8, !dbg !12556
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12559, metadata !DIExpression()), !dbg !12556
  store i64 0, i64* %len, align 8, !dbg !12556
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12560, metadata !DIExpression()), !dbg !12556
  store i32 0, i32* %i, align 4, !dbg !12561
  br label %for.cond, !dbg !12561

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12563
  %conv = sext i32 %0 to i64, !dbg !12563
  %cmp = icmp ult i64 %conv, 7, !dbg !12563
  br i1 %cmp, label %for.body, label %for.end, !dbg !12561

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !12565
  %idxprom = sext i32 %1 to i64, !dbg !12565
  %arrayidx = getelementptr [7 x %struct.anon.101], [7 x %struct.anon.101]* @fc_port_role_names, i64 0, i64 %idxprom, !dbg !12565
  %value = getelementptr inbounds %struct.anon.101, %struct.anon.101* %arrayidx, i32 0, i32 0, !dbg !12565
  %2 = load i32, i32* %value, align 16, !dbg !12565
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !12565
  %and = and i32 %2, %3, !dbg !12565
  %tobool = icmp ne i32 %and, 0, !dbg !12565
  br i1 %tobool, label %if.then, label %if.end, !dbg !12568

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !12569
  %5 = load i64, i64* %len, align 8, !dbg !12569
  %add.ptr = getelementptr i8, i8* %4, i64 %5, !dbg !12569
  %6 = load i8*, i8** %prefix, align 8, !dbg !12569
  %7 = load i32, i32* %i, align 4, !dbg !12569
  %idxprom2 = sext i32 %7 to i64, !dbg !12569
  %arrayidx3 = getelementptr [7 x %struct.anon.101], [7 x %struct.anon.101]* @fc_port_role_names, i64 0, i64 %idxprom2, !dbg !12569
  %name = getelementptr inbounds %struct.anon.101, %struct.anon.101* %arrayidx3, i32 0, i32 1, !dbg !12569
  %8 = load i8*, i8** %name, align 8, !dbg !12569
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8* %6, i8* %8) #12, !dbg !12569
  %conv4 = sext i32 %call to i64, !dbg !12569
  %9 = load i64, i64* %len, align 8, !dbg !12569
  %add = add i64 %9, %conv4, !dbg !12569
  store i64 %add, i64* %len, align 8, !dbg !12569
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i8** %prefix, align 8, !dbg !12569
  br label %if.end, !dbg !12569

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12568

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !12563
  %inc = add i32 %10, 1, !dbg !12563
  store i32 %inc, i32* %i, align 4, !dbg !12563
  br label %for.cond, !dbg !12563, !llvm.loop !12571

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !12556
  %12 = load i64, i64* %len, align 8, !dbg !12556
  %add.ptr5 = getelementptr i8, i8* %11, i64 %12, !dbg !12556
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !12556
  %conv7 = sext i32 %call6 to i64, !dbg !12556
  %13 = load i64, i64* %len, align 8, !dbg !12556
  %add8 = add i64 %13, %conv7, !dbg !12556
  store i64 %add8, i64* %len, align 8, !dbg !12556
  %14 = load i64, i64* %len, align 8, !dbg !12556
  ret i64 %14, !dbg !12556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_port_state(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12572 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12573, metadata !DIExpression()), !dbg !12574
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12575, metadata !DIExpression()), !dbg !12574
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12576, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12577, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12578, metadata !DIExpression()), !dbg !12580
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12580
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12580
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12580
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12580
  store i8* %2, i8** %__mptr, align 8, !dbg !12580
  br label %do.body, !dbg !12580

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12581

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12580
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12580
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12580
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12581
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12580
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12574
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12583, metadata !DIExpression()), !dbg !12574
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12574
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 7, !dbg !12574
  %7 = load i32, i32* %port_state, align 8, !dbg !12574
  %call = call i8* @get_fc_port_state_name(i32 %7) #12, !dbg !12574
  store i8* %call, i8** %name, align 8, !dbg !12574
  %8 = load i8*, i8** %name, align 8, !dbg !12584
  %tobool = icmp ne i8* %8, null, !dbg !12584
  br i1 %tobool, label %if.end, label %if.then, !dbg !12574

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !12584
  br label %return, !dbg !12584

if.end:                                           ; preds = %do.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12574
  %10 = load i8*, i8** %name, align 8, !dbg !12574
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %9, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %10) #12, !dbg !12574
  %conv = sext i32 %call1 to i64, !dbg !12574
  store i64 %conv, i64* %retval, align 8, !dbg !12574
  br label %return, !dbg !12574

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !12574
  ret i64 %11, !dbg !12574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_scsi_target_id(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12586 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12587, metadata !DIExpression()), !dbg !12588
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12589, metadata !DIExpression()), !dbg !12588
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12590, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12591, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12592, metadata !DIExpression()), !dbg !12594
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12594
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12594
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12594
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12594
  store i8* %2, i8** %__mptr, align 8, !dbg !12594
  br label %do.body, !dbg !12594

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12595

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12594
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12594
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12594
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12595
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12594
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12588
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12588
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12588
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 8, !dbg !12588
  %8 = load i32, i32* %scsi_target_id, align 4, !dbg !12588
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0), i32 %8) #12, !dbg !12588
  %conv = sext i32 %call to i64, !dbg !12588
  ret i64 %conv, !dbg !12588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_rport_fast_io_fail_tmo(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12597 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12598, metadata !DIExpression()), !dbg !12599
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12600, metadata !DIExpression()), !dbg !12601
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12602, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12604, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12606, metadata !DIExpression()), !dbg !12608
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12608
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12608
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12608
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12608
  store i8* %2, i8** %__mptr, align 8, !dbg !12608
  br label %do.body, !dbg !12608

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12609

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12608
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12608
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12608
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12609
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12608
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12605
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12611
  %fast_io_fail_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 9, !dbg !12613
  %7 = load i32, i32* %fast_io_fail_tmo, align 8, !dbg !12613
  %cmp = icmp eq i32 %7, -1, !dbg !12614
  br i1 %cmp, label %if.then, label %if.end, !dbg !12615

if.then:                                          ; preds = %do.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12616
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i64 0, i64 0)) #12, !dbg !12617
  %conv = sext i32 %call to i64, !dbg !12617
  store i64 %conv, i64* %retval, align 8, !dbg !12618
  br label %return, !dbg !12618

if.end:                                           ; preds = %do.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12619
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12620
  %fast_io_fail_tmo1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 9, !dbg !12621
  %11 = load i32, i32* %fast_io_fail_tmo1, align 8, !dbg !12621
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %9, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0), i32 %11) #12, !dbg !12622
  %conv3 = sext i32 %call2 to i64, !dbg !12622
  store i64 %conv3, i64* %retval, align 8, !dbg !12623
  br label %return, !dbg !12623

return:                                           ; preds = %if.end, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !12624
  ret i64 %12, !dbg !12624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_rport_fast_io_fail_tmo(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12625 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %val = alloca i32, align 4
  %cp = alloca i8*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12626, metadata !DIExpression()), !dbg !12627
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12628, metadata !DIExpression()), !dbg !12629
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12630, metadata !DIExpression()), !dbg !12631
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12632, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.declare(metadata i32* %val, metadata !12634, metadata !DIExpression()), !dbg !12635
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12636, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !12638, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12640, metadata !DIExpression()), !dbg !12642
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12642
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12642
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12642
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12642
  store i8* %2, i8** %__mptr, align 8, !dbg !12642
  br label %do.body, !dbg !12642

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12643

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12642
  %add.ptr = getelementptr i8, i8* %3, i64 -96, !dbg !12642
  %4 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !12642
  store %struct.fc_rport* %4, %struct.fc_rport** %tmp, align 8, !dbg !12643
  %5 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !12642
  store %struct.fc_rport* %5, %struct.fc_rport** %rport, align 8, !dbg !12639
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12645
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 7, !dbg !12647
  %7 = load i32, i32* %port_state, align 8, !dbg !12647
  %cmp = icmp eq i32 %7, 4, !dbg !12648
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12649

lor.lhs.false:                                    ; preds = %do.end
  %8 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12650
  %port_state1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %8, i32 0, i32 7, !dbg !12651
  %9 = load i32, i32* %port_state1, align 8, !dbg !12651
  %cmp2 = icmp eq i32 %9, 10, !dbg !12652
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !12653

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12654
  %port_state4 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %10, i32 0, i32 7, !dbg !12655
  %11 = load i32, i32* %port_state4, align 8, !dbg !12655
  %cmp5 = icmp eq i32 %11, 1, !dbg !12656
  br i1 %cmp5, label %if.then, label %if.end, !dbg !12657

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %do.end
  store i64 -16, i64* %retval, align 8, !dbg !12658
  br label %return, !dbg !12658

if.end:                                           ; preds = %lor.lhs.false3
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !12659
  %call = call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i64 0, i64 0), i64 3) #12, !dbg !12661
  %cmp6 = icmp eq i32 %call, 0, !dbg !12662
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !12663

if.then7:                                         ; preds = %if.end
  %13 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12664
  %fast_io_fail_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %13, i32 0, i32 9, !dbg !12665
  store i32 -1, i32* %fast_io_fail_tmo, align 8, !dbg !12666
  br label %if.end26, !dbg !12664

if.else:                                          ; preds = %if.end
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !12667
  %call8 = call i64 @simple_strtoul(i8* %14, i8** %cp, i32 0) #12, !dbg !12669
  %conv = trunc i64 %call8 to i32, !dbg !12669
  store i32 %conv, i32* %val, align 4, !dbg !12670
  %15 = load i8*, i8** %cp, align 8, !dbg !12671
  %16 = load i8, i8* %15, align 1, !dbg !12673
  %conv9 = sext i8 %16 to i32, !dbg !12673
  %tobool = icmp ne i32 %conv9, 0, !dbg !12673
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false13, !dbg !12674

land.lhs.true:                                    ; preds = %if.else
  %17 = load i8*, i8** %cp, align 8, !dbg !12675
  %18 = load i8, i8* %17, align 1, !dbg !12676
  %conv10 = sext i8 %18 to i32, !dbg !12676
  %cmp11 = icmp ne i32 %conv10, 10, !dbg !12677
  br i1 %cmp11, label %if.then16, label %lor.lhs.false13, !dbg !12678

lor.lhs.false13:                                  ; preds = %land.lhs.true, %if.else
  %19 = load i32, i32* %val, align 4, !dbg !12679
  %cmp14 = icmp slt i32 %19, 0, !dbg !12680
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12681

if.then16:                                        ; preds = %lor.lhs.false13, %land.lhs.true
  store i64 -22, i64* %retval, align 8, !dbg !12682
  br label %return, !dbg !12682

if.end17:                                         ; preds = %lor.lhs.false13
  %20 = load i32, i32* %val, align 4, !dbg !12683
  %21 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12685
  %dev_loss_tmo = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %21, i32 0, i32 2, !dbg !12686
  %22 = load i32, i32* %dev_loss_tmo, align 8, !dbg !12686
  %cmp18 = icmp uge i32 %20, %22, !dbg !12687
  br i1 %cmp18, label %if.then23, label %lor.lhs.false20, !dbg !12688

lor.lhs.false20:                                  ; preds = %if.end17
  %23 = load i32, i32* %val, align 4, !dbg !12689
  %cmp21 = icmp sgt i32 %23, 600, !dbg !12690
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !12691

if.then23:                                        ; preds = %lor.lhs.false20, %if.end17
  store i64 -22, i64* %retval, align 8, !dbg !12692
  br label %return, !dbg !12692

if.end24:                                         ; preds = %lor.lhs.false20
  %24 = load i32, i32* %val, align 4, !dbg !12693
  %25 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !12694
  %fast_io_fail_tmo25 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %25, i32 0, i32 9, !dbg !12695
  store i32 %24, i32* %fast_io_fail_tmo25, align 8, !dbg !12696
  br label %if.end26

if.end26:                                         ; preds = %if.end24, %if.then7
  %26 = load i64, i64* %count.addr, align 8, !dbg !12697
  store i64 %26, i64* %retval, align 8, !dbg !12698
  br label %return, !dbg !12698

return:                                           ; preds = %if.end26, %if.then23, %if.then16, %if.then
  %27 = load i64, i64* %retval, align 8, !dbg !12699
  ret i64 %27, !dbg !12699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_vport_state(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12700 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12701, metadata !DIExpression()), !dbg !12702
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12703, metadata !DIExpression()), !dbg !12702
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12704, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12705, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12706, metadata !DIExpression()), !dbg !12708
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12708
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12708
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12708
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12708
  store i8* %2, i8** %__mptr, align 8, !dbg !12708
  br label %do.body, !dbg !12708

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12709

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12708
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12708
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12708
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12709
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12708
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12702
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12711, metadata !DIExpression()), !dbg !12702
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12702
  %vport_state = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 0, !dbg !12702
  %7 = load i32, i32* %vport_state, align 8, !dbg !12702
  %call = call i8* @get_fc_vport_state_name(i32 %7) #12, !dbg !12702
  store i8* %call, i8** %name, align 8, !dbg !12702
  %8 = load i8*, i8** %name, align 8, !dbg !12712
  %tobool = icmp ne i8* %8, null, !dbg !12712
  br i1 %tobool, label %if.end, label %if.then, !dbg !12702

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !12712
  br label %return, !dbg !12712

if.end:                                           ; preds = %do.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12702
  %10 = load i8*, i8** %name, align 8, !dbg !12702
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %9, i64 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %10) #12, !dbg !12702
  %conv = sext i32 %call1 to i64, !dbg !12702
  store i64 %conv, i64* %retval, align 8, !dbg !12702
  br label %return, !dbg !12702

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !12702
  ret i64 %11, !dbg !12702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_fc_vport_state_name(i32 %table_key) #0 !dbg !12714 {
entry:
  %table_key.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %name = alloca i8*, align 8
  store i32 %table_key, i32* %table_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table_key.addr, metadata !12717, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12719, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12720, metadata !DIExpression()), !dbg !12718
  store i8* null, i8** %name, align 8, !dbg !12718
  store i32 0, i32* %i, align 4, !dbg !12721
  br label %for.cond, !dbg !12721

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12723
  %conv = sext i32 %0 to i64, !dbg !12723
  %cmp = icmp ult i64 %conv, 10, !dbg !12723
  br i1 %cmp, label %for.body, label %for.end, !dbg !12721

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !12725
  %idxprom = sext i32 %1 to i64, !dbg !12725
  %arrayidx = getelementptr [10 x %struct.anon.102], [10 x %struct.anon.102]* @fc_vport_state_names, i64 0, i64 %idxprom, !dbg !12725
  %value = getelementptr inbounds %struct.anon.102, %struct.anon.102* %arrayidx, i32 0, i32 0, !dbg !12725
  %2 = load i32, i32* %value, align 16, !dbg !12725
  %3 = load i32, i32* %table_key.addr, align 4, !dbg !12725
  %cmp2 = icmp eq i32 %2, %3, !dbg !12725
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12728

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !12729
  %idxprom4 = sext i32 %4 to i64, !dbg !12729
  %arrayidx5 = getelementptr [10 x %struct.anon.102], [10 x %struct.anon.102]* @fc_vport_state_names, i64 0, i64 %idxprom4, !dbg !12729
  %name6 = getelementptr inbounds %struct.anon.102, %struct.anon.102* %arrayidx5, i32 0, i32 1, !dbg !12729
  %5 = load i8*, i8** %name6, align 8, !dbg !12729
  store i8* %5, i8** %name, align 8, !dbg !12729
  br label %for.end, !dbg !12729

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12728

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !12723
  %inc = add i32 %6, 1, !dbg !12723
  store i32 %inc, i32* %i, align 4, !dbg !12723
  br label %for.cond, !dbg !12723, !llvm.loop !12731

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i8*, i8** %name, align 8, !dbg !12718
  ret i8* %7, !dbg !12718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_vport_last_state(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12732 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12733, metadata !DIExpression()), !dbg !12734
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12735, metadata !DIExpression()), !dbg !12734
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12736, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12737, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12738, metadata !DIExpression()), !dbg !12740
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12740
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12740
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12740
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12740
  store i8* %2, i8** %__mptr, align 8, !dbg !12740
  br label %do.body, !dbg !12740

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12741

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12740
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12740
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12740
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12741
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12740
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12734
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12743, metadata !DIExpression()), !dbg !12734
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12734
  %vport_last_state = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 1, !dbg !12734
  %7 = load i32, i32* %vport_last_state, align 4, !dbg !12734
  %call = call i8* @get_fc_vport_state_name(i32 %7) #12, !dbg !12734
  store i8* %call, i8** %name, align 8, !dbg !12734
  %8 = load i8*, i8** %name, align 8, !dbg !12744
  %tobool = icmp ne i8* %8, null, !dbg !12744
  br i1 %tobool, label %if.end, label %if.then, !dbg !12734

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !12744
  br label %return, !dbg !12744

if.end:                                           ; preds = %do.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12734
  %10 = load i8*, i8** %name, align 8, !dbg !12734
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %9, i64 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %10) #12, !dbg !12734
  %conv = sext i32 %call1 to i64, !dbg !12734
  store i64 %conv, i64* %retval, align 8, !dbg !12734
  br label %return, !dbg !12734

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !12734
  ret i64 %11, !dbg !12734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_node_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12746 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12747, metadata !DIExpression()), !dbg !12748
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12749, metadata !DIExpression()), !dbg !12748
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12750, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12751, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12752, metadata !DIExpression()), !dbg !12754
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12754
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12754
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12754
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12754
  store i8* %2, i8** %__mptr, align 8, !dbg !12754
  br label %do.body, !dbg !12754

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12755

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12754
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12754
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12754
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12755
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12754
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12748
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12748
  %7 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12748
  %node_name = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %7, i32 0, i32 2, !dbg !12748
  %8 = load i64, i64* %node_name, align 8, !dbg !12748
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %8) #12, !dbg !12748
  %conv = sext i32 %call to i64, !dbg !12748
  ret i64 %conv, !dbg !12748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_port_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12757 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12758, metadata !DIExpression()), !dbg !12759
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12760, metadata !DIExpression()), !dbg !12759
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12761, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12762, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12763, metadata !DIExpression()), !dbg !12765
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12765
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12765
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12765
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12765
  store i8* %2, i8** %__mptr, align 8, !dbg !12765
  br label %do.body, !dbg !12765

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12766

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12765
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12765
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12765
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12766
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12765
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12759
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12759
  %7 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12759
  %port_name = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %7, i32 0, i32 3, !dbg !12759
  %8 = load i64, i64* %port_name, align 8, !dbg !12759
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 %8) #12, !dbg !12759
  %conv = sext i32 %call to i64, !dbg !12759
  ret i64 %conv, !dbg !12759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_roles(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12768 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12769, metadata !DIExpression()), !dbg !12770
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12771, metadata !DIExpression()), !dbg !12772
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12773, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12775, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12777, metadata !DIExpression()), !dbg !12779
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12779
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12779
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12779
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12779
  store i8* %2, i8** %__mptr, align 8, !dbg !12779
  br label %do.body, !dbg !12779

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12780

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12779
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12779
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12779
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12780
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12779
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12776
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12782
  %roles = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 4, !dbg !12784
  %7 = load i32, i32* %roles, align 8, !dbg !12784
  %cmp = icmp eq i32 %7, 0, !dbg !12785
  br i1 %cmp, label %if.then, label %if.end, !dbg !12786

if.then:                                          ; preds = %do.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12787
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !12788
  %conv = sext i32 %call to i64, !dbg !12788
  store i64 %conv, i64* %retval, align 8, !dbg !12789
  br label %return, !dbg !12789

if.end:                                           ; preds = %do.end
  %9 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12790
  %roles1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %9, i32 0, i32 4, !dbg !12791
  %10 = load i32, i32* %roles1, align 8, !dbg !12791
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !12792
  %call2 = call i64 @get_fc_port_roles_names(i32 %10, i8* %11) #12, !dbg !12793
  store i64 %call2, i64* %retval, align 8, !dbg !12794
  br label %return, !dbg !12794

return:                                           ; preds = %if.end, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !12795
  ret i64 %12, !dbg !12795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_vport_type(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12796 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12797, metadata !DIExpression()), !dbg !12798
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12799, metadata !DIExpression()), !dbg !12798
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12800, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12801, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12802, metadata !DIExpression()), !dbg !12804
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12804
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12804
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12804
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12804
  store i8* %2, i8** %__mptr, align 8, !dbg !12804
  br label %do.body, !dbg !12804

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12805

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12804
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12804
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12804
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12805
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12804
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12798
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12807, metadata !DIExpression()), !dbg !12798
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12798
  %vport_type = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 6, !dbg !12798
  %7 = load i32, i32* %vport_type, align 8, !dbg !12798
  %call = call i8* @get_fc_port_type_name(i32 %7) #12, !dbg !12798
  store i8* %call, i8** %name, align 8, !dbg !12798
  %8 = load i8*, i8** %name, align 8, !dbg !12808
  %tobool = icmp ne i8* %8, null, !dbg !12808
  br i1 %tobool, label %if.end, label %if.then, !dbg !12798

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !12808
  br label %return, !dbg !12808

if.end:                                           ; preds = %do.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12798
  %10 = load i8*, i8** %name, align 8, !dbg !12798
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %9, i64 50, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %10) #12, !dbg !12798
  %conv = sext i32 %call1 to i64, !dbg !12798
  store i64 %conv, i64* %retval, align 8, !dbg !12798
  br label %return, !dbg !12798

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !12798
  ret i64 %11, !dbg !12798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_fc_vport_symbolic_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12810 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12811, metadata !DIExpression()), !dbg !12812
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12813, metadata !DIExpression()), !dbg !12812
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12814, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12815, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12816, metadata !DIExpression()), !dbg !12818
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12818
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12818
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12818
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12818
  store i8* %2, i8** %__mptr, align 8, !dbg !12818
  br label %do.body, !dbg !12818

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12819

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12818
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12818
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12818
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12819
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12818
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12812
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12812
  %7 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12812
  %symbolic_name = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %7, i32 0, i32 7, !dbg !12812
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %symbolic_name, i64 0, i64 0, !dbg !12812
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12812
  %conv = sext i32 %call to i64, !dbg !12812
  ret i64 %conv, !dbg !12812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_vport_symbolic_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12821 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.fc_internal*, align 8
  %cnt = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12824, metadata !DIExpression()), !dbg !12823
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12825, metadata !DIExpression()), !dbg !12823
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12826, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12827, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12828, metadata !DIExpression()), !dbg !12830
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12830
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12830
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12830
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12830
  store i8* %2, i8** %__mptr, align 8, !dbg !12830
  br label %do.body, !dbg !12830

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12831

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12830
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12830
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12830
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12831
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12830
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12823
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12833, metadata !DIExpression()), !dbg !12823
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12823
  %shost1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 9, !dbg !12823
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost1, align 8, !dbg !12823
  store %struct.Scsi_Host* %7, %struct.Scsi_Host** %shost, align 8, !dbg !12823
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !12834, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !12835, metadata !DIExpression()), !dbg !12837
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12837
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !12837
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !12837
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !12837
  store i8* %10, i8** %__mptr2, align 8, !dbg !12837
  br label %do.body3, !dbg !12837

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !12838

do.end4:                                          ; preds = %do.body3
  %11 = load i8*, i8** %__mptr2, align 8, !dbg !12837
  %add.ptr6 = getelementptr i8, i8* %11, i64 0, !dbg !12837
  %12 = bitcast i8* %add.ptr6 to %struct.fc_internal*, !dbg !12837
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp5, align 8, !dbg !12838
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp5, align 8, !dbg !12837
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !12823
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !12840, metadata !DIExpression()), !dbg !12823
  %14 = load i64, i64* %count.addr, align 8, !dbg !12823
  %conv = trunc i64 %14 to i32, !dbg !12823
  store i32 %conv, i32* %cnt, align 4, !dbg !12823
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !12841
  %16 = load i32, i32* %cnt, align 4, !dbg !12841
  %sub = sub i32 %16, 1, !dbg !12841
  %idxprom = zext i32 %sub to i64, !dbg !12841
  %arrayidx = getelementptr i8, i8* %15, i64 %idxprom, !dbg !12841
  %17 = load i8, i8* %arrayidx, align 1, !dbg !12841
  %conv7 = sext i8 %17 to i32, !dbg !12841
  %cmp = icmp eq i32 %conv7, 10, !dbg !12841
  br i1 %cmp, label %if.then, label %if.end, !dbg !12823

if.then:                                          ; preds = %do.end4
  %18 = load i32, i32* %cnt, align 4, !dbg !12841
  %dec = add i32 %18, -1, !dbg !12841
  store i32 %dec, i32* %cnt, align 4, !dbg !12841
  br label %if.end, !dbg !12841

if.end:                                           ; preds = %if.then, %do.end4
  %19 = load i32, i32* %cnt, align 4, !dbg !12843
  %cmp9 = icmp ugt i32 %19, 63, !dbg !12843
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !12823

if.then11:                                        ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !12843
  br label %return, !dbg !12843

if.end12:                                         ; preds = %if.end
  %20 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12823
  %symbolic_name = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %20, i32 0, i32 7, !dbg !12823
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %symbolic_name, i64 0, i64 0, !dbg !12823
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !12823
  %22 = load i32, i32* %cnt, align 4, !dbg !12823
  %conv13 = zext i32 %22 to i64, !dbg !12823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 1 %21, i64 %conv13, i1 false), !dbg !12823
  %23 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !12823
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %23, i32 0, i32 1, !dbg !12823
  %24 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !12823
  %set_vport_symbolic_name = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %24, i32 0, i32 18, !dbg !12823
  %25 = load void (%struct.fc_vport*)*, void (%struct.fc_vport*)** %set_vport_symbolic_name, align 8, !dbg !12823
  %26 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12823
  call void %25(%struct.fc_vport* %26) #12, !dbg !12823
  %27 = load i64, i64* %count.addr, align 8, !dbg !12823
  store i64 %27, i64* %retval, align 8, !dbg !12823
  br label %return, !dbg !12823

return:                                           ; preds = %if.end12, %if.then11
  %28 = load i64, i64* %retval, align 8, !dbg !12823
  ret i64 %28, !dbg !12823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_vport_delete(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12845 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !7624, metadata !DIExpression()), !dbg !12846
  %flags.addr.i34 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i34, metadata !7631, metadata !DIExpression()), !dbg !12848
  %tmp.i35 = alloca i32, align 4
  %tmp8.i36 = alloca i32, align 4
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !7624, metadata !DIExpression()), !dbg !12849
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !12853
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !12854
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12863, metadata !DIExpression()), !dbg !12864
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12865, metadata !DIExpression()), !dbg !12866
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12867, metadata !DIExpression()), !dbg !12868
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12869, metadata !DIExpression()), !dbg !12870
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12871, metadata !DIExpression()), !dbg !12873
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12873
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12873
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12873
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12873
  store i8* %2, i8** %__mptr, align 8, !dbg !12873
  br label %do.body, !dbg !12873

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12874

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12873
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12873
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12873
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12874
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12873
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12870
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12876, metadata !DIExpression()), !dbg !12877
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12878
  %shost1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 9, !dbg !12878
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost1, align 8, !dbg !12878
  store %struct.Scsi_Host* %7, %struct.Scsi_Host** %shost, align 8, !dbg !12877
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12879, metadata !DIExpression()), !dbg !12880
  br label %do.body2, !dbg !12881

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !12882

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12883, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12886, metadata !DIExpression()), !dbg !12885
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12885
  %conv = zext i1 %cmp to i32, !dbg !12885
  store i32 1, i32* %tmp4, align 4, !dbg !12885
  %8 = load i32, i32* %tmp4, align 4, !dbg !12885
  br label %do.body5, !dbg !12887

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !12888

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !12889

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !12891, metadata !DIExpression()), !dbg !12894
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !12895, metadata !DIExpression()), !dbg !12894
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !12894
  %conv11 = zext i1 %cmp10 to i32, !dbg !12894
  store i32 1, i32* %tmp12, align 4, !dbg !12894
  %9 = load i32, i32* %tmp12, align 4, !dbg !12894
  %call = call i64 @arch_local_irq_save() #12, !dbg !12896
  store i64 %call, i64* %flags, align 8, !dbg !12896
  br label %do.end13, !dbg !12896

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !12889

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !12888

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12897, !srcloc !12898
  br label %do.body16, !dbg !12897

do.body16:                                        ; preds = %do.body15
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12899
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 4, !dbg !12899
  %11 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !12899
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12900
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !12901
  %rlock.i = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !12901
  br label %do.end18, !dbg !12899

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !12897

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !12888

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12887

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12882

do.end22:                                         ; preds = %do.end21
  %14 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12902
  %flags23 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %14, i32 0, i32 12, !dbg !12903
  %15 = load i8, i8* %flags23, align 8, !dbg !12903
  %conv24 = zext i8 %15 to i32, !dbg !12902
  %and = and i32 %conv24, 7, !dbg !12904
  %tobool = icmp ne i32 %and, 0, !dbg !12904
  br i1 %tobool, label %if.then, label %if.end, !dbg !12905

if.then:                                          ; preds = %do.end22
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12906
  %host_lock25 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 4, !dbg !12907
  %17 = load %struct.spinlock*, %struct.spinlock** %host_lock25, align 8, !dbg !12907
  %18 = load i64, i64* %flags, align 8, !dbg !12908
  store %struct.spinlock* %17, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !12909
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !12909
  store i32 1, i32* %tmp.i, align 4, !dbg !12909
  %19 = load i32, i32* %tmp.i, align 4, !dbg !12909
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !12910
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !12910
  store i32 1, i32* %tmp8.i, align 4, !dbg !12910
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !12910
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !12911
  call void @arch_local_irq_restore(i64 %21) #11, !dbg !12911
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12912, !srcloc !7797
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !12913
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !12913
  %rlock.i32 = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !12913
  store i64 -16, i64* %retval, align 8, !dbg !12914
  br label %return, !dbg !12914

if.end:                                           ; preds = %do.end22
  %24 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12915
  %flags26 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %24, i32 0, i32 12, !dbg !12916
  %25 = load i8, i8* %flags26, align 8, !dbg !12917
  %conv27 = zext i8 %25 to i32, !dbg !12917
  %or = or i32 %conv27, 2, !dbg !12917
  %conv28 = trunc i32 %or to i8, !dbg !12917
  store i8 %conv28, i8* %flags26, align 8, !dbg !12917
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12918
  %host_lock29 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %26, i32 0, i32 4, !dbg !12919
  %27 = load %struct.spinlock*, %struct.spinlock** %host_lock29, align 8, !dbg !12919
  %28 = load i64, i64* %flags, align 8, !dbg !12920
  store %struct.spinlock* %27, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %28, i64* %flags.addr.i34, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !12921
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !12921
  store i32 1, i32* %tmp.i35, align 4, !dbg !12921
  %29 = load i32, i32* %tmp.i35, align 4, !dbg !12921
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !12922
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !12922
  store i32 1, i32* %tmp8.i36, align 4, !dbg !12922
  %30 = load i32, i32* %tmp8.i36, align 4, !dbg !12922
  %31 = load i64, i64* %flags.addr.i34, align 8, !dbg !12923
  call void @arch_local_irq_restore(i64 %31) #11, !dbg !12923
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12924, !srcloc !7797
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !12925
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !12925
  %rlock.i37 = bitcast %union.anon.0* %33 to %struct.raw_spinlock*, !dbg !12925
  %34 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12926
  %35 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12927
  %vport_delete_work = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %35, i32 0, i32 15, !dbg !12928
  %call30 = call i32 @fc_queue_work(%struct.Scsi_Host* %34, %struct.work_struct* %vport_delete_work) #12, !dbg !12929
  %36 = load i64, i64* %count.addr, align 8, !dbg !12930
  store i64 %36, i64* %retval, align 8, !dbg !12931
  br label %return, !dbg !12931

return:                                           ; preds = %if.end, %if.then
  %37 = load i64, i64* %retval, align 8, !dbg !12932
  ret i64 %37, !dbg !12932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_fc_vport_disable(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12933 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.fc_internal*, align 8
  %stat = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12934, metadata !DIExpression()), !dbg !12935
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12936, metadata !DIExpression()), !dbg !12937
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12938, metadata !DIExpression()), !dbg !12939
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12940, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !12942, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12944, metadata !DIExpression()), !dbg !12946
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12946
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12946
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12946
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12946
  store i8* %2, i8** %__mptr, align 8, !dbg !12946
  br label %do.body, !dbg !12946

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12947

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12946
  %add.ptr = getelementptr i8, i8* %3, i64 -152, !dbg !12946
  %4 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !12946
  store %struct.fc_vport* %4, %struct.fc_vport** %tmp, align 8, !dbg !12947
  %5 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !12946
  store %struct.fc_vport* %5, %struct.fc_vport** %vport, align 8, !dbg !12943
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12949, metadata !DIExpression()), !dbg !12950
  %6 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12951
  %shost1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %6, i32 0, i32 9, !dbg !12951
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost1, align 8, !dbg !12951
  store %struct.Scsi_Host* %7, %struct.Scsi_Host** %shost, align 8, !dbg !12950
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !12952, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !12954, metadata !DIExpression()), !dbg !12956
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12956
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !12956
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !12956
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !12956
  store i8* %10, i8** %__mptr2, align 8, !dbg !12956
  br label %do.body3, !dbg !12956

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !12957

do.end4:                                          ; preds = %do.body3
  %11 = load i8*, i8** %__mptr2, align 8, !dbg !12956
  %add.ptr6 = getelementptr i8, i8* %11, i64 0, !dbg !12956
  %12 = bitcast i8* %add.ptr6 to %struct.fc_internal*, !dbg !12956
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp5, align 8, !dbg !12957
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp5, align 8, !dbg !12956
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !12953
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !12959, metadata !DIExpression()), !dbg !12960
  %14 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12961
  %flags = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %14, i32 0, i32 12, !dbg !12963
  %15 = load i8, i8* %flags, align 8, !dbg !12963
  %conv = zext i8 %15 to i32, !dbg !12961
  %and = and i32 %conv, 7, !dbg !12964
  %tobool = icmp ne i32 %and, 0, !dbg !12964
  br i1 %tobool, label %if.then, label %if.end, !dbg !12965

if.then:                                          ; preds = %do.end4
  store i64 -16, i64* %retval, align 8, !dbg !12966
  br label %return, !dbg !12966

if.end:                                           ; preds = %do.end4
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !12967
  %17 = load i8, i8* %16, align 1, !dbg !12969
  %conv7 = sext i8 %17 to i32, !dbg !12969
  %cmp = icmp eq i32 %conv7, 48, !dbg !12970
  br i1 %cmp, label %if.then9, label %if.else, !dbg !12971

if.then9:                                         ; preds = %if.end
  %18 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12972
  %vport_state = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %18, i32 0, i32 0, !dbg !12975
  %19 = load i32, i32* %vport_state, align 8, !dbg !12975
  %cmp10 = icmp ne i32 %19, 2, !dbg !12976
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !12977

if.then12:                                        ; preds = %if.then9
  store i64 -114, i64* %retval, align 8, !dbg !12978
  br label %return, !dbg !12978

if.end13:                                         ; preds = %if.then9
  br label %if.end25, !dbg !12979

if.else:                                          ; preds = %if.end
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !12980
  %21 = load i8, i8* %20, align 1, !dbg !12982
  %conv14 = sext i8 %21 to i32, !dbg !12982
  %cmp15 = icmp eq i32 %conv14, 49, !dbg !12983
  br i1 %cmp15, label %if.then17, label %if.else23, !dbg !12984

if.then17:                                        ; preds = %if.else
  %22 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12985
  %vport_state18 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %22, i32 0, i32 0, !dbg !12988
  %23 = load i32, i32* %vport_state18, align 8, !dbg !12988
  %cmp19 = icmp eq i32 %23, 2, !dbg !12989
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !12990

if.then21:                                        ; preds = %if.then17
  store i64 -114, i64* %retval, align 8, !dbg !12991
  br label %return, !dbg !12991

if.end22:                                         ; preds = %if.then17
  br label %if.end24, !dbg !12992

if.else23:                                        ; preds = %if.else
  store i64 -22, i64* %retval, align 8, !dbg !12993
  br label %return, !dbg !12993

if.end24:                                         ; preds = %if.end22
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end13
  %24 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !12994
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %24, i32 0, i32 1, !dbg !12995
  %25 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !12995
  %vport_disable = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %25, i32 0, i32 20, !dbg !12996
  %26 = load i32 (%struct.fc_vport*, i1)*, i32 (%struct.fc_vport*, i1)** %vport_disable, align 8, !dbg !12996
  %27 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !12997
  %28 = load i8*, i8** %buf.addr, align 8, !dbg !12998
  %29 = load i8, i8* %28, align 1, !dbg !12999
  %conv26 = sext i8 %29 to i32, !dbg !12999
  %cmp27 = icmp eq i32 %conv26, 48, !dbg !13000
  %30 = zext i1 %cmp27 to i64, !dbg !13001
  %cond = select i1 %cmp27, i32 0, i32 1, !dbg !13001
  %tobool29 = icmp ne i32 %cond, 0, !dbg !13002
  %call = call i32 %26(%struct.fc_vport* %27, i1 zeroext %tobool29) #12, !dbg !12994
  store i32 %call, i32* %stat, align 4, !dbg !13003
  %31 = load i32, i32* %stat, align 4, !dbg !13004
  %tobool30 = icmp ne i32 %31, 0, !dbg !13004
  br i1 %tobool30, label %cond.true, label %cond.false, !dbg !13004

cond.true:                                        ; preds = %if.end25
  %32 = load i32, i32* %stat, align 4, !dbg !13005
  %conv31 = sext i32 %32 to i64, !dbg !13005
  br label %cond.end, !dbg !13004

cond.false:                                       ; preds = %if.end25
  %33 = load i64, i64* %count.addr, align 8, !dbg !13006
  br label %cond.end, !dbg !13004

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond32 = phi i64 [ %conv31, %cond.true ], [ %33, %cond.false ], !dbg !13004
  store i64 %cond32, i64* %retval, align 8, !dbg !13007
  br label %return, !dbg !13007

return:                                           ; preds = %cond.end, %if.else23, %if.then21, %if.then12, %if.then
  %34 = load i64, i64* %retval, align 8, !dbg !13008
  ret i64 %34, !dbg !13008
}

; Function Attrs: noredzone
declare dso_local i32 @attribute_container_unregister(%struct.attribute_container*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !13009 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !13010, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13013, metadata !DIExpression()), !dbg !13012
  %0 = load i64, i64* %__edi, align 8, !dbg !13012
  store i64 %0, i64* %__edi, align 8, !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13014, metadata !DIExpression()), !dbg !13012
  %1 = load i64, i64* %__esi, align 8, !dbg !13012
  store i64 %1, i64* %__esi, align 8, !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13015, metadata !DIExpression()), !dbg !13012
  %2 = load i64, i64* %__edx, align 8, !dbg !13012
  store i64 %2, i64* %__edx, align 8, !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13016, metadata !DIExpression()), !dbg !13012
  %3 = load i64, i64* %__ecx, align 8, !dbg !13012
  store i64 %3, i64* %__ecx, align 8, !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13017, metadata !DIExpression()), !dbg !13012
  %4 = load i64, i64* %__eax, align 8, !dbg !13012
  store i64 %4, i64* %__eax, align 8, !dbg !13012
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !13012
  %6 = call i64 @llvm.read_register.i64(metadata !6076), !dbg !13018
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !13018, !srcloc !13021
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13018
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13018
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13018
  call void @llvm.write_register.i64(metadata !6076, i64 %asmresult1), !dbg !13018
  %8 = load i64, i64* %__eax, align 8, !dbg !13018
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !13022, metadata !DIExpression()), !dbg !13024
  store i64 -1, i64* %__mask, align 8, !dbg !13024
  %9 = load i64, i64* %__mask, align 8, !dbg !13024
  store i64 %9, i64* %tmp, align 8, !dbg !13024
  %10 = load i64, i64* %tmp, align 8, !dbg !13024
  %and = and i64 %8, %10, !dbg !13018
  store i64 %and, i64* %__ret, align 8, !dbg !13018
  %11 = load i64, i64* %__ret, align 8, !dbg !13012
  store i64 %11, i64* %tmp2, align 8, !dbg !13025
  %12 = load i64, i64* %tmp2, align 8, !dbg !13012
  ret i64 %12, !dbg !13026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !13027 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13028, metadata !DIExpression()), !dbg !13030
  %0 = load i64, i64* %__edi, align 8, !dbg !13030
  store i64 %0, i64* %__edi, align 8, !dbg !13030
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13031, metadata !DIExpression()), !dbg !13030
  %1 = load i64, i64* %__esi, align 8, !dbg !13030
  store i64 %1, i64* %__esi, align 8, !dbg !13030
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13032, metadata !DIExpression()), !dbg !13030
  %2 = load i64, i64* %__edx, align 8, !dbg !13030
  store i64 %2, i64* %__edx, align 8, !dbg !13030
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13033, metadata !DIExpression()), !dbg !13030
  %3 = load i64, i64* %__ecx, align 8, !dbg !13030
  store i64 %3, i64* %__ecx, align 8, !dbg !13030
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13034, metadata !DIExpression()), !dbg !13030
  %4 = load i64, i64* %__eax, align 8, !dbg !13030
  store i64 %4, i64* %__eax, align 8, !dbg !13030
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !13030
  %6 = call i64 @llvm.read_register.i64(metadata !6076), !dbg !13030
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !13030, !srcloc !13035
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13030
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13030
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13030
  call void @llvm.write_register.i64(metadata !6076, i64 %asmresult1), !dbg !13030
  ret void, !dbg !13036
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: cold noredzone
declare dso_local void @dump_stack() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !13037 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !13044
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13045
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !13046
  ret i1 %call, !dbg !13047
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !13048 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13051
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !13053
  br i1 %call, label %if.end, label %if.then, !dbg !13054

if.then:                                          ; preds = %entry
  br label %return, !dbg !13055

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13056
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13057
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13057
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13058
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13059
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13059
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !13060
  br label %return, !dbg !13061

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !13062 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  ret i1 true, !dbg !13067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13068 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13069, metadata !DIExpression()), !dbg !13070
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13073
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13074
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13075
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !13076
  br label %do.body, !dbg !13077

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13078

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !13080

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !13078

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13082
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13082
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13082
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !13082
  br label %do.end5, !dbg !13082

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !13078

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !13084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !13085 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !13088, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13090, metadata !DIExpression()), !dbg !13092
  %0 = load i64, i64* %__edi, align 8, !dbg !13092
  store i64 %0, i64* %__edi, align 8, !dbg !13092
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13093, metadata !DIExpression()), !dbg !13092
  %1 = load i64, i64* %__esi, align 8, !dbg !13092
  store i64 %1, i64* %__esi, align 8, !dbg !13092
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13094, metadata !DIExpression()), !dbg !13092
  %2 = load i64, i64* %__edx, align 8, !dbg !13092
  store i64 %2, i64* %__edx, align 8, !dbg !13092
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13095, metadata !DIExpression()), !dbg !13092
  %3 = load i64, i64* %__ecx, align 8, !dbg !13092
  store i64 %3, i64* %__ecx, align 8, !dbg !13092
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13096, metadata !DIExpression()), !dbg !13092
  %4 = load i64, i64* %__eax, align 8, !dbg !13092
  store i64 %4, i64* %__eax, align 8, !dbg !13092
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !13092
  %6 = call i64 @llvm.read_register.i64(metadata !6076), !dbg !13092
  %7 = load i64, i64* %f.addr, align 8, !dbg !13092
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !13092, !srcloc !13097
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !13092
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !13092
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13092
  call void @llvm.write_register.i64(metadata !6076, i64 %asmresult1), !dbg !13092
  ret void, !dbg !13098
}

; Function Attrs: noredzone
declare dso_local void @flush_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !13099 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13100, metadata !DIExpression()), !dbg !13101
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13102, metadata !DIExpression()), !dbg !13103
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13104
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13105
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13106
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13106
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13107
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !13108
  ret void, !dbg !13109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13110 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13117, metadata !DIExpression()), !dbg !13118
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13119
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13121
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13122
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !13123
  br i1 %call, label %if.end, label %if.then, !dbg !13124

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13125

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13126
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13127
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13128
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13129
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13130
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13131
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13132
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13133
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13134
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13135
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13136
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13137
  br label %do.body, !dbg !13138

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13139

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13141

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13139

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13143
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13143
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13143
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13143
  br label %do.end7, !dbg !13143

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13139

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13146 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13149, metadata !DIExpression()), !dbg !13150
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  ret i1 true, !dbg !13155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !13156 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13159, metadata !DIExpression()), !dbg !13160
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !13161, metadata !DIExpression()), !dbg !13162
  ret void, !dbg !13163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_timeout_deleted_rport(%struct.work_struct* %work) #0 !dbg !13164 {
entry:
  %lock.addr.i146 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i146, metadata !7624, metadata !DIExpression()), !dbg !13165
  %flags.addr.i147 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i147, metadata !7631, metadata !DIExpression()), !dbg !13167
  %tmp.i148 = alloca i32, align 4
  %tmp8.i149 = alloca i32, align 4
  %lock.addr.i144 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i144, metadata !7633, metadata !DIExpression()), !dbg !13168
  %lock.addr.i139 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i139, metadata !7624, metadata !DIExpression()), !dbg !13175
  %flags.addr.i140 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i140, metadata !7631, metadata !DIExpression()), !dbg !13177
  %tmp.i141 = alloca i32, align 4
  %tmp8.i142 = alloca i32, align 4
  %lock.addr.i134 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i134, metadata !7624, metadata !DIExpression()), !dbg !13178
  %flags.addr.i135 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i135, metadata !7631, metadata !DIExpression()), !dbg !13182
  %tmp.i136 = alloca i32, align 4
  %tmp8.i137 = alloca i32, align 4
  %lock.addr.i129 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i129, metadata !7624, metadata !DIExpression()), !dbg !13183
  %flags.addr.i130 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i130, metadata !7631, metadata !DIExpression()), !dbg !13187
  %tmp.i131 = alloca i32, align 4
  %tmp8.i132 = alloca i32, align 4
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !7624, metadata !DIExpression()), !dbg !13188
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !13192
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !13193
  %work.addr = alloca %struct.work_struct*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.fc_internal*, align 8
  %fc_host = alloca %struct.fc_host_attrs*, align 8
  %flags = alloca i64, align 8
  %do_callback = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  %__dummy77 = alloca i64, align 8
  %__dummy278 = alloca i64, align 8
  %tmp81 = alloca i32, align 4
  %__dummy85 = alloca i64, align 8
  %__dummy286 = alloca i64, align 8
  %tmp89 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13200, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !13202, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13204, metadata !DIExpression()), !dbg !13206
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13206
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13206
  store i8* %1, i8** %__mptr, align 8, !dbg !13206
  br label %do.body, !dbg !13206

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13207

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13206
  %add.ptr = getelementptr i8, i8* %2, i64 -792, !dbg !13206
  %3 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !13206
  store %struct.fc_rport* %3, %struct.fc_rport** %tmp, align 8, !dbg !13207
  %4 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !13206
  store %struct.fc_rport* %4, %struct.fc_rport** %rport, align 8, !dbg !13203
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !13209, metadata !DIExpression()), !dbg !13210
  %5 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13211
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %5, i32 0, i32 15, !dbg !13211
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !13211
  %6 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13211
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %6) #12, !dbg !13211
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !13210
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !13212, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13214, metadata !DIExpression()), !dbg !13216
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13216
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 11, !dbg !13216
  %8 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !13216
  %9 = bitcast %struct.scsi_transport_template* %8 to i8*, !dbg !13216
  store i8* %9, i8** %__mptr1, align 8, !dbg !13216
  br label %do.body2, !dbg !13216

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13217

do.end3:                                          ; preds = %do.body2
  %10 = load i8*, i8** %__mptr1, align 8, !dbg !13216
  %add.ptr5 = getelementptr i8, i8* %10, i64 0, !dbg !13216
  %11 = bitcast i8* %add.ptr5 to %struct.fc_internal*, !dbg !13216
  store %struct.fc_internal* %11, %struct.fc_internal** %tmp4, align 8, !dbg !13217
  %12 = load %struct.fc_internal*, %struct.fc_internal** %tmp4, align 8, !dbg !13216
  store %struct.fc_internal* %12, %struct.fc_internal** %i, align 8, !dbg !13213
  call void @llvm.dbg.declare(metadata %struct.fc_host_attrs** %fc_host, metadata !13219, metadata !DIExpression()), !dbg !13220
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13221
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 49, !dbg !13221
  %14 = load i8*, i8** %shost_data, align 8, !dbg !13221
  %15 = bitcast i8* %14 to %struct.fc_host_attrs*, !dbg !13221
  store %struct.fc_host_attrs* %15, %struct.fc_host_attrs** %fc_host, align 8, !dbg !13220
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13222, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.declare(metadata i32* %do_callback, metadata !13224, metadata !DIExpression()), !dbg !13225
  store i32 0, i32* %do_callback, align 4, !dbg !13225
  br label %do.body6, !dbg !13226

do.body6:                                         ; preds = %do.end3
  br label %do.body7, !dbg !13227

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13228, metadata !DIExpression()), !dbg !13230
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13231, metadata !DIExpression()), !dbg !13230
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13230
  %conv = zext i1 %cmp to i32, !dbg !13230
  store i32 1, i32* %tmp8, align 4, !dbg !13230
  %16 = load i32, i32* %tmp8, align 4, !dbg !13230
  br label %do.body9, !dbg !13232

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !13233

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !13234

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !13236, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !13240, metadata !DIExpression()), !dbg !13239
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !13239
  %conv15 = zext i1 %cmp14 to i32, !dbg !13239
  store i32 1, i32* %tmp16, align 4, !dbg !13239
  %17 = load i32, i32* %tmp16, align 4, !dbg !13239
  %call17 = call i64 @arch_local_irq_save() #12, !dbg !13241
  store i64 %call17, i64* %flags, align 8, !dbg !13241
  br label %do.end18, !dbg !13241

do.end18:                                         ; preds = %do.body11
  br label %do.end19, !dbg !13234

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !13233

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13242, !srcloc !13243
  br label %do.body21, !dbg !13242

do.body21:                                        ; preds = %do.body20
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13244
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 4, !dbg !13244
  %19 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !13244
  store %struct.spinlock* %19, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13245
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !13246
  %rlock.i = bitcast %union.anon.0* %21 to %struct.raw_spinlock*, !dbg !13246
  br label %do.end23, !dbg !13244

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !13242

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !13233

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !13232

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !13227

do.end27:                                         ; preds = %do.end26
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13247
  %flags28 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %22, i32 0, i32 13, !dbg !13248
  %23 = load i8, i8* %flags28, align 8, !dbg !13249
  %conv29 = zext i8 %23 to i32, !dbg !13249
  %and = and i32 %conv29, -2, !dbg !13249
  %conv30 = trunc i32 %and to i8, !dbg !13249
  store i8 %conv30, i8* %flags28, align 8, !dbg !13249
  %24 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13250
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %24, i32 0, i32 7, !dbg !13251
  %25 = load i32, i32* %port_state, align 8, !dbg !13251
  %cmp31 = icmp eq i32 %25, 2, !dbg !13252
  br i1 %cmp31, label %land.lhs.true, label %if.end, !dbg !13253

land.lhs.true:                                    ; preds = %do.end27
  %26 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13254
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %26, i32 0, i32 8, !dbg !13255
  %27 = load i32, i32* %scsi_target_id, align 4, !dbg !13255
  %cmp33 = icmp ne i32 %27, -1, !dbg !13256
  br i1 %cmp33, label %land.lhs.true35, label %if.end, !dbg !13257

land.lhs.true35:                                  ; preds = %land.lhs.true
  %28 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13258
  %roles = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %28, i32 0, i32 6, !dbg !13259
  %29 = load i32, i32* %roles, align 4, !dbg !13259
  %and36 = and i32 %29, 1, !dbg !13260
  %tobool = icmp ne i32 %and36, 0, !dbg !13260
  br i1 %tobool, label %if.end, label %if.then, !dbg !13261

if.then:                                          ; preds = %land.lhs.true35
  %30 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13262
  %dev37 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %30, i32 0, i32 15, !dbg !13263
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i64 0, i64 0), %struct.device* %dev37, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.180, i64 0, i64 0)) #13, !dbg !13264
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13265
  %host_lock38 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %31, i32 0, i32 4, !dbg !13266
  %32 = load %struct.spinlock*, %struct.spinlock** %host_lock38, align 8, !dbg !13266
  %33 = load i64, i64* %flags, align 8, !dbg !13267
  store %struct.spinlock* %32, %struct.spinlock** %lock.addr.i127, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13268
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13268
  store i32 1, i32* %tmp.i, align 4, !dbg !13268
  %34 = load i32, i32* %tmp.i, align 4, !dbg !13268
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13269
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13269
  store i32 1, i32* %tmp8.i, align 4, !dbg !13269
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !13269
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !13270
  call void @arch_local_irq_restore(i64 %36) #11, !dbg !13270
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13271, !srcloc !7797
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !13272
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !13272
  %rlock.i128 = bitcast %union.anon.0* %38 to %struct.raw_spinlock*, !dbg !13272
  %39 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13273
  %dev39 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %39, i32 0, i32 15, !dbg !13274
  call void @scsi_target_unblock(%struct.device* %dev39, i32 7) #12, !dbg !13275
  %40 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13276
  %41 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13277
  %stgt_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %41, i32 0, i32 19, !dbg !13278
  %call40 = call i32 @fc_queue_work(%struct.Scsi_Host* %40, %struct.work_struct* %stgt_delete_work) #12, !dbg !13279
  br label %if.end126, !dbg !13280

if.end:                                           ; preds = %land.lhs.true35, %land.lhs.true, %do.end27
  %42 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13281
  %port_state41 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %42, i32 0, i32 7, !dbg !13282
  %43 = load i32, i32* %port_state41, align 8, !dbg !13282
  %cmp42 = icmp ne i32 %43, 4, !dbg !13283
  br i1 %cmp42, label %if.then44, label %if.end50, !dbg !13284

if.then44:                                        ; preds = %if.end
  %44 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13285
  %host_lock45 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %44, i32 0, i32 4, !dbg !13286
  %45 = load %struct.spinlock*, %struct.spinlock** %host_lock45, align 8, !dbg !13286
  %46 = load i64, i64* %flags, align 8, !dbg !13287
  store %struct.spinlock* %45, %struct.spinlock** %lock.addr.i129, align 8
  store i64 %46, i64* %flags.addr.i130, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13288
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13288
  store i32 1, i32* %tmp.i131, align 4, !dbg !13288
  %47 = load i32, i32* %tmp.i131, align 4, !dbg !13288
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13289
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13289
  store i32 1, i32* %tmp8.i132, align 4, !dbg !13289
  %48 = load i32, i32* %tmp8.i132, align 4, !dbg !13289
  %49 = load i64, i64* %flags.addr.i130, align 8, !dbg !13290
  call void @arch_local_irq_restore(i64 %49) #11, !dbg !13290
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13291, !srcloc !7797
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i129, align 8, !dbg !13292
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !13292
  %rlock.i133 = bitcast %union.anon.0* %51 to %struct.raw_spinlock*, !dbg !13292
  %52 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13293
  %dev46 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %52, i32 0, i32 15, !dbg !13294
  %53 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13295
  %scsi_target_id47 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %53, i32 0, i32 8, !dbg !13296
  %54 = load i32, i32* %scsi_target_id47, align 4, !dbg !13296
  %cmp48 = icmp ne i32 %54, -1, !dbg !13297
  %55 = zext i1 %cmp48 to i64, !dbg !13298
  %cond = select i1 %cmp48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66, i64 0, i64 0), !dbg !13298
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i64 0, i64 0), %struct.device* %dev46, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.181, i64 0, i64 0), i8* %cond) #13, !dbg !13299
  br label %if.end126, !dbg !13300

if.end50:                                         ; preds = %if.end
  %56 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !13301
  %tgtid_bind_type = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %56, i32 0, i32 25, !dbg !13302
  %57 = load i32, i32* %tgtid_bind_type, align 4, !dbg !13302
  %cmp51 = icmp eq i32 %57, 0, !dbg !13303
  br i1 %cmp51, label %if.then56, label %lor.lhs.false, !dbg !13304

lor.lhs.false:                                    ; preds = %if.end50
  %58 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13305
  %scsi_target_id53 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %58, i32 0, i32 8, !dbg !13306
  %59 = load i32, i32* %scsi_target_id53, align 4, !dbg !13306
  %cmp54 = icmp eq i32 %59, -1, !dbg !13307
  br i1 %cmp54, label %if.then56, label %if.end65, !dbg !13308

if.then56:                                        ; preds = %lor.lhs.false, %if.end50
  %60 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13309
  %peers = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %60, i32 0, i32 14, !dbg !13310
  call void @list_del(%struct.list_head* %peers) #12, !dbg !13311
  %61 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13312
  %port_state57 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %61, i32 0, i32 7, !dbg !13313
  store i32 10, i32* %port_state57, align 8, !dbg !13314
  %62 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13315
  %dev58 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %62, i32 0, i32 15, !dbg !13316
  %63 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13317
  %scsi_target_id59 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %63, i32 0, i32 8, !dbg !13318
  %64 = load i32, i32* %scsi_target_id59, align 4, !dbg !13318
  %cmp60 = icmp ne i32 %64, -1, !dbg !13319
  %65 = zext i1 %cmp60 to i64, !dbg !13320
  %cond62 = select i1 %cmp60, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66, i64 0, i64 0), !dbg !13320
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i64 0, i64 0), %struct.device* %dev58, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.183, i64 0, i64 0), i8* %cond62) #13, !dbg !13321
  %66 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13322
  %67 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13323
  %rport_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %67, i32 0, i32 20, !dbg !13324
  %call63 = call i32 @fc_queue_work(%struct.Scsi_Host* %66, %struct.work_struct* %rport_delete_work) #12, !dbg !13325
  %68 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13326
  %host_lock64 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %68, i32 0, i32 4, !dbg !13327
  %69 = load %struct.spinlock*, %struct.spinlock** %host_lock64, align 8, !dbg !13327
  %70 = load i64, i64* %flags, align 8, !dbg !13328
  store %struct.spinlock* %69, %struct.spinlock** %lock.addr.i134, align 8
  store i64 %70, i64* %flags.addr.i135, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13329
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13329
  store i32 1, i32* %tmp.i136, align 4, !dbg !13329
  %71 = load i32, i32* %tmp.i136, align 4, !dbg !13329
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13330
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13330
  store i32 1, i32* %tmp8.i137, align 4, !dbg !13330
  %72 = load i32, i32* %tmp8.i137, align 4, !dbg !13330
  %73 = load i64, i64* %flags.addr.i135, align 8, !dbg !13331
  call void @arch_local_irq_restore(i64 %73) #11, !dbg !13331
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13332, !srcloc !7797
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i134, align 8, !dbg !13333
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !13333
  %rlock.i138 = bitcast %union.anon.0* %75 to %struct.raw_spinlock*, !dbg !13333
  br label %if.end126, !dbg !13334

if.end65:                                         ; preds = %lor.lhs.false
  %76 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13335
  %dev66 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %76, i32 0, i32 15, !dbg !13336
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i64 0, i64 0), %struct.device* %dev66, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.184, i64 0, i64 0)) #13, !dbg !13337
  %77 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13338
  %peers67 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %77, i32 0, i32 14, !dbg !13339
  %78 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !13340
  %rport_bindings = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %78, i32 0, i32 27, !dbg !13341
  call void @list_move_tail(%struct.list_head* %peers67, %struct.list_head* %rport_bindings) #12, !dbg !13342
  %79 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13343
  %maxframe_size = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %79, i32 0, i32 0, !dbg !13344
  store i32 -1, i32* %maxframe_size, align 8, !dbg !13345
  %80 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13346
  %supported_classes = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %80, i32 0, i32 1, !dbg !13347
  store i32 0, i32* %supported_classes, align 4, !dbg !13348
  %81 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13349
  %roles68 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %81, i32 0, i32 6, !dbg !13350
  store i32 0, i32* %roles68, align 4, !dbg !13351
  %82 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13352
  %port_state69 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %82, i32 0, i32 7, !dbg !13353
  store i32 1, i32* %port_state69, align 8, !dbg !13354
  %83 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13355
  %flags70 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %83, i32 0, i32 13, !dbg !13356
  %84 = load i8, i8* %flags70, align 8, !dbg !13357
  %conv71 = zext i8 %84 to i32, !dbg !13357
  %and72 = and i32 %conv71, -5, !dbg !13357
  %conv73 = trunc i32 %and72 to i8, !dbg !13357
  store i8 %conv73, i8* %flags70, align 8, !dbg !13357
  %85 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13358
  %host_lock74 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %85, i32 0, i32 4, !dbg !13359
  %86 = load %struct.spinlock*, %struct.spinlock** %host_lock74, align 8, !dbg !13359
  %87 = load i64, i64* %flags, align 8, !dbg !13360
  store %struct.spinlock* %86, %struct.spinlock** %lock.addr.i139, align 8
  store i64 %87, i64* %flags.addr.i140, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13361
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13361
  store i32 1, i32* %tmp.i141, align 4, !dbg !13361
  %88 = load i32, i32* %tmp.i141, align 4, !dbg !13361
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13362
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13362
  store i32 1, i32* %tmp8.i142, align 4, !dbg !13362
  %89 = load i32, i32* %tmp8.i142, align 4, !dbg !13362
  %90 = load i64, i64* %flags.addr.i140, align 8, !dbg !13363
  call void @arch_local_irq_restore(i64 %90) #11, !dbg !13363
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13364, !srcloc !7797
  %91 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i139, align 8, !dbg !13365
  %92 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %91, i32 0, i32 0, !dbg !13365
  %rlock.i143 = bitcast %union.anon.0* %92 to %struct.raw_spinlock*, !dbg !13365
  %93 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13366
  call void @fc_terminate_rport_io(%struct.fc_rport* %93) #12, !dbg !13367
  br label %do.body75, !dbg !13368

do.body75:                                        ; preds = %if.end65
  br label %do.body76, !dbg !13369

do.body76:                                        ; preds = %do.body75
  call void @llvm.dbg.declare(metadata i64* %__dummy77, metadata !13370, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.declare(metadata i64* %__dummy278, metadata !13373, metadata !DIExpression()), !dbg !13372
  %cmp79 = icmp eq i64* %__dummy77, %__dummy278, !dbg !13372
  %conv80 = zext i1 %cmp79 to i32, !dbg !13372
  store i32 1, i32* %tmp81, align 4, !dbg !13372
  %94 = load i32, i32* %tmp81, align 4, !dbg !13372
  br label %do.body82, !dbg !13374

do.body82:                                        ; preds = %do.body76
  br label %do.body83, !dbg !13375

do.body83:                                        ; preds = %do.body82
  br label %do.body84, !dbg !13376

do.body84:                                        ; preds = %do.body83
  call void @llvm.dbg.declare(metadata i64* %__dummy85, metadata !13378, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.declare(metadata i64* %__dummy286, metadata !13382, metadata !DIExpression()), !dbg !13381
  %cmp87 = icmp eq i64* %__dummy85, %__dummy286, !dbg !13381
  %conv88 = zext i1 %cmp87 to i32, !dbg !13381
  store i32 1, i32* %tmp89, align 4, !dbg !13381
  %95 = load i32, i32* %tmp89, align 4, !dbg !13381
  %call90 = call i64 @arch_local_irq_save() #12, !dbg !13383
  store i64 %call90, i64* %flags, align 8, !dbg !13383
  br label %do.end91, !dbg !13383

do.end91:                                         ; preds = %do.body84
  br label %do.end92, !dbg !13376

do.end92:                                         ; preds = %do.end91
  br label %do.body93, !dbg !13375

do.body93:                                        ; preds = %do.end92
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13384, !srcloc !13385
  br label %do.body94, !dbg !13384

do.body94:                                        ; preds = %do.body93
  %96 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13386
  %host_lock95 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %96, i32 0, i32 4, !dbg !13386
  %97 = load %struct.spinlock*, %struct.spinlock** %host_lock95, align 8, !dbg !13386
  store %struct.spinlock* %97, %struct.spinlock** %lock.addr.i144, align 8
  %98 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i144, align 8, !dbg !13387
  %99 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %98, i32 0, i32 0, !dbg !13388
  %rlock.i145 = bitcast %union.anon.0* %99 to %struct.raw_spinlock*, !dbg !13388
  br label %do.end97, !dbg !13386

do.end97:                                         ; preds = %do.body94
  br label %do.end98, !dbg !13384

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !13375

do.end99:                                         ; preds = %do.end98
  br label %do.end100, !dbg !13374

do.end100:                                        ; preds = %do.end99
  br label %do.end101, !dbg !13369

do.end101:                                        ; preds = %do.end100
  %100 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13389
  %port_state102 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %100, i32 0, i32 7, !dbg !13391
  %101 = load i32, i32* %port_state102, align 8, !dbg !13391
  %cmp103 = icmp eq i32 %101, 1, !dbg !13392
  br i1 %cmp103, label %if.then105, label %if.end118, !dbg !13393

if.then105:                                       ; preds = %do.end101
  %102 = load %struct.fc_host_attrs*, %struct.fc_host_attrs** %fc_host, align 8, !dbg !13394
  %tgtid_bind_type106 = getelementptr inbounds %struct.fc_host_attrs, %struct.fc_host_attrs* %102, i32 0, i32 25, !dbg !13396
  %103 = load i32, i32* %tgtid_bind_type106, align 4, !dbg !13396
  switch i32 %103, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb107
    i32 3, label %sw.bb109
    i32 0, label %sw.bb112
  ], !dbg !13397

sw.bb:                                            ; preds = %if.then105
  %104 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13398
  %node_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %104, i32 0, i32 3, !dbg !13400
  store i64 -1, i64* %node_name, align 8, !dbg !13401
  %105 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13402
  %port_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %105, i32 0, i32 5, !dbg !13403
  store i32 -1, i32* %port_id, align 8, !dbg !13404
  br label %sw.epilog, !dbg !13405

sw.bb107:                                         ; preds = %if.then105
  %106 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13406
  %port_name = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %106, i32 0, i32 4, !dbg !13407
  store i64 -1, i64* %port_name, align 8, !dbg !13408
  %107 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13409
  %port_id108 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %107, i32 0, i32 5, !dbg !13410
  store i32 -1, i32* %port_id108, align 8, !dbg !13411
  br label %sw.epilog, !dbg !13412

sw.bb109:                                         ; preds = %if.then105
  %108 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13413
  %node_name110 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %108, i32 0, i32 3, !dbg !13414
  store i64 -1, i64* %node_name110, align 8, !dbg !13415
  %109 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13416
  %port_name111 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %109, i32 0, i32 4, !dbg !13417
  store i64 -1, i64* %port_name111, align 8, !dbg !13418
  br label %sw.epilog, !dbg !13419

sw.bb112:                                         ; preds = %if.then105
  br label %sw.epilog, !dbg !13420

sw.epilog:                                        ; preds = %if.then105, %sw.bb112, %sw.bb109, %sw.bb107, %sw.bb
  %110 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13421
  %flags113 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %110, i32 0, i32 13, !dbg !13422
  %111 = load i8, i8* %flags113, align 8, !dbg !13423
  %conv114 = zext i8 %111 to i32, !dbg !13423
  %or = or i32 %conv114, 8, !dbg !13423
  %conv115 = trunc i32 %or to i8, !dbg !13423
  store i8 %conv115, i8* %flags113, align 8, !dbg !13423
  %112 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13424
  %113 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13425
  %stgt_delete_work116 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %113, i32 0, i32 19, !dbg !13426
  %call117 = call i32 @fc_queue_work(%struct.Scsi_Host* %112, %struct.work_struct* %stgt_delete_work116) #12, !dbg !13427
  store i32 1, i32* %do_callback, align 4, !dbg !13428
  br label %if.end118, !dbg !13429

if.end118:                                        ; preds = %sw.epilog, %do.end101
  %114 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13430
  %host_lock119 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %114, i32 0, i32 4, !dbg !13431
  %115 = load %struct.spinlock*, %struct.spinlock** %host_lock119, align 8, !dbg !13431
  %116 = load i64, i64* %flags, align 8, !dbg !13432
  store %struct.spinlock* %115, %struct.spinlock** %lock.addr.i146, align 8
  store i64 %116, i64* %flags.addr.i147, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13433
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13433
  store i32 1, i32* %tmp.i148, align 4, !dbg !13433
  %117 = load i32, i32* %tmp.i148, align 4, !dbg !13433
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13434
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13434
  store i32 1, i32* %tmp8.i149, align 4, !dbg !13434
  %118 = load i32, i32* %tmp8.i149, align 4, !dbg !13434
  %119 = load i64, i64* %flags.addr.i147, align 8, !dbg !13435
  call void @arch_local_irq_restore(i64 %119) #11, !dbg !13435
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13436, !srcloc !7797
  %120 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i146, align 8, !dbg !13437
  %121 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %120, i32 0, i32 0, !dbg !13437
  %rlock.i150 = bitcast %union.anon.0* %121 to %struct.raw_spinlock*, !dbg !13437
  %122 = load i32, i32* %do_callback, align 4, !dbg !13438
  %tobool120 = icmp ne i32 %122, 0, !dbg !13438
  br i1 %tobool120, label %land.lhs.true121, label %if.end126, !dbg !13440

land.lhs.true121:                                 ; preds = %if.end118
  %123 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13441
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %123, i32 0, i32 1, !dbg !13442
  %124 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !13442
  %dev_loss_tmo_callbk = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %124, i32 0, i32 16, !dbg !13443
  %125 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %dev_loss_tmo_callbk, align 8, !dbg !13443
  %tobool122 = icmp ne void (%struct.fc_rport*)* %125, null, !dbg !13441
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !13444

if.then123:                                       ; preds = %land.lhs.true121
  %126 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13445
  %f124 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %126, i32 0, i32 1, !dbg !13446
  %127 = load %struct.fc_function_template*, %struct.fc_function_template** %f124, align 8, !dbg !13446
  %dev_loss_tmo_callbk125 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %127, i32 0, i32 16, !dbg !13447
  %128 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %dev_loss_tmo_callbk125, align 8, !dbg !13447
  %129 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13448
  call void %128(%struct.fc_rport* %129) #12, !dbg !13445
  br label %if.end126, !dbg !13445

if.end126:                                        ; preds = %if.then, %if.then44, %if.then56, %if.then123, %land.lhs.true121, %if.end118
  ret void, !dbg !13449
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_timeout_fail_rport_io(%struct.work_struct* %work) #0 !dbg !13450 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13451, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !13453, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13455, metadata !DIExpression()), !dbg !13457
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13457
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13457
  store i8* %1, i8** %__mptr, align 8, !dbg !13457
  br label %do.body, !dbg !13457

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13458

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13457
  %add.ptr = getelementptr i8, i8* %2, i64 -912, !dbg !13457
  %3 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !13457
  store %struct.fc_rport* %3, %struct.fc_rport** %tmp, align 8, !dbg !13458
  %4 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !13457
  store %struct.fc_rport* %4, %struct.fc_rport** %rport, align 8, !dbg !13454
  %5 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13460
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %5, i32 0, i32 7, !dbg !13462
  %6 = load i32, i32* %port_state, align 8, !dbg !13462
  %cmp = icmp ne i32 %6, 4, !dbg !13463
  br i1 %cmp, label %if.then, label %if.end, !dbg !13464

if.then:                                          ; preds = %do.end
  br label %return, !dbg !13465

if.end:                                           ; preds = %do.end
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13466
  %flags = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 13, !dbg !13467
  %8 = load i8, i8* %flags, align 8, !dbg !13468
  %conv = zext i8 %8 to i32, !dbg !13468
  %or = or i32 %conv, 4, !dbg !13468
  %conv1 = trunc i32 %or to i8, !dbg !13468
  store i8 %conv1, i8* %flags, align 8, !dbg !13468
  %9 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13469
  call void @fc_terminate_rport_io(%struct.fc_rport* %9) #12, !dbg !13470
  br label %return, !dbg !13471

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_scsi_scan_rport(%struct.work_struct* %work) #0 !dbg !13472 {
entry:
  %lock.addr.i37 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i37, metadata !7624, metadata !DIExpression()), !dbg !13473
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !13475
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !13476
  %work.addr = alloca %struct.work_struct*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.fc_internal*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy16 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %tmp20 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13483, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !13485, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13487, metadata !DIExpression()), !dbg !13489
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13489
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13489
  store i8* %1, i8** %__mptr, align 8, !dbg !13489
  br label %do.body, !dbg !13489

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13490

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13489
  %add.ptr = getelementptr i8, i8* %2, i64 -880, !dbg !13489
  %3 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !13489
  store %struct.fc_rport* %3, %struct.fc_rport** %tmp, align 8, !dbg !13490
  %4 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !13489
  store %struct.fc_rport* %4, %struct.fc_rport** %rport, align 8, !dbg !13486
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !13492, metadata !DIExpression()), !dbg !13493
  %5 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13494
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %5, i32 0, i32 15, !dbg !13494
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !13494
  %6 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13494
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %6) #12, !dbg !13494
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !13493
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !13495, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13497, metadata !DIExpression()), !dbg !13499
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13499
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 11, !dbg !13499
  %8 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !13499
  %9 = bitcast %struct.scsi_transport_template* %8 to i8*, !dbg !13499
  store i8* %9, i8** %__mptr1, align 8, !dbg !13499
  br label %do.body2, !dbg !13499

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13500

do.end3:                                          ; preds = %do.body2
  %10 = load i8*, i8** %__mptr1, align 8, !dbg !13499
  %add.ptr5 = getelementptr i8, i8* %10, i64 0, !dbg !13499
  %11 = bitcast i8* %add.ptr5 to %struct.fc_internal*, !dbg !13499
  store %struct.fc_internal* %11, %struct.fc_internal** %tmp4, align 8, !dbg !13500
  %12 = load %struct.fc_internal*, %struct.fc_internal** %tmp4, align 8, !dbg !13499
  store %struct.fc_internal* %12, %struct.fc_internal** %i, align 8, !dbg !13496
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13502, metadata !DIExpression()), !dbg !13503
  %13 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13504
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %13, i32 0, i32 7, !dbg !13506
  %14 = load i32, i32* %port_state, align 8, !dbg !13506
  %cmp = icmp eq i32 %14, 2, !dbg !13507
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13508

land.lhs.true:                                    ; preds = %do.end3
  %15 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13509
  %roles = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %15, i32 0, i32 6, !dbg !13510
  %16 = load i32, i32* %roles, align 4, !dbg !13510
  %and = and i32 %16, 1, !dbg !13511
  %tobool = icmp ne i32 %and, 0, !dbg !13511
  br i1 %tobool, label %land.lhs.true6, label %if.end, !dbg !13512

land.lhs.true6:                                   ; preds = %land.lhs.true
  %17 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13513
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %17, i32 0, i32 1, !dbg !13514
  %18 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !13514
  %disable_target_scan = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %18, i32 0, i32 27, !dbg !13515
  %bf.load = load i32, i32* %disable_target_scan, align 4, !dbg !13515
  %bf.lshr = lshr i32 %bf.load, 29, !dbg !13515
  %bf.clear = and i32 %bf.lshr, 1, !dbg !13515
  %bf.cast = zext i32 %bf.clear to i64, !dbg !13515
  %tobool7 = icmp ne i64 %bf.cast, 0, !dbg !13516
  br i1 %tobool7, label %if.end, label %if.then, !dbg !13517

if.then:                                          ; preds = %land.lhs.true6
  %19 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13518
  %dev8 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %19, i32 0, i32 15, !dbg !13520
  %20 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13521
  %channel = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %20, i32 0, i32 11, !dbg !13522
  %21 = load i32, i32* %channel, align 8, !dbg !13522
  %22 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13523
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %22, i32 0, i32 8, !dbg !13524
  %23 = load i32, i32* %scsi_target_id, align 4, !dbg !13524
  call void @scsi_scan_target(%struct.device* %dev8, i32 %21, i32 %23, i64 -1, i32 1) #12, !dbg !13525
  br label %if.end, !dbg !13526

if.end:                                           ; preds = %if.then, %land.lhs.true6, %land.lhs.true, %do.end3
  br label %do.body9, !dbg !13527

do.body9:                                         ; preds = %if.end
  br label %do.body10, !dbg !13528

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13529, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13532, metadata !DIExpression()), !dbg !13531
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !13531
  %conv = zext i1 %cmp11 to i32, !dbg !13531
  store i32 1, i32* %tmp12, align 4, !dbg !13531
  %24 = load i32, i32* %tmp12, align 4, !dbg !13531
  br label %do.body13, !dbg !13533

do.body13:                                        ; preds = %do.body10
  br label %do.body14, !dbg !13534

do.body14:                                        ; preds = %do.body13
  br label %do.body15, !dbg !13535

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy16, metadata !13537, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.declare(metadata i64* %__dummy217, metadata !13541, metadata !DIExpression()), !dbg !13540
  %cmp18 = icmp eq i64* %__dummy16, %__dummy217, !dbg !13540
  %conv19 = zext i1 %cmp18 to i32, !dbg !13540
  store i32 1, i32* %tmp20, align 4, !dbg !13540
  %25 = load i32, i32* %tmp20, align 4, !dbg !13540
  %call21 = call i64 @arch_local_irq_save() #12, !dbg !13542
  store i64 %call21, i64* %flags, align 8, !dbg !13542
  br label %do.end22, !dbg !13542

do.end22:                                         ; preds = %do.body15
  br label %do.end23, !dbg !13535

do.end23:                                         ; preds = %do.end22
  br label %do.body24, !dbg !13534

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13543, !srcloc !13544
  br label %do.body25, !dbg !13543

do.body25:                                        ; preds = %do.body24
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13545
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %26, i32 0, i32 4, !dbg !13545
  %27 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !13545
  store %struct.spinlock* %27, %struct.spinlock** %lock.addr.i, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13546
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !13547
  %rlock.i = bitcast %union.anon.0* %29 to %struct.raw_spinlock*, !dbg !13547
  br label %do.end27, !dbg !13545

do.end27:                                         ; preds = %do.body25
  br label %do.end28, !dbg !13543

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !13534

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !13533

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !13528

do.end31:                                         ; preds = %do.end30
  %30 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13548
  %flags32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %30, i32 0, i32 13, !dbg !13549
  %31 = load i8, i8* %flags32, align 8, !dbg !13550
  %conv33 = zext i8 %31 to i32, !dbg !13550
  %and34 = and i32 %conv33, -3, !dbg !13550
  %conv35 = trunc i32 %and34 to i8, !dbg !13550
  store i8 %conv35, i8* %flags32, align 8, !dbg !13550
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13551
  %host_lock36 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 4, !dbg !13552
  %33 = load %struct.spinlock*, %struct.spinlock** %host_lock36, align 8, !dbg !13552
  %34 = load i64, i64* %flags, align 8, !dbg !13553
  store %struct.spinlock* %33, %struct.spinlock** %lock.addr.i37, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13554
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13554
  store i32 1, i32* %tmp.i, align 4, !dbg !13554
  %35 = load i32, i32* %tmp.i, align 4, !dbg !13554
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13555
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13555
  store i32 1, i32* %tmp8.i, align 4, !dbg !13555
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !13555
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !13556
  call void @arch_local_irq_restore(i64 %37) #11, !dbg !13556
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13557, !srcloc !7797
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i37, align 8, !dbg !13558
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !13558
  %rlock.i38 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !13558
  ret void, !dbg !13559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_starget_delete(%struct.work_struct* %work) #0 !dbg !13560 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13561, metadata !DIExpression()), !dbg !13562
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !13563, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13565, metadata !DIExpression()), !dbg !13567
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13567
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13567
  store i8* %1, i8** %__mptr, align 8, !dbg !13567
  br label %do.body, !dbg !13567

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13568

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13567
  %add.ptr = getelementptr i8, i8* %2, i64 -1000, !dbg !13567
  %3 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !13567
  store %struct.fc_rport* %3, %struct.fc_rport** %tmp, align 8, !dbg !13568
  %4 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !13567
  store %struct.fc_rport* %4, %struct.fc_rport** %rport, align 8, !dbg !13564
  %5 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13570
  call void @fc_terminate_rport_io(%struct.fc_rport* %5) #12, !dbg !13571
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13572
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 15, !dbg !13573
  call void @scsi_remove_target(%struct.device* %dev) #12, !dbg !13574
  ret void, !dbg !13575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_rport_final_delete(%struct.work_struct* %work) #0 !dbg !13576 {
entry:
  %lock.addr.i136 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i136, metadata !7624, metadata !DIExpression()), !dbg !13577
  %flags.addr.i137 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i137, metadata !7631, metadata !DIExpression()), !dbg !13579
  %tmp.i138 = alloca i32, align 4
  %tmp8.i139 = alloca i32, align 4
  %lock.addr.i134 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i134, metadata !7633, metadata !DIExpression()), !dbg !13580
  %lock.addr.i129 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i129, metadata !7624, metadata !DIExpression()), !dbg !13587
  %flags.addr.i130 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i130, metadata !7631, metadata !DIExpression()), !dbg !13589
  %tmp.i131 = alloca i32, align 4
  %tmp8.i132 = alloca i32, align 4
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !7633, metadata !DIExpression()), !dbg !13590
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !7624, metadata !DIExpression()), !dbg !13599
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7631, metadata !DIExpression()), !dbg !13601
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7633, metadata !DIExpression()), !dbg !13602
  %work.addr = alloca %struct.work_struct*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_rport*, align 8
  %dev = alloca %struct.device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.fc_internal*, align 8
  %flags = alloca i64, align 8
  %do_callback = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy16 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %tmp20 = alloca i32, align 4
  %__dummy47 = alloca i64, align 8
  %__dummy248 = alloca i64, align 8
  %tmp51 = alloca i32, align 4
  %__dummy55 = alloca i64, align 8
  %__dummy256 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  %__dummy84 = alloca i64, align 8
  %__dummy285 = alloca i64, align 8
  %tmp88 = alloca i32, align 4
  %__dummy92 = alloca i64, align 8
  %__dummy293 = alloca i64, align 8
  %tmp96 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13609, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !13611, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13613, metadata !DIExpression()), !dbg !13615
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13615
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13615
  store i8* %1, i8** %__mptr, align 8, !dbg !13615
  br label %do.body, !dbg !13615

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13616

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13615
  %add.ptr = getelementptr i8, i8* %2, i64 -1032, !dbg !13615
  %3 = bitcast i8* %add.ptr to %struct.fc_rport*, !dbg !13615
  store %struct.fc_rport* %3, %struct.fc_rport** %tmp, align 8, !dbg !13616
  %4 = load %struct.fc_rport*, %struct.fc_rport** %tmp, align 8, !dbg !13615
  store %struct.fc_rport* %4, %struct.fc_rport** %rport, align 8, !dbg !13612
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13618, metadata !DIExpression()), !dbg !13619
  %5 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13620
  %dev1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %5, i32 0, i32 15, !dbg !13621
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !13619
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !13622, metadata !DIExpression()), !dbg !13623
  %6 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13624
  %dev2 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %6, i32 0, i32 15, !dbg !13624
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 1, !dbg !13624
  %7 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13624
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %7) #12, !dbg !13624
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !13623
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !13625, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !13627, metadata !DIExpression()), !dbg !13629
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13629
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 11, !dbg !13629
  %9 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !13629
  %10 = bitcast %struct.scsi_transport_template* %9 to i8*, !dbg !13629
  store i8* %10, i8** %__mptr3, align 8, !dbg !13629
  br label %do.body4, !dbg !13629

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !13630

do.end5:                                          ; preds = %do.body4
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !13629
  %add.ptr7 = getelementptr i8, i8* %11, i64 0, !dbg !13629
  %12 = bitcast i8* %add.ptr7 to %struct.fc_internal*, !dbg !13629
  store %struct.fc_internal* %12, %struct.fc_internal** %tmp6, align 8, !dbg !13630
  %13 = load %struct.fc_internal*, %struct.fc_internal** %tmp6, align 8, !dbg !13629
  store %struct.fc_internal* %13, %struct.fc_internal** %i, align 8, !dbg !13626
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13632, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.declare(metadata i32* %do_callback, metadata !13634, metadata !DIExpression()), !dbg !13635
  store i32 0, i32* %do_callback, align 4, !dbg !13635
  %14 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13636
  call void @fc_terminate_rport_io(%struct.fc_rport* %14) #12, !dbg !13637
  %15 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13638
  %flags8 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %15, i32 0, i32 13, !dbg !13640
  %16 = load i8, i8* %flags8, align 8, !dbg !13640
  %conv = zext i8 %16 to i32, !dbg !13638
  %and = and i32 %conv, 2, !dbg !13641
  %tobool = icmp ne i32 %and, 0, !dbg !13641
  br i1 %tobool, label %if.then, label %if.end, !dbg !13642

if.then:                                          ; preds = %do.end5
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13643
  call void @scsi_flush_work(%struct.Scsi_Host* %17) #12, !dbg !13644
  br label %if.end, !dbg !13644

if.end:                                           ; preds = %if.then, %do.end5
  br label %do.body9, !dbg !13645

do.body9:                                         ; preds = %if.end
  br label %do.body10, !dbg !13646

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13647, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13650, metadata !DIExpression()), !dbg !13649
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13649
  %conv11 = zext i1 %cmp to i32, !dbg !13649
  store i32 1, i32* %tmp12, align 4, !dbg !13649
  %18 = load i32, i32* %tmp12, align 4, !dbg !13649
  br label %do.body13, !dbg !13651

do.body13:                                        ; preds = %do.body10
  br label %do.body14, !dbg !13652

do.body14:                                        ; preds = %do.body13
  br label %do.body15, !dbg !13653

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy16, metadata !13655, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.declare(metadata i64* %__dummy217, metadata !13659, metadata !DIExpression()), !dbg !13658
  %cmp18 = icmp eq i64* %__dummy16, %__dummy217, !dbg !13658
  %conv19 = zext i1 %cmp18 to i32, !dbg !13658
  store i32 1, i32* %tmp20, align 4, !dbg !13658
  %19 = load i32, i32* %tmp20, align 4, !dbg !13658
  %call21 = call i64 @arch_local_irq_save() #12, !dbg !13660
  store i64 %call21, i64* %flags, align 8, !dbg !13660
  br label %do.end22, !dbg !13660

do.end22:                                         ; preds = %do.body15
  br label %do.end23, !dbg !13653

do.end23:                                         ; preds = %do.end22
  br label %do.body24, !dbg !13652

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13661, !srcloc !13662
  br label %do.body25, !dbg !13661

do.body25:                                        ; preds = %do.body24
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13663
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 4, !dbg !13663
  %21 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !13663
  store %struct.spinlock* %21, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13664
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !13665
  %rlock.i = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !13665
  br label %do.end27, !dbg !13663

do.end27:                                         ; preds = %do.body25
  br label %do.end28, !dbg !13661

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !13652

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !13651

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !13646

do.end31:                                         ; preds = %do.end30
  %24 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13666
  %flags32 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %24, i32 0, i32 13, !dbg !13667
  %25 = load i8, i8* %flags32, align 8, !dbg !13667
  %conv33 = zext i8 %25 to i32, !dbg !13666
  %and34 = and i32 %conv33, 1, !dbg !13668
  %tobool35 = icmp ne i32 %and34, 0, !dbg !13668
  br i1 %tobool35, label %if.then36, label %if.end76, !dbg !13669

if.then36:                                        ; preds = %do.end31
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13670
  %host_lock37 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %26, i32 0, i32 4, !dbg !13671
  %27 = load %struct.spinlock*, %struct.spinlock** %host_lock37, align 8, !dbg !13671
  %28 = load i64, i64* %flags, align 8, !dbg !13672
  store %struct.spinlock* %27, %struct.spinlock** %lock.addr.i125, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13673
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13673
  store i32 1, i32* %tmp.i, align 4, !dbg !13673
  %29 = load i32, i32* %tmp.i, align 4, !dbg !13673
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13674
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13674
  store i32 1, i32* %tmp8.i, align 4, !dbg !13674
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !13674
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !13675
  call void @arch_local_irq_restore(i64 %31) #11, !dbg !13675
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13676, !srcloc !7797
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !13677
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !13677
  %rlock.i126 = bitcast %union.anon.0* %33 to %struct.raw_spinlock*, !dbg !13677
  %34 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13678
  %fail_io_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %34, i32 0, i32 18, !dbg !13680
  %call38 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %fail_io_work) #12, !dbg !13681
  br i1 %call38, label %if.end40, label %if.then39, !dbg !13682

if.then39:                                        ; preds = %if.then36
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13683
  call void @fc_flush_devloss(%struct.Scsi_Host* %35) #12, !dbg !13684
  br label %if.end40, !dbg !13684

if.end40:                                         ; preds = %if.then39, %if.then36
  %36 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13685
  %dev_loss_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %36, i32 0, i32 16, !dbg !13687
  %call41 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %dev_loss_work) #12, !dbg !13688
  br i1 %call41, label %if.end43, label %if.then42, !dbg !13689

if.then42:                                        ; preds = %if.end40
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13690
  call void @fc_flush_devloss(%struct.Scsi_Host* %37) #12, !dbg !13691
  br label %if.end43, !dbg !13691

if.end43:                                         ; preds = %if.then42, %if.end40
  %38 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13692
  %scan_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %38, i32 0, i32 17, !dbg !13693
  %call44 = call zeroext i1 @cancel_work_sync(%struct.work_struct* %scan_work) #12, !dbg !13694
  br label %do.body45, !dbg !13695

do.body45:                                        ; preds = %if.end43
  br label %do.body46, !dbg !13696

do.body46:                                        ; preds = %do.body45
  call void @llvm.dbg.declare(metadata i64* %__dummy47, metadata !13697, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.declare(metadata i64* %__dummy248, metadata !13700, metadata !DIExpression()), !dbg !13699
  %cmp49 = icmp eq i64* %__dummy47, %__dummy248, !dbg !13699
  %conv50 = zext i1 %cmp49 to i32, !dbg !13699
  store i32 1, i32* %tmp51, align 4, !dbg !13699
  %39 = load i32, i32* %tmp51, align 4, !dbg !13699
  br label %do.body52, !dbg !13701

do.body52:                                        ; preds = %do.body46
  br label %do.body53, !dbg !13702

do.body53:                                        ; preds = %do.body52
  br label %do.body54, !dbg !13703

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy55, metadata !13705, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.declare(metadata i64* %__dummy256, metadata !13709, metadata !DIExpression()), !dbg !13708
  %cmp57 = icmp eq i64* %__dummy55, %__dummy256, !dbg !13708
  %conv58 = zext i1 %cmp57 to i32, !dbg !13708
  store i32 1, i32* %tmp59, align 4, !dbg !13708
  %40 = load i32, i32* %tmp59, align 4, !dbg !13708
  %call60 = call i64 @arch_local_irq_save() #12, !dbg !13710
  store i64 %call60, i64* %flags, align 8, !dbg !13710
  br label %do.end61, !dbg !13710

do.end61:                                         ; preds = %do.body54
  br label %do.end62, !dbg !13703

do.end62:                                         ; preds = %do.end61
  br label %do.body63, !dbg !13702

do.body63:                                        ; preds = %do.end62
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13711, !srcloc !13712
  br label %do.body64, !dbg !13711

do.body64:                                        ; preds = %do.body63
  %41 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13713
  %host_lock65 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %41, i32 0, i32 4, !dbg !13713
  %42 = load %struct.spinlock*, %struct.spinlock** %host_lock65, align 8, !dbg !13713
  store %struct.spinlock* %42, %struct.spinlock** %lock.addr.i127, align 8
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !13714
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !13715
  %rlock.i128 = bitcast %union.anon.0* %44 to %struct.raw_spinlock*, !dbg !13715
  br label %do.end67, !dbg !13713

do.end67:                                         ; preds = %do.body64
  br label %do.end68, !dbg !13711

do.end68:                                         ; preds = %do.end67
  br label %do.end69, !dbg !13702

do.end69:                                         ; preds = %do.end68
  br label %do.end70, !dbg !13701

do.end70:                                         ; preds = %do.end69
  br label %do.end71, !dbg !13696

do.end71:                                         ; preds = %do.end70
  %45 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13716
  %flags72 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %45, i32 0, i32 13, !dbg !13717
  %46 = load i8, i8* %flags72, align 8, !dbg !13718
  %conv73 = zext i8 %46 to i32, !dbg !13718
  %and74 = and i32 %conv73, -2, !dbg !13718
  %conv75 = trunc i32 %and74 to i8, !dbg !13718
  store i8 %conv75, i8* %flags72, align 8, !dbg !13718
  br label %if.end76, !dbg !13719

if.end76:                                         ; preds = %do.end71, %do.end31
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13720
  %host_lock77 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 4, !dbg !13721
  %48 = load %struct.spinlock*, %struct.spinlock** %host_lock77, align 8, !dbg !13721
  %49 = load i64, i64* %flags, align 8, !dbg !13722
  store %struct.spinlock* %48, %struct.spinlock** %lock.addr.i129, align 8
  store i64 %49, i64* %flags.addr.i130, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13723
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13723
  store i32 1, i32* %tmp.i131, align 4, !dbg !13723
  %50 = load i32, i32* %tmp.i131, align 4, !dbg !13723
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13724
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13724
  store i32 1, i32* %tmp8.i132, align 4, !dbg !13724
  %51 = load i32, i32* %tmp8.i132, align 4, !dbg !13724
  %52 = load i64, i64* %flags.addr.i130, align 8, !dbg !13725
  call void @arch_local_irq_restore(i64 %52) #11, !dbg !13725
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13726, !srcloc !7797
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i129, align 8, !dbg !13727
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !13727
  %rlock.i133 = bitcast %union.anon.0* %54 to %struct.raw_spinlock*, !dbg !13727
  %55 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13728
  %scsi_target_id = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %55, i32 0, i32 8, !dbg !13730
  %56 = load i32, i32* %scsi_target_id, align 4, !dbg !13730
  %cmp78 = icmp ne i32 %56, -1, !dbg !13731
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !13732

if.then80:                                        ; preds = %if.end76
  %57 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13733
  %stgt_delete_work = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %57, i32 0, i32 19, !dbg !13734
  call void @fc_starget_delete(%struct.work_struct* %stgt_delete_work) #12, !dbg !13735
  br label %if.end81, !dbg !13735

if.end81:                                         ; preds = %if.then80, %if.end76
  br label %do.body82, !dbg !13736

do.body82:                                        ; preds = %if.end81
  br label %do.body83, !dbg !13737

do.body83:                                        ; preds = %do.body82
  call void @llvm.dbg.declare(metadata i64* %__dummy84, metadata !13738, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.declare(metadata i64* %__dummy285, metadata !13741, metadata !DIExpression()), !dbg !13740
  %cmp86 = icmp eq i64* %__dummy84, %__dummy285, !dbg !13740
  %conv87 = zext i1 %cmp86 to i32, !dbg !13740
  store i32 1, i32* %tmp88, align 4, !dbg !13740
  %58 = load i32, i32* %tmp88, align 4, !dbg !13740
  br label %do.body89, !dbg !13742

do.body89:                                        ; preds = %do.body83
  br label %do.body90, !dbg !13743

do.body90:                                        ; preds = %do.body89
  br label %do.body91, !dbg !13744

do.body91:                                        ; preds = %do.body90
  call void @llvm.dbg.declare(metadata i64* %__dummy92, metadata !13746, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.declare(metadata i64* %__dummy293, metadata !13750, metadata !DIExpression()), !dbg !13749
  %cmp94 = icmp eq i64* %__dummy92, %__dummy293, !dbg !13749
  %conv95 = zext i1 %cmp94 to i32, !dbg !13749
  store i32 1, i32* %tmp96, align 4, !dbg !13749
  %59 = load i32, i32* %tmp96, align 4, !dbg !13749
  %call97 = call i64 @arch_local_irq_save() #12, !dbg !13751
  store i64 %call97, i64* %flags, align 8, !dbg !13751
  br label %do.end98, !dbg !13751

do.end98:                                         ; preds = %do.body91
  br label %do.end99, !dbg !13744

do.end99:                                         ; preds = %do.end98
  br label %do.body100, !dbg !13743

do.body100:                                       ; preds = %do.end99
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13752, !srcloc !13753
  br label %do.body101, !dbg !13752

do.body101:                                       ; preds = %do.body100
  %60 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13754
  %host_lock102 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %60, i32 0, i32 4, !dbg !13754
  %61 = load %struct.spinlock*, %struct.spinlock** %host_lock102, align 8, !dbg !13754
  store %struct.spinlock* %61, %struct.spinlock** %lock.addr.i134, align 8
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i134, align 8, !dbg !13755
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !13756
  %rlock.i135 = bitcast %union.anon.0* %63 to %struct.raw_spinlock*, !dbg !13756
  br label %do.end104, !dbg !13754

do.end104:                                        ; preds = %do.body101
  br label %do.end105, !dbg !13752

do.end105:                                        ; preds = %do.end104
  br label %do.end106, !dbg !13743

do.end106:                                        ; preds = %do.end105
  br label %do.end107, !dbg !13742

do.end107:                                        ; preds = %do.end106
  br label %do.end108, !dbg !13737

do.end108:                                        ; preds = %do.end107
  %64 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13757
  %flags109 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %64, i32 0, i32 13, !dbg !13759
  %65 = load i8, i8* %flags109, align 8, !dbg !13759
  %conv110 = zext i8 %65 to i32, !dbg !13757
  %and111 = and i32 %conv110, 8, !dbg !13760
  %tobool112 = icmp ne i32 %and111, 0, !dbg !13760
  br i1 %tobool112, label %if.end118, label %land.lhs.true, !dbg !13761

land.lhs.true:                                    ; preds = %do.end108
  %66 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13762
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %66, i32 0, i32 1, !dbg !13763
  %67 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !13763
  %dev_loss_tmo_callbk = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %67, i32 0, i32 16, !dbg !13764
  %68 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %dev_loss_tmo_callbk, align 8, !dbg !13764
  %tobool113 = icmp ne void (%struct.fc_rport*)* %68, null, !dbg !13765
  br i1 %tobool113, label %if.then114, label %if.end118, !dbg !13766

if.then114:                                       ; preds = %land.lhs.true
  %69 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13767
  %flags115 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %69, i32 0, i32 13, !dbg !13769
  %70 = load i8, i8* %flags115, align 8, !dbg !13770
  %conv116 = zext i8 %70 to i32, !dbg !13770
  %or = or i32 %conv116, 8, !dbg !13770
  %conv117 = trunc i32 %or to i8, !dbg !13770
  store i8 %conv117, i8* %flags115, align 8, !dbg !13770
  store i32 1, i32* %do_callback, align 4, !dbg !13771
  br label %if.end118, !dbg !13772

if.end118:                                        ; preds = %if.then114, %land.lhs.true, %do.end108
  %71 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13773
  %host_lock119 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %71, i32 0, i32 4, !dbg !13774
  %72 = load %struct.spinlock*, %struct.spinlock** %host_lock119, align 8, !dbg !13774
  %73 = load i64, i64* %flags, align 8, !dbg !13775
  store %struct.spinlock* %72, %struct.spinlock** %lock.addr.i136, align 8
  store i64 %73, i64* %flags.addr.i137, align 8
  call void @llvm.dbg.declare(metadata !343, metadata !7782, metadata !DIExpression()) #10, !dbg !13776
  call void @llvm.dbg.declare(metadata !343, metadata !7786, metadata !DIExpression()) #10, !dbg !13776
  store i32 1, i32* %tmp.i138, align 4, !dbg !13776
  %74 = load i32, i32* %tmp.i138, align 4, !dbg !13776
  call void @llvm.dbg.declare(metadata !343, metadata !7787, metadata !DIExpression()) #10, !dbg !13777
  call void @llvm.dbg.declare(metadata !343, metadata !7793, metadata !DIExpression()) #10, !dbg !13777
  store i32 1, i32* %tmp8.i139, align 4, !dbg !13777
  %75 = load i32, i32* %tmp8.i139, align 4, !dbg !13777
  %76 = load i64, i64* %flags.addr.i137, align 8, !dbg !13778
  call void @arch_local_irq_restore(i64 %76) #11, !dbg !13778
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13779, !srcloc !7797
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i136, align 8, !dbg !13780
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !13780
  %rlock.i140 = bitcast %union.anon.0* %78 to %struct.raw_spinlock*, !dbg !13780
  %79 = load i32, i32* %do_callback, align 4, !dbg !13781
  %tobool120 = icmp ne i32 %79, 0, !dbg !13781
  br i1 %tobool120, label %if.then121, label %if.end124, !dbg !13783

if.then121:                                       ; preds = %if.end118
  %80 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13784
  %f122 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %80, i32 0, i32 1, !dbg !13785
  %81 = load %struct.fc_function_template*, %struct.fc_function_template** %f122, align 8, !dbg !13785
  %dev_loss_tmo_callbk123 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %81, i32 0, i32 16, !dbg !13786
  %82 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %dev_loss_tmo_callbk123, align 8, !dbg !13786
  %83 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13787
  call void %82(%struct.fc_rport* %83) #12, !dbg !13784
  br label %if.end124, !dbg !13784

if.end124:                                        ; preds = %if.then121, %if.end118
  %84 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13788
  %rqst_q = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %84, i32 0, i32 21, !dbg !13789
  %85 = load %struct.request_queue*, %struct.request_queue** %rqst_q, align 8, !dbg !13789
  call void @fc_bsg_remove(%struct.request_queue* %85) #12, !dbg !13790
  %86 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13791
  call void @transport_remove_device(%struct.device* %86) #12, !dbg !13792
  %87 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13793
  call void @device_del(%struct.device* %87) #12, !dbg !13794
  %88 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13795
  call void @transport_destroy_device(%struct.device* %88) #12, !dbg !13796
  %89 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13797
  call void @scsi_host_put(%struct.Scsi_Host* %89) #12, !dbg !13798
  %90 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13799
  call void @put_device(%struct.device* %90) #12, !dbg !13800
  ret void, !dbg !13801
}

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_get(%struct.Scsi_Host*) #2

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @transport_setup_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @transport_add_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @transport_configure_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_rportadd(%struct.Scsi_Host* %shost, %struct.fc_rport* %rport) #0 !dbg !13802 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %rport.addr = alloca %struct.fc_rport*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  %q = alloca %struct.request_queue*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !13805, metadata !DIExpression()), !dbg !13806
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !13807, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13809, metadata !DIExpression()), !dbg !13810
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13811
  %dev1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 15, !dbg !13812
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !13810
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !13813, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13815, metadata !DIExpression()), !dbg !13817
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !13817
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 11, !dbg !13817
  %2 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !13817
  %3 = bitcast %struct.scsi_transport_template* %2 to i8*, !dbg !13817
  store i8* %3, i8** %__mptr, align 8, !dbg !13817
  br label %do.body, !dbg !13817

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13818

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !13817
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !13817
  %5 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !13817
  store %struct.fc_internal* %5, %struct.fc_internal** %tmp, align 8, !dbg !13818
  %6 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !13817
  store %struct.fc_internal* %6, %struct.fc_internal** %i, align 8, !dbg !13814
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !13820, metadata !DIExpression()), !dbg !13821
  %7 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13822
  %rqst_q = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %7, i32 0, i32 21, !dbg !13823
  store %struct.request_queue* null, %struct.request_queue** %rqst_q, align 8, !dbg !13824
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13825
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !13827
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !13827
  %bsg_request = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 22, !dbg !13828
  %10 = load i32 (%struct.bsg_job*)*, i32 (%struct.bsg_job*)** %bsg_request, align 8, !dbg !13828
  %tobool = icmp ne i32 (%struct.bsg_job*)* %10, null, !dbg !13825
  br i1 %tobool, label %if.end, label %if.then, !dbg !13829

if.then:                                          ; preds = %do.end
  store i32 -524, i32* %retval, align 4, !dbg !13830
  br label %return, !dbg !13830

if.end:                                           ; preds = %do.end
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13831
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13832
  %call = call i8* @dev_name(%struct.device* %12) #12, !dbg !13833
  %13 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13834
  %f2 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %13, i32 0, i32 1, !dbg !13835
  %14 = load %struct.fc_function_template*, %struct.fc_function_template** %f2, align 8, !dbg !13835
  %dd_bsg_size = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %14, i32 0, i32 26, !dbg !13836
  %15 = load i32, i32* %dd_bsg_size, align 8, !dbg !13836
  %call3 = call %struct.request_queue* @bsg_setup_queue(%struct.device* %11, i8* %call, i32 (%struct.bsg_job*)* @fc_bsg_dispatch_prep, i32 (%struct.request*)* @fc_bsg_job_timeout, i32 %15) #12, !dbg !13837
  store %struct.request_queue* %call3, %struct.request_queue** %q, align 8, !dbg !13838
  %16 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13839
  %17 = bitcast %struct.request_queue* %16 to i8*, !dbg !13839
  %call4 = call zeroext i1 @IS_ERR(i8* %17) #12, !dbg !13841
  br i1 %call4, label %if.then5, label %if.end7, !dbg !13842

if.then5:                                         ; preds = %if.end
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13843
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i64 0, i64 0)) #13, !dbg !13843
  %19 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13845
  %20 = bitcast %struct.request_queue* %19 to i8*, !dbg !13845
  %call6 = call i64 @PTR_ERR(i8* %20) #12, !dbg !13846
  %conv = trunc i64 %call6 to i32, !dbg !13846
  store i32 %conv, i32* %retval, align 4, !dbg !13847
  br label %return, !dbg !13847

if.end7:                                          ; preds = %if.end
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !13848
  %22 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13849
  call void @__scsi_init_queue(%struct.Scsi_Host* %21, %struct.request_queue* %22) #12, !dbg !13850
  %23 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13851
  call void @blk_queue_rq_timeout(%struct.request_queue* %23, i32 15000) #12, !dbg !13852
  %24 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13853
  %25 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13854
  %rqst_q8 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %25, i32 0, i32 21, !dbg !13855
  store %struct.request_queue* %24, %struct.request_queue** %rqst_q8, align 8, !dbg !13856
  store i32 0, i32* %retval, align 4, !dbg !13857
  br label %return, !dbg !13857

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !13858
  ret i32 %26, !dbg !13858
}

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_terminate_rport_io(%struct.fc_rport* %rport) #0 !dbg !13859 {
entry:
  %rport.addr = alloca %struct.fc_rport*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %i = alloca %struct.fc_internal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_internal*, align 8
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !13860, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !13862, metadata !DIExpression()), !dbg !13863
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13864
  %dev = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 15, !dbg !13864
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !13864
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13864
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !13864
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !13863
  call void @llvm.dbg.declare(metadata %struct.fc_internal** %i, metadata !13865, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13867, metadata !DIExpression()), !dbg !13869
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13869
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 11, !dbg !13869
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** %transportt, align 8, !dbg !13869
  %4 = bitcast %struct.scsi_transport_template* %3 to i8*, !dbg !13869
  store i8* %4, i8** %__mptr, align 8, !dbg !13869
  br label %do.body, !dbg !13869

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13870

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !13869
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !13869
  %6 = bitcast i8* %add.ptr to %struct.fc_internal*, !dbg !13869
  store %struct.fc_internal* %6, %struct.fc_internal** %tmp, align 8, !dbg !13870
  %7 = load %struct.fc_internal*, %struct.fc_internal** %tmp, align 8, !dbg !13869
  store %struct.fc_internal* %7, %struct.fc_internal** %i, align 8, !dbg !13866
  %8 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13872
  %f = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %8, i32 0, i32 1, !dbg !13874
  %9 = load %struct.fc_function_template*, %struct.fc_function_template** %f, align 8, !dbg !13874
  %terminate_rport_io = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %9, i32 0, i32 17, !dbg !13875
  %10 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %terminate_rport_io, align 8, !dbg !13875
  %tobool = icmp ne void (%struct.fc_rport*)* %10, null, !dbg !13872
  br i1 %tobool, label %if.then, label %if.end, !dbg !13876

if.then:                                          ; preds = %do.end
  %11 = load %struct.fc_internal*, %struct.fc_internal** %i, align 8, !dbg !13877
  %f1 = getelementptr inbounds %struct.fc_internal, %struct.fc_internal* %11, i32 0, i32 1, !dbg !13878
  %12 = load %struct.fc_function_template*, %struct.fc_function_template** %f1, align 8, !dbg !13878
  %terminate_rport_io2 = getelementptr inbounds %struct.fc_function_template, %struct.fc_function_template* %12, i32 0, i32 17, !dbg !13879
  %13 = load void (%struct.fc_rport*)*, void (%struct.fc_rport*)** %terminate_rport_io2, align 8, !dbg !13879
  %14 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13880
  call void %13(%struct.fc_rport* %14) #12, !dbg !13877
  br label %if.end, !dbg !13877

if.end:                                           ; preds = %if.then, %do.end
  %15 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13881
  %dev3 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %15, i32 0, i32 15, !dbg !13882
  call void @scsi_target_unblock(%struct.device* %dev3, i32 7) #12, !dbg !13883
  ret void, !dbg !13884
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_target(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fc_bsg_dispatch_prep(%struct.bsg_job* %job) #0 !dbg !13885 {
entry:
  %retval = alloca i32, align 4
  %job.addr = alloca %struct.bsg_job*, align 8
  %rport = alloca %struct.fc_rport*, align 8
  %ret = alloca i8, align 1
  store %struct.bsg_job* %job, %struct.bsg_job** %job.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bsg_job** %job.addr, metadata !13886, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport, metadata !13888, metadata !DIExpression()), !dbg !13889
  %0 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !13890
  %call = call %struct.fc_rport* @fc_bsg_to_rport(%struct.bsg_job* %0) #12, !dbg !13891
  store %struct.fc_rport* %call, %struct.fc_rport** %rport, align 8, !dbg !13889
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !13892, metadata !DIExpression()), !dbg !13893
  %1 = load %struct.fc_rport*, %struct.fc_rport** %rport, align 8, !dbg !13894
  %call1 = call zeroext i8 @fc_bsg_rport_prep(%struct.fc_rport* %1) #12, !dbg !13895
  store i8 %call1, i8* %ret, align 1, !dbg !13896
  %2 = load i8, i8* %ret, align 1, !dbg !13897
  %conv = zext i8 %2 to i32, !dbg !13897
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 9, label %sw.bb2
  ], !dbg !13898

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !13899

sw.bb2:                                           ; preds = %entry
  store i32 -11, i32* %retval, align 4, !dbg !13901
  br label %return, !dbg !13901

sw.default:                                       ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !13902
  br label %return, !dbg !13902

sw.epilog:                                        ; preds = %sw.bb
  %3 = load %struct.bsg_job*, %struct.bsg_job** %job.addr, align 8, !dbg !13903
  %call3 = call i32 @fc_bsg_dispatch(%struct.bsg_job* %3) #12, !dbg !13904
  store i32 %call3, i32* %retval, align 4, !dbg !13905
  br label %return, !dbg !13905

return:                                           ; preds = %sw.epilog, %sw.default, %sw.bb2
  %4 = load i32, i32* %retval, align 4, !dbg !13906
  ret i32 %4, !dbg !13906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @fc_bsg_rport_prep(%struct.fc_rport* %rport) #0 !dbg !13907 {
entry:
  %retval = alloca i8, align 1
  %rport.addr = alloca %struct.fc_rport*, align 8
  store %struct.fc_rport* %rport, %struct.fc_rport** %rport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fc_rport** %rport.addr, metadata !13910, metadata !DIExpression()), !dbg !13911
  %0 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13912
  %port_state = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %0, i32 0, i32 7, !dbg !13914
  %1 = load i32, i32* %port_state, align 8, !dbg !13914
  %cmp = icmp eq i32 %1, 4, !dbg !13915
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13916

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13917
  %flags = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %2, i32 0, i32 13, !dbg !13918
  %3 = load i8, i8* %flags, align 8, !dbg !13918
  %conv = zext i8 %3 to i32, !dbg !13917
  %and = and i32 %conv, 4, !dbg !13919
  %tobool = icmp ne i32 %and, 0, !dbg !13919
  br i1 %tobool, label %if.end, label %if.then, !dbg !13920

if.then:                                          ; preds = %land.lhs.true
  store i8 9, i8* %retval, align 1, !dbg !13921
  br label %return, !dbg !13921

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.fc_rport*, %struct.fc_rport** %rport.addr, align 8, !dbg !13922
  %port_state1 = getelementptr inbounds %struct.fc_rport, %struct.fc_rport* %4, i32 0, i32 7, !dbg !13924
  %5 = load i32, i32* %port_state1, align 8, !dbg !13924
  %cmp2 = icmp ne i32 %5, 2, !dbg !13925
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !13926

if.then4:                                         ; preds = %if.end
  store i8 10, i8* %retval, align 1, !dbg !13927
  br label %return, !dbg !13927

if.end5:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !13928
  br label %return, !dbg !13928

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !13929
  ret i8 %6, !dbg !13929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !13930 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !13933, metadata !DIExpression()), !dbg !13934
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !13935, metadata !DIExpression()), !dbg !13936
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !13937, metadata !DIExpression()), !dbg !13938
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !13939
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !13940
  %2 = load i64, i64* %delay.addr, align 8, !dbg !13941
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #12, !dbg !13942
  ret i1 %call, !dbg !13943
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fc_vport_sched_delete(%struct.work_struct* %work) #0 !dbg !13944 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %vport = alloca %struct.fc_vport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fc_vport*, align 8
  %stat = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.declare(metadata %struct.fc_vport** %vport, metadata !13947, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13949, metadata !DIExpression()), !dbg !13951
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13951
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13951
  store i8* %1, i8** %__mptr, align 8, !dbg !13951
  br label %do.body, !dbg !13951

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13952

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13951
  %add.ptr = getelementptr i8, i8* %2, i64 -848, !dbg !13951
  %3 = bitcast i8* %add.ptr to %struct.fc_vport*, !dbg !13951
  store %struct.fc_vport* %3, %struct.fc_vport** %tmp, align 8, !dbg !13952
  %4 = load %struct.fc_vport*, %struct.fc_vport** %tmp, align 8, !dbg !13951
  store %struct.fc_vport* %4, %struct.fc_vport** %vport, align 8, !dbg !13948
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !13954, metadata !DIExpression()), !dbg !13955
  %5 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !13956
  %call = call i32 @fc_vport_terminate(%struct.fc_vport* %5) #12, !dbg !13957
  store i32 %call, i32* %stat, align 4, !dbg !13958
  %6 = load i32, i32* %stat, align 4, !dbg !13959
  %tobool = icmp ne i32 %6, 0, !dbg !13959
  br i1 %tobool, label %if.then, label %if.end, !dbg !13961

if.then:                                          ; preds = %do.end
  %7 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !13962
  %dev = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %7, i32 0, i32 14, !dbg !13963
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !13964
  %8 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13964
  %9 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !13965
  %dev1 = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %9, i32 0, i32 14, !dbg !13966
  %call2 = call i8* @dev_name(%struct.device* %dev1) #12, !dbg !13967
  %10 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !13968
  %shost = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %10, i32 0, i32 9, !dbg !13969
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13969
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 16, !dbg !13970
  %12 = load i32, i32* %host_no, align 4, !dbg !13970
  %13 = load %struct.fc_vport*, %struct.fc_vport** %vport, align 8, !dbg !13971
  %channel = getelementptr inbounds %struct.fc_vport, %struct.fc_vport* %13, i32 0, i32 10, !dbg !13972
  %14 = load i32, i32* %channel, align 8, !dbg !13972
  %15 = load i32, i32* %stat, align 4, !dbg !13973
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i64 0, i64 0), %struct.device* %8, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.fc_vport_sched_delete, i64 0, i64 0), i8* %call2, i32 %12, i32 %14, i32 %15) #13, !dbg !13974
  br label %if.end, !dbg !13974

if.end:                                           ; preds = %if.then, %do.end
  ret void, !dbg !13975
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link(%struct.kobject*, %struct.kobject*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !13976 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13981, metadata !DIExpression()), !dbg !13982
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13983
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13984
  %1 = load i8*, i8** %name, align 8, !dbg !13984
  ret i8* %1, !dbg !13985
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_run_hw_queues(%struct.request_queue*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @transport_class_register(%struct.transport_class*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6076}
!llvm.module.flags = !{!6077, !6078, !6079, !6080}
!llvm.ident = !{!6081}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_dev_loss_tmo", scope: !2, file: !3, line: 48, type: !6075, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !270, globals: !5735, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/scsi_transport_fc.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !20, !28, !34, !40, !46, !53, !61, !67, !73, !80, !84, !96, !101, !108, !115, !121, !127, !135, !146, !153, !163, !179, !192, !204, !214, !220, !225, !232, !237}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !12, line: 296, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19}
!14 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !21, line: 9, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !29, line: 54, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !35, line: 26, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !41, line: 44, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45}
!43 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !47, line: 343, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !54, line: 524, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59, !60}
!56 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !54, line: 502, baseType: !7, size: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !68, line: 118, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !74, line: 19, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !68, line: 293, baseType: !7, size: 32, elements: !81)
!81 = !{!82, !83}
!82 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !85, line: 49, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92, !93, !94, !95}
!87 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!93 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!94 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!95 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !68, line: 315, baseType: !7, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !102, line: 15, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106, !107}
!104 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !109, line: 59, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113, !114}
!111 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!114 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !116, line: 546, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120}
!118 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !122, line: 16, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125, !126}
!124 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fc_host_event_code", file: !164, line: 451, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/scsi/scsi_transport_fc.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178}
!166 = !DIEnumerator(name: "FCH_EVT_LIP", value: 1, isUnsigned: true)
!167 = !DIEnumerator(name: "FCH_EVT_LINKUP", value: 2, isUnsigned: true)
!168 = !DIEnumerator(name: "FCH_EVT_LINKDOWN", value: 3, isUnsigned: true)
!169 = !DIEnumerator(name: "FCH_EVT_LIPRESET", value: 4, isUnsigned: true)
!170 = !DIEnumerator(name: "FCH_EVT_RSCN", value: 5, isUnsigned: true)
!171 = !DIEnumerator(name: "FCH_EVT_ADAPTER_CHANGE", value: 259, isUnsigned: true)
!172 = !DIEnumerator(name: "FCH_EVT_PORT_UNKNOWN", value: 512, isUnsigned: true)
!173 = !DIEnumerator(name: "FCH_EVT_PORT_OFFLINE", value: 513, isUnsigned: true)
!174 = !DIEnumerator(name: "FCH_EVT_PORT_ONLINE", value: 514, isUnsigned: true)
!175 = !DIEnumerator(name: "FCH_EVT_PORT_FABRIC", value: 516, isUnsigned: true)
!176 = !DIEnumerator(name: "FCH_EVT_LINK_UNKNOWN", value: 1280, isUnsigned: true)
!177 = !DIEnumerator(name: "FCH_EVT_LINK_FPIN", value: 1281, isUnsigned: true)
!178 = !DIEnumerator(name: "FCH_EVT_VENDOR_UNIQUE", value: 65535, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fc_port_state", file: !164, line: 58, baseType: !7, size: 32, elements: !180)
!180 = !{!181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!181 = !DIEnumerator(name: "FC_PORTSTATE_UNKNOWN", value: 0, isUnsigned: true)
!182 = !DIEnumerator(name: "FC_PORTSTATE_NOTPRESENT", value: 1, isUnsigned: true)
!183 = !DIEnumerator(name: "FC_PORTSTATE_ONLINE", value: 2, isUnsigned: true)
!184 = !DIEnumerator(name: "FC_PORTSTATE_OFFLINE", value: 3, isUnsigned: true)
!185 = !DIEnumerator(name: "FC_PORTSTATE_BLOCKED", value: 4, isUnsigned: true)
!186 = !DIEnumerator(name: "FC_PORTSTATE_BYPASSED", value: 5, isUnsigned: true)
!187 = !DIEnumerator(name: "FC_PORTSTATE_DIAGNOSTICS", value: 6, isUnsigned: true)
!188 = !DIEnumerator(name: "FC_PORTSTATE_LINKDOWN", value: 7, isUnsigned: true)
!189 = !DIEnumerator(name: "FC_PORTSTATE_ERROR", value: 8, isUnsigned: true)
!190 = !DIEnumerator(name: "FC_PORTSTATE_LOOPBACK", value: 9, isUnsigned: true)
!191 = !DIEnumerator(name: "FC_PORTSTATE_DELETED", value: 10, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fc_vport_state", file: !164, line: 77, baseType: !7, size: 32, elements: !193)
!193 = !{!194, !195, !196, !197, !198, !199, !200, !201, !202, !203}
!194 = !DIEnumerator(name: "FC_VPORT_UNKNOWN", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "FC_VPORT_ACTIVE", value: 1, isUnsigned: true)
!196 = !DIEnumerator(name: "FC_VPORT_DISABLED", value: 2, isUnsigned: true)
!197 = !DIEnumerator(name: "FC_VPORT_LINKDOWN", value: 3, isUnsigned: true)
!198 = !DIEnumerator(name: "FC_VPORT_INITIALIZING", value: 4, isUnsigned: true)
!199 = !DIEnumerator(name: "FC_VPORT_NO_FABRIC_SUPP", value: 5, isUnsigned: true)
!200 = !DIEnumerator(name: "FC_VPORT_NO_FABRIC_RSCS", value: 6, isUnsigned: true)
!201 = !DIEnumerator(name: "FC_VPORT_FABRIC_LOGOUT", value: 7, isUnsigned: true)
!202 = !DIEnumerator(name: "FC_VPORT_FABRIC_REJ_WWN", value: 8, isUnsigned: true)
!203 = !DIEnumerator(name: "FC_VPORT_FAILED", value: 9, isUnsigned: true)
!204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fc_port_type", file: !164, line: 42, baseType: !7, size: 32, elements: !205)
!205 = !{!206, !207, !208, !209, !210, !211, !212, !213}
!206 = !DIEnumerator(name: "FC_PORTTYPE_UNKNOWN", value: 0, isUnsigned: true)
!207 = !DIEnumerator(name: "FC_PORTTYPE_OTHER", value: 1, isUnsigned: true)
!208 = !DIEnumerator(name: "FC_PORTTYPE_NOTPRESENT", value: 2, isUnsigned: true)
!209 = !DIEnumerator(name: "FC_PORTTYPE_NPORT", value: 3, isUnsigned: true)
!210 = !DIEnumerator(name: "FC_PORTTYPE_NLPORT", value: 4, isUnsigned: true)
!211 = !DIEnumerator(name: "FC_PORTTYPE_LPORT", value: 5, isUnsigned: true)
!212 = !DIEnumerator(name: "FC_PORTTYPE_PTP", value: 6, isUnsigned: true)
!213 = !DIEnumerator(name: "FC_PORTTYPE_NPIV", value: 7, isUnsigned: true)
!214 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fc_tgtid_binding_type", file: !164, line: 134, baseType: !7, size: 32, elements: !215)
!215 = !{!216, !217, !218, !219}
!216 = !DIEnumerator(name: "FC_TGTID_BIND_NONE", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "FC_TGTID_BIND_BY_WWPN", value: 1, isUnsigned: true)
!218 = !DIEnumerator(name: "FC_TGTID_BIND_BY_WWNN", value: 2, isUnsigned: true)
!219 = !DIEnumerator(name: "FC_TGTID_BIND_BY_ID", value: 3, isUnsigned: true)
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !221, line: 10, baseType: !7, size: 32, elements: !222)
!221 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!222 = !{!223, !224}
!223 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!224 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !226, line: 305, baseType: !7, size: 32, elements: !227)
!226 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!227 = !{!228, !229, !230, !231}
!228 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!229 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!230 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!231 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_scan_mode", file: !128, line: 58, baseType: !7, size: 32, elements: !233)
!233 = !{!234, !235, !236}
!234 = !DIEnumerator(name: "SCSI_SCAN_INITIAL", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "SCSI_SCAN_RESCAN", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "SCSI_SCAN_MANUAL", value: 2, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !238, line: 30, baseType: !239, size: 64, elements: !240)
!238 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!239 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269}
!241 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!242 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!243 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!244 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!245 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!246 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!247 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!248 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!249 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!250 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!251 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!252 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!253 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!254 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!255 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!256 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!257 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!258 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!259 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!260 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!261 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!262 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!263 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!264 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!265 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!266 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!267 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!268 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!269 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!270 = !{!271, !273, !274, !278, !280, !281, !4984, !5655, !5538, !355, !5104, !5703, !5121, !5720, !5726, !2645, !419, !239, !290, !4819, !5728, !401, !5729, !5731, !5733, !289, !5046, !5734}
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !272, line: 148, baseType: !7)
!272 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !275, line: 21, baseType: !276)
!275 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !277, line: 27, baseType: !7)
!277 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_rport", file: !164, line: 322, size: 8576, align: 64, elements: !283)
!283 = !{!284, !285, !286, !287, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !304, !310, !4978, !4979, !4980, !4981, !4982, !4983}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "maxframe_size", scope: !282, file: !164, line: 324, baseType: !274, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "supported_classes", scope: !282, file: !164, line: 325, baseType: !274, size: 32, offset: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "dev_loss_tmo", scope: !282, file: !164, line: 328, baseType: !274, size: 32, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !282, file: !164, line: 331, baseType: !288, size: 64, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !275, line: 23, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !277, line: 31, baseType: !290)
!290 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "port_name", scope: !282, file: !164, line: 332, baseType: !288, size: 64, offset: 192)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !282, file: !164, line: 333, baseType: !274, size: 32, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "roles", scope: !282, file: !164, line: 334, baseType: !274, size: 32, offset: 288)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "port_state", scope: !282, file: !164, line: 335, baseType: !179, size: 32, offset: 320)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_target_id", scope: !282, file: !164, line: 336, baseType: !274, size: 32, offset: 352)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "fast_io_fail_tmo", scope: !282, file: !164, line: 337, baseType: !274, size: 32, offset: 384)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "dd_data", scope: !282, file: !164, line: 340, baseType: !280, size: 64, offset: 448)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !282, file: !164, line: 343, baseType: !7, size: 32, offset: 512)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !282, file: !164, line: 344, baseType: !274, size: 32, offset: 544)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !282, file: !164, line: 345, baseType: !301, size: 8, offset: 576)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !275, line: 17, baseType: !302)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !277, line: 21, baseType: !303)
!303 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !282, file: !164, line: 346, baseType: !305, size: 128, offset: 640)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !272, line: 178, size: 128, elements: !306)
!306 = !{!307, !309}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !305, file: !272, line: 179, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !305, file: !272, line: 179, baseType: !308, size: 64, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !282, file: !164, line: 347, baseType: !311, size: 5568, offset: 768)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !47, line: 461, size: 5568, elements: !312)
!312 = !{!313, !4561, !4562, !4565, !4566, !4616, !4689, !4690, !4691, !4692, !4693, !4702, !4796, !4809, !4813, !4814, !4818, !4820, !4821, !4822, !4826, !4832, !4833, !4836, !4840, !4930, !4931, !4932, !4933, !4934, !4966, !4967, !4968, !4971, !4974, !4975, !4976, !4977}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !311, file: !47, line: 462, baseType: !314, size: 512)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !315, line: 64, size: 512, elements: !316)
!315 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!316 = !{!317, !320, !321, !323, !383, !4428, !4555, !4556, !4557, !4558, !4559, !4560}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !314, file: !315, line: 65, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !314, file: !315, line: 66, baseType: !305, size: 128, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !314, file: !315, line: 67, baseType: !322, size: 64, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !314, file: !315, line: 68, baseType: !324, size: 64, offset: 256)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !315, line: 192, size: 704, elements: !326)
!326 = !{!327, !328, !344, !345}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !325, file: !315, line: 193, baseType: !305, size: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !325, file: !315, line: 194, baseType: !329, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !330, line: 83, baseType: !331)
!330 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !330, line: 71, elements: !332)
!332 = !{!333}
!333 = !DIDerivedType(tag: DW_TAG_member, scope: !331, file: !330, line: 72, baseType: !334)
!334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !331, file: !330, line: 72, elements: !335)
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !334, file: !330, line: 73, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !330, line: 20, elements: !338)
!338 = !{!339}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !337, file: !330, line: 21, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !341, line: 25, baseType: !342)
!341 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 25, elements: !343)
!343 = !{}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !325, file: !315, line: 195, baseType: !314, size: 512, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !325, file: !315, line: 196, baseType: !346, size: 64, offset: 640)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !315, line: 156, size: 192, elements: !349)
!349 = !{!350, !356, !361}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !348, file: !315, line: 157, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DISubroutineType(types: !354)
!354 = !{!355, !324, !322}
!355 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !348, file: !315, line: 158, baseType: !357, size: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DISubroutineType(types: !360)
!360 = !{!318, !324, !322}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !348, file: !315, line: 159, baseType: !362, size: 64, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = !DISubroutineType(types: !365)
!365 = !{!355, !324, !322, !366}
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !315, line: 148, size: 20736, elements: !368)
!368 = !{!369, !373, !377, !378, !382}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !367, file: !315, line: 149, baseType: !370, size: 192)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 192, elements: !371)
!371 = !{!372}
!372 = !DISubrange(count: 3)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !367, file: !315, line: 150, baseType: !374, size: 4096, offset: 192)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 4096, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !367, file: !315, line: 151, baseType: !355, size: 32, offset: 4288)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !367, file: !315, line: 152, baseType: !379, size: 16384, offset: 4320)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 16384, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 2048)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !367, file: !315, line: 153, baseType: !355, size: 32, offset: 20704)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !314, file: !315, line: 69, baseType: !384, size: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !315, line: 138, size: 448, elements: !386)
!386 = !{!387, !391, !420, !422, !4390, !4418, !4422}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !385, file: !315, line: 139, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{null, !322}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !385, file: !315, line: 140, baseType: !392, size: 64, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !395, line: 230, size: 128, elements: !396)
!395 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!396 = !{!397, !412}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !394, file: !395, line: 231, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!401, !322, !405, !278}
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !272, line: 60, baseType: !402)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !403, line: 73, baseType: !404)
!403 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !403, line: 15, baseType: !239)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !395, line: 30, size: 128, elements: !407)
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !406, file: !395, line: 31, baseType: !318, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !406, file: !395, line: 32, baseType: !410, size: 16, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !272, line: 19, baseType: !411)
!411 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !394, file: !395, line: 232, baseType: !413, size: 64, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DISubroutineType(types: !415)
!415 = !{!401, !322, !405, !318, !416}
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !272, line: 55, baseType: !417)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !403, line: 72, baseType: !418)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !403, line: 16, baseType: !419)
!419 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !385, file: !315, line: 141, baseType: !421, size: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !385, file: !315, line: 142, baseType: !423, size: 64, offset: 192)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !395, line: 84, size: 320, elements: !427)
!427 = !{!428, !429, !433, !4387, !4388}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !426, file: !395, line: 85, baseType: !318, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !426, file: !395, line: 86, baseType: !430, size: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!410, !322, !405, !355}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !426, file: !395, line: 88, baseType: !434, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!410, !322, !437, !355}
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !395, line: 168, size: 448, elements: !439)
!439 = !{!440, !441, !442, !443, !4382, !4383}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !438, file: !395, line: 169, baseType: !406, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !438, file: !395, line: 170, baseType: !416, size: 64, offset: 128)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !438, file: !395, line: 171, baseType: !280, size: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !438, file: !395, line: 172, baseType: !444, size: 64, offset: 256)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{!401, !447, !322, !437, !278, !618, !416}
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !12, line: 916, size: 1856, align: 32, elements: !449)
!449 = !{!450, !468, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4365, !4366, !4375, !4376, !4377, !4378, !4379, !4380, !4381}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !448, file: !12, line: 920, baseType: !451, size: 128)
!451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !12, line: 917, size: 128, elements: !452)
!452 = !{!453, !459}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !451, file: !12, line: 918, baseType: !454, size: 64)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !455, line: 58, size: 64, elements: !456)
!455 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !454, file: !455, line: 59, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !451, file: !12, line: 919, baseType: !460, size: 128, align: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !272, line: 216, size: 128, align: 64, elements: !461)
!461 = !{!462, !464}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !460, file: !272, line: 217, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !460, file: !272, line: 218, baseType: !465, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{null, !463}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !448, file: !12, line: 921, baseType: !469, size: 128, offset: 128)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !470, line: 8, size: 128, elements: !471)
!470 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!471 = !{!472, !476}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !469, file: !470, line: 9, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !475, line: 18, flags: DIFlagFwdDecl)
!475 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !469, file: !470, line: 10, baseType: !477, size: 64, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !475, line: 89, size: 1536, elements: !479)
!479 = !{!480, !481, !491, !499, !500, !515, !4315, !4317, !4329, !4330, !4331, !4332, !4333, !4339, !4340, !4341}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !478, file: !475, line: 91, baseType: !7, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !478, file: !475, line: 92, baseType: !482, size: 32, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !483, line: 277, baseType: !484)
!483 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !483, line: 277, size: 32, elements: !485)
!485 = !{!486}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !484, file: !483, line: 277, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !483, line: 70, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !483, line: 65, size: 32, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !488, file: !483, line: 66, baseType: !7, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !478, file: !475, line: 93, baseType: !492, size: 128, offset: 64)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !493, line: 38, size: 128, elements: !494)
!493 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!494 = !{!495, !497}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !492, file: !493, line: 39, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !492, file: !493, line: 39, baseType: !498, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !478, file: !475, line: 94, baseType: !477, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !478, file: !475, line: 95, baseType: !501, size: 128, offset: 256)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !475, line: 47, size: 128, elements: !502)
!502 = !{!503, !512}
!503 = !DIDerivedType(tag: DW_TAG_member, scope: !501, file: !475, line: 48, baseType: !504, size: 64)
!504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !501, file: !475, line: 48, size: 64, elements: !505)
!505 = !{!506, !511}
!506 = !DIDerivedType(tag: DW_TAG_member, scope: !504, file: !475, line: 49, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !504, file: !475, line: 49, size: 64, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !507, file: !475, line: 50, baseType: !274, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !507, file: !475, line: 50, baseType: !274, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !504, file: !475, line: 52, baseType: !288, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !501, file: !475, line: 54, baseType: !513, size: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !478, file: !475, line: 96, baseType: !516, size: 64, offset: 384)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !12, line: 610, size: 4224, elements: !518)
!518 = !{!519, !520, !521, !529, !536, !537, !685, !4044, !4045, !4046, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4291, !4299, !4300, !4301, !4311, !4312, !4313, !4314}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !517, file: !12, line: 611, baseType: !410, size: 16)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !517, file: !12, line: 612, baseType: !411, size: 16, offset: 16)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !517, file: !12, line: 613, baseType: !522, size: 32, offset: 32)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !523, line: 23, baseType: !524)
!523 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !523, line: 21, size: 32, elements: !525)
!525 = !{!526}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !524, file: !523, line: 22, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !272, line: 32, baseType: !528)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !403, line: 49, baseType: !7)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !517, file: !12, line: 614, baseType: !530, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !523, line: 28, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !523, line: 26, size: 32, elements: !532)
!532 = !{!533}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !531, file: !523, line: 27, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !272, line: 33, baseType: !535)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !403, line: 50, baseType: !7)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !517, file: !12, line: 615, baseType: !7, size: 32, offset: 96)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !517, file: !12, line: 622, baseType: !538, size: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !12, line: 1864, size: 1536, align: 512, elements: !541)
!541 = !{!542, !546, !559, !563, !569, !573, !579, !583, !587, !591, !595, !596, !602, !606, !632, !661, !665, !671, !676, !680, !681}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !540, file: !12, line: 1865, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!477, !516, !477, !7}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !540, file: !12, line: 1866, baseType: !547, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!318, !477, !516, !550}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !552, line: 10, size: 128, elements: !553)
!552 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!553 = !{!554, !558}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !551, file: !552, line: 11, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !280}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !551, file: !552, line: 12, baseType: !280, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !540, file: !12, line: 1867, baseType: !560, size: 64, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DISubroutineType(types: !562)
!562 = !{!355, !516, !355}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !540, file: !12, line: 1868, baseType: !564, size: 64, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!567, !516, !355}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !12, line: 581, flags: DIFlagFwdDecl)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !540, file: !12, line: 1870, baseType: !570, size: 64, offset: 256)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!355, !477, !278, !355}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !540, file: !12, line: 1872, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!355, !516, !477, !410, !577}
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !272, line: 30, baseType: !578)
!578 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !540, file: !12, line: 1873, baseType: !580, size: 64, offset: 384)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!355, !477, !516, !477}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !540, file: !12, line: 1874, baseType: !584, size: 64, offset: 448)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!355, !516, !477}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !540, file: !12, line: 1875, baseType: !588, size: 64, offset: 512)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!355, !516, !477, !318}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !540, file: !12, line: 1876, baseType: !592, size: 64, offset: 576)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!355, !516, !477, !410}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !540, file: !12, line: 1877, baseType: !584, size: 64, offset: 640)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !540, file: !12, line: 1878, baseType: !597, size: 64, offset: 704)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DISubroutineType(types: !599)
!599 = !{!355, !516, !477, !410, !600}
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !272, line: 16, baseType: !601)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !272, line: 13, baseType: !274)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !540, file: !12, line: 1879, baseType: !603, size: 64, offset: 768)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!355, !516, !477, !516, !477, !7}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !540, file: !12, line: 1881, baseType: !607, size: 64, offset: 832)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DISubroutineType(types: !609)
!609 = !{!355, !477, !610}
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !12, line: 219, size: 640, elements: !612)
!612 = !{!613, !614, !615, !616, !617, !621, !629, !630, !631}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !611, file: !12, line: 220, baseType: !7, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !611, file: !12, line: 221, baseType: !410, size: 16, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !611, file: !12, line: 222, baseType: !522, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !611, file: !12, line: 223, baseType: !530, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !611, file: !12, line: 224, baseType: !618, size: 64, offset: 128)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !272, line: 46, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !403, line: 88, baseType: !620)
!620 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !611, file: !12, line: 225, baseType: !622, size: 128, offset: 192)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !623, line: 13, size: 128, elements: !624)
!623 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!624 = !{!625, !628}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !622, file: !623, line: 14, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !623, line: 8, baseType: !627)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !277, line: 30, baseType: !620)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !622, file: !623, line: 15, baseType: !239, size: 64, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !611, file: !12, line: 226, baseType: !622, size: 128, offset: 320)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !611, file: !12, line: 227, baseType: !622, size: 128, offset: 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !611, file: !12, line: 234, baseType: !447, size: 64, offset: 576)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !540, file: !12, line: 1882, baseType: !633, size: 64, offset: 896)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!355, !636, !638, !274, !7}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !640, line: 22, size: 1152, elements: !641)
!640 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!641 = !{!642, !643, !644, !645, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !639, file: !640, line: 23, baseType: !274, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !639, file: !640, line: 24, baseType: !410, size: 16, offset: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !639, file: !640, line: 25, baseType: !7, size: 32, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !639, file: !640, line: 26, baseType: !646, size: 32, offset: 96)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !272, line: 104, baseType: !274)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !639, file: !640, line: 27, baseType: !288, size: 64, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !639, file: !640, line: 28, baseType: !288, size: 64, offset: 192)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !639, file: !640, line: 37, baseType: !288, size: 64, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !639, file: !640, line: 38, baseType: !600, size: 32, offset: 320)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !639, file: !640, line: 39, baseType: !600, size: 32, offset: 352)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !639, file: !640, line: 40, baseType: !522, size: 32, offset: 384)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !639, file: !640, line: 41, baseType: !530, size: 32, offset: 416)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !639, file: !640, line: 42, baseType: !618, size: 64, offset: 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !639, file: !640, line: 43, baseType: !622, size: 128, offset: 512)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !639, file: !640, line: 44, baseType: !622, size: 128, offset: 640)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !639, file: !640, line: 45, baseType: !622, size: 128, offset: 768)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !639, file: !640, line: 46, baseType: !622, size: 128, offset: 896)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !639, file: !640, line: 47, baseType: !288, size: 64, offset: 1024)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !639, file: !640, line: 48, baseType: !288, size: 64, offset: 1088)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !540, file: !12, line: 1883, baseType: !662, size: 64, offset: 960)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!401, !477, !278, !416}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !540, file: !12, line: 1884, baseType: !666, size: 64, offset: 1024)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!355, !516, !669, !288, !288}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !12, line: 50, flags: DIFlagFwdDecl)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !540, file: !12, line: 1886, baseType: !672, size: 64, offset: 1088)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!355, !516, !675, !355}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !540, file: !12, line: 1887, baseType: !677, size: 64, offset: 1152)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!355, !516, !477, !447, !7, !410}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !540, file: !12, line: 1890, baseType: !592, size: 64, offset: 1216)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !540, file: !12, line: 1891, baseType: !682, size: 64, offset: 1280)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!355, !516, !567, !355}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !517, file: !12, line: 623, baseType: !686, size: 64, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !12, line: 1416, size: 9472, elements: !688)
!688 = !{!689, !690, !691, !692, !693, !694, !744, !3658, !3740, !3823, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3839, !3843, !3844, !3845, !3846, !3849, !3850, !3851, !3892, !3918, !3919, !3920, !3921, !3922, !3923, !3926, !3927, !3934, !3935, !3936, !3937, !3938, !3997, !3998, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !687, file: !12, line: 1417, baseType: !305, size: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !687, file: !12, line: 1418, baseType: !600, size: 32, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !687, file: !12, line: 1419, baseType: !303, size: 8, offset: 160)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !687, file: !12, line: 1420, baseType: !419, size: 64, offset: 192)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !687, file: !12, line: 1421, baseType: !618, size: 64, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !687, file: !12, line: 1422, baseType: !695, size: 64, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !12, line: 2228, size: 576, elements: !697)
!697 = !{!698, !699, !700, !707, !711, !715, !719, !723, !724, !734, !737, !738, !739, !741, !742, !743}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !12, line: 2229, baseType: !318, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !696, file: !12, line: 2230, baseType: !355, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !696, file: !12, line: 2238, baseType: !701, size: 64, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{!355, !704}
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !706, line: 28, flags: DIFlagFwdDecl)
!706 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!707 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !696, file: !12, line: 2239, baseType: !708, size: 64, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !12, line: 70, flags: DIFlagFwdDecl)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !696, file: !12, line: 2240, baseType: !712, size: 64, offset: 256)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!477, !695, !355, !318, !280}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !696, file: !12, line: 2242, baseType: !716, size: 64, offset: 320)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !686}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !696, file: !12, line: 2243, baseType: !720, size: 64, offset: 384)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !722, line: 76, flags: DIFlagFwdDecl)
!722 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !696, file: !12, line: 2244, baseType: !695, size: 64, offset: 448)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !696, file: !12, line: 2245, baseType: !725, size: 64, offset: 512)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !272, line: 182, size: 64, elements: !726)
!726 = !{!727}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !725, file: !272, line: 183, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !272, line: 186, size: 128, elements: !730)
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !729, file: !272, line: 187, baseType: !728, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !729, file: !272, line: 187, baseType: !733, size: 64, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !696, file: !12, line: 2247, baseType: !735, offset: 576)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !736, line: 187, elements: !343)
!736 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!737 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !696, file: !12, line: 2248, baseType: !735, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !696, file: !12, line: 2249, baseType: !735, offset: 576)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !696, file: !12, line: 2250, baseType: !740, offset: 576)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, elements: !371)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !696, file: !12, line: 2252, baseType: !735, offset: 576)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !696, file: !12, line: 2253, baseType: !735, offset: 576)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !696, file: !12, line: 2254, baseType: !735, offset: 576)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !687, file: !12, line: 1423, baseType: !745, size: 64, offset: 384)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !12, line: 1935, size: 1472, elements: !748)
!748 = !{!749, !753, !757, !758, !762, !768, !772, !773, !774, !778, !782, !783, !784, !785, !791, !796, !797, !853, !854, !855, !856, !3642, !3657}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !747, file: !12, line: 1936, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!516, !686}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !747, file: !12, line: 1937, baseType: !754, size: 64, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{null, !516}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !747, file: !12, line: 1938, baseType: !754, size: 64, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !747, file: !12, line: 1940, baseType: !759, size: 64, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{null, !516, !355}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !747, file: !12, line: 1941, baseType: !763, size: 64, offset: 256)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!355, !516, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !116, line: 40, flags: DIFlagFwdDecl)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !747, file: !12, line: 1942, baseType: !769, size: 64, offset: 320)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!355, !516}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !747, file: !12, line: 1943, baseType: !754, size: 64, offset: 384)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !747, file: !12, line: 1944, baseType: !716, size: 64, offset: 448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !747, file: !12, line: 1945, baseType: !775, size: 64, offset: 512)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!355, !686, !355}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !747, file: !12, line: 1946, baseType: !779, size: 64, offset: 576)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!355, !686}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !747, file: !12, line: 1947, baseType: !779, size: 64, offset: 640)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !747, file: !12, line: 1948, baseType: !779, size: 64, offset: 704)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !747, file: !12, line: 1949, baseType: !779, size: 64, offset: 768)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !747, file: !12, line: 1950, baseType: !786, size: 64, offset: 832)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!355, !477, !789}
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !12, line: 57, flags: DIFlagFwdDecl)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !747, file: !12, line: 1951, baseType: !792, size: 64, offset: 896)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!355, !686, !795, !278}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !747, file: !12, line: 1952, baseType: !716, size: 64, offset: 960)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !747, file: !12, line: 1954, baseType: !798, size: 64, offset: 1024)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!355, !801, !477}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !803, line: 16, size: 896, elements: !804)
!803 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!804 = !{!805, !806, !807, !808, !809, !810, !811, !812, !826, !848, !849, !852}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !802, file: !803, line: 17, baseType: !278, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !802, file: !803, line: 18, baseType: !416, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !802, file: !803, line: 19, baseType: !416, size: 64, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !802, file: !803, line: 20, baseType: !416, size: 64, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !802, file: !803, line: 21, baseType: !416, size: 64, offset: 256)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !802, file: !803, line: 22, baseType: !618, size: 64, offset: 320)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !802, file: !803, line: 23, baseType: !618, size: 64, offset: 384)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !802, file: !803, line: 24, baseType: !813, size: 192, offset: 448)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !814, line: 53, size: 192, elements: !815)
!814 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !824, !825}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !813, file: !814, line: 54, baseType: !817, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !818, line: 13, baseType: !819)
!818 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !272, line: 175, baseType: !820)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !272, line: 173, size: 64, elements: !821)
!821 = !{!822}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !820, file: !272, line: 174, baseType: !823, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !275, line: 22, baseType: !627)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !813, file: !814, line: 55, baseType: !329, offset: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !813, file: !814, line: 59, baseType: !305, size: 128, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !802, file: !803, line: 25, baseType: !827, size: 64, offset: 640)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !803, line: 31, size: 256, elements: !830)
!830 = !{!831, !836, !840, !844}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !829, file: !803, line: 32, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!280, !801, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !829, file: !803, line: 33, baseType: !837, size: 64, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !801, !280}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !829, file: !803, line: 34, baseType: !841, size: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!280, !801, !280, !835}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !829, file: !803, line: 35, baseType: !845, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!355, !801, !280}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !802, file: !803, line: 26, baseType: !355, size: 32, offset: 704)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !802, file: !803, line: 27, baseType: !850, size: 64, offset: 768)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !802, file: !803, line: 28, baseType: !280, size: 64, offset: 832)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !747, file: !12, line: 1955, baseType: !798, size: 64, offset: 1088)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !747, file: !12, line: 1956, baseType: !798, size: 64, offset: 1152)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !747, file: !12, line: 1957, baseType: !798, size: 64, offset: 1216)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !747, file: !12, line: 1963, baseType: !857, size: 64, offset: 1280)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!355, !686, !860, !271}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !862, line: 68, size: 512, align: 128, elements: !863)
!862 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!863 = !{!864, !865, !3634, !3641}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !861, file: !862, line: 69, baseType: !419, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !862, line: 77, baseType: !866, size: 320, offset: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !862, line: 77, size: 320, elements: !867)
!867 = !{!868, !1213, !1218, !1246, !1254, !1260, !3585, !3633}
!868 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 78, baseType: !869, size: 320)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 78, size: 320, elements: !870)
!870 = !{!871, !872, !1211, !1212}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !869, file: !862, line: 84, baseType: !305, size: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !869, file: !862, line: 86, baseType: !873, size: 64, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !12, line: 451, size: 1216, align: 64, elements: !875)
!875 = !{!876, !877, !884, !885, !890, !905, !914, !915, !916, !917, !1204, !1205, !1208, !1209, !1210}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !874, file: !12, line: 452, baseType: !516, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !874, file: !12, line: 453, baseType: !878, size: 128, offset: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !879, line: 292, size: 128, elements: !880)
!879 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!880 = !{!881, !882, !883}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !878, file: !879, line: 293, baseType: !329)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !878, file: !879, line: 295, baseType: !271, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !878, file: !879, line: 296, baseType: !280, size: 64, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !874, file: !12, line: 454, baseType: !271, size: 32, offset: 192)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !874, file: !12, line: 455, baseType: !886, size: 32, offset: 224)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !272, line: 168, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !272, line: 166, size: 32, elements: !888)
!888 = !{!889}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !887, file: !272, line: 167, baseType: !355, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !874, file: !12, line: 460, baseType: !891, size: 128, offset: 256)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !892, line: 125, size: 128, elements: !893)
!892 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!893 = !{!894, !904}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !891, file: !892, line: 126, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !892, line: 31, size: 64, elements: !896)
!896 = !{!897}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !895, file: !892, line: 32, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !892, line: 24, size: 192, align: 64, elements: !900)
!900 = !{!901, !902, !903}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !899, file: !892, line: 25, baseType: !419, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !899, file: !892, line: 26, baseType: !898, size: 64, offset: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !899, file: !892, line: 27, baseType: !898, size: 64, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !891, file: !892, line: 127, baseType: !898, size: 64, offset: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !874, file: !12, line: 461, baseType: !906, size: 256, offset: 384)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !907, line: 35, size: 256, elements: !908)
!907 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!908 = !{!909, !910, !911, !913}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !906, file: !907, line: 36, baseType: !817, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !906, file: !907, line: 42, baseType: !817, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !906, file: !907, line: 46, baseType: !912, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !330, line: 29, baseType: !337)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !906, file: !907, line: 47, baseType: !305, size: 128, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !874, file: !12, line: 462, baseType: !419, size: 64, offset: 640)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !874, file: !12, line: 463, baseType: !419, size: 64, offset: 704)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !874, file: !12, line: 464, baseType: !419, size: 64, offset: 768)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !874, file: !12, line: 465, baseType: !918, size: 64, offset: 832)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !12, line: 367, size: 1408, elements: !921)
!921 = !{!922, !926, !930, !934, !938, !942, !955, !961, !965, !970, !974, !978, !982, !1168, !1172, !1178, !1179, !1180, !1184, !1189, !1193, !1200}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !920, file: !12, line: 368, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!355, !860, !766}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !920, file: !12, line: 369, baseType: !927, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{!355, !447, !860}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !920, file: !12, line: 372, baseType: !931, size: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!355, !873, !766}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !920, file: !12, line: 375, baseType: !935, size: 64, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!355, !860}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !920, file: !12, line: 381, baseType: !939, size: 64, offset: 256)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!355, !447, !873, !308, !7}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !920, file: !12, line: 383, baseType: !943, size: 64, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{null, !946}
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !948, line: 795, size: 256, elements: !949)
!948 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!949 = !{!950, !951, !952, !953, !954}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !947, file: !948, line: 796, baseType: !447, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !947, file: !948, line: 797, baseType: !873, size: 64, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !947, file: !948, line: 799, baseType: !419, size: 64, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !947, file: !948, line: 800, baseType: !7, size: 32, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !947, file: !948, line: 801, baseType: !7, size: 32, offset: 224)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !920, file: !12, line: 385, baseType: !956, size: 64, offset: 384)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{!355, !447, !873, !618, !7, !7, !959, !960}
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !920, file: !12, line: 388, baseType: !962, size: 64, offset: 448)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!355, !447, !873, !618, !7, !7, !860, !280}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !920, file: !12, line: 393, baseType: !966, size: 64, offset: 512)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!969, !873, !969}
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !272, line: 125, baseType: !288)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !920, file: !12, line: 394, baseType: !971, size: 64, offset: 576)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !860, !7, !7}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !920, file: !12, line: 395, baseType: !975, size: 64, offset: 640)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!355, !860, !271}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !920, file: !12, line: 396, baseType: !979, size: 64, offset: 704)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !860}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !920, file: !12, line: 397, baseType: !983, size: 64, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!401, !986, !1025}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !12, line: 320, size: 384, elements: !988)
!988 = !{!989, !990, !991, !995, !996, !997, !1000, !1001}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !987, file: !12, line: 321, baseType: !447, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !987, file: !12, line: 326, baseType: !618, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !987, file: !12, line: 327, baseType: !992, size: 64, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{null, !986, !239, !239}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !987, file: !12, line: 328, baseType: !280, size: 64, offset: 192)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !987, file: !12, line: 329, baseType: !355, size: 32, offset: 256)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !987, file: !12, line: 330, baseType: !998, size: 16, offset: 288)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !275, line: 19, baseType: !999)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !277, line: 24, baseType: !411)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !987, file: !12, line: 331, baseType: !998, size: 16, offset: 304)
!1001 = !DIDerivedType(tag: DW_TAG_member, scope: !987, file: !12, line: 332, baseType: !1002, size: 64, offset: 320)
!1002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !987, file: !12, line: 332, size: 64, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1002, file: !12, line: 333, baseType: !7, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1002, file: !12, line: 334, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !948, line: 569, size: 448, elements: !1008)
!1008 = !{!1009, !1010, !1011}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1007, file: !948, line: 570, baseType: !860, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1007, file: !948, line: 571, baseType: !355, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1007, file: !948, line: 572, baseType: !1012, size: 320, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1013, line: 14, baseType: !1014)
!1013 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1013, line: 29, size: 320, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1024}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1014, file: !1013, line: 30, baseType: !7, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1014, file: !1013, line: 31, baseType: !280, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1014, file: !1013, line: 32, baseType: !1019, size: 64, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1013, line: 16, baseType: !1020)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!355, !1023, !7, !355, !280}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1014, file: !1013, line: 33, baseType: !305, size: 128, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1027, line: 29, size: 320, elements: !1028)
!1027 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1028 = !{!1029, !1030, !1031, !1032, !1159}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1026, file: !1027, line: 35, baseType: !7, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1026, file: !1027, line: 36, baseType: !416, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1026, file: !1027, line: 37, baseType: !416, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !1027, line: 38, baseType: !1033, size: 64, offset: 192)
!1033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1026, file: !1027, line: 38, size: 64, elements: !1034)
!1034 = !{!1035, !1043, !1050, !1059}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1033, file: !1027, line: 39, baseType: !1036, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1039, line: 17, size: 128, elements: !1040)
!1039 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1038, file: !1039, line: 19, baseType: !280, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1038, file: !1039, line: 20, baseType: !417, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1033, file: !1027, line: 40, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1027, line: 15, size: 128, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1046, file: !1027, line: 16, baseType: !280, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1046, file: !1027, line: 17, baseType: !416, size: 64, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1033, file: !1027, line: 41, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1054, line: 31, size: 128, elements: !1055)
!1054 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1055 = !{!1056, !1057, !1058}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1053, file: !1054, line: 32, baseType: !860, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1053, file: !1054, line: 33, baseType: !7, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1053, file: !1054, line: 34, baseType: !7, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1033, file: !1027, line: 42, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1062, line: 57, size: 1088, elements: !1063)
!1062 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1063 = !{!1064, !1065, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1100, !1101, !1128}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1061, file: !1062, line: 58, baseType: !813, size: 192)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1061, file: !1062, line: 59, baseType: !1066, size: 128, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1013, line: 40, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1013, line: 36, size: 128, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1067, file: !1013, line: 37, baseType: !329)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1067, file: !1013, line: 38, baseType: !305, size: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1061, file: !1062, line: 59, baseType: !1066, size: 128, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1061, file: !1062, line: 60, baseType: !7, size: 32, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1061, file: !1062, line: 61, baseType: !7, size: 32, offset: 480)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1061, file: !1062, line: 62, baseType: !7, size: 32, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1061, file: !1062, line: 63, baseType: !7, size: 32, offset: 544)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1061, file: !1062, line: 67, baseType: !7, size: 32, offset: 576)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1061, file: !1062, line: 68, baseType: !7, size: 32, offset: 608)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1061, file: !1062, line: 69, baseType: !7, size: 32, offset: 640)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1061, file: !1062, line: 70, baseType: !7, size: 32, offset: 672)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1061, file: !1062, line: 71, baseType: !7, size: 32, offset: 704)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1061, file: !1062, line: 72, baseType: !7, size: 32, offset: 736)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1061, file: !1062, line: 73, baseType: !860, size: 64, offset: 768)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1061, file: !1062, line: 74, baseType: !1084, size: 64, offset: 832)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !12, line: 1314, size: 320, elements: !1086)
!1086 = !{!1087, !1095, !1096, !1097, !1098, !1099}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1085, file: !12, line: 1315, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1089, line: 20, baseType: !1090)
!1089 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1089, line: 11, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1090, file: !1089, line: 12, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !341, line: 33, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 31, elements: !343)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1085, file: !12, line: 1316, baseType: !355, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1085, file: !12, line: 1317, baseType: !355, size: 32, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1085, file: !12, line: 1318, baseType: !1084, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1085, file: !12, line: 1319, baseType: !447, size: 64, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1085, file: !12, line: 1320, baseType: !460, size: 128, align: 64, offset: 192)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1061, file: !1062, line: 75, baseType: !1084, size: 64, offset: 896)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1061, file: !1062, line: 76, baseType: !1102, size: 64, offset: 960)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1062, line: 26, size: 320, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1126, !1127}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1103, file: !1062, line: 27, baseType: !860, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1103, file: !1062, line: 28, baseType: !7, size: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1103, file: !1062, line: 28, baseType: !7, size: 32, offset: 96)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1103, file: !1062, line: 29, baseType: !1109, size: 64, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1062, line: 93, size: 256, elements: !1112)
!1112 = !{!1113, !1117, !1121, !1125}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1111, file: !1062, line: 101, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!355, !1060, !1102}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1111, file: !1062, line: 107, baseType: !1118, size: 64, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{null, !1060, !1102}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1111, file: !1062, line: 117, baseType: !1122, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!577, !1060, !1102}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1111, file: !1062, line: 122, baseType: !1122, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1103, file: !1062, line: 30, baseType: !7, size: 32, offset: 192)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1103, file: !1062, line: 31, baseType: !419, size: 64, offset: 256)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1061, file: !1062, line: 77, baseType: !1129, size: 64, offset: 1024)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1131, line: 13, size: 896, elements: !1132)
!1131 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1132 = !{!1133, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1130, file: !1131, line: 14, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1135, line: 113, baseType: !1136)
!1135 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1135, line: 111, size: 32, elements: !1137)
!1137 = !{!1138}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1136, file: !1135, line: 112, baseType: !886, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1130, file: !1131, line: 15, baseType: !886, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1130, file: !1131, line: 16, baseType: !886, size: 32, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1130, file: !1131, line: 21, baseType: !817, size: 64, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1130, file: !1131, line: 27, baseType: !419, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1130, file: !1131, line: 28, baseType: !419, size: 64, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1130, file: !1131, line: 29, baseType: !817, size: 64, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1130, file: !1131, line: 32, baseType: !729, size: 128, offset: 384)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1130, file: !1131, line: 33, baseType: !522, size: 32, offset: 512)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1130, file: !1131, line: 37, baseType: !817, size: 64, offset: 576)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1130, file: !1131, line: 44, baseType: !1149, size: 256, offset: 640)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1150, line: 15, size: 256, elements: !1151)
!1150 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1149, file: !1150, line: 16, baseType: !912)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1149, file: !1150, line: 18, baseType: !355, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1149, file: !1150, line: 19, baseType: !355, size: 32, offset: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1149, file: !1150, line: 20, baseType: !355, size: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1149, file: !1150, line: 21, baseType: !355, size: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1149, file: !1150, line: 22, baseType: !419, size: 64, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1149, file: !1150, line: 23, baseType: !419, size: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !1027, line: 44, baseType: !1160, size: 64, offset: 256)
!1160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1026, file: !1027, line: 44, size: 64, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1160, file: !1027, line: 45, baseType: !419, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, scope: !1160, file: !1027, line: 46, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1160, file: !1027, line: 46, size: 64, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1164, file: !1027, line: 47, baseType: !7, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1164, file: !1027, line: 48, baseType: !7, size: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !920, file: !12, line: 402, baseType: !1169, size: 64, offset: 832)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!355, !873, !860, !860, !101}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !920, file: !12, line: 404, baseType: !1173, size: 64, offset: 896)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!577, !860, !1176}
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1177, line: 305, baseType: !7)
!1177 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !920, file: !12, line: 405, baseType: !979, size: 64, offset: 960)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !920, file: !12, line: 406, baseType: !935, size: 64, offset: 1024)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !920, file: !12, line: 407, baseType: !1181, size: 64, offset: 1088)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!355, !860, !419, !419}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !920, file: !12, line: 409, baseType: !1185, size: 64, offset: 1152)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{null, !860, !1188, !1188}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !920, file: !12, line: 410, baseType: !1190, size: 64, offset: 1216)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!355, !873, !860}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !920, file: !12, line: 413, baseType: !1194, size: 64, offset: 1280)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!355, !1197, !447, !1199}
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !12, line: 61, flags: DIFlagFwdDecl)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !920, file: !12, line: 415, baseType: !1201, size: 64, offset: 1344)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{null, !447}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !874, file: !12, line: 466, baseType: !419, size: 64, offset: 896)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !874, file: !12, line: 467, baseType: !1206, size: 32, offset: 960)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1207, line: 8, baseType: !274)
!1207 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !874, file: !12, line: 468, baseType: !329, offset: 992)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !874, file: !12, line: 469, baseType: !305, size: 128, offset: 1024)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !874, file: !12, line: 470, baseType: !280, size: 64, offset: 1152)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !869, file: !862, line: 87, baseType: !419, size: 64, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !869, file: !862, line: 94, baseType: !419, size: 64, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 96, baseType: !1214, size: 64)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 96, size: 64, elements: !1215)
!1215 = !{!1216}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1214, file: !862, line: 101, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !272, line: 143, baseType: !288)
!1218 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 103, baseType: !1219, size: 320)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 103, size: 320, elements: !1220)
!1220 = !{!1221, !1231, !1234, !1235}
!1221 = !DIDerivedType(tag: DW_TAG_member, scope: !1219, file: !862, line: 104, baseType: !1222, size: 128)
!1222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1219, file: !862, line: 104, size: 128, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1222, file: !862, line: 105, baseType: !305, size: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, scope: !1222, file: !862, line: 106, baseType: !1226, size: 128)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1222, file: !862, line: 106, size: 128, elements: !1227)
!1227 = !{!1228, !1229, !1230}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1226, file: !862, line: 107, baseType: !860, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1226, file: !862, line: 109, baseType: !355, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1226, file: !862, line: 110, baseType: !355, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1219, file: !862, line: 117, baseType: !1232, size: 64, offset: 128)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !862, line: 117, flags: DIFlagFwdDecl)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1219, file: !862, line: 119, baseType: !280, size: 64, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, scope: !1219, file: !862, line: 120, baseType: !1236, size: 64, offset: 256)
!1236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1219, file: !862, line: 120, size: 64, elements: !1237)
!1237 = !{!1238, !1239, !1240}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1236, file: !862, line: 121, baseType: !280, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1236, file: !862, line: 122, baseType: !419, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1236, file: !862, line: 123, baseType: !1241, size: 32)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1236, file: !862, line: 123, size: 32, elements: !1242)
!1242 = !{!1243, !1244, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1241, file: !862, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1241, file: !862, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1241, file: !862, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1246 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 130, baseType: !1247, size: 192)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 130, size: 192, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1247, file: !862, line: 131, baseType: !419, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1247, file: !862, line: 134, baseType: !303, size: 8, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1247, file: !862, line: 135, baseType: !303, size: 8, offset: 72)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1247, file: !862, line: 136, baseType: !886, size: 32, offset: 96)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1247, file: !862, line: 137, baseType: !7, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 139, baseType: !1255, size: 256)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 139, size: 256, elements: !1256)
!1256 = !{!1257, !1258, !1259}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1255, file: !862, line: 140, baseType: !419, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1255, file: !862, line: 141, baseType: !886, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1255, file: !862, line: 143, baseType: !305, size: 128, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 145, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 145, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1267, !1268, !3584}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1261, file: !862, line: 146, baseType: !419, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1261, file: !862, line: 147, baseType: !1265, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1266, line: 509, baseType: !860)
!1266 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1261, file: !862, line: 148, baseType: !419, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !862, line: 149, baseType: !1269, size: 64, offset: 192)
!1269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !862, line: 149, size: 64, elements: !1270)
!1270 = !{!1271, !3583}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1269, file: !862, line: 150, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !862, line: 388, size: 7296, elements: !1274)
!1274 = !{!1275, !3581}
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !862, line: 389, baseType: !1276, size: 7296)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !862, line: 389, size: 7296, elements: !1277)
!1277 = !{!1278, !1396, !1397, !1398, !1402, !1403, !1404, !1405, !1406, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1447, !1455, !1458, !1498, !1499, !3565, !3566, !3569, !3570, !3571, !3574, !3575, !3576, !3579, !3580}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1276, file: !862, line: 390, baseType: !1279, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !862, line: 305, size: 1472, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1296, !1297, !1302, !1303, !1306, !1390, !1391, !1392, !1393, !1394}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1280, file: !862, line: 308, baseType: !419, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1280, file: !862, line: 309, baseType: !419, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1280, file: !862, line: 313, baseType: !1279, size: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1280, file: !862, line: 313, baseType: !1279, size: 64, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1280, file: !862, line: 315, baseType: !899, size: 192, align: 64, offset: 256)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1280, file: !862, line: 323, baseType: !419, size: 64, offset: 448)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1280, file: !862, line: 327, baseType: !1272, size: 64, offset: 512)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1280, file: !862, line: 333, baseType: !1290, size: 64, offset: 576)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1266, line: 284, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1266, line: 284, size: 64, elements: !1292)
!1292 = !{!1293}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1291, file: !1266, line: 284, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1295, line: 19, baseType: !419)
!1295 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1280, file: !862, line: 334, baseType: !419, size: 64, offset: 640)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1280, file: !862, line: 343, baseType: !1298, size: 256, offset: 704)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1280, file: !862, line: 340, size: 256, elements: !1299)
!1299 = !{!1300, !1301}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1298, file: !862, line: 341, baseType: !899, size: 192, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1298, file: !862, line: 342, baseType: !419, size: 64, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1280, file: !862, line: 351, baseType: !305, size: 128, offset: 960)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1280, file: !862, line: 353, baseType: !1304, size: 64, offset: 1088)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !862, line: 353, flags: DIFlagFwdDecl)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1280, file: !862, line: 356, baseType: !1307, size: 64, offset: 1152)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !116, line: 557, size: 832, elements: !1310)
!1310 = !{!1311, !1315, !1316, !1320, !1324, !1364, !1368, !1372, !1376, !1377, !1378, !1382, !1386}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1309, file: !116, line: 558, baseType: !1312, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1279}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1309, file: !116, line: 559, baseType: !1312, size: 64, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1309, file: !116, line: 560, baseType: !1317, size: 64, offset: 128)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!355, !1279, !419}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1309, file: !116, line: 561, baseType: !1321, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!355, !1279}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1309, file: !116, line: 562, baseType: !1325, size: 64, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !862, line: 682, baseType: !7)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !116, line: 508, size: 768, elements: !1331)
!1331 = !{!1332, !1333, !1334, !1335, !1336, !1337, !1344, !1351, !1357, !1358, !1359, !1361, !1363}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1330, file: !116, line: 509, baseType: !1279, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1330, file: !116, line: 510, baseType: !7, size: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1330, file: !116, line: 511, baseType: !271, size: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1330, file: !116, line: 512, baseType: !419, size: 64, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1330, file: !116, line: 513, baseType: !419, size: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1330, file: !116, line: 514, baseType: !1338, size: 64, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1266, line: 385, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1266, line: 385, size: 64, elements: !1341)
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1340, file: !1266, line: 385, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1295, line: 15, baseType: !419)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1330, file: !116, line: 516, baseType: !1345, size: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1266, line: 359, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1266, line: 359, size: 64, elements: !1348)
!1348 = !{!1349}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1347, file: !1266, line: 359, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1295, line: 16, baseType: !419)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1330, file: !116, line: 519, baseType: !1352, size: 64, offset: 384)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1295, line: 21, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 21, size: 64, elements: !1354)
!1354 = !{!1355}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1353, file: !1295, line: 21, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1295, line: 14, baseType: !419)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1330, file: !116, line: 521, baseType: !860, size: 64, offset: 448)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1330, file: !116, line: 522, baseType: !860, size: 64, offset: 512)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1330, file: !116, line: 528, baseType: !1360, size: 64, offset: 576)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1330, file: !116, line: 532, baseType: !1362, size: 64, offset: 640)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1330, file: !116, line: 536, baseType: !1265, size: 64, offset: 704)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1309, file: !116, line: 563, baseType: !1365, size: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!1328, !1329, !115}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1309, file: !116, line: 565, baseType: !1369, size: 64, offset: 384)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{null, !1329, !419, !419}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1309, file: !116, line: 567, baseType: !1373, size: 64, offset: 448)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!419, !1279}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1309, file: !116, line: 571, baseType: !1325, size: 64, offset: 512)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1309, file: !116, line: 574, baseType: !1325, size: 64, offset: 576)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1309, file: !116, line: 579, baseType: !1379, size: 64, offset: 640)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!355, !1279, !419, !280, !355, !355}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1309, file: !116, line: 585, baseType: !1383, size: 64, offset: 704)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!318, !1279}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1309, file: !116, line: 615, baseType: !1387, size: 64, offset: 768)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!860, !1279, !419}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1280, file: !862, line: 359, baseType: !419, size: 64, offset: 1216)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1280, file: !862, line: 361, baseType: !447, size: 64, offset: 1280)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1280, file: !862, line: 362, baseType: !280, size: 64, offset: 1344)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1280, file: !862, line: 365, baseType: !817, size: 64, offset: 1408)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1280, file: !862, line: 373, baseType: !1395, offset: 1472)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !862, line: 296, elements: !343)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1276, file: !862, line: 391, baseType: !895, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1276, file: !862, line: 392, baseType: !288, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1276, file: !862, line: 394, baseType: !1399, size: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!419, !447, !419, !419, !419, !419}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1276, file: !862, line: 398, baseType: !419, size: 64, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1276, file: !862, line: 399, baseType: !419, size: 64, offset: 320)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1276, file: !862, line: 405, baseType: !419, size: 64, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1276, file: !862, line: 406, baseType: !419, size: 64, offset: 448)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1276, file: !862, line: 407, baseType: !1407, size: 64, offset: 512)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1266, line: 286, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1266, line: 286, size: 64, elements: !1410)
!1410 = !{!1411}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1409, file: !1266, line: 286, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1295, line: 18, baseType: !419)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1276, file: !862, line: 416, baseType: !886, size: 32, offset: 576)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1276, file: !862, line: 428, baseType: !886, size: 32, offset: 608)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1276, file: !862, line: 437, baseType: !886, size: 32, offset: 640)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1276, file: !862, line: 447, baseType: !886, size: 32, offset: 672)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1276, file: !862, line: 450, baseType: !817, size: 64, offset: 704)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1276, file: !862, line: 452, baseType: !355, size: 32, offset: 768)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1276, file: !862, line: 454, baseType: !329, offset: 800)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1276, file: !862, line: 457, baseType: !906, size: 256, offset: 832)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1276, file: !862, line: 459, baseType: !305, size: 128, offset: 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1276, file: !862, line: 466, baseType: !419, size: 64, offset: 1216)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1276, file: !862, line: 467, baseType: !419, size: 64, offset: 1280)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1276, file: !862, line: 469, baseType: !419, size: 64, offset: 1344)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1276, file: !862, line: 470, baseType: !419, size: 64, offset: 1408)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1276, file: !862, line: 471, baseType: !819, size: 64, offset: 1472)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1276, file: !862, line: 472, baseType: !419, size: 64, offset: 1536)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1276, file: !862, line: 473, baseType: !419, size: 64, offset: 1600)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1276, file: !862, line: 474, baseType: !419, size: 64, offset: 1664)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1276, file: !862, line: 475, baseType: !419, size: 64, offset: 1728)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1276, file: !862, line: 477, baseType: !329, offset: 1792)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1276, file: !862, line: 478, baseType: !419, size: 64, offset: 1792)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1276, file: !862, line: 478, baseType: !419, size: 64, offset: 1856)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1276, file: !862, line: 478, baseType: !419, size: 64, offset: 1920)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1276, file: !862, line: 478, baseType: !419, size: 64, offset: 1984)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1276, file: !862, line: 479, baseType: !419, size: 64, offset: 2048)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1276, file: !862, line: 479, baseType: !419, size: 64, offset: 2112)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1276, file: !862, line: 479, baseType: !419, size: 64, offset: 2176)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1276, file: !862, line: 480, baseType: !419, size: 64, offset: 2240)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1276, file: !862, line: 480, baseType: !419, size: 64, offset: 2304)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1276, file: !862, line: 480, baseType: !419, size: 64, offset: 2368)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1276, file: !862, line: 480, baseType: !419, size: 64, offset: 2432)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1276, file: !862, line: 482, baseType: !1444, size: 2816, offset: 2496)
!1444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 2816, elements: !1445)
!1445 = !{!1446}
!1446 = !DISubrange(count: 44)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1276, file: !862, line: 488, baseType: !1448, size: 256, offset: 5312)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1449, line: 60, size: 256, elements: !1450)
!1449 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1450 = !{!1451}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1448, file: !1449, line: 61, baseType: !1452, size: 256)
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !817, size: 256, elements: !1453)
!1453 = !{!1454}
!1454 = !DISubrange(count: 4)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1276, file: !862, line: 490, baseType: !1456, size: 64, offset: 5568)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !862, line: 490, flags: DIFlagFwdDecl)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1276, file: !862, line: 493, baseType: !1459, size: 896, offset: 5632)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1460, line: 53, baseType: !1461)
!1460 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 13, size: 896, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1469, !1470, !1471, !1472, !1492, !1493, !1494}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1461, file: !1460, line: 18, baseType: !288, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1461, file: !1460, line: 28, baseType: !819, size: 64, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1461, file: !1460, line: 31, baseType: !906, size: 256, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1461, file: !1460, line: 32, baseType: !1467, size: 64, offset: 384)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1460, line: 32, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1461, file: !1460, line: 37, baseType: !411, size: 16, offset: 448)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1461, file: !1460, line: 40, baseType: !813, size: 192, offset: 512)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1461, file: !1460, line: 41, baseType: !280, size: 64, offset: 704)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1461, file: !1460, line: 42, baseType: !1473, size: 64, offset: 768)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1476, line: 13, size: 896, elements: !1477)
!1476 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1477 = !{!1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1475, file: !1476, line: 14, baseType: !280, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1475, file: !1476, line: 15, baseType: !419, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1475, file: !1476, line: 17, baseType: !419, size: 64, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1475, file: !1476, line: 17, baseType: !419, size: 64, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1475, file: !1476, line: 19, baseType: !239, size: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1475, file: !1476, line: 21, baseType: !239, size: 64, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1475, file: !1476, line: 22, baseType: !239, size: 64, offset: 384)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1475, file: !1476, line: 23, baseType: !239, size: 64, offset: 448)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1475, file: !1476, line: 24, baseType: !239, size: 64, offset: 512)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1475, file: !1476, line: 25, baseType: !239, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1475, file: !1476, line: 26, baseType: !239, size: 64, offset: 640)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1475, file: !1476, line: 27, baseType: !239, size: 64, offset: 704)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1475, file: !1476, line: 28, baseType: !239, size: 64, offset: 768)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1475, file: !1476, line: 29, baseType: !239, size: 64, offset: 832)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1461, file: !1460, line: 44, baseType: !886, size: 32, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1461, file: !1460, line: 50, baseType: !998, size: 16, offset: 864)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1461, file: !1460, line: 51, baseType: !1495, size: 16, offset: 880)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !275, line: 18, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !277, line: 23, baseType: !1497)
!1497 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1276, file: !862, line: 495, baseType: !419, size: 64, offset: 6528)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1276, file: !862, line: 497, baseType: !1500, size: 64, offset: 6592)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !862, line: 381, size: 384, elements: !1502)
!1502 = !{!1503, !1504, !3564}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1501, file: !862, line: 382, baseType: !886, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1501, file: !862, line: 383, baseType: !1505, size: 128, offset: 64)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !862, line: 376, size: 128, elements: !1506)
!1506 = !{!1507, !3562}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1505, file: !862, line: 377, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1510, line: 640, size: 48640, elements: !1511)
!1510 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1511 = !{!1512, !1518, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1533, !1551, !1562, !1645, !1646, !1647, !1658, !1659, !1661, !1662, !1663, !1664, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1742, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1774, !1776, !1777, !1778, !1790, !1791, !1792, !1793, !1794, !1795, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1819, !1824, !1983, !1984, !1985, !1986, !1990, !1993, !1996, !1999, !2002, !2028, !2129, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2175, !2176, !2177, !2178, !2179, !2184, !2185, !2186, !2189, !2190, !3210, !3219, !3222, !3223, !3224, !3227, !3228, !3307, !3308, !3311, !3312, !3315, !3316, !3317, !3321, !3322, !3323, !3336, !3337, !3338, !3348, !3353, !3354, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1509, file: !1510, line: 646, baseType: !1513, size: 128)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1514, line: 56, size: 128, elements: !1515)
!1514 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1515 = !{!1516, !1517}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1513, file: !1514, line: 57, baseType: !419, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1513, file: !1514, line: 58, baseType: !274, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1509, file: !1510, line: 649, baseType: !1519, size: 64, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !239)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1509, file: !1510, line: 657, baseType: !280, size: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1509, file: !1510, line: 658, baseType: !1134, size: 32, offset: 256)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1509, file: !1510, line: 660, baseType: !7, size: 32, offset: 288)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1509, file: !1510, line: 661, baseType: !7, size: 32, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1509, file: !1510, line: 684, baseType: !355, size: 32, offset: 352)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1509, file: !1510, line: 686, baseType: !355, size: 32, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1509, file: !1510, line: 687, baseType: !355, size: 32, offset: 416)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1509, file: !1510, line: 688, baseType: !355, size: 32, offset: 448)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1509, file: !1510, line: 689, baseType: !7, size: 32, offset: 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1509, file: !1510, line: 691, baseType: !1530, size: 64, offset: 512)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1510, line: 691, flags: DIFlagFwdDecl)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1509, file: !1510, line: 692, baseType: !1534, size: 832, offset: 576)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1510, line: 451, size: 832, elements: !1535)
!1535 = !{!1536, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1534, file: !1510, line: 453, baseType: !1537, size: 128)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1510, line: 325, size: 128, elements: !1538)
!1538 = !{!1539, !1540}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1537, file: !1510, line: 326, baseType: !419, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1537, file: !1510, line: 327, baseType: !274, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1534, file: !1510, line: 454, baseType: !899, size: 192, align: 64, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1534, file: !1510, line: 455, baseType: !305, size: 128, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1534, file: !1510, line: 456, baseType: !7, size: 32, offset: 448)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1534, file: !1510, line: 458, baseType: !288, size: 64, offset: 512)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1534, file: !1510, line: 459, baseType: !288, size: 64, offset: 576)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1534, file: !1510, line: 460, baseType: !288, size: 64, offset: 640)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1534, file: !1510, line: 461, baseType: !288, size: 64, offset: 704)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1534, file: !1510, line: 463, baseType: !288, size: 64, offset: 768)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1534, file: !1510, line: 465, baseType: !1550, offset: 832)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1510, line: 415, elements: !343)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1509, file: !1510, line: 693, baseType: !1552, size: 384, offset: 1408)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1510, line: 489, size: 384, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1559, !1560}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1552, file: !1510, line: 490, baseType: !305, size: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1552, file: !1510, line: 491, baseType: !419, size: 64, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1552, file: !1510, line: 492, baseType: !419, size: 64, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1552, file: !1510, line: 493, baseType: !7, size: 32, offset: 256)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1552, file: !1510, line: 494, baseType: !411, size: 16, offset: 288)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1552, file: !1510, line: 495, baseType: !411, size: 16, offset: 304)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1552, file: !1510, line: 497, baseType: !1561, size: 64, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1509, file: !1510, line: 697, baseType: !1563, size: 1792, offset: 1792)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1510, line: 507, size: 1792, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1642, !1643}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1563, file: !1510, line: 508, baseType: !899, size: 192, align: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1563, file: !1510, line: 515, baseType: !288, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1563, file: !1510, line: 516, baseType: !288, size: 64, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1563, file: !1510, line: 517, baseType: !288, size: 64, offset: 320)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1563, file: !1510, line: 518, baseType: !288, size: 64, offset: 384)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1563, file: !1510, line: 519, baseType: !288, size: 64, offset: 448)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1563, file: !1510, line: 526, baseType: !823, size: 64, offset: 512)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1563, file: !1510, line: 527, baseType: !288, size: 64, offset: 576)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1563, file: !1510, line: 528, baseType: !7, size: 32, offset: 640)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1563, file: !1510, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1563, file: !1510, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1563, file: !1510, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1563, file: !1510, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1563, file: !1510, line: 563, baseType: !1579, size: 512, offset: 704)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !1580)
!1580 = !{!1581, !1589, !1590, !1595, !1638, !1639, !1640, !1641}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1579, file: !6, line: 119, baseType: !1582, size: 256)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1583, line: 9, size: 256, elements: !1584)
!1583 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1584 = !{!1585, !1586}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1582, file: !1583, line: 10, baseType: !899, size: 192, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1582, file: !1583, line: 11, baseType: !1587, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1588, line: 29, baseType: !823)
!1588 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1579, file: !6, line: 120, baseType: !1587, size: 64, offset: 256)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1579, file: !6, line: 121, baseType: !1591, size: 64, offset: 320)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!5, !1594}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1579, file: !6, line: 122, baseType: !1596, size: 64, offset: 384)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !1598)
!1598 = !{!1599, !1619, !1620, !1623, !1628, !1629, !1633, !1637}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1597, file: !6, line: 160, baseType: !1600, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1601, file: !6, line: 215, baseType: !912)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1601, file: !6, line: 216, baseType: !7, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1601, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1601, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1601, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1601, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1601, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1601, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1601, file: !6, line: 233, baseType: !1587, size: 64, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1601, file: !6, line: 234, baseType: !1594, size: 64, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1601, file: !6, line: 235, baseType: !1587, size: 64, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1601, file: !6, line: 236, baseType: !1594, size: 64, offset: 320)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1601, file: !6, line: 237, baseType: !1616, size: 4096, offset: 512)
!1616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1597, size: 4096, elements: !1617)
!1617 = !{!1618}
!1618 = !DISubrange(count: 8)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1597, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1597, file: !6, line: 162, baseType: !1621, size: 32, offset: 96)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !272, line: 27, baseType: !1622)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !403, line: 96, baseType: !355)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1597, file: !6, line: 163, baseType: !1624, size: 32, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !483, line: 276, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !483, line: 276, size: 32, elements: !1626)
!1626 = !{!1627}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1625, file: !483, line: 276, baseType: !487, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1597, file: !6, line: 164, baseType: !1594, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1597, file: !6, line: 165, baseType: !1630, size: 128, offset: 256)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1583, line: 14, size: 128, elements: !1631)
!1631 = !{!1632}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1630, file: !1583, line: 15, baseType: !891, size: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1597, file: !6, line: 166, baseType: !1634, size: 64, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!1587}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1597, file: !6, line: 167, baseType: !1587, size: 64, offset: 448)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1579, file: !6, line: 123, baseType: !301, size: 8, offset: 448)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1579, file: !6, line: 124, baseType: !301, size: 8, offset: 456)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1579, file: !6, line: 125, baseType: !301, size: 8, offset: 464)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1579, file: !6, line: 126, baseType: !301, size: 8, offset: 472)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1563, file: !1510, line: 572, baseType: !1579, size: 512, offset: 1216)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1563, file: !1510, line: 580, baseType: !1644, size: 64, offset: 1728)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1509, file: !1510, line: 721, baseType: !7, size: 32, offset: 3584)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1509, file: !1510, line: 722, baseType: !355, size: 32, offset: 3616)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1509, file: !1510, line: 723, baseType: !1648, size: 64, offset: 3648)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1651, line: 17, baseType: !1652)
!1651 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1651, line: 17, size: 64, elements: !1653)
!1653 = !{!1654}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1652, file: !1651, line: 17, baseType: !1655, size: 64)
!1655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 64, elements: !1656)
!1656 = !{!1657}
!1657 = !DISubrange(count: 1)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1509, file: !1510, line: 724, baseType: !1650, size: 64, offset: 3712)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1509, file: !1510, line: 749, baseType: !1660, offset: 3776)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1510, line: 290, elements: !343)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1509, file: !1510, line: 751, baseType: !305, size: 128, offset: 3776)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1509, file: !1510, line: 757, baseType: !1272, size: 64, offset: 3904)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1509, file: !1510, line: 758, baseType: !1272, size: 64, offset: 3968)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1509, file: !1510, line: 761, baseType: !1665, size: 320, offset: 4032)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1449, line: 34, size: 320, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1665, file: !1449, line: 35, baseType: !288, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1665, file: !1449, line: 36, baseType: !1669, size: 256, offset: 64)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1279, size: 256, elements: !1453)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1509, file: !1510, line: 766, baseType: !355, size: 32, offset: 4352)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1509, file: !1510, line: 767, baseType: !355, size: 32, offset: 4384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1509, file: !1510, line: 768, baseType: !355, size: 32, offset: 4416)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1509, file: !1510, line: 770, baseType: !355, size: 32, offset: 4448)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1509, file: !1510, line: 772, baseType: !419, size: 64, offset: 4480)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1509, file: !1510, line: 775, baseType: !7, size: 32, offset: 4544)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1509, file: !1510, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1509, file: !1510, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1509, file: !1510, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1509, file: !1510, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1509, file: !1510, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1509, file: !1510, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1509, file: !1510, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1509, file: !1510, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1509, file: !1510, line: 831, baseType: !419, size: 64, offset: 4672)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1509, file: !1510, line: 833, baseType: !1686, size: 384, offset: 4736)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !122, line: 25, size: 384, elements: !1687)
!1687 = !{!1688, !1693}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1686, file: !122, line: 26, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!239, !1692}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1686, file: !122, line: 27, baseType: !1694, size: 320, offset: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1686, file: !122, line: 27, size: 320, elements: !1695)
!1695 = !{!1696, !1705, !1732}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1694, file: !122, line: 36, baseType: !1697, size: 320)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !122, line: 29, size: 320, elements: !1698)
!1698 = !{!1699, !1700, !1701, !1702, !1703, !1704}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1697, file: !122, line: 30, baseType: !273, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1697, file: !122, line: 31, baseType: !274, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1697, file: !122, line: 32, baseType: !274, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1697, file: !122, line: 33, baseType: !274, size: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1697, file: !122, line: 34, baseType: !288, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1697, file: !122, line: 35, baseType: !273, size: 64, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1694, file: !122, line: 46, baseType: !1706, size: 192)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !122, line: 38, size: 192, elements: !1707)
!1707 = !{!1708, !1709, !1710, !1731}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1706, file: !122, line: 39, baseType: !1621, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1706, file: !122, line: 40, baseType: !121, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, scope: !1706, file: !122, line: 41, baseType: !1711, size: 64, offset: 64)
!1711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1706, file: !122, line: 41, size: 64, elements: !1712)
!1712 = !{!1713, !1721}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1711, file: !122, line: 42, baseType: !1714, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1716, line: 7, size: 128, elements: !1717)
!1716 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1717 = !{!1718, !1720}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1715, file: !1716, line: 8, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !403, line: 93, baseType: !620)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1715, file: !1716, line: 9, baseType: !620, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1711, file: !122, line: 43, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1724, line: 7, size: 64, elements: !1725)
!1724 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1725 = !{!1726, !1730}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1723, file: !1724, line: 8, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1724, line: 5, baseType: !1728)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !275, line: 20, baseType: !1729)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !277, line: 26, baseType: !355)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1723, file: !1724, line: 9, baseType: !1728, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1706, file: !122, line: 45, baseType: !288, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1694, file: !122, line: 54, baseType: !1733, size: 256)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !122, line: 48, size: 256, elements: !1734)
!1734 = !{!1735, !1738, !1739, !1740, !1741}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1733, file: !122, line: 49, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !122, line: 14, flags: DIFlagFwdDecl)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1733, file: !122, line: 50, baseType: !355, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1733, file: !122, line: 51, baseType: !355, size: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1733, file: !122, line: 52, baseType: !419, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1733, file: !122, line: 53, baseType: !419, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1509, file: !1510, line: 835, baseType: !1743, size: 32, offset: 5120)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !272, line: 22, baseType: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !403, line: 28, baseType: !355)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1509, file: !1510, line: 836, baseType: !1743, size: 32, offset: 5152)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1509, file: !1510, line: 840, baseType: !419, size: 64, offset: 5184)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1509, file: !1510, line: 849, baseType: !1508, size: 64, offset: 5248)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1509, file: !1510, line: 852, baseType: !1508, size: 64, offset: 5312)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1509, file: !1510, line: 857, baseType: !305, size: 128, offset: 5376)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1509, file: !1510, line: 858, baseType: !305, size: 128, offset: 5504)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1509, file: !1510, line: 859, baseType: !1508, size: 64, offset: 5632)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1509, file: !1510, line: 867, baseType: !305, size: 128, offset: 5696)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1509, file: !1510, line: 868, baseType: !305, size: 128, offset: 5824)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1509, file: !1510, line: 871, baseType: !1755, size: 64, offset: 5952)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !21, line: 59, size: 768, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1763, !1764, !1765, !1766}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1756, file: !21, line: 61, baseType: !1134, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1756, file: !21, line: 62, baseType: !7, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1756, file: !21, line: 63, baseType: !329, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1756, file: !21, line: 65, baseType: !1762, size: 256, offset: 64)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 256, elements: !1453)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1756, file: !21, line: 66, baseType: !725, size: 64, offset: 320)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1756, file: !21, line: 68, baseType: !1066, size: 128, offset: 384)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1756, file: !21, line: 69, baseType: !460, size: 128, align: 64, offset: 512)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1756, file: !21, line: 70, baseType: !1767, size: 128, offset: 640)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 128, elements: !1656)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !21, line: 54, size: 128, elements: !1769)
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1768, file: !21, line: 55, baseType: !355, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1768, file: !21, line: 56, baseType: !1772, size: 64, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !21, line: 56, flags: DIFlagFwdDecl)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1509, file: !1510, line: 872, baseType: !1775, size: 512, offset: 6016)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !1453)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1509, file: !1510, line: 873, baseType: !305, size: 128, offset: 6528)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1509, file: !1510, line: 874, baseType: !305, size: 128, offset: 6656)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1509, file: !1510, line: 876, baseType: !1779, size: 64, offset: 6784)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1781, line: 26, size: 192, elements: !1782)
!1781 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1780, file: !1781, line: 27, baseType: !7, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1780, file: !1781, line: 28, baseType: !1785, size: 128, offset: 64)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1786, line: 43, size: 128, elements: !1787)
!1786 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1787 = !{!1788, !1789}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1785, file: !1786, line: 44, baseType: !912)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1785, file: !1786, line: 45, baseType: !305, size: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1509, file: !1510, line: 879, baseType: !795, size: 64, offset: 6848)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1509, file: !1510, line: 882, baseType: !795, size: 64, offset: 6912)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1509, file: !1510, line: 884, baseType: !288, size: 64, offset: 6976)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1509, file: !1510, line: 885, baseType: !288, size: 64, offset: 7040)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1509, file: !1510, line: 890, baseType: !288, size: 64, offset: 7104)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1509, file: !1510, line: 891, baseType: !1796, size: 128, offset: 7168)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1510, line: 242, size: 128, elements: !1797)
!1797 = !{!1798, !1799, !1800}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1796, file: !1510, line: 244, baseType: !288, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1796, file: !1510, line: 245, baseType: !288, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1796, file: !1510, line: 246, baseType: !912, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1509, file: !1510, line: 900, baseType: !419, size: 64, offset: 7296)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1509, file: !1510, line: 901, baseType: !419, size: 64, offset: 7360)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1509, file: !1510, line: 904, baseType: !288, size: 64, offset: 7424)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1509, file: !1510, line: 907, baseType: !288, size: 64, offset: 7488)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1509, file: !1510, line: 910, baseType: !419, size: 64, offset: 7552)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1509, file: !1510, line: 911, baseType: !419, size: 64, offset: 7616)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1509, file: !1510, line: 914, baseType: !1808, size: 640, offset: 7680)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1809, line: 123, size: 640, elements: !1810)
!1809 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1810 = !{!1811, !1817, !1818}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1808, file: !1809, line: 124, baseType: !1812, size: 576)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1813, size: 576, elements: !371)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1809, line: 108, size: 192, elements: !1814)
!1814 = !{!1815, !1816}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1813, file: !1809, line: 109, baseType: !288, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1813, file: !1809, line: 110, baseType: !1630, size: 128, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1808, file: !1809, line: 125, baseType: !7, size: 32, offset: 576)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1808, file: !1809, line: 126, baseType: !7, size: 32, offset: 608)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1509, file: !1510, line: 917, baseType: !1820, size: 192, offset: 8320)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1809, line: 134, size: 192, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1820, file: !1809, line: 135, baseType: !460, size: 128, align: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1820, file: !1809, line: 136, baseType: !7, size: 32, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1509, file: !1510, line: 923, baseType: !1825, size: 64, offset: 8512)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1828, line: 111, size: 1280, elements: !1829)
!1828 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1849, !1850, !1851, !1852, !1853, !1854, !1961, !1962, !1963, !1964, !1965, !1968, !1978}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1827, file: !1828, line: 112, baseType: !886, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1827, file: !1828, line: 120, baseType: !522, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1827, file: !1828, line: 121, baseType: !530, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1827, file: !1828, line: 122, baseType: !522, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1827, file: !1828, line: 123, baseType: !530, size: 32, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1827, file: !1828, line: 124, baseType: !522, size: 32, offset: 160)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1827, file: !1828, line: 125, baseType: !530, size: 32, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1827, file: !1828, line: 126, baseType: !522, size: 32, offset: 224)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1827, file: !1828, line: 127, baseType: !530, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1827, file: !1828, line: 128, baseType: !7, size: 32, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1827, file: !1828, line: 129, baseType: !1841, size: 64, offset: 320)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1842, line: 26, baseType: !1843)
!1842 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1842, line: 24, size: 64, elements: !1844)
!1844 = !{!1845}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1843, file: !1842, line: 25, baseType: !1846, size: 64)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 64, elements: !1847)
!1847 = !{!1848}
!1848 = !DISubrange(count: 2)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1827, file: !1828, line: 130, baseType: !1841, size: 64, offset: 384)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1827, file: !1828, line: 131, baseType: !1841, size: 64, offset: 448)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1827, file: !1828, line: 132, baseType: !1841, size: 64, offset: 512)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1827, file: !1828, line: 133, baseType: !1841, size: 64, offset: 576)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1827, file: !1828, line: 135, baseType: !303, size: 8, offset: 640)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1827, file: !1828, line: 137, baseType: !1855, size: 64, offset: 704)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1857, line: 189, size: 1664, elements: !1858)
!1857 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1858 = !{!1859, !1860, !1863, !1868, !1869, !1872, !1873, !1878, !1879, !1880, !1881, !1883, !1884, !1885, !1886, !1887, !1925, !1946}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1856, file: !1857, line: 190, baseType: !1134, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1856, file: !1857, line: 191, baseType: !1861, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1857, line: 28, baseType: !1862)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !272, line: 98, baseType: !1728)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 192, baseType: !1864, size: 192, offset: 64)
!1864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 192, size: 192, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1864, file: !1857, line: 193, baseType: !305, size: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1864, file: !1857, line: 194, baseType: !899, size: 192, align: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1856, file: !1857, line: 199, baseType: !906, size: 256, offset: 256)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1856, file: !1857, line: 200, baseType: !1870, size: 64, offset: 512)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1857, line: 200, flags: DIFlagFwdDecl)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1856, file: !1857, line: 201, baseType: !280, size: 64, offset: 576)
!1873 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 202, baseType: !1874, size: 64, offset: 640)
!1874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 202, size: 64, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1874, file: !1857, line: 203, baseType: !626, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1874, file: !1857, line: 204, baseType: !626, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1856, file: !1857, line: 206, baseType: !626, size: 64, offset: 704)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1856, file: !1857, line: 207, baseType: !522, size: 32, offset: 768)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1856, file: !1857, line: 208, baseType: !530, size: 32, offset: 800)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1856, file: !1857, line: 209, baseType: !1882, size: 32, offset: 832)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1857, line: 31, baseType: !646)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1856, file: !1857, line: 210, baseType: !411, size: 16, offset: 864)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1856, file: !1857, line: 211, baseType: !411, size: 16, offset: 880)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1856, file: !1857, line: 215, baseType: !1497, size: 16, offset: 896)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1856, file: !1857, line: 222, baseType: !419, size: 64, offset: 960)
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 239, baseType: !1888, size: 320, offset: 1024)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 239, size: 320, elements: !1889)
!1889 = !{!1890, !1917}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1888, file: !1857, line: 240, baseType: !1891, size: 320)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1857, line: 108, size: 320, elements: !1892)
!1892 = !{!1893, !1894, !1906, !1909, !1916}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1891, file: !1857, line: 110, baseType: !419, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !1857, line: 111, baseType: !1895, size: 64, offset: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !1857, line: 111, size: 64, elements: !1896)
!1896 = !{!1897, !1905}
!1897 = !DIDerivedType(tag: DW_TAG_member, scope: !1895, file: !1857, line: 112, baseType: !1898, size: 64)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1895, file: !1857, line: 112, size: 64, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1898, file: !1857, line: 114, baseType: !998, size: 16)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1898, file: !1857, line: 115, baseType: !1902, size: 48, offset: 16)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 48, elements: !1903)
!1903 = !{!1904}
!1904 = !DISubrange(count: 6)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1895, file: !1857, line: 121, baseType: !419, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1891, file: !1857, line: 123, baseType: !1907, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1857, line: 96, flags: DIFlagFwdDecl)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1891, file: !1857, line: 124, baseType: !1910, size: 64, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1857, line: 102, size: 192, elements: !1912)
!1912 = !{!1913, !1914, !1915}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1911, file: !1857, line: 103, baseType: !460, size: 128, align: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1911, file: !1857, line: 104, baseType: !1134, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1911, file: !1857, line: 105, baseType: !577, size: 8, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1891, file: !1857, line: 125, baseType: !318, size: 64, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, scope: !1888, file: !1857, line: 241, baseType: !1918, size: 320)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1888, file: !1857, line: 241, size: 320, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1918, file: !1857, line: 242, baseType: !419, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1918, file: !1857, line: 243, baseType: !419, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1918, file: !1857, line: 244, baseType: !1907, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1918, file: !1857, line: 245, baseType: !1910, size: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1918, file: !1857, line: 246, baseType: !278, size: 64, offset: 256)
!1925 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 254, baseType: !1926, size: 256, offset: 1344)
!1926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 254, size: 256, elements: !1927)
!1927 = !{!1928, !1934}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1926, file: !1857, line: 255, baseType: !1929, size: 256)
!1929 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1857, line: 128, size: 256, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1929, file: !1857, line: 129, baseType: !280, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1929, file: !1857, line: 130, baseType: !1933, size: 256)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 256, elements: !1453)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1926, file: !1857, line: 256, baseType: !1935, size: 256)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1857, line: 256, size: 256, elements: !1936)
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1935, file: !1857, line: 258, baseType: !305, size: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1935, file: !1857, line: 259, baseType: !1939, size: 128, offset: 128)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1940, line: 22, size: 128, elements: !1941)
!1940 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1941 = !{!1942, !1945}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1939, file: !1940, line: 23, baseType: !1943, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1940, line: 23, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1939, file: !1940, line: 24, baseType: !419, size: 64, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1856, file: !1857, line: 274, baseType: !1947, size: 64, offset: 1600)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1857, line: 170, size: 192, elements: !1949)
!1949 = !{!1950, !1959, !1960}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1948, file: !1857, line: 171, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1857, line: 165, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!355, !1855, !1955, !1957, !1855}
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1908)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1929)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1948, file: !1857, line: 172, baseType: !1855, size: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1948, file: !1857, line: 173, baseType: !1907, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1827, file: !1828, line: 138, baseType: !1855, size: 64, offset: 768)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1827, file: !1828, line: 139, baseType: !1855, size: 64, offset: 832)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1827, file: !1828, line: 140, baseType: !1855, size: 64, offset: 896)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1827, file: !1828, line: 145, baseType: !1129, size: 64, offset: 960)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1827, file: !1828, line: 146, baseType: !1966, size: 64, offset: 1024)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !523, line: 18, flags: DIFlagFwdDecl)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1827, file: !1828, line: 147, baseType: !1969, size: 64, offset: 1088)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1828, line: 25, size: 64, elements: !1971)
!1971 = !{!1972, !1973, !1974}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1970, file: !1828, line: 26, baseType: !886, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1970, file: !1828, line: 27, baseType: !355, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1970, file: !1828, line: 28, baseType: !1975, offset: 64)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, elements: !1976)
!1976 = !{!1977}
!1977 = !DISubrange(count: 0)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1827, file: !1828, line: 149, baseType: !1979, size: 128, offset: 1152)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1827, file: !1828, line: 149, size: 128, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1979, file: !1828, line: 150, baseType: !355, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1979, file: !1828, line: 151, baseType: !460, size: 128, align: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1509, file: !1510, line: 926, baseType: !1825, size: 64, offset: 8576)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1509, file: !1510, line: 929, baseType: !1825, size: 64, offset: 8640)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1509, file: !1510, line: 933, baseType: !1855, size: 64, offset: 8704)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1509, file: !1510, line: 943, baseType: !1987, size: 128, offset: 8768)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 128, elements: !1988)
!1988 = !{!1989}
!1989 = !DISubrange(count: 16)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1509, file: !1510, line: 945, baseType: !1991, size: 64, offset: 8896)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1510, line: 49, flags: DIFlagFwdDecl)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1509, file: !1510, line: 956, baseType: !1994, size: 64, offset: 8960)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1510, line: 45, flags: DIFlagFwdDecl)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1509, file: !1510, line: 959, baseType: !1997, size: 64, offset: 9024)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1510, line: 959, flags: DIFlagFwdDecl)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1509, file: !1510, line: 962, baseType: !2000, size: 64, offset: 9088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1510, line: 66, flags: DIFlagFwdDecl)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1509, file: !1510, line: 966, baseType: !2003, size: 64, offset: 9152)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2005, line: 31, size: 576, elements: !2006)
!2005 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !{!2007, !2008, !2011, !2014, !2017, !2018, !2021, !2024, !2025}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2004, file: !2005, line: 32, baseType: !886, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2004, file: !2005, line: 33, baseType: !2009, size: 64, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2005, line: 9, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2004, file: !2005, line: 34, baseType: !2012, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2005, line: 10, flags: DIFlagFwdDecl)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2004, file: !2005, line: 35, baseType: !2015, size: 64, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2005, line: 8, flags: DIFlagFwdDecl)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2004, file: !2005, line: 36, baseType: !1772, size: 64, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2004, file: !2005, line: 37, baseType: !2019, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1857, line: 34, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2004, file: !2005, line: 38, baseType: !2022, size: 64, offset: 384)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2005, line: 38, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2004, file: !2005, line: 39, baseType: !2022, size: 64, offset: 448)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2004, file: !2005, line: 40, baseType: !2026, size: 64, offset: 512)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2005, line: 12, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1509, file: !1510, line: 969, baseType: !2029, size: 64, offset: 9216)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2031, line: 82, size: 7296, elements: !2032)
!2031 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2032 = !{!2033, !2034, !2035, !2036, !2037, !2038, !2039, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2068, !2077, !2078, !2080, !2081, !2082, !2085, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2115, !2116, !2123, !2124, !2125, !2126, !2127, !2128}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2030, file: !2031, line: 83, baseType: !1134, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2030, file: !2031, line: 84, baseType: !886, size: 32, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2030, file: !2031, line: 85, baseType: !355, size: 32, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2030, file: !2031, line: 86, baseType: !305, size: 128, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2030, file: !2031, line: 88, baseType: !1066, size: 128, offset: 256)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2030, file: !2031, line: 91, baseType: !1508, size: 64, offset: 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2030, file: !2031, line: 94, baseType: !2040, size: 192, offset: 448)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2041, line: 30, size: 192, elements: !2042)
!2041 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2040, file: !2041, line: 31, baseType: !305, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2040, file: !2041, line: 32, baseType: !2045, size: 64, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2046, line: 25, baseType: !2047)
!2046 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2046, line: 23, size: 64, elements: !2048)
!2048 = !{!2049}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2047, file: !2046, line: 24, baseType: !1655, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2030, file: !2031, line: 97, baseType: !725, size: 64, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2030, file: !2031, line: 100, baseType: !355, size: 32, offset: 704)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2030, file: !2031, line: 106, baseType: !355, size: 32, offset: 736)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2030, file: !2031, line: 107, baseType: !1508, size: 64, offset: 768)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2030, file: !2031, line: 110, baseType: !355, size: 32, offset: 832)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2030, file: !2031, line: 111, baseType: !7, size: 32, offset: 864)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2030, file: !2031, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2030, file: !2031, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2030, file: !2031, line: 128, baseType: !355, size: 32, offset: 928)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2030, file: !2031, line: 129, baseType: !305, size: 128, offset: 960)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2030, file: !2031, line: 132, baseType: !1579, size: 512, offset: 1088)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2030, file: !2031, line: 133, baseType: !1587, size: 64, offset: 1600)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2030, file: !2031, line: 140, baseType: !2063, size: 256, offset: 1664)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2064, size: 256, elements: !1847)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2031, line: 38, size: 128, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2064, file: !2031, line: 39, baseType: !288, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2064, file: !2031, line: 40, baseType: !288, size: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2030, file: !2031, line: 146, baseType: !2069, size: 192, offset: 1920)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2031, line: 66, size: 192, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2069, file: !2031, line: 67, baseType: !2072, size: 192)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2031, line: 47, size: 192, elements: !2073)
!2073 = !{!2074, !2075, !2076}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2072, file: !2031, line: 48, baseType: !819, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2072, file: !2031, line: 49, baseType: !819, size: 64, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2072, file: !2031, line: 50, baseType: !819, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2030, file: !2031, line: 150, baseType: !1808, size: 640, offset: 2112)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2030, file: !2031, line: 153, baseType: !2079, size: 256, offset: 2752)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 256, elements: !1453)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2030, file: !2031, line: 159, baseType: !1755, size: 64, offset: 3008)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2030, file: !2031, line: 162, baseType: !355, size: 32, offset: 3072)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2030, file: !2031, line: 164, baseType: !2083, size: 64, offset: 3136)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2031, line: 164, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2030, file: !2031, line: 175, baseType: !2086, size: 32, offset: 3200)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !483, line: 805, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !483, line: 798, size: 32, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2087, file: !483, line: 803, baseType: !482, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2087, file: !483, line: 804, baseType: !329, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2030, file: !2031, line: 176, baseType: !288, size: 64, offset: 3264)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2030, file: !2031, line: 176, baseType: !288, size: 64, offset: 3328)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2030, file: !2031, line: 176, baseType: !288, size: 64, offset: 3392)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2030, file: !2031, line: 176, baseType: !288, size: 64, offset: 3456)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2030, file: !2031, line: 177, baseType: !288, size: 64, offset: 3520)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2030, file: !2031, line: 178, baseType: !288, size: 64, offset: 3584)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2030, file: !2031, line: 179, baseType: !1796, size: 128, offset: 3648)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2030, file: !2031, line: 180, baseType: !419, size: 64, offset: 3776)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2030, file: !2031, line: 180, baseType: !419, size: 64, offset: 3840)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2030, file: !2031, line: 180, baseType: !419, size: 64, offset: 3904)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2030, file: !2031, line: 180, baseType: !419, size: 64, offset: 3968)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2030, file: !2031, line: 181, baseType: !419, size: 64, offset: 4032)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2030, file: !2031, line: 181, baseType: !419, size: 64, offset: 4096)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2030, file: !2031, line: 181, baseType: !419, size: 64, offset: 4160)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2030, file: !2031, line: 181, baseType: !419, size: 64, offset: 4224)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2030, file: !2031, line: 182, baseType: !419, size: 64, offset: 4288)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2030, file: !2031, line: 182, baseType: !419, size: 64, offset: 4352)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2030, file: !2031, line: 182, baseType: !419, size: 64, offset: 4416)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2030, file: !2031, line: 182, baseType: !419, size: 64, offset: 4480)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2030, file: !2031, line: 183, baseType: !419, size: 64, offset: 4544)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2030, file: !2031, line: 183, baseType: !419, size: 64, offset: 4608)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2030, file: !2031, line: 184, baseType: !2113, offset: 4672)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2114, line: 12, elements: !343)
!2114 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2030, file: !2031, line: 192, baseType: !290, size: 64, offset: 4672)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2030, file: !2031, line: 203, baseType: !2117, size: 2048, offset: 4736)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2118, size: 2048, elements: !1988)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2119, line: 43, size: 128, elements: !2120)
!2119 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2118, file: !2119, line: 44, baseType: !418, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2118, file: !2119, line: 45, baseType: !418, size: 64, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2030, file: !2031, line: 220, baseType: !577, size: 8, offset: 6784)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2030, file: !2031, line: 221, baseType: !1497, size: 16, offset: 6800)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2030, file: !2031, line: 222, baseType: !1497, size: 16, offset: 6816)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2030, file: !2031, line: 224, baseType: !1272, size: 64, offset: 6848)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2030, file: !2031, line: 227, baseType: !813, size: 192, offset: 6912)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2030, file: !2031, line: 233, baseType: !813, size: 192, offset: 7104)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1509, file: !1510, line: 970, baseType: !2130, size: 64, offset: 9280)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2031, line: 20, size: 16576, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2136}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2131, file: !2031, line: 21, baseType: !329)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2131, file: !2031, line: 22, baseType: !1134, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2131, file: !2031, line: 23, baseType: !1066, size: 128, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2131, file: !2031, line: 24, baseType: !2137, size: 16384, offset: 192)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2138, size: 16384, elements: !375)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2041, line: 49, size: 256, elements: !2139)
!2139 = !{!2140}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2138, file: !2041, line: 50, baseType: !2141, size: 256)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2041, line: 35, size: 256, elements: !2142)
!2142 = !{!2143, !2150, !2151, !2157}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2141, file: !2041, line: 37, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2145, line: 19, baseType: !2146)
!2145 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2145, line: 18, baseType: !2148)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{null, !355}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2141, file: !2041, line: 38, baseType: !419, size: 64, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2141, file: !2041, line: 44, baseType: !2152, size: 64, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2145, line: 22, baseType: !2153)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2145, line: 21, baseType: !2155)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{null}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2141, file: !2041, line: 46, baseType: !2045, size: 64, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1509, file: !1510, line: 971, baseType: !2045, size: 64, offset: 9344)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1509, file: !1510, line: 972, baseType: !2045, size: 64, offset: 9408)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1509, file: !1510, line: 974, baseType: !2045, size: 64, offset: 9472)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1509, file: !1510, line: 975, baseType: !2040, size: 192, offset: 9536)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1509, file: !1510, line: 976, baseType: !419, size: 64, offset: 9728)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1509, file: !1510, line: 977, baseType: !416, size: 64, offset: 9792)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1509, file: !1510, line: 978, baseType: !7, size: 32, offset: 9856)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1509, file: !1510, line: 980, baseType: !463, size: 64, offset: 9920)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1509, file: !1510, line: 989, baseType: !2167, size: 128, offset: 9984)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2168, line: 35, size: 128, elements: !2169)
!2168 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2169 = !{!2170, !2171, !2172}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2167, file: !2168, line: 36, baseType: !355, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2167, file: !2168, line: 37, baseType: !886, size: 32, offset: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2167, file: !2168, line: 38, baseType: !2173, size: 64, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2168, line: 23, flags: DIFlagFwdDecl)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1509, file: !1510, line: 992, baseType: !288, size: 64, offset: 10112)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1509, file: !1510, line: 993, baseType: !288, size: 64, offset: 10176)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1509, file: !1510, line: 996, baseType: !329, offset: 10240)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1509, file: !1510, line: 999, baseType: !912, offset: 10240)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1509, file: !1510, line: 1001, baseType: !2180, size: 64, offset: 10240)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1510, line: 636, size: 64, elements: !2181)
!2181 = !{!2182}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2180, file: !1510, line: 637, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1509, file: !1510, line: 1005, baseType: !891, size: 128, offset: 10304)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1509, file: !1510, line: 1007, baseType: !1508, size: 64, offset: 10432)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1509, file: !1510, line: 1009, baseType: !2187, size: 64, offset: 10496)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1510, line: 1009, flags: DIFlagFwdDecl)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1509, file: !1510, line: 1043, baseType: !280, size: 64, offset: 10560)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1509, file: !1510, line: 1046, baseType: !2191, size: 64, offset: 10624)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2193, line: 554, size: 128, elements: !2194)
!2193 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2194 = !{!2195, !3209}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2192, file: !2193, line: 555, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2198, line: 203, size: 832, elements: !2199)
!2198 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2199 = !{!2200, !2201, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3177, !3182, !3183, !3202, !3203, !3204, !3205, !3206, !3208}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2197, file: !2198, line: 204, baseType: !2196, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2197, file: !2198, line: 205, baseType: !2202, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2204, line: 167, size: 8512, elements: !2205)
!2204 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !{!2206, !2207, !2208, !2209, !2213, !2214, !2215, !2288, !2289, !2479, !3144, !3145, !3146, !3147, !3148, !3149, !3152, !3153, !3156, !3157, !3158, !3161}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2203, file: !2204, line: 171, baseType: !355, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2203, file: !2204, line: 172, baseType: !355, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2203, file: !2204, line: 173, baseType: !355, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2203, file: !2204, line: 176, baseType: !2210, size: 256, offset: 96)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !2211)
!2211 = !{!2212}
!2212 = !DISubrange(count: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2203, file: !2204, line: 178, baseType: !411, size: 16, offset: 352)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2203, file: !2204, line: 179, baseType: !411, size: 16, offset: 368)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2203, file: !2204, line: 186, baseType: !2216, size: 64, offset: 384)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2204, line: 149, size: 256, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2284}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2217, file: !2204, line: 150, baseType: !460, size: 128, align: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2217, file: !2204, line: 151, baseType: !355, size: 32, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2217, file: !2204, line: 152, baseType: !2222, size: 64, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2204, line: 53, size: 6592, elements: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2231, !2252, !2253, !2254, !2255, !2256, !2266}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2223, file: !2204, line: 54, baseType: !969, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2223, file: !2204, line: 60, baseType: !969, size: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2223, file: !2204, line: 64, baseType: !419, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2223, file: !2204, line: 65, baseType: !2229, size: 64, offset: 192)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2204, line: 65, flags: DIFlagFwdDecl)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2223, file: !2204, line: 66, baseType: !2232, size: 128, offset: 256)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2233, line: 105, size: 128, elements: !2234)
!2233 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2234 = !{!2235, !2236}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2232, file: !2233, line: 110, baseType: !419, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2232, file: !2233, line: 118, baseType: !2237, size: 64, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2233, line: 95, size: 448, elements: !2239)
!2239 = !{!2240, !2241, !2247, !2248, !2249, !2250, !2251}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2238, file: !2233, line: 96, baseType: !817, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2238, file: !2233, line: 97, baseType: !2242, size: 64, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2233, line: 60, baseType: !2244)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{null, !2246}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2238, file: !2233, line: 98, baseType: !2242, size: 64, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2238, file: !2233, line: 99, baseType: !577, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2238, file: !2233, line: 100, baseType: !577, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2238, file: !2233, line: 101, baseType: !460, size: 128, align: 64, offset: 256)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2238, file: !2233, line: 102, baseType: !2246, size: 64, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2223, file: !2204, line: 68, baseType: !311, size: 5568, offset: 384)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2223, file: !2204, line: 69, baseType: !322, size: 64, offset: 5952)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2223, file: !2204, line: 70, baseType: !355, size: 32, offset: 6016)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2223, file: !2204, line: 70, baseType: !355, size: 32, offset: 6048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2223, file: !2204, line: 71, baseType: !2257, size: 64, offset: 6080)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2204, line: 48, size: 808, elements: !2259)
!2259 = !{!2260, !2264}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2258, file: !2204, line: 49, baseType: !2261, size: 296)
!2261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 296, elements: !2262)
!2262 = !{!2263}
!2263 = !DISubrange(count: 37)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2258, file: !2204, line: 50, baseType: !2265, size: 512, offset: 296)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 512, elements: !375)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2223, file: !2204, line: 75, baseType: !2267, size: 448, offset: 6144)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !238, line: 124, size: 448, elements: !2268)
!2268 = !{!2269, !2280, !2281}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2267, file: !238, line: 125, baseType: !2270, size: 256)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !238, line: 102, size: 256, elements: !2271)
!2271 = !{!2272, !2273, !2274}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2270, file: !238, line: 103, baseType: !817, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2270, file: !238, line: 104, baseType: !305, size: 128, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2270, file: !238, line: 105, baseType: !2275, size: 64, offset: 192)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !238, line: 21, baseType: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2279}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2267, file: !238, line: 126, baseType: !460, size: 128, align: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2267, file: !238, line: 129, baseType: !2282, size: 64, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !238, line: 18, flags: DIFlagFwdDecl)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2217, file: !2204, line: 153, baseType: !2285, offset: 256)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2222, elements: !2286)
!2286 = !{!2287}
!2287 = !DISubrange(count: -1)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2203, file: !2204, line: 187, baseType: !2223, size: 6592, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2203, file: !2204, line: 189, baseType: !2290, size: 64, offset: 7040)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2292)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !68, line: 1844, size: 960, elements: !2293)
!2293 = !{!2294, !2299, !2408, !2412, !2416, !2420, !2421, !2425, !2429, !2433, !2439, !2443, !2469, !2474, !2475}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2292, file: !68, line: 1845, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!2298, !2196}
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2198, line: 515, baseType: !7)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2292, file: !68, line: 1846, baseType: !2300, size: 64, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!355, !2303, !2407}
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2198, line: 22, size: 1344, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2405, !2406}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2304, file: !2198, line: 23, baseType: !600, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2304, file: !2198, line: 24, baseType: !355, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2304, file: !2198, line: 25, baseType: !516, size: 64, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2304, file: !2198, line: 26, baseType: !686, size: 64, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2304, file: !2198, line: 27, baseType: !813, size: 192, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2304, file: !2198, line: 28, baseType: !280, size: 64, offset: 384)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2304, file: !2198, line: 29, baseType: !280, size: 64, offset: 448)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2304, file: !2198, line: 30, baseType: !355, size: 32, offset: 512)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2304, file: !2198, line: 31, baseType: !577, size: 8, offset: 544)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2304, file: !2198, line: 33, baseType: !305, size: 128, offset: 576)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2304, file: !2198, line: 35, baseType: !2303, size: 64, offset: 704)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2304, file: !2198, line: 36, baseType: !301, size: 8, offset: 768)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2304, file: !2198, line: 37, baseType: !2222, size: 64, offset: 832)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2304, file: !2198, line: 39, baseType: !7, size: 32, offset: 896)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2304, file: !2198, line: 41, baseType: !329, offset: 928)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2304, file: !2198, line: 42, baseType: !2202, size: 64, offset: 960)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2304, file: !2198, line: 43, baseType: !2323, size: 64, offset: 1024)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !85, line: 165, size: 4672, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331, !2336, !2337, !2338, !2339, !2340, !2341, !2397, !2398, !2399, !2401, !2403, !2404}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2324, file: !85, line: 166, baseType: !288, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2324, file: !85, line: 167, baseType: !899, size: 192, align: 64, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2324, file: !85, line: 168, baseType: !305, size: 128, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2324, file: !85, line: 169, baseType: !419, size: 64, offset: 384)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2324, file: !85, line: 170, baseType: !419, size: 64, offset: 448)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2324, file: !85, line: 172, baseType: !2332, size: 32, offset: 512)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2333, line: 19, size: 32, elements: !2334)
!2333 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2334 = !{!2335}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2332, file: !2333, line: 20, baseType: !1134, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2324, file: !85, line: 173, baseType: !7, size: 32, offset: 544)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2324, file: !85, line: 174, baseType: !7, size: 32, offset: 576)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2324, file: !85, line: 175, baseType: !7, size: 32, offset: 608)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2324, file: !85, line: 175, baseType: !7, size: 32, offset: 640)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2324, file: !85, line: 181, baseType: !817, size: 64, offset: 704)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2324, file: !85, line: 183, baseType: !2342, size: 2688, offset: 768)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !85, line: 107, size: 2688, elements: !2343)
!2343 = !{!2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2373, !2374, !2375, !2376, !2377, !2395, !2396}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2342, file: !85, line: 108, baseType: !2323, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2342, file: !85, line: 110, baseType: !419, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2342, file: !85, line: 111, baseType: !419, size: 64, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2342, file: !85, line: 113, baseType: !305, size: 128, offset: 192)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2342, file: !85, line: 114, baseType: !305, size: 128, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2342, file: !85, line: 115, baseType: !305, size: 128, offset: 448)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2342, file: !85, line: 116, baseType: !305, size: 128, offset: 576)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2342, file: !85, line: 117, baseType: !329, offset: 704)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2342, file: !85, line: 119, baseType: !2353, size: 256, offset: 704)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2354, size: 256, elements: !1453)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2355, line: 97, size: 64, elements: !2356)
!2355 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2356 = !{!2357}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2354, file: !2355, line: 98, baseType: !823, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2342, file: !85, line: 121, baseType: !419, size: 64, offset: 960)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2342, file: !85, line: 123, baseType: !419, size: 64, offset: 1024)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2342, file: !85, line: 124, baseType: !419, size: 64, offset: 1088)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2342, file: !85, line: 125, baseType: !419, size: 64, offset: 1152)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2342, file: !85, line: 126, baseType: !419, size: 64, offset: 1216)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2342, file: !85, line: 127, baseType: !419, size: 64, offset: 1280)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2342, file: !85, line: 135, baseType: !419, size: 64, offset: 1344)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2342, file: !85, line: 136, baseType: !419, size: 64, offset: 1408)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2342, file: !85, line: 138, baseType: !2367, size: 128, offset: 1472)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2368, line: 76, size: 128, elements: !2369)
!2368 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2369 = !{!2370, !2371, !2372}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2367, file: !2368, line: 78, baseType: !2354, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2367, file: !2368, line: 80, baseType: !7, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2367, file: !2368, line: 81, baseType: !912, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2342, file: !85, line: 139, baseType: !355, size: 32, offset: 1600)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2342, file: !85, line: 140, baseType: !84, size: 32, offset: 1632)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2342, file: !85, line: 142, baseType: !329, offset: 1664)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2342, file: !85, line: 143, baseType: !305, size: 128, offset: 1664)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2342, file: !85, line: 144, baseType: !2378, size: 704, offset: 1792)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !238, line: 115, size: 704, elements: !2379)
!2379 = !{!2380, !2381, !2393, !2394}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2378, file: !238, line: 116, baseType: !2270, size: 256)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2378, file: !238, line: 117, baseType: !2382, size: 320, offset: 256)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2383, line: 11, size: 320, elements: !2384)
!2383 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2384 = !{!2385, !2386, !2387, !2392}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2382, file: !2383, line: 16, baseType: !729, size: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2382, file: !2383, line: 17, baseType: !419, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2382, file: !2383, line: 18, baseType: !2388, size: 64, offset: 192)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{null, !2391}
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2382, file: !2383, line: 19, baseType: !274, size: 32, offset: 256)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2378, file: !238, line: 120, baseType: !2282, size: 64, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2378, file: !238, line: 121, baseType: !355, size: 32, offset: 640)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2342, file: !85, line: 146, baseType: !419, size: 64, offset: 2496)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2342, file: !85, line: 148, baseType: !305, size: 128, offset: 2560)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2324, file: !85, line: 184, baseType: !305, size: 128, offset: 3456)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2324, file: !85, line: 190, baseType: !1066, size: 128, offset: 3584)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2324, file: !85, line: 192, baseType: !2400, size: 64, offset: 3712)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2324, file: !85, line: 193, baseType: !2402, size: 512, offset: 3776)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 512, elements: !375)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2324, file: !85, line: 194, baseType: !2400, size: 64, offset: 4288)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2324, file: !85, line: 196, baseType: !2382, size: 320, offset: 4352)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2304, file: !2198, line: 46, baseType: !355, size: 32, offset: 1088)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2304, file: !2198, line: 48, baseType: !813, size: 192, offset: 1152)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !272, line: 150, baseType: !7)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2292, file: !68, line: 1847, baseType: !2409, size: 64, offset: 128)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null, !2202, !2407}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2292, file: !68, line: 1848, baseType: !2413, size: 64, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!355, !2303, !969, !860, !7}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2292, file: !68, line: 1849, baseType: !2417, size: 64, offset: 256)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!355, !2303, !2407, !7, !419}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2292, file: !68, line: 1850, baseType: !2417, size: 64, offset: 320)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2292, file: !68, line: 1851, baseType: !2422, size: 64, offset: 384)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!7, !2202, !7}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2292, file: !68, line: 1853, baseType: !2426, size: 64, offset: 448)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DISubroutineType(types: !2428)
!2428 = !{null, !2202}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2292, file: !68, line: 1854, baseType: !2430, size: 64, offset: 512)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!355, !2202}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2292, file: !68, line: 1855, baseType: !2434, size: 64, offset: 576)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{!355, !2303, !2437}
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !12, line: 51, flags: DIFlagFwdDecl)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2292, file: !68, line: 1857, baseType: !2440, size: 64, offset: 640)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{null, !2303, !419}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2292, file: !68, line: 1858, baseType: !2444, size: 64, offset: 704)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!355, !2202, !969, !7, !2447, !280}
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !68, line: 354, baseType: !2448)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{!355, !2451, !7, !280}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2453, line: 106, size: 512, elements: !2454)
!2453 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2454 = !{!2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2464, !2465}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2452, file: !2453, line: 107, baseType: !289, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2452, file: !2453, line: 108, baseType: !289, size: 64, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2452, file: !2453, line: 109, baseType: !289, size: 64, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2452, file: !2453, line: 110, baseType: !302, size: 8, offset: 192)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2452, file: !2453, line: 111, baseType: !302, size: 8, offset: 200)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2452, file: !2453, line: 112, baseType: !302, size: 8, offset: 208)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2452, file: !2453, line: 113, baseType: !302, size: 8, offset: 216)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2452, file: !2453, line: 114, baseType: !2463, size: 32, offset: 224)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 32, elements: !1453)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2452, file: !2453, line: 115, baseType: !289, size: 64, offset: 256)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2452, file: !2453, line: 116, baseType: !2466, size: 192, offset: 320)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 192, elements: !2467)
!2467 = !{!2468}
!2468 = !DISubrange(count: 24)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2292, file: !68, line: 1860, baseType: !2470, size: 64, offset: 768)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!278, !2202, !2473}
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2292, file: !68, line: 1861, baseType: !720, size: 64, offset: 832)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2292, file: !68, line: 1862, baseType: !2476, size: 64, offset: 896)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!2478 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !68, line: 41, flags: DIFlagFwdDecl)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2203, file: !2204, line: 190, baseType: !2480, size: 64, offset: 7104)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !68, line: 399, size: 14464, elements: !2482)
!2482 = !{!2483, !2694, !2816, !2817, !2820, !2823, !2919, !2920, !2921, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2980, !2989, !2990, !2991, !2992, !2993, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3099, !3100, !3101, !3102, !3103, !3104, !3137, !3138, !3139, !3140}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2481, file: !68, line: 400, baseType: !2484, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !68, line: 130, size: 2176, elements: !2486)
!2486 = !{!2487, !2488, !2491, !2575, !2576, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2590, !2597, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2692, !2693}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2485, file: !68, line: 131, baseType: !2480, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2485, file: !68, line: 132, baseType: !2489, size: 64, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !68, line: 132, flags: DIFlagFwdDecl)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2485, file: !68, line: 133, baseType: !2492, size: 64, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2494, line: 16, size: 4032, elements: !2495)
!2494 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2495 = !{!2496, !2502, !2503, !2506, !2507, !2508, !2509, !2510, !2511, !2514, !2515, !2530, !2531, !2532, !2533, !2534, !2536, !2537, !2538, !2539, !2542, !2543, !2544, !2545, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2493, file: !2494, line: 17, baseType: !2497, size: 192)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2493, file: !2494, line: 17, size: 192, elements: !2498)
!2498 = !{!2499, !2500, !2501}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2497, file: !2494, line: 19, baseType: !329)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2497, file: !2494, line: 27, baseType: !305, size: 128)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2497, file: !2494, line: 32, baseType: !419, size: 64, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2493, file: !2494, line: 38, baseType: !2378, size: 704, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2493, file: !2494, line: 40, baseType: !2504, size: 64, offset: 896)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1651, line: 756, baseType: !2505)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 64, elements: !1656)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2493, file: !2494, line: 45, baseType: !355, size: 32, offset: 960)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2493, file: !2494, line: 50, baseType: !355, size: 32, offset: 992)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2493, file: !2494, line: 53, baseType: !419, size: 64, offset: 1024)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2493, file: !2494, line: 59, baseType: !280, size: 64, offset: 1088)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2493, file: !2494, line: 63, baseType: !2480, size: 64, offset: 1152)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2493, file: !2494, line: 65, baseType: !2512, size: 64, offset: 1216)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !68, line: 40, flags: DIFlagFwdDecl)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2493, file: !2494, line: 71, baseType: !280, size: 64, offset: 1280)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2493, file: !2494, line: 77, baseType: !2516, size: 192, offset: 1344)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2517, line: 48, size: 192, elements: !2518)
!2517 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2518 = !{!2519, !2520, !2521, !2522}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2516, file: !2517, line: 52, baseType: !7, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2516, file: !2517, line: 57, baseType: !7, size: 32, offset: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2516, file: !2517, line: 62, baseType: !7, size: 32, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2516, file: !2517, line: 67, baseType: !2523, size: 64, offset: 128)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2517, line: 20, size: 192, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2524, file: !2517, line: 24, baseType: !419, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2524, file: !2517, line: 29, baseType: !419, size: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2524, file: !2517, line: 34, baseType: !419, size: 64, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2524, file: !2517, line: 39, baseType: !329, offset: 192)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2493, file: !2494, line: 83, baseType: !2489, size: 64, offset: 1536)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2493, file: !2494, line: 89, baseType: !7, size: 32, offset: 1600)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2493, file: !2494, line: 92, baseType: !411, size: 16, offset: 1632)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2493, file: !2494, line: 94, baseType: !411, size: 16, offset: 1648)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2493, file: !2494, line: 96, baseType: !2535, size: 64, offset: 1664)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2493, file: !2494, line: 99, baseType: !329, offset: 1728)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2493, file: !2494, line: 104, baseType: !1012, size: 320, offset: 1728)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2493, file: !2494, line: 110, baseType: !886, size: 32, offset: 2048)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2493, file: !2494, line: 116, baseType: !2540, size: 64, offset: 2112)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2494, line: 9, flags: DIFlagFwdDecl)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2493, file: !2494, line: 122, baseType: !2540, size: 64, offset: 2176)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2493, file: !2494, line: 125, baseType: !419, size: 64, offset: 2240)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2493, file: !2494, line: 127, baseType: !419, size: 64, offset: 2304)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2493, file: !2494, line: 130, baseType: !2546, size: 448, offset: 2368)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 448, elements: !2547)
!2547 = !{!2548}
!2548 = !DISubrange(count: 7)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2493, file: !2494, line: 133, baseType: !7, size: 32, offset: 2816)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2493, file: !2494, line: 135, baseType: !7, size: 32, offset: 2848)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2493, file: !2494, line: 141, baseType: !886, size: 32, offset: 2880)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2493, file: !2494, line: 145, baseType: !886, size: 32, offset: 2912)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2493, file: !2494, line: 148, baseType: !729, size: 128, offset: 2944)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2493, file: !2494, line: 150, baseType: !729, size: 128, offset: 3072)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2493, file: !2494, line: 152, baseType: !314, size: 512, offset: 3200)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2493, file: !2494, line: 155, baseType: !419, size: 64, offset: 3712)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2493, file: !2494, line: 157, baseType: !419, size: 64, offset: 3776)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2493, file: !2494, line: 159, baseType: !419, size: 64, offset: 3840)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2493, file: !2494, line: 175, baseType: !305, size: 128, offset: 3904)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2493, file: !2494, line: 182, baseType: !2561, offset: 4032)
!2561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2562, elements: !2286)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2563, line: 16, size: 576, elements: !2564)
!2563 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2564 = !{!2565, !2567, !2568, !2569, !2570, !2571, !2572, !2574}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2562, file: !2563, line: 17, baseType: !2566, size: 32)
!2566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1497, size: 32, elements: !1847)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2562, file: !2563, line: 18, baseType: !1497, size: 16, offset: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2562, file: !2563, line: 19, baseType: !301, size: 8, offset: 48)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2562, file: !2563, line: 20, baseType: !301, size: 8, offset: 56)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2562, file: !2563, line: 21, baseType: !1785, size: 128, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2562, file: !2563, line: 23, baseType: !463, size: 64, offset: 192)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2562, file: !2563, line: 24, baseType: !2573, size: 64, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2562, file: !2563, line: 25, baseType: !2270, size: 256, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2485, file: !68, line: 135, baseType: !7, size: 32, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2485, file: !68, line: 136, baseType: !2577, size: 32, offset: 224)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !68, line: 66, baseType: !276)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2485, file: !68, line: 138, baseType: !355, size: 32, offset: 256)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2485, file: !68, line: 139, baseType: !355, size: 32, offset: 288)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2485, file: !68, line: 142, baseType: !7, size: 32, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2485, file: !68, line: 143, baseType: !969, size: 64, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2485, file: !68, line: 145, baseType: !2196, size: 64, offset: 448)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2485, file: !68, line: 146, baseType: !2196, size: 64, offset: 512)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2485, file: !68, line: 148, baseType: !305, size: 128, offset: 576)
!2585 = !DIDerivedType(tag: DW_TAG_member, scope: !2485, file: !68, line: 157, baseType: !2586, size: 128, offset: 704)
!2586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2485, file: !68, line: 157, size: 128, elements: !2587)
!2587 = !{!2588, !2589}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2586, file: !68, line: 158, baseType: !729, size: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2586, file: !68, line: 159, baseType: !305, size: 128)
!2590 = !DIDerivedType(tag: DW_TAG_member, scope: !2485, file: !68, line: 167, baseType: !2591, size: 192, offset: 832)
!2591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2485, file: !68, line: 167, size: 192, elements: !2592)
!2592 = !{!2593, !2594, !2595, !2596}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2591, file: !68, line: 168, baseType: !899, size: 192, align: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2591, file: !68, line: 169, baseType: !1053, size: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2591, file: !68, line: 170, baseType: !280, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2591, file: !68, line: 171, baseType: !355, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, scope: !2485, file: !68, line: 180, baseType: !2598, size: 256, offset: 1024)
!2598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2485, file: !68, line: 180, size: 256, elements: !2599)
!2599 = !{!2600, !2635}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2598, file: !68, line: 184, baseType: !2601, size: 192)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2598, file: !68, line: 181, size: 192, elements: !2602)
!2602 = !{!2603, !2633}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2601, file: !68, line: 182, baseType: !2604, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2606, line: 73, size: 448, elements: !2607)
!2606 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2607 = !{!2608, !2609, !2622, !2627, !2632}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2605, file: !2606, line: 74, baseType: !2480, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2605, file: !2606, line: 75, baseType: !2610, size: 64, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2606, line: 99, size: 704, elements: !2612)
!2612 = !{!2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2611, file: !2606, line: 100, baseType: !817, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2611, file: !2606, line: 101, baseType: !886, size: 32, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2611, file: !2606, line: 102, baseType: !886, size: 32, offset: 96)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2611, file: !2606, line: 105, baseType: !329, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2611, file: !2606, line: 107, baseType: !411, size: 16, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2611, file: !2606, line: 109, baseType: !878, size: 128, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2611, file: !2606, line: 110, baseType: !2604, size: 64, offset: 320)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2611, file: !2606, line: 111, baseType: !725, size: 64, offset: 384)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2611, file: !2606, line: 113, baseType: !2270, size: 256, offset: 448)
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !2606, line: 83, baseType: !2623, size: 128, offset: 128)
!2623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2605, file: !2606, line: 83, size: 128, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2623, file: !2606, line: 84, baseType: !305, size: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2623, file: !2606, line: 85, baseType: !1232, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !2606, line: 87, baseType: !2628, size: 128, offset: 256)
!2628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2605, file: !2606, line: 87, size: 128, elements: !2629)
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2628, file: !2606, line: 88, baseType: !729, size: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2628, file: !2606, line: 89, baseType: !460, size: 128, align: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2605, file: !2606, line: 92, baseType: !7, size: 32, offset: 384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2601, file: !68, line: 183, baseType: !2634, size: 128, offset: 64)
!2634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 128, elements: !1847)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2598, file: !68, line: 190, baseType: !2636, size: 256)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2598, file: !68, line: 186, size: 256, elements: !2637)
!2637 = !{!2638, !2639, !2640}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2636, file: !68, line: 187, baseType: !7, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2636, file: !68, line: 188, baseType: !305, size: 128, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2636, file: !68, line: 189, baseType: !2641, size: 64, offset: 192)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !68, line: 62, baseType: !2643)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{null, !2484, !2645}
!2645 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2198, line: 58, baseType: !301)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2485, file: !68, line: 193, baseType: !2202, size: 64, offset: 1280)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2485, file: !68, line: 194, baseType: !2222, size: 64, offset: 1344)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2485, file: !68, line: 200, baseType: !288, size: 64, offset: 1408)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2485, file: !68, line: 202, baseType: !288, size: 64, offset: 1472)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2485, file: !68, line: 212, baseType: !411, size: 16, offset: 1536)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2485, file: !68, line: 218, baseType: !411, size: 16, offset: 1552)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2485, file: !68, line: 221, baseType: !411, size: 16, offset: 1568)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2485, file: !68, line: 229, baseType: !411, size: 16, offset: 1584)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2485, file: !68, line: 230, baseType: !411, size: 16, offset: 1600)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2485, file: !68, line: 232, baseType: !67, size: 32, offset: 1632)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2485, file: !68, line: 233, baseType: !1134, size: 32, offset: 1664)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2485, file: !68, line: 235, baseType: !7, size: 32, offset: 1696)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2485, file: !68, line: 236, baseType: !419, size: 64, offset: 1728)
!2659 = !DIDerivedType(tag: DW_TAG_member, scope: !2485, file: !68, line: 238, baseType: !2660, size: 256, offset: 1792)
!2660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2485, file: !68, line: 238, size: 256, elements: !2661)
!2661 = !{!2662, !2691}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2660, file: !68, line: 239, baseType: !2663, size: 256)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2664, line: 23, size: 256, elements: !2665)
!2664 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2665 = !{!2666, !2688, !2690}
!2666 = !DIDerivedType(tag: DW_TAG_member, scope: !2663, file: !2664, line: 24, baseType: !2667, size: 128)
!2667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2663, file: !2664, line: 24, size: 128, elements: !2668)
!2668 = !{!2669, !2681}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2667, file: !2664, line: 25, baseType: !2670, size: 128)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2671, line: 58, size: 128, elements: !2672)
!2671 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2672 = !{!2673, !2674, !2679, !2680}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2670, file: !2671, line: 59, baseType: !454, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, scope: !2670, file: !2671, line: 60, baseType: !2675, size: 32, offset: 64)
!2675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2670, file: !2671, line: 60, size: 32, elements: !2676)
!2676 = !{!2677, !2678}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2675, file: !2671, line: 61, baseType: !7, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2675, file: !2671, line: 62, baseType: !886, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2670, file: !2671, line: 65, baseType: !998, size: 16, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2670, file: !2671, line: 65, baseType: !998, size: 16, offset: 112)
!2681 = !DIDerivedType(tag: DW_TAG_member, scope: !2667, file: !2664, line: 26, baseType: !2682, size: 128)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2667, file: !2664, line: 26, size: 128, elements: !2683)
!2683 = !{!2684, !2685, !2686, !2687}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2682, file: !2664, line: 27, baseType: !454, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2682, file: !2664, line: 28, baseType: !7, size: 32, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2682, file: !2664, line: 30, baseType: !998, size: 16, offset: 96)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2682, file: !2664, line: 30, baseType: !998, size: 16, offset: 112)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2663, file: !2664, line: 34, baseType: !2689, size: 64, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2664, line: 17, baseType: !555)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2663, file: !2664, line: 35, baseType: !280, size: 64, offset: 192)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2660, file: !68, line: 240, baseType: !288, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2485, file: !68, line: 246, baseType: !2641, size: 64, offset: 2048)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2485, file: !68, line: 247, baseType: !280, size: 64, offset: 2112)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2481, file: !68, line: 401, baseType: !2695, size: 64, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !74, line: 101, size: 4992, elements: !2697)
!2697 = !{!2698, !2810, !2811, !2812, !2813, !2814}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2696, file: !74, line: 103, baseType: !2699, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !74, line: 66, size: 2240, elements: !2701)
!2701 = !{!2702, !2703, !2785, !2786, !2787, !2800, !2801, !2802, !2804, !2805, !2809}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2700, file: !74, line: 69, baseType: !1232, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2700, file: !74, line: 72, baseType: !2704, size: 1408, offset: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !74, line: 29, size: 1408, elements: !2705)
!2705 = !{!2706, !2710, !2714, !2718, !2722, !2726, !2730, !2734, !2739, !2743, !2747, !2753, !2757, !2758, !2762, !2766, !2770, !2774, !2775, !2779, !2780, !2784}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2704, file: !74, line: 30, baseType: !2707, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!355, !2480, !2699}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2704, file: !74, line: 31, baseType: !2711, size: 64, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{null, !2695}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2704, file: !74, line: 32, baseType: !2715, size: 64, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!355, !2492, !7}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2704, file: !74, line: 33, baseType: !2719, size: 64, offset: 192)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{null, !2492, !7}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2704, file: !74, line: 34, baseType: !2723, size: 64, offset: 256)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !2492}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2704, file: !74, line: 36, baseType: !2727, size: 64, offset: 320)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!577, !2480, !2484, !2196}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2704, file: !74, line: 37, baseType: !2731, size: 64, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!577, !2492, !2196, !7}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2704, file: !74, line: 38, baseType: !2735, size: 64, offset: 448)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!355, !2480, !2738, !2196}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2704, file: !74, line: 39, baseType: !2740, size: 64, offset: 512)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{null, !2480, !2484, !73}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2704, file: !74, line: 40, baseType: !2744, size: 64, offset: 576)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{null, !2480, !2484, !2484}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2704, file: !74, line: 41, baseType: !2748, size: 64, offset: 640)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{null, !7, !2751}
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !74, line: 26, flags: DIFlagFwdDecl)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2704, file: !74, line: 42, baseType: !2754, size: 64, offset: 704)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{null, !2484}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2704, file: !74, line: 43, baseType: !2754, size: 64, offset: 768)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2704, file: !74, line: 44, baseType: !2759, size: 64, offset: 832)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{null, !2492, !308, !577}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2704, file: !74, line: 45, baseType: !2763, size: 64, offset: 896)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!2484, !2492}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2704, file: !74, line: 46, baseType: !2767, size: 64, offset: 960)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!577, !2492}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2704, file: !74, line: 47, baseType: !2771, size: 64, offset: 1024)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !2484, !288}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2704, file: !74, line: 48, baseType: !2754, size: 64, offset: 1088)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2704, file: !74, line: 49, baseType: !2776, size: 64, offset: 1152)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!2484, !2480, !2484}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2704, file: !74, line: 50, baseType: !2776, size: 64, offset: 1216)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2704, file: !74, line: 51, baseType: !2781, size: 64, offset: 1280)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{null, !2604}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2704, file: !74, line: 52, baseType: !2781, size: 64, offset: 1344)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2700, file: !74, line: 74, baseType: !416, size: 64, offset: 1472)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2700, file: !74, line: 75, baseType: !416, size: 64, offset: 1536)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2700, file: !74, line: 76, baseType: !2788, size: 64, offset: 1600)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !74, line: 57, size: 256, elements: !2790)
!2790 = !{!2791, !2792, !2796}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2789, file: !74, line: 58, baseType: !406, size: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2789, file: !74, line: 59, baseType: !2793, size: 64, offset: 128)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!401, !2695, !278}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2789, file: !74, line: 60, baseType: !2797, size: 64, offset: 192)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!401, !2695, !318, !416}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2700, file: !74, line: 77, baseType: !318, size: 64, offset: 1664)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2700, file: !74, line: 78, baseType: !318, size: 64, offset: 1728)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2700, file: !74, line: 79, baseType: !2803, size: 32, offset: 1792)
!2803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2700, file: !74, line: 80, baseType: !720, size: 64, offset: 1856)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2700, file: !74, line: 87, baseType: !2806, size: 176, offset: 1920)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 176, elements: !2807)
!2807 = !{!2808}
!2808 = !DISubrange(count: 22)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2700, file: !74, line: 88, baseType: !305, size: 128, offset: 2112)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2696, file: !74, line: 104, baseType: !280, size: 64, offset: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2696, file: !74, line: 105, baseType: !314, size: 512, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2696, file: !74, line: 106, baseType: !813, size: 192, offset: 640)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2696, file: !74, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2696, file: !74, line: 108, baseType: !2815, size: 4096, offset: 896)
!2815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 4096, elements: !375)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2481, file: !68, line: 403, baseType: !2232, size: 128, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2481, file: !68, line: 405, baseType: !2818, size: 64, offset: 256)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !68, line: 43, flags: DIFlagFwdDecl)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2481, file: !68, line: 406, baseType: !2821, size: 64, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !68, line: 42, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2481, file: !68, line: 408, baseType: !2824, size: 64, offset: 384)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2494, line: 290, size: 960, elements: !2827)
!2827 = !{!2828, !2838, !2839, !2843, !2847, !2851, !2855, !2856, !2860, !2861, !2908, !2912, !2913, !2914, !2915}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !2826, file: !2494, line: 294, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!2645, !2492, !2832}
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2834)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2494, line: 277, size: 128, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !2834, file: !2494, line: 278, baseType: !2484, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2834, file: !2494, line: 279, baseType: !577, size: 8, offset: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !2826, file: !2494, line: 304, baseType: !2723, size: 64, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !2826, file: !2494, line: 312, baseType: !2840, size: 64, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!577, !2480}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !2826, file: !2494, line: 317, baseType: !2844, size: 64, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{null, !2480}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2826, file: !2494, line: 322, baseType: !2848, size: 64, offset: 256)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!80, !2484, !577}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2826, file: !2494, line: 327, baseType: !2852, size: 64, offset: 320)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!355, !2492}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2826, file: !2494, line: 332, baseType: !2754, size: 64, offset: 384)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2826, file: !2494, line: 339, baseType: !2857, size: 64, offset: 448)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!355, !2492, !280, !7}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2826, file: !2494, line: 343, baseType: !2719, size: 64, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !2826, file: !2494, line: 352, baseType: !2862, size: 64, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!355, !2865, !2484, !7, !7}
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2494, line: 249, size: 2304, elements: !2867)
!2867 = !{!2868, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2903, !2904, !2906, !2907}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2866, file: !2494, line: 250, baseType: !2869, size: 384)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2870, size: 384, elements: !371)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2494, line: 195, size: 128, elements: !2871)
!2871 = !{!2872, !2874, !2875}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !2870, file: !2494, line: 196, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !2870, file: !2494, line: 197, baseType: !7, size: 32, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !2870, file: !2494, line: 198, baseType: !7, size: 32, offset: 96)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !2866, file: !2494, line: 251, baseType: !7, size: 32, offset: 384)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2866, file: !2494, line: 252, baseType: !2824, size: 64, offset: 448)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2866, file: !2494, line: 253, baseType: !7, size: 32, offset: 512)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2866, file: !2494, line: 254, baseType: !7, size: 32, offset: 544)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !2866, file: !2494, line: 255, baseType: !7, size: 32, offset: 576)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2866, file: !2494, line: 256, baseType: !7, size: 32, offset: 608)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2866, file: !2494, line: 257, baseType: !355, size: 32, offset: 640)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2866, file: !2494, line: 258, baseType: !7, size: 32, offset: 672)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2866, file: !2494, line: 259, baseType: !7, size: 32, offset: 704)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2866, file: !2494, line: 260, baseType: !280, size: 64, offset: 768)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !2866, file: !2494, line: 261, baseType: !886, size: 32, offset: 832)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !2866, file: !2494, line: 263, baseType: !2888, size: 512, offset: 896)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2517, line: 97, size: 512, elements: !2889)
!2889 = !{!2890, !2891, !2892, !2893, !2894, !2900, !2901, !2902}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !2888, file: !2517, line: 101, baseType: !2516, size: 192)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !2888, file: !2517, line: 109, baseType: !2873, size: 64, offset: 192)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !2888, file: !2517, line: 115, baseType: !7, size: 32, offset: 256)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !2888, file: !2517, line: 120, baseType: !886, size: 32, offset: 288)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !2888, file: !2517, line: 125, baseType: !2895, size: 64, offset: 320)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2517, line: 76, size: 192, elements: !2897)
!2897 = !{!2898, !2899}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !2896, file: !2517, line: 80, baseType: !886, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2896, file: !2517, line: 85, baseType: !1066, size: 128, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !2888, file: !2517, line: 130, baseType: !886, size: 32, offset: 384)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !2888, file: !2517, line: 135, baseType: !577, size: 8, offset: 416)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !2888, file: !2517, line: 141, baseType: !7, size: 32, offset: 448)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !2866, file: !2494, line: 264, baseType: !2888, size: 512, offset: 1408)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2866, file: !2494, line: 265, baseType: !2905, size: 64, offset: 1920)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !2866, file: !2494, line: 267, baseType: !813, size: 192, offset: 1984)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !2866, file: !2494, line: 268, baseType: !305, size: 128, offset: 2176)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !2826, file: !2494, line: 357, baseType: !2909, size: 64, offset: 640)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{null, !2865, !2484, !7}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !2826, file: !2494, line: 363, baseType: !2754, size: 64, offset: 704)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !2826, file: !2494, line: 369, baseType: !2754, size: 64, offset: 768)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2826, file: !2494, line: 374, baseType: !2840, size: 64, offset: 832)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !2826, file: !2494, line: 380, baseType: !2916, size: 64, offset: 896)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!355, !2865}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2481, file: !68, line: 411, baseType: !2489, size: 64, offset: 448)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2481, file: !68, line: 413, baseType: !7, size: 32, offset: 512)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2481, file: !68, line: 416, baseType: !2922, size: 64, offset: 576)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2481, file: !68, line: 417, baseType: !7, size: 32, offset: 640)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2481, file: !68, line: 419, baseType: !2323, size: 64, offset: 704)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2481, file: !68, line: 425, baseType: !280, size: 64, offset: 768)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2481, file: !68, line: 430, baseType: !419, size: 64, offset: 832)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2481, file: !68, line: 436, baseType: !886, size: 32, offset: 896)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2481, file: !68, line: 442, baseType: !355, size: 32, offset: 928)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2481, file: !68, line: 447, baseType: !271, size: 32, offset: 960)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2481, file: !68, line: 449, baseType: !329, offset: 992)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2481, file: !68, line: 454, baseType: !314, size: 512, offset: 1024)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2481, file: !68, line: 459, baseType: !322, size: 64, offset: 1536)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2481, file: !68, line: 462, baseType: !2934, size: 128, offset: 1600)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2204, line: 159, size: 128, elements: !2935)
!2935 = !{!2936, !2965, !2966, !2967, !2968}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2934, file: !2204, line: 160, baseType: !2937, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !68, line: 1664, size: 320, elements: !2940)
!2940 = !{!2941, !2955, !2956, !2959, !2964}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !2939, file: !68, line: 1665, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !68, line: 1660, baseType: !2944)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!2645, !2946}
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !68, line: 1651, size: 320, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !2947, file: !68, line: 1652, baseType: !280, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !2947, file: !68, line: 1653, baseType: !280, size: 64, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2947, file: !68, line: 1654, baseType: !969, size: 64, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2947, file: !68, line: 1655, baseType: !7, size: 32, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2947, file: !68, line: 1656, baseType: !411, size: 16, offset: 224)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2947, file: !68, line: 1657, baseType: !318, size: 64, offset: 256)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !2939, file: !68, line: 1666, baseType: !2942, size: 64, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !2939, file: !68, line: 1667, baseType: !2957, size: 64, offset: 128)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !68, line: 1661, baseType: !2755)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !2939, file: !68, line: 1668, baseType: !2960, size: 64, offset: 192)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !68, line: 1662, baseType: !2962)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{null, !2484, !7}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2939, file: !68, line: 1669, baseType: !318, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2934, file: !2204, line: 161, baseType: !303, size: 8, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !2934, file: !2204, line: 162, baseType: !303, size: 8, offset: 72)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !2934, file: !2204, line: 163, baseType: !303, size: 8, offset: 80)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !2934, file: !2204, line: 164, baseType: !303, size: 8, offset: 88)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2481, file: !68, line: 466, baseType: !2400, size: 64, offset: 1728)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2481, file: !68, line: 467, baseType: !61, size: 32, offset: 1792)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2481, file: !68, line: 468, baseType: !7, size: 32, offset: 1824)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2481, file: !68, line: 474, baseType: !419, size: 64, offset: 1856)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2481, file: !68, line: 476, baseType: !7, size: 32, offset: 1920)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2481, file: !68, line: 477, baseType: !7, size: 32, offset: 1952)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2481, file: !68, line: 484, baseType: !7, size: 32, offset: 1984)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2481, file: !68, line: 485, baseType: !355, size: 32, offset: 2016)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2481, file: !68, line: 487, baseType: !2978, size: 64, offset: 2048)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !68, line: 44, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2481, file: !68, line: 488, baseType: !2981, size: 5120, offset: 2112)
!2981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2982, size: 5120, elements: !1988)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2198, line: 540, size: 320, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !2982, file: !2198, line: 541, baseType: !288, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2982, file: !2198, line: 542, baseType: !288, size: 64, offset: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2982, file: !2198, line: 543, baseType: !288, size: 64, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !2982, file: !2198, line: 544, baseType: !274, size: 32, offset: 192)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2982, file: !2198, line: 545, baseType: !288, size: 64, offset: 256)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2481, file: !68, line: 490, baseType: !2382, size: 320, offset: 7232)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2481, file: !68, line: 491, baseType: !2270, size: 256, offset: 7552)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2481, file: !68, line: 493, baseType: !886, size: 32, offset: 7808)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2481, file: !68, line: 495, baseType: !305, size: 128, offset: 7872)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2481, file: !68, line: 502, baseType: !2994, size: 896, offset: 8000)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !68, line: 321, size: 896, elements: !2995)
!2995 = !{!2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !2994, file: !68, line: 322, baseType: !419, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !2994, file: !68, line: 323, baseType: !419, size: 64, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !2994, file: !68, line: 324, baseType: !419, size: 64, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !2994, file: !68, line: 326, baseType: !7, size: 32, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !2994, file: !68, line: 327, baseType: !7, size: 32, offset: 224)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !2994, file: !68, line: 328, baseType: !7, size: 32, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !2994, file: !68, line: 329, baseType: !7, size: 32, offset: 288)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2994, file: !68, line: 330, baseType: !7, size: 32, offset: 320)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !2994, file: !68, line: 331, baseType: !7, size: 32, offset: 352)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !2994, file: !68, line: 332, baseType: !7, size: 32, offset: 384)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !2994, file: !68, line: 333, baseType: !7, size: 32, offset: 416)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !2994, file: !68, line: 334, baseType: !7, size: 32, offset: 448)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !2994, file: !68, line: 335, baseType: !7, size: 32, offset: 480)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !2994, file: !68, line: 336, baseType: !7, size: 32, offset: 512)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !2994, file: !68, line: 337, baseType: !7, size: 32, offset: 544)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !2994, file: !68, line: 338, baseType: !7, size: 32, offset: 576)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !2994, file: !68, line: 339, baseType: !7, size: 32, offset: 608)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !2994, file: !68, line: 340, baseType: !7, size: 32, offset: 640)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !2994, file: !68, line: 341, baseType: !7, size: 32, offset: 672)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !2994, file: !68, line: 342, baseType: !7, size: 32, offset: 704)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !2994, file: !68, line: 344, baseType: !411, size: 16, offset: 736)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !2994, file: !68, line: 345, baseType: !411, size: 16, offset: 752)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !2994, file: !68, line: 346, baseType: !411, size: 16, offset: 768)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !2994, file: !68, line: 348, baseType: !303, size: 8, offset: 784)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !2994, file: !68, line: 349, baseType: !303, size: 8, offset: 792)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !2994, file: !68, line: 350, baseType: !303, size: 8, offset: 800)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !2994, file: !68, line: 351, baseType: !96, size: 32, offset: 832)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2481, file: !68, line: 504, baseType: !7, size: 32, offset: 8896)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2481, file: !68, line: 534, baseType: !7, size: 32, offset: 8928)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2481, file: !68, line: 535, baseType: !7, size: 32, offset: 8960)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2481, file: !68, line: 536, baseType: !355, size: 32, offset: 8992)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2481, file: !68, line: 537, baseType: !813, size: 192, offset: 9024)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2481, file: !68, line: 544, baseType: !2512, size: 64, offset: 9216)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2481, file: !68, line: 546, baseType: !305, size: 128, offset: 9280)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2481, file: !68, line: 547, baseType: !329, offset: 9408)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2481, file: !68, line: 548, baseType: !2378, size: 704, offset: 9408)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2481, file: !68, line: 550, baseType: !813, size: 192, offset: 10112)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2481, file: !68, line: 551, baseType: !813, size: 192, offset: 10304)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2481, file: !68, line: 557, baseType: !305, size: 128, offset: 10496)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2481, file: !68, line: 558, baseType: !329, offset: 10624)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2481, file: !68, line: 560, baseType: !355, size: 32, offset: 10624)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2481, file: !68, line: 563, baseType: !3038, size: 256, offset: 10688)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3039, line: 18, size: 256, elements: !3040)
!3039 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3040 = !{!3041, !3042, !3043, !3044}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3038, file: !3039, line: 19, baseType: !2400, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3038, file: !3039, line: 20, baseType: !355, size: 32, offset: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3038, file: !3039, line: 21, baseType: !2480, size: 64, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3038, file: !3039, line: 22, baseType: !3045, size: 64, offset: 192)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3039, line: 10, size: 256, elements: !3048)
!3048 = !{!3049, !3090, !3094, !3098}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3047, file: !3039, line: 11, baseType: !3050, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!355, !3053}
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3055, line: 22, size: 1280, elements: !3056)
!3055 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3054, file: !3055, line: 23, baseType: !1729, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3054, file: !3055, line: 24, baseType: !276, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3054, file: !3055, line: 25, baseType: !276, size: 32, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3054, file: !3055, line: 28, baseType: !276, size: 32, offset: 96)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3054, file: !3055, line: 29, baseType: !289, size: 64, offset: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3054, file: !3055, line: 30, baseType: !289, size: 64, offset: 192)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3054, file: !3055, line: 31, baseType: !276, size: 32, offset: 256)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3054, file: !3055, line: 32, baseType: !276, size: 32, offset: 288)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3054, file: !3055, line: 33, baseType: !276, size: 32, offset: 320)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3054, file: !3055, line: 34, baseType: !276, size: 32, offset: 352)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3054, file: !3055, line: 35, baseType: !289, size: 64, offset: 384)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3054, file: !3055, line: 38, baseType: !276, size: 32, offset: 448)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3054, file: !3055, line: 40, baseType: !276, size: 32, offset: 480)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3054, file: !3055, line: 41, baseType: !276, size: 32, offset: 512)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3054, file: !3055, line: 42, baseType: !276, size: 32, offset: 544)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3054, file: !3055, line: 43, baseType: !289, size: 64, offset: 576)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3054, file: !3055, line: 44, baseType: !289, size: 64, offset: 640)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3054, file: !3055, line: 46, baseType: !276, size: 32, offset: 704)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3054, file: !3055, line: 47, baseType: !276, size: 32, offset: 736)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3054, file: !3055, line: 48, baseType: !289, size: 64, offset: 768)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3054, file: !3055, line: 49, baseType: !276, size: 32, offset: 832)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3054, file: !3055, line: 51, baseType: !276, size: 32, offset: 864)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3054, file: !3055, line: 52, baseType: !276, size: 32, offset: 896)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3054, file: !3055, line: 53, baseType: !276, size: 32, offset: 928)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3054, file: !3055, line: 54, baseType: !276, size: 32, offset: 960)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3054, file: !3055, line: 55, baseType: !276, size: 32, offset: 992)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3054, file: !3055, line: 56, baseType: !276, size: 32, offset: 1024)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3054, file: !3055, line: 57, baseType: !276, size: 32, offset: 1056)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3054, file: !3055, line: 58, baseType: !1729, size: 32, offset: 1088)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3054, file: !3055, line: 59, baseType: !1729, size: 32, offset: 1120)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3054, file: !3055, line: 60, baseType: !289, size: 64, offset: 1152)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3054, file: !3055, line: 61, baseType: !276, size: 32, offset: 1216)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3054, file: !3055, line: 63, baseType: !276, size: 32, offset: 1248)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3047, file: !3039, line: 12, baseType: !3091, size: 64, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{!355, !2484, !3053, !2407}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3047, file: !3039, line: 14, baseType: !3095, size: 64, offset: 128)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!355, !2484, !3053}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3047, file: !3039, line: 15, baseType: !2754, size: 64, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2481, file: !68, line: 570, baseType: !460, size: 128, align: 64, offset: 10944)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2481, file: !68, line: 571, baseType: !1066, size: 128, offset: 11072)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2481, file: !68, line: 576, baseType: !813, size: 192, offset: 11200)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2481, file: !68, line: 578, baseType: !2865, size: 64, offset: 11392)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2481, file: !68, line: 579, baseType: !305, size: 128, offset: 11456)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2481, file: !68, line: 580, baseType: !3105, size: 2368, offset: 11584)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2193, line: 682, size: 2368, elements: !3106)
!3106 = !{!3107, !3108, !3109, !3130, !3131, !3132, !3133, !3134, !3135, !3136}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3105, file: !2193, line: 683, baseType: !1232, size: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3105, file: !2193, line: 684, baseType: !7, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3105, file: !2193, line: 686, baseType: !3110, size: 448, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3111, line: 26, baseType: !3112)
!3111 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3111, line: 16, size: 448, elements: !3113)
!3113 = !{!3114, !3115, !3116, !3117, !3118, !3119, !3124, !3129}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3112, file: !3111, line: 17, baseType: !329)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3112, file: !3111, line: 18, baseType: !355, size: 32)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3112, file: !3111, line: 19, baseType: !355, size: 32, offset: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3112, file: !3111, line: 20, baseType: !960, size: 64, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3112, file: !3111, line: 22, baseType: !280, size: 64, offset: 128)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3112, file: !3111, line: 23, baseType: !3120, size: 64, offset: 192)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3111, line: 13, baseType: !3122)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!280, !271, !280}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3112, file: !3111, line: 24, baseType: !3125, size: 64, offset: 256)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3111, line: 14, baseType: !3127)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !280, !280}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3112, file: !3111, line: 25, baseType: !1066, size: 128, offset: 320)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3105, file: !2193, line: 687, baseType: !3110, size: 448, offset: 576)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3105, file: !2193, line: 689, baseType: !3110, size: 448, offset: 1024)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3105, file: !2193, line: 690, baseType: !3110, size: 448, offset: 1472)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3105, file: !2193, line: 697, baseType: !329, offset: 1920)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3105, file: !2193, line: 698, baseType: !2192, size: 128, offset: 1920)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3105, file: !2193, line: 699, baseType: !2270, size: 256, offset: 2048)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3105, file: !2193, line: 700, baseType: !2282, size: 64, offset: 2304)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2481, file: !68, line: 582, baseType: !477, size: 64, offset: 13952)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2481, file: !68, line: 589, baseType: !577, size: 8, offset: 14016)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2481, file: !68, line: 591, baseType: !416, size: 64, offset: 14080)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2481, file: !68, line: 594, baseType: !3141, size: 320, offset: 14144)
!3141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 320, elements: !3142)
!3142 = !{!3143}
!3143 = !DISubrange(count: 5)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2203, file: !2204, line: 191, baseType: !280, size: 64, offset: 7168)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2203, file: !2204, line: 193, baseType: !355, size: 32, offset: 7232)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2203, file: !2204, line: 194, baseType: !419, size: 64, offset: 7296)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2203, file: !2204, line: 196, baseType: !906, size: 256, offset: 7360)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2203, file: !2204, line: 197, baseType: !322, size: 64, offset: 7616)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2203, file: !2204, line: 199, baseType: !3150, size: 64, offset: 7680)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2204, line: 199, flags: DIFlagFwdDecl)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2203, file: !2204, line: 200, baseType: !886, size: 32, offset: 7744)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2203, file: !2204, line: 201, baseType: !3154, size: 64, offset: 7808)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2204, line: 156, flags: DIFlagFwdDecl)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2203, file: !2204, line: 203, baseType: !314, size: 512, offset: 7872)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2203, file: !2204, line: 208, baseType: !355, size: 32, offset: 8384)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2203, file: !2204, line: 209, baseType: !3159, size: 64, offset: 8448)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2204, line: 157, flags: DIFlagFwdDecl)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2203, file: !2204, line: 210, baseType: !3162, offset: 8512)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !736, line: 192, elements: !343)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2197, file: !2198, line: 206, baseType: !7, size: 32, offset: 128)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2197, file: !2198, line: 210, baseType: !411, size: 16, offset: 160)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2197, file: !2198, line: 211, baseType: !411, size: 16, offset: 176)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2197, file: !2198, line: 212, baseType: !411, size: 16, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2197, file: !2198, line: 213, baseType: !2645, size: 8, offset: 208)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2197, file: !2198, line: 214, baseType: !301, size: 8, offset: 216)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2197, file: !2198, line: 215, baseType: !886, size: 32, offset: 224)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2197, file: !2198, line: 217, baseType: !3171, size: 192, offset: 256)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1054, line: 37, size: 192, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3171, file: !1054, line: 38, baseType: !969, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3171, file: !1054, line: 40, baseType: !7, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3171, file: !1054, line: 42, baseType: !7, size: 32, offset: 96)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3171, file: !1054, line: 44, baseType: !7, size: 32, offset: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2197, file: !2198, line: 219, baseType: !3178, size: 64, offset: 448)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2198, line: 19, baseType: !3180)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{null, !2196}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2197, file: !2198, line: 221, baseType: !280, size: 64, offset: 512)
!3183 = !DIDerivedType(tag: DW_TAG_member, scope: !2197, file: !2198, line: 240, baseType: !3184, size: 64, offset: 576)
!3184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2197, file: !2198, line: 240, size: 64, elements: !3185)
!3185 = !{!3186}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3184, file: !2198, line: 242, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2193, line: 313, size: 832, elements: !3189)
!3189 = !{!3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3200}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3188, file: !2193, line: 314, baseType: !2196, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3188, file: !2193, line: 316, baseType: !3171, size: 192, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3188, file: !2193, line: 318, baseType: !411, size: 16, offset: 256)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3188, file: !2193, line: 319, baseType: !411, size: 16, offset: 272)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3188, file: !2193, line: 320, baseType: !411, size: 16, offset: 288)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3188, file: !2193, line: 321, baseType: !411, size: 16, offset: 304)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3188, file: !2193, line: 323, baseType: !3171, size: 192, offset: 320)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3188, file: !2193, line: 325, baseType: !2270, size: 256, offset: 512)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3188, file: !2193, line: 327, baseType: !3199, size: 64, offset: 768)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3188, file: !2193, line: 328, baseType: !3201, offset: 832)
!3201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, elements: !2286)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2197, file: !2198, line: 246, baseType: !411, size: 16, offset: 640)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2197, file: !2198, line: 252, baseType: !411, size: 16, offset: 656)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2197, file: !2198, line: 254, baseType: !886, size: 32, offset: 672)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2197, file: !2198, line: 256, baseType: !3199, size: 64, offset: 704)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2197, file: !2198, line: 258, baseType: !3207, size: 64, offset: 768)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2197, file: !2198, line: 265, baseType: !3201, offset: 832)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2192, file: !2193, line: 556, baseType: !2196, size: 64, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1509, file: !1510, line: 1050, baseType: !3211, size: 64, offset: 10688)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !68, line: 1236, size: 320, elements: !3213)
!3213 = !{!3214, !3215, !3216, !3217, !3218}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3212, file: !68, line: 1237, baseType: !305, size: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3212, file: !68, line: 1238, baseType: !305, size: 128, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3212, file: !68, line: 1239, baseType: !411, size: 16, offset: 256)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3212, file: !68, line: 1240, baseType: !577, size: 8, offset: 272)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3212, file: !68, line: 1241, baseType: !577, size: 8, offset: 280)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1509, file: !1510, line: 1054, baseType: !3220, size: 64, offset: 10752)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1510, line: 55, flags: DIFlagFwdDecl)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1509, file: !1510, line: 1056, baseType: !2323, size: 64, offset: 10816)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1509, file: !1510, line: 1058, baseType: !2610, size: 64, offset: 10880)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1509, file: !1510, line: 1061, baseType: !3225, size: 64, offset: 10944)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1510, line: 43, flags: DIFlagFwdDecl)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1509, file: !1510, line: 1064, baseType: !419, size: 64, offset: 11008)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1509, file: !1510, line: 1065, baseType: !3229, size: 64, offset: 11072)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2041, line: 14, baseType: !3231)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2041, line: 12, size: 384, elements: !3232)
!3232 = !{!3233}
!3233 = !DIDerivedType(tag: DW_TAG_member, scope: !3231, file: !2041, line: 13, baseType: !3234, size: 384)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3231, file: !2041, line: 13, size: 384, elements: !3235)
!3235 = !{!3236, !3237, !3238, !3239}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3234, file: !2041, line: 13, baseType: !355, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3234, file: !2041, line: 13, baseType: !355, size: 32, offset: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3234, file: !2041, line: 13, baseType: !355, size: 32, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3234, file: !2041, line: 13, baseType: !3240, size: 256, offset: 128)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3241, line: 32, size: 256, elements: !3242)
!3241 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3242 = !{!3243, !3248, !3261, !3267, !3276, !3296, !3301}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3240, file: !3241, line: 37, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 34, size: 64, elements: !3245)
!3245 = !{!3246, !3247}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3244, file: !3241, line: 35, baseType: !1744, size: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3244, file: !3241, line: 36, baseType: !528, size: 32, offset: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3240, file: !3241, line: 45, baseType: !3249, size: 192)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 40, size: 192, elements: !3250)
!3250 = !{!3251, !3253, !3254, !3260}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3249, file: !3241, line: 41, baseType: !3252, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !403, line: 95, baseType: !355)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3249, file: !3241, line: 42, baseType: !355, size: 32, offset: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3249, file: !3241, line: 43, baseType: !3255, size: 64, offset: 64)
!3255 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3241, line: 11, baseType: !3256)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3241, line: 8, size: 64, elements: !3257)
!3257 = !{!3258, !3259}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3256, file: !3241, line: 9, baseType: !355, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3256, file: !3241, line: 10, baseType: !280, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3249, file: !3241, line: 44, baseType: !355, size: 32, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3240, file: !3241, line: 52, baseType: !3262, size: 128)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 48, size: 128, elements: !3263)
!3263 = !{!3264, !3265, !3266}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3262, file: !3241, line: 49, baseType: !1744, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3262, file: !3241, line: 50, baseType: !528, size: 32, offset: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3262, file: !3241, line: 51, baseType: !3255, size: 64, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3240, file: !3241, line: 61, baseType: !3268, size: 256)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 55, size: 256, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3275}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3268, file: !3241, line: 56, baseType: !1744, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3268, file: !3241, line: 57, baseType: !528, size: 32, offset: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3268, file: !3241, line: 58, baseType: !355, size: 32, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3268, file: !3241, line: 59, baseType: !3274, size: 64, offset: 128)
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !403, line: 94, baseType: !404)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3268, file: !3241, line: 60, baseType: !3274, size: 64, offset: 192)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3240, file: !3241, line: 95, baseType: !3277, size: 256)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 64, size: 256, elements: !3278)
!3278 = !{!3279, !3280}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3277, file: !3241, line: 65, baseType: !280, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3277, file: !3241, line: 77, baseType: !3281, size: 192, offset: 64)
!3281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3277, file: !3241, line: 77, size: 192, elements: !3282)
!3282 = !{!3283, !3284, !3291}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3281, file: !3241, line: 82, baseType: !1497, size: 16)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3281, file: !3241, line: 88, baseType: !3285, size: 192)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3281, file: !3241, line: 84, size: 192, elements: !3286)
!3286 = !{!3287, !3289, !3290}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3285, file: !3241, line: 85, baseType: !3288, size: 64)
!3288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 64, elements: !1617)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3285, file: !3241, line: 86, baseType: !280, size: 64, offset: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3285, file: !3241, line: 87, baseType: !280, size: 64, offset: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3281, file: !3241, line: 93, baseType: !3292, size: 96)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3281, file: !3241, line: 90, size: 96, elements: !3293)
!3293 = !{!3294, !3295}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3292, file: !3241, line: 91, baseType: !3288, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3292, file: !3241, line: 92, baseType: !276, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3240, file: !3241, line: 101, baseType: !3297, size: 128)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 98, size: 128, elements: !3298)
!3298 = !{!3299, !3300}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3297, file: !3241, line: 99, baseType: !239, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3297, file: !3241, line: 100, baseType: !355, size: 32, offset: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3240, file: !3241, line: 108, baseType: !3302, size: 128)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3240, file: !3241, line: 104, size: 128, elements: !3303)
!3303 = !{!3304, !3305, !3306}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3302, file: !3241, line: 105, baseType: !280, size: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3302, file: !3241, line: 106, baseType: !355, size: 32, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3302, file: !3241, line: 107, baseType: !7, size: 32, offset: 96)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1509, file: !1510, line: 1067, baseType: !2113, offset: 11136)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1509, file: !1510, line: 1099, baseType: !3309, size: 64, offset: 11136)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1510, line: 56, flags: DIFlagFwdDecl)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1509, file: !1510, line: 1103, baseType: !305, size: 128, offset: 11200)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1509, file: !1510, line: 1104, baseType: !3313, size: 64, offset: 11328)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1510, line: 46, flags: DIFlagFwdDecl)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1509, file: !1510, line: 1105, baseType: !813, size: 192, offset: 11392)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1509, file: !1510, line: 1106, baseType: !7, size: 32, offset: 11584)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1509, file: !1510, line: 1109, baseType: !3318, size: 128, offset: 11648)
!3318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3319, size: 128, elements: !1847)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1510, line: 51, flags: DIFlagFwdDecl)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1509, file: !1510, line: 1110, baseType: !813, size: 192, offset: 11776)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1509, file: !1510, line: 1111, baseType: !305, size: 128, offset: 11968)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1509, file: !1510, line: 1173, baseType: !3324, size: 64, offset: 12096)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3326, line: 62, size: 256, align: 256, elements: !3327)
!3326 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3327 = !{!3328, !3329, !3330, !3335}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3325, file: !3326, line: 75, baseType: !276, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3325, file: !3326, line: 90, baseType: !276, size: 32, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3325, file: !3326, line: 124, baseType: !3331, size: 64, offset: 64)
!3331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3325, file: !3326, line: 109, size: 64, elements: !3332)
!3332 = !{!3333, !3334}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3331, file: !3326, line: 110, baseType: !289, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3331, file: !3326, line: 112, baseType: !289, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3325, file: !3326, line: 144, baseType: !276, size: 32, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1509, file: !1510, line: 1174, baseType: !274, size: 32, offset: 12160)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1509, file: !1510, line: 1179, baseType: !419, size: 64, offset: 12224)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1509, file: !1510, line: 1182, baseType: !3339, size: 128, offset: 12288)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1449, line: 76, size: 128, elements: !3340)
!3340 = !{!3341, !3346, !3347}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3339, file: !1449, line: 85, baseType: !3342, size: 64)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3343, line: 7, size: 64, elements: !3344)
!3343 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3344 = !{!3345}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3342, file: !3343, line: 12, baseType: !1652, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3339, file: !1449, line: 88, baseType: !577, size: 8, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3339, file: !1449, line: 95, baseType: !577, size: 8, offset: 72)
!3348 = !DIDerivedType(tag: DW_TAG_member, scope: !1509, file: !1510, line: 1184, baseType: !3349, size: 128, offset: 12416)
!3349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1509, file: !1510, line: 1184, size: 128, elements: !3350)
!3350 = !{!3351, !3352}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3349, file: !1510, line: 1185, baseType: !1134, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3349, file: !1510, line: 1186, baseType: !460, size: 128, align: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1509, file: !1510, line: 1190, baseType: !1060, size: 64, offset: 12544)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1509, file: !1510, line: 1192, baseType: !3355, size: 128, offset: 12608)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1449, line: 64, size: 128, elements: !3356)
!3356 = !{!3357, !3358, !3359}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3355, file: !1449, line: 65, baseType: !860, size: 64)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3355, file: !1449, line: 67, baseType: !276, size: 32, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3355, file: !1449, line: 68, baseType: !276, size: 32, offset: 96)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1509, file: !1510, line: 1206, baseType: !355, size: 32, offset: 12736)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1509, file: !1510, line: 1207, baseType: !355, size: 32, offset: 12768)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1509, file: !1510, line: 1209, baseType: !419, size: 64, offset: 12800)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1509, file: !1510, line: 1219, baseType: !288, size: 64, offset: 12864)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1509, file: !1510, line: 1220, baseType: !288, size: 64, offset: 12928)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1509, file: !1510, line: 1317, baseType: !355, size: 32, offset: 12992)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1509, file: !1510, line: 1319, baseType: !1508, size: 64, offset: 13056)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1509, file: !1510, line: 1322, baseType: !3368, size: 64, offset: 13120)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3370, line: 56, size: 512, elements: !3371)
!3370 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3371 = !{!3372, !3373, !3374, !3375, !3376, !3377, !3378, !3380}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3369, file: !3370, line: 57, baseType: !3368, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3369, file: !3370, line: 58, baseType: !280, size: 64, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3369, file: !3370, line: 59, baseType: !419, size: 64, offset: 128)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3369, file: !3370, line: 60, baseType: !419, size: 64, offset: 192)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3369, file: !3370, line: 61, baseType: !959, size: 64, offset: 256)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3369, file: !3370, line: 62, baseType: !7, size: 32, offset: 320)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3369, file: !3370, line: 63, baseType: !3379, size: 64, offset: 384)
!3379 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !272, line: 153, baseType: !288)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3369, file: !3370, line: 64, baseType: !3381, size: 64, offset: 448)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1509, file: !1510, line: 1326, baseType: !1134, size: 32, offset: 13184)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1509, file: !1510, line: 1342, baseType: !280, size: 64, offset: 13248)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1509, file: !1510, line: 1343, baseType: !289, size: 64, offset: 13312)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1509, file: !1510, line: 1344, baseType: !288, size: 64, offset: 13376)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1509, file: !1510, line: 1345, baseType: !289, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1509, file: !1510, line: 1346, baseType: !289, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1509, file: !1510, line: 1347, baseType: !289, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1509, file: !1510, line: 1348, baseType: !460, size: 128, align: 64, offset: 13504)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1509, file: !1510, line: 1358, baseType: !3392, size: 34816, offset: 13824)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3393, line: 485, size: 34816, elements: !3394)
!3393 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3394 = !{!3395, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3424, !3425, !3426, !3427, !3428, !3429, !3432, !3433, !3434}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3392, file: !3393, line: 487, baseType: !3396, size: 192)
!3396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3397, size: 192, elements: !371)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3398, line: 16, size: 64, elements: !3399)
!3398 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3399 = !{!3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3397, file: !3398, line: 17, baseType: !998, size: 16)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3397, file: !3398, line: 18, baseType: !998, size: 16, offset: 16)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3397, file: !3398, line: 19, baseType: !998, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3397, file: !3398, line: 19, baseType: !998, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3397, file: !3398, line: 19, baseType: !998, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3397, file: !3398, line: 19, baseType: !998, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3397, file: !3398, line: 19, baseType: !998, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3397, file: !3398, line: 20, baseType: !998, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3397, file: !3398, line: 20, baseType: !998, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3397, file: !3398, line: 20, baseType: !998, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3397, file: !3398, line: 20, baseType: !998, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3397, file: !3398, line: 20, baseType: !998, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3397, file: !3398, line: 20, baseType: !998, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3392, file: !3393, line: 491, baseType: !419, size: 64, offset: 192)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3392, file: !3393, line: 495, baseType: !411, size: 16, offset: 256)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3392, file: !3393, line: 496, baseType: !411, size: 16, offset: 272)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3392, file: !3393, line: 497, baseType: !411, size: 16, offset: 288)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3392, file: !3393, line: 498, baseType: !411, size: 16, offset: 304)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3392, file: !3393, line: 502, baseType: !419, size: 64, offset: 320)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3392, file: !3393, line: 503, baseType: !419, size: 64, offset: 384)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3392, file: !3393, line: 514, baseType: !3421, size: 256, offset: 448)
!3421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3422, size: 256, elements: !1453)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3393, line: 483, flags: DIFlagFwdDecl)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3392, file: !3393, line: 516, baseType: !419, size: 64, offset: 704)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3392, file: !3393, line: 518, baseType: !419, size: 64, offset: 768)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3392, file: !3393, line: 520, baseType: !419, size: 64, offset: 832)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3392, file: !3393, line: 521, baseType: !419, size: 64, offset: 896)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3392, file: !3393, line: 522, baseType: !419, size: 64, offset: 960)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3392, file: !3393, line: 528, baseType: !3430, size: 64, offset: 1024)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3393, line: 10, flags: DIFlagFwdDecl)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3392, file: !3393, line: 535, baseType: !419, size: 64, offset: 1088)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3392, file: !3393, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3392, file: !3393, line: 540, baseType: !3435, size: 33280, offset: 1536)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3436, line: 317, size: 33280, elements: !3437)
!3436 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3437 = !{!3438, !3439, !3440}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3435, file: !3436, line: 330, baseType: !7, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3435, file: !3436, line: 337, baseType: !419, size: 64, offset: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3435, file: !3436, line: 348, baseType: !3441, size: 32768, offset: 512)
!3441 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3436, line: 304, size: 32768, elements: !3442)
!3442 = !{!3443, !3458, !3495, !3545, !3558}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3441, file: !3436, line: 305, baseType: !3444, size: 896)
!3444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3436, line: 12, size: 896, elements: !3445)
!3445 = !{!3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3457}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3444, file: !3436, line: 13, baseType: !274, size: 32)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3444, file: !3436, line: 14, baseType: !274, size: 32, offset: 32)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3444, file: !3436, line: 15, baseType: !274, size: 32, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3444, file: !3436, line: 16, baseType: !274, size: 32, offset: 96)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3444, file: !3436, line: 17, baseType: !274, size: 32, offset: 128)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3444, file: !3436, line: 18, baseType: !274, size: 32, offset: 160)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3444, file: !3436, line: 19, baseType: !274, size: 32, offset: 192)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3444, file: !3436, line: 22, baseType: !3454, size: 640, offset: 224)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 640, elements: !3455)
!3455 = !{!3456}
!3456 = !DISubrange(count: 20)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3444, file: !3436, line: 25, baseType: !274, size: 32, offset: 864)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3441, file: !3436, line: 306, baseType: !3459, size: 4096, align: 128)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3436, line: 34, size: 4096, align: 128, elements: !3460)
!3460 = !{!3461, !3462, !3463, !3464, !3465, !3480, !3481, !3482, !3484, !3486, !3490}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3459, file: !3436, line: 35, baseType: !998, size: 16)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3459, file: !3436, line: 36, baseType: !998, size: 16, offset: 16)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3459, file: !3436, line: 37, baseType: !998, size: 16, offset: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3459, file: !3436, line: 38, baseType: !998, size: 16, offset: 48)
!3465 = !DIDerivedType(tag: DW_TAG_member, scope: !3459, file: !3436, line: 39, baseType: !3466, size: 128, offset: 64)
!3466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3459, file: !3436, line: 39, size: 128, elements: !3467)
!3467 = !{!3468, !3473}
!3468 = !DIDerivedType(tag: DW_TAG_member, scope: !3466, file: !3436, line: 40, baseType: !3469, size: 128)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3466, file: !3436, line: 40, size: 128, elements: !3470)
!3470 = !{!3471, !3472}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3469, file: !3436, line: 41, baseType: !288, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3469, file: !3436, line: 42, baseType: !288, size: 64, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, scope: !3466, file: !3436, line: 44, baseType: !3474, size: 128)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3466, file: !3436, line: 44, size: 128, elements: !3475)
!3475 = !{!3476, !3477, !3478, !3479}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3474, file: !3436, line: 45, baseType: !274, size: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3474, file: !3436, line: 46, baseType: !274, size: 32, offset: 32)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3474, file: !3436, line: 47, baseType: !274, size: 32, offset: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3474, file: !3436, line: 48, baseType: !274, size: 32, offset: 96)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3459, file: !3436, line: 51, baseType: !274, size: 32, offset: 192)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3459, file: !3436, line: 52, baseType: !274, size: 32, offset: 224)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3459, file: !3436, line: 55, baseType: !3483, size: 1024, offset: 256)
!3483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 1024, elements: !2211)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3459, file: !3436, line: 58, baseType: !3485, size: 2048, offset: 1280)
!3485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 2048, elements: !375)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3459, file: !3436, line: 60, baseType: !3487, size: 384, offset: 3328)
!3487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 384, elements: !3488)
!3488 = !{!3489}
!3489 = !DISubrange(count: 12)
!3490 = !DIDerivedType(tag: DW_TAG_member, scope: !3459, file: !3436, line: 62, baseType: !3491, size: 384, offset: 3712)
!3491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3459, file: !3436, line: 62, size: 384, elements: !3492)
!3492 = !{!3493, !3494}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3491, file: !3436, line: 63, baseType: !3487, size: 384)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3491, file: !3436, line: 64, baseType: !3487, size: 384)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3441, file: !3436, line: 307, baseType: !3496, size: 1088)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3436, line: 79, size: 1088, elements: !3497)
!3497 = !{!3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3544}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3496, file: !3436, line: 80, baseType: !274, size: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3496, file: !3436, line: 81, baseType: !274, size: 32, offset: 32)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3496, file: !3436, line: 82, baseType: !274, size: 32, offset: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3496, file: !3436, line: 83, baseType: !274, size: 32, offset: 96)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3496, file: !3436, line: 84, baseType: !274, size: 32, offset: 128)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3496, file: !3436, line: 85, baseType: !274, size: 32, offset: 160)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3496, file: !3436, line: 86, baseType: !274, size: 32, offset: 192)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3496, file: !3436, line: 88, baseType: !3454, size: 640, offset: 224)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3496, file: !3436, line: 89, baseType: !301, size: 8, offset: 864)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3496, file: !3436, line: 90, baseType: !301, size: 8, offset: 872)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3496, file: !3436, line: 91, baseType: !301, size: 8, offset: 880)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3496, file: !3436, line: 92, baseType: !301, size: 8, offset: 888)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3496, file: !3436, line: 93, baseType: !301, size: 8, offset: 896)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3496, file: !3436, line: 94, baseType: !301, size: 8, offset: 904)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3496, file: !3436, line: 95, baseType: !3513, size: 64, offset: 960)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3515, line: 11, size: 128, elements: !3516)
!3515 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3516 = !{!3517, !3518}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3514, file: !3515, line: 12, baseType: !239, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3514, file: !3515, line: 13, baseType: !3519, size: 64, offset: 64)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3521, line: 56, size: 1344, elements: !3522)
!3521 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3522 = !{!3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3520, file: !3521, line: 61, baseType: !419, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3520, file: !3521, line: 62, baseType: !419, size: 64, offset: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3520, file: !3521, line: 63, baseType: !419, size: 64, offset: 128)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3520, file: !3521, line: 64, baseType: !419, size: 64, offset: 192)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3520, file: !3521, line: 65, baseType: !419, size: 64, offset: 256)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3520, file: !3521, line: 66, baseType: !419, size: 64, offset: 320)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3520, file: !3521, line: 68, baseType: !419, size: 64, offset: 384)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3520, file: !3521, line: 69, baseType: !419, size: 64, offset: 448)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3520, file: !3521, line: 70, baseType: !419, size: 64, offset: 512)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3520, file: !3521, line: 71, baseType: !419, size: 64, offset: 576)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3520, file: !3521, line: 72, baseType: !419, size: 64, offset: 640)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3520, file: !3521, line: 73, baseType: !419, size: 64, offset: 704)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3520, file: !3521, line: 74, baseType: !419, size: 64, offset: 768)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3520, file: !3521, line: 75, baseType: !419, size: 64, offset: 832)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3520, file: !3521, line: 76, baseType: !419, size: 64, offset: 896)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3520, file: !3521, line: 81, baseType: !419, size: 64, offset: 960)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3520, file: !3521, line: 83, baseType: !419, size: 64, offset: 1024)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3520, file: !3521, line: 84, baseType: !419, size: 64, offset: 1088)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3520, file: !3521, line: 85, baseType: !419, size: 64, offset: 1152)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3520, file: !3521, line: 86, baseType: !419, size: 64, offset: 1216)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3520, file: !3521, line: 87, baseType: !419, size: 64, offset: 1280)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3496, file: !3436, line: 96, baseType: !274, size: 32, offset: 1024)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3441, file: !3436, line: 308, baseType: !3546, size: 4608, align: 512)
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3436, line: 289, size: 4608, align: 512, elements: !3547)
!3547 = !{!3548, !3549, !3556}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3546, file: !3436, line: 290, baseType: !3459, size: 4096, align: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3546, file: !3436, line: 291, baseType: !3550, size: 512, offset: 4096)
!3550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3436, line: 268, size: 512, elements: !3551)
!3551 = !{!3552, !3553, !3554}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3550, file: !3436, line: 269, baseType: !288, size: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3550, file: !3436, line: 270, baseType: !288, size: 64, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3550, file: !3436, line: 271, baseType: !3555, size: 384, offset: 128)
!3555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 384, elements: !1903)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3546, file: !3436, line: 292, baseType: !3557, offset: 4608)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, elements: !1976)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3441, file: !3436, line: 309, baseType: !3559, size: 32768)
!3559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 32768, elements: !3560)
!3560 = !{!3561}
!3561 = !DISubrange(count: 4096)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1505, file: !862, line: 378, baseType: !3563, size: 64, offset: 64)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1501, file: !862, line: 384, baseType: !1780, size: 192, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1276, file: !862, line: 500, baseType: !329, offset: 6656)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1276, file: !862, line: 501, baseType: !3567, size: 64, offset: 6656)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !862, line: 387, flags: DIFlagFwdDecl)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1276, file: !862, line: 516, baseType: !1966, size: 64, offset: 6720)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1276, file: !862, line: 519, baseType: !447, size: 64, offset: 6784)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1276, file: !862, line: 521, baseType: !3572, size: 64, offset: 6848)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !862, line: 521, flags: DIFlagFwdDecl)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1276, file: !862, line: 545, baseType: !886, size: 32, offset: 6912)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1276, file: !862, line: 548, baseType: !577, size: 8, offset: 6944)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1276, file: !862, line: 550, baseType: !3577, offset: 6952)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3578, line: 142, elements: !343)
!3578 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1276, file: !862, line: 554, baseType: !2270, size: 256, offset: 6976)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1276, file: !862, line: 557, baseType: !274, size: 32, offset: 7232)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1273, file: !862, line: 565, baseType: !3582, offset: 7296)
!3582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, elements: !2286)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1269, file: !862, line: 151, baseType: !886, size: 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1261, file: !862, line: 156, baseType: !329, offset: 256)
!3585 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !862, line: 159, baseType: !3586, size: 128)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !866, file: !862, line: 159, size: 128, elements: !3587)
!3587 = !{!3588, !3632}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3586, file: !862, line: 161, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !109, line: 110, size: 1152, elements: !3591)
!3591 = !{!3592, !3602, !3603, !3604, !3605, !3606, !3607, !3619, !3620, !3621}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3590, file: !109, line: 111, baseType: !3593, size: 384)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !109, line: 19, size: 384, elements: !3594)
!3594 = !{!3595, !3597, !3598, !3599, !3600, !3601}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3593, file: !109, line: 20, baseType: !3596, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3593, file: !109, line: 21, baseType: !3596, size: 64, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3593, file: !109, line: 22, baseType: !3596, size: 64, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3593, file: !109, line: 23, baseType: !419, size: 64, offset: 192)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3593, file: !109, line: 24, baseType: !419, size: 64, offset: 256)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3593, file: !109, line: 25, baseType: !419, size: 64, offset: 320)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3590, file: !109, line: 112, baseType: !2246, size: 64, offset: 384)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3590, file: !109, line: 113, baseType: !2232, size: 128, offset: 448)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3590, file: !109, line: 114, baseType: !1780, size: 192, offset: 576)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3590, file: !109, line: 115, baseType: !108, size: 32, offset: 768)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3590, file: !109, line: 116, baseType: !7, size: 32, offset: 800)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3590, file: !109, line: 117, baseType: !3608, size: 64, offset: 832)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3610)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !109, line: 67, size: 256, elements: !3611)
!3611 = !{!3612, !3613, !3617, !3618}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3610, file: !109, line: 73, baseType: !979, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3610, file: !109, line: 78, baseType: !3614, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{null, !3589}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3610, file: !109, line: 83, baseType: !3614, size: 64, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3610, file: !109, line: 89, baseType: !1325, size: 64, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3590, file: !109, line: 118, baseType: !280, size: 64, offset: 896)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3590, file: !109, line: 119, baseType: !355, size: 32, offset: 960)
!3621 = !DIDerivedType(tag: DW_TAG_member, scope: !3590, file: !109, line: 120, baseType: !3622, size: 128, offset: 1024)
!3622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3590, file: !109, line: 120, size: 128, elements: !3623)
!3623 = !{!3624, !3630}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3622, file: !109, line: 121, baseType: !3625, size: 128)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3626, line: 6, size: 128, elements: !3627)
!3626 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3627 = !{!3628, !3629}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3625, file: !3626, line: 7, baseType: !288, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3625, file: !3626, line: 8, baseType: !288, size: 64, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3622, file: !109, line: 122, baseType: !3631)
!3631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3625, elements: !1976)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3586, file: !862, line: 162, baseType: !280, size: 64, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !866, file: !862, line: 176, baseType: !460, size: 128, align: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !862, line: 179, baseType: !3635, size: 32, offset: 384)
!3635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !862, line: 179, size: 32, elements: !3636)
!3636 = !{!3637, !3638, !3639, !3640}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3635, file: !862, line: 184, baseType: !886, size: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3635, file: !862, line: 192, baseType: !7, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3635, file: !862, line: 194, baseType: !7, size: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3635, file: !862, line: 195, baseType: !355, size: 32)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !861, file: !862, line: 199, baseType: !886, size: 32, offset: 416)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !747, file: !12, line: 1964, baseType: !3643, size: 64, offset: 1344)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!239, !686, !3646}
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3648, line: 12, size: 256, elements: !3649)
!3648 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3649 = !{!3650, !3651, !3652, !3653, !3654}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3647, file: !3648, line: 13, baseType: !271, size: 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3647, file: !3648, line: 16, baseType: !355, size: 32, offset: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3647, file: !3648, line: 23, baseType: !419, size: 64, offset: 64)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3647, file: !3648, line: 30, baseType: !419, size: 64, offset: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3647, file: !3648, line: 33, baseType: !3655, size: 64, offset: 192)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !862, line: 27, flags: DIFlagFwdDecl)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !747, file: !12, line: 1966, baseType: !3643, size: 64, offset: 1408)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !687, file: !12, line: 1424, baseType: !3659, size: 64, offset: 448)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3661)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !29, line: 322, size: 704, elements: !3662)
!3662 = !{!3663, !3709, !3713, !3717, !3718, !3719, !3720, !3721, !3726, !3731, !3735}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3661, file: !29, line: 323, baseType: !3664, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!355, !3667}
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3668, size: 64)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !29, line: 294, size: 1600, elements: !3669)
!3669 = !{!3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3694, !3695, !3696}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3668, file: !29, line: 295, baseType: !729, size: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3668, file: !29, line: 296, baseType: !305, size: 128, offset: 128)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3668, file: !29, line: 297, baseType: !305, size: 128, offset: 256)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3668, file: !29, line: 298, baseType: !305, size: 128, offset: 384)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3668, file: !29, line: 299, baseType: !813, size: 192, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3668, file: !29, line: 300, baseType: !329, offset: 704)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3668, file: !29, line: 301, baseType: !886, size: 32, offset: 704)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3668, file: !29, line: 302, baseType: !686, size: 64, offset: 768)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3668, file: !29, line: 303, baseType: !3679, size: 64, offset: 832)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !29, line: 68, size: 64, elements: !3680)
!3680 = !{!3681, !3693}
!3681 = !DIDerivedType(tag: DW_TAG_member, scope: !3679, file: !29, line: 69, baseType: !3682, size: 32)
!3682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3679, file: !29, line: 69, size: 32, elements: !3683)
!3683 = !{!3684, !3685, !3686}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3682, file: !29, line: 70, baseType: !522, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3682, file: !29, line: 71, baseType: !530, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3682, file: !29, line: 72, baseType: !3687, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3688, line: 24, baseType: !3689)
!3688 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3688, line: 22, size: 32, elements: !3690)
!3690 = !{!3691}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3689, file: !3688, line: 23, baseType: !3692, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3688, line: 20, baseType: !528)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3679, file: !29, line: 74, baseType: !28, size: 32, offset: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3668, file: !29, line: 304, baseType: !618, size: 64, offset: 896)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3668, file: !29, line: 305, baseType: !419, size: 64, offset: 960)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3668, file: !29, line: 306, baseType: !3697, size: 576, offset: 1024)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !29, line: 205, size: 576, elements: !3698)
!3698 = !{!3699, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3697, file: !29, line: 206, baseType: !3700, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !29, line: 66, baseType: !620)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3697, file: !29, line: 207, baseType: !3700, size: 64, offset: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3697, file: !29, line: 208, baseType: !3700, size: 64, offset: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3697, file: !29, line: 209, baseType: !3700, size: 64, offset: 192)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3697, file: !29, line: 210, baseType: !3700, size: 64, offset: 256)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3697, file: !29, line: 211, baseType: !3700, size: 64, offset: 320)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3697, file: !29, line: 212, baseType: !3700, size: 64, offset: 384)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3697, file: !29, line: 213, baseType: !626, size: 64, offset: 448)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3697, file: !29, line: 214, baseType: !626, size: 64, offset: 512)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3661, file: !29, line: 324, baseType: !3710, size: 64, offset: 64)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!3667, !686, !355}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3661, file: !29, line: 325, baseType: !3714, size: 64, offset: 128)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{null, !3667}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3661, file: !29, line: 326, baseType: !3664, size: 64, offset: 192)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3661, file: !29, line: 327, baseType: !3664, size: 64, offset: 256)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3661, file: !29, line: 328, baseType: !3664, size: 64, offset: 320)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3661, file: !29, line: 329, baseType: !775, size: 64, offset: 384)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3661, file: !29, line: 332, baseType: !3722, size: 64, offset: 448)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!3725, !516}
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3661, file: !29, line: 333, baseType: !3727, size: 64, offset: 512)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!355, !516, !3730}
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3661, file: !29, line: 335, baseType: !3732, size: 64, offset: 576)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!355, !516, !3725}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3661, file: !29, line: 337, baseType: !3736, size: 64, offset: 640)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!355, !686, !3739}
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !687, file: !12, line: 1425, baseType: !3741, size: 64, offset: 512)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3743)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !29, line: 428, size: 704, elements: !3744)
!3744 = !{!3745, !3749, !3750, !3754, !3755, !3756, !3771, !3794, !3798, !3799, !3822}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3743, file: !29, line: 429, baseType: !3746, size: 64)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!355, !686, !355, !355, !636}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3743, file: !29, line: 430, baseType: !775, size: 64, offset: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3743, file: !29, line: 431, baseType: !3751, size: 64, offset: 128)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!355, !686, !7}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3743, file: !29, line: 432, baseType: !3751, size: 64, offset: 192)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3743, file: !29, line: 433, baseType: !775, size: 64, offset: 256)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3743, file: !29, line: 434, baseType: !3757, size: 64, offset: 320)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!355, !686, !355, !3760}
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !29, line: 415, size: 256, elements: !3762)
!3762 = !{!3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3761, file: !29, line: 416, baseType: !355, size: 32)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3761, file: !29, line: 417, baseType: !7, size: 32, offset: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3761, file: !29, line: 418, baseType: !7, size: 32, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3761, file: !29, line: 420, baseType: !7, size: 32, offset: 96)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3761, file: !29, line: 421, baseType: !7, size: 32, offset: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3761, file: !29, line: 422, baseType: !7, size: 32, offset: 160)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3761, file: !29, line: 423, baseType: !7, size: 32, offset: 192)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3761, file: !29, line: 424, baseType: !7, size: 32, offset: 224)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3743, file: !29, line: 435, baseType: !3772, size: 64, offset: 384)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!355, !686, !3679, !3775}
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !29, line: 343, size: 960, elements: !3777)
!3777 = !{!3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3776, file: !29, line: 344, baseType: !355, size: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3776, file: !29, line: 345, baseType: !288, size: 64, offset: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3776, file: !29, line: 346, baseType: !288, size: 64, offset: 128)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3776, file: !29, line: 347, baseType: !288, size: 64, offset: 192)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3776, file: !29, line: 348, baseType: !288, size: 64, offset: 256)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3776, file: !29, line: 349, baseType: !288, size: 64, offset: 320)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3776, file: !29, line: 350, baseType: !288, size: 64, offset: 384)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3776, file: !29, line: 351, baseType: !823, size: 64, offset: 448)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3776, file: !29, line: 353, baseType: !823, size: 64, offset: 512)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3776, file: !29, line: 354, baseType: !355, size: 32, offset: 576)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3776, file: !29, line: 355, baseType: !355, size: 32, offset: 608)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3776, file: !29, line: 356, baseType: !288, size: 64, offset: 640)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3776, file: !29, line: 357, baseType: !288, size: 64, offset: 704)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3776, file: !29, line: 358, baseType: !288, size: 64, offset: 768)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3776, file: !29, line: 359, baseType: !823, size: 64, offset: 832)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3776, file: !29, line: 360, baseType: !355, size: 32, offset: 896)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3743, file: !29, line: 436, baseType: !3795, size: 64, offset: 448)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!355, !686, !3739, !3775}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3743, file: !29, line: 438, baseType: !3772, size: 64, offset: 512)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3743, file: !29, line: 439, baseType: !3800, size: 64, offset: 576)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!355, !686, !3803}
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !29, line: 409, size: 1408, elements: !3805)
!3805 = !{!3806, !3807}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3804, file: !29, line: 410, baseType: !7, size: 32)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3804, file: !29, line: 411, baseType: !3808, size: 1344, offset: 64)
!3808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3809, size: 1344, elements: !371)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !29, line: 395, size: 448, elements: !3810)
!3810 = !{!3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3821}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3809, file: !29, line: 396, baseType: !7, size: 32)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3809, file: !29, line: 397, baseType: !7, size: 32, offset: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3809, file: !29, line: 399, baseType: !7, size: 32, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3809, file: !29, line: 400, baseType: !7, size: 32, offset: 96)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3809, file: !29, line: 401, baseType: !7, size: 32, offset: 128)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3809, file: !29, line: 402, baseType: !7, size: 32, offset: 160)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3809, file: !29, line: 403, baseType: !7, size: 32, offset: 192)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3809, file: !29, line: 404, baseType: !290, size: 64, offset: 256)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3809, file: !29, line: 405, baseType: !3820, size: 64, offset: 320)
!3820 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !272, line: 126, baseType: !288)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3809, file: !29, line: 406, baseType: !3820, size: 64, offset: 384)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3743, file: !29, line: 440, baseType: !3751, size: 64, offset: 640)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !687, file: !12, line: 1426, baseType: !3824, size: 64, offset: 576)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3825, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3826)
!3826 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !12, line: 49, flags: DIFlagFwdDecl)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !687, file: !12, line: 1427, baseType: !419, size: 64, offset: 640)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !687, file: !12, line: 1428, baseType: !419, size: 64, offset: 704)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !687, file: !12, line: 1429, baseType: !419, size: 64, offset: 768)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !687, file: !12, line: 1430, baseType: !477, size: 64, offset: 832)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !687, file: !12, line: 1431, baseType: !906, size: 256, offset: 896)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !687, file: !12, line: 1432, baseType: !355, size: 32, offset: 1152)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !687, file: !12, line: 1433, baseType: !886, size: 32, offset: 1184)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !687, file: !12, line: 1437, baseType: !3835, size: 64, offset: 1216)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3838)
!3838 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !12, line: 1437, flags: DIFlagFwdDecl)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !687, file: !12, line: 1449, baseType: !3840, size: 64, offset: 1280)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !493, line: 34, size: 64, elements: !3841)
!3841 = !{!3842}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3840, file: !493, line: 35, baseType: !496, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !687, file: !12, line: 1450, baseType: !305, size: 128, offset: 1344)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !687, file: !12, line: 1451, baseType: !2303, size: 64, offset: 1472)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !687, file: !12, line: 1452, baseType: !2323, size: 64, offset: 1536)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !687, file: !12, line: 1453, baseType: !3847, size: 64, offset: 1600)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !12, line: 1453, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !687, file: !12, line: 1454, baseType: !729, size: 128, offset: 1664)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !687, file: !12, line: 1455, baseType: !7, size: 32, offset: 1792)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !687, file: !12, line: 1456, baseType: !3852, size: 2432, offset: 1856)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !29, line: 518, size: 2432, elements: !3853)
!3853 = !{!3854, !3855, !3856, !3858, !3890}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3852, file: !29, line: 519, baseType: !7, size: 32)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3852, file: !29, line: 520, baseType: !906, size: 256, offset: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3852, file: !29, line: 521, baseType: !3857, size: 192, offset: 320)
!3857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !371)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3852, file: !29, line: 522, baseType: !3859, size: 1728, offset: 512)
!3859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3860, size: 1728, elements: !371)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !29, line: 222, size: 576, elements: !3861)
!3861 = !{!3862, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3860, file: !29, line: 223, baseType: !3863, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !29, line: 443, size: 256, elements: !3865)
!3865 = !{!3866, !3867, !3880, !3881}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3864, file: !29, line: 444, baseType: !355, size: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3864, file: !29, line: 445, baseType: !3868, size: 64, offset: 64)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3870)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !29, line: 310, size: 512, elements: !3871)
!3871 = !{!3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3870, file: !29, line: 311, baseType: !775, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3870, file: !29, line: 312, baseType: !775, size: 64, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3870, file: !29, line: 313, baseType: !775, size: 64, offset: 128)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3870, file: !29, line: 314, baseType: !775, size: 64, offset: 192)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3870, file: !29, line: 315, baseType: !3664, size: 64, offset: 256)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3870, file: !29, line: 316, baseType: !3664, size: 64, offset: 320)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3870, file: !29, line: 317, baseType: !3664, size: 64, offset: 384)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3870, file: !29, line: 318, baseType: !3736, size: 64, offset: 448)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3864, file: !29, line: 446, baseType: !720, size: 64, offset: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3864, file: !29, line: 447, baseType: !3863, size: 64, offset: 192)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3860, file: !29, line: 224, baseType: !355, size: 32, offset: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3860, file: !29, line: 226, baseType: !305, size: 128, offset: 128)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3860, file: !29, line: 227, baseType: !419, size: 64, offset: 256)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3860, file: !29, line: 228, baseType: !7, size: 32, offset: 320)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3860, file: !29, line: 229, baseType: !7, size: 32, offset: 352)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3860, file: !29, line: 230, baseType: !3700, size: 64, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3860, file: !29, line: 231, baseType: !3700, size: 64, offset: 448)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3860, file: !29, line: 232, baseType: !280, size: 64, offset: 512)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3852, file: !29, line: 523, baseType: !3891, size: 192, offset: 2240)
!3891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3868, size: 192, elements: !371)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !687, file: !12, line: 1458, baseType: !3893, size: 2112, offset: 4288)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !12, line: 1410, size: 2112, elements: !3894)
!3894 = !{!3895, !3896, !3897}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3893, file: !12, line: 1411, baseType: !355, size: 32)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3893, file: !12, line: 1412, baseType: !1066, size: 128, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3893, file: !12, line: 1413, baseType: !3898, size: 1920, offset: 192)
!3898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3899, size: 1920, elements: !371)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3900, line: 12, size: 640, elements: !3901)
!3900 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3901 = !{!3902, !3910, !3911, !3916, !3917}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3899, file: !3900, line: 13, baseType: !3903, size: 320)
!3903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3904, line: 17, size: 320, elements: !3905)
!3904 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3905 = !{!3906, !3907, !3908, !3909}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3903, file: !3904, line: 18, baseType: !355, size: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3903, file: !3904, line: 19, baseType: !355, size: 32, offset: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3903, file: !3904, line: 20, baseType: !1066, size: 128, offset: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3903, file: !3904, line: 22, baseType: !460, size: 128, align: 64, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3899, file: !3900, line: 14, baseType: !2873, size: 64, offset: 320)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3899, file: !3900, line: 15, baseType: !3912, size: 64, offset: 384)
!3912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3913, line: 16, size: 64, elements: !3914)
!3913 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3914 = !{!3915}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3912, file: !3913, line: 17, baseType: !1508, size: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3899, file: !3900, line: 16, baseType: !1066, size: 128, offset: 448)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3899, file: !3900, line: 17, baseType: !886, size: 32, offset: 576)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !687, file: !12, line: 1465, baseType: !280, size: 64, offset: 6400)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !687, file: !12, line: 1468, baseType: !274, size: 32, offset: 6464)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !687, file: !12, line: 1470, baseType: !626, size: 64, offset: 6528)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !687, file: !12, line: 1471, baseType: !626, size: 64, offset: 6592)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !687, file: !12, line: 1473, baseType: !276, size: 32, offset: 6656)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !687, file: !12, line: 1474, baseType: !3924, size: 64, offset: 6720)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !12, line: 603, flags: DIFlagFwdDecl)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !687, file: !12, line: 1477, baseType: !2210, size: 256, offset: 6784)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !687, file: !12, line: 1478, baseType: !3928, size: 128, offset: 7040)
!3928 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3929, line: 18, baseType: !3930)
!3929 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3929, line: 16, size: 128, elements: !3931)
!3931 = !{!3932}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3930, file: !3929, line: 17, baseType: !3933, size: 128)
!3933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 128, elements: !1988)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !687, file: !12, line: 1480, baseType: !7, size: 32, offset: 7168)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !687, file: !12, line: 1481, baseType: !2407, size: 32, offset: 7200)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !687, file: !12, line: 1487, baseType: !813, size: 192, offset: 7232)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !687, file: !12, line: 1493, baseType: !318, size: 64, offset: 7424)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !687, file: !12, line: 1495, baseType: !3939, size: 64, offset: 7488)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3941)
!3941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !475, line: 135, size: 1024, align: 512, elements: !3942)
!3942 = !{!3943, !3947, !3948, !3955, !3961, !3965, !3969, !3973, !3974, !3978, !3982, !3987, !3991}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3941, file: !475, line: 136, baseType: !3944, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!355, !477, !7}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3941, file: !475, line: 137, baseType: !3944, size: 64, offset: 64)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3941, file: !475, line: 138, baseType: !3949, size: 64, offset: 128)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!355, !3952, !3954}
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3941, file: !475, line: 139, baseType: !3956, size: 64, offset: 192)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!355, !3952, !7, !318, !3959}
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3941, file: !475, line: 141, baseType: !3962, size: 64, offset: 256)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!355, !3952}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3941, file: !475, line: 142, baseType: !3966, size: 64, offset: 320)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!355, !477}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3941, file: !475, line: 143, baseType: !3970, size: 64, offset: 384)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{null, !477}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3941, file: !475, line: 144, baseType: !3970, size: 64, offset: 448)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3941, file: !475, line: 145, baseType: !3975, size: 64, offset: 512)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{null, !477, !516}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3941, file: !475, line: 146, baseType: !3979, size: 64, offset: 576)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!278, !477, !278, !355}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3941, file: !475, line: 147, baseType: !3983, size: 64, offset: 640)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!473, !3986}
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3941, file: !475, line: 148, baseType: !3988, size: 64, offset: 704)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!355, !636, !577}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3941, file: !475, line: 149, baseType: !3992, size: 64, offset: 768)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!477, !477, !3995}
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !687, file: !12, line: 1500, baseType: !355, size: 32, offset: 7552)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !687, file: !12, line: 1502, baseType: !3999, size: 448, offset: 7616)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3648, line: 60, size: 448, elements: !4000)
!4000 = !{!4001, !4006, !4007, !4008, !4009, !4010, !4011}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3999, file: !3648, line: 61, baseType: !4002, size: 64)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!419, !4005, !3646}
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3999, file: !3648, line: 63, baseType: !4002, size: 64, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3999, file: !3648, line: 66, baseType: !239, size: 64, offset: 128)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3999, file: !3648, line: 67, baseType: !355, size: 32, offset: 192)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3999, file: !3648, line: 68, baseType: !7, size: 32, offset: 224)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3999, file: !3648, line: 71, baseType: !305, size: 128, offset: 256)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3999, file: !3648, line: 77, baseType: !4012, size: 64, offset: 384)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !687, file: !12, line: 1505, baseType: !817, size: 64, offset: 8064)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !687, file: !12, line: 1508, baseType: !817, size: 64, offset: 8128)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !687, file: !12, line: 1511, baseType: !355, size: 32, offset: 8192)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !687, file: !12, line: 1514, baseType: !1206, size: 32, offset: 8224)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !687, file: !12, line: 1517, baseType: !2282, size: 64, offset: 8256)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !687, file: !12, line: 1518, baseType: !725, size: 64, offset: 8320)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !687, file: !12, line: 1525, baseType: !1966, size: 64, offset: 8384)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !687, file: !12, line: 1532, baseType: !4021, size: 64, offset: 8448)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4022, line: 52, size: 64, elements: !4023)
!4022 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4023 = !{!4024}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4021, file: !4022, line: 53, baseType: !4025, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4022, line: 40, size: 256, elements: !4027)
!4027 = !{!4028, !4029, !4034}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4026, file: !4022, line: 42, baseType: !329)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4026, file: !4022, line: 44, baseType: !4030, size: 192)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4022, line: 28, size: 192, elements: !4031)
!4031 = !{!4032, !4033}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4030, file: !4022, line: 29, baseType: !305, size: 128)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4030, file: !4022, line: 31, baseType: !239, size: 64, offset: 128)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4026, file: !4022, line: 49, baseType: !239, size: 64, offset: 192)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !687, file: !12, line: 1533, baseType: !4021, size: 64, offset: 8512)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !687, file: !12, line: 1534, baseType: !460, size: 128, align: 64, offset: 8576)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !687, file: !12, line: 1535, baseType: !2270, size: 256, offset: 8704)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !687, file: !12, line: 1537, baseType: !813, size: 192, offset: 8960)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !687, file: !12, line: 1542, baseType: !355, size: 32, offset: 9152)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !687, file: !12, line: 1545, baseType: !329, offset: 9184)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !687, file: !12, line: 1546, baseType: !305, size: 128, offset: 9216)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !687, file: !12, line: 1548, baseType: !329, offset: 9344)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !687, file: !12, line: 1549, baseType: !305, size: 128, offset: 9344)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !517, file: !12, line: 624, baseType: !873, size: 64, offset: 256)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !517, file: !12, line: 631, baseType: !419, size: 64, offset: 320)
!4046 = !DIDerivedType(tag: DW_TAG_member, scope: !517, file: !12, line: 639, baseType: !4047, size: 32, offset: 384)
!4047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !517, file: !12, line: 639, size: 32, elements: !4048)
!4048 = !{!4049, !4050}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4047, file: !12, line: 640, baseType: !2803, size: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4047, file: !12, line: 641, baseType: !7, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !517, file: !12, line: 643, baseType: !600, size: 32, offset: 416)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !517, file: !12, line: 644, baseType: !618, size: 64, offset: 448)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !517, file: !12, line: 645, baseType: !622, size: 128, offset: 512)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !517, file: !12, line: 646, baseType: !622, size: 128, offset: 640)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !517, file: !12, line: 647, baseType: !622, size: 128, offset: 768)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !517, file: !12, line: 648, baseType: !329, offset: 896)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !517, file: !12, line: 649, baseType: !411, size: 16, offset: 896)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !517, file: !12, line: 650, baseType: !301, size: 8, offset: 912)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !517, file: !12, line: 651, baseType: !301, size: 8, offset: 920)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !517, file: !12, line: 652, baseType: !3820, size: 64, offset: 960)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !517, file: !12, line: 659, baseType: !419, size: 64, offset: 1024)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !517, file: !12, line: 660, baseType: !906, size: 256, offset: 1088)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !517, file: !12, line: 662, baseType: !419, size: 64, offset: 1344)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !517, file: !12, line: 663, baseType: !419, size: 64, offset: 1408)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !517, file: !12, line: 665, baseType: !729, size: 128, offset: 1472)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !517, file: !12, line: 666, baseType: !305, size: 128, offset: 1600)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !517, file: !12, line: 675, baseType: !305, size: 128, offset: 1728)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !517, file: !12, line: 676, baseType: !305, size: 128, offset: 1856)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !517, file: !12, line: 677, baseType: !305, size: 128, offset: 1984)
!4070 = !DIDerivedType(tag: DW_TAG_member, scope: !517, file: !12, line: 678, baseType: !4071, size: 128, offset: 2112)
!4071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !517, file: !12, line: 678, size: 128, elements: !4072)
!4072 = !{!4073, !4074}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4071, file: !12, line: 679, baseType: !725, size: 64)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4071, file: !12, line: 680, baseType: !460, size: 128, align: 64)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !517, file: !12, line: 682, baseType: !819, size: 64, offset: 2240)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !517, file: !12, line: 683, baseType: !819, size: 64, offset: 2304)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !517, file: !12, line: 684, baseType: !886, size: 32, offset: 2368)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !517, file: !12, line: 685, baseType: !886, size: 32, offset: 2400)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !517, file: !12, line: 686, baseType: !886, size: 32, offset: 2432)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !517, file: !12, line: 688, baseType: !886, size: 32, offset: 2464)
!4081 = !DIDerivedType(tag: DW_TAG_member, scope: !517, file: !12, line: 690, baseType: !4082, size: 64, offset: 2496)
!4082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !517, file: !12, line: 690, size: 64, elements: !4083)
!4083 = !{!4084, !4290}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4082, file: !12, line: 691, baseType: !4085, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4087)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !12, line: 1822, size: 2048, elements: !4088)
!4088 = !{!4089, !4090, !4094, !4098, !4102, !4103, !4104, !4108, !4121, !4122, !4130, !4134, !4135, !4139, !4140, !4144, !4149, !4150, !4154, !4158, !4250, !4254, !4255, !4259, !4260, !4264, !4268, !4273, !4277, !4281, !4285, !4289}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4087, file: !12, line: 1823, baseType: !720, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4087, file: !12, line: 1824, baseType: !4091, size: 64, offset: 64)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!618, !447, !618, !355}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4087, file: !12, line: 1825, baseType: !4095, size: 64, offset: 128)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!401, !447, !278, !416, !835}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4087, file: !12, line: 1826, baseType: !4099, size: 64, offset: 192)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!401, !447, !318, !416, !835}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4087, file: !12, line: 1827, baseType: !983, size: 64, offset: 256)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4087, file: !12, line: 1828, baseType: !983, size: 64, offset: 320)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4087, file: !12, line: 1829, baseType: !4105, size: 64, offset: 384)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!355, !986, !577}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4087, file: !12, line: 1830, baseType: !4109, size: 64, offset: 448)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!355, !447, !4112}
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !12, line: 1776, size: 128, elements: !4114)
!4114 = !{!4115, !4120}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4113, file: !12, line: 1777, baseType: !4116, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !12, line: 1773, baseType: !4117)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!355, !4112, !318, !355, !618, !288, !7}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4113, file: !12, line: 1778, baseType: !618, size: 64, offset: 64)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4087, file: !12, line: 1831, baseType: !4109, size: 64, offset: 512)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4087, file: !12, line: 1832, baseType: !4123, size: 64, offset: 576)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!4126, !447, !4128}
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4127, line: 52, baseType: !7)
!4127 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !706, line: 27, flags: DIFlagFwdDecl)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4087, file: !12, line: 1833, baseType: !4131, size: 64, offset: 640)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!239, !447, !7, !419}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4087, file: !12, line: 1834, baseType: !4131, size: 64, offset: 704)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4087, file: !12, line: 1835, baseType: !4136, size: 64, offset: 768)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!355, !447, !1279}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4087, file: !12, line: 1836, baseType: !419, size: 64, offset: 832)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4087, file: !12, line: 1837, baseType: !4141, size: 64, offset: 896)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!355, !516, !447}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4087, file: !12, line: 1838, baseType: !4145, size: 64, offset: 960)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!355, !447, !4148}
!4148 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !12, line: 1007, baseType: !280)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4087, file: !12, line: 1839, baseType: !4141, size: 64, offset: 1024)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4087, file: !12, line: 1840, baseType: !4151, size: 64, offset: 1088)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!355, !447, !618, !618, !355}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4087, file: !12, line: 1841, baseType: !4155, size: 64, offset: 1152)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!355, !355, !447, !355}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4087, file: !12, line: 1842, baseType: !4159, size: 64, offset: 1216)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!355, !447, !355, !4162}
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !12, line: 1062, size: 1664, elements: !4164)
!4164 = !{!4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4195, !4226}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4163, file: !12, line: 1063, baseType: !4162, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4163, file: !12, line: 1064, baseType: !305, size: 128, offset: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4163, file: !12, line: 1065, baseType: !729, size: 128, offset: 192)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4163, file: !12, line: 1066, baseType: !305, size: 128, offset: 320)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4163, file: !12, line: 1069, baseType: !305, size: 128, offset: 448)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4163, file: !12, line: 1072, baseType: !4148, size: 64, offset: 576)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4163, file: !12, line: 1073, baseType: !7, size: 32, offset: 640)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4163, file: !12, line: 1074, baseType: !303, size: 8, offset: 672)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4163, file: !12, line: 1075, baseType: !7, size: 32, offset: 704)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4163, file: !12, line: 1076, baseType: !355, size: 32, offset: 736)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4163, file: !12, line: 1077, baseType: !1066, size: 128, offset: 768)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4163, file: !12, line: 1078, baseType: !447, size: 64, offset: 896)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4163, file: !12, line: 1079, baseType: !618, size: 64, offset: 960)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4163, file: !12, line: 1080, baseType: !618, size: 64, offset: 1024)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4163, file: !12, line: 1082, baseType: !1084, size: 64, offset: 1088)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4163, file: !12, line: 1084, baseType: !419, size: 64, offset: 1152)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4163, file: !12, line: 1085, baseType: !419, size: 64, offset: 1216)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4163, file: !12, line: 1087, baseType: !4183, size: 64, offset: 1280)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4185)
!4185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !12, line: 1011, size: 128, elements: !4186)
!4186 = !{!4187, !4191}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4185, file: !12, line: 1012, baseType: !4188, size: 64)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{null, !4162, !4162}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4185, file: !12, line: 1013, baseType: !4192, size: 64, offset: 64)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{null, !4162}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4163, file: !12, line: 1088, baseType: !4196, size: 64, offset: 1344)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4198)
!4198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !12, line: 1016, size: 512, elements: !4199)
!4199 = !{!4200, !4204, !4208, !4209, !4213, !4217, !4221, !4225}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4198, file: !12, line: 1017, baseType: !4201, size: 64)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!4148, !4148}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4198, file: !12, line: 1018, baseType: !4205, size: 64, offset: 64)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{null, !4148}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4198, file: !12, line: 1019, baseType: !4192, size: 64, offset: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4198, file: !12, line: 1020, baseType: !4210, size: 64, offset: 192)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!355, !4162, !355}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4198, file: !12, line: 1021, baseType: !4214, size: 64, offset: 256)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!577, !4162}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4198, file: !12, line: 1022, baseType: !4218, size: 64, offset: 320)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!355, !4162, !355, !308}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4198, file: !12, line: 1023, baseType: !4222, size: 64, offset: 384)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{null, !4162, !960}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4198, file: !12, line: 1024, baseType: !4214, size: 64, offset: 448)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4163, file: !12, line: 1097, baseType: !4227, size: 256, offset: 1408)
!4227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4163, file: !12, line: 1089, size: 256, elements: !4228)
!4228 = !{!4229, !4238, !4244}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4227, file: !12, line: 1090, baseType: !4230, size: 256)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4231, line: 10, size: 256, elements: !4232)
!4231 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4232 = !{!4233, !4234, !4237}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4230, file: !4231, line: 11, baseType: !274, size: 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4230, file: !4231, line: 12, baseType: !4235, size: 64, offset: 64)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4231, line: 5, flags: DIFlagFwdDecl)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4230, file: !4231, line: 13, baseType: !305, size: 128, offset: 128)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4227, file: !12, line: 1091, baseType: !4239, size: 64)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4231, line: 17, size: 64, elements: !4240)
!4240 = !{!4241}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4239, file: !4231, line: 18, baseType: !4242, size: 64)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4231, line: 16, flags: DIFlagFwdDecl)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4227, file: !12, line: 1096, baseType: !4245, size: 192)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4227, file: !12, line: 1092, size: 192, elements: !4246)
!4246 = !{!4247, !4248, !4249}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4245, file: !12, line: 1093, baseType: !305, size: 128)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4245, file: !12, line: 1094, baseType: !355, size: 32, offset: 128)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4245, file: !12, line: 1095, baseType: !7, size: 32, offset: 160)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4087, file: !12, line: 1843, baseType: !4251, size: 64, offset: 1280)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!401, !447, !860, !355, !416, !835, !355}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4087, file: !12, line: 1844, baseType: !1399, size: 64, offset: 1344)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4087, file: !12, line: 1845, baseType: !4256, size: 64, offset: 1408)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{!355, !355}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4087, file: !12, line: 1846, baseType: !4159, size: 64, offset: 1472)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4087, file: !12, line: 1847, baseType: !4261, size: 64, offset: 1536)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!401, !1060, !447, !835, !416, !7}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4087, file: !12, line: 1848, baseType: !4265, size: 64, offset: 1600)
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!401, !447, !835, !1060, !416, !7}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4087, file: !12, line: 1849, baseType: !4269, size: 64, offset: 1664)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 64)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!355, !447, !239, !4272, !960}
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4087, file: !12, line: 1850, baseType: !4274, size: 64, offset: 1728)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!239, !447, !355, !618, !618}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4087, file: !12, line: 1852, baseType: !4278, size: 64, offset: 1792)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{null, !801, !447}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4087, file: !12, line: 1856, baseType: !4282, size: 64, offset: 1856)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!401, !447, !618, !447, !618, !416, !7}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4087, file: !12, line: 1858, baseType: !4286, size: 64, offset: 1920)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!618, !447, !618, !447, !618, !618, !7}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4087, file: !12, line: 1861, baseType: !4151, size: 64, offset: 1984)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4082, file: !12, line: 692, baseType: !754, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !517, file: !12, line: 694, baseType: !4292, size: 64, offset: 2560)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !12, line: 1100, size: 384, elements: !4294)
!4294 = !{!4295, !4296, !4297, !4298}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4293, file: !12, line: 1101, baseType: !329)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4293, file: !12, line: 1102, baseType: !305, size: 128)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4293, file: !12, line: 1103, baseType: !305, size: 128, offset: 128)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4293, file: !12, line: 1104, baseType: !305, size: 128, offset: 256)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !517, file: !12, line: 695, baseType: !874, size: 1216, align: 64, offset: 2624)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !517, file: !12, line: 696, baseType: !305, size: 128, offset: 3840)
!4301 = !DIDerivedType(tag: DW_TAG_member, scope: !517, file: !12, line: 697, baseType: !4302, size: 64, offset: 3968)
!4302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !517, file: !12, line: 697, size: 64, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4309, !4310}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4302, file: !12, line: 698, baseType: !1060, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4302, file: !12, line: 699, baseType: !2303, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4302, file: !12, line: 700, baseType: !4307, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 64)
!4308 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !12, line: 700, flags: DIFlagFwdDecl)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4302, file: !12, line: 701, baseType: !278, size: 64)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4302, file: !12, line: 702, baseType: !7, size: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !517, file: !12, line: 705, baseType: !276, size: 32, offset: 4032)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !517, file: !12, line: 708, baseType: !276, size: 32, offset: 4064)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !517, file: !12, line: 709, baseType: !3924, size: 64, offset: 4096)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !517, file: !12, line: 720, baseType: !280, size: 64, offset: 4160)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !478, file: !475, line: 98, baseType: !4316, size: 256, offset: 448)
!4316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 256, elements: !2211)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !478, file: !475, line: 101, baseType: !4318, size: 32, offset: 704)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4319, line: 25, size: 32, elements: !4320)
!4319 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4320 = !{!4321}
!4321 = !DIDerivedType(tag: DW_TAG_member, scope: !4318, file: !4319, line: 26, baseType: !4322, size: 32)
!4322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4318, file: !4319, line: 26, size: 32, elements: !4323)
!4323 = !{!4324}
!4324 = !DIDerivedType(tag: DW_TAG_member, scope: !4322, file: !4319, line: 30, baseType: !4325, size: 32)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4322, file: !4319, line: 30, size: 32, elements: !4326)
!4326 = !{!4327, !4328}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4325, file: !4319, line: 31, baseType: !329)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4325, file: !4319, line: 32, baseType: !355, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !478, file: !475, line: 102, baseType: !3939, size: 64, offset: 768)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !478, file: !475, line: 103, baseType: !686, size: 64, offset: 832)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !478, file: !475, line: 104, baseType: !419, size: 64, offset: 896)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !478, file: !475, line: 105, baseType: !280, size: 64, offset: 960)
!4333 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !475, line: 107, baseType: !4334, size: 128, offset: 1024)
!4334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !475, line: 107, size: 128, elements: !4335)
!4335 = !{!4336, !4337}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4334, file: !475, line: 108, baseType: !305, size: 128)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4334, file: !475, line: 109, baseType: !4338, size: 64)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !478, file: !475, line: 111, baseType: !305, size: 128, offset: 1152)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !478, file: !475, line: 112, baseType: !305, size: 128, offset: 1280)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !478, file: !475, line: 120, baseType: !4342, size: 128, offset: 1408)
!4342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !475, line: 116, size: 128, elements: !4343)
!4343 = !{!4344, !4345, !4346}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4342, file: !475, line: 117, baseType: !729, size: 128)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4342, file: !475, line: 118, baseType: !492, size: 128)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4342, file: !475, line: 119, baseType: !460, size: 128, align: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !448, file: !12, line: 922, baseType: !516, size: 64, offset: 256)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !448, file: !12, line: 923, baseType: !4085, size: 64, offset: 320)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !448, file: !12, line: 929, baseType: !329, offset: 384)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !448, file: !12, line: 930, baseType: !11, size: 32, offset: 384)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !448, file: !12, line: 931, baseType: !817, size: 64, offset: 448)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !448, file: !12, line: 932, baseType: !7, size: 32, offset: 512)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !448, file: !12, line: 933, baseType: !2407, size: 32, offset: 544)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !448, file: !12, line: 934, baseType: !813, size: 192, offset: 576)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !448, file: !12, line: 935, baseType: !618, size: 64, offset: 768)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !448, file: !12, line: 936, baseType: !4357, size: 192, offset: 832)
!4357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !12, line: 885, size: 192, elements: !4358)
!4358 = !{!4359, !4360, !4361, !4362, !4363, !4364}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4357, file: !12, line: 886, baseType: !1088)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4357, file: !12, line: 887, baseType: !1755, size: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4357, file: !12, line: 888, baseType: !20, size: 32, offset: 64)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4357, file: !12, line: 889, baseType: !522, size: 32, offset: 96)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4357, file: !12, line: 889, baseType: !522, size: 32, offset: 128)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4357, file: !12, line: 890, baseType: !355, size: 32, offset: 160)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !448, file: !12, line: 937, baseType: !1825, size: 64, offset: 1024)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !448, file: !12, line: 938, baseType: !4367, size: 256, offset: 1088)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !12, line: 896, size: 256, elements: !4368)
!4368 = !{!4369, !4370, !4371, !4372, !4373, !4374}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4367, file: !12, line: 897, baseType: !419, size: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4367, file: !12, line: 898, baseType: !7, size: 32, offset: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4367, file: !12, line: 899, baseType: !7, size: 32, offset: 96)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4367, file: !12, line: 902, baseType: !7, size: 32, offset: 128)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4367, file: !12, line: 903, baseType: !7, size: 32, offset: 160)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4367, file: !12, line: 904, baseType: !618, size: 64, offset: 192)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !448, file: !12, line: 940, baseType: !288, size: 64, offset: 1344)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !448, file: !12, line: 945, baseType: !280, size: 64, offset: 1408)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !448, file: !12, line: 949, baseType: !305, size: 128, offset: 1472)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !448, file: !12, line: 950, baseType: !305, size: 128, offset: 1600)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !448, file: !12, line: 952, baseType: !873, size: 64, offset: 1728)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !448, file: !12, line: 953, baseType: !1206, size: 32, offset: 1792)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !448, file: !12, line: 954, baseType: !1206, size: 32, offset: 1824)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !438, file: !395, line: 174, baseType: !444, size: 64, offset: 320)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !438, file: !395, line: 176, baseType: !4384, size: 64, offset: 384)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!355, !447, !322, !437, !1279}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !426, file: !395, line: 90, baseType: !421, size: 64, offset: 192)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !426, file: !395, line: 91, baseType: !4389, size: 64, offset: 256)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !385, file: !315, line: 143, baseType: !4391, size: 64, offset: 256)
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4392, size: 64)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!4394, !322}
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4396)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !35, line: 39, size: 384, elements: !4397)
!4397 = !{!4398, !4399, !4403, !4407, !4413, !4417}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4396, file: !35, line: 40, baseType: !34, size: 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4396, file: !35, line: 41, baseType: !4400, size: 64, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!577}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4396, file: !35, line: 42, baseType: !4404, size: 64, offset: 128)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!280}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4396, file: !35, line: 43, baseType: !4408, size: 64, offset: 192)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!3381, !4411}
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4412 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !35, line: 19, flags: DIFlagFwdDecl)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4396, file: !35, line: 44, baseType: !4414, size: 64, offset: 256)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!3381}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4396, file: !35, line: 45, baseType: !555, size: 64, offset: 320)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !385, file: !315, line: 144, baseType: !4419, size: 64, offset: 320)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!3381, !322}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !385, file: !315, line: 145, baseType: !4423, size: 64, offset: 384)
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 64)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{null, !322, !4426, !4427}
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !314, file: !315, line: 70, baseType: !4429, size: 64, offset: 384)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !706, line: 123, size: 1024, elements: !4431)
!4431 = !{!4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4548, !4549, !4550, !4551, !4552}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4430, file: !706, line: 124, baseType: !886, size: 32)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4430, file: !706, line: 125, baseType: !886, size: 32, offset: 32)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4430, file: !706, line: 135, baseType: !4429, size: 64, offset: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4430, file: !706, line: 136, baseType: !318, size: 64, offset: 128)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4430, file: !706, line: 138, baseType: !899, size: 192, align: 64, offset: 192)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4430, file: !706, line: 140, baseType: !3381, size: 64, offset: 384)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4430, file: !706, line: 141, baseType: !7, size: 32, offset: 448)
!4439 = !DIDerivedType(tag: DW_TAG_member, scope: !4430, file: !706, line: 142, baseType: !4440, size: 256, offset: 512)
!4440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4430, file: !706, line: 142, size: 256, elements: !4441)
!4441 = !{!4442, !4488, !4492}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4440, file: !706, line: 143, baseType: !4443, size: 192)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !706, line: 91, size: 192, elements: !4444)
!4444 = !{!4445, !4446, !4447}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4443, file: !706, line: 92, baseType: !419, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4443, file: !706, line: 94, baseType: !895, size: 64, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4443, file: !706, line: 100, baseType: !4448, size: 64, offset: 128)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !706, line: 180, size: 704, elements: !4450)
!4450 = !{!4451, !4452, !4453, !4460, !4461, !4462, !4486, !4487}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4449, file: !706, line: 182, baseType: !4429, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4449, file: !706, line: 183, baseType: !7, size: 32, offset: 64)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4449, file: !706, line: 186, baseType: !4454, size: 192, offset: 128)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4455, line: 19, size: 192, elements: !4456)
!4455 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4456 = !{!4457, !4458, !4459}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4454, file: !4455, line: 20, baseType: !878, size: 128)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4454, file: !4455, line: 21, baseType: !7, size: 32, offset: 128)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4454, file: !4455, line: 22, baseType: !7, size: 32, offset: 160)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4449, file: !706, line: 187, baseType: !274, size: 32, offset: 320)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4449, file: !706, line: 188, baseType: !274, size: 32, offset: 352)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4449, file: !706, line: 189, baseType: !4463, size: 64, offset: 384)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !706, line: 168, size: 320, elements: !4465)
!4465 = !{!4466, !4470, !4474, !4478, !4482}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4464, file: !706, line: 169, baseType: !4467, size: 64)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!355, !801, !4448}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4464, file: !706, line: 171, baseType: !4471, size: 64, offset: 64)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!355, !4429, !318, !410}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4464, file: !706, line: 173, baseType: !4475, size: 64, offset: 128)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!355, !4429}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4464, file: !706, line: 174, baseType: !4479, size: 64, offset: 192)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!355, !4429, !4429, !318}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4464, file: !706, line: 176, baseType: !4483, size: 64, offset: 256)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!355, !801, !4429, !4448}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4449, file: !706, line: 192, baseType: !305, size: 128, offset: 448)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4449, file: !706, line: 194, baseType: !1066, size: 128, offset: 576)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4440, file: !706, line: 144, baseType: !4489, size: 64)
!4489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !706, line: 103, size: 64, elements: !4490)
!4490 = !{!4491}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4489, file: !706, line: 104, baseType: !4429, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4440, file: !706, line: 145, baseType: !4493, size: 256)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !706, line: 107, size: 256, elements: !4494)
!4494 = !{!4495, !4543, !4546, !4547}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4493, file: !706, line: 108, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4498)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !706, line: 217, size: 768, elements: !4499)
!4499 = !{!4500, !4520, !4524, !4525, !4526, !4527, !4528, !4532, !4533, !4534, !4535, !4539}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4498, file: !706, line: 222, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!355, !4504}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !706, line: 197, size: 1088, elements: !4506)
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4505, file: !706, line: 199, baseType: !4429, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4505, file: !706, line: 200, baseType: !447, size: 64, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4505, file: !706, line: 201, baseType: !801, size: 64, offset: 128)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4505, file: !706, line: 202, baseType: !280, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4505, file: !706, line: 205, baseType: !813, size: 192, offset: 256)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4505, file: !706, line: 206, baseType: !813, size: 192, offset: 448)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4505, file: !706, line: 207, baseType: !355, size: 32, offset: 640)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4505, file: !706, line: 208, baseType: !305, size: 128, offset: 704)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4505, file: !706, line: 209, baseType: !278, size: 64, offset: 832)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4505, file: !706, line: 211, baseType: !416, size: 64, offset: 896)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4505, file: !706, line: 212, baseType: !577, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4505, file: !706, line: 213, baseType: !577, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4505, file: !706, line: 214, baseType: !1307, size: 64, offset: 1024)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4498, file: !706, line: 223, baseType: !4521, size: 64, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{null, !4504}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4498, file: !706, line: 236, baseType: !845, size: 64, offset: 128)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4498, file: !706, line: 238, baseType: !832, size: 64, offset: 192)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4498, file: !706, line: 239, baseType: !841, size: 64, offset: 256)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4498, file: !706, line: 240, baseType: !837, size: 64, offset: 320)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4498, file: !706, line: 242, baseType: !4529, size: 64, offset: 384)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!401, !4504, !278, !416, !618}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4498, file: !706, line: 252, baseType: !416, size: 64, offset: 448)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4498, file: !706, line: 259, baseType: !577, size: 8, offset: 512)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4498, file: !706, line: 260, baseType: !4529, size: 64, offset: 576)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4498, file: !706, line: 263, baseType: !4536, size: 64, offset: 640)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!4126, !4504, !4128}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4498, file: !706, line: 266, baseType: !4540, size: 64, offset: 704)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!355, !4504, !1279}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4493, file: !706, line: 109, baseType: !4544, size: 64, offset: 64)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !706, line: 31, flags: DIFlagFwdDecl)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4493, file: !706, line: 110, baseType: !618, size: 64, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4493, file: !706, line: 111, baseType: !4429, size: 64, offset: 192)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4430, file: !706, line: 148, baseType: !280, size: 64, offset: 768)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4430, file: !706, line: 154, baseType: !288, size: 64, offset: 832)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4430, file: !706, line: 156, baseType: !411, size: 16, offset: 896)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4430, file: !706, line: 157, baseType: !410, size: 16, offset: 912)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4430, file: !706, line: 158, baseType: !4553, size: 64, offset: 960)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !706, line: 32, flags: DIFlagFwdDecl)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !314, file: !315, line: 71, baseType: !2332, size: 32, offset: 448)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !314, file: !315, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !314, file: !315, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !314, file: !315, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !314, file: !315, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !314, file: !315, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !311, file: !47, line: 463, baseType: !2400, size: 64, offset: 512)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !311, file: !47, line: 465, baseType: !4563, size: 64, offset: 576)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4564 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !47, line: 36, flags: DIFlagFwdDecl)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !311, file: !47, line: 467, baseType: !318, size: 64, offset: 640)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !311, file: !47, line: 468, baseType: !4567, size: 64, offset: 704)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !47, line: 87, size: 384, elements: !4570)
!4570 = !{!4571, !4572, !4573, !4577, !4581, !4585}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4569, file: !47, line: 88, baseType: !318, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4569, file: !47, line: 89, baseType: !423, size: 64, offset: 64)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4569, file: !47, line: 90, baseType: !4574, size: 64, offset: 128)
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 64)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{!355, !2400, !366}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4569, file: !47, line: 91, baseType: !4578, size: 64, offset: 192)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!278, !2400, !2473, !4426, !4427}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4569, file: !47, line: 93, baseType: !4582, size: 64, offset: 256)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{null, !2400}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4569, file: !47, line: 95, baseType: !4586, size: 64, offset: 320)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4588)
!4588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !54, line: 278, size: 1472, elements: !4589)
!4589 = !{!4590, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4588, file: !54, line: 279, baseType: !4591, size: 64)
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!355, !2400}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4588, file: !54, line: 280, baseType: !4582, size: 64, offset: 64)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4588, file: !54, line: 281, baseType: !4591, size: 64, offset: 128)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4588, file: !54, line: 282, baseType: !4591, size: 64, offset: 192)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4588, file: !54, line: 283, baseType: !4591, size: 64, offset: 256)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4588, file: !54, line: 284, baseType: !4591, size: 64, offset: 320)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4588, file: !54, line: 285, baseType: !4591, size: 64, offset: 384)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4588, file: !54, line: 286, baseType: !4591, size: 64, offset: 448)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4588, file: !54, line: 287, baseType: !4591, size: 64, offset: 512)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4588, file: !54, line: 288, baseType: !4591, size: 64, offset: 576)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4588, file: !54, line: 289, baseType: !4591, size: 64, offset: 640)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4588, file: !54, line: 290, baseType: !4591, size: 64, offset: 704)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4588, file: !54, line: 291, baseType: !4591, size: 64, offset: 768)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4588, file: !54, line: 292, baseType: !4591, size: 64, offset: 832)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4588, file: !54, line: 293, baseType: !4591, size: 64, offset: 896)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4588, file: !54, line: 294, baseType: !4591, size: 64, offset: 960)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4588, file: !54, line: 295, baseType: !4591, size: 64, offset: 1024)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4588, file: !54, line: 296, baseType: !4591, size: 64, offset: 1088)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4588, file: !54, line: 297, baseType: !4591, size: 64, offset: 1152)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4588, file: !54, line: 298, baseType: !4591, size: 64, offset: 1216)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4588, file: !54, line: 299, baseType: !4591, size: 64, offset: 1280)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4588, file: !54, line: 300, baseType: !4591, size: 64, offset: 1344)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4588, file: !54, line: 301, baseType: !4591, size: 64, offset: 1408)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !311, file: !47, line: 470, baseType: !4617, size: 64, offset: 768)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4619, line: 82, size: 1408, elements: !4620)
!4619 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4620 = !{!4621, !4622, !4623, !4624, !4625, !4626, !4627, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4684, !4687, !4688}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4618, file: !4619, line: 83, baseType: !318, size: 64)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4618, file: !4619, line: 84, baseType: !318, size: 64, offset: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4618, file: !4619, line: 85, baseType: !2400, size: 64, offset: 128)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4618, file: !4619, line: 86, baseType: !423, size: 64, offset: 192)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4618, file: !4619, line: 87, baseType: !423, size: 64, offset: 256)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4618, file: !4619, line: 88, baseType: !423, size: 64, offset: 320)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4618, file: !4619, line: 90, baseType: !4628, size: 64, offset: 384)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!355, !2400, !4631}
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !41, line: 95, size: 1152, elements: !4633)
!4633 = !{!4634, !4635, !4636, !4637, !4638, !4639, !4640, !4644, !4648, !4649, !4650, !4651, !4652, !4660, !4661, !4662, !4663, !4664, !4665}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4632, file: !41, line: 96, baseType: !318, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4632, file: !41, line: 97, baseType: !4617, size: 64, offset: 64)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4632, file: !41, line: 99, baseType: !720, size: 64, offset: 128)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4632, file: !41, line: 100, baseType: !318, size: 64, offset: 192)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4632, file: !41, line: 102, baseType: !577, size: 8, offset: 256)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4632, file: !41, line: 103, baseType: !40, size: 32, offset: 288)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4632, file: !41, line: 105, baseType: !4641, size: 64, offset: 320)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4643)
!4643 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !41, line: 105, flags: DIFlagFwdDecl)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4632, file: !41, line: 106, baseType: !4645, size: 64, offset: 384)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4647)
!4647 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !41, line: 106, flags: DIFlagFwdDecl)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4632, file: !41, line: 108, baseType: !4591, size: 64, offset: 448)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4632, file: !41, line: 109, baseType: !4582, size: 64, offset: 512)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4632, file: !41, line: 110, baseType: !4591, size: 64, offset: 576)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4632, file: !41, line: 111, baseType: !4582, size: 64, offset: 640)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4632, file: !41, line: 112, baseType: !4653, size: 64, offset: 704)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!355, !2400, !4656}
!4656 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !54, line: 52, baseType: !4657)
!4657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !54, line: 50, size: 32, elements: !4658)
!4658 = !{!4659}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4657, file: !54, line: 51, baseType: !355, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4632, file: !41, line: 113, baseType: !4591, size: 64, offset: 768)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4632, file: !41, line: 114, baseType: !423, size: 64, offset: 832)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4632, file: !41, line: 115, baseType: !423, size: 64, offset: 896)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4632, file: !41, line: 117, baseType: !4586, size: 64, offset: 960)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4632, file: !41, line: 118, baseType: !4582, size: 64, offset: 1024)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4632, file: !41, line: 120, baseType: !4666, size: 64, offset: 1088)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !41, line: 120, flags: DIFlagFwdDecl)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4618, file: !4619, line: 91, baseType: !4574, size: 64, offset: 448)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4618, file: !4619, line: 92, baseType: !4591, size: 64, offset: 512)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4618, file: !4619, line: 93, baseType: !4582, size: 64, offset: 576)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4618, file: !4619, line: 94, baseType: !4591, size: 64, offset: 640)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4618, file: !4619, line: 95, baseType: !4582, size: 64, offset: 704)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4618, file: !4619, line: 97, baseType: !4591, size: 64, offset: 768)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4618, file: !4619, line: 98, baseType: !4591, size: 64, offset: 832)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4618, file: !4619, line: 100, baseType: !4653, size: 64, offset: 896)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4618, file: !4619, line: 101, baseType: !4591, size: 64, offset: 960)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4618, file: !4619, line: 103, baseType: !4591, size: 64, offset: 1024)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4618, file: !4619, line: 105, baseType: !4591, size: 64, offset: 1088)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4618, file: !4619, line: 107, baseType: !4586, size: 64, offset: 1152)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4618, file: !4619, line: 109, baseType: !4681, size: 64, offset: 1216)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4683)
!4683 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4619, line: 109, flags: DIFlagFwdDecl)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4618, file: !4619, line: 111, baseType: !4685, size: 64, offset: 1280)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4619, line: 111, flags: DIFlagFwdDecl)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4618, file: !4619, line: 112, baseType: !735, offset: 1344)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4618, file: !4619, line: 114, baseType: !577, size: 8, offset: 1344)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !311, file: !47, line: 471, baseType: !4631, size: 64, offset: 832)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !311, file: !47, line: 473, baseType: !280, size: 64, offset: 896)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !311, file: !47, line: 475, baseType: !280, size: 64, offset: 960)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !311, file: !47, line: 480, baseType: !813, size: 192, offset: 1024)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !311, file: !47, line: 484, baseType: !4694, size: 576, offset: 1216)
!4694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !47, line: 361, size: 576, elements: !4695)
!4695 = !{!4696, !4697, !4698, !4699, !4700, !4701}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4694, file: !47, line: 362, baseType: !305, size: 128)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4694, file: !47, line: 363, baseType: !305, size: 128, offset: 128)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4694, file: !47, line: 364, baseType: !305, size: 128, offset: 256)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4694, file: !47, line: 365, baseType: !305, size: 128, offset: 384)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4694, file: !47, line: 366, baseType: !577, size: 8, offset: 512)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4694, file: !47, line: 367, baseType: !46, size: 32, offset: 544)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !311, file: !47, line: 485, baseType: !4703, size: 2304, offset: 1792)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !54, line: 565, size: 2304, elements: !4704)
!4704 = !{!4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4789, !4793}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4703, file: !54, line: 566, baseType: !4656, size: 32)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4703, file: !54, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4703, file: !54, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4703, file: !54, line: 569, baseType: !577, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4703, file: !54, line: 570, baseType: !577, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4703, file: !54, line: 571, baseType: !577, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4703, file: !54, line: 572, baseType: !577, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4703, file: !54, line: 573, baseType: !577, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4703, file: !54, line: 574, baseType: !577, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4703, file: !54, line: 575, baseType: !577, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4703, file: !54, line: 576, baseType: !577, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4703, file: !54, line: 577, baseType: !274, size: 32, offset: 64)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4703, file: !54, line: 578, baseType: !329, offset: 96)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4703, file: !54, line: 580, baseType: !305, size: 128, offset: 128)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4703, file: !54, line: 581, baseType: !1780, size: 192, offset: 256)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4703, file: !54, line: 582, baseType: !4721, size: 64, offset: 448)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4723, line: 43, size: 1472, elements: !4724)
!4723 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4724 = !{!4725, !4726, !4727, !4728, !4729, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4722, file: !4723, line: 44, baseType: !318, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4722, file: !4723, line: 45, baseType: !355, size: 32, offset: 64)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4722, file: !4723, line: 46, baseType: !305, size: 128, offset: 128)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4722, file: !4723, line: 47, baseType: !329, offset: 256)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4722, file: !4723, line: 48, baseType: !4730, size: 64, offset: 256)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !54, line: 533, flags: DIFlagFwdDecl)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4722, file: !4723, line: 49, baseType: !2382, size: 320, offset: 320)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4722, file: !4723, line: 50, baseType: !419, size: 64, offset: 640)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4722, file: !4723, line: 51, baseType: !1587, size: 64, offset: 704)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4722, file: !4723, line: 52, baseType: !1587, size: 64, offset: 768)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4722, file: !4723, line: 53, baseType: !1587, size: 64, offset: 832)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4722, file: !4723, line: 54, baseType: !1587, size: 64, offset: 896)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4722, file: !4723, line: 55, baseType: !1587, size: 64, offset: 960)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4722, file: !4723, line: 56, baseType: !419, size: 64, offset: 1024)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4722, file: !4723, line: 57, baseType: !419, size: 64, offset: 1088)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4722, file: !4723, line: 58, baseType: !419, size: 64, offset: 1152)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4722, file: !4723, line: 59, baseType: !419, size: 64, offset: 1216)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4722, file: !4723, line: 60, baseType: !419, size: 64, offset: 1280)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4722, file: !4723, line: 61, baseType: !2400, size: 64, offset: 1344)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4722, file: !4723, line: 62, baseType: !577, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4722, file: !4723, line: 63, baseType: !577, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4703, file: !54, line: 583, baseType: !577, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4703, file: !54, line: 584, baseType: !577, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4703, file: !54, line: 585, baseType: !577, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4703, file: !54, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4703, file: !54, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4703, file: !54, line: 592, baseType: !1579, size: 512, offset: 576)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4703, file: !54, line: 593, baseType: !288, size: 64, offset: 1088)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4703, file: !54, line: 594, baseType: !2270, size: 256, offset: 1152)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4703, file: !54, line: 595, baseType: !1066, size: 128, offset: 1408)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4703, file: !54, line: 596, baseType: !4730, size: 64, offset: 1536)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4703, file: !54, line: 597, baseType: !886, size: 32, offset: 1600)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4703, file: !54, line: 598, baseType: !886, size: 32, offset: 1632)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4703, file: !54, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4703, file: !54, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4703, file: !54, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4703, file: !54, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4703, file: !54, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4703, file: !54, line: 604, baseType: !577, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4703, file: !54, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4703, file: !54, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4703, file: !54, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4703, file: !54, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4703, file: !54, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4703, file: !54, line: 610, baseType: !7, size: 32, offset: 1696)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4703, file: !54, line: 611, baseType: !53, size: 32, offset: 1728)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4703, file: !54, line: 612, baseType: !61, size: 32, offset: 1760)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4703, file: !54, line: 613, baseType: !355, size: 32, offset: 1792)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4703, file: !54, line: 614, baseType: !355, size: 32, offset: 1824)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4703, file: !54, line: 615, baseType: !288, size: 64, offset: 1856)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4703, file: !54, line: 616, baseType: !288, size: 64, offset: 1920)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4703, file: !54, line: 617, baseType: !288, size: 64, offset: 1984)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4703, file: !54, line: 618, baseType: !288, size: 64, offset: 2048)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4703, file: !54, line: 620, baseType: !4780, size: 64, offset: 2112)
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !54, line: 536, size: 256, elements: !4782)
!4782 = !{!4783, !4784, !4785, !4786}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4781, file: !54, line: 537, baseType: !329)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4781, file: !54, line: 538, baseType: !7, size: 32)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4781, file: !54, line: 540, baseType: !305, size: 128, offset: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4781, file: !54, line: 543, baseType: !4787, size: 64, offset: 192)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !54, line: 534, flags: DIFlagFwdDecl)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4703, file: !54, line: 621, baseType: !4790, size: 64, offset: 2176)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{null, !2400, !1728}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4703, file: !54, line: 622, baseType: !4794, size: 64, offset: 2240)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !54, line: 622, flags: DIFlagFwdDecl)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !311, file: !47, line: 486, baseType: !4797, size: 64, offset: 4096)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !54, line: 642, size: 1792, elements: !4799)
!4799 = !{!4800, !4801, !4802, !4806, !4807, !4808}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4798, file: !54, line: 643, baseType: !4588, size: 1472)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4798, file: !54, line: 644, baseType: !4591, size: 64, offset: 1472)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4798, file: !54, line: 645, baseType: !4803, size: 64, offset: 1536)
!4803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64)
!4804 = !DISubroutineType(types: !4805)
!4805 = !{null, !2400, !577}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4798, file: !54, line: 646, baseType: !4591, size: 64, offset: 1600)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4798, file: !54, line: 647, baseType: !4582, size: 64, offset: 1664)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4798, file: !54, line: 648, baseType: !4582, size: 64, offset: 1728)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !311, file: !47, line: 493, baseType: !4810, size: 64, offset: 4160)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4812, line: 13, flags: DIFlagFwdDecl)
!4812 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !311, file: !47, line: 499, baseType: !305, size: 128, offset: 4224)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !311, file: !47, line: 502, baseType: !4815, size: 64, offset: 4352)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4817)
!4817 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !47, line: 502, flags: DIFlagFwdDecl)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !311, file: !47, line: 504, baseType: !4819, size: 64, offset: 4416)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !311, file: !47, line: 505, baseType: !288, size: 64, offset: 4480)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !311, file: !47, line: 510, baseType: !288, size: 64, offset: 4544)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !311, file: !47, line: 511, baseType: !4823, size: 64, offset: 4608)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4825)
!4825 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !47, line: 511, flags: DIFlagFwdDecl)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !311, file: !47, line: 513, baseType: !4827, size: 64, offset: 4672)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !47, line: 288, size: 128, elements: !4829)
!4829 = !{!4830, !4831}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4828, file: !47, line: 293, baseType: !7, size: 32)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4828, file: !47, line: 294, baseType: !419, size: 64, offset: 64)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !311, file: !47, line: 515, baseType: !305, size: 128, offset: 4736)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !311, file: !47, line: 526, baseType: !4834, offset: 4864)
!4834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4835, line: 5, elements: !343)
!4835 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !311, file: !47, line: 528, baseType: !4837, size: 64, offset: 4864)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4839, line: 14, flags: DIFlagFwdDecl)
!4839 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !311, file: !47, line: 529, baseType: !4841, size: 64, offset: 4928)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4843, line: 17, size: 192, elements: !4844)
!4843 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4844 = !{!4845, !4846, !4929}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4842, file: !4843, line: 18, baseType: !4841, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4842, file: !4843, line: 19, baseType: !4847, size: 64, offset: 64)
!4847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4848, size: 64)
!4848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4849)
!4849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4843, line: 110, size: 1152, elements: !4850)
!4850 = !{!4851, !4855, !4859, !4865, !4871, !4875, !4879, !4884, !4888, !4889, !4893, !4897, !4901, !4912, !4913, !4914, !4915, !4925}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4849, file: !4843, line: 111, baseType: !4852, size: 64)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!4841, !4841}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4849, file: !4843, line: 112, baseType: !4856, size: 64, offset: 64)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{null, !4841}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4849, file: !4843, line: 113, baseType: !4860, size: 64, offset: 128)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!577, !4863}
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4842)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4849, file: !4843, line: 114, baseType: !4866, size: 64, offset: 192)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!3381, !4863, !4869}
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4849, file: !4843, line: 116, baseType: !4872, size: 64, offset: 256)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!577, !4863, !318}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4849, file: !4843, line: 118, baseType: !4876, size: 64, offset: 320)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{!355, !4863, !318, !7, !280, !416}
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4849, file: !4843, line: 123, baseType: !4880, size: 64, offset: 384)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!355, !4863, !318, !4883, !416}
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4849, file: !4843, line: 126, baseType: !4885, size: 64, offset: 448)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!318, !4863}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4849, file: !4843, line: 127, baseType: !4885, size: 64, offset: 512)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4849, file: !4843, line: 128, baseType: !4890, size: 64, offset: 576)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!4841, !4863}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4849, file: !4843, line: 130, baseType: !4894, size: 64, offset: 640)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!4841, !4863, !4841}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4849, file: !4843, line: 133, baseType: !4898, size: 64, offset: 704)
!4898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4899, size: 64)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!4841, !4863, !318}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4849, file: !4843, line: 135, baseType: !4902, size: 64, offset: 768)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!355, !4863, !318, !318, !7, !7, !4905}
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4843, line: 43, size: 640, elements: !4907)
!4907 = !{!4908, !4909, !4910}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4906, file: !4843, line: 44, baseType: !4841, size: 64)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4906, file: !4843, line: 45, baseType: !7, size: 32, offset: 64)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4906, file: !4843, line: 46, baseType: !4911, size: 512, offset: 128)
!4911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 512, elements: !1617)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4849, file: !4843, line: 140, baseType: !4894, size: 64, offset: 832)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4849, file: !4843, line: 143, baseType: !4890, size: 64, offset: 896)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4849, file: !4843, line: 145, baseType: !4852, size: 64, offset: 960)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4849, file: !4843, line: 146, baseType: !4916, size: 64, offset: 1024)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!355, !4863, !4919}
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4843, line: 29, size: 128, elements: !4921)
!4921 = !{!4922, !4923, !4924}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4920, file: !4843, line: 30, baseType: !7, size: 32)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4920, file: !4843, line: 31, baseType: !7, size: 32, offset: 32)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4920, file: !4843, line: 32, baseType: !4863, size: 64, offset: 64)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4849, file: !4843, line: 148, baseType: !4926, size: 64, offset: 1088)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!355, !4863, !2400}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4842, file: !4843, line: 20, baseType: !2400, size: 64, offset: 128)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !311, file: !47, line: 534, baseType: !600, size: 32, offset: 4992)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !311, file: !47, line: 535, baseType: !274, size: 32, offset: 5024)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !311, file: !47, line: 537, baseType: !329, offset: 5056)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !311, file: !47, line: 538, baseType: !305, size: 128, offset: 5056)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !311, file: !47, line: 540, baseType: !4935, size: 64, offset: 5184)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4937, line: 54, size: 960, elements: !4938)
!4937 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4938 = !{!4939, !4940, !4941, !4942, !4943, !4944, !4945, !4949, !4953, !4954, !4955, !4956, !4960, !4964, !4965}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4936, file: !4937, line: 55, baseType: !318, size: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4936, file: !4937, line: 56, baseType: !720, size: 64, offset: 64)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4936, file: !4937, line: 58, baseType: !423, size: 64, offset: 128)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4936, file: !4937, line: 59, baseType: !423, size: 64, offset: 192)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4936, file: !4937, line: 60, baseType: !322, size: 64, offset: 256)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4936, file: !4937, line: 62, baseType: !4574, size: 64, offset: 320)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4936, file: !4937, line: 63, baseType: !4946, size: 64, offset: 384)
!4946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4947, size: 64)
!4947 = !DISubroutineType(types: !4948)
!4948 = !{!278, !2400, !2473}
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4936, file: !4937, line: 65, baseType: !4950, size: 64, offset: 448)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{null, !4935}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4936, file: !4937, line: 66, baseType: !4582, size: 64, offset: 512)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4936, file: !4937, line: 68, baseType: !4591, size: 64, offset: 576)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4936, file: !4937, line: 70, baseType: !4394, size: 64, offset: 640)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4936, file: !4937, line: 71, baseType: !4957, size: 64, offset: 704)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!3381, !2400}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4936, file: !4937, line: 73, baseType: !4961, size: 64, offset: 768)
!4961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4962, size: 64)
!4962 = !DISubroutineType(types: !4963)
!4963 = !{null, !2400, !4426, !4427}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4936, file: !4937, line: 75, baseType: !4586, size: 64, offset: 832)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4936, file: !4937, line: 77, baseType: !4685, size: 64, offset: 896)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !311, file: !47, line: 541, baseType: !423, size: 64, offset: 5248)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !311, file: !47, line: 543, baseType: !4582, size: 64, offset: 5312)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !311, file: !47, line: 544, baseType: !4969, size: 64, offset: 5376)
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4970, size: 64)
!4970 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !47, line: 45, flags: DIFlagFwdDecl)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !311, file: !47, line: 545, baseType: !4972, size: 64, offset: 5440)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !47, line: 47, flags: DIFlagFwdDecl)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !311, file: !47, line: 547, baseType: !577, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !311, file: !47, line: 548, baseType: !577, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !311, file: !47, line: 549, baseType: !577, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !311, file: !47, line: 550, baseType: !577, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "dev_loss_work", scope: !282, file: !164, line: 348, baseType: !2378, size: 704, offset: 6336)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "scan_work", scope: !282, file: !164, line: 349, baseType: !2270, size: 256, offset: 7040)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "fail_io_work", scope: !282, file: !164, line: 350, baseType: !2378, size: 704, offset: 7296)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "stgt_delete_work", scope: !282, file: !164, line: 351, baseType: !2270, size: 256, offset: 8000)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "rport_delete_work", scope: !282, file: !164, line: 352, baseType: !2270, size: 256, offset: 8256)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "rqst_q", scope: !282, file: !164, line: 353, baseType: !2480, size: 64, offset: 8512)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_internal", file: !3, line: 314, size: 20800, elements: !4986)
!4986 = !{!4987, !5471, !5627, !5629, !5631, !5635, !5639, !5640, !5644, !5648, !5649, !5653}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !4985, file: !3, line: 315, baseType: !4988, size: 2624)
!4988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !4989, line: 16, size: 2624, elements: !4990)
!4989 = !DIFile(filename: "./include/scsi/scsi_transport.h", directory: "/home/lizy2001/genbc/linux")
!4990 = !{!4991, !5040, !5041, !5042, !5464, !5465, !5466, !5467, !5468, !5469, !5470}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "host_attrs", scope: !4988, file: !4989, line: 18, baseType: !4992, size: 768)
!4992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transport_container", file: !4993, line: 56, size: 768, elements: !4994)
!4993 = !DIFile(filename: "./include/linux/transport_class.h", directory: "/home/lizy2001/genbc/linux")
!4994 = !{!4995, !5039}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !4992, file: !4993, line: 57, baseType: !4996, size: 704)
!4996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_container", file: !4997, line: 16, size: 704, elements: !4998)
!4997 = !DIFile(filename: "./include/linux/attribute_container.h", directory: "/home/lizy2001/genbc/linux")
!4998 = !{!4999, !5000, !5017, !5018, !5019, !5033, !5038}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4996, file: !4997, line: 17, baseType: !305, size: 128)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "containers", scope: !4996, file: !4997, line: 18, baseType: !5001, size: 256, align: 64, offset: 128)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist", file: !5002, line: 18, size: 256, align: 64, elements: !5003)
!5002 = !DIFile(filename: "./include/linux/klist.h", directory: "/home/lizy2001/genbc/linux")
!5003 = !{!5004, !5005, !5006, !5016}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "k_lock", scope: !5001, file: !5002, line: 19, baseType: !329)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "k_list", scope: !5001, file: !5002, line: 20, baseType: !305, size: 128)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5001, file: !5002, line: 21, baseType: !5007, size: 64, offset: 128)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{null, !5010}
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_node", file: !5002, line: 37, size: 256, elements: !5012)
!5012 = !{!5013, !5014, !5015}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "n_klist", scope: !5011, file: !5002, line: 38, baseType: !280, size: 64)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "n_node", scope: !5011, file: !5002, line: 39, baseType: !305, size: 128, offset: 64)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "n_ref", scope: !5011, file: !5002, line: 40, baseType: !2332, size: 32, offset: 192)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5001, file: !5002, line: 22, baseType: !5007, size: 64, offset: 192)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4996, file: !4997, line: 19, baseType: !4935, size: 64, offset: 384)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !4996, file: !4997, line: 20, baseType: !424, size: 64, offset: 448)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4996, file: !4997, line: 21, baseType: !5020, size: 64, offset: 512)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !47, line: 99, size: 256, elements: !5023)
!5023 = !{!5024, !5025, !5029}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5022, file: !47, line: 100, baseType: !406, size: 128)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5022, file: !47, line: 101, baseType: !5026, size: 64, offset: 128)
!5026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 64)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!401, !2400, !5021, !278}
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5022, file: !47, line: 103, baseType: !5030, size: 64, offset: 192)
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!401, !2400, !5021, !318, !416}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4996, file: !4997, line: 22, baseType: !5034, size: 64, offset: 576)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5035, size: 64)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!355, !5037, !2400}
!5037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4996, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4996, file: !4997, line: 24, baseType: !419, size: 64, offset: 640)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !4992, file: !4993, line: 58, baseType: !424, size: 64, offset: 704)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "target_attrs", scope: !4988, file: !4989, line: 19, baseType: !4992, size: 768, offset: 768)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "device_attrs", scope: !4988, file: !4989, line: 20, baseType: !4992, size: 768, offset: 1536)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "user_scan", scope: !4988, file: !4989, line: 25, baseType: !5043, size: 64, offset: 2304)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!355, !5046, !5463, !5463, !288}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !5048)
!5048 = !{!5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059, !5410, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !5047, file: !154, line: 533, baseType: !305, size: 128)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !5047, file: !154, line: 534, baseType: !305, size: 128, offset: 128)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !5047, file: !154, line: 536, baseType: !305, size: 128, offset: 256)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !5047, file: !154, line: 538, baseType: !329, offset: 384)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !5047, file: !154, line: 539, baseType: !1362, size: 64, offset: 384)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !5047, file: !154, line: 541, baseType: !813, size: 192, offset: 448)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !5047, file: !154, line: 543, baseType: !305, size: 128, offset: 640)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !5047, file: !154, line: 544, baseType: !1508, size: 64, offset: 768)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5047, file: !154, line: 545, baseType: !1779, size: 64, offset: 832)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !5047, file: !154, line: 547, baseType: !1066, size: 128, offset: 896)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !5047, file: !154, line: 548, baseType: !5060, size: 64, offset: 1024)
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 64)
!5061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !5062)
!5062 = !{!5063, !5064, !5065, !5069, !5222, !5306, !5307, !5308, !5312, !5316, !5317, !5318, !5319, !5320, !5324, !5325, !5329, !5333, !5337, !5341, !5345, !5349, !5353, !5357, !5361, !5362, !5366, !5370, !5374, !5378, !5379, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5409}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5061, file: !154, line: 33, baseType: !720, size: 64)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5061, file: !154, line: 34, baseType: !318, size: 64, offset: 64)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5061, file: !154, line: 43, baseType: !5066, size: 64, offset: 128)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 64)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!318, !5046}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5061, file: !154, line: 50, baseType: !5070, size: 64, offset: 192)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!355, !5073, !7, !280}
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64)
!5074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !5075)
!5075 = !{!5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5105, !5106, !5107, !5108, !5116, !5117, !5118, !5119, !5120, !5144, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5210, !5211, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221}
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5074, file: !128, line: 102, baseType: !5046, size: 64)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5074, file: !128, line: 103, baseType: !2480, size: 64, offset: 64)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5074, file: !128, line: 106, baseType: !305, size: 128, offset: 128)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5074, file: !128, line: 107, baseType: !305, size: 128, offset: 256)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5074, file: !128, line: 109, baseType: !886, size: 32, offset: 384)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5074, file: !128, line: 110, baseType: !886, size: 32, offset: 416)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5074, file: !128, line: 112, baseType: !886, size: 32, offset: 448)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5074, file: !128, line: 113, baseType: !329, offset: 480)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5074, file: !128, line: 114, baseType: !305, size: 128, offset: 512)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5074, file: !128, line: 115, baseType: !411, size: 16, offset: 640)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5074, file: !128, line: 116, baseType: !411, size: 16, offset: 656)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5074, file: !128, line: 117, baseType: !411, size: 16, offset: 672)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5074, file: !128, line: 118, baseType: !411, size: 16, offset: 688)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5074, file: !128, line: 119, baseType: !419, size: 64, offset: 704)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5074, file: !128, line: 120, baseType: !419, size: 64, offset: 768)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5074, file: !128, line: 123, baseType: !419, size: 64, offset: 832)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5074, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5074, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5074, file: !128, line: 126, baseType: !288, size: 64, offset: 960)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5074, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5074, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5074, file: !128, line: 131, baseType: !280, size: 64, offset: 1088)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5074, file: !128, line: 132, baseType: !303, size: 8, offset: 1152)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5074, file: !128, line: 133, baseType: !279, size: 8, offset: 1160)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5074, file: !128, line: 134, baseType: !279, size: 8, offset: 1168)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5074, file: !128, line: 135, baseType: !813, size: 192, offset: 1216)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5074, file: !128, line: 136, baseType: !303, size: 8, offset: 1408)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5074, file: !128, line: 137, baseType: !5104, size: 64, offset: 1472)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5074, file: !128, line: 138, baseType: !318, size: 64, offset: 1536)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5074, file: !128, line: 139, baseType: !318, size: 64, offset: 1600)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5074, file: !128, line: 140, baseType: !318, size: 64, offset: 1664)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5074, file: !128, line: 143, baseType: !5109, size: 64, offset: 1728)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5110, size: 64)
!5110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !5111)
!5111 = !{!5112, !5113, !5114}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5110, file: !128, line: 96, baseType: !460, size: 128, align: 64)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5110, file: !128, line: 97, baseType: !355, size: 32, offset: 128)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5110, file: !128, line: 98, baseType: !5115, offset: 160)
!5115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, elements: !2286)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5074, file: !128, line: 144, baseType: !5109, size: 64, offset: 1792)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5074, file: !128, line: 145, baseType: !5109, size: 64, offset: 1856)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5074, file: !128, line: 146, baseType: !5109, size: 64, offset: 1920)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5074, file: !128, line: 147, baseType: !303, size: 8, offset: 1984)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5074, file: !128, line: 148, baseType: !5121, size: 64, offset: 2048)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !5123)
!5123 = !{!5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !5122, file: !128, line: 290, baseType: !5073, size: 64)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5122, file: !128, line: 291, baseType: !305, size: 128, offset: 64)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5122, file: !128, line: 292, baseType: !305, size: 128, offset: 192)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5122, file: !128, line: 293, baseType: !311, size: 5568, offset: 320)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !5122, file: !128, line: 294, baseType: !2332, size: 32, offset: 5888)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5122, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5122, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !5122, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !5122, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !5122, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !5122, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !5122, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !5122, file: !128, line: 310, baseType: !886, size: 32, offset: 6016)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !5122, file: !128, line: 311, baseType: !886, size: 32, offset: 6048)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5122, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !5122, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5122, file: !128, line: 321, baseType: !279, size: 8, offset: 6144)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5122, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5122, file: !128, line: 323, baseType: !280, size: 64, offset: 6208)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !5122, file: !128, line: 324, baseType: !3582, offset: 6272)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5074, file: !128, line: 150, baseType: !5145, size: 64, offset: 2112)
!5145 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !289)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5074, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5074, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5074, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5074, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5074, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5074, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5074, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5074, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5074, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5074, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5074, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5074, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5074, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5074, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5074, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5074, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5074, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5074, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5074, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5074, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5074, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5074, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5074, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5074, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5074, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5074, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5074, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5074, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5074, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5074, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5074, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5074, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5074, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5074, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5074, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5074, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5074, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5074, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5074, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5074, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5074, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5074, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5074, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5074, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5074, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5074, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5074, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5074, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5074, file: !128, line: 208, baseType: !577, size: 8, offset: 2256)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5074, file: !128, line: 210, baseType: !886, size: 32, offset: 2272)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5074, file: !128, line: 212, baseType: !1655, size: 64, offset: 2304)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5074, file: !128, line: 213, baseType: !1655, size: 64, offset: 2368)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5074, file: !128, line: 214, baseType: !305, size: 128, offset: 2432)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5074, file: !128, line: 215, baseType: !2270, size: 256, offset: 2560)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5074, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5074, file: !128, line: 220, baseType: !886, size: 32, offset: 2848)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5074, file: !128, line: 221, baseType: !886, size: 32, offset: 2880)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5074, file: !128, line: 222, baseType: !886, size: 32, offset: 2912)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5074, file: !128, line: 224, baseType: !311, size: 5568, offset: 2944)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5074, file: !128, line: 225, baseType: !311, size: 5568, offset: 8512)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5074, file: !128, line: 227, baseType: !5207, size: 256, offset: 14080)
!5207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !238, line: 168, size: 256, elements: !5208)
!5208 = !{!5209}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5207, file: !238, line: 169, baseType: !2270, size: 256)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5074, file: !128, line: 228, baseType: !2270, size: 256, offset: 14336)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5074, file: !128, line: 230, baseType: !5212, size: 64, offset: 14592)
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5213, size: 64)
!5213 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5074, file: !128, line: 231, baseType: !280, size: 64, offset: 14656)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5074, file: !128, line: 233, baseType: !416, size: 64, offset: 14720)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5074, file: !128, line: 234, baseType: !280, size: 64, offset: 14784)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5074, file: !128, line: 236, baseType: !303, size: 8, offset: 14848)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5074, file: !128, line: 237, baseType: !813, size: 192, offset: 14912)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5074, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5074, file: !128, line: 239, baseType: !1508, size: 64, offset: 15168)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5074, file: !128, line: 240, baseType: !3582, offset: 15232)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5061, file: !154, line: 65, baseType: !5223, size: 64, offset: 256)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!355, !5046, !5226}
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 64)
!5227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !5228, line: 68, size: 3136, elements: !5229)
!5228 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!5229 = !{!5230, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5276, !5278, !5279, !5280, !5281, !5282, !5286, !5300, !5301, !5302, !5303, !5304, !5305}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !5227, file: !5228, line: 69, baseType: !5231, size: 448)
!5231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !5232, line: 9, size: 448, elements: !5233)
!5232 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!5233 = !{!5234, !5236, !5237, !5238, !5239, !5240, !5241, !5242}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !5231, file: !5232, line: 10, baseType: !5235, size: 128)
!5235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 128, elements: !1988)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5231, file: !5232, line: 11, baseType: !5104, size: 64, offset: 128)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5231, file: !5232, line: 12, baseType: !411, size: 16, offset: 192)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5231, file: !5232, line: 13, baseType: !355, size: 32, offset: 224)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5231, file: !5232, line: 14, baseType: !7, size: 32, offset: 256)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !5231, file: !5232, line: 15, baseType: !7, size: 32, offset: 288)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5231, file: !5232, line: 16, baseType: !355, size: 32, offset: 320)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !5231, file: !5232, line: 17, baseType: !280, size: 64, offset: 384)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5227, file: !5228, line: 70, baseType: !5073, size: 64, offset: 448)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !5227, file: !5228, line: 71, baseType: !305, size: 128, offset: 512)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !5227, file: !5228, line: 72, baseType: !2378, size: 704, offset: 640)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5227, file: !5228, line: 74, baseType: !460, size: 128, align: 64, offset: 1344)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !5227, file: !5228, line: 76, baseType: !355, size: 32, offset: 1472)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !5227, file: !5228, line: 83, baseType: !419, size: 64, offset: 1536)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5227, file: !5228, line: 85, baseType: !355, size: 32, offset: 1600)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !5227, file: !5228, line: 86, baseType: !355, size: 32, offset: 1632)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !5227, file: !5228, line: 88, baseType: !303, size: 8, offset: 1664)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !5227, file: !5228, line: 89, baseType: !303, size: 8, offset: 1672)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !5227, file: !5228, line: 90, baseType: !303, size: 8, offset: 1680)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5227, file: !5228, line: 92, baseType: !411, size: 16, offset: 1696)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !5227, file: !5228, line: 93, baseType: !146, size: 32, offset: 1728)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !5227, file: !5228, line: 96, baseType: !5104, size: 64, offset: 1792)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !5227, file: !5228, line: 100, baseType: !5258, size: 192, offset: 1856)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !5228, line: 35, size: 192, elements: !5259)
!5259 = !{!5260, !5275}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5258, file: !5228, line: 36, baseType: !5261, size: 128)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5262, line: 42, size: 128, elements: !5263)
!5262 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5263 = !{!5264, !5273, !5274}
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5261, file: !5262, line: 43, baseType: !5265, size: 64)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5262, line: 11, size: 256, elements: !5267)
!5267 = !{!5268, !5269, !5270, !5271, !5272}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5266, file: !5262, line: 12, baseType: !419, size: 64)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5266, file: !5262, line: 13, baseType: !7, size: 32, offset: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5266, file: !5262, line: 14, baseType: !7, size: 32, offset: 96)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5266, file: !5262, line: 15, baseType: !1217, size: 64, offset: 128)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5266, file: !5262, line: 17, baseType: !7, size: 32, offset: 192)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5261, file: !5262, line: 44, baseType: !7, size: 32, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5261, file: !5262, line: 45, baseType: !7, size: 32, offset: 96)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5258, file: !5228, line: 37, baseType: !7, size: 32, offset: 128)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !5227, file: !5228, line: 101, baseType: !5277, size: 64, offset: 2048)
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !5227, file: !5228, line: 103, baseType: !7, size: 32, offset: 2112)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !5227, file: !5228, line: 106, baseType: !7, size: 32, offset: 2144)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5227, file: !5228, line: 112, baseType: !2484, size: 64, offset: 2176)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !5227, file: !5228, line: 115, baseType: !5104, size: 64, offset: 2240)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !5227, file: !5228, line: 123, baseType: !5283, size: 64, offset: 2304)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5284, size: 64)
!5284 = !DISubroutineType(types: !5285)
!5285 = !{null, !5226}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !5227, file: !5228, line: 129, baseType: !5287, size: 512, offset: 2368)
!5287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !5228, line: 41, size: 512, elements: !5288)
!5288 = !{!5289, !5290, !5291, !5292, !5293, !5294, !5296, !5297, !5298, !5299}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5287, file: !5228, line: 42, baseType: !278, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5287, file: !5228, line: 43, baseType: !355, size: 32, offset: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5287, file: !5228, line: 44, baseType: !5265, size: 64, offset: 128)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5287, file: !5228, line: 45, baseType: !355, size: 32, offset: 192)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5287, file: !5228, line: 47, baseType: !1217, size: 64, offset: 256)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5287, file: !5228, line: 49, baseType: !5295, size: 32, offset: 320)
!5295 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !355)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5287, file: !5228, line: 50, baseType: !5295, size: 32, offset: 352)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5287, file: !5228, line: 51, baseType: !5295, size: 32, offset: 384)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5287, file: !5228, line: 52, baseType: !5295, size: 32, offset: 416)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5287, file: !5228, line: 53, baseType: !5295, size: 32, offset: 448)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !5227, file: !5228, line: 131, baseType: !5104, size: 64, offset: 2880)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5227, file: !5228, line: 139, baseType: !355, size: 32, offset: 2944)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5227, file: !5228, line: 140, baseType: !355, size: 32, offset: 2976)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5227, file: !5228, line: 141, baseType: !419, size: 64, offset: 3008)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5227, file: !5228, line: 143, baseType: !303, size: 8, offset: 3072)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !5227, file: !5228, line: 144, baseType: !7, size: 32, offset: 3104)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5061, file: !154, line: 66, baseType: !5223, size: 64, offset: 320)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5061, file: !154, line: 102, baseType: !5223, size: 64, offset: 384)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5061, file: !154, line: 112, baseType: !5309, size: 64, offset: 448)
!5309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5310, size: 64)
!5310 = !DISubroutineType(types: !5311)
!5311 = !{null, !5046, !998}
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5061, file: !154, line: 132, baseType: !5313, size: 64, offset: 512)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!355, !5226}
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5061, file: !154, line: 133, baseType: !5313, size: 64, offset: 576)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5061, file: !154, line: 134, baseType: !5313, size: 64, offset: 640)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5061, file: !154, line: 135, baseType: !5313, size: 64, offset: 704)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5061, file: !154, line: 136, baseType: !5313, size: 64, offset: 768)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5061, file: !154, line: 164, baseType: !5321, size: 64, offset: 832)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!355, !5073}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5061, file: !154, line: 195, baseType: !5321, size: 64, offset: 896)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5061, file: !154, line: 206, baseType: !5326, size: 64, offset: 960)
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 64)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{null, !5073}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5061, file: !154, line: 220, baseType: !5330, size: 64, offset: 1024)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 64)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{!355, !5121}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5061, file: !154, line: 230, baseType: !5334, size: 64, offset: 1088)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{null, !5121}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5061, file: !154, line: 241, baseType: !5338, size: 64, offset: 1152)
!5338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5339, size: 64)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{!355, !5046, !419}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5061, file: !154, line: 250, baseType: !5342, size: 64, offset: 1216)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5343, size: 64)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{null, !5046}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5061, file: !154, line: 263, baseType: !5346, size: 64, offset: 1280)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!355, !5073, !355}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5061, file: !154, line: 271, baseType: !5350, size: 64, offset: 1344)
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!355, !5046}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5061, file: !154, line: 278, baseType: !5354, size: 64, offset: 1408)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!577, !2484}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5061, file: !154, line: 288, baseType: !5358, size: 64, offset: 1472)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 64)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!355, !5073, !2303, !969, !795}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5061, file: !154, line: 297, baseType: !5326, size: 64, offset: 1536)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5061, file: !154, line: 306, baseType: !5363, size: 64, offset: 1600)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!355, !801, !5046}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5061, file: !154, line: 307, baseType: !5367, size: 64, offset: 1664)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!355, !5046, !278, !355}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5061, file: !154, line: 316, baseType: !5371, size: 64, offset: 1728)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!80, !5226}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5061, file: !154, line: 326, baseType: !5375, size: 64, offset: 1792)
!5375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5376, size: 64)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!355, !5046, !355}
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5061, file: !154, line: 334, baseType: !318, size: 64, offset: 1856)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5061, file: !154, line: 340, baseType: !5380, size: 64, offset: 1920)
!5380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5381, size: 64)
!5381 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !154, line: 340, flags: DIFlagFwdDecl)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5061, file: !154, line: 347, baseType: !355, size: 32, offset: 1984)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5061, file: !154, line: 356, baseType: !355, size: 32, offset: 2016)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5061, file: !154, line: 362, baseType: !411, size: 16, offset: 2048)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5061, file: !154, line: 363, baseType: !411, size: 16, offset: 2064)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5061, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5061, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5061, file: !154, line: 379, baseType: !419, size: 64, offset: 2176)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5061, file: !154, line: 381, baseType: !419, size: 64, offset: 2240)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5061, file: !154, line: 400, baseType: !1497, size: 16, offset: 2304)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5061, file: !154, line: 406, baseType: !303, size: 8, offset: 2320)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5061, file: !154, line: 409, baseType: !355, size: 32, offset: 2336)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5061, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5061, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5061, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5061, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5061, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5061, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5061, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5061, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5061, file: !154, line: 459, baseType: !5020, size: 64, offset: 2432)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5061, file: !154, line: 464, baseType: !5020, size: 64, offset: 2496)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5061, file: !154, line: 470, baseType: !423, size: 64, offset: 2560)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5061, file: !154, line: 479, baseType: !288, size: 64, offset: 2624)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5061, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5061, file: !154, line: 485, baseType: !5407, size: 64, offset: 2752)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 64)
!5408 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5061, file: !154, line: 488, baseType: !355, size: 32, offset: 2816)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !5047, file: !154, line: 549, baseType: !5411, size: 64, offset: 1088)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5047, file: !154, line: 552, baseType: !2866, size: 2304, offset: 1152)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !5047, file: !154, line: 554, baseType: !886, size: 32, offset: 3456)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !5047, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !5047, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !5047, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !5047, file: !154, line: 563, baseType: !355, size: 32, offset: 3584)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !5047, file: !154, line: 564, baseType: !419, size: 64, offset: 3648)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !5047, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !5047, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !5047, file: !154, line: 575, baseType: !288, size: 64, offset: 3776)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5047, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !5047, file: !154, line: 593, baseType: !411, size: 16, offset: 3872)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5047, file: !154, line: 595, baseType: !355, size: 32, offset: 3904)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5047, file: !154, line: 596, baseType: !355, size: 32, offset: 3936)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5047, file: !154, line: 597, baseType: !1497, size: 16, offset: 3968)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5047, file: !154, line: 598, baseType: !411, size: 16, offset: 3984)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5047, file: !154, line: 599, baseType: !411, size: 16, offset: 4000)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5047, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5047, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5047, file: !154, line: 602, baseType: !419, size: 64, offset: 4096)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5047, file: !154, line: 603, baseType: !419, size: 64, offset: 4160)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5047, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !5047, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5047, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !5047, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !5047, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !5047, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !5047, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !5047, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5047, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5047, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !5047, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !5047, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5047, file: !154, line: 653, baseType: !5446, size: 160, offset: 4272)
!5446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 160, elements: !3455)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5047, file: !154, line: 654, baseType: !2282, size: 64, offset: 4480)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !5047, file: !154, line: 659, baseType: !2282, size: 64, offset: 4544)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5047, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !5047, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !5047, file: !154, line: 668, baseType: !303, size: 8, offset: 4672)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5047, file: !154, line: 671, baseType: !419, size: 64, offset: 4736)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !5047, file: !154, line: 672, baseType: !419, size: 64, offset: 4800)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !5047, file: !154, line: 673, baseType: !303, size: 8, offset: 4864)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !5047, file: !154, line: 674, baseType: !303, size: 8, offset: 4872)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5047, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !5047, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !5047, file: !154, line: 681, baseType: !311, size: 5568, offset: 4992)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !5047, file: !154, line: 681, baseType: !311, size: 5568, offset: 10560)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !5047, file: !154, line: 687, baseType: !280, size: 64, offset: 16128)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !5047, file: !154, line: 693, baseType: !2400, size: 64, offset: 16192)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5047, file: !154, line: 700, baseType: !3582, align: 64, offset: 16256)
!5463 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !272, line: 87, baseType: !7)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "device_size", scope: !4988, file: !4989, line: 30, baseType: !355, size: 32, offset: 2368)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "device_private_offset", scope: !4988, file: !4989, line: 31, baseType: !355, size: 32, offset: 2400)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "target_size", scope: !4988, file: !4989, line: 32, baseType: !355, size: 32, offset: 2432)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "target_private_offset", scope: !4988, file: !4989, line: 33, baseType: !355, size: 32, offset: 2464)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "host_size", scope: !4988, file: !4989, line: 34, baseType: !355, size: 32, offset: 2496)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "create_work_queue", scope: !4988, file: !4989, line: 40, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "eh_strategy_handler", scope: !4988, file: !4989, line: 45, baseType: !5342, size: 64, offset: 2560)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4985, file: !3, line: 316, baseType: !5472, size: 64, offset: 2624)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_function_template", file: !164, line: 621, size: 1664, elements: !5474)
!5474 = !{!5475, !5479, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5530, !5531, !5532, !5533, !5534, !5557, !5561, !5562, !5566, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "get_rport_dev_loss_tmo", scope: !5473, file: !164, line: 622, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{null, !281}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "set_rport_dev_loss_tmo", scope: !5473, file: !164, line: 623, baseType: !5480, size: 64, offset: 64)
!5480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5481, size: 64)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{null, !281, !274}
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "get_starget_node_name", scope: !5473, file: !164, line: 625, baseType: !5334, size: 64, offset: 128)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "get_starget_port_name", scope: !5473, file: !164, line: 626, baseType: !5334, size: 64, offset: 192)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "get_starget_port_id", scope: !5473, file: !164, line: 627, baseType: !5334, size: 64, offset: 256)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_port_id", scope: !5473, file: !164, line: 629, baseType: !5342, size: 64, offset: 320)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_port_type", scope: !5473, file: !164, line: 630, baseType: !5342, size: 64, offset: 384)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_port_state", scope: !5473, file: !164, line: 631, baseType: !5342, size: 64, offset: 448)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_active_fc4s", scope: !5473, file: !164, line: 632, baseType: !5342, size: 64, offset: 512)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_speed", scope: !5473, file: !164, line: 633, baseType: !5342, size: 64, offset: 576)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_fabric_name", scope: !5473, file: !164, line: 634, baseType: !5342, size: 64, offset: 640)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "get_host_symbolic_name", scope: !5473, file: !164, line: 635, baseType: !5342, size: 64, offset: 704)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "set_host_system_hostname", scope: !5473, file: !164, line: 636, baseType: !5342, size: 64, offset: 768)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "get_fc_host_stats", scope: !5473, file: !164, line: 638, baseType: !5495, size: 64, offset: 832)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!5498, !5046}
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_host_statistics", file: !164, line: 404, size: 1856, elements: !5500)
!5500 = !{!5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "seconds_since_last_reset", scope: !5499, file: !164, line: 406, baseType: !288, size: 64)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "tx_frames", scope: !5499, file: !164, line: 407, baseType: !288, size: 64, offset: 64)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "tx_words", scope: !5499, file: !164, line: 408, baseType: !288, size: 64, offset: 128)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frames", scope: !5499, file: !164, line: 409, baseType: !288, size: 64, offset: 192)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "rx_words", scope: !5499, file: !164, line: 410, baseType: !288, size: 64, offset: 256)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "lip_count", scope: !5499, file: !164, line: 411, baseType: !288, size: 64, offset: 320)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "nos_count", scope: !5499, file: !164, line: 412, baseType: !288, size: 64, offset: 384)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "error_frames", scope: !5499, file: !164, line: 413, baseType: !288, size: 64, offset: 448)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "dumped_frames", scope: !5499, file: !164, line: 414, baseType: !288, size: 64, offset: 512)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure_count", scope: !5499, file: !164, line: 415, baseType: !288, size: 64, offset: 576)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "loss_of_sync_count", scope: !5499, file: !164, line: 416, baseType: !288, size: 64, offset: 640)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "loss_of_signal_count", scope: !5499, file: !164, line: 417, baseType: !288, size: 64, offset: 704)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "prim_seq_protocol_err_count", scope: !5499, file: !164, line: 418, baseType: !288, size: 64, offset: 768)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_tx_word_count", scope: !5499, file: !164, line: 419, baseType: !288, size: 64, offset: 832)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_crc_count", scope: !5499, file: !164, line: 420, baseType: !288, size: 64, offset: 896)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_input_requests", scope: !5499, file: !164, line: 423, baseType: !288, size: 64, offset: 960)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_output_requests", scope: !5499, file: !164, line: 424, baseType: !288, size: 64, offset: 1024)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_control_requests", scope: !5499, file: !164, line: 425, baseType: !288, size: 64, offset: 1088)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_input_megabytes", scope: !5499, file: !164, line: 426, baseType: !288, size: 64, offset: 1152)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_output_megabytes", scope: !5499, file: !164, line: 427, baseType: !288, size: 64, offset: 1216)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_packet_alloc_failures", scope: !5499, file: !164, line: 428, baseType: !288, size: 64, offset: 1280)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_packet_aborts", scope: !5499, file: !164, line: 429, baseType: !288, size: 64, offset: 1344)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "fcp_frame_alloc_failures", scope: !5499, file: !164, line: 430, baseType: !288, size: 64, offset: 1408)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "fc_no_free_exch", scope: !5499, file: !164, line: 433, baseType: !288, size: 64, offset: 1472)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "fc_no_free_exch_xid", scope: !5499, file: !164, line: 434, baseType: !288, size: 64, offset: 1536)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "fc_xid_not_found", scope: !5499, file: !164, line: 435, baseType: !288, size: 64, offset: 1600)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "fc_xid_busy", scope: !5499, file: !164, line: 436, baseType: !288, size: 64, offset: 1664)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "fc_seq_not_found", scope: !5499, file: !164, line: 437, baseType: !288, size: 64, offset: 1728)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "fc_non_bls_resp", scope: !5499, file: !164, line: 438, baseType: !288, size: 64, offset: 1792)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fc_host_stats", scope: !5473, file: !164, line: 639, baseType: !5342, size: 64, offset: 896)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "issue_fc_host_lip", scope: !5473, file: !164, line: 641, baseType: !5350, size: 64, offset: 960)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "dev_loss_tmo_callbk", scope: !5473, file: !164, line: 643, baseType: !5476, size: 64, offset: 1024)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "terminate_rport_io", scope: !5473, file: !164, line: 644, baseType: !5476, size: 64, offset: 1088)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "set_vport_symbolic_name", scope: !5473, file: !164, line: 646, baseType: !5535, size: 64, offset: 1152)
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{null, !5538}
!5538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5539, size: 64)
!5539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_vport", file: !164, line: 218, size: 7040, align: 64, elements: !5540)
!5540 = !{!5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "vport_state", scope: !5539, file: !164, line: 224, baseType: !192, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "vport_last_state", scope: !5539, file: !164, line: 225, baseType: !192, size: 32, offset: 32)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !5539, file: !164, line: 226, baseType: !288, size: 64, offset: 64)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "port_name", scope: !5539, file: !164, line: 227, baseType: !288, size: 64, offset: 128)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "roles", scope: !5539, file: !164, line: 228, baseType: !274, size: 32, offset: 192)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "vport_id", scope: !5539, file: !164, line: 229, baseType: !274, size: 32, offset: 224)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "vport_type", scope: !5539, file: !164, line: 230, baseType: !204, size: 32, offset: 256)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_name", scope: !5539, file: !164, line: 231, baseType: !2402, size: 512, offset: 288)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "dd_data", scope: !5539, file: !164, line: 234, baseType: !280, size: 64, offset: 832)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "shost", scope: !5539, file: !164, line: 237, baseType: !5046, size: 64, offset: 896)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5539, file: !164, line: 238, baseType: !7, size: 32, offset: 960)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5539, file: !164, line: 239, baseType: !274, size: 32, offset: 992)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5539, file: !164, line: 240, baseType: !301, size: 8, offset: 1024)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !5539, file: !164, line: 241, baseType: !305, size: 128, offset: 1088)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5539, file: !164, line: 242, baseType: !311, size: 5568, offset: 1216)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "vport_delete_work", scope: !5539, file: !164, line: 243, baseType: !2270, size: 256, offset: 6784)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "vport_create", scope: !5473, file: !164, line: 647, baseType: !5558, size: 64, offset: 1216)
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5559, size: 64)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{!355, !5538, !577}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "vport_disable", scope: !5473, file: !164, line: 648, baseType: !5558, size: 64, offset: 1280)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "vport_delete", scope: !5473, file: !164, line: 649, baseType: !5563, size: 64, offset: 1344)
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{!355, !5538}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_request", scope: !5473, file: !164, line: 652, baseType: !5567, size: 64, offset: 1408)
!5567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5568, size: 64)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{!355, !5570}
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_job", file: !5572, line: 29, size: 832, elements: !5573)
!5572 = !DIFile(filename: "./include/linux/bsg-lib.h", directory: "/home/lizy2001/genbc/linux")
!5573 = !{!5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5587, !5588, !5589, !5590, !5591, !5592}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5571, file: !5572, line: 30, baseType: !2400, size: 64)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !5571, file: !5572, line: 32, baseType: !2332, size: 32, offset: 64)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5571, file: !5572, line: 34, baseType: !7, size: 32, offset: 96)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5571, file: !5572, line: 37, baseType: !280, size: 64, offset: 128)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !5571, file: !5572, line: 38, baseType: !280, size: 64, offset: 192)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5571, file: !5572, line: 40, baseType: !7, size: 32, offset: 256)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "reply_len", scope: !5571, file: !5572, line: 41, baseType: !7, size: 32, offset: 288)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "request_payload", scope: !5571, file: !5572, line: 52, baseType: !5582, size: 128, offset: 320)
!5582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_buffer", file: !5572, line: 23, size: 128, elements: !5583)
!5583 = !{!5584, !5585, !5586}
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !5582, file: !5572, line: 24, baseType: !7, size: 32)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "sg_cnt", scope: !5582, file: !5572, line: 25, baseType: !355, size: 32, offset: 32)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !5582, file: !5572, line: 26, baseType: !5265, size: 64, offset: 64)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "reply_payload", scope: !5571, file: !5572, line: 53, baseType: !5582, size: 128, offset: 448)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5571, file: !5572, line: 55, baseType: !355, size: 32, offset: 576)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "reply_payload_rcv_len", scope: !5571, file: !5572, line: 56, baseType: !7, size: 32, offset: 608)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_rq", scope: !5571, file: !5572, line: 59, baseType: !2484, size: 64, offset: 640)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_bio", scope: !5571, file: !5572, line: 60, baseType: !2196, size: 64, offset: 704)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "dd_data", scope: !5571, file: !5572, line: 62, baseType: !280, size: 64, offset: 768)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_timeout", scope: !5473, file: !164, line: 653, baseType: !5567, size: 64, offset: 1472)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "dd_fcrport_size", scope: !5473, file: !164, line: 656, baseType: !274, size: 32, offset: 1536)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "dd_fcvport_size", scope: !5473, file: !164, line: 657, baseType: !274, size: 32, offset: 1568)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "dd_bsg_size", scope: !5473, file: !164, line: 658, baseType: !274, size: 32, offset: 1600)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "show_rport_maxframe_size", scope: !5473, file: !164, line: 668, baseType: !419, size: 1, offset: 1632, flags: DIFlagBitField, extraData: i64 1632)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "show_rport_supported_classes", scope: !5473, file: !164, line: 669, baseType: !419, size: 1, offset: 1633, flags: DIFlagBitField, extraData: i64 1632)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "show_rport_dev_loss_tmo", scope: !5473, file: !164, line: 670, baseType: !419, size: 1, offset: 1634, flags: DIFlagBitField, extraData: i64 1632)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "show_starget_node_name", scope: !5473, file: !164, line: 677, baseType: !419, size: 1, offset: 1635, flags: DIFlagBitField, extraData: i64 1632)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "show_starget_port_name", scope: !5473, file: !164, line: 678, baseType: !419, size: 1, offset: 1636, flags: DIFlagBitField, extraData: i64 1632)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "show_starget_port_id", scope: !5473, file: !164, line: 679, baseType: !419, size: 1, offset: 1637, flags: DIFlagBitField, extraData: i64 1632)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_node_name", scope: !5473, file: !164, line: 682, baseType: !419, size: 1, offset: 1638, flags: DIFlagBitField, extraData: i64 1632)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_port_name", scope: !5473, file: !164, line: 683, baseType: !419, size: 1, offset: 1639, flags: DIFlagBitField, extraData: i64 1632)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_permanent_port_name", scope: !5473, file: !164, line: 684, baseType: !419, size: 1, offset: 1640, flags: DIFlagBitField, extraData: i64 1632)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_supported_classes", scope: !5473, file: !164, line: 685, baseType: !419, size: 1, offset: 1641, flags: DIFlagBitField, extraData: i64 1632)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_supported_fc4s", scope: !5473, file: !164, line: 686, baseType: !419, size: 1, offset: 1642, flags: DIFlagBitField, extraData: i64 1632)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_supported_speeds", scope: !5473, file: !164, line: 687, baseType: !419, size: 1, offset: 1643, flags: DIFlagBitField, extraData: i64 1632)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_maxframe_size", scope: !5473, file: !164, line: 688, baseType: !419, size: 1, offset: 1644, flags: DIFlagBitField, extraData: i64 1632)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_serial_number", scope: !5473, file: !164, line: 689, baseType: !419, size: 1, offset: 1645, flags: DIFlagBitField, extraData: i64 1632)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_manufacturer", scope: !5473, file: !164, line: 690, baseType: !419, size: 1, offset: 1646, flags: DIFlagBitField, extraData: i64 1632)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_model", scope: !5473, file: !164, line: 691, baseType: !419, size: 1, offset: 1647, flags: DIFlagBitField, extraData: i64 1632)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_model_description", scope: !5473, file: !164, line: 692, baseType: !419, size: 1, offset: 1648, flags: DIFlagBitField, extraData: i64 1632)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_hardware_version", scope: !5473, file: !164, line: 693, baseType: !419, size: 1, offset: 1649, flags: DIFlagBitField, extraData: i64 1632)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_driver_version", scope: !5473, file: !164, line: 694, baseType: !419, size: 1, offset: 1650, flags: DIFlagBitField, extraData: i64 1632)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_firmware_version", scope: !5473, file: !164, line: 695, baseType: !419, size: 1, offset: 1651, flags: DIFlagBitField, extraData: i64 1632)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_optionrom_version", scope: !5473, file: !164, line: 696, baseType: !419, size: 1, offset: 1652, flags: DIFlagBitField, extraData: i64 1632)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_port_id", scope: !5473, file: !164, line: 698, baseType: !419, size: 1, offset: 1653, flags: DIFlagBitField, extraData: i64 1632)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_port_type", scope: !5473, file: !164, line: 699, baseType: !419, size: 1, offset: 1654, flags: DIFlagBitField, extraData: i64 1632)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_port_state", scope: !5473, file: !164, line: 700, baseType: !419, size: 1, offset: 1655, flags: DIFlagBitField, extraData: i64 1632)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_active_fc4s", scope: !5473, file: !164, line: 701, baseType: !419, size: 1, offset: 1656, flags: DIFlagBitField, extraData: i64 1632)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_speed", scope: !5473, file: !164, line: 702, baseType: !419, size: 1, offset: 1657, flags: DIFlagBitField, extraData: i64 1632)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_fabric_name", scope: !5473, file: !164, line: 703, baseType: !419, size: 1, offset: 1658, flags: DIFlagBitField, extraData: i64 1632)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_symbolic_name", scope: !5473, file: !164, line: 704, baseType: !419, size: 1, offset: 1659, flags: DIFlagBitField, extraData: i64 1632)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "show_host_system_hostname", scope: !5473, file: !164, line: 705, baseType: !419, size: 1, offset: 1660, flags: DIFlagBitField, extraData: i64 1632)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "disable_target_scan", scope: !5473, file: !164, line: 707, baseType: !419, size: 1, offset: 1661, flags: DIFlagBitField, extraData: i64 1632)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "private_starget_attrs", scope: !4985, file: !3, line: 328, baseType: !5628, size: 768, offset: 2688)
!5628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5022, size: 768, elements: !371)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "starget_attrs", scope: !4985, file: !3, line: 330, baseType: !5630, size: 256, offset: 3456)
!5630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5021, size: 256, elements: !1453)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "private_host_attrs", scope: !4985, file: !3, line: 332, baseType: !5632, size: 7424, offset: 3712)
!5632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5022, size: 7424, elements: !5633)
!5633 = !{!5634}
!5634 = !DISubrange(count: 29)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "host_attrs", scope: !4985, file: !3, line: 333, baseType: !5636, size: 1920, offset: 11136)
!5636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5021, size: 1920, elements: !5637)
!5637 = !{!5638}
!5638 = !DISubrange(count: 30)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "rport_attr_cont", scope: !4985, file: !3, line: 335, baseType: !4992, size: 768, offset: 13056)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "private_rport_attrs", scope: !4985, file: !3, line: 336, baseType: !5641, size: 2560, offset: 13824)
!5641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5022, size: 2560, elements: !5642)
!5642 = !{!5643}
!5643 = !DISubrange(count: 10)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "rport_attrs", scope: !4985, file: !3, line: 337, baseType: !5645, size: 704, offset: 16384)
!5645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5021, size: 704, elements: !5646)
!5646 = !{!5647}
!5647 = !DISubrange(count: 11)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "vport_attr_cont", scope: !4985, file: !3, line: 339, baseType: !4992, size: 768, offset: 17088)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "private_vport_attrs", scope: !4985, file: !3, line: 340, baseType: !5650, size: 2304, offset: 17856)
!5650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5022, size: 2304, elements: !5651)
!5651 = !{!5652}
!5652 = !DISubrange(count: 9)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "vport_attrs", scope: !4985, file: !3, line: 341, baseType: !5654, size: 640, offset: 20160)
!5654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5021, size: 640, elements: !5642)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_host_attrs", file: !164, line: 490, size: 13696, elements: !5657)
!5657 = !{!5658, !5659, !5660, !5661, !5662, !5664, !5665, !5666, !5667, !5671, !5672, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5702}
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !5656, file: !164, line: 492, baseType: !288, size: 64)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "port_name", scope: !5656, file: !164, line: 493, baseType: !288, size: 64, offset: 64)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "permanent_port_name", scope: !5656, file: !164, line: 494, baseType: !288, size: 64, offset: 128)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "supported_classes", scope: !5656, file: !164, line: 495, baseType: !274, size: 32, offset: 192)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "supported_fc4s", scope: !5656, file: !164, line: 496, baseType: !5663, size: 256, offset: 224)
!5663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 256, elements: !2211)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "supported_speeds", scope: !5656, file: !164, line: 497, baseType: !274, size: 32, offset: 480)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "maxframe_size", scope: !5656, file: !164, line: 498, baseType: !274, size: 32, offset: 512)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "max_npiv_vports", scope: !5656, file: !164, line: 499, baseType: !998, size: 16, offset: 544)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number", scope: !5656, file: !164, line: 500, baseType: !5668, size: 640, offset: 560)
!5668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 640, elements: !5669)
!5669 = !{!5670}
!5670 = !DISubrange(count: 80)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5656, file: !164, line: 501, baseType: !5668, size: 640, offset: 1200)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5656, file: !164, line: 502, baseType: !5673, size: 2048, offset: 1840)
!5673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 2048, elements: !5674)
!5674 = !{!5675}
!5675 = !DISubrange(count: 256)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "model_description", scope: !5656, file: !164, line: 503, baseType: !5673, size: 2048, offset: 3888)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_version", scope: !5656, file: !164, line: 504, baseType: !2402, size: 512, offset: 5936)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "driver_version", scope: !5656, file: !164, line: 505, baseType: !2402, size: 512, offset: 6448)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_version", scope: !5656, file: !164, line: 506, baseType: !2402, size: 512, offset: 6960)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "optionrom_version", scope: !5656, file: !164, line: 507, baseType: !2402, size: 512, offset: 7472)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !5656, file: !164, line: 510, baseType: !274, size: 32, offset: 8000)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "port_type", scope: !5656, file: !164, line: 511, baseType: !204, size: 32, offset: 8032)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "port_state", scope: !5656, file: !164, line: 512, baseType: !179, size: 32, offset: 8064)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "active_fc4s", scope: !5656, file: !164, line: 513, baseType: !5663, size: 256, offset: 8096)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5656, file: !164, line: 514, baseType: !274, size: 32, offset: 8352)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "fabric_name", scope: !5656, file: !164, line: 515, baseType: !288, size: 64, offset: 8384)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_name", scope: !5656, file: !164, line: 516, baseType: !5673, size: 2048, offset: 8448)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "system_hostname", scope: !5656, file: !164, line: 517, baseType: !5673, size: 2048, offset: 10496)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "dev_loss_tmo", scope: !5656, file: !164, line: 518, baseType: !274, size: 32, offset: 12544)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "tgtid_bind_type", scope: !5656, file: !164, line: 521, baseType: !214, size: 32, offset: 12576)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "rports", scope: !5656, file: !164, line: 524, baseType: !305, size: 128, offset: 12608)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "rport_bindings", scope: !5656, file: !164, line: 525, baseType: !305, size: 128, offset: 12736)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "vports", scope: !5656, file: !164, line: 526, baseType: !305, size: 128, offset: 12864)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "next_rport_number", scope: !5656, file: !164, line: 527, baseType: !274, size: 32, offset: 12992)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "next_target_id", scope: !5656, file: !164, line: 528, baseType: !274, size: 32, offset: 13024)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "next_vport_number", scope: !5656, file: !164, line: 529, baseType: !274, size: 32, offset: 13056)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "npiv_vports_inuse", scope: !5656, file: !164, line: 530, baseType: !998, size: 16, offset: 13088)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5656, file: !164, line: 533, baseType: !5446, size: 160, offset: 13104)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5656, file: !164, line: 534, baseType: !2282, size: 64, offset: 13312)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "devloss_work_q_name", scope: !5656, file: !164, line: 535, baseType: !5446, size: 160, offset: 13376)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "devloss_work_q", scope: !5656, file: !164, line: 536, baseType: !2282, size: 64, offset: 13568)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "rqst_q", scope: !5656, file: !164, line: 539, baseType: !2480, size: 64, offset: 13632)
!5703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5704, size: 64)
!5704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_skb_parms", file: !5705, line: 23, size: 320, elements: !5706)
!5705 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!5706 = !{!5707, !5714, !5715, !5716, !5717, !5718, !5719}
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "creds", scope: !5704, file: !5705, line: 24, baseType: !5708, size: 96)
!5708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scm_creds", file: !5709, line: 18, size: 96, elements: !5710)
!5709 = !DIFile(filename: "./include/net/scm.h", directory: "/home/lizy2001/genbc/linux")
!5710 = !{!5711, !5712, !5713}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5708, file: !5709, line: 19, baseType: !274, size: 32)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5708, file: !5709, line: 20, baseType: !522, size: 32, offset: 32)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !5708, file: !5709, line: 21, baseType: !530, size: 32, offset: 64)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "portid", scope: !5704, file: !5705, line: 25, baseType: !276, size: 32, offset: 96)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "dst_group", scope: !5704, file: !5705, line: 26, baseType: !276, size: 32, offset: 128)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5704, file: !5705, line: 27, baseType: !276, size: 32, offset: 160)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !5704, file: !5705, line: 28, baseType: !4411, size: 64, offset: 192)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_is_set", scope: !5704, file: !5705, line: 29, baseType: !577, size: 8, offset: 256)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "nsid", scope: !5704, file: !5705, line: 30, baseType: !355, size: 32, offset: 288)
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 64)
!5721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_starget_attrs", file: !164, line: 381, size: 192, elements: !5722)
!5722 = !{!5723, !5724, !5725}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !5721, file: !164, line: 383, baseType: !288, size: 64)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "port_name", scope: !5721, file: !164, line: 384, baseType: !288, size: 64, offset: 64)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !5721, file: !164, line: 385, baseType: !274, size: 32, offset: 128)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !308)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5727)
!5731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5732, size: 64)
!5732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !4127, line: 34, baseType: !289)
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5295, size: 64)
!5735 = !{!5736, !5788, !5793, !5798, !5801, !5806, !5808, !5811, !5813, !5818, !0, !5820, !5822, !5832, !5844, !5846, !5848, !5850, !5852, !5857, !5859, !5861, !5863, !5865, !5867, !5869, !5871, !5873, !5875, !5877, !5879, !5881, !5883, !5885, !5887, !5889, !5891, !5893, !5895, !5897, !5899, !5901, !5903, !5905, !5907, !5909, !5911, !5913, !5915, !5917, !5919, !5921, !5923, !5925, !5927, !5929, !5931, !5939, !5941, !5943, !5951, !5953, !5955, !5957, !5959, !5961, !5963, !5965, !5967, !5969, !5971, !5973, !5975, !5977, !5984, !5986, !5993, !5995, !5997, !5999, !6001, !6003, !6005, !6007, !6016, !6018, !6020, !6022, !6024, !6026, !6028, !6030, !6032, !6034, !6036, !6044, !6046, !6048, !6050, !6052, !6059, !6061, !6063, !6065, !6067, !6069, !6071, !6073}
!5736 = !DIGlobalVariableExpression(var: !5737, expr: !DIExpression())
!5737 = distinct !DIGlobalVariable(name: "__param_dev_loss_tmo", scope: !2, file: !3, line: 48, type: !5738, isLocal: true, isDefinition: true, align: 64)
!5738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5739)
!5739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5740, line: 69, size: 320, elements: !5741)
!5740 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5741 = !{!5742, !5743, !5744, !5760, !5762, !5766, !5767}
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5739, file: !5740, line: 70, baseType: !318, size: 64)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5739, file: !5740, line: 71, baseType: !720, size: 64, offset: 64)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5739, file: !5740, line: 72, baseType: !5745, size: 64, offset: 128)
!5745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5746, size: 64)
!5746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5747)
!5747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5740, line: 47, size: 256, elements: !5748)
!5748 = !{!5749, !5750, !5755, !5759}
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5747, file: !5740, line: 49, baseType: !7, size: 32)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5747, file: !5740, line: 51, baseType: !5751, size: 64, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 64)
!5752 = !DISubroutineType(types: !5753)
!5753 = !{!355, !318, !5754}
!5754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5747, file: !5740, line: 53, baseType: !5756, size: 64, offset: 128)
!5756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5757, size: 64)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!355, !278, !5754}
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5747, file: !5740, line: 55, baseType: !555, size: 64, offset: 192)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5739, file: !5740, line: 73, baseType: !5761, size: 16, offset: 192)
!5761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5739, file: !5740, line: 74, baseType: !5763, size: 8, offset: 208)
!5763 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !275, line: 16, baseType: !5764)
!5764 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !277, line: 20, baseType: !5765)
!5765 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5739, file: !5740, line: 75, baseType: !301, size: 8, offset: 216)
!5767 = !DIDerivedType(tag: DW_TAG_member, scope: !5739, file: !5740, line: 76, baseType: !5768, size: 64, offset: 256)
!5768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5739, file: !5740, line: 76, size: 64, elements: !5769)
!5769 = !{!5770, !5771, !5778}
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5768, file: !5740, line: 77, baseType: !280, size: 64)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5768, file: !5740, line: 78, baseType: !5772, size: 64)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5774)
!5774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5740, line: 86, size: 128, elements: !5775)
!5775 = !{!5776, !5777}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5774, file: !5740, line: 87, baseType: !7, size: 32)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5774, file: !5740, line: 88, baseType: !278, size: 64, offset: 64)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5768, file: !5740, line: 79, baseType: !5779, size: 64)
!5779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5780, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5781)
!5781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5740, line: 92, size: 256, elements: !5782)
!5782 = !{!5783, !5784, !5785, !5786, !5787}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5781, file: !5740, line: 94, baseType: !7, size: 32)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5781, file: !5740, line: 95, baseType: !7, size: 32, offset: 32)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5781, file: !5740, line: 96, baseType: !2873, size: 64, offset: 64)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5781, file: !5740, line: 97, baseType: !5745, size: 64, offset: 128)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5781, file: !5740, line: 98, baseType: !280, size: 64, offset: 192)
!5788 = !DIGlobalVariableExpression(var: !5789, expr: !DIExpression())
!5789 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dev_loss_tmotype337", scope: !2, file: !3, line: 48, type: !5790, isLocal: true, isDefinition: true, align: 8)
!5790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 360, elements: !5791)
!5791 = !{!5792}
!5792 = !DISubrange(count: 45)
!5793 = !DIGlobalVariableExpression(var: !5794, expr: !DIExpression())
!5794 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dev_loss_tmo338", scope: !2, file: !3, line: 49, type: !5795, isLocal: true, isDefinition: true, align: 8)
!5795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 2208, elements: !5796)
!5796 = !{!5797}
!5797 = !DISubrange(count: 276)
!5798 = !DIGlobalVariableExpression(var: !5799, expr: !DIExpression())
!5799 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author444", scope: !2, file: !3, line: 3857, type: !5800, isLocal: true, isDefinition: true, align: 8)
!5800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 296, elements: !2262)
!5801 = !DIGlobalVariableExpression(var: !5802, expr: !DIExpression())
!5802 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description445", scope: !2, file: !3, line: 3858, type: !5803, isLocal: true, isDefinition: true, align: 8)
!5803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 432, elements: !5804)
!5804 = !{!5805}
!5805 = !DISubrange(count: 54)
!5806 = !DIGlobalVariableExpression(var: !5807, expr: !DIExpression())
!5807 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file446", scope: !2, file: !3, line: 3859, type: !5803, isLocal: true, isDefinition: true, align: 8)
!5808 = !DIGlobalVariableExpression(var: !5809, expr: !DIExpression())
!5809 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license447", scope: !2, file: !3, line: 3859, type: !5810, isLocal: true, isDefinition: true, align: 8)
!5810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 240, elements: !5637)
!5811 = !DIGlobalVariableExpression(var: !5812, expr: !DIExpression())
!5812 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fc_transport_init448", scope: !2, file: !3, line: 3861, type: !280, isLocal: true, isDefinition: true)
!5813 = !DIGlobalVariableExpression(var: !5814, expr: !DIExpression())
!5814 = distinct !DIGlobalVariable(name: "__exitcall_fc_transport_exit", scope: !2, file: !3, line: 3862, type: !5815, isLocal: true, isDefinition: true)
!5815 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !5816, line: 117, baseType: !5817)
!5816 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!5818 = !DIGlobalVariableExpression(var: !5819, expr: !DIExpression())
!5819 = distinct !DIGlobalVariable(name: "fc_event_seq", scope: !2, file: !3, line: 497, type: !886, isLocal: true, isDefinition: true)
!5820 = !DIGlobalVariableExpression(var: !5821, expr: !DIExpression())
!5821 = distinct !DIGlobalVariable(name: "fc_dev_loss_tmo", scope: !2, file: !3, line: 46, type: !7, isLocal: true, isDefinition: true)
!5822 = !DIGlobalVariableExpression(var: !5823, expr: !DIExpression())
!5823 = distinct !DIGlobalVariable(name: "fc_host_event_code_names", scope: !2, file: !3, line: 121, type: !5824, isLocal: true, isDefinition: true)
!5824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5825, size: 1664, elements: !5830)
!5825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5826)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 118, size: 128, elements: !5827)
!5827 = !{!5828, !5829}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5826, file: !3, line: 119, baseType: !163, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5826, file: !3, line: 120, baseType: !278, size: 64, offset: 64)
!5830 = !{!5831}
!5831 = !DISubrange(count: 13)
!5832 = !DIGlobalVariableExpression(var: !5833, expr: !DIExpression())
!5833 = distinct !DIGlobalVariable(name: "fc_transport_class", scope: !2, file: !3, line: 370, type: !5834, isLocal: true, isDefinition: true)
!5834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transport_class", file: !4993, line: 17, size: 1152, elements: !5835)
!5835 = !{!5836, !5837, !5842, !5843}
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5834, file: !4993, line: 18, baseType: !4936, size: 960)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !5834, file: !4993, line: 19, baseType: !5838, size: 64, offset: 960)
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!355, !5841, !2400, !2400}
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !5834, file: !4993, line: 21, baseType: !5838, size: 64, offset: 1024)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5834, file: !4993, line: 23, baseType: !5838, size: 64, offset: 1088)
!5844 = !DIGlobalVariableExpression(var: !5845, expr: !DIExpression())
!5845 = distinct !DIGlobalVariable(name: "fc_rport_class", scope: !2, file: !3, line: 477, type: !5834, isLocal: true, isDefinition: true)
!5846 = !DIGlobalVariableExpression(var: !5847, expr: !DIExpression())
!5847 = distinct !DIGlobalVariable(name: "fc_host_class", scope: !2, file: !3, line: 467, type: !5834, isLocal: true, isDefinition: true)
!5848 = !DIGlobalVariableExpression(var: !5849, expr: !DIExpression())
!5849 = distinct !DIGlobalVariable(name: "fc_vport_class", scope: !2, file: !3, line: 487, type: !5834, isLocal: true, isDefinition: true)
!5850 = !DIGlobalVariableExpression(var: !5851, expr: !DIExpression())
!5851 = distinct !DIGlobalVariable(name: "fc_statistics_group", scope: !2, file: !3, line: 1800, type: !426, isLocal: true, isDefinition: true)
!5852 = !DIGlobalVariableExpression(var: !5853, expr: !DIExpression())
!5853 = distinct !DIGlobalVariable(name: "fc_statistics_attrs", scope: !2, file: !3, line: 1766, type: !5854, isLocal: true, isDefinition: true)
!5854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !405, size: 1984, elements: !5855)
!5855 = !{!5856}
!5856 = !DISubrange(count: 31)
!5857 = !DIGlobalVariableExpression(var: !5858, expr: !DIExpression())
!5858 = distinct !DIGlobalVariable(name: "device_attr_host_seconds_since_last_reset", scope: !2, file: !3, line: 1718, type: !5022, isLocal: true, isDefinition: true)
!5859 = !DIGlobalVariableExpression(var: !5860, expr: !DIExpression())
!5860 = distinct !DIGlobalVariable(name: "device_attr_host_tx_frames", scope: !2, file: !3, line: 1719, type: !5022, isLocal: true, isDefinition: true)
!5861 = !DIGlobalVariableExpression(var: !5862, expr: !DIExpression())
!5862 = distinct !DIGlobalVariable(name: "device_attr_host_tx_words", scope: !2, file: !3, line: 1720, type: !5022, isLocal: true, isDefinition: true)
!5863 = !DIGlobalVariableExpression(var: !5864, expr: !DIExpression())
!5864 = distinct !DIGlobalVariable(name: "device_attr_host_rx_frames", scope: !2, file: !3, line: 1721, type: !5022, isLocal: true, isDefinition: true)
!5865 = !DIGlobalVariableExpression(var: !5866, expr: !DIExpression())
!5866 = distinct !DIGlobalVariable(name: "device_attr_host_rx_words", scope: !2, file: !3, line: 1722, type: !5022, isLocal: true, isDefinition: true)
!5867 = !DIGlobalVariableExpression(var: !5868, expr: !DIExpression())
!5868 = distinct !DIGlobalVariable(name: "device_attr_host_lip_count", scope: !2, file: !3, line: 1723, type: !5022, isLocal: true, isDefinition: true)
!5869 = !DIGlobalVariableExpression(var: !5870, expr: !DIExpression())
!5870 = distinct !DIGlobalVariable(name: "device_attr_host_nos_count", scope: !2, file: !3, line: 1724, type: !5022, isLocal: true, isDefinition: true)
!5871 = !DIGlobalVariableExpression(var: !5872, expr: !DIExpression())
!5872 = distinct !DIGlobalVariable(name: "device_attr_host_error_frames", scope: !2, file: !3, line: 1725, type: !5022, isLocal: true, isDefinition: true)
!5873 = !DIGlobalVariableExpression(var: !5874, expr: !DIExpression())
!5874 = distinct !DIGlobalVariable(name: "device_attr_host_dumped_frames", scope: !2, file: !3, line: 1726, type: !5022, isLocal: true, isDefinition: true)
!5875 = !DIGlobalVariableExpression(var: !5876, expr: !DIExpression())
!5876 = distinct !DIGlobalVariable(name: "device_attr_host_link_failure_count", scope: !2, file: !3, line: 1727, type: !5022, isLocal: true, isDefinition: true)
!5877 = !DIGlobalVariableExpression(var: !5878, expr: !DIExpression())
!5878 = distinct !DIGlobalVariable(name: "device_attr_host_loss_of_sync_count", scope: !2, file: !3, line: 1728, type: !5022, isLocal: true, isDefinition: true)
!5879 = !DIGlobalVariableExpression(var: !5880, expr: !DIExpression())
!5880 = distinct !DIGlobalVariable(name: "device_attr_host_loss_of_signal_count", scope: !2, file: !3, line: 1729, type: !5022, isLocal: true, isDefinition: true)
!5881 = !DIGlobalVariableExpression(var: !5882, expr: !DIExpression())
!5882 = distinct !DIGlobalVariable(name: "device_attr_host_prim_seq_protocol_err_count", scope: !2, file: !3, line: 1730, type: !5022, isLocal: true, isDefinition: true)
!5883 = !DIGlobalVariableExpression(var: !5884, expr: !DIExpression())
!5884 = distinct !DIGlobalVariable(name: "device_attr_host_invalid_tx_word_count", scope: !2, file: !3, line: 1731, type: !5022, isLocal: true, isDefinition: true)
!5885 = !DIGlobalVariableExpression(var: !5886, expr: !DIExpression())
!5886 = distinct !DIGlobalVariable(name: "device_attr_host_invalid_crc_count", scope: !2, file: !3, line: 1732, type: !5022, isLocal: true, isDefinition: true)
!5887 = !DIGlobalVariableExpression(var: !5888, expr: !DIExpression())
!5888 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_input_requests", scope: !2, file: !3, line: 1733, type: !5022, isLocal: true, isDefinition: true)
!5889 = !DIGlobalVariableExpression(var: !5890, expr: !DIExpression())
!5890 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_output_requests", scope: !2, file: !3, line: 1734, type: !5022, isLocal: true, isDefinition: true)
!5891 = !DIGlobalVariableExpression(var: !5892, expr: !DIExpression())
!5892 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_control_requests", scope: !2, file: !3, line: 1735, type: !5022, isLocal: true, isDefinition: true)
!5893 = !DIGlobalVariableExpression(var: !5894, expr: !DIExpression())
!5894 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_input_megabytes", scope: !2, file: !3, line: 1736, type: !5022, isLocal: true, isDefinition: true)
!5895 = !DIGlobalVariableExpression(var: !5896, expr: !DIExpression())
!5896 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_output_megabytes", scope: !2, file: !3, line: 1737, type: !5022, isLocal: true, isDefinition: true)
!5897 = !DIGlobalVariableExpression(var: !5898, expr: !DIExpression())
!5898 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_packet_alloc_failures", scope: !2, file: !3, line: 1738, type: !5022, isLocal: true, isDefinition: true)
!5899 = !DIGlobalVariableExpression(var: !5900, expr: !DIExpression())
!5900 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_packet_aborts", scope: !2, file: !3, line: 1739, type: !5022, isLocal: true, isDefinition: true)
!5901 = !DIGlobalVariableExpression(var: !5902, expr: !DIExpression())
!5902 = distinct !DIGlobalVariable(name: "device_attr_host_fcp_frame_alloc_failures", scope: !2, file: !3, line: 1740, type: !5022, isLocal: true, isDefinition: true)
!5903 = !DIGlobalVariableExpression(var: !5904, expr: !DIExpression())
!5904 = distinct !DIGlobalVariable(name: "device_attr_host_fc_no_free_exch", scope: !2, file: !3, line: 1741, type: !5022, isLocal: true, isDefinition: true)
!5905 = !DIGlobalVariableExpression(var: !5906, expr: !DIExpression())
!5906 = distinct !DIGlobalVariable(name: "device_attr_host_fc_no_free_exch_xid", scope: !2, file: !3, line: 1742, type: !5022, isLocal: true, isDefinition: true)
!5907 = !DIGlobalVariableExpression(var: !5908, expr: !DIExpression())
!5908 = distinct !DIGlobalVariable(name: "device_attr_host_fc_xid_not_found", scope: !2, file: !3, line: 1743, type: !5022, isLocal: true, isDefinition: true)
!5909 = !DIGlobalVariableExpression(var: !5910, expr: !DIExpression())
!5910 = distinct !DIGlobalVariable(name: "device_attr_host_fc_xid_busy", scope: !2, file: !3, line: 1744, type: !5022, isLocal: true, isDefinition: true)
!5911 = !DIGlobalVariableExpression(var: !5912, expr: !DIExpression())
!5912 = distinct !DIGlobalVariable(name: "device_attr_host_fc_seq_not_found", scope: !2, file: !3, line: 1745, type: !5022, isLocal: true, isDefinition: true)
!5913 = !DIGlobalVariableExpression(var: !5914, expr: !DIExpression())
!5914 = distinct !DIGlobalVariable(name: "device_attr_host_fc_non_bls_resp", scope: !2, file: !3, line: 1746, type: !5022, isLocal: true, isDefinition: true)
!5915 = !DIGlobalVariableExpression(var: !5916, expr: !DIExpression())
!5916 = distinct !DIGlobalVariable(name: "device_attr_host_reset_statistics", scope: !2, file: !3, line: 1763, type: !5022, isLocal: true, isDefinition: true)
!5917 = !DIGlobalVariableExpression(var: !5918, expr: !DIExpression())
!5918 = distinct !DIGlobalVariable(name: "device_attr_starget_node_name", scope: !2, file: !3, line: 1051, type: !5022, isLocal: true, isDefinition: true)
!5919 = !DIGlobalVariableExpression(var: !5920, expr: !DIExpression())
!5920 = distinct !DIGlobalVariable(name: "device_attr_starget_port_name", scope: !2, file: !3, line: 1052, type: !5022, isLocal: true, isDefinition: true)
!5921 = !DIGlobalVariableExpression(var: !5922, expr: !DIExpression())
!5922 = distinct !DIGlobalVariable(name: "device_attr_starget_port_id", scope: !2, file: !3, line: 1053, type: !5022, isLocal: true, isDefinition: true)
!5923 = !DIGlobalVariableExpression(var: !5924, expr: !DIExpression())
!5924 = distinct !DIGlobalVariable(name: "device_attr_host_node_name", scope: !2, file: !3, line: 1514, type: !5022, isLocal: true, isDefinition: true)
!5925 = !DIGlobalVariableExpression(var: !5926, expr: !DIExpression())
!5926 = distinct !DIGlobalVariable(name: "device_attr_host_port_name", scope: !2, file: !3, line: 1515, type: !5022, isLocal: true, isDefinition: true)
!5927 = !DIGlobalVariableExpression(var: !5928, expr: !DIExpression())
!5928 = distinct !DIGlobalVariable(name: "device_attr_host_permanent_port_name", scope: !2, file: !3, line: 1516, type: !5022, isLocal: true, isDefinition: true)
!5929 = !DIGlobalVariableExpression(var: !5930, expr: !DIExpression())
!5930 = distinct !DIGlobalVariable(name: "device_attr_host_supported_classes", scope: !2, file: !3, line: 1486, type: !5022, isLocal: true, isDefinition: true)
!5931 = !DIGlobalVariableExpression(var: !5932, expr: !DIExpression())
!5932 = distinct !DIGlobalVariable(name: "fc_cos_names", scope: !2, file: !3, line: 227, type: !5933, isLocal: true, isDefinition: true)
!5933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5934, size: 640, elements: !3142)
!5934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5935)
!5935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 224, size: 128, elements: !5936)
!5936 = !{!5937, !5938}
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5935, file: !3, line: 225, baseType: !274, size: 32)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5935, file: !3, line: 226, baseType: !278, size: 64, offset: 64)
!5939 = !DIGlobalVariableExpression(var: !5940, expr: !DIExpression())
!5940 = distinct !DIGlobalVariable(name: "device_attr_host_supported_fc4s", scope: !2, file: !3, line: 1496, type: !5022, isLocal: true, isDefinition: true)
!5941 = !DIGlobalVariableExpression(var: !5942, expr: !DIExpression())
!5942 = distinct !DIGlobalVariable(name: "device_attr_host_supported_speeds", scope: !2, file: !3, line: 1510, type: !5022, isLocal: true, isDefinition: true)
!5943 = !DIGlobalVariableExpression(var: !5944, expr: !DIExpression())
!5944 = distinct !DIGlobalVariable(name: "fc_port_speed_names", scope: !2, file: !3, line: 241, type: !5945, isLocal: true, isDefinition: true)
!5945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5946, size: 2048, elements: !1988)
!5946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5947)
!5947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 238, size: 128, elements: !5948)
!5948 = !{!5949, !5950}
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5947, file: !3, line: 239, baseType: !274, size: 32)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5947, file: !3, line: 240, baseType: !278, size: 64, offset: 64)
!5951 = !DIGlobalVariableExpression(var: !5952, expr: !DIExpression())
!5952 = distinct !DIGlobalVariable(name: "device_attr_host_maxframe_size", scope: !2, file: !3, line: 1518, type: !5022, isLocal: true, isDefinition: true)
!5953 = !DIGlobalVariableExpression(var: !5954, expr: !DIExpression())
!5954 = distinct !DIGlobalVariable(name: "device_attr_host_max_npiv_vports", scope: !2, file: !3, line: 1519, type: !5022, isLocal: true, isDefinition: true)
!5955 = !DIGlobalVariableExpression(var: !5956, expr: !DIExpression())
!5956 = distinct !DIGlobalVariable(name: "device_attr_host_npiv_vports_inuse", scope: !2, file: !3, line: 1678, type: !5022, isLocal: true, isDefinition: true)
!5957 = !DIGlobalVariableExpression(var: !5958, expr: !DIExpression())
!5958 = distinct !DIGlobalVariable(name: "device_attr_host_serial_number", scope: !2, file: !3, line: 1520, type: !5022, isLocal: true, isDefinition: true)
!5959 = !DIGlobalVariableExpression(var: !5960, expr: !DIExpression())
!5960 = distinct !DIGlobalVariable(name: "device_attr_host_manufacturer", scope: !2, file: !3, line: 1521, type: !5022, isLocal: true, isDefinition: true)
!5961 = !DIGlobalVariableExpression(var: !5962, expr: !DIExpression())
!5962 = distinct !DIGlobalVariable(name: "device_attr_host_model", scope: !2, file: !3, line: 1522, type: !5022, isLocal: true, isDefinition: true)
!5963 = !DIGlobalVariableExpression(var: !5964, expr: !DIExpression())
!5964 = distinct !DIGlobalVariable(name: "device_attr_host_model_description", scope: !2, file: !3, line: 1523, type: !5022, isLocal: true, isDefinition: true)
!5965 = !DIGlobalVariableExpression(var: !5966, expr: !DIExpression())
!5966 = distinct !DIGlobalVariable(name: "device_attr_host_hardware_version", scope: !2, file: !3, line: 1524, type: !5022, isLocal: true, isDefinition: true)
!5967 = !DIGlobalVariableExpression(var: !5968, expr: !DIExpression())
!5968 = distinct !DIGlobalVariable(name: "device_attr_host_driver_version", scope: !2, file: !3, line: 1525, type: !5022, isLocal: true, isDefinition: true)
!5969 = !DIGlobalVariableExpression(var: !5970, expr: !DIExpression())
!5970 = distinct !DIGlobalVariable(name: "device_attr_host_firmware_version", scope: !2, file: !3, line: 1526, type: !5022, isLocal: true, isDefinition: true)
!5971 = !DIGlobalVariableExpression(var: !5972, expr: !DIExpression())
!5972 = distinct !DIGlobalVariable(name: "device_attr_host_optionrom_version", scope: !2, file: !3, line: 1527, type: !5022, isLocal: true, isDefinition: true)
!5973 = !DIGlobalVariableExpression(var: !5974, expr: !DIExpression())
!5974 = distinct !DIGlobalVariable(name: "device_attr_host_port_id", scope: !2, file: !3, line: 1566, type: !5022, isLocal: true, isDefinition: true)
!5975 = !DIGlobalVariableExpression(var: !5976, expr: !DIExpression())
!5976 = distinct !DIGlobalVariable(name: "device_attr_host_port_type", scope: !2, file: !3, line: 1567, type: !5022, isLocal: true, isDefinition: true)
!5977 = !DIGlobalVariableExpression(var: !5978, expr: !DIExpression())
!5978 = distinct !DIGlobalVariable(name: "fc_port_type_names", scope: !2, file: !3, line: 100, type: !5979, isLocal: true, isDefinition: true)
!5979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5980, size: 1024, elements: !1617)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 97, size: 128, elements: !5981)
!5981 = !{!5982, !5983}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5980, file: !3, line: 98, baseType: !204, size: 32)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5980, file: !3, line: 99, baseType: !278, size: 64, offset: 64)
!5984 = !DIGlobalVariableExpression(var: !5985, expr: !DIExpression())
!5985 = distinct !DIGlobalVariable(name: "device_attr_host_port_state", scope: !2, file: !3, line: 1568, type: !5022, isLocal: true, isDefinition: true)
!5986 = !DIGlobalVariableExpression(var: !5987, expr: !DIExpression())
!5987 = distinct !DIGlobalVariable(name: "fc_port_state_names", scope: !2, file: !3, line: 145, type: !5988, isLocal: true, isDefinition: true)
!5988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5989, size: 1408, elements: !5646)
!5989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 142, size: 128, elements: !5990)
!5990 = !{!5991, !5992}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5989, file: !3, line: 143, baseType: !179, size: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5989, file: !3, line: 144, baseType: !278, size: 64, offset: 64)
!5993 = !DIGlobalVariableExpression(var: !5994, expr: !DIExpression())
!5994 = distinct !DIGlobalVariable(name: "device_attr_host_active_fc4s", scope: !2, file: !3, line: 1544, type: !5022, isLocal: true, isDefinition: true)
!5995 = !DIGlobalVariableExpression(var: !5996, expr: !DIExpression())
!5996 = distinct !DIGlobalVariable(name: "device_attr_host_speed", scope: !2, file: !3, line: 1562, type: !5022, isLocal: true, isDefinition: true)
!5997 = !DIGlobalVariableExpression(var: !5998, expr: !DIExpression())
!5998 = distinct !DIGlobalVariable(name: "device_attr_host_fabric_name", scope: !2, file: !3, line: 1569, type: !5022, isLocal: true, isDefinition: true)
!5999 = !DIGlobalVariableExpression(var: !6000, expr: !DIExpression())
!6000 = distinct !DIGlobalVariable(name: "device_attr_host_symbolic_name", scope: !2, file: !3, line: 1570, type: !5022, isLocal: true, isDefinition: true)
!6001 = !DIGlobalVariableExpression(var: !6002, expr: !DIExpression())
!6002 = distinct !DIGlobalVariable(name: "device_attr_host_system_hostname", scope: !2, file: !3, line: 1575, type: !5022, isLocal: true, isDefinition: true)
!6003 = !DIGlobalVariableExpression(var: !6004, expr: !DIExpression())
!6004 = distinct !DIGlobalVariable(name: "device_attr_host_dev_loss_tmo", scope: !2, file: !3, line: 1674, type: !5022, isLocal: true, isDefinition: true)
!6005 = !DIGlobalVariableExpression(var: !6006, expr: !DIExpression())
!6006 = distinct !DIGlobalVariable(name: "device_attr_host_tgtid_bind_type", scope: !2, file: !3, line: 1626, type: !5022, isLocal: true, isDefinition: true)
!6007 = !DIGlobalVariableExpression(var: !6008, expr: !DIExpression())
!6008 = distinct !DIGlobalVariable(name: "fc_tgtid_binding_type_names", scope: !2, file: !3, line: 190, type: !6009, isLocal: true, isDefinition: true)
!6009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6010, size: 768, elements: !1453)
!6010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6011)
!6011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 186, size: 192, elements: !6012)
!6012 = !{!6013, !6014, !6015}
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6011, file: !3, line: 187, baseType: !214, size: 32)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6011, file: !3, line: 188, baseType: !278, size: 64, offset: 64)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "matchlen", scope: !6011, file: !3, line: 189, baseType: !355, size: 32, offset: 128)
!6016 = !DIGlobalVariableExpression(var: !6017, expr: !DIExpression())
!6017 = distinct !DIGlobalVariable(name: "device_attr_host_issue_lip", scope: !2, file: !3, line: 1647, type: !5022, isLocal: true, isDefinition: true)
!6018 = !DIGlobalVariableExpression(var: !6019, expr: !DIExpression())
!6019 = distinct !DIGlobalVariable(name: "device_attr_host_vport_create", scope: !2, file: !3, line: 1880, type: !5022, isLocal: true, isDefinition: true)
!6020 = !DIGlobalVariableExpression(var: !6021, expr: !DIExpression())
!6021 = distinct !DIGlobalVariable(name: "device_attr_host_vport_delete", scope: !2, file: !3, line: 1939, type: !5022, isLocal: true, isDefinition: true)
!6022 = !DIGlobalVariableExpression(var: !6023, expr: !DIExpression())
!6023 = distinct !DIGlobalVariable(name: "device_attr_rport_maxframe_size", scope: !2, file: !3, line: 819, type: !5022, isLocal: true, isDefinition: true)
!6024 = !DIGlobalVariableExpression(var: !6025, expr: !DIExpression())
!6025 = distinct !DIGlobalVariable(name: "device_attr_rport_supported_classes", scope: !2, file: !3, line: 830, type: !5022, isLocal: true, isDefinition: true)
!6026 = !DIGlobalVariableExpression(var: !6027, expr: !DIExpression())
!6027 = distinct !DIGlobalVariable(name: "device_attr_rport_dev_loss_tmo", scope: !2, file: !3, line: 900, type: !5022, isLocal: true, isDefinition: true)
!6028 = !DIGlobalVariableExpression(var: !6029, expr: !DIExpression())
!6029 = distinct !DIGlobalVariable(name: "device_attr_rport_node_name", scope: !2, file: !3, line: 906, type: !5022, isLocal: true, isDefinition: true)
!6030 = !DIGlobalVariableExpression(var: !6031, expr: !DIExpression())
!6031 = distinct !DIGlobalVariable(name: "device_attr_rport_port_name", scope: !2, file: !3, line: 907, type: !5022, isLocal: true, isDefinition: true)
!6032 = !DIGlobalVariableExpression(var: !6033, expr: !DIExpression())
!6033 = distinct !DIGlobalVariable(name: "device_attr_rport_port_id", scope: !2, file: !3, line: 908, type: !5022, isLocal: true, isDefinition: true)
!6034 = !DIGlobalVariableExpression(var: !6035, expr: !DIExpression())
!6035 = distinct !DIGlobalVariable(name: "device_attr_rport_roles", scope: !2, file: !3, line: 940, type: !5022, isLocal: true, isDefinition: true)
!6036 = !DIGlobalVariableExpression(var: !6037, expr: !DIExpression())
!6037 = distinct !DIGlobalVariable(name: "fc_port_role_names", scope: !2, file: !3, line: 278, type: !6038, isLocal: true, isDefinition: true)
!6038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6039, size: 896, elements: !2547)
!6039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6040)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 275, size: 128, elements: !6041)
!6041 = !{!6042, !6043}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6040, file: !3, line: 276, baseType: !274, size: 32)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6040, file: !3, line: 277, baseType: !278, size: 64, offset: 64)
!6044 = !DIGlobalVariableExpression(var: !6045, expr: !DIExpression())
!6045 = distinct !DIGlobalVariable(name: "device_attr_rport_port_state", scope: !2, file: !3, line: 943, type: !5022, isLocal: true, isDefinition: true)
!6046 = !DIGlobalVariableExpression(var: !6047, expr: !DIExpression())
!6047 = distinct !DIGlobalVariable(name: "device_attr_rport_scsi_target_id", scope: !2, file: !3, line: 944, type: !5022, isLocal: true, isDefinition: true)
!6048 = !DIGlobalVariableExpression(var: !6049, expr: !DIExpression())
!6049 = distinct !DIGlobalVariable(name: "device_attr_rport_fast_io_fail_tmo", scope: !2, file: !3, line: 991, type: !5022, isLocal: true, isDefinition: true)
!6050 = !DIGlobalVariableExpression(var: !6051, expr: !DIExpression())
!6051 = distinct !DIGlobalVariable(name: "device_attr_vport_vport_state", scope: !2, file: !3, line: 1244, type: !5022, isLocal: true, isDefinition: true)
!6052 = !DIGlobalVariableExpression(var: !6053, expr: !DIExpression())
!6053 = distinct !DIGlobalVariable(name: "fc_vport_state_names", scope: !2, file: !3, line: 166, type: !6054, isLocal: true, isDefinition: true)
!6054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6055, size: 1280, elements: !5642)
!6055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 163, size: 128, elements: !6056)
!6056 = !{!6057, !6058}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6055, file: !3, line: 164, baseType: !192, size: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6055, file: !3, line: 165, baseType: !278, size: 64, offset: 64)
!6059 = !DIGlobalVariableExpression(var: !6060, expr: !DIExpression())
!6060 = distinct !DIGlobalVariable(name: "device_attr_vport_vport_last_state", scope: !2, file: !3, line: 1245, type: !5022, isLocal: true, isDefinition: true)
!6061 = !DIGlobalVariableExpression(var: !6062, expr: !DIExpression())
!6062 = distinct !DIGlobalVariable(name: "device_attr_vport_node_name", scope: !2, file: !3, line: 1246, type: !5022, isLocal: true, isDefinition: true)
!6063 = !DIGlobalVariableExpression(var: !6064, expr: !DIExpression())
!6064 = distinct !DIGlobalVariable(name: "device_attr_vport_port_name", scope: !2, file: !3, line: 1247, type: !5022, isLocal: true, isDefinition: true)
!6065 = !DIGlobalVariableExpression(var: !6066, expr: !DIExpression())
!6066 = distinct !DIGlobalVariable(name: "device_attr_vport_roles", scope: !2, file: !3, line: 1259, type: !5022, isLocal: true, isDefinition: true)
!6067 = !DIGlobalVariableExpression(var: !6068, expr: !DIExpression())
!6068 = distinct !DIGlobalVariable(name: "device_attr_vport_vport_type", scope: !2, file: !3, line: 1261, type: !5022, isLocal: true, isDefinition: true)
!6069 = !DIGlobalVariableExpression(var: !6070, expr: !DIExpression())
!6070 = distinct !DIGlobalVariable(name: "device_attr_vport_symbolic_name", scope: !2, file: !3, line: 1266, type: !5022, isLocal: true, isDefinition: true)
!6071 = !DIGlobalVariableExpression(var: !6072, expr: !DIExpression())
!6072 = distinct !DIGlobalVariable(name: "device_attr_vport_vport_delete", scope: !2, file: !3, line: 1288, type: !5022, isLocal: true, isDefinition: true)
!6073 = !DIGlobalVariableExpression(var: !6074, expr: !DIExpression())
!6074 = distinct !DIGlobalVariable(name: "device_attr_vport_vport_disable", scope: !2, file: !3, line: 1321, type: !5022, isLocal: true, isDefinition: true)
!6075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 248, elements: !5855)
!6076 = !{!"rsp"}
!6077 = !{i32 7, !"Dwarf Version", i32 4}
!6078 = !{i32 2, !"Debug Info Version", i32 3}
!6079 = !{i32 1, !"wchar_size", i32 2}
!6080 = !{i32 1, !"Code Model", i32 2}
!6081 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6082 = distinct !DISubprogram(name: "fc_get_event_number", scope: !3, file: !3, line: 508, type: !6083, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{!274}
!6085 = !DILocalVariable(name: "i", arg: 1, scope: !6086, file: !6087, line: 163, type: !355)
!6086 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !6087, file: !6087, line: 163, type: !6088, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6087 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!355, !355, !6090}
!6090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!6091 = !DILocation(line: 163, column: 55, scope: !6086, inlinedAt: !6092)
!6092 = distinct !DILocation(line: 73, column: 9, scope: !6093, inlinedAt: !6095)
!6093 = distinct !DISubprogram(name: "atomic_add_return", scope: !6094, file: !6094, line: 70, type: !6088, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6094 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6095 = distinct !DILocation(line: 510, column: 9, scope: !6082)
!6096 = !DILocalVariable(name: "v", arg: 2, scope: !6086, file: !6087, line: 163, type: !6090)
!6097 = !DILocation(line: 163, column: 68, scope: !6086, inlinedAt: !6092)
!6098 = !DILocalVariable(name: "__ret", scope: !6099, file: !6087, line: 165, type: !355)
!6099 = distinct !DILexicalBlock(scope: !6086, file: !6087, line: 165, column: 13)
!6100 = !DILocation(line: 165, column: 13, scope: !6099, inlinedAt: !6092)
!6101 = !DILocalVariable(name: "v", arg: 1, scope: !6102, file: !6103, line: 99, type: !6106)
!6102 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6103, file: !6103, line: 99, type: !6104, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6103 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6104 = !DISubroutineType(types: !6105)
!6105 = !{null, !6106, !416}
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6107, size: 64)
!6107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6108)
!6108 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6109 = !DILocation(line: 99, column: 79, scope: !6102, inlinedAt: !6110)
!6110 = distinct !DILocation(line: 72, column: 2, scope: !6093, inlinedAt: !6095)
!6111 = !DILocalVariable(name: "size", arg: 2, scope: !6102, file: !6103, line: 99, type: !416)
!6112 = !DILocation(line: 99, column: 89, scope: !6102, inlinedAt: !6110)
!6113 = !DILocalVariable(name: "i", arg: 1, scope: !6093, file: !6094, line: 70, type: !355)
!6114 = !DILocation(line: 70, column: 23, scope: !6093, inlinedAt: !6095)
!6115 = !DILocalVariable(name: "v", arg: 2, scope: !6093, file: !6094, line: 70, type: !6090)
!6116 = !DILocation(line: 70, column: 36, scope: !6093, inlinedAt: !6095)
!6117 = !DILocation(line: 72, column: 31, scope: !6093, inlinedAt: !6095)
!6118 = !DILocation(line: 101, column: 20, scope: !6102, inlinedAt: !6110)
!6119 = !DILocation(line: 101, column: 23, scope: !6102, inlinedAt: !6110)
!6120 = !DILocation(line: 101, column: 2, scope: !6102, inlinedAt: !6110)
!6121 = !DILocation(line: 102, column: 2, scope: !6102, inlinedAt: !6110)
!6122 = !DILocation(line: 73, column: 32, scope: !6093, inlinedAt: !6095)
!6123 = !DILocation(line: 73, column: 35, scope: !6093, inlinedAt: !6095)
!6124 = !DILocation(line: 165, column: 9, scope: !6086, inlinedAt: !6092)
!6125 = !{i32 -2146510624}
!6126 = !DILocation(line: 165, column: 11, scope: !6086, inlinedAt: !6092)
!6127 = !DILocation(line: 510, column: 2, scope: !6082)
!6128 = distinct !DISubprogram(name: "fc_host_post_fc_event", scope: !3, file: !3, line: 528, type: !6129, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6129 = !DISubroutineType(types: !6130)
!6130 = !{null, !5046, !274, !163, !274, !278, !288}
!6131 = !DILocalVariable(name: "shost", arg: 1, scope: !6128, file: !3, line: 528, type: !5046)
!6132 = !DILocation(line: 528, column: 41, scope: !6128)
!6133 = !DILocalVariable(name: "event_number", arg: 2, scope: !6128, file: !3, line: 528, type: !274)
!6134 = !DILocation(line: 528, column: 52, scope: !6128)
!6135 = !DILocalVariable(name: "event_code", arg: 3, scope: !6128, file: !3, line: 529, type: !163)
!6136 = !DILocation(line: 529, column: 27, scope: !6128)
!6137 = !DILocalVariable(name: "data_len", arg: 4, scope: !6128, file: !3, line: 530, type: !274)
!6138 = !DILocation(line: 530, column: 7, scope: !6128)
!6139 = !DILocalVariable(name: "data_buf", arg: 5, scope: !6128, file: !3, line: 530, type: !278)
!6140 = !DILocation(line: 530, column: 23, scope: !6128)
!6141 = !DILocalVariable(name: "vendor_id", arg: 6, scope: !6128, file: !3, line: 530, type: !288)
!6142 = !DILocation(line: 530, column: 37, scope: !6128)
!6143 = !DILocalVariable(name: "skb", scope: !6128, file: !3, line: 532, type: !6144)
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !6146, line: 713, size: 1600, elements: !6147)
!6146 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!6147 = !{!6148, !6165, !6170, !6175, !6179, !6191, !6192, !6193, !6194, !6195, !6196, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6242, !6243, !6244, !6245, !6247, !6248, !6253, !6258, !6263, !6264, !6265, !6266, !6267, !6268, !6269, !6270, !6271, !6273, !6274, !6275, !6276, !6277}
!6148 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 714, baseType: !6149, size: 192)
!6149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 714, size: 192, elements: !6150)
!6150 = !{!6151, !6163, !6164}
!6151 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !6146, line: 715, baseType: !6152, size: 192)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6149, file: !6146, line: 715, size: 192, elements: !6153)
!6153 = !{!6154, !6155, !6156}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6152, file: !6146, line: 717, baseType: !6144, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6152, file: !6146, line: 718, baseType: !6144, size: 64, offset: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, scope: !6152, file: !6146, line: 720, baseType: !6157, size: 64, offset: 128)
!6157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6152, file: !6146, line: 720, size: 64, elements: !6158)
!6158 = !{!6159, !6162}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6157, file: !6146, line: 721, baseType: !6160, size: 64)
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6161, size: 64)
!6161 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !6146, line: 242, flags: DIFlagFwdDecl)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !6157, file: !6146, line: 726, baseType: !419, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !6149, file: !6146, line: 729, baseType: !899, size: 192, align: 64)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6149, file: !6146, line: 730, baseType: !305, size: 128)
!6165 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 733, baseType: !6166, size: 64, offset: 192)
!6166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 733, size: 64, elements: !6167)
!6167 = !{!6168, !6169}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6166, file: !6146, line: 734, baseType: !4411, size: 64)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !6166, file: !6146, line: 735, baseType: !355, size: 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 738, baseType: !6171, size: 64, offset: 256)
!6171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 738, size: 64, elements: !6172)
!6172 = !{!6173, !6174}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !6171, file: !6146, line: 739, baseType: !1587, size: 64)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !6171, file: !6146, line: 740, baseType: !288, size: 64)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !6145, file: !6146, line: 748, baseType: !6176, size: 384, align: 64, offset: 320)
!6176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 384, elements: !6177)
!6177 = !{!6178}
!6178 = !DISubrange(count: 48)
!6179 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 750, baseType: !6180, size: 128, offset: 704)
!6180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 750, size: 128, elements: !6181)
!6181 = !{!6182, !6190}
!6182 = !DIDerivedType(tag: DW_TAG_member, scope: !6180, file: !6146, line: 751, baseType: !6183, size: 128)
!6183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6180, file: !6146, line: 751, size: 128, elements: !6184)
!6184 = !{!6185, !6186}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !6183, file: !6146, line: 752, baseType: !419, size: 64)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6183, file: !6146, line: 753, baseType: !6187, size: 64, offset: 64)
!6187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6188, size: 64)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !6144}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !6180, file: !6146, line: 755, baseType: !305, size: 128)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6145, file: !6146, line: 761, baseType: !7, size: 32, offset: 832)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !6145, file: !6146, line: 762, baseType: !7, size: 32, offset: 864)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !6145, file: !6146, line: 763, baseType: !999, size: 16, offset: 896)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !6145, file: !6146, line: 764, baseType: !999, size: 16, offset: 912)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !6145, file: !6146, line: 769, baseType: !999, size: 16, offset: 928)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !6145, file: !6146, line: 780, baseType: !6197, offset: 944)
!6197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, elements: !1976)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !6145, file: !6146, line: 782, baseType: !302, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !6145, file: !6146, line: 783, baseType: !302, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !6145, file: !6146, line: 784, baseType: !302, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !6145, file: !6146, line: 785, baseType: !302, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !6145, file: !6146, line: 786, baseType: !302, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !6145, file: !6146, line: 787, baseType: !302, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !6145, file: !6146, line: 795, baseType: !6205, offset: 960)
!6205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, elements: !1976)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !6145, file: !6146, line: 807, baseType: !6197, offset: 960)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !6145, file: !6146, line: 809, baseType: !302, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !6145, file: !6146, line: 810, baseType: !302, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !6145, file: !6146, line: 811, baseType: !302, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !6145, file: !6146, line: 812, baseType: !302, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !6145, file: !6146, line: 813, baseType: !302, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !6145, file: !6146, line: 815, baseType: !302, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !6145, file: !6146, line: 816, baseType: !302, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !6145, file: !6146, line: 817, baseType: !302, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !6145, file: !6146, line: 818, baseType: !302, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !6145, file: !6146, line: 819, baseType: !302, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !6145, file: !6146, line: 821, baseType: !302, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !6145, file: !6146, line: 822, baseType: !302, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !6145, file: !6146, line: 823, baseType: !302, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !6145, file: !6146, line: 832, baseType: !6197, offset: 976)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !6145, file: !6146, line: 834, baseType: !302, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !6145, file: !6146, line: 835, baseType: !302, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !6145, file: !6146, line: 836, baseType: !302, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !6145, file: !6146, line: 837, baseType: !302, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !6145, file: !6146, line: 838, baseType: !302, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !6145, file: !6146, line: 840, baseType: !302, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !6145, file: !6146, line: 843, baseType: !302, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !6145, file: !6146, line: 844, baseType: !302, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !6145, file: !6146, line: 845, baseType: !302, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !6145, file: !6146, line: 847, baseType: !302, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !6145, file: !6146, line: 848, baseType: !302, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!6232 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 866, baseType: !6233, size: 32, offset: 992)
!6233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 866, size: 32, elements: !6234)
!6234 = !{!6235, !6237}
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !6233, file: !6146, line: 867, baseType: !6236, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !4127, line: 37, baseType: !276)
!6237 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !6146, line: 868, baseType: !6238, size: 32)
!6238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6233, file: !6146, line: 868, size: 32, elements: !6239)
!6239 = !{!6240, !6241}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !6238, file: !6146, line: 869, baseType: !999, size: 16)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !6238, file: !6146, line: 870, baseType: !999, size: 16, offset: 16)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !6145, file: !6146, line: 873, baseType: !276, size: 32, offset: 1024)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !6145, file: !6146, line: 874, baseType: !355, size: 32, offset: 1056)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6145, file: !6146, line: 875, baseType: !276, size: 32, offset: 1088)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !6145, file: !6146, line: 876, baseType: !6246, size: 16, offset: 1120)
!6246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !4127, line: 30, baseType: !999)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6145, file: !6146, line: 877, baseType: !999, size: 16, offset: 1136)
!6248 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 879, baseType: !6249, size: 32, offset: 1152)
!6249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 879, size: 32, elements: !6250)
!6250 = !{!6251, !6252}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !6249, file: !6146, line: 880, baseType: !7, size: 32)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !6249, file: !6146, line: 881, baseType: !7, size: 32)
!6253 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 888, baseType: !6254, size: 32, offset: 1184)
!6254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 888, size: 32, elements: !6255)
!6255 = !{!6256, !6257}
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !6254, file: !6146, line: 889, baseType: !276, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !6254, file: !6146, line: 890, baseType: !276, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !6146, line: 893, baseType: !6259, size: 16, offset: 1216)
!6259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !6146, line: 893, size: 16, elements: !6260)
!6260 = !{!6261, !6262}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !6259, file: !6146, line: 894, baseType: !6246, size: 16)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !6259, file: !6146, line: 895, baseType: !302, size: 8)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !6145, file: !6146, line: 898, baseType: !999, size: 16, offset: 1232)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !6145, file: !6146, line: 899, baseType: !999, size: 16, offset: 1248)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !6145, file: !6146, line: 900, baseType: !999, size: 16, offset: 1264)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6145, file: !6146, line: 902, baseType: !6246, size: 16, offset: 1280)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !6145, file: !6146, line: 903, baseType: !999, size: 16, offset: 1296)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !6145, file: !6146, line: 904, baseType: !999, size: 16, offset: 1312)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !6145, file: !6146, line: 905, baseType: !999, size: 16, offset: 1328)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !6145, file: !6146, line: 908, baseType: !6205, offset: 1344)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6145, file: !6146, line: 912, baseType: !6272, size: 32, offset: 1344)
!6272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !6146, line: 606, baseType: !7)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6145, file: !6146, line: 913, baseType: !6272, size: 32, offset: 1376)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6145, file: !6146, line: 914, baseType: !5104, size: 64, offset: 1408)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6145, file: !6146, line: 915, baseType: !5104, size: 64, offset: 1472)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !6145, file: !6146, line: 916, baseType: !7, size: 32, offset: 1536)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !6145, file: !6146, line: 917, baseType: !1134, size: 32, offset: 1568)
!6278 = !DILocation(line: 532, column: 18, scope: !6128)
!6279 = !DILocalVariable(name: "nlh", scope: !6128, file: !3, line: 533, type: !6280)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 64)
!6281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !6282, line: 44, size: 128, elements: !6283)
!6282 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!6283 = !{!6284, !6285, !6286, !6287, !6288}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !6281, file: !6282, line: 45, baseType: !276, size: 32)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !6281, file: !6282, line: 46, baseType: !999, size: 16, offset: 32)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !6281, file: !6282, line: 47, baseType: !999, size: 16, offset: 48)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !6281, file: !6282, line: 48, baseType: !276, size: 32, offset: 64)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !6281, file: !6282, line: 49, baseType: !276, size: 32, offset: 96)
!6289 = !DILocation(line: 533, column: 19, scope: !6128)
!6290 = !DILocalVariable(name: "event", scope: !6128, file: !3, line: 534, type: !6291)
!6291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6292, size: 64)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_nl_event", file: !6293, line: 45, size: 320, align: 64, elements: !6294)
!6293 = !DIFile(filename: "./include/uapi/scsi/scsi_netlink_fc.h", directory: "/home/lizy2001/genbc/linux")
!6294 = !{!6295, !6304, !6305, !6306, !6307, !6308, !6309, !6310}
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "snlh", scope: !6292, file: !6293, line: 46, baseType: !6296, size: 64, align: 64)
!6296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_nl_hdr", file: !6297, line: 28, size: 64, align: 64, elements: !6298)
!6297 = !DIFile(filename: "./include/uapi/scsi/scsi_netlink.h", directory: "/home/lizy2001/genbc/linux")
!6298 = !{!6299, !6300, !6301, !6302, !6303}
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6296, file: !6297, line: 29, baseType: !302, size: 8)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "transport", scope: !6296, file: !6297, line: 30, baseType: !302, size: 8, offset: 8)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6296, file: !6297, line: 31, baseType: !999, size: 16, offset: 16)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "msgtype", scope: !6296, file: !6297, line: 32, baseType: !999, size: 16, offset: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "msglen", scope: !6296, file: !6297, line: 33, baseType: !999, size: 16, offset: 48)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !6292, file: !6293, line: 47, baseType: !289, size: 64, offset: 64)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !6292, file: !6293, line: 48, baseType: !289, size: 64, offset: 128)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !6292, file: !6293, line: 49, baseType: !999, size: 16, offset: 192)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "event_datalen", scope: !6292, file: !6293, line: 50, baseType: !999, size: 16, offset: 208)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "event_num", scope: !6292, file: !6293, line: 51, baseType: !276, size: 32, offset: 224)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "event_code", scope: !6292, file: !6293, line: 52, baseType: !276, size: 32, offset: 256)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "event_data", scope: !6292, file: !6293, line: 53, baseType: !276, size: 32, offset: 288)
!6311 = !DILocation(line: 534, column: 22, scope: !6128)
!6312 = !DILocalVariable(name: "name", scope: !6128, file: !3, line: 535, type: !318)
!6313 = !DILocation(line: 535, column: 14, scope: !6128)
!6314 = !DILocalVariable(name: "len", scope: !6128, file: !3, line: 536, type: !274)
!6315 = !DILocation(line: 536, column: 6, scope: !6128)
!6316 = !DILocalVariable(name: "err", scope: !6128, file: !3, line: 537, type: !355)
!6317 = !DILocation(line: 537, column: 6, scope: !6128)
!6318 = !DILocation(line: 539, column: 7, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 539, column: 6)
!6320 = !DILocation(line: 539, column: 16, scope: !6319)
!6321 = !DILocation(line: 539, column: 19, scope: !6319)
!6322 = !DILocation(line: 539, column: 28, scope: !6319)
!6323 = !DILocation(line: 539, column: 6, scope: !6128)
!6324 = !DILocation(line: 540, column: 12, scope: !6319)
!6325 = !DILocation(line: 540, column: 3, scope: !6319)
!6326 = !DILocation(line: 542, column: 7, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 542, column: 6)
!6328 = !DILocation(line: 542, column: 6, scope: !6128)
!6329 = !DILocation(line: 543, column: 7, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 542, column: 21)
!6331 = !DILocation(line: 544, column: 3, scope: !6330)
!6332 = !DILocation(line: 547, column: 8, scope: !6128)
!6333 = !DILocation(line: 547, column: 6, scope: !6128)
!6334 = !DILocation(line: 549, column: 18, scope: !6128)
!6335 = !DILocation(line: 549, column: 8, scope: !6128)
!6336 = !DILocation(line: 549, column: 6, scope: !6128)
!6337 = !DILocation(line: 550, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 550, column: 6)
!6339 = !DILocation(line: 550, column: 6, scope: !6128)
!6340 = !DILocation(line: 551, column: 7, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 550, column: 12)
!6342 = !DILocation(line: 552, column: 3, scope: !6341)
!6343 = !DILocation(line: 555, column: 18, scope: !6128)
!6344 = !DILocation(line: 555, column: 49, scope: !6128)
!6345 = !DILocation(line: 555, column: 8, scope: !6128)
!6346 = !DILocation(line: 555, column: 6, scope: !6128)
!6347 = !DILocation(line: 556, column: 7, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 556, column: 6)
!6349 = !DILocation(line: 556, column: 6, scope: !6128)
!6350 = !DILocation(line: 557, column: 7, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 556, column: 12)
!6352 = !DILocation(line: 558, column: 3, scope: !6351)
!6353 = !DILocation(line: 560, column: 21, scope: !6128)
!6354 = !DILocation(line: 560, column: 10, scope: !6128)
!6355 = !DILocation(line: 560, column: 8, scope: !6128)
!6356 = !DILocation(line: 562, column: 2, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 562, column: 2)
!6358 = !DILocation(line: 564, column: 19, scope: !6128)
!6359 = !DILocation(line: 564, column: 2, scope: !6128)
!6360 = !DILocation(line: 564, column: 9, scope: !6128)
!6361 = !DILocation(line: 564, column: 17, scope: !6128)
!6362 = !DILocation(line: 565, column: 21, scope: !6128)
!6363 = !DILocation(line: 565, column: 2, scope: !6128)
!6364 = !DILocation(line: 565, column: 9, scope: !6128)
!6365 = !DILocation(line: 565, column: 19, scope: !6128)
!6366 = !DILocation(line: 566, column: 19, scope: !6128)
!6367 = !DILocation(line: 566, column: 26, scope: !6128)
!6368 = !DILocation(line: 566, column: 2, scope: !6128)
!6369 = !DILocation(line: 566, column: 9, scope: !6128)
!6370 = !DILocation(line: 566, column: 17, scope: !6128)
!6371 = !DILocation(line: 567, column: 25, scope: !6128)
!6372 = !DILocation(line: 567, column: 2, scope: !6128)
!6373 = !DILocation(line: 567, column: 9, scope: !6128)
!6374 = !DILocation(line: 567, column: 23, scope: !6128)
!6375 = !DILocation(line: 568, column: 21, scope: !6128)
!6376 = !DILocation(line: 568, column: 2, scope: !6128)
!6377 = !DILocation(line: 568, column: 9, scope: !6128)
!6378 = !DILocation(line: 568, column: 19, scope: !6128)
!6379 = !DILocation(line: 569, column: 22, scope: !6128)
!6380 = !DILocation(line: 569, column: 2, scope: !6128)
!6381 = !DILocation(line: 569, column: 9, scope: !6128)
!6382 = !DILocation(line: 569, column: 20, scope: !6128)
!6383 = !DILocation(line: 570, column: 6, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 570, column: 6)
!6385 = !DILocation(line: 570, column: 6, scope: !6128)
!6386 = !DILocation(line: 571, column: 11, scope: !6384)
!6387 = !DILocation(line: 571, column: 18, scope: !6384)
!6388 = !DILocation(line: 571, column: 3, scope: !6384)
!6389 = !DILocation(line: 571, column: 30, scope: !6384)
!6390 = !DILocation(line: 571, column: 40, scope: !6384)
!6391 = !DILocation(line: 573, column: 18, scope: !6128)
!6392 = !DILocation(line: 573, column: 32, scope: !6128)
!6393 = !DILocation(line: 573, column: 2, scope: !6128)
!6394 = !DILocation(line: 575, column: 2, scope: !6128)
!6395 = !DILabel(scope: !6128, name: "send_fail_skb", file: !3, line: 577)
!6396 = !DILocation(line: 577, column: 1, scope: !6128)
!6397 = !DILocation(line: 578, column: 12, scope: !6128)
!6398 = !DILocation(line: 578, column: 2, scope: !6128)
!6399 = !DILabel(scope: !6128, name: "send_fail", file: !3, line: 579)
!6400 = !DILocation(line: 579, column: 1, scope: !6128)
!6401 = !DILocation(line: 580, column: 37, scope: !6128)
!6402 = !DILocation(line: 580, column: 9, scope: !6128)
!6403 = !DILocation(line: 580, column: 7, scope: !6128)
!6404 = !DILocation(line: 583, column: 13, scope: !6128)
!6405 = !DILocation(line: 583, column: 20, scope: !6128)
!6406 = !DILocation(line: 584, column: 4, scope: !6128)
!6407 = !DILocation(line: 584, column: 3, scope: !6128)
!6408 = !DILocation(line: 584, column: 12, scope: !6128)
!6409 = !DILocation(line: 585, column: 4, scope: !6128)
!6410 = !DILocation(line: 585, column: 3, scope: !6128)
!6411 = !DILocation(line: 585, column: 25, scope: !6128)
!6412 = !DILocation(line: 585, column: 16, scope: !6128)
!6413 = !DILocation(line: 585, column: 49, scope: !6128)
!6414 = !DILocation(line: 581, column: 2, scope: !6128)
!6415 = !DILocation(line: 586, column: 2, scope: !6128)
!6416 = !DILocation(line: 587, column: 1, scope: !6128)
!6417 = distinct !DISubprogram(name: "nlmsg_new", scope: !6418, file: !6418, line: 951, type: !6419, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6418 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!6144, !416, !271}
!6421 = !DILocalVariable(name: "payload", arg: 1, scope: !6417, file: !6418, line: 951, type: !416)
!6422 = !DILocation(line: 951, column: 48, scope: !6417)
!6423 = !DILocalVariable(name: "flags", arg: 2, scope: !6417, file: !6418, line: 951, type: !271)
!6424 = !DILocation(line: 951, column: 63, scope: !6417)
!6425 = !DILocation(line: 953, column: 36, scope: !6417)
!6426 = !DILocation(line: 953, column: 19, scope: !6417)
!6427 = !DILocation(line: 953, column: 46, scope: !6417)
!6428 = !DILocation(line: 953, column: 9, scope: !6417)
!6429 = !DILocation(line: 953, column: 2, scope: !6417)
!6430 = distinct !DISubprogram(name: "nlmsg_put", scope: !6418, file: !6418, line: 914, type: !6431, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!6280, !6144, !274, !274, !355, !355, !355}
!6433 = !DILocalVariable(name: "skb", arg: 1, scope: !6430, file: !6418, line: 914, type: !6144)
!6434 = !DILocation(line: 914, column: 58, scope: !6430)
!6435 = !DILocalVariable(name: "portid", arg: 2, scope: !6430, file: !6418, line: 914, type: !274)
!6436 = !DILocation(line: 914, column: 67, scope: !6430)
!6437 = !DILocalVariable(name: "seq", arg: 3, scope: !6430, file: !6418, line: 914, type: !274)
!6438 = !DILocation(line: 914, column: 79, scope: !6430)
!6439 = !DILocalVariable(name: "type", arg: 4, scope: !6430, file: !6418, line: 915, type: !355)
!6440 = !DILocation(line: 915, column: 11, scope: !6430)
!6441 = !DILocalVariable(name: "payload", arg: 5, scope: !6430, file: !6418, line: 915, type: !355)
!6442 = !DILocation(line: 915, column: 21, scope: !6430)
!6443 = !DILocalVariable(name: "flags", arg: 6, scope: !6430, file: !6418, line: 915, type: !355)
!6444 = !DILocation(line: 915, column: 34, scope: !6430)
!6445 = !DILocation(line: 917, column: 6, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6430, file: !6418, line: 917, column: 6)
!6447 = !DILocation(line: 917, column: 6, scope: !6430)
!6448 = !DILocation(line: 918, column: 3, scope: !6446)
!6449 = !DILocation(line: 920, column: 21, scope: !6430)
!6450 = !DILocation(line: 920, column: 26, scope: !6430)
!6451 = !DILocation(line: 920, column: 34, scope: !6430)
!6452 = !DILocation(line: 920, column: 39, scope: !6430)
!6453 = !DILocation(line: 920, column: 45, scope: !6430)
!6454 = !DILocation(line: 920, column: 54, scope: !6430)
!6455 = !DILocation(line: 920, column: 9, scope: !6430)
!6456 = !DILocation(line: 920, column: 2, scope: !6430)
!6457 = !DILocation(line: 921, column: 1, scope: !6430)
!6458 = distinct !DISubprogram(name: "nlmsg_data", scope: !6418, file: !6418, line: 568, type: !6459, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6459 = !DISubroutineType(types: !6460)
!6460 = !{!280, !6461}
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 64)
!6462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6281)
!6463 = !DILocalVariable(name: "nlh", arg: 1, scope: !6458, file: !6418, line: 568, type: !6461)
!6464 = !DILocation(line: 568, column: 55, scope: !6458)
!6465 = !DILocation(line: 570, column: 27, scope: !6458)
!6466 = !DILocation(line: 570, column: 9, scope: !6458)
!6467 = !DILocation(line: 570, column: 31, scope: !6458)
!6468 = !DILocation(line: 570, column: 2, scope: !6458)
!6469 = distinct !DISubprogram(name: "nlmsg_multicast", scope: !6418, file: !6418, line: 1026, type: !6470, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6470 = !DISubroutineType(types: !6471)
!6471 = !{!355, !4411, !6144, !274, !7, !271}
!6472 = !DILocalVariable(name: "sk", arg: 1, scope: !6469, file: !6418, line: 1026, type: !4411)
!6473 = !DILocation(line: 1026, column: 48, scope: !6469)
!6474 = !DILocalVariable(name: "skb", arg: 2, scope: !6469, file: !6418, line: 1026, type: !6144)
!6475 = !DILocation(line: 1026, column: 68, scope: !6469)
!6476 = !DILocalVariable(name: "portid", arg: 3, scope: !6469, file: !6418, line: 1027, type: !274)
!6477 = !DILocation(line: 1027, column: 11, scope: !6469)
!6478 = !DILocalVariable(name: "group", arg: 4, scope: !6469, file: !6418, line: 1027, type: !7)
!6479 = !DILocation(line: 1027, column: 32, scope: !6469)
!6480 = !DILocalVariable(name: "flags", arg: 5, scope: !6469, file: !6418, line: 1027, type: !271)
!6481 = !DILocation(line: 1027, column: 45, scope: !6469)
!6482 = !DILocalVariable(name: "err", scope: !6469, file: !6418, line: 1029, type: !355)
!6483 = !DILocation(line: 1029, column: 6, scope: !6469)
!6484 = !DILocation(line: 1031, column: 30, scope: !6469)
!6485 = !DILocation(line: 1031, column: 2, scope: !6469)
!6486 = !DILocation(line: 1031, column: 18, scope: !6469)
!6487 = !DILocation(line: 1031, column: 28, scope: !6469)
!6488 = !DILocation(line: 1033, column: 26, scope: !6469)
!6489 = !DILocation(line: 1033, column: 30, scope: !6469)
!6490 = !DILocation(line: 1033, column: 35, scope: !6469)
!6491 = !DILocation(line: 1033, column: 43, scope: !6469)
!6492 = !DILocation(line: 1033, column: 50, scope: !6469)
!6493 = !DILocation(line: 1033, column: 8, scope: !6469)
!6494 = !DILocation(line: 1033, column: 6, scope: !6469)
!6495 = !DILocation(line: 1034, column: 6, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6469, file: !6418, line: 1034, column: 6)
!6497 = !DILocation(line: 1034, column: 10, scope: !6496)
!6498 = !DILocation(line: 1034, column: 6, scope: !6469)
!6499 = !DILocation(line: 1035, column: 7, scope: !6496)
!6500 = !DILocation(line: 1035, column: 3, scope: !6496)
!6501 = !DILocation(line: 1037, column: 9, scope: !6469)
!6502 = !DILocation(line: 1037, column: 2, scope: !6469)
!6503 = distinct !DISubprogram(name: "get_fc_host_event_code_name", scope: !3, file: !3, line: 136, type: !6504, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!318, !163}
!6506 = !DILocalVariable(name: "table_key", arg: 1, scope: !6503, file: !3, line: 136, type: !163)
!6507 = !DILocation(line: 136, column: 1, scope: !6503)
!6508 = !DILocalVariable(name: "i", scope: !6503, file: !3, line: 136, type: !355)
!6509 = !DILocalVariable(name: "name", scope: !6503, file: !3, line: 136, type: !278)
!6510 = !DILocation(line: 136, column: 1, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 136, column: 1)
!6512 = !DILocation(line: 136, column: 1, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 136, column: 1)
!6514 = !DILocation(line: 136, column: 1, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 136, column: 1)
!6516 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 136, column: 1)
!6517 = !DILocation(line: 136, column: 1, scope: !6516)
!6518 = !DILocation(line: 136, column: 1, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 136, column: 1)
!6520 = distinct !{!6520, !6510, !6510}
!6521 = distinct !DISubprogram(name: "fc_host_post_event", scope: !3, file: !3, line: 601, type: !6522, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{null, !5046, !274, !163, !274}
!6524 = !DILocalVariable(name: "shost", arg: 1, scope: !6521, file: !3, line: 601, type: !5046)
!6525 = !DILocation(line: 601, column: 38, scope: !6521)
!6526 = !DILocalVariable(name: "event_number", arg: 2, scope: !6521, file: !3, line: 601, type: !274)
!6527 = !DILocation(line: 601, column: 49, scope: !6521)
!6528 = !DILocalVariable(name: "event_code", arg: 3, scope: !6521, file: !3, line: 602, type: !163)
!6529 = !DILocation(line: 602, column: 27, scope: !6521)
!6530 = !DILocalVariable(name: "event_data", arg: 4, scope: !6521, file: !3, line: 602, type: !274)
!6531 = !DILocation(line: 602, column: 43, scope: !6521)
!6532 = !DILocation(line: 604, column: 24, scope: !6521)
!6533 = !DILocation(line: 604, column: 31, scope: !6521)
!6534 = !DILocation(line: 604, column: 45, scope: !6521)
!6535 = !DILocation(line: 605, column: 21, scope: !6521)
!6536 = !DILocation(line: 604, column: 2, scope: !6521)
!6537 = !DILocation(line: 606, column: 1, scope: !6521)
!6538 = distinct !DISubprogram(name: "fc_host_post_vendor_event", scope: !3, file: !3, line: 623, type: !6539, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{null, !5046, !274, !274, !278, !288}
!6541 = !DILocalVariable(name: "shost", arg: 1, scope: !6538, file: !3, line: 623, type: !5046)
!6542 = !DILocation(line: 623, column: 45, scope: !6538)
!6543 = !DILocalVariable(name: "event_number", arg: 2, scope: !6538, file: !3, line: 623, type: !274)
!6544 = !DILocation(line: 623, column: 56, scope: !6538)
!6545 = !DILocalVariable(name: "data_len", arg: 3, scope: !6538, file: !3, line: 624, type: !274)
!6546 = !DILocation(line: 624, column: 7, scope: !6538)
!6547 = !DILocalVariable(name: "data_buf", arg: 4, scope: !6538, file: !3, line: 624, type: !278)
!6548 = !DILocation(line: 624, column: 24, scope: !6538)
!6549 = !DILocalVariable(name: "vendor_id", arg: 5, scope: !6538, file: !3, line: 624, type: !288)
!6550 = !DILocation(line: 624, column: 38, scope: !6538)
!6551 = !DILocation(line: 626, column: 24, scope: !6538)
!6552 = !DILocation(line: 626, column: 31, scope: !6538)
!6553 = !DILocation(line: 627, column: 3, scope: !6538)
!6554 = !DILocation(line: 627, column: 13, scope: !6538)
!6555 = !DILocation(line: 627, column: 23, scope: !6538)
!6556 = !DILocation(line: 626, column: 2, scope: !6538)
!6557 = !DILocation(line: 628, column: 1, scope: !6538)
!6558 = distinct !DISubprogram(name: "fc_host_fpin_rcv", scope: !3, file: !3, line: 641, type: !6559, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{null, !5046, !274, !278}
!6561 = !DILocalVariable(name: "shost", arg: 1, scope: !6558, file: !3, line: 641, type: !5046)
!6562 = !DILocation(line: 641, column: 36, scope: !6558)
!6563 = !DILocalVariable(name: "fpin_len", arg: 2, scope: !6558, file: !3, line: 641, type: !274)
!6564 = !DILocation(line: 641, column: 47, scope: !6558)
!6565 = !DILocalVariable(name: "fpin_buf", arg: 3, scope: !6558, file: !3, line: 641, type: !278)
!6566 = !DILocation(line: 641, column: 63, scope: !6558)
!6567 = !DILocation(line: 643, column: 24, scope: !6558)
!6568 = !DILocation(line: 643, column: 31, scope: !6558)
!6569 = !DILocation(line: 644, column: 24, scope: !6558)
!6570 = !DILocation(line: 644, column: 34, scope: !6558)
!6571 = !DILocation(line: 643, column: 2, scope: !6558)
!6572 = !DILocation(line: 645, column: 1, scope: !6558)
!6573 = distinct !DISubprogram(name: "fc_transport_exit", scope: !3, file: !3, line: 678, type: !2155, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6574 = !DILocation(line: 680, column: 2, scope: !6573)
!6575 = !DILocation(line: 681, column: 2, scope: !6573)
!6576 = !DILocation(line: 682, column: 2, scope: !6573)
!6577 = !DILocation(line: 683, column: 2, scope: !6573)
!6578 = !DILocation(line: 684, column: 1, scope: !6573)
!6579 = distinct !DISubprogram(name: "scsi_is_fc_rport", scope: !3, file: !3, line: 1988, type: !6580, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!355, !4869}
!6582 = !DILocalVariable(name: "dev", arg: 1, scope: !6579, file: !3, line: 1988, type: !4869)
!6583 = !DILocation(line: 1988, column: 43, scope: !6579)
!6584 = !DILocation(line: 1990, column: 9, scope: !6579)
!6585 = !DILocation(line: 1990, column: 14, scope: !6579)
!6586 = !DILocation(line: 1990, column: 22, scope: !6579)
!6587 = !DILocation(line: 1990, column: 2, scope: !6579)
!6588 = distinct !DISubprogram(name: "fc_rport_dev_release", scope: !3, file: !3, line: 1981, type: !4583, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6589 = !DILocalVariable(name: "dev", arg: 1, scope: !6588, file: !3, line: 1981, type: !2400)
!6590 = !DILocation(line: 1981, column: 49, scope: !6588)
!6591 = !DILocalVariable(name: "rport", scope: !6588, file: !3, line: 1983, type: !281)
!6592 = !DILocation(line: 1983, column: 19, scope: !6588)
!6593 = !DILocalVariable(name: "__mptr", scope: !6594, file: !3, line: 1983, type: !280)
!6594 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1983, column: 27)
!6595 = !DILocation(line: 1983, column: 27, scope: !6594)
!6596 = !DILocation(line: 1983, column: 27, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1983, column: 27)
!6598 = !DILocation(line: 1984, column: 13, scope: !6588)
!6599 = !DILocation(line: 1984, column: 18, scope: !6588)
!6600 = !DILocation(line: 1984, column: 2, scope: !6588)
!6601 = !DILocation(line: 1985, column: 8, scope: !6588)
!6602 = !DILocation(line: 1985, column: 2, scope: !6588)
!6603 = !DILocation(line: 1986, column: 1, scope: !6588)
!6604 = distinct !DISubprogram(name: "fc_eh_timed_out", scope: !3, file: !3, line: 2070, type: !5372, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6605 = !DILocalVariable(name: "scmd", arg: 1, scope: !6604, file: !3, line: 2070, type: !5226)
!6606 = !DILocation(line: 2070, column: 35, scope: !6604)
!6607 = !DILocalVariable(name: "rport", scope: !6604, file: !3, line: 2072, type: !281)
!6608 = !DILocation(line: 2072, column: 19, scope: !6604)
!6609 = !DILocation(line: 2072, column: 27, scope: !6604)
!6610 = !DILocalVariable(name: "__mptr", scope: !6611, file: !3, line: 2072, type: !280)
!6611 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2072, column: 27)
!6612 = !DILocation(line: 2072, column: 27, scope: !6611)
!6613 = !DILocation(line: 2072, column: 27, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 2072, column: 27)
!6615 = !DILocation(line: 2074, column: 6, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2074, column: 6)
!6617 = !DILocation(line: 2074, column: 13, scope: !6616)
!6618 = !DILocation(line: 2074, column: 24, scope: !6616)
!6619 = !DILocation(line: 2074, column: 6, scope: !6604)
!6620 = !DILocation(line: 2075, column: 3, scope: !6616)
!6621 = !DILocation(line: 2077, column: 2, scope: !6604)
!6622 = !DILocation(line: 2078, column: 1, scope: !6604)
!6623 = distinct !DISubprogram(name: "scsi_target", scope: !128, file: !128, line: 329, type: !6624, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!5121, !5073}
!6626 = !DILocalVariable(name: "sdev", arg: 1, scope: !6623, file: !128, line: 329, type: !5073)
!6627 = !DILocation(line: 329, column: 67, scope: !6623)
!6628 = !DILocalVariable(name: "__mptr", scope: !6629, file: !128, line: 331, type: !280)
!6629 = distinct !DILexicalBlock(scope: !6623, file: !128, line: 331, column: 9)
!6630 = !DILocation(line: 331, column: 9, scope: !6629)
!6631 = !DILocation(line: 331, column: 9, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6629, file: !128, line: 331, column: 9)
!6633 = !DILocation(line: 331, column: 2, scope: !6623)
!6634 = distinct !DISubprogram(name: "fc_attach_transport", scope: !3, file: !3, line: 2154, type: !6635, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!5411, !5472}
!6637 = !DILocalVariable(name: "ft", arg: 1, scope: !6634, file: !3, line: 2154, type: !5472)
!6638 = !DILocation(line: 2154, column: 50, scope: !6634)
!6639 = !DILocalVariable(name: "count", scope: !6634, file: !3, line: 2156, type: !355)
!6640 = !DILocation(line: 2156, column: 6, scope: !6634)
!6641 = !DILocalVariable(name: "i", scope: !6634, file: !3, line: 2157, type: !4984)
!6642 = !DILocation(line: 2157, column: 22, scope: !6634)
!6643 = !DILocation(line: 2157, column: 26, scope: !6634)
!6644 = !DILocation(line: 2160, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2160, column: 6)
!6646 = !DILocation(line: 2160, column: 6, scope: !6634)
!6647 = !DILocation(line: 2161, column: 3, scope: !6645)
!6648 = !DILocation(line: 2163, column: 32, scope: !6634)
!6649 = !DILocation(line: 2163, column: 35, scope: !6634)
!6650 = !DILocation(line: 2163, column: 2, scope: !6634)
!6651 = !DILocation(line: 2163, column: 5, scope: !6634)
!6652 = !DILocation(line: 2163, column: 7, scope: !6634)
!6653 = !DILocation(line: 2163, column: 20, scope: !6634)
!6654 = !DILocation(line: 2163, column: 23, scope: !6634)
!6655 = !DILocation(line: 2163, column: 29, scope: !6634)
!6656 = !DILocation(line: 2164, column: 2, scope: !6634)
!6657 = !DILocation(line: 2164, column: 5, scope: !6634)
!6658 = !DILocation(line: 2164, column: 7, scope: !6634)
!6659 = !DILocation(line: 2164, column: 20, scope: !6634)
!6660 = !DILocation(line: 2164, column: 23, scope: !6634)
!6661 = !DILocation(line: 2164, column: 29, scope: !6634)
!6662 = !DILocation(line: 2165, column: 2, scope: !6634)
!6663 = !DILocation(line: 2165, column: 5, scope: !6634)
!6664 = !DILocation(line: 2165, column: 7, scope: !6634)
!6665 = !DILocation(line: 2165, column: 20, scope: !6634)
!6666 = !DILocation(line: 2165, column: 23, scope: !6634)
!6667 = !DILocation(line: 2165, column: 29, scope: !6634)
!6668 = !DILocation(line: 2166, column: 2, scope: !6634)
!6669 = !DILocation(line: 2166, column: 5, scope: !6634)
!6670 = !DILocation(line: 2166, column: 7, scope: !6634)
!6671 = !DILocation(line: 2166, column: 19, scope: !6634)
!6672 = !DILocation(line: 2167, column: 32, scope: !6634)
!6673 = !DILocation(line: 2167, column: 35, scope: !6634)
!6674 = !DILocation(line: 2167, column: 37, scope: !6634)
!6675 = !DILocation(line: 2167, column: 2, scope: !6634)
!6676 = !DILocation(line: 2169, column: 30, scope: !6634)
!6677 = !DILocation(line: 2169, column: 33, scope: !6634)
!6678 = !DILocation(line: 2169, column: 2, scope: !6634)
!6679 = !DILocation(line: 2169, column: 5, scope: !6634)
!6680 = !DILocation(line: 2169, column: 7, scope: !6634)
!6681 = !DILocation(line: 2169, column: 18, scope: !6634)
!6682 = !DILocation(line: 2169, column: 21, scope: !6634)
!6683 = !DILocation(line: 2169, column: 27, scope: !6634)
!6684 = !DILocation(line: 2170, column: 2, scope: !6634)
!6685 = !DILocation(line: 2170, column: 5, scope: !6634)
!6686 = !DILocation(line: 2170, column: 7, scope: !6634)
!6687 = !DILocation(line: 2170, column: 18, scope: !6634)
!6688 = !DILocation(line: 2170, column: 21, scope: !6634)
!6689 = !DILocation(line: 2170, column: 27, scope: !6634)
!6690 = !DILocation(line: 2171, column: 2, scope: !6634)
!6691 = !DILocation(line: 2171, column: 5, scope: !6634)
!6692 = !DILocation(line: 2171, column: 7, scope: !6634)
!6693 = !DILocation(line: 2171, column: 18, scope: !6634)
!6694 = !DILocation(line: 2171, column: 21, scope: !6634)
!6695 = !DILocation(line: 2171, column: 27, scope: !6634)
!6696 = !DILocation(line: 2172, column: 2, scope: !6634)
!6697 = !DILocation(line: 2172, column: 5, scope: !6634)
!6698 = !DILocation(line: 2172, column: 7, scope: !6634)
!6699 = !DILocation(line: 2172, column: 17, scope: !6634)
!6700 = !DILocation(line: 2173, column: 6, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2173, column: 6)
!6702 = !DILocation(line: 2173, column: 10, scope: !6701)
!6703 = !DILocation(line: 2173, column: 6, scope: !6634)
!6704 = !DILocation(line: 2174, column: 3, scope: !6701)
!6705 = !DILocation(line: 2174, column: 6, scope: !6701)
!6706 = !DILocation(line: 2174, column: 8, scope: !6701)
!6707 = !DILocation(line: 2174, column: 19, scope: !6701)
!6708 = !DILocation(line: 2174, column: 30, scope: !6701)
!6709 = !DILocation(line: 2175, column: 32, scope: !6634)
!6710 = !DILocation(line: 2175, column: 35, scope: !6634)
!6711 = !DILocation(line: 2175, column: 37, scope: !6634)
!6712 = !DILocation(line: 2175, column: 2, scope: !6634)
!6713 = !DILocation(line: 2177, column: 33, scope: !6634)
!6714 = !DILocation(line: 2177, column: 36, scope: !6634)
!6715 = !DILocation(line: 2177, column: 2, scope: !6634)
!6716 = !DILocation(line: 2177, column: 5, scope: !6634)
!6717 = !DILocation(line: 2177, column: 21, scope: !6634)
!6718 = !DILocation(line: 2177, column: 24, scope: !6634)
!6719 = !DILocation(line: 2177, column: 30, scope: !6634)
!6720 = !DILocation(line: 2178, column: 2, scope: !6634)
!6721 = !DILocation(line: 2178, column: 5, scope: !6634)
!6722 = !DILocation(line: 2178, column: 21, scope: !6634)
!6723 = !DILocation(line: 2178, column: 24, scope: !6634)
!6724 = !DILocation(line: 2178, column: 30, scope: !6634)
!6725 = !DILocation(line: 2179, column: 2, scope: !6634)
!6726 = !DILocation(line: 2179, column: 5, scope: !6634)
!6727 = !DILocation(line: 2179, column: 21, scope: !6634)
!6728 = !DILocation(line: 2179, column: 24, scope: !6634)
!6729 = !DILocation(line: 2179, column: 30, scope: !6634)
!6730 = !DILocation(line: 2180, column: 32, scope: !6634)
!6731 = !DILocation(line: 2180, column: 35, scope: !6634)
!6732 = !DILocation(line: 2180, column: 2, scope: !6634)
!6733 = !DILocation(line: 2182, column: 33, scope: !6634)
!6734 = !DILocation(line: 2182, column: 36, scope: !6634)
!6735 = !DILocation(line: 2182, column: 2, scope: !6634)
!6736 = !DILocation(line: 2182, column: 5, scope: !6634)
!6737 = !DILocation(line: 2182, column: 21, scope: !6634)
!6738 = !DILocation(line: 2182, column: 24, scope: !6634)
!6739 = !DILocation(line: 2182, column: 30, scope: !6634)
!6740 = !DILocation(line: 2183, column: 2, scope: !6634)
!6741 = !DILocation(line: 2183, column: 5, scope: !6634)
!6742 = !DILocation(line: 2183, column: 21, scope: !6634)
!6743 = !DILocation(line: 2183, column: 24, scope: !6634)
!6744 = !DILocation(line: 2183, column: 30, scope: !6634)
!6745 = !DILocation(line: 2184, column: 2, scope: !6634)
!6746 = !DILocation(line: 2184, column: 5, scope: !6634)
!6747 = !DILocation(line: 2184, column: 21, scope: !6634)
!6748 = !DILocation(line: 2184, column: 24, scope: !6634)
!6749 = !DILocation(line: 2184, column: 30, scope: !6634)
!6750 = !DILocation(line: 2185, column: 32, scope: !6634)
!6751 = !DILocation(line: 2185, column: 35, scope: !6634)
!6752 = !DILocation(line: 2185, column: 2, scope: !6634)
!6753 = !DILocation(line: 2187, column: 9, scope: !6634)
!6754 = !DILocation(line: 2187, column: 2, scope: !6634)
!6755 = !DILocation(line: 2187, column: 5, scope: !6634)
!6756 = !DILocation(line: 2187, column: 7, scope: !6634)
!6757 = !DILocation(line: 2190, column: 2, scope: !6634)
!6758 = !DILocation(line: 2190, column: 5, scope: !6634)
!6759 = !DILocation(line: 2190, column: 7, scope: !6634)
!6760 = !DILocation(line: 2190, column: 25, scope: !6634)
!6761 = !DILocation(line: 2192, column: 2, scope: !6634)
!6762 = !DILocation(line: 2192, column: 5, scope: !6634)
!6763 = !DILocation(line: 2192, column: 7, scope: !6634)
!6764 = !DILocation(line: 2192, column: 17, scope: !6634)
!6765 = !DILocation(line: 2197, column: 8, scope: !6634)
!6766 = !DILocation(line: 2198, column: 2, scope: !6634)
!6767 = !DILocation(line: 2198, column: 2, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2198, column: 2)
!6769 = !DILocation(line: 2199, column: 2, scope: !6634)
!6770 = !DILocation(line: 2199, column: 2, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2199, column: 2)
!6772 = !DILocation(line: 2200, column: 2, scope: !6634)
!6773 = !DILocation(line: 2200, column: 2, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2200, column: 2)
!6775 = !DILocation(line: 2202, column: 2, scope: !6634)
!6776 = !DILocation(line: 2202, column: 2, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 2202, column: 2)
!6778 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2202, column: 2)
!6779 = !DILocation(line: 2202, column: 2, scope: !6778)
!6780 = !DILocation(line: 2202, column: 2, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 2202, column: 2)
!6782 = !DILocation(line: 2202, column: 2, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 2202, column: 2)
!6784 = !DILocation(line: 2202, column: 2, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 2202, column: 2)
!6786 = !{i32 -2140230300, i32 -2140230271, i32 -2140230225, i32 -2140230167, i32 -2140230113, i32 -2140230059, i32 -2140230004, i32 -2140229973}
!6787 = !DILocation(line: 2202, column: 2, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 2202, column: 2)
!6789 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 2202, column: 2)
!6790 = !{i32 -2140229517, i32 -2140229510, i32 -2140229456, i32 -2140229425, i32 -2140229395}
!6791 = !DILocation(line: 2202, column: 2, scope: !6789)
!6792 = !DILocation(line: 2204, column: 2, scope: !6634)
!6793 = !DILocation(line: 2204, column: 5, scope: !6634)
!6794 = !DILocation(line: 2204, column: 19, scope: !6634)
!6795 = !DILocation(line: 2204, column: 26, scope: !6634)
!6796 = !DILocation(line: 2210, column: 7, scope: !6634)
!6797 = !DILocation(line: 2211, column: 2, scope: !6634)
!6798 = !DILocation(line: 2211, column: 2, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2211, column: 2)
!6800 = !DILocation(line: 2212, column: 2, scope: !6634)
!6801 = !DILocation(line: 2212, column: 2, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2212, column: 2)
!6803 = !DILocation(line: 2213, column: 2, scope: !6634)
!6804 = !DILocation(line: 2213, column: 2, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2213, column: 2)
!6806 = !DILocation(line: 2214, column: 2, scope: !6634)
!6807 = !DILocation(line: 2214, column: 2, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2214, column: 2)
!6809 = !DILocation(line: 2215, column: 2, scope: !6634)
!6810 = !DILocation(line: 2215, column: 2, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2215, column: 2)
!6812 = !DILocation(line: 2216, column: 2, scope: !6634)
!6813 = !DILocation(line: 2216, column: 2, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2216, column: 2)
!6815 = !DILocation(line: 2217, column: 2, scope: !6634)
!6816 = !DILocation(line: 2217, column: 2, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2217, column: 2)
!6818 = !DILocation(line: 2218, column: 6, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2218, column: 6)
!6820 = !DILocation(line: 2218, column: 10, scope: !6819)
!6821 = !DILocation(line: 2218, column: 6, scope: !6634)
!6822 = !DILocation(line: 2219, column: 3, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 2218, column: 24)
!6824 = !DILocation(line: 2220, column: 3, scope: !6823)
!6825 = !DILocation(line: 2221, column: 2, scope: !6823)
!6826 = !DILocation(line: 2222, column: 2, scope: !6634)
!6827 = !DILocation(line: 2222, column: 2, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2222, column: 2)
!6829 = !DILocation(line: 2223, column: 2, scope: !6634)
!6830 = !DILocation(line: 2223, column: 2, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2223, column: 2)
!6832 = !DILocation(line: 2224, column: 2, scope: !6634)
!6833 = !DILocation(line: 2224, column: 2, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2224, column: 2)
!6835 = !DILocation(line: 2225, column: 2, scope: !6634)
!6836 = !DILocation(line: 2225, column: 2, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2225, column: 2)
!6838 = !DILocation(line: 2226, column: 2, scope: !6634)
!6839 = !DILocation(line: 2226, column: 2, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2226, column: 2)
!6841 = !DILocation(line: 2227, column: 2, scope: !6634)
!6842 = !DILocation(line: 2227, column: 2, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2227, column: 2)
!6844 = !DILocation(line: 2228, column: 2, scope: !6634)
!6845 = !DILocation(line: 2228, column: 2, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2228, column: 2)
!6847 = !DILocation(line: 2229, column: 2, scope: !6634)
!6848 = !DILocation(line: 2229, column: 2, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2229, column: 2)
!6850 = !DILocation(line: 2231, column: 2, scope: !6634)
!6851 = !DILocation(line: 2231, column: 2, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2231, column: 2)
!6853 = !DILocation(line: 2232, column: 2, scope: !6634)
!6854 = !DILocation(line: 2232, column: 2, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2232, column: 2)
!6856 = !DILocation(line: 2233, column: 2, scope: !6634)
!6857 = !DILocation(line: 2233, column: 2, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2233, column: 2)
!6859 = !DILocation(line: 2234, column: 2, scope: !6634)
!6860 = !DILocation(line: 2234, column: 2, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2234, column: 2)
!6862 = !DILocation(line: 2235, column: 2, scope: !6634)
!6863 = !DILocation(line: 2235, column: 2, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2235, column: 2)
!6865 = !DILocation(line: 2236, column: 2, scope: !6634)
!6866 = !DILocation(line: 2236, column: 2, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2236, column: 2)
!6868 = !DILocation(line: 2237, column: 2, scope: !6634)
!6869 = !DILocation(line: 2237, column: 2, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2237, column: 2)
!6871 = !DILocation(line: 2238, column: 2, scope: !6634)
!6872 = !DILocation(line: 2238, column: 2, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2238, column: 2)
!6874 = !DILocation(line: 2238, column: 2, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 2238, column: 2)
!6876 = !DILocation(line: 2238, column: 2, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2238, column: 2)
!6878 = !DILocation(line: 2241, column: 2, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2241, column: 2)
!6880 = !DILocation(line: 2242, column: 2, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2242, column: 2)
!6882 = !DILocation(line: 2243, column: 6, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2243, column: 6)
!6884 = !DILocation(line: 2243, column: 10, scope: !6883)
!6885 = !DILocation(line: 2243, column: 6, scope: !6634)
!6886 = !DILocation(line: 2244, column: 3, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2244, column: 3)
!6888 = !DILocation(line: 2245, column: 6, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2245, column: 6)
!6890 = !DILocation(line: 2245, column: 10, scope: !6889)
!6891 = !DILocation(line: 2245, column: 6, scope: !6634)
!6892 = !DILocation(line: 2246, column: 3, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 2246, column: 3)
!6894 = !DILocation(line: 2247, column: 6, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2247, column: 6)
!6896 = !DILocation(line: 2247, column: 10, scope: !6895)
!6897 = !DILocation(line: 2247, column: 6, scope: !6634)
!6898 = !DILocation(line: 2248, column: 3, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 2248, column: 3)
!6900 = !DILocation(line: 2250, column: 2, scope: !6634)
!6901 = !DILocation(line: 2250, column: 2, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 2250, column: 2)
!6903 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2250, column: 2)
!6904 = !DILocation(line: 2250, column: 2, scope: !6903)
!6905 = !DILocation(line: 2250, column: 2, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 2250, column: 2)
!6907 = !DILocation(line: 2250, column: 2, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 2250, column: 2)
!6909 = !DILocation(line: 2250, column: 2, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 2250, column: 2)
!6911 = !{i32 -2140218093, i32 -2140218064, i32 -2140218018, i32 -2140217960, i32 -2140217906, i32 -2140217852, i32 -2140217797, i32 -2140217766}
!6912 = !DILocation(line: 2250, column: 2, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 2250, column: 2)
!6914 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 2250, column: 2)
!6915 = !{i32 -2140217310, i32 -2140217303, i32 -2140217249, i32 -2140217218, i32 -2140217188}
!6916 = !DILocation(line: 2250, column: 2, scope: !6914)
!6917 = !DILocation(line: 2252, column: 2, scope: !6634)
!6918 = !DILocation(line: 2252, column: 5, scope: !6634)
!6919 = !DILocation(line: 2252, column: 16, scope: !6634)
!6920 = !DILocation(line: 2252, column: 23, scope: !6634)
!6921 = !DILocation(line: 2257, column: 7, scope: !6634)
!6922 = !DILocation(line: 2258, column: 2, scope: !6634)
!6923 = !DILocation(line: 2258, column: 2, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2258, column: 2)
!6925 = !DILocation(line: 2259, column: 2, scope: !6634)
!6926 = !DILocation(line: 2259, column: 2, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2259, column: 2)
!6928 = !DILocation(line: 2260, column: 2, scope: !6634)
!6929 = !DILocation(line: 2260, column: 2, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2260, column: 2)
!6931 = !DILocation(line: 2260, column: 2, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2260, column: 2)
!6933 = !DILocation(line: 2260, column: 2, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2260, column: 2)
!6935 = !DILocation(line: 2261, column: 2, scope: !6634)
!6936 = !DILocation(line: 2262, column: 2, scope: !6634)
!6937 = !DILocation(line: 2263, column: 2, scope: !6634)
!6938 = !DILocation(line: 2264, column: 2, scope: !6634)
!6939 = !DILocation(line: 2265, column: 2, scope: !6634)
!6940 = !DILocation(line: 2266, column: 2, scope: !6634)
!6941 = !DILocation(line: 2267, column: 2, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2267, column: 2)
!6943 = !DILocation(line: 2269, column: 2, scope: !6634)
!6944 = !DILocation(line: 2269, column: 2, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 2269, column: 2)
!6946 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2269, column: 2)
!6947 = !DILocation(line: 2269, column: 2, scope: !6946)
!6948 = !DILocation(line: 2269, column: 2, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 2269, column: 2)
!6950 = !DILocation(line: 2269, column: 2, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2269, column: 2)
!6952 = !DILocation(line: 2269, column: 2, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2269, column: 2)
!6954 = !{i32 -2140209295, i32 -2140209266, i32 -2140209220, i32 -2140209162, i32 -2140209108, i32 -2140209054, i32 -2140208999, i32 -2140208968}
!6955 = !DILocation(line: 2269, column: 2, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 2269, column: 2)
!6957 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2269, column: 2)
!6958 = !{i32 -2140208512, i32 -2140208505, i32 -2140208451, i32 -2140208420, i32 -2140208390}
!6959 = !DILocation(line: 2269, column: 2, scope: !6957)
!6960 = !DILocation(line: 2271, column: 2, scope: !6634)
!6961 = !DILocation(line: 2271, column: 5, scope: !6634)
!6962 = !DILocation(line: 2271, column: 17, scope: !6634)
!6963 = !DILocation(line: 2271, column: 24, scope: !6634)
!6964 = !DILocation(line: 2276, column: 7, scope: !6634)
!6965 = !DILocation(line: 2277, column: 2, scope: !6634)
!6966 = !DILocation(line: 2278, column: 2, scope: !6634)
!6967 = !DILocation(line: 2279, column: 2, scope: !6634)
!6968 = !DILocation(line: 2280, column: 2, scope: !6634)
!6969 = !DILocation(line: 2281, column: 2, scope: !6634)
!6970 = !DILocation(line: 2282, column: 2, scope: !6634)
!6971 = !DILocation(line: 2283, column: 2, scope: !6634)
!6972 = !DILocation(line: 2283, column: 2, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2283, column: 2)
!6974 = !DILocation(line: 2283, column: 2, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 2283, column: 2)
!6976 = !DILocation(line: 2284, column: 2, scope: !6634)
!6977 = !DILocation(line: 2284, column: 2, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2284, column: 2)
!6979 = !DILocation(line: 2285, column: 2, scope: !6634)
!6980 = !DILocation(line: 2285, column: 2, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2285, column: 2)
!6982 = !DILocation(line: 2287, column: 2, scope: !6634)
!6983 = !DILocation(line: 2287, column: 2, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 2287, column: 2)
!6985 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2287, column: 2)
!6986 = !DILocation(line: 2287, column: 2, scope: !6985)
!6987 = !DILocation(line: 2287, column: 2, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 2287, column: 2)
!6989 = !DILocation(line: 2287, column: 2, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2287, column: 2)
!6991 = !DILocation(line: 2287, column: 2, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2287, column: 2)
!6993 = !{i32 -2140205241, i32 -2140205212, i32 -2140205166, i32 -2140205108, i32 -2140205054, i32 -2140205000, i32 -2140204945, i32 -2140204914}
!6994 = !DILocation(line: 2287, column: 2, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 2287, column: 2)
!6996 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2287, column: 2)
!6997 = !{i32 -2140204458, i32 -2140204451, i32 -2140204397, i32 -2140204366, i32 -2140204336}
!6998 = !DILocation(line: 2287, column: 2, scope: !6996)
!6999 = !DILocation(line: 2289, column: 2, scope: !6634)
!7000 = !DILocation(line: 2289, column: 5, scope: !6634)
!7001 = !DILocation(line: 2289, column: 17, scope: !6634)
!7002 = !DILocation(line: 2289, column: 24, scope: !6634)
!7003 = !DILocation(line: 2291, column: 10, scope: !6634)
!7004 = !DILocation(line: 2291, column: 13, scope: !6634)
!7005 = !DILocation(line: 2291, column: 2, scope: !6634)
!7006 = !DILocation(line: 2292, column: 1, scope: !6634)
!7007 = distinct !DISubprogram(name: "kzalloc", scope: !226, file: !226, line: 662, type: !7008, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{!280, !416, !271}
!7010 = !DILocalVariable(name: "s", arg: 1, scope: !7011, file: !226, line: 445, type: !1232)
!7011 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !226, file: !226, line: 445, type: !7012, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{!280, !1232, !271, !416}
!7014 = !DILocation(line: 445, column: 72, scope: !7011, inlinedAt: !7015)
!7015 = distinct !DILocation(line: 552, column: 10, scope: !7016, inlinedAt: !7019)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !226, line: 540, column: 34)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !226, line: 540, column: 6)
!7018 = distinct !DISubprogram(name: "kmalloc", scope: !226, file: !226, line: 538, type: !7008, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7019 = distinct !DILocation(line: 664, column: 9, scope: !7007)
!7020 = !DILocalVariable(name: "flags", arg: 2, scope: !7011, file: !226, line: 446, type: !271)
!7021 = !DILocation(line: 446, column: 9, scope: !7011, inlinedAt: !7015)
!7022 = !DILocalVariable(name: "size", arg: 3, scope: !7011, file: !226, line: 446, type: !416)
!7023 = !DILocation(line: 446, column: 23, scope: !7011, inlinedAt: !7015)
!7024 = !DILocalVariable(name: "ret", scope: !7011, file: !226, line: 448, type: !280)
!7025 = !DILocation(line: 448, column: 8, scope: !7011, inlinedAt: !7015)
!7026 = !DILocalVariable(name: "flags", arg: 1, scope: !7027, file: !226, line: 318, type: !271)
!7027 = distinct !DISubprogram(name: "kmalloc_type", scope: !226, file: !226, line: 318, type: !7028, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{!225, !271}
!7030 = !DILocation(line: 318, column: 67, scope: !7027, inlinedAt: !7031)
!7031 = distinct !DILocation(line: 553, column: 20, scope: !7016, inlinedAt: !7019)
!7032 = !DILocalVariable(name: "size", arg: 1, scope: !7033, file: !226, line: 346, type: !416)
!7033 = distinct !DISubprogram(name: "kmalloc_index", scope: !226, file: !226, line: 346, type: !7034, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!7, !416}
!7036 = !DILocation(line: 346, column: 58, scope: !7033, inlinedAt: !7037)
!7037 = distinct !DILocation(line: 547, column: 11, scope: !7016, inlinedAt: !7019)
!7038 = !DILocalVariable(name: "size", arg: 1, scope: !7039, file: !226, line: 472, type: !416)
!7039 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !226, file: !226, line: 472, type: !7040, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!280, !416, !271, !7}
!7042 = !DILocation(line: 472, column: 28, scope: !7039, inlinedAt: !7043)
!7043 = distinct !DILocation(line: 481, column: 9, scope: !7044, inlinedAt: !7045)
!7044 = distinct !DISubprogram(name: "kmalloc_large", scope: !226, file: !226, line: 478, type: !7008, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7045 = distinct !DILocation(line: 545, column: 11, scope: !7046, inlinedAt: !7019)
!7046 = distinct !DILexicalBlock(scope: !7016, file: !226, line: 544, column: 7)
!7047 = !DILocalVariable(name: "flags", arg: 2, scope: !7039, file: !226, line: 472, type: !271)
!7048 = !DILocation(line: 472, column: 40, scope: !7039, inlinedAt: !7043)
!7049 = !DILocalVariable(name: "order", arg: 3, scope: !7039, file: !226, line: 472, type: !7)
!7050 = !DILocation(line: 472, column: 60, scope: !7039, inlinedAt: !7043)
!7051 = !DILocalVariable(name: "size", arg: 1, scope: !7044, file: !226, line: 478, type: !416)
!7052 = !DILocation(line: 478, column: 51, scope: !7044, inlinedAt: !7045)
!7053 = !DILocalVariable(name: "flags", arg: 2, scope: !7044, file: !226, line: 478, type: !271)
!7054 = !DILocation(line: 478, column: 63, scope: !7044, inlinedAt: !7045)
!7055 = !DILocalVariable(name: "order", scope: !7044, file: !226, line: 480, type: !7)
!7056 = !DILocation(line: 480, column: 15, scope: !7044, inlinedAt: !7045)
!7057 = !DILocalVariable(name: "size", arg: 1, scope: !7018, file: !226, line: 538, type: !416)
!7058 = !DILocation(line: 538, column: 45, scope: !7018, inlinedAt: !7019)
!7059 = !DILocalVariable(name: "flags", arg: 2, scope: !7018, file: !226, line: 538, type: !271)
!7060 = !DILocation(line: 538, column: 57, scope: !7018, inlinedAt: !7019)
!7061 = !DILocalVariable(name: "index", scope: !7016, file: !226, line: 542, type: !7)
!7062 = !DILocation(line: 542, column: 16, scope: !7016, inlinedAt: !7019)
!7063 = !DILocalVariable(name: "size", arg: 1, scope: !7007, file: !226, line: 662, type: !416)
!7064 = !DILocation(line: 662, column: 36, scope: !7007)
!7065 = !DILocalVariable(name: "flags", arg: 2, scope: !7007, file: !226, line: 662, type: !271)
!7066 = !DILocation(line: 662, column: 48, scope: !7007)
!7067 = !DILocation(line: 664, column: 17, scope: !7007)
!7068 = !DILocation(line: 664, column: 23, scope: !7007)
!7069 = !DILocation(line: 664, column: 29, scope: !7007)
!7070 = !DILocation(line: 540, column: 27, scope: !7017, inlinedAt: !7019)
!7071 = !DILocation(line: 540, column: 6, scope: !7017, inlinedAt: !7019)
!7072 = !DILocation(line: 540, column: 6, scope: !7018, inlinedAt: !7019)
!7073 = !DILocation(line: 544, column: 7, scope: !7046, inlinedAt: !7019)
!7074 = !DILocation(line: 544, column: 12, scope: !7046, inlinedAt: !7019)
!7075 = !DILocation(line: 544, column: 7, scope: !7016, inlinedAt: !7019)
!7076 = !DILocation(line: 545, column: 25, scope: !7046, inlinedAt: !7019)
!7077 = !DILocation(line: 545, column: 31, scope: !7046, inlinedAt: !7019)
!7078 = !DILocation(line: 480, column: 33, scope: !7044, inlinedAt: !7045)
!7079 = !DILocation(line: 480, column: 23, scope: !7044, inlinedAt: !7045)
!7080 = !DILocation(line: 481, column: 29, scope: !7044, inlinedAt: !7045)
!7081 = !DILocation(line: 481, column: 35, scope: !7044, inlinedAt: !7045)
!7082 = !DILocation(line: 481, column: 42, scope: !7044, inlinedAt: !7045)
!7083 = !DILocation(line: 474, column: 23, scope: !7039, inlinedAt: !7043)
!7084 = !DILocation(line: 474, column: 29, scope: !7039, inlinedAt: !7043)
!7085 = !DILocation(line: 474, column: 36, scope: !7039, inlinedAt: !7043)
!7086 = !DILocation(line: 474, column: 9, scope: !7039, inlinedAt: !7043)
!7087 = !DILocation(line: 545, column: 4, scope: !7046, inlinedAt: !7019)
!7088 = !DILocation(line: 547, column: 25, scope: !7016, inlinedAt: !7019)
!7089 = !DILocation(line: 348, column: 7, scope: !7090, inlinedAt: !7037)
!7090 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 348, column: 6)
!7091 = !DILocation(line: 348, column: 6, scope: !7033, inlinedAt: !7037)
!7092 = !DILocation(line: 349, column: 3, scope: !7090, inlinedAt: !7037)
!7093 = !DILocation(line: 351, column: 6, scope: !7094, inlinedAt: !7037)
!7094 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 351, column: 6)
!7095 = !DILocation(line: 351, column: 11, scope: !7094, inlinedAt: !7037)
!7096 = !DILocation(line: 351, column: 6, scope: !7033, inlinedAt: !7037)
!7097 = !DILocation(line: 352, column: 3, scope: !7094, inlinedAt: !7037)
!7098 = !DILocation(line: 354, column: 32, scope: !7099, inlinedAt: !7037)
!7099 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 354, column: 6)
!7100 = !DILocation(line: 354, column: 37, scope: !7099, inlinedAt: !7037)
!7101 = !DILocation(line: 354, column: 42, scope: !7099, inlinedAt: !7037)
!7102 = !DILocation(line: 354, column: 45, scope: !7099, inlinedAt: !7037)
!7103 = !DILocation(line: 354, column: 50, scope: !7099, inlinedAt: !7037)
!7104 = !DILocation(line: 354, column: 6, scope: !7033, inlinedAt: !7037)
!7105 = !DILocation(line: 355, column: 3, scope: !7099, inlinedAt: !7037)
!7106 = !DILocation(line: 356, column: 32, scope: !7107, inlinedAt: !7037)
!7107 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 356, column: 6)
!7108 = !DILocation(line: 356, column: 37, scope: !7107, inlinedAt: !7037)
!7109 = !DILocation(line: 356, column: 43, scope: !7107, inlinedAt: !7037)
!7110 = !DILocation(line: 356, column: 46, scope: !7107, inlinedAt: !7037)
!7111 = !DILocation(line: 356, column: 51, scope: !7107, inlinedAt: !7037)
!7112 = !DILocation(line: 356, column: 6, scope: !7033, inlinedAt: !7037)
!7113 = !DILocation(line: 357, column: 3, scope: !7107, inlinedAt: !7037)
!7114 = !DILocation(line: 358, column: 6, scope: !7115, inlinedAt: !7037)
!7115 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 358, column: 6)
!7116 = !DILocation(line: 358, column: 11, scope: !7115, inlinedAt: !7037)
!7117 = !DILocation(line: 358, column: 6, scope: !7033, inlinedAt: !7037)
!7118 = !DILocation(line: 358, column: 26, scope: !7115, inlinedAt: !7037)
!7119 = !DILocation(line: 359, column: 6, scope: !7120, inlinedAt: !7037)
!7120 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 359, column: 6)
!7121 = !DILocation(line: 359, column: 11, scope: !7120, inlinedAt: !7037)
!7122 = !DILocation(line: 359, column: 6, scope: !7033, inlinedAt: !7037)
!7123 = !DILocation(line: 359, column: 26, scope: !7120, inlinedAt: !7037)
!7124 = !DILocation(line: 360, column: 6, scope: !7125, inlinedAt: !7037)
!7125 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 360, column: 6)
!7126 = !DILocation(line: 360, column: 11, scope: !7125, inlinedAt: !7037)
!7127 = !DILocation(line: 360, column: 6, scope: !7033, inlinedAt: !7037)
!7128 = !DILocation(line: 360, column: 26, scope: !7125, inlinedAt: !7037)
!7129 = !DILocation(line: 361, column: 6, scope: !7130, inlinedAt: !7037)
!7130 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 361, column: 6)
!7131 = !DILocation(line: 361, column: 11, scope: !7130, inlinedAt: !7037)
!7132 = !DILocation(line: 361, column: 6, scope: !7033, inlinedAt: !7037)
!7133 = !DILocation(line: 361, column: 26, scope: !7130, inlinedAt: !7037)
!7134 = !DILocation(line: 362, column: 6, scope: !7135, inlinedAt: !7037)
!7135 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 362, column: 6)
!7136 = !DILocation(line: 362, column: 11, scope: !7135, inlinedAt: !7037)
!7137 = !DILocation(line: 362, column: 6, scope: !7033, inlinedAt: !7037)
!7138 = !DILocation(line: 362, column: 26, scope: !7135, inlinedAt: !7037)
!7139 = !DILocation(line: 363, column: 6, scope: !7140, inlinedAt: !7037)
!7140 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 363, column: 6)
!7141 = !DILocation(line: 363, column: 11, scope: !7140, inlinedAt: !7037)
!7142 = !DILocation(line: 363, column: 6, scope: !7033, inlinedAt: !7037)
!7143 = !DILocation(line: 363, column: 26, scope: !7140, inlinedAt: !7037)
!7144 = !DILocation(line: 364, column: 6, scope: !7145, inlinedAt: !7037)
!7145 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 364, column: 6)
!7146 = !DILocation(line: 364, column: 11, scope: !7145, inlinedAt: !7037)
!7147 = !DILocation(line: 364, column: 6, scope: !7033, inlinedAt: !7037)
!7148 = !DILocation(line: 364, column: 26, scope: !7145, inlinedAt: !7037)
!7149 = !DILocation(line: 365, column: 6, scope: !7150, inlinedAt: !7037)
!7150 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 365, column: 6)
!7151 = !DILocation(line: 365, column: 11, scope: !7150, inlinedAt: !7037)
!7152 = !DILocation(line: 365, column: 6, scope: !7033, inlinedAt: !7037)
!7153 = !DILocation(line: 365, column: 26, scope: !7150, inlinedAt: !7037)
!7154 = !DILocation(line: 366, column: 6, scope: !7155, inlinedAt: !7037)
!7155 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 366, column: 6)
!7156 = !DILocation(line: 366, column: 11, scope: !7155, inlinedAt: !7037)
!7157 = !DILocation(line: 366, column: 6, scope: !7033, inlinedAt: !7037)
!7158 = !DILocation(line: 366, column: 26, scope: !7155, inlinedAt: !7037)
!7159 = !DILocation(line: 367, column: 6, scope: !7160, inlinedAt: !7037)
!7160 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 367, column: 6)
!7161 = !DILocation(line: 367, column: 11, scope: !7160, inlinedAt: !7037)
!7162 = !DILocation(line: 367, column: 6, scope: !7033, inlinedAt: !7037)
!7163 = !DILocation(line: 367, column: 26, scope: !7160, inlinedAt: !7037)
!7164 = !DILocation(line: 368, column: 6, scope: !7165, inlinedAt: !7037)
!7165 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 368, column: 6)
!7166 = !DILocation(line: 368, column: 11, scope: !7165, inlinedAt: !7037)
!7167 = !DILocation(line: 368, column: 6, scope: !7033, inlinedAt: !7037)
!7168 = !DILocation(line: 368, column: 26, scope: !7165, inlinedAt: !7037)
!7169 = !DILocation(line: 369, column: 6, scope: !7170, inlinedAt: !7037)
!7170 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 369, column: 6)
!7171 = !DILocation(line: 369, column: 11, scope: !7170, inlinedAt: !7037)
!7172 = !DILocation(line: 369, column: 6, scope: !7033, inlinedAt: !7037)
!7173 = !DILocation(line: 369, column: 26, scope: !7170, inlinedAt: !7037)
!7174 = !DILocation(line: 370, column: 6, scope: !7175, inlinedAt: !7037)
!7175 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 370, column: 6)
!7176 = !DILocation(line: 370, column: 11, scope: !7175, inlinedAt: !7037)
!7177 = !DILocation(line: 370, column: 6, scope: !7033, inlinedAt: !7037)
!7178 = !DILocation(line: 370, column: 26, scope: !7175, inlinedAt: !7037)
!7179 = !DILocation(line: 371, column: 6, scope: !7180, inlinedAt: !7037)
!7180 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 371, column: 6)
!7181 = !DILocation(line: 371, column: 11, scope: !7180, inlinedAt: !7037)
!7182 = !DILocation(line: 371, column: 6, scope: !7033, inlinedAt: !7037)
!7183 = !DILocation(line: 371, column: 26, scope: !7180, inlinedAt: !7037)
!7184 = !DILocation(line: 372, column: 6, scope: !7185, inlinedAt: !7037)
!7185 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 372, column: 6)
!7186 = !DILocation(line: 372, column: 11, scope: !7185, inlinedAt: !7037)
!7187 = !DILocation(line: 372, column: 6, scope: !7033, inlinedAt: !7037)
!7188 = !DILocation(line: 372, column: 26, scope: !7185, inlinedAt: !7037)
!7189 = !DILocation(line: 373, column: 6, scope: !7190, inlinedAt: !7037)
!7190 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 373, column: 6)
!7191 = !DILocation(line: 373, column: 11, scope: !7190, inlinedAt: !7037)
!7192 = !DILocation(line: 373, column: 6, scope: !7033, inlinedAt: !7037)
!7193 = !DILocation(line: 373, column: 26, scope: !7190, inlinedAt: !7037)
!7194 = !DILocation(line: 374, column: 6, scope: !7195, inlinedAt: !7037)
!7195 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 374, column: 6)
!7196 = !DILocation(line: 374, column: 11, scope: !7195, inlinedAt: !7037)
!7197 = !DILocation(line: 374, column: 6, scope: !7033, inlinedAt: !7037)
!7198 = !DILocation(line: 374, column: 26, scope: !7195, inlinedAt: !7037)
!7199 = !DILocation(line: 375, column: 6, scope: !7200, inlinedAt: !7037)
!7200 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 375, column: 6)
!7201 = !DILocation(line: 375, column: 11, scope: !7200, inlinedAt: !7037)
!7202 = !DILocation(line: 375, column: 6, scope: !7033, inlinedAt: !7037)
!7203 = !DILocation(line: 375, column: 27, scope: !7200, inlinedAt: !7037)
!7204 = !DILocation(line: 376, column: 6, scope: !7205, inlinedAt: !7037)
!7205 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 376, column: 6)
!7206 = !DILocation(line: 376, column: 11, scope: !7205, inlinedAt: !7037)
!7207 = !DILocation(line: 376, column: 6, scope: !7033, inlinedAt: !7037)
!7208 = !DILocation(line: 376, column: 32, scope: !7205, inlinedAt: !7037)
!7209 = !DILocation(line: 377, column: 6, scope: !7210, inlinedAt: !7037)
!7210 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 377, column: 6)
!7211 = !DILocation(line: 377, column: 11, scope: !7210, inlinedAt: !7037)
!7212 = !DILocation(line: 377, column: 6, scope: !7033, inlinedAt: !7037)
!7213 = !DILocation(line: 377, column: 32, scope: !7210, inlinedAt: !7037)
!7214 = !DILocation(line: 378, column: 6, scope: !7215, inlinedAt: !7037)
!7215 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 378, column: 6)
!7216 = !DILocation(line: 378, column: 11, scope: !7215, inlinedAt: !7037)
!7217 = !DILocation(line: 378, column: 6, scope: !7033, inlinedAt: !7037)
!7218 = !DILocation(line: 378, column: 32, scope: !7215, inlinedAt: !7037)
!7219 = !DILocation(line: 379, column: 6, scope: !7220, inlinedAt: !7037)
!7220 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 379, column: 6)
!7221 = !DILocation(line: 379, column: 11, scope: !7220, inlinedAt: !7037)
!7222 = !DILocation(line: 379, column: 6, scope: !7033, inlinedAt: !7037)
!7223 = !DILocation(line: 379, column: 33, scope: !7220, inlinedAt: !7037)
!7224 = !DILocation(line: 380, column: 6, scope: !7225, inlinedAt: !7037)
!7225 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 380, column: 6)
!7226 = !DILocation(line: 380, column: 11, scope: !7225, inlinedAt: !7037)
!7227 = !DILocation(line: 380, column: 6, scope: !7033, inlinedAt: !7037)
!7228 = !DILocation(line: 380, column: 33, scope: !7225, inlinedAt: !7037)
!7229 = !DILocation(line: 381, column: 6, scope: !7230, inlinedAt: !7037)
!7230 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 381, column: 6)
!7231 = !DILocation(line: 381, column: 11, scope: !7230, inlinedAt: !7037)
!7232 = !DILocation(line: 381, column: 6, scope: !7033, inlinedAt: !7037)
!7233 = !DILocation(line: 381, column: 33, scope: !7230, inlinedAt: !7037)
!7234 = !DILocation(line: 382, column: 2, scope: !7235, inlinedAt: !7037)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !226, line: 382, column: 2)
!7236 = distinct !DILexicalBlock(scope: !7033, file: !226, line: 382, column: 2)
!7237 = !{i32 -2144131205, i32 -2144131176, i32 -2144131130, i32 -2144131072, i32 -2144131018, i32 -2144130964, i32 -2144130909, i32 -2144130878}
!7238 = !DILocation(line: 382, column: 2, scope: !7239, inlinedAt: !7037)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !226, line: 382, column: 2)
!7240 = distinct !DILexicalBlock(scope: !7236, file: !226, line: 382, column: 2)
!7241 = !{i32 -2144130435, i32 -2144130428, i32 -2144130374, i32 -2144130343, i32 -2144130313}
!7242 = !DILocation(line: 382, column: 2, scope: !7240, inlinedAt: !7037)
!7243 = !DILocation(line: 386, column: 1, scope: !7033, inlinedAt: !7037)
!7244 = !DILocation(line: 547, column: 9, scope: !7016, inlinedAt: !7019)
!7245 = !DILocation(line: 549, column: 8, scope: !7246, inlinedAt: !7019)
!7246 = distinct !DILexicalBlock(scope: !7016, file: !226, line: 549, column: 7)
!7247 = !DILocation(line: 549, column: 7, scope: !7016, inlinedAt: !7019)
!7248 = !DILocation(line: 550, column: 4, scope: !7246, inlinedAt: !7019)
!7249 = !DILocation(line: 553, column: 33, scope: !7016, inlinedAt: !7019)
!7250 = !DILocation(line: 325, column: 6, scope: !7251, inlinedAt: !7031)
!7251 = distinct !DILexicalBlock(scope: !7027, file: !226, line: 325, column: 6)
!7252 = !DILocation(line: 325, column: 6, scope: !7027, inlinedAt: !7031)
!7253 = !DILocation(line: 326, column: 3, scope: !7251, inlinedAt: !7031)
!7254 = !DILocation(line: 332, column: 9, scope: !7027, inlinedAt: !7031)
!7255 = !DILocation(line: 332, column: 15, scope: !7027, inlinedAt: !7031)
!7256 = !DILocation(line: 332, column: 2, scope: !7027, inlinedAt: !7031)
!7257 = !DILocation(line: 336, column: 1, scope: !7027, inlinedAt: !7031)
!7258 = !DILocation(line: 553, column: 5, scope: !7016, inlinedAt: !7019)
!7259 = !DILocation(line: 553, column: 41, scope: !7016, inlinedAt: !7019)
!7260 = !DILocation(line: 554, column: 5, scope: !7016, inlinedAt: !7019)
!7261 = !DILocation(line: 554, column: 12, scope: !7016, inlinedAt: !7019)
!7262 = !DILocation(line: 448, column: 31, scope: !7011, inlinedAt: !7015)
!7263 = !DILocation(line: 448, column: 34, scope: !7011, inlinedAt: !7015)
!7264 = !DILocation(line: 448, column: 14, scope: !7011, inlinedAt: !7015)
!7265 = !DILocation(line: 450, column: 22, scope: !7011, inlinedAt: !7015)
!7266 = !DILocation(line: 450, column: 25, scope: !7011, inlinedAt: !7015)
!7267 = !DILocation(line: 450, column: 30, scope: !7011, inlinedAt: !7015)
!7268 = !DILocation(line: 450, column: 36, scope: !7011, inlinedAt: !7015)
!7269 = !DILocation(line: 450, column: 8, scope: !7011, inlinedAt: !7015)
!7270 = !DILocation(line: 450, column: 6, scope: !7011, inlinedAt: !7015)
!7271 = !DILocation(line: 451, column: 9, scope: !7011, inlinedAt: !7015)
!7272 = !DILocation(line: 552, column: 3, scope: !7016, inlinedAt: !7019)
!7273 = !DILocation(line: 557, column: 19, scope: !7018, inlinedAt: !7019)
!7274 = !DILocation(line: 557, column: 25, scope: !7018, inlinedAt: !7019)
!7275 = !DILocation(line: 557, column: 9, scope: !7018, inlinedAt: !7019)
!7276 = !DILocation(line: 557, column: 2, scope: !7018, inlinedAt: !7019)
!7277 = !DILocation(line: 558, column: 1, scope: !7018, inlinedAt: !7019)
!7278 = !DILocation(line: 664, column: 2, scope: !7007)
!7279 = distinct !DISubprogram(name: "fc_target_match", scope: !3, file: !3, line: 1962, type: !5035, scopeLine: 1964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7280 = !DILocalVariable(name: "cont", arg: 1, scope: !7279, file: !3, line: 1962, type: !5037)
!7281 = !DILocation(line: 1962, column: 56, scope: !7279)
!7282 = !DILocalVariable(name: "dev", arg: 2, scope: !7279, file: !3, line: 1963, type: !2400)
!7283 = !DILocation(line: 1963, column: 23, scope: !7279)
!7284 = !DILocalVariable(name: "shost", scope: !7279, file: !3, line: 1965, type: !5046)
!7285 = !DILocation(line: 1965, column: 20, scope: !7279)
!7286 = !DILocalVariable(name: "i", scope: !7279, file: !3, line: 1966, type: !4984)
!7287 = !DILocation(line: 1966, column: 22, scope: !7279)
!7288 = !DILocation(line: 1968, column: 29, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1968, column: 6)
!7290 = !DILocation(line: 1968, column: 7, scope: !7289)
!7291 = !DILocation(line: 1968, column: 6, scope: !7279)
!7292 = !DILocation(line: 1969, column: 3, scope: !7289)
!7293 = !DILocation(line: 1971, column: 23, scope: !7279)
!7294 = !DILocation(line: 1971, column: 28, scope: !7279)
!7295 = !DILocation(line: 1971, column: 10, scope: !7279)
!7296 = !DILocation(line: 1971, column: 8, scope: !7279)
!7297 = !DILocation(line: 1972, column: 7, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1972, column: 6)
!7299 = !DILocation(line: 1972, column: 14, scope: !7298)
!7300 = !DILocation(line: 1972, column: 26, scope: !7298)
!7301 = !DILocation(line: 1972, column: 29, scope: !7298)
!7302 = !DILocation(line: 1972, column: 36, scope: !7298)
!7303 = !DILocation(line: 1972, column: 48, scope: !7298)
!7304 = !DILocation(line: 1972, column: 59, scope: !7298)
!7305 = !DILocation(line: 1972, column: 62, scope: !7298)
!7306 = !DILocation(line: 1973, column: 6, scope: !7298)
!7307 = !DILocation(line: 1972, column: 6, scope: !7279)
!7308 = !DILocation(line: 1974, column: 3, scope: !7298)
!7309 = !DILocalVariable(name: "__mptr", scope: !7310, file: !3, line: 1976, type: !280)
!7310 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1976, column: 6)
!7311 = !DILocation(line: 1976, column: 6, scope: !7310)
!7312 = !DILocation(line: 1976, column: 6, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 1976, column: 6)
!7314 = !DILocation(line: 1976, column: 4, scope: !7279)
!7315 = !DILocation(line: 1978, column: 10, scope: !7279)
!7316 = !DILocation(line: 1978, column: 13, scope: !7279)
!7317 = !DILocation(line: 1978, column: 15, scope: !7279)
!7318 = !DILocation(line: 1978, column: 28, scope: !7279)
!7319 = !DILocation(line: 1978, column: 34, scope: !7279)
!7320 = !DILocation(line: 1978, column: 31, scope: !7279)
!7321 = !DILocation(line: 1978, column: 2, scope: !7279)
!7322 = !DILocation(line: 1979, column: 1, scope: !7279)
!7323 = distinct !DISubprogram(name: "transport_container_register", scope: !4993, file: !4993, line: 84, type: !7324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!355, !5841}
!7326 = !DILocalVariable(name: "tc", arg: 1, scope: !7323, file: !4993, line: 84, type: !5841)
!7327 = !DILocation(line: 84, column: 76, scope: !7323)
!7328 = !DILocation(line: 86, column: 39, scope: !7323)
!7329 = !DILocation(line: 86, column: 43, scope: !7323)
!7330 = !DILocation(line: 86, column: 9, scope: !7323)
!7331 = !DILocation(line: 86, column: 2, scope: !7323)
!7332 = distinct !DISubprogram(name: "fc_host_match", scope: !3, file: !3, line: 1943, type: !5035, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7333 = !DILocalVariable(name: "cont", arg: 1, scope: !7332, file: !3, line: 1943, type: !5037)
!7334 = !DILocation(line: 1943, column: 54, scope: !7332)
!7335 = !DILocalVariable(name: "dev", arg: 2, scope: !7332, file: !3, line: 1944, type: !2400)
!7336 = !DILocation(line: 1944, column: 21, scope: !7332)
!7337 = !DILocalVariable(name: "shost", scope: !7332, file: !3, line: 1946, type: !5046)
!7338 = !DILocation(line: 1946, column: 20, scope: !7332)
!7339 = !DILocalVariable(name: "i", scope: !7332, file: !3, line: 1947, type: !4984)
!7340 = !DILocation(line: 1947, column: 22, scope: !7332)
!7341 = !DILocation(line: 1949, column: 27, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1949, column: 6)
!7343 = !DILocation(line: 1949, column: 7, scope: !7342)
!7344 = !DILocation(line: 1949, column: 6, scope: !7332)
!7345 = !DILocation(line: 1950, column: 3, scope: !7342)
!7346 = !DILocation(line: 1952, column: 23, scope: !7332)
!7347 = !DILocation(line: 1952, column: 10, scope: !7332)
!7348 = !DILocation(line: 1952, column: 8, scope: !7332)
!7349 = !DILocation(line: 1953, column: 7, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1953, column: 6)
!7351 = !DILocation(line: 1953, column: 14, scope: !7350)
!7352 = !DILocation(line: 1953, column: 26, scope: !7350)
!7353 = !DILocation(line: 1953, column: 29, scope: !7350)
!7354 = !DILocation(line: 1953, column: 36, scope: !7350)
!7355 = !DILocation(line: 1953, column: 48, scope: !7350)
!7356 = !DILocation(line: 1953, column: 59, scope: !7350)
!7357 = !DILocation(line: 1953, column: 62, scope: !7350)
!7358 = !DILocation(line: 1954, column: 6, scope: !7350)
!7359 = !DILocation(line: 1953, column: 6, scope: !7332)
!7360 = !DILocation(line: 1955, column: 3, scope: !7350)
!7361 = !DILocalVariable(name: "__mptr", scope: !7362, file: !3, line: 1957, type: !280)
!7362 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1957, column: 6)
!7363 = !DILocation(line: 1957, column: 6, scope: !7362)
!7364 = !DILocation(line: 1957, column: 6, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 1957, column: 6)
!7366 = !DILocation(line: 1957, column: 4, scope: !7332)
!7367 = !DILocation(line: 1959, column: 10, scope: !7332)
!7368 = !DILocation(line: 1959, column: 13, scope: !7332)
!7369 = !DILocation(line: 1959, column: 15, scope: !7332)
!7370 = !DILocation(line: 1959, column: 26, scope: !7332)
!7371 = !DILocation(line: 1959, column: 32, scope: !7332)
!7372 = !DILocation(line: 1959, column: 29, scope: !7332)
!7373 = !DILocation(line: 1959, column: 2, scope: !7332)
!7374 = !DILocation(line: 1960, column: 1, scope: !7332)
!7375 = distinct !DISubprogram(name: "fc_rport_match", scope: !3, file: !3, line: 1994, type: !5035, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7376 = !DILocalVariable(name: "cont", arg: 1, scope: !7375, file: !3, line: 1994, type: !5037)
!7377 = !DILocation(line: 1994, column: 55, scope: !7375)
!7378 = !DILocalVariable(name: "dev", arg: 2, scope: !7375, file: !3, line: 1995, type: !2400)
!7379 = !DILocation(line: 1995, column: 23, scope: !7375)
!7380 = !DILocalVariable(name: "shost", scope: !7375, file: !3, line: 1997, type: !5046)
!7381 = !DILocation(line: 1997, column: 20, scope: !7375)
!7382 = !DILocalVariable(name: "i", scope: !7375, file: !3, line: 1998, type: !4984)
!7383 = !DILocation(line: 1998, column: 22, scope: !7375)
!7384 = !DILocation(line: 2000, column: 24, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 2000, column: 6)
!7386 = !DILocation(line: 2000, column: 7, scope: !7385)
!7387 = !DILocation(line: 2000, column: 6, scope: !7375)
!7388 = !DILocation(line: 2001, column: 3, scope: !7385)
!7389 = !DILocation(line: 2003, column: 23, scope: !7375)
!7390 = !DILocation(line: 2003, column: 28, scope: !7375)
!7391 = !DILocation(line: 2003, column: 10, scope: !7375)
!7392 = !DILocation(line: 2003, column: 8, scope: !7375)
!7393 = !DILocation(line: 2004, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 2004, column: 6)
!7395 = !DILocation(line: 2004, column: 14, scope: !7394)
!7396 = !DILocation(line: 2004, column: 26, scope: !7394)
!7397 = !DILocation(line: 2004, column: 29, scope: !7394)
!7398 = !DILocation(line: 2004, column: 36, scope: !7394)
!7399 = !DILocation(line: 2004, column: 48, scope: !7394)
!7400 = !DILocation(line: 2004, column: 59, scope: !7394)
!7401 = !DILocation(line: 2004, column: 62, scope: !7394)
!7402 = !DILocation(line: 2005, column: 6, scope: !7394)
!7403 = !DILocation(line: 2004, column: 6, scope: !7375)
!7404 = !DILocation(line: 2006, column: 3, scope: !7394)
!7405 = !DILocalVariable(name: "__mptr", scope: !7406, file: !3, line: 2008, type: !280)
!7406 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 2008, column: 6)
!7407 = !DILocation(line: 2008, column: 6, scope: !7406)
!7408 = !DILocation(line: 2008, column: 6, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 2008, column: 6)
!7410 = !DILocation(line: 2008, column: 4, scope: !7375)
!7411 = !DILocation(line: 2010, column: 10, scope: !7375)
!7412 = !DILocation(line: 2010, column: 13, scope: !7375)
!7413 = !DILocation(line: 2010, column: 29, scope: !7375)
!7414 = !DILocation(line: 2010, column: 35, scope: !7375)
!7415 = !DILocation(line: 2010, column: 32, scope: !7375)
!7416 = !DILocation(line: 2010, column: 2, scope: !7375)
!7417 = !DILocation(line: 2011, column: 1, scope: !7375)
!7418 = distinct !DISubprogram(name: "fc_vport_match", scope: !3, file: !3, line: 2026, type: !5035, scopeLine: 2028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7419 = !DILocalVariable(name: "cont", arg: 1, scope: !7418, file: !3, line: 2026, type: !5037)
!7420 = !DILocation(line: 2026, column: 55, scope: !7418)
!7421 = !DILocalVariable(name: "dev", arg: 2, scope: !7418, file: !3, line: 2027, type: !2400)
!7422 = !DILocation(line: 2027, column: 23, scope: !7418)
!7423 = !DILocalVariable(name: "vport", scope: !7418, file: !3, line: 2029, type: !5538)
!7424 = !DILocation(line: 2029, column: 19, scope: !7418)
!7425 = !DILocalVariable(name: "shost", scope: !7418, file: !3, line: 2030, type: !5046)
!7426 = !DILocation(line: 2030, column: 20, scope: !7418)
!7427 = !DILocalVariable(name: "i", scope: !7418, file: !3, line: 2031, type: !4984)
!7428 = !DILocation(line: 2031, column: 22, scope: !7418)
!7429 = !DILocation(line: 2033, column: 24, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2033, column: 6)
!7431 = !DILocation(line: 2033, column: 7, scope: !7430)
!7432 = !DILocation(line: 2033, column: 6, scope: !7418)
!7433 = !DILocation(line: 2034, column: 3, scope: !7430)
!7434 = !DILocalVariable(name: "__mptr", scope: !7435, file: !3, line: 2035, type: !280)
!7435 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2035, column: 10)
!7436 = !DILocation(line: 2035, column: 10, scope: !7435)
!7437 = !DILocation(line: 2035, column: 10, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 2035, column: 10)
!7439 = !DILocation(line: 2035, column: 8, scope: !7418)
!7440 = !DILocation(line: 2037, column: 10, scope: !7418)
!7441 = !DILocation(line: 2037, column: 8, scope: !7418)
!7442 = !DILocation(line: 2038, column: 7, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2038, column: 6)
!7444 = !DILocation(line: 2038, column: 14, scope: !7443)
!7445 = !DILocation(line: 2038, column: 26, scope: !7443)
!7446 = !DILocation(line: 2038, column: 29, scope: !7443)
!7447 = !DILocation(line: 2038, column: 36, scope: !7443)
!7448 = !DILocation(line: 2038, column: 48, scope: !7443)
!7449 = !DILocation(line: 2038, column: 59, scope: !7443)
!7450 = !DILocation(line: 2038, column: 62, scope: !7443)
!7451 = !DILocation(line: 2039, column: 6, scope: !7443)
!7452 = !DILocation(line: 2038, column: 6, scope: !7418)
!7453 = !DILocation(line: 2040, column: 3, scope: !7443)
!7454 = !DILocalVariable(name: "__mptr", scope: !7455, file: !3, line: 2042, type: !280)
!7455 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2042, column: 6)
!7456 = !DILocation(line: 2042, column: 6, scope: !7455)
!7457 = !DILocation(line: 2042, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 2042, column: 6)
!7459 = !DILocation(line: 2042, column: 4, scope: !7418)
!7460 = !DILocation(line: 2043, column: 10, scope: !7418)
!7461 = !DILocation(line: 2043, column: 13, scope: !7418)
!7462 = !DILocation(line: 2043, column: 29, scope: !7418)
!7463 = !DILocation(line: 2043, column: 35, scope: !7418)
!7464 = !DILocation(line: 2043, column: 32, scope: !7418)
!7465 = !DILocation(line: 2043, column: 2, scope: !7418)
!7466 = !DILocation(line: 2044, column: 1, scope: !7418)
!7467 = distinct !DISubprogram(name: "fc_user_scan", scope: !3, file: !3, line: 2120, type: !5044, scopeLine: 2121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7468 = !DILocalVariable(name: "shost", arg: 1, scope: !7467, file: !3, line: 2120, type: !5046)
!7469 = !DILocation(line: 2120, column: 32, scope: !7467)
!7470 = !DILocalVariable(name: "channel", arg: 2, scope: !7467, file: !3, line: 2120, type: !5463)
!7471 = !DILocation(line: 2120, column: 44, scope: !7467)
!7472 = !DILocalVariable(name: "id", arg: 3, scope: !7467, file: !3, line: 2120, type: !5463)
!7473 = !DILocation(line: 2120, column: 58, scope: !7467)
!7474 = !DILocalVariable(name: "lun", arg: 4, scope: !7467, file: !3, line: 2120, type: !288)
!7475 = !DILocation(line: 2120, column: 66, scope: !7467)
!7476 = !DILocalVariable(name: "chlo", scope: !7467, file: !3, line: 2122, type: !5463)
!7477 = !DILocation(line: 2122, column: 7, scope: !7467)
!7478 = !DILocalVariable(name: "chhi", scope: !7467, file: !3, line: 2122, type: !5463)
!7479 = !DILocation(line: 2122, column: 13, scope: !7467)
!7480 = !DILocalVariable(name: "tgtlo", scope: !7467, file: !3, line: 2123, type: !5463)
!7481 = !DILocation(line: 2123, column: 7, scope: !7467)
!7482 = !DILocalVariable(name: "tgthi", scope: !7467, file: !3, line: 2123, type: !5463)
!7483 = !DILocation(line: 2123, column: 14, scope: !7467)
!7484 = !DILocation(line: 2125, column: 8, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 2125, column: 6)
!7486 = !DILocation(line: 2125, column: 16, scope: !7485)
!7487 = !DILocation(line: 2125, column: 35, scope: !7485)
!7488 = !DILocation(line: 2125, column: 39, scope: !7485)
!7489 = !DILocation(line: 2125, column: 49, scope: !7485)
!7490 = !DILocation(line: 2125, column: 56, scope: !7485)
!7491 = !DILocation(line: 2125, column: 47, scope: !7485)
!7492 = !DILocation(line: 2125, column: 70, scope: !7485)
!7493 = !DILocation(line: 2126, column: 8, scope: !7485)
!7494 = !DILocation(line: 2126, column: 11, scope: !7485)
!7495 = !DILocation(line: 2126, column: 30, scope: !7485)
!7496 = !DILocation(line: 2126, column: 34, scope: !7485)
!7497 = !DILocation(line: 2126, column: 40, scope: !7485)
!7498 = !DILocation(line: 2126, column: 47, scope: !7485)
!7499 = !DILocation(line: 2126, column: 37, scope: !7485)
!7500 = !DILocation(line: 2126, column: 56, scope: !7485)
!7501 = !DILocation(line: 2127, column: 8, scope: !7485)
!7502 = !DILocation(line: 2127, column: 12, scope: !7485)
!7503 = !DILocation(line: 2127, column: 31, scope: !7485)
!7504 = !DILocation(line: 2127, column: 35, scope: !7485)
!7505 = !DILocation(line: 2127, column: 41, scope: !7485)
!7506 = !DILocation(line: 2127, column: 48, scope: !7485)
!7507 = !DILocation(line: 2127, column: 39, scope: !7485)
!7508 = !DILocation(line: 2125, column: 6, scope: !7467)
!7509 = !DILocation(line: 2128, column: 3, scope: !7485)
!7510 = !DILocation(line: 2130, column: 6, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 2130, column: 6)
!7512 = !DILocation(line: 2130, column: 14, scope: !7511)
!7513 = !DILocation(line: 2130, column: 6, scope: !7467)
!7514 = !DILocation(line: 2131, column: 8, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 2130, column: 33)
!7516 = !DILocation(line: 2132, column: 10, scope: !7515)
!7517 = !DILocation(line: 2132, column: 17, scope: !7515)
!7518 = !DILocation(line: 2132, column: 29, scope: !7515)
!7519 = !DILocation(line: 2132, column: 8, scope: !7515)
!7520 = !DILocation(line: 2133, column: 2, scope: !7515)
!7521 = !DILocation(line: 2134, column: 10, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 2133, column: 9)
!7523 = !DILocation(line: 2134, column: 8, scope: !7522)
!7524 = !DILocation(line: 2135, column: 10, scope: !7522)
!7525 = !DILocation(line: 2135, column: 18, scope: !7522)
!7526 = !DILocation(line: 2135, column: 8, scope: !7522)
!7527 = !DILocation(line: 2138, column: 6, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 2138, column: 6)
!7529 = !DILocation(line: 2138, column: 9, scope: !7528)
!7530 = !DILocation(line: 2138, column: 6, scope: !7467)
!7531 = !DILocation(line: 2139, column: 9, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 2138, column: 28)
!7533 = !DILocation(line: 2140, column: 11, scope: !7532)
!7534 = !DILocation(line: 2140, column: 18, scope: !7532)
!7535 = !DILocation(line: 2140, column: 9, scope: !7532)
!7536 = !DILocation(line: 2141, column: 2, scope: !7532)
!7537 = !DILocation(line: 2142, column: 11, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 2141, column: 9)
!7539 = !DILocation(line: 2142, column: 9, scope: !7538)
!7540 = !DILocation(line: 2143, column: 11, scope: !7538)
!7541 = !DILocation(line: 2143, column: 14, scope: !7538)
!7542 = !DILocation(line: 2143, column: 9, scope: !7538)
!7543 = !DILocation(line: 2146, column: 2, scope: !7467)
!7544 = !DILocation(line: 2146, column: 10, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2146, column: 2)
!7546 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 2146, column: 2)
!7547 = !DILocation(line: 2146, column: 17, scope: !7545)
!7548 = !DILocation(line: 2146, column: 15, scope: !7545)
!7549 = !DILocation(line: 2146, column: 2, scope: !7546)
!7550 = !DILocation(line: 2147, column: 3, scope: !7545)
!7551 = !DILocation(line: 2147, column: 11, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2147, column: 3)
!7553 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 2147, column: 3)
!7554 = !DILocation(line: 2147, column: 19, scope: !7552)
!7555 = !DILocation(line: 2147, column: 17, scope: !7552)
!7556 = !DILocation(line: 2147, column: 3, scope: !7553)
!7557 = !DILocation(line: 2148, column: 21, scope: !7552)
!7558 = !DILocation(line: 2148, column: 28, scope: !7552)
!7559 = !DILocation(line: 2148, column: 34, scope: !7552)
!7560 = !DILocation(line: 2148, column: 41, scope: !7552)
!7561 = !DILocation(line: 2148, column: 4, scope: !7552)
!7562 = !DILocation(line: 2147, column: 31, scope: !7552)
!7563 = !DILocation(line: 2147, column: 3, scope: !7552)
!7564 = distinct !{!7564, !7556, !7565}
!7565 = !DILocation(line: 2148, column: 44, scope: !7553)
!7566 = !DILocation(line: 2146, column: 27, scope: !7545)
!7567 = !DILocation(line: 2146, column: 2, scope: !7545)
!7568 = distinct !{!7568, !7549, !7569}
!7569 = !DILocation(line: 2148, column: 44, scope: !7546)
!7570 = !DILocation(line: 2150, column: 2, scope: !7467)
!7571 = !DILocation(line: 2151, column: 1, scope: !7467)
!7572 = distinct !DISubprogram(name: "fc_release_transport", scope: !3, file: !3, line: 2295, type: !7573, scopeLine: 2296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7573 = !DISubroutineType(types: !7574)
!7574 = !{null, !5411}
!7575 = !DILocalVariable(name: "t", arg: 1, scope: !7572, file: !3, line: 2295, type: !5411)
!7576 = !DILocation(line: 2295, column: 59, scope: !7572)
!7577 = !DILocalVariable(name: "i", scope: !7572, file: !3, line: 2297, type: !4984)
!7578 = !DILocation(line: 2297, column: 22, scope: !7572)
!7579 = !DILocalVariable(name: "__mptr", scope: !7580, file: !3, line: 2297, type: !280)
!7580 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 2297, column: 26)
!7581 = !DILocation(line: 2297, column: 26, scope: !7580)
!7582 = !DILocation(line: 2297, column: 26, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 2297, column: 26)
!7584 = !DILocation(line: 2299, column: 34, scope: !7572)
!7585 = !DILocation(line: 2299, column: 37, scope: !7572)
!7586 = !DILocation(line: 2299, column: 39, scope: !7572)
!7587 = !DILocation(line: 2299, column: 2, scope: !7572)
!7588 = !DILocation(line: 2300, column: 34, scope: !7572)
!7589 = !DILocation(line: 2300, column: 37, scope: !7572)
!7590 = !DILocation(line: 2300, column: 39, scope: !7572)
!7591 = !DILocation(line: 2300, column: 2, scope: !7572)
!7592 = !DILocation(line: 2301, column: 34, scope: !7572)
!7593 = !DILocation(line: 2301, column: 37, scope: !7572)
!7594 = !DILocation(line: 2301, column: 2, scope: !7572)
!7595 = !DILocation(line: 2302, column: 34, scope: !7572)
!7596 = !DILocation(line: 2302, column: 37, scope: !7572)
!7597 = !DILocation(line: 2302, column: 2, scope: !7572)
!7598 = !DILocation(line: 2304, column: 8, scope: !7572)
!7599 = !DILocation(line: 2304, column: 2, scope: !7572)
!7600 = !DILocation(line: 2305, column: 1, scope: !7572)
!7601 = distinct !DISubprogram(name: "transport_container_unregister", scope: !4993, file: !4993, line: 89, type: !7602, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{null, !5841}
!7604 = !DILocalVariable(name: "tc", arg: 1, scope: !7601, file: !4993, line: 89, type: !5841)
!7605 = !DILocation(line: 89, column: 79, scope: !7601)
!7606 = !DILocation(line: 91, column: 6, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7601, file: !4993, line: 91, column: 6)
!7608 = !DILocation(line: 91, column: 6, scope: !7601)
!7609 = !DILocation(line: 92, column: 3, scope: !7607)
!7610 = !DILocation(line: 92, column: 3, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !4993, line: 92, column: 3)
!7612 = !DILocation(line: 92, column: 3, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7611, file: !4993, line: 92, column: 3)
!7614 = !DILocation(line: 92, column: 3, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7611, file: !4993, line: 92, column: 3)
!7616 = !{i32 -2141402554, i32 -2141402525, i32 -2141402479, i32 -2141402421, i32 -2141402367, i32 -2141402313, i32 -2141402258, i32 -2141402227}
!7617 = !DILocation(line: 92, column: 3, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !4993, line: 92, column: 3)
!7619 = distinct !DILexicalBlock(scope: !7611, file: !4993, line: 92, column: 3)
!7620 = !{i32 -2141401774, i32 -2141401767, i32 -2141401713, i32 -2141401682, i32 -2141401652}
!7621 = !DILocation(line: 92, column: 3, scope: !7619)
!7622 = !DILocation(line: 93, column: 1, scope: !7601)
!7623 = distinct !DISubprogram(name: "fc_remove_host", scope: !3, file: !3, line: 2411, type: !5343, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7624 = !DILocalVariable(name: "lock", arg: 1, scope: !7625, file: !7626, line: 407, type: !1362)
!7625 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7626, file: !7626, line: 407, type: !7627, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7626 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7627 = !DISubroutineType(types: !7628)
!7628 = !{null, !1362, !419}
!7629 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !7630)
!7630 = distinct !DILocation(line: 2442, column: 2, scope: !7623)
!7631 = !DILocalVariable(name: "flags", arg: 2, scope: !7625, file: !7626, line: 407, type: !419)
!7632 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !7630)
!7633 = !DILocalVariable(name: "lock", arg: 1, scope: !7634, file: !7626, line: 327, type: !1362)
!7634 = distinct !DISubprogram(name: "spinlock_check", scope: !7626, file: !7626, line: 327, type: !7635, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!7637, !1362}
!7637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!7638 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !7639)
!7639 = distinct !DILocation(line: 2419, column: 2, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 2419, column: 2)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 2419, column: 2)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 2419, column: 2)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2419, column: 2)
!7644 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2419, column: 2)
!7645 = !DILocalVariable(name: "shost", arg: 1, scope: !7623, file: !3, line: 2411, type: !5046)
!7646 = !DILocation(line: 2411, column: 34, scope: !7623)
!7647 = !DILocalVariable(name: "vport", scope: !7623, file: !3, line: 2413, type: !5538)
!7648 = !DILocation(line: 2413, column: 19, scope: !7623)
!7649 = !DILocalVariable(name: "next_vport", scope: !7623, file: !3, line: 2413, type: !5538)
!7650 = !DILocation(line: 2413, column: 34, scope: !7623)
!7651 = !DILocalVariable(name: "rport", scope: !7623, file: !3, line: 2414, type: !281)
!7652 = !DILocation(line: 2414, column: 19, scope: !7623)
!7653 = !DILocalVariable(name: "next_rport", scope: !7623, file: !3, line: 2414, type: !281)
!7654 = !DILocation(line: 2414, column: 34, scope: !7623)
!7655 = !DILocalVariable(name: "work_q", scope: !7623, file: !3, line: 2415, type: !2282)
!7656 = !DILocation(line: 2415, column: 27, scope: !7623)
!7657 = !DILocalVariable(name: "fc_host", scope: !7623, file: !3, line: 2416, type: !5655)
!7658 = !DILocation(line: 2416, column: 24, scope: !7623)
!7659 = !DILocation(line: 2416, column: 34, scope: !7623)
!7660 = !DILocalVariable(name: "flags", scope: !7623, file: !3, line: 2417, type: !419)
!7661 = !DILocation(line: 2417, column: 16, scope: !7623)
!7662 = !DILocation(line: 2419, column: 2, scope: !7623)
!7663 = !DILocation(line: 2419, column: 2, scope: !7644)
!7664 = !DILocalVariable(name: "__dummy", scope: !7665, file: !3, line: 2419, type: !419)
!7665 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 2419, column: 2)
!7666 = !DILocation(line: 2419, column: 2, scope: !7665)
!7667 = !DILocalVariable(name: "__dummy2", scope: !7665, file: !3, line: 2419, type: !419)
!7668 = !DILocation(line: 2419, column: 2, scope: !7643)
!7669 = !DILocation(line: 2419, column: 2, scope: !7642)
!7670 = !DILocation(line: 2419, column: 2, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 2419, column: 2)
!7672 = !DILocalVariable(name: "__dummy", scope: !7673, file: !3, line: 2419, type: !419)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2419, column: 2)
!7674 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 2419, column: 2)
!7675 = !DILocation(line: 2419, column: 2, scope: !7673)
!7676 = !DILocalVariable(name: "__dummy2", scope: !7673, file: !3, line: 2419, type: !419)
!7677 = !DILocation(line: 2419, column: 2, scope: !7674)
!7678 = !DILocation(line: 2419, column: 2, scope: !7641)
!7679 = !{i32 -2140200874}
!7680 = !DILocation(line: 2419, column: 2, scope: !7640)
!7681 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !7639)
!7682 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !7639)
!7683 = !DILocalVariable(name: "__mptr", scope: !7684, file: !3, line: 2422, type: !280)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2422, column: 2)
!7685 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2422, column: 2)
!7686 = !DILocation(line: 2422, column: 2, scope: !7684)
!7687 = !DILocation(line: 2422, column: 2, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 2422, column: 2)
!7689 = !DILocation(line: 2422, column: 2, scope: !7685)
!7690 = !DILocalVariable(name: "__mptr", scope: !7691, file: !3, line: 2422, type: !280)
!7691 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2422, column: 2)
!7692 = !DILocation(line: 2422, column: 2, scope: !7691)
!7693 = !DILocation(line: 2422, column: 2, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 2422, column: 2)
!7695 = !DILocation(line: 2422, column: 2, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2422, column: 2)
!7697 = !DILocation(line: 2423, column: 3, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 2422, column: 71)
!7699 = !DILocation(line: 2423, column: 10, scope: !7698)
!7700 = !DILocation(line: 2423, column: 16, scope: !7698)
!7701 = !DILocation(line: 2424, column: 17, scope: !7698)
!7702 = !DILocation(line: 2424, column: 25, scope: !7698)
!7703 = !DILocation(line: 2424, column: 32, scope: !7698)
!7704 = !DILocation(line: 2424, column: 3, scope: !7698)
!7705 = !DILocation(line: 2425, column: 2, scope: !7698)
!7706 = !DILocalVariable(name: "__mptr", scope: !7707, file: !3, line: 2422, type: !280)
!7707 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 2422, column: 2)
!7708 = !DILocation(line: 2422, column: 2, scope: !7707)
!7709 = !DILocation(line: 2422, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 2422, column: 2)
!7711 = distinct !{!7711, !7689, !7712}
!7712 = !DILocation(line: 2425, column: 2, scope: !7685)
!7713 = !DILocalVariable(name: "__mptr", scope: !7714, file: !3, line: 2428, type: !280)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 2428, column: 2)
!7715 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2428, column: 2)
!7716 = !DILocation(line: 2428, column: 2, scope: !7714)
!7717 = !DILocation(line: 2428, column: 2, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 2428, column: 2)
!7719 = !DILocation(line: 2428, column: 2, scope: !7715)
!7720 = !DILocalVariable(name: "__mptr", scope: !7721, file: !3, line: 2428, type: !280)
!7721 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 2428, column: 2)
!7722 = !DILocation(line: 2428, column: 2, scope: !7721)
!7723 = !DILocation(line: 2428, column: 2, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 2428, column: 2)
!7725 = !DILocation(line: 2428, column: 2, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 2428, column: 2)
!7727 = !DILocation(line: 2430, column: 13, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 2429, column: 29)
!7729 = !DILocation(line: 2430, column: 20, scope: !7728)
!7730 = !DILocation(line: 2430, column: 3, scope: !7728)
!7731 = !DILocation(line: 2431, column: 3, scope: !7728)
!7732 = !DILocation(line: 2431, column: 10, scope: !7728)
!7733 = !DILocation(line: 2431, column: 21, scope: !7728)
!7734 = !DILocation(line: 2432, column: 17, scope: !7728)
!7735 = !DILocation(line: 2432, column: 25, scope: !7728)
!7736 = !DILocation(line: 2432, column: 32, scope: !7728)
!7737 = !DILocation(line: 2432, column: 3, scope: !7728)
!7738 = !DILocation(line: 2433, column: 2, scope: !7728)
!7739 = !DILocalVariable(name: "__mptr", scope: !7740, file: !3, line: 2428, type: !280)
!7740 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 2428, column: 2)
!7741 = !DILocation(line: 2428, column: 2, scope: !7740)
!7742 = !DILocation(line: 2428, column: 2, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 2428, column: 2)
!7744 = distinct !{!7744, !7719, !7745}
!7745 = !DILocation(line: 2433, column: 2, scope: !7715)
!7746 = !DILocalVariable(name: "__mptr", scope: !7747, file: !3, line: 2435, type: !280)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2435, column: 2)
!7748 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2435, column: 2)
!7749 = !DILocation(line: 2435, column: 2, scope: !7747)
!7750 = !DILocation(line: 2435, column: 2, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 2435, column: 2)
!7752 = !DILocation(line: 2435, column: 2, scope: !7748)
!7753 = !DILocalVariable(name: "__mptr", scope: !7754, file: !3, line: 2435, type: !280)
!7754 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2435, column: 2)
!7755 = !DILocation(line: 2435, column: 2, scope: !7754)
!7756 = !DILocation(line: 2435, column: 2, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 2435, column: 2)
!7758 = !DILocation(line: 2435, column: 2, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2435, column: 2)
!7760 = !DILocation(line: 2437, column: 13, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2436, column: 37)
!7762 = !DILocation(line: 2437, column: 20, scope: !7761)
!7763 = !DILocation(line: 2437, column: 3, scope: !7761)
!7764 = !DILocation(line: 2438, column: 3, scope: !7761)
!7765 = !DILocation(line: 2438, column: 10, scope: !7761)
!7766 = !DILocation(line: 2438, column: 21, scope: !7761)
!7767 = !DILocation(line: 2439, column: 17, scope: !7761)
!7768 = !DILocation(line: 2439, column: 25, scope: !7761)
!7769 = !DILocation(line: 2439, column: 32, scope: !7761)
!7770 = !DILocation(line: 2439, column: 3, scope: !7761)
!7771 = !DILocation(line: 2440, column: 2, scope: !7761)
!7772 = !DILocalVariable(name: "__mptr", scope: !7773, file: !3, line: 2435, type: !280)
!7773 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2435, column: 2)
!7774 = !DILocation(line: 2435, column: 2, scope: !7773)
!7775 = !DILocation(line: 2435, column: 2, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2435, column: 2)
!7777 = distinct !{!7777, !7752, !7778}
!7778 = !DILocation(line: 2440, column: 2, scope: !7748)
!7779 = !DILocation(line: 2442, column: 25, scope: !7623)
!7780 = !DILocation(line: 2442, column: 32, scope: !7623)
!7781 = !DILocation(line: 2442, column: 43, scope: !7623)
!7782 = !DILocalVariable(name: "__dummy", scope: !7783, file: !7626, line: 409, type: !419)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !7626, line: 409, column: 2)
!7784 = distinct !DILexicalBlock(scope: !7625, file: !7626, line: 409, column: 2)
!7785 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !7630)
!7786 = !DILocalVariable(name: "__dummy2", scope: !7783, file: !7626, line: 409, type: !419)
!7787 = !DILocalVariable(name: "__dummy", scope: !7788, file: !7626, line: 409, type: !419)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !7626, line: 409, column: 2)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7626, line: 409, column: 2)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7626, line: 409, column: 2)
!7791 = distinct !DILexicalBlock(scope: !7784, file: !7626, line: 409, column: 2)
!7792 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !7630)
!7793 = !DILocalVariable(name: "__dummy2", scope: !7788, file: !7626, line: 409, type: !419)
!7794 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !7630)
!7795 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !7630)
!7796 = distinct !DILexicalBlock(scope: !7791, file: !7626, line: 409, column: 2)
!7797 = !{i32 -2145361270}
!7798 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !7630)
!7799 = distinct !DILexicalBlock(scope: !7796, file: !7626, line: 409, column: 2)
!7800 = !DILocation(line: 2445, column: 18, scope: !7623)
!7801 = !DILocation(line: 2445, column: 2, scope: !7623)
!7802 = !DILocation(line: 2448, column: 6, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2448, column: 6)
!7804 = !DILocation(line: 2448, column: 15, scope: !7803)
!7805 = !DILocation(line: 2448, column: 6, scope: !7623)
!7806 = !DILocation(line: 2449, column: 12, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2448, column: 23)
!7808 = !DILocation(line: 2449, column: 21, scope: !7807)
!7809 = !DILocation(line: 2449, column: 10, scope: !7807)
!7810 = !DILocation(line: 2450, column: 3, scope: !7807)
!7811 = !DILocation(line: 2450, column: 12, scope: !7807)
!7812 = !DILocation(line: 2450, column: 19, scope: !7807)
!7813 = !DILocation(line: 2451, column: 21, scope: !7807)
!7814 = !DILocation(line: 2451, column: 3, scope: !7807)
!7815 = !DILocation(line: 2452, column: 2, scope: !7807)
!7816 = !DILocation(line: 2455, column: 6, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2455, column: 6)
!7818 = !DILocation(line: 2455, column: 15, scope: !7817)
!7819 = !DILocation(line: 2455, column: 6, scope: !7623)
!7820 = !DILocation(line: 2456, column: 12, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 2455, column: 31)
!7822 = !DILocation(line: 2456, column: 21, scope: !7821)
!7823 = !DILocation(line: 2456, column: 10, scope: !7821)
!7824 = !DILocation(line: 2457, column: 3, scope: !7821)
!7825 = !DILocation(line: 2457, column: 12, scope: !7821)
!7826 = !DILocation(line: 2457, column: 27, scope: !7821)
!7827 = !DILocation(line: 2458, column: 21, scope: !7821)
!7828 = !DILocation(line: 2458, column: 3, scope: !7821)
!7829 = !DILocation(line: 2459, column: 2, scope: !7821)
!7830 = !DILocation(line: 2460, column: 1, scope: !7623)
!7831 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7832, file: !7832, line: 666, type: !7833, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7832 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!419}
!7835 = !DILocalVariable(name: "f", scope: !7831, file: !7832, line: 668, type: !419)
!7836 = !DILocation(line: 668, column: 16, scope: !7831)
!7837 = !DILocation(line: 670, column: 6, scope: !7831)
!7838 = !DILocation(line: 670, column: 4, scope: !7831)
!7839 = !DILocation(line: 671, column: 2, scope: !7831)
!7840 = !DILocation(line: 672, column: 9, scope: !7831)
!7841 = !DILocation(line: 672, column: 2, scope: !7831)
!7842 = distinct !DISubprogram(name: "fc_queue_work", scope: !3, file: !3, line: 2319, type: !7843, scopeLine: 2320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!355, !5046, !2279}
!7845 = !DILocalVariable(name: "shost", arg: 1, scope: !7842, file: !3, line: 2319, type: !5046)
!7846 = !DILocation(line: 2319, column: 33, scope: !7842)
!7847 = !DILocalVariable(name: "work", arg: 2, scope: !7842, file: !3, line: 2319, type: !2279)
!7848 = !DILocation(line: 2319, column: 60, scope: !7842)
!7849 = !DILocation(line: 2321, column: 6, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7842, file: !3, line: 2321, column: 6)
!7851 = !DILocation(line: 2321, column: 6, scope: !7842)
!7852 = !DILocation(line: 2324, column: 36, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 2321, column: 40)
!7854 = !DILocation(line: 2324, column: 43, scope: !7853)
!7855 = !DILocation(line: 2324, column: 50, scope: !7853)
!7856 = !DILocation(line: 2322, column: 3, scope: !7853)
!7857 = !DILocation(line: 2325, column: 3, scope: !7853)
!7858 = !DILocation(line: 2327, column: 3, scope: !7853)
!7859 = !DILocation(line: 2330, column: 20, scope: !7842)
!7860 = !DILocation(line: 2330, column: 43, scope: !7842)
!7861 = !DILocation(line: 2330, column: 9, scope: !7842)
!7862 = !DILocation(line: 2330, column: 2, scope: !7842)
!7863 = !DILocation(line: 2331, column: 1, scope: !7842)
!7864 = distinct !DISubprogram(name: "list_del", scope: !7865, file: !7865, line: 144, type: !7866, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7865 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7866 = !DISubroutineType(types: !7867)
!7867 = !{null, !308}
!7868 = !DILocalVariable(name: "entry", arg: 1, scope: !7864, file: !7865, line: 144, type: !308)
!7869 = !DILocation(line: 144, column: 47, scope: !7864)
!7870 = !DILocation(line: 146, column: 19, scope: !7864)
!7871 = !DILocation(line: 146, column: 2, scope: !7864)
!7872 = !DILocation(line: 147, column: 2, scope: !7864)
!7873 = !DILocation(line: 147, column: 9, scope: !7864)
!7874 = !DILocation(line: 147, column: 14, scope: !7864)
!7875 = !DILocation(line: 148, column: 2, scope: !7864)
!7876 = !DILocation(line: 148, column: 9, scope: !7864)
!7877 = !DILocation(line: 148, column: 14, scope: !7864)
!7878 = !DILocation(line: 149, column: 1, scope: !7864)
!7879 = distinct !DISubprogram(name: "fc_remote_port_add", scope: !3, file: !3, line: 2710, type: !7880, scopeLine: 2712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{!281, !5046, !355, !7882}
!7882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7883, size: 64)
!7883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_rport_identifiers", file: !164, line: 281, size: 192, elements: !7884)
!7884 = !{!7885, !7886, !7887, !7888}
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !7883, file: !164, line: 282, baseType: !288, size: 64)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "port_name", scope: !7883, file: !164, line: 283, baseType: !288, size: 64, offset: 64)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !7883, file: !164, line: 284, baseType: !274, size: 32, offset: 128)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "roles", scope: !7883, file: !164, line: 285, baseType: !274, size: 32, offset: 160)
!7889 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !7890)
!7890 = distinct !DILocation(line: 2882, column: 2, scope: !7879)
!7891 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !7890)
!7892 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !7893)
!7893 = distinct !DILocation(line: 2875, column: 4, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 2863, column: 14)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 2863, column: 7)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 2831, column: 54)
!7897 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2831, column: 6)
!7898 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !7893)
!7899 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !7900)
!7900 = distinct !DILocation(line: 2816, column: 6, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2808, column: 38)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2808, column: 9)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 2751, column: 15)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2751, column: 8)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2733, column: 33)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 2731, column: 7)
!7907 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 2729, column: 54)
!7908 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 2729, column: 2)
!7909 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2729, column: 2)
!7910 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !7900)
!7911 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !7912)
!7912 = distinct !DILocation(line: 2811, column: 6, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 2811, column: 6)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 2811, column: 6)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2811, column: 6)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 2811, column: 6)
!7917 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2811, column: 6)
!7918 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !7919)
!7919 = distinct !DILocation(line: 2805, column: 5, scope: !7903)
!7920 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !7919)
!7921 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !7922)
!7922 = distinct !DILocation(line: 2799, column: 5, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 2799, column: 5)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 2799, column: 5)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2799, column: 5)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 2799, column: 5)
!7927 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2799, column: 5)
!7928 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !7929)
!7929 = distinct !DILocation(line: 2762, column: 5, scope: !7903)
!7930 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !7929)
!7931 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !7932)
!7932 = distinct !DILocation(line: 2727, column: 2, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 2727, column: 2)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 2727, column: 2)
!7935 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 2727, column: 2)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2727, column: 2)
!7937 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2727, column: 2)
!7938 = !DILocalVariable(name: "shost", arg: 1, scope: !7879, file: !3, line: 2710, type: !5046)
!7939 = !DILocation(line: 2710, column: 38, scope: !7879)
!7940 = !DILocalVariable(name: "channel", arg: 2, scope: !7879, file: !3, line: 2710, type: !355)
!7941 = !DILocation(line: 2710, column: 49, scope: !7879)
!7942 = !DILocalVariable(name: "ids", arg: 3, scope: !7879, file: !3, line: 2711, type: !7882)
!7943 = !DILocation(line: 2711, column: 32, scope: !7879)
!7944 = !DILocalVariable(name: "fci", scope: !7879, file: !3, line: 2713, type: !4984)
!7945 = !DILocation(line: 2713, column: 22, scope: !7879)
!7946 = !DILocalVariable(name: "__mptr", scope: !7947, file: !3, line: 2713, type: !280)
!7947 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2713, column: 28)
!7948 = !DILocation(line: 2713, column: 28, scope: !7947)
!7949 = !DILocation(line: 2713, column: 28, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2713, column: 28)
!7951 = !DILocalVariable(name: "fc_host", scope: !7879, file: !3, line: 2714, type: !5655)
!7952 = !DILocation(line: 2714, column: 24, scope: !7879)
!7953 = !DILocation(line: 2714, column: 34, scope: !7879)
!7954 = !DILocalVariable(name: "rport", scope: !7879, file: !3, line: 2715, type: !281)
!7955 = !DILocation(line: 2715, column: 19, scope: !7879)
!7956 = !DILocalVariable(name: "flags", scope: !7879, file: !3, line: 2716, type: !419)
!7957 = !DILocation(line: 2716, column: 16, scope: !7879)
!7958 = !DILocalVariable(name: "match", scope: !7879, file: !3, line: 2717, type: !355)
!7959 = !DILocation(line: 2717, column: 6, scope: !7879)
!7960 = !DILocation(line: 2720, column: 16, scope: !7879)
!7961 = !DILocation(line: 2720, column: 2, scope: !7879)
!7962 = !DILocation(line: 2727, column: 2, scope: !7879)
!7963 = !DILocation(line: 2727, column: 2, scope: !7937)
!7964 = !DILocalVariable(name: "__dummy", scope: !7965, file: !3, line: 2727, type: !419)
!7965 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 2727, column: 2)
!7966 = !DILocation(line: 2727, column: 2, scope: !7965)
!7967 = !DILocalVariable(name: "__dummy2", scope: !7965, file: !3, line: 2727, type: !419)
!7968 = !DILocation(line: 2727, column: 2, scope: !7936)
!7969 = !DILocation(line: 2727, column: 2, scope: !7935)
!7970 = !DILocation(line: 2727, column: 2, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 2727, column: 2)
!7972 = !DILocalVariable(name: "__dummy", scope: !7973, file: !3, line: 2727, type: !419)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2727, column: 2)
!7974 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 2727, column: 2)
!7975 = !DILocation(line: 2727, column: 2, scope: !7973)
!7976 = !DILocalVariable(name: "__dummy2", scope: !7973, file: !3, line: 2727, type: !419)
!7977 = !DILocation(line: 2727, column: 2, scope: !7974)
!7978 = !DILocation(line: 2727, column: 2, scope: !7934)
!7979 = !{i32 -2140162269}
!7980 = !DILocation(line: 2727, column: 2, scope: !7933)
!7981 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !7932)
!7982 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !7932)
!7983 = !DILocalVariable(name: "__mptr", scope: !7984, file: !3, line: 2729, type: !280)
!7984 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 2729, column: 2)
!7985 = !DILocation(line: 2729, column: 2, scope: !7984)
!7986 = !DILocation(line: 2729, column: 2, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 2729, column: 2)
!7988 = !DILocation(line: 2729, column: 2, scope: !7909)
!7989 = !DILocation(line: 2729, column: 2, scope: !7908)
!7990 = !DILocation(line: 2731, column: 8, scope: !7906)
!7991 = !DILocation(line: 2731, column: 15, scope: !7906)
!7992 = !DILocation(line: 2731, column: 26, scope: !7906)
!7993 = !DILocation(line: 2731, column: 50, scope: !7906)
!7994 = !DILocation(line: 2732, column: 8, scope: !7906)
!7995 = !DILocation(line: 2732, column: 15, scope: !7906)
!7996 = !DILocation(line: 2732, column: 26, scope: !7906)
!7997 = !DILocation(line: 2732, column: 54, scope: !7906)
!7998 = !DILocation(line: 2733, column: 5, scope: !7906)
!7999 = !DILocation(line: 2733, column: 12, scope: !7906)
!8000 = !DILocation(line: 2733, column: 23, scope: !7906)
!8001 = !DILocation(line: 2733, column: 20, scope: !7906)
!8002 = !DILocation(line: 2731, column: 7, scope: !7907)
!8003 = !DILocation(line: 2735, column: 12, scope: !7905)
!8004 = !DILocation(line: 2735, column: 21, scope: !7905)
!8005 = !DILocation(line: 2735, column: 4, scope: !7905)
!8006 = !DILocation(line: 2738, column: 9, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 2738, column: 9)
!8008 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2735, column: 38)
!8009 = !DILocation(line: 2738, column: 16, scope: !8007)
!8010 = !DILocation(line: 2738, column: 29, scope: !8007)
!8011 = !DILocation(line: 2738, column: 34, scope: !8007)
!8012 = !DILocation(line: 2738, column: 26, scope: !8007)
!8013 = !DILocation(line: 2738, column: 9, scope: !8008)
!8014 = !DILocation(line: 2739, column: 12, scope: !8007)
!8015 = !DILocation(line: 2739, column: 6, scope: !8007)
!8016 = !DILocation(line: 2740, column: 5, scope: !8008)
!8017 = !DILocation(line: 2742, column: 9, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 2742, column: 9)
!8019 = !DILocation(line: 2742, column: 16, scope: !8018)
!8020 = !DILocation(line: 2742, column: 29, scope: !8018)
!8021 = !DILocation(line: 2742, column: 34, scope: !8018)
!8022 = !DILocation(line: 2742, column: 26, scope: !8018)
!8023 = !DILocation(line: 2742, column: 9, scope: !8008)
!8024 = !DILocation(line: 2743, column: 12, scope: !8018)
!8025 = !DILocation(line: 2743, column: 6, scope: !8018)
!8026 = !DILocation(line: 2744, column: 5, scope: !8008)
!8027 = !DILocation(line: 2746, column: 9, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 2746, column: 9)
!8029 = !DILocation(line: 2746, column: 16, scope: !8028)
!8030 = !DILocation(line: 2746, column: 27, scope: !8028)
!8031 = !DILocation(line: 2746, column: 32, scope: !8028)
!8032 = !DILocation(line: 2746, column: 24, scope: !8028)
!8033 = !DILocation(line: 2746, column: 9, scope: !8008)
!8034 = !DILocation(line: 2747, column: 12, scope: !8028)
!8035 = !DILocation(line: 2747, column: 6, scope: !8028)
!8036 = !DILocation(line: 2748, column: 5, scope: !8008)
!8037 = !DILocation(line: 2751, column: 8, scope: !7904)
!8038 = !DILocation(line: 2751, column: 8, scope: !7905)
!8039 = !DILocation(line: 2753, column: 13, scope: !7903)
!8040 = !DILocation(line: 2753, column: 20, scope: !7903)
!8041 = !DILocation(line: 2753, column: 5, scope: !7903)
!8042 = !DILocation(line: 2753, column: 32, scope: !7903)
!8043 = !DILocation(line: 2753, column: 37, scope: !7903)
!8044 = !DILocation(line: 2755, column: 13, scope: !7903)
!8045 = !DILocation(line: 2755, column: 20, scope: !7903)
!8046 = !DILocation(line: 2755, column: 5, scope: !7903)
!8047 = !DILocation(line: 2755, column: 32, scope: !7903)
!8048 = !DILocation(line: 2755, column: 37, scope: !7903)
!8049 = !DILocation(line: 2757, column: 22, scope: !7903)
!8050 = !DILocation(line: 2757, column: 27, scope: !7903)
!8051 = !DILocation(line: 2757, column: 5, scope: !7903)
!8052 = !DILocation(line: 2757, column: 12, scope: !7903)
!8053 = !DILocation(line: 2757, column: 20, scope: !7903)
!8054 = !DILocation(line: 2759, column: 5, scope: !7903)
!8055 = !DILocation(line: 2759, column: 12, scope: !7903)
!8056 = !DILocation(line: 2759, column: 23, scope: !7903)
!8057 = !DILocation(line: 2760, column: 20, scope: !7903)
!8058 = !DILocation(line: 2760, column: 25, scope: !7903)
!8059 = !DILocation(line: 2760, column: 5, scope: !7903)
!8060 = !DILocation(line: 2760, column: 12, scope: !7903)
!8061 = !DILocation(line: 2760, column: 18, scope: !7903)
!8062 = !DILocation(line: 2762, column: 28, scope: !7903)
!8063 = !DILocation(line: 2762, column: 35, scope: !7903)
!8064 = !DILocation(line: 2762, column: 46, scope: !7903)
!8065 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !7929)
!8066 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !7929)
!8067 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !7929)
!8068 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !7929)
!8069 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !7929)
!8070 = !DILocation(line: 2764, column: 9, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2764, column: 9)
!8072 = !DILocation(line: 2764, column: 14, scope: !8071)
!8073 = !DILocation(line: 2764, column: 17, scope: !8071)
!8074 = !DILocation(line: 2764, column: 9, scope: !7903)
!8075 = !DILocation(line: 2765, column: 13, scope: !8071)
!8076 = !DILocation(line: 2765, column: 20, scope: !8071)
!8077 = !DILocation(line: 2766, column: 7, scope: !8071)
!8078 = !DILocation(line: 2766, column: 12, scope: !8071)
!8079 = !DILocation(line: 2766, column: 15, scope: !8071)
!8080 = !DILocation(line: 2765, column: 6, scope: !8071)
!8081 = !DILocation(line: 2785, column: 10, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2785, column: 9)
!8083 = !DILocation(line: 2785, column: 17, scope: !8082)
!8084 = !DILocation(line: 2785, column: 32, scope: !8082)
!8085 = !DILocation(line: 2785, column: 39, scope: !8082)
!8086 = !DILocation(line: 2786, column: 12, scope: !8082)
!8087 = !DILocation(line: 2786, column: 17, scope: !8082)
!8088 = !DILocation(line: 2786, column: 23, scope: !8082)
!8089 = !DILocation(line: 2785, column: 9, scope: !7903)
!8090 = !DILocation(line: 2787, column: 13, scope: !8082)
!8091 = !DILocation(line: 2787, column: 6, scope: !8082)
!8092 = !DILocation(line: 2794, column: 31, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2794, column: 9)
!8094 = !DILocation(line: 2794, column: 38, scope: !8093)
!8095 = !DILocation(line: 2794, column: 10, scope: !8093)
!8096 = !DILocation(line: 2794, column: 9, scope: !7903)
!8097 = !DILocation(line: 2795, column: 23, scope: !8093)
!8098 = !DILocation(line: 2795, column: 6, scope: !8093)
!8099 = !DILocation(line: 2796, column: 31, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2796, column: 9)
!8101 = !DILocation(line: 2796, column: 38, scope: !8100)
!8102 = !DILocation(line: 2796, column: 10, scope: !8100)
!8103 = !DILocation(line: 2796, column: 9, scope: !7903)
!8104 = !DILocation(line: 2797, column: 23, scope: !8100)
!8105 = !DILocation(line: 2797, column: 6, scope: !8100)
!8106 = !DILocation(line: 2799, column: 5, scope: !7903)
!8107 = !DILocation(line: 2799, column: 5, scope: !7927)
!8108 = !DILocalVariable(name: "__dummy", scope: !8109, file: !3, line: 2799, type: !419)
!8109 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2799, column: 5)
!8110 = !DILocation(line: 2799, column: 5, scope: !8109)
!8111 = !DILocalVariable(name: "__dummy2", scope: !8109, file: !3, line: 2799, type: !419)
!8112 = !DILocation(line: 2799, column: 5, scope: !7926)
!8113 = !DILocation(line: 2799, column: 5, scope: !7925)
!8114 = !DILocation(line: 2799, column: 5, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 2799, column: 5)
!8116 = !DILocalVariable(name: "__dummy", scope: !8117, file: !3, line: 2799, type: !419)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 2799, column: 5)
!8118 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 2799, column: 5)
!8119 = !DILocation(line: 2799, column: 5, scope: !8117)
!8120 = !DILocalVariable(name: "__dummy2", scope: !8117, file: !3, line: 2799, type: !419)
!8121 = !DILocation(line: 2799, column: 5, scope: !8118)
!8122 = !DILocation(line: 2799, column: 5, scope: !7924)
!8123 = !{i32 -2140157238}
!8124 = !DILocation(line: 2799, column: 5, scope: !7923)
!8125 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !7922)
!8126 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !7922)
!8127 = !DILocation(line: 2801, column: 5, scope: !7903)
!8128 = !DILocation(line: 2801, column: 12, scope: !7903)
!8129 = !DILocation(line: 2801, column: 18, scope: !7903)
!8130 = !DILocation(line: 2805, column: 28, scope: !7903)
!8131 = !DILocation(line: 2805, column: 35, scope: !7903)
!8132 = !DILocation(line: 2805, column: 46, scope: !7903)
!8133 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !7919)
!8134 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !7919)
!8135 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !7919)
!8136 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !7919)
!8137 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !7919)
!8138 = !DILocation(line: 2808, column: 9, scope: !7902)
!8139 = !DILocation(line: 2808, column: 16, scope: !7902)
!8140 = !DILocation(line: 2808, column: 31, scope: !7902)
!8141 = !DILocation(line: 2808, column: 9, scope: !7903)
!8142 = !DILocation(line: 2809, column: 27, scope: !7901)
!8143 = !DILocation(line: 2809, column: 34, scope: !7901)
!8144 = !DILocation(line: 2809, column: 6, scope: !7901)
!8145 = !DILocation(line: 2811, column: 6, scope: !7901)
!8146 = !DILocation(line: 2811, column: 6, scope: !7917)
!8147 = !DILocalVariable(name: "__dummy", scope: !8148, file: !3, line: 2811, type: !419)
!8148 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2811, column: 6)
!8149 = !DILocation(line: 2811, column: 6, scope: !8148)
!8150 = !DILocalVariable(name: "__dummy2", scope: !8148, file: !3, line: 2811, type: !419)
!8151 = !DILocation(line: 2811, column: 6, scope: !7916)
!8152 = !DILocation(line: 2811, column: 6, scope: !7915)
!8153 = !DILocation(line: 2811, column: 6, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 2811, column: 6)
!8155 = !DILocalVariable(name: "__dummy", scope: !8156, file: !3, line: 2811, type: !419)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2811, column: 6)
!8157 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 2811, column: 6)
!8158 = !DILocation(line: 2811, column: 6, scope: !8156)
!8159 = !DILocalVariable(name: "__dummy2", scope: !8156, file: !3, line: 2811, type: !419)
!8160 = !DILocation(line: 2811, column: 6, scope: !8157)
!8161 = !DILocation(line: 2811, column: 6, scope: !7914)
!8162 = !{i32 -2140156169}
!8163 = !DILocation(line: 2811, column: 6, scope: !7913)
!8164 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !7912)
!8165 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !7912)
!8166 = !DILocation(line: 2813, column: 6, scope: !7901)
!8167 = !DILocation(line: 2813, column: 13, scope: !7901)
!8168 = !DILocation(line: 2813, column: 19, scope: !7901)
!8169 = !DILocation(line: 2814, column: 22, scope: !7901)
!8170 = !DILocation(line: 2815, column: 9, scope: !7901)
!8171 = !DILocation(line: 2815, column: 16, scope: !7901)
!8172 = !DILocation(line: 2814, column: 6, scope: !7901)
!8173 = !DILocation(line: 2816, column: 29, scope: !7901)
!8174 = !DILocation(line: 2816, column: 36, scope: !7901)
!8175 = !DILocation(line: 2817, column: 8, scope: !7901)
!8176 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !7900)
!8177 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !7900)
!8178 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !7900)
!8179 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !7900)
!8180 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !7900)
!8181 = !DILocation(line: 2818, column: 5, scope: !7901)
!8182 = !DILocation(line: 2820, column: 24, scope: !7903)
!8183 = !DILocation(line: 2820, column: 5, scope: !7903)
!8184 = !DILocation(line: 2822, column: 12, scope: !7903)
!8185 = !DILocation(line: 2822, column: 5, scope: !7903)
!8186 = !DILocation(line: 2824, column: 3, scope: !7905)
!8187 = !DILocation(line: 2825, column: 2, scope: !7907)
!8188 = !DILocalVariable(name: "__mptr", scope: !8189, file: !3, line: 2729, type: !280)
!8189 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 2729, column: 2)
!8190 = !DILocation(line: 2729, column: 2, scope: !8189)
!8191 = !DILocation(line: 2729, column: 2, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 2729, column: 2)
!8193 = distinct !{!8193, !7988, !8194}
!8194 = !DILocation(line: 2825, column: 2, scope: !7909)
!8195 = !DILocation(line: 2831, column: 6, scope: !7897)
!8196 = !DILocation(line: 2831, column: 15, scope: !7897)
!8197 = !DILocation(line: 2831, column: 31, scope: !7897)
!8198 = !DILocation(line: 2831, column: 6, scope: !7879)
!8199 = !DILocalVariable(name: "__mptr", scope: !8200, file: !3, line: 2835, type: !280)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 2835, column: 3)
!8201 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 2835, column: 3)
!8202 = !DILocation(line: 2835, column: 3, scope: !8200)
!8203 = !DILocation(line: 2835, column: 3, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 2835, column: 3)
!8205 = !DILocation(line: 2835, column: 3, scope: !8201)
!8206 = !DILocation(line: 2835, column: 3, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 2835, column: 3)
!8208 = !DILocation(line: 2837, column: 8, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2837, column: 8)
!8210 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2836, column: 13)
!8211 = !DILocation(line: 2837, column: 15, scope: !8209)
!8212 = !DILocation(line: 2837, column: 26, scope: !8209)
!8213 = !DILocation(line: 2837, column: 23, scope: !8209)
!8214 = !DILocation(line: 2837, column: 8, scope: !8210)
!8215 = !DILocation(line: 2838, column: 5, scope: !8209)
!8216 = !DILocation(line: 2840, column: 12, scope: !8210)
!8217 = !DILocation(line: 2840, column: 21, scope: !8210)
!8218 = !DILocation(line: 2840, column: 4, scope: !8210)
!8219 = !DILocation(line: 2842, column: 9, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2842, column: 9)
!8221 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2840, column: 38)
!8222 = !DILocation(line: 2842, column: 16, scope: !8220)
!8223 = !DILocation(line: 2842, column: 29, scope: !8220)
!8224 = !DILocation(line: 2842, column: 34, scope: !8220)
!8225 = !DILocation(line: 2842, column: 26, scope: !8220)
!8226 = !DILocation(line: 2842, column: 9, scope: !8221)
!8227 = !DILocation(line: 2843, column: 12, scope: !8220)
!8228 = !DILocation(line: 2843, column: 6, scope: !8220)
!8229 = !DILocation(line: 2844, column: 5, scope: !8221)
!8230 = !DILocation(line: 2846, column: 9, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2846, column: 9)
!8232 = !DILocation(line: 2846, column: 16, scope: !8231)
!8233 = !DILocation(line: 2846, column: 29, scope: !8231)
!8234 = !DILocation(line: 2846, column: 34, scope: !8231)
!8235 = !DILocation(line: 2846, column: 26, scope: !8231)
!8236 = !DILocation(line: 2846, column: 9, scope: !8221)
!8237 = !DILocation(line: 2847, column: 12, scope: !8231)
!8238 = !DILocation(line: 2847, column: 6, scope: !8231)
!8239 = !DILocation(line: 2848, column: 5, scope: !8221)
!8240 = !DILocation(line: 2850, column: 9, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2850, column: 9)
!8242 = !DILocation(line: 2850, column: 16, scope: !8241)
!8243 = !DILocation(line: 2850, column: 27, scope: !8241)
!8244 = !DILocation(line: 2850, column: 32, scope: !8241)
!8245 = !DILocation(line: 2850, column: 24, scope: !8241)
!8246 = !DILocation(line: 2850, column: 9, scope: !8221)
!8247 = !DILocation(line: 2851, column: 12, scope: !8241)
!8248 = !DILocation(line: 2851, column: 6, scope: !8241)
!8249 = !DILocation(line: 2852, column: 5, scope: !8221)
!8250 = !DILocation(line: 2854, column: 5, scope: !8221)
!8251 = !DILocation(line: 2857, column: 8, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2857, column: 8)
!8253 = !DILocation(line: 2857, column: 8, scope: !8210)
!8254 = !DILocation(line: 2858, column: 21, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 2857, column: 15)
!8256 = !DILocation(line: 2858, column: 28, scope: !8255)
!8257 = !DILocation(line: 2858, column: 36, scope: !8255)
!8258 = !DILocation(line: 2858, column: 45, scope: !8255)
!8259 = !DILocation(line: 2858, column: 5, scope: !8255)
!8260 = !DILocation(line: 2859, column: 5, scope: !8255)
!8261 = !DILocation(line: 2861, column: 3, scope: !8210)
!8262 = !DILocalVariable(name: "__mptr", scope: !8263, file: !3, line: 2835, type: !280)
!8263 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2835, column: 3)
!8264 = !DILocation(line: 2835, column: 3, scope: !8263)
!8265 = !DILocation(line: 2835, column: 3, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 2835, column: 3)
!8267 = distinct !{!8267, !8205, !8268}
!8268 = !DILocation(line: 2861, column: 3, scope: !8201)
!8269 = !DILocation(line: 2863, column: 7, scope: !7895)
!8270 = !DILocation(line: 2863, column: 7, scope: !7896)
!8271 = !DILocation(line: 2864, column: 12, scope: !7894)
!8272 = !DILocation(line: 2864, column: 19, scope: !7894)
!8273 = !DILocation(line: 2864, column: 4, scope: !7894)
!8274 = !DILocation(line: 2864, column: 31, scope: !7894)
!8275 = !DILocation(line: 2864, column: 36, scope: !7894)
!8276 = !DILocation(line: 2866, column: 12, scope: !7894)
!8277 = !DILocation(line: 2866, column: 19, scope: !7894)
!8278 = !DILocation(line: 2866, column: 4, scope: !7894)
!8279 = !DILocation(line: 2866, column: 31, scope: !7894)
!8280 = !DILocation(line: 2866, column: 36, scope: !7894)
!8281 = !DILocation(line: 2868, column: 21, scope: !7894)
!8282 = !DILocation(line: 2868, column: 26, scope: !7894)
!8283 = !DILocation(line: 2868, column: 4, scope: !7894)
!8284 = !DILocation(line: 2868, column: 11, scope: !7894)
!8285 = !DILocation(line: 2868, column: 19, scope: !7894)
!8286 = !DILocation(line: 2869, column: 4, scope: !7894)
!8287 = !DILocation(line: 2869, column: 11, scope: !7894)
!8288 = !DILocation(line: 2869, column: 22, scope: !7894)
!8289 = !DILocation(line: 2870, column: 4, scope: !7894)
!8290 = !DILocation(line: 2870, column: 11, scope: !7894)
!8291 = !DILocation(line: 2870, column: 17, scope: !7894)
!8292 = !DILocation(line: 2872, column: 8, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 2872, column: 8)
!8294 = !DILocation(line: 2872, column: 13, scope: !8293)
!8295 = !DILocation(line: 2872, column: 16, scope: !8293)
!8296 = !DILocation(line: 2872, column: 8, scope: !7894)
!8297 = !DILocation(line: 2873, column: 12, scope: !8293)
!8298 = !DILocation(line: 2873, column: 19, scope: !8293)
!8299 = !DILocation(line: 2874, column: 7, scope: !8293)
!8300 = !DILocation(line: 2874, column: 12, scope: !8293)
!8301 = !DILocation(line: 2874, column: 15, scope: !8293)
!8302 = !DILocation(line: 2873, column: 5, scope: !8293)
!8303 = !DILocation(line: 2875, column: 27, scope: !7894)
!8304 = !DILocation(line: 2875, column: 34, scope: !7894)
!8305 = !DILocation(line: 2875, column: 45, scope: !7894)
!8306 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !7893)
!8307 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !7893)
!8308 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !7893)
!8309 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !7893)
!8310 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !7893)
!8311 = !DILocation(line: 2877, column: 27, scope: !7894)
!8312 = !DILocation(line: 2877, column: 34, scope: !7894)
!8313 = !DILocation(line: 2877, column: 39, scope: !7894)
!8314 = !DILocation(line: 2877, column: 4, scope: !7894)
!8315 = !DILocation(line: 2878, column: 11, scope: !7894)
!8316 = !DILocation(line: 2878, column: 4, scope: !7894)
!8317 = !DILocation(line: 2880, column: 2, scope: !7896)
!8318 = !DILocation(line: 2882, column: 25, scope: !7879)
!8319 = !DILocation(line: 2882, column: 32, scope: !7879)
!8320 = !DILocation(line: 2882, column: 43, scope: !7879)
!8321 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !7890)
!8322 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !7890)
!8323 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !7890)
!8324 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !7890)
!8325 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !7890)
!8326 = !DILocation(line: 2885, column: 32, scope: !7879)
!8327 = !DILocation(line: 2885, column: 39, scope: !7879)
!8328 = !DILocation(line: 2885, column: 48, scope: !7879)
!8329 = !DILocation(line: 2885, column: 10, scope: !7879)
!8330 = !DILocation(line: 2885, column: 8, scope: !7879)
!8331 = !DILocation(line: 2887, column: 9, scope: !7879)
!8332 = !DILocation(line: 2887, column: 2, scope: !7879)
!8333 = !DILocation(line: 2888, column: 1, scope: !7879)
!8334 = distinct !DISubprogram(name: "fc_flush_work", scope: !3, file: !3, line: 2338, type: !5343, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8335 = !DILocalVariable(name: "shost", arg: 1, scope: !8334, file: !3, line: 2338, type: !5046)
!8336 = !DILocation(line: 2338, column: 33, scope: !8334)
!8337 = !DILocation(line: 2340, column: 7, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2340, column: 6)
!8339 = !DILocation(line: 2340, column: 6, scope: !8334)
!8340 = !DILocation(line: 2343, column: 36, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 2340, column: 30)
!8342 = !DILocation(line: 2343, column: 43, scope: !8341)
!8343 = !DILocation(line: 2343, column: 50, scope: !8341)
!8344 = !DILocation(line: 2341, column: 3, scope: !8341)
!8345 = !DILocation(line: 2344, column: 3, scope: !8341)
!8346 = !DILocation(line: 2345, column: 3, scope: !8341)
!8347 = !DILocation(line: 2348, column: 18, scope: !8334)
!8348 = !DILocation(line: 2348, column: 2, scope: !8334)
!8349 = !DILocation(line: 2349, column: 1, scope: !8334)
!8350 = distinct !DISubprogram(name: "fc_flush_devloss", scope: !3, file: !3, line: 2381, type: !5343, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8351 = !DILocalVariable(name: "shost", arg: 1, scope: !8350, file: !3, line: 2381, type: !5046)
!8352 = !DILocation(line: 2381, column: 36, scope: !8350)
!8353 = !DILocation(line: 2383, column: 7, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 2383, column: 6)
!8355 = !DILocation(line: 2383, column: 6, scope: !8350)
!8356 = !DILocation(line: 2386, column: 36, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 2383, column: 38)
!8358 = !DILocation(line: 2386, column: 43, scope: !8357)
!8359 = !DILocation(line: 2386, column: 50, scope: !8357)
!8360 = !DILocation(line: 2384, column: 3, scope: !8357)
!8361 = !DILocation(line: 2387, column: 3, scope: !8357)
!8362 = !DILocation(line: 2388, column: 3, scope: !8357)
!8363 = !DILocation(line: 2391, column: 18, scope: !8350)
!8364 = !DILocation(line: 2391, column: 2, scope: !8350)
!8365 = !DILocation(line: 2392, column: 1, scope: !8350)
!8366 = distinct !DISubprogram(name: "fc_bsg_goose_queue", scope: !3, file: !3, line: 3671, type: !5477, scopeLine: 3672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8367 = !DILocalVariable(name: "rport", arg: 1, scope: !8366, file: !3, line: 3671, type: !281)
!8368 = !DILocation(line: 3671, column: 37, scope: !8366)
!8369 = !DILocalVariable(name: "q", scope: !8366, file: !3, line: 3673, type: !2480)
!8370 = !DILocation(line: 3673, column: 24, scope: !8366)
!8371 = !DILocation(line: 3673, column: 28, scope: !8366)
!8372 = !DILocation(line: 3673, column: 35, scope: !8366)
!8373 = !DILocation(line: 3675, column: 6, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 3675, column: 6)
!8375 = !DILocation(line: 3675, column: 6, scope: !8366)
!8376 = !DILocation(line: 3676, column: 24, scope: !8374)
!8377 = !DILocation(line: 3676, column: 3, scope: !8374)
!8378 = !DILocation(line: 3677, column: 1, scope: !8366)
!8379 = distinct !DISubprogram(name: "list_move_tail", scope: !7865, file: !7865, line: 224, type: !8380, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !308, !308}
!8382 = !DILocalVariable(name: "list", arg: 1, scope: !8379, file: !7865, line: 224, type: !308)
!8383 = !DILocation(line: 224, column: 53, scope: !8379)
!8384 = !DILocalVariable(name: "head", arg: 2, scope: !8379, file: !7865, line: 225, type: !308)
!8385 = !DILocation(line: 225, column: 25, scope: !8379)
!8386 = !DILocation(line: 227, column: 19, scope: !8379)
!8387 = !DILocation(line: 227, column: 2, scope: !8379)
!8388 = !DILocation(line: 228, column: 16, scope: !8379)
!8389 = !DILocation(line: 228, column: 22, scope: !8379)
!8390 = !DILocation(line: 228, column: 2, scope: !8379)
!8391 = !DILocation(line: 229, column: 1, scope: !8379)
!8392 = distinct !DISubprogram(name: "fc_remote_port_rolechg", scope: !3, file: !3, line: 3019, type: !5481, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8393 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !8394)
!8394 = distinct !DILocation(line: 3068, column: 3, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 3068, column: 3)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 3068, column: 3)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3068, column: 3)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 3068, column: 3)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 3068, column: 3)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 3039, column: 14)
!8401 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 3039, column: 6)
!8402 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8403)
!8403 = distinct !DILocation(line: 3061, column: 3, scope: !8400)
!8404 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8403)
!8405 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !8406)
!8406 = distinct !DILocation(line: 3057, column: 3, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 3057, column: 3)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 3057, column: 3)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 3057, column: 3)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 3057, column: 3)
!8411 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 3057, column: 3)
!8412 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8413)
!8413 = distinct !DILocation(line: 3037, column: 2, scope: !8392)
!8414 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8413)
!8415 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8416)
!8416 = distinct !DILocation(line: 3071, column: 3, scope: !8400)
!8417 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8416)
!8418 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !8419)
!8419 = distinct !DILocation(line: 3026, column: 2, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 3026, column: 2)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3026, column: 2)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 3026, column: 2)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 3026, column: 2)
!8424 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 3026, column: 2)
!8425 = !DILocalVariable(name: "rport", arg: 1, scope: !8392, file: !3, line: 3019, type: !281)
!8426 = !DILocation(line: 3019, column: 42, scope: !8392)
!8427 = !DILocalVariable(name: "roles", arg: 2, scope: !8392, file: !3, line: 3019, type: !274)
!8428 = !DILocation(line: 3019, column: 53, scope: !8392)
!8429 = !DILocalVariable(name: "shost", scope: !8392, file: !3, line: 3021, type: !5046)
!8430 = !DILocation(line: 3021, column: 20, scope: !8392)
!8431 = !DILocation(line: 3021, column: 28, scope: !8392)
!8432 = !DILocalVariable(name: "fc_host", scope: !8392, file: !3, line: 3022, type: !5655)
!8433 = !DILocation(line: 3022, column: 24, scope: !8392)
!8434 = !DILocation(line: 3022, column: 34, scope: !8392)
!8435 = !DILocalVariable(name: "flags", scope: !8392, file: !3, line: 3023, type: !419)
!8436 = !DILocation(line: 3023, column: 16, scope: !8392)
!8437 = !DILocalVariable(name: "create", scope: !8392, file: !3, line: 3024, type: !355)
!8438 = !DILocation(line: 3024, column: 6, scope: !8392)
!8439 = !DILocation(line: 3026, column: 2, scope: !8392)
!8440 = !DILocation(line: 3026, column: 2, scope: !8424)
!8441 = !DILocalVariable(name: "__dummy", scope: !8442, file: !3, line: 3026, type: !419)
!8442 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 3026, column: 2)
!8443 = !DILocation(line: 3026, column: 2, scope: !8442)
!8444 = !DILocalVariable(name: "__dummy2", scope: !8442, file: !3, line: 3026, type: !419)
!8445 = !DILocation(line: 3026, column: 2, scope: !8423)
!8446 = !DILocation(line: 3026, column: 2, scope: !8422)
!8447 = !DILocation(line: 3026, column: 2, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3026, column: 2)
!8449 = !DILocalVariable(name: "__dummy", scope: !8450, file: !3, line: 3026, type: !419)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 3026, column: 2)
!8451 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 3026, column: 2)
!8452 = !DILocation(line: 3026, column: 2, scope: !8450)
!8453 = !DILocalVariable(name: "__dummy2", scope: !8450, file: !3, line: 3026, type: !419)
!8454 = !DILocation(line: 3026, column: 2, scope: !8451)
!8455 = !DILocation(line: 3026, column: 2, scope: !8421)
!8456 = !{i32 -2140149606}
!8457 = !DILocation(line: 3026, column: 2, scope: !8420)
!8458 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !8419)
!8459 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !8419)
!8460 = !DILocation(line: 3027, column: 6, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 3027, column: 6)
!8462 = !DILocation(line: 3027, column: 12, scope: !8461)
!8463 = !DILocation(line: 3027, column: 6, scope: !8392)
!8464 = !DILocation(line: 3028, column: 7, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3028, column: 7)
!8466 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 3027, column: 39)
!8467 = !DILocation(line: 3028, column: 14, scope: !8465)
!8468 = !DILocation(line: 3028, column: 29, scope: !8465)
!8469 = !DILocation(line: 3028, column: 7, scope: !8466)
!8470 = !DILocation(line: 3029, column: 28, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3028, column: 36)
!8472 = !DILocation(line: 3029, column: 37, scope: !8471)
!8473 = !DILocation(line: 3029, column: 51, scope: !8471)
!8474 = !DILocation(line: 3029, column: 4, scope: !8471)
!8475 = !DILocation(line: 3029, column: 11, scope: !8471)
!8476 = !DILocation(line: 3029, column: 26, scope: !8471)
!8477 = !DILocation(line: 3030, column: 11, scope: !8471)
!8478 = !DILocation(line: 3031, column: 3, scope: !8471)
!8479 = !DILocation(line: 3031, column: 16, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3031, column: 14)
!8481 = !DILocation(line: 3031, column: 23, scope: !8480)
!8482 = !DILocation(line: 3031, column: 29, scope: !8480)
!8483 = !DILocation(line: 3031, column: 14, scope: !8465)
!8484 = !DILocation(line: 3032, column: 11, scope: !8480)
!8485 = !DILocation(line: 3032, column: 4, scope: !8480)
!8486 = !DILocation(line: 3033, column: 2, scope: !8466)
!8487 = !DILocation(line: 3035, column: 17, scope: !8392)
!8488 = !DILocation(line: 3035, column: 2, scope: !8392)
!8489 = !DILocation(line: 3035, column: 9, scope: !8392)
!8490 = !DILocation(line: 3035, column: 15, scope: !8392)
!8491 = !DILocation(line: 3037, column: 25, scope: !8392)
!8492 = !DILocation(line: 3037, column: 32, scope: !8392)
!8493 = !DILocation(line: 3037, column: 43, scope: !8392)
!8494 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8413)
!8495 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8413)
!8496 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8413)
!8497 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8413)
!8498 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8413)
!8499 = !DILocation(line: 3039, column: 6, scope: !8401)
!8500 = !DILocation(line: 3039, column: 6, scope: !8392)
!8501 = !DILocation(line: 3052, column: 29, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 3052, column: 7)
!8503 = !DILocation(line: 3052, column: 36, scope: !8502)
!8504 = !DILocation(line: 3052, column: 8, scope: !8502)
!8505 = !DILocation(line: 3052, column: 7, scope: !8400)
!8506 = !DILocation(line: 3053, column: 21, scope: !8502)
!8507 = !DILocation(line: 3053, column: 4, scope: !8502)
!8508 = !DILocation(line: 3054, column: 29, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 3054, column: 7)
!8510 = !DILocation(line: 3054, column: 36, scope: !8509)
!8511 = !DILocation(line: 3054, column: 8, scope: !8509)
!8512 = !DILocation(line: 3054, column: 7, scope: !8400)
!8513 = !DILocation(line: 3055, column: 21, scope: !8509)
!8514 = !DILocation(line: 3055, column: 4, scope: !8509)
!8515 = !DILocation(line: 3057, column: 3, scope: !8400)
!8516 = !DILocation(line: 3057, column: 3, scope: !8411)
!8517 = !DILocalVariable(name: "__dummy", scope: !8518, file: !3, line: 3057, type: !419)
!8518 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 3057, column: 3)
!8519 = !DILocation(line: 3057, column: 3, scope: !8518)
!8520 = !DILocalVariable(name: "__dummy2", scope: !8518, file: !3, line: 3057, type: !419)
!8521 = !DILocation(line: 3057, column: 3, scope: !8410)
!8522 = !DILocation(line: 3057, column: 3, scope: !8409)
!8523 = !DILocation(line: 3057, column: 3, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 3057, column: 3)
!8525 = !DILocalVariable(name: "__dummy", scope: !8526, file: !3, line: 3057, type: !419)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 3057, column: 3)
!8527 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 3057, column: 3)
!8528 = !DILocation(line: 3057, column: 3, scope: !8526)
!8529 = !DILocalVariable(name: "__dummy2", scope: !8526, file: !3, line: 3057, type: !419)
!8530 = !DILocation(line: 3057, column: 3, scope: !8527)
!8531 = !DILocation(line: 3057, column: 3, scope: !8408)
!8532 = !{i32 -2140148542}
!8533 = !DILocation(line: 3057, column: 3, scope: !8407)
!8534 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !8406)
!8535 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !8406)
!8536 = !DILocation(line: 3058, column: 3, scope: !8400)
!8537 = !DILocation(line: 3058, column: 10, scope: !8400)
!8538 = !DILocation(line: 3058, column: 16, scope: !8400)
!8539 = !DILocation(line: 3061, column: 26, scope: !8400)
!8540 = !DILocation(line: 3061, column: 33, scope: !8400)
!8541 = !DILocation(line: 3061, column: 44, scope: !8400)
!8542 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8403)
!8543 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8403)
!8544 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8403)
!8545 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8403)
!8546 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8403)
!8547 = !DILocation(line: 3064, column: 17, scope: !8400)
!8548 = !DILocation(line: 3064, column: 3, scope: !8400)
!8549 = !DILocation(line: 3066, column: 24, scope: !8400)
!8550 = !DILocation(line: 3066, column: 31, scope: !8400)
!8551 = !DILocation(line: 3066, column: 3, scope: !8400)
!8552 = !DILocation(line: 3068, column: 3, scope: !8400)
!8553 = !DILocation(line: 3068, column: 3, scope: !8399)
!8554 = !DILocalVariable(name: "__dummy", scope: !8555, file: !3, line: 3068, type: !419)
!8555 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3068, column: 3)
!8556 = !DILocation(line: 3068, column: 3, scope: !8555)
!8557 = !DILocalVariable(name: "__dummy2", scope: !8555, file: !3, line: 3068, type: !419)
!8558 = !DILocation(line: 3068, column: 3, scope: !8398)
!8559 = !DILocation(line: 3068, column: 3, scope: !8397)
!8560 = !DILocation(line: 3068, column: 3, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 3068, column: 3)
!8562 = !DILocalVariable(name: "__dummy", scope: !8563, file: !3, line: 3068, type: !419)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 3068, column: 3)
!8564 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 3068, column: 3)
!8565 = !DILocation(line: 3068, column: 3, scope: !8563)
!8566 = !DILocalVariable(name: "__dummy2", scope: !8563, file: !3, line: 3068, type: !419)
!8567 = !DILocation(line: 3068, column: 3, scope: !8564)
!8568 = !DILocation(line: 3068, column: 3, scope: !8396)
!8569 = !{i32 -2140147473}
!8570 = !DILocation(line: 3068, column: 3, scope: !8395)
!8571 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !8394)
!8572 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !8394)
!8573 = !DILocation(line: 3069, column: 3, scope: !8400)
!8574 = !DILocation(line: 3069, column: 10, scope: !8400)
!8575 = !DILocation(line: 3069, column: 16, scope: !8400)
!8576 = !DILocation(line: 3070, column: 19, scope: !8400)
!8577 = !DILocation(line: 3070, column: 27, scope: !8400)
!8578 = !DILocation(line: 3070, column: 34, scope: !8400)
!8579 = !DILocation(line: 3070, column: 3, scope: !8400)
!8580 = !DILocation(line: 3071, column: 26, scope: !8400)
!8581 = !DILocation(line: 3071, column: 33, scope: !8400)
!8582 = !DILocation(line: 3071, column: 44, scope: !8400)
!8583 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8416)
!8584 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8416)
!8585 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8416)
!8586 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8416)
!8587 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8416)
!8588 = !DILocation(line: 3072, column: 2, scope: !8400)
!8589 = !DILocation(line: 3073, column: 1, scope: !8392)
!8590 = distinct !DISubprogram(name: "fc_remote_port_create", scope: !3, file: !3, line: 2583, type: !7880, scopeLine: 2585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8591 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !8592)
!8592 = distinct !DILocation(line: 2662, column: 2, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2662, column: 2)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 2662, column: 2)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 2662, column: 2)
!8596 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 2662, column: 2)
!8597 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2662, column: 2)
!8598 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8599)
!8599 = distinct !DILocation(line: 2631, column: 2, scope: !8590)
!8600 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8599)
!8601 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8602)
!8602 = distinct !DILocation(line: 2665, column: 2, scope: !8590)
!8603 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8602)
!8604 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 2620, column: 2, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2620, column: 2)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 2620, column: 2)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 2620, column: 2)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 2620, column: 2)
!8610 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2620, column: 2)
!8611 = !DILocalVariable(name: "shost", arg: 1, scope: !8590, file: !3, line: 2583, type: !5046)
!8612 = !DILocation(line: 2583, column: 41, scope: !8590)
!8613 = !DILocalVariable(name: "channel", arg: 2, scope: !8590, file: !3, line: 2583, type: !355)
!8614 = !DILocation(line: 2583, column: 52, scope: !8590)
!8615 = !DILocalVariable(name: "ids", arg: 3, scope: !8590, file: !3, line: 2584, type: !7882)
!8616 = !DILocation(line: 2584, column: 39, scope: !8590)
!8617 = !DILocalVariable(name: "fc_host", scope: !8590, file: !3, line: 2586, type: !5655)
!8618 = !DILocation(line: 2586, column: 24, scope: !8590)
!8619 = !DILocation(line: 2586, column: 34, scope: !8590)
!8620 = !DILocalVariable(name: "fci", scope: !8590, file: !3, line: 2587, type: !4984)
!8621 = !DILocation(line: 2587, column: 22, scope: !8590)
!8622 = !DILocalVariable(name: "__mptr", scope: !8623, file: !3, line: 2587, type: !280)
!8623 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2587, column: 28)
!8624 = !DILocation(line: 2587, column: 28, scope: !8623)
!8625 = !DILocation(line: 2587, column: 28, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 2587, column: 28)
!8627 = !DILocalVariable(name: "rport", scope: !8590, file: !3, line: 2588, type: !281)
!8628 = !DILocation(line: 2588, column: 19, scope: !8590)
!8629 = !DILocalVariable(name: "dev", scope: !8590, file: !3, line: 2589, type: !2400)
!8630 = !DILocation(line: 2589, column: 17, scope: !8590)
!8631 = !DILocalVariable(name: "flags", scope: !8590, file: !3, line: 2590, type: !419)
!8632 = !DILocation(line: 2590, column: 16, scope: !8590)
!8633 = !DILocalVariable(name: "error", scope: !8590, file: !3, line: 2591, type: !355)
!8634 = !DILocation(line: 2591, column: 6, scope: !8590)
!8635 = !DILocalVariable(name: "size", scope: !8590, file: !3, line: 2592, type: !416)
!8636 = !DILocation(line: 2592, column: 9, scope: !8590)
!8637 = !DILocation(line: 2594, column: 36, scope: !8590)
!8638 = !DILocation(line: 2594, column: 41, scope: !8590)
!8639 = !DILocation(line: 2594, column: 44, scope: !8590)
!8640 = !DILocation(line: 2594, column: 34, scope: !8590)
!8641 = !DILocation(line: 2594, column: 7, scope: !8590)
!8642 = !DILocation(line: 2595, column: 18, scope: !8590)
!8643 = !DILocation(line: 2595, column: 10, scope: !8590)
!8644 = !DILocation(line: 2595, column: 8, scope: !8590)
!8645 = !DILocation(line: 2596, column: 6, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2596, column: 6)
!8647 = !DILocation(line: 2596, column: 6, scope: !8590)
!8648 = !DILocation(line: 2597, column: 3, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 2596, column: 24)
!8650 = !DILocation(line: 2598, column: 3, scope: !8649)
!8651 = !DILocation(line: 2601, column: 2, scope: !8590)
!8652 = !DILocation(line: 2601, column: 9, scope: !8590)
!8653 = !DILocation(line: 2601, column: 23, scope: !8590)
!8654 = !DILocation(line: 2602, column: 2, scope: !8590)
!8655 = !DILocation(line: 2602, column: 9, scope: !8590)
!8656 = !DILocation(line: 2602, column: 27, scope: !8590)
!8657 = !DILocation(line: 2603, column: 24, scope: !8590)
!8658 = !DILocation(line: 2603, column: 33, scope: !8590)
!8659 = !DILocation(line: 2603, column: 2, scope: !8590)
!8660 = !DILocation(line: 2603, column: 9, scope: !8590)
!8661 = !DILocation(line: 2603, column: 22, scope: !8590)
!8662 = !DILocation(line: 2604, column: 10, scope: !8590)
!8663 = !DILocation(line: 2604, column: 17, scope: !8590)
!8664 = !DILocation(line: 2604, column: 2, scope: !8590)
!8665 = !DILocation(line: 2604, column: 29, scope: !8590)
!8666 = !DILocation(line: 2604, column: 34, scope: !8590)
!8667 = !DILocation(line: 2605, column: 10, scope: !8590)
!8668 = !DILocation(line: 2605, column: 17, scope: !8590)
!8669 = !DILocation(line: 2605, column: 2, scope: !8590)
!8670 = !DILocation(line: 2605, column: 29, scope: !8590)
!8671 = !DILocation(line: 2605, column: 34, scope: !8590)
!8672 = !DILocation(line: 2606, column: 19, scope: !8590)
!8673 = !DILocation(line: 2606, column: 24, scope: !8590)
!8674 = !DILocation(line: 2606, column: 2, scope: !8590)
!8675 = !DILocation(line: 2606, column: 9, scope: !8590)
!8676 = !DILocation(line: 2606, column: 17, scope: !8590)
!8677 = !DILocation(line: 2607, column: 17, scope: !8590)
!8678 = !DILocation(line: 2607, column: 22, scope: !8590)
!8679 = !DILocation(line: 2607, column: 2, scope: !8590)
!8680 = !DILocation(line: 2607, column: 9, scope: !8590)
!8681 = !DILocation(line: 2607, column: 15, scope: !8590)
!8682 = !DILocation(line: 2608, column: 2, scope: !8590)
!8683 = !DILocation(line: 2608, column: 9, scope: !8590)
!8684 = !DILocation(line: 2608, column: 20, scope: !8590)
!8685 = !DILocation(line: 2609, column: 6, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2609, column: 6)
!8687 = !DILocation(line: 2609, column: 11, scope: !8686)
!8688 = !DILocation(line: 2609, column: 14, scope: !8686)
!8689 = !DILocation(line: 2609, column: 6, scope: !8590)
!8690 = !DILocation(line: 2610, column: 21, scope: !8686)
!8691 = !DILocation(line: 2610, column: 20, scope: !8686)
!8692 = !DILocation(line: 2610, column: 3, scope: !8686)
!8693 = !DILocation(line: 2610, column: 10, scope: !8686)
!8694 = !DILocation(line: 2610, column: 18, scope: !8686)
!8695 = !DILocation(line: 2611, column: 19, scope: !8590)
!8696 = !DILocation(line: 2611, column: 2, scope: !8590)
!8697 = !DILocation(line: 2611, column: 9, scope: !8590)
!8698 = !DILocation(line: 2611, column: 17, scope: !8590)
!8699 = !DILocation(line: 2612, column: 2, scope: !8590)
!8700 = !DILocation(line: 2612, column: 9, scope: !8590)
!8701 = !DILocation(line: 2612, column: 26, scope: !8590)
!8702 = !DILocation(line: 2614, column: 2, scope: !8590)
!8703 = !DILocation(line: 2614, column: 2, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2614, column: 2)
!8705 = !DILocation(line: 2614, column: 2, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 2614, column: 2)
!8707 = !DILocation(line: 2615, column: 2, scope: !8590)
!8708 = !DILocation(line: 2615, column: 2, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2615, column: 2)
!8710 = !DILocation(line: 2615, column: 2, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 2615, column: 2)
!8712 = !DILocation(line: 2616, column: 2, scope: !8590)
!8713 = !DILocation(line: 2616, column: 2, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2616, column: 2)
!8715 = !DILocation(line: 2617, column: 2, scope: !8590)
!8716 = !DILocation(line: 2617, column: 2, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2617, column: 2)
!8718 = !DILocation(line: 2618, column: 2, scope: !8590)
!8719 = !DILocation(line: 2618, column: 2, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2618, column: 2)
!8721 = !DILocation(line: 2620, column: 2, scope: !8590)
!8722 = !DILocation(line: 2620, column: 2, scope: !8610)
!8723 = !DILocalVariable(name: "__dummy", scope: !8724, file: !3, line: 2620, type: !419)
!8724 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 2620, column: 2)
!8725 = !DILocation(line: 2620, column: 2, scope: !8724)
!8726 = !DILocalVariable(name: "__dummy2", scope: !8724, file: !3, line: 2620, type: !419)
!8727 = !DILocation(line: 2620, column: 2, scope: !8609)
!8728 = !DILocation(line: 2620, column: 2, scope: !8608)
!8729 = !DILocation(line: 2620, column: 2, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 2620, column: 2)
!8731 = !DILocalVariable(name: "__dummy", scope: !8732, file: !3, line: 2620, type: !419)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 2620, column: 2)
!8733 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 2620, column: 2)
!8734 = !DILocation(line: 2620, column: 2, scope: !8732)
!8735 = !DILocalVariable(name: "__dummy2", scope: !8732, file: !3, line: 2620, type: !419)
!8736 = !DILocation(line: 2620, column: 2, scope: !8733)
!8737 = !DILocation(line: 2620, column: 2, scope: !8607)
!8738 = !{i32 -2140166114}
!8739 = !DILocation(line: 2620, column: 2, scope: !8606)
!8740 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !8605)
!8741 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !8605)
!8742 = !DILocation(line: 2622, column: 18, scope: !8590)
!8743 = !DILocation(line: 2622, column: 27, scope: !8590)
!8744 = !DILocation(line: 2622, column: 44, scope: !8590)
!8745 = !DILocation(line: 2622, column: 2, scope: !8590)
!8746 = !DILocation(line: 2622, column: 9, scope: !8590)
!8747 = !DILocation(line: 2622, column: 16, scope: !8590)
!8748 = !DILocation(line: 2623, column: 7, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2623, column: 6)
!8750 = !DILocation(line: 2623, column: 14, scope: !8749)
!8751 = !DILocation(line: 2623, column: 20, scope: !8749)
!8752 = !DILocation(line: 2623, column: 47, scope: !8749)
!8753 = !DILocation(line: 2624, column: 7, scope: !8749)
!8754 = !DILocation(line: 2624, column: 14, scope: !8749)
!8755 = !DILocation(line: 2624, column: 20, scope: !8749)
!8756 = !DILocation(line: 2623, column: 6, scope: !8590)
!8757 = !DILocation(line: 2625, column: 27, scope: !8749)
!8758 = !DILocation(line: 2625, column: 36, scope: !8749)
!8759 = !DILocation(line: 2625, column: 50, scope: !8749)
!8760 = !DILocation(line: 2625, column: 3, scope: !8749)
!8761 = !DILocation(line: 2625, column: 10, scope: !8749)
!8762 = !DILocation(line: 2625, column: 25, scope: !8749)
!8763 = !DILocation(line: 2627, column: 3, scope: !8749)
!8764 = !DILocation(line: 2627, column: 10, scope: !8749)
!8765 = !DILocation(line: 2627, column: 25, scope: !8749)
!8766 = !DILocation(line: 2628, column: 17, scope: !8590)
!8767 = !DILocation(line: 2628, column: 24, scope: !8590)
!8768 = !DILocation(line: 2628, column: 32, scope: !8590)
!8769 = !DILocation(line: 2628, column: 41, scope: !8590)
!8770 = !DILocation(line: 2628, column: 2, scope: !8590)
!8771 = !DILocation(line: 2629, column: 16, scope: !8590)
!8772 = !DILocation(line: 2629, column: 2, scope: !8590)
!8773 = !DILocation(line: 2631, column: 25, scope: !8590)
!8774 = !DILocation(line: 2631, column: 32, scope: !8590)
!8775 = !DILocation(line: 2631, column: 43, scope: !8590)
!8776 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8599)
!8777 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8599)
!8778 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8599)
!8779 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8599)
!8780 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8599)
!8781 = !DILocation(line: 2633, column: 9, scope: !8590)
!8782 = !DILocation(line: 2633, column: 16, scope: !8590)
!8783 = !DILocation(line: 2633, column: 6, scope: !8590)
!8784 = !DILocation(line: 2634, column: 20, scope: !8590)
!8785 = !DILocation(line: 2634, column: 2, scope: !8590)
!8786 = !DILocation(line: 2635, column: 28, scope: !8590)
!8787 = !DILocation(line: 2635, column: 35, scope: !8590)
!8788 = !DILocation(line: 2635, column: 16, scope: !8590)
!8789 = !DILocation(line: 2635, column: 2, scope: !8590)
!8790 = !DILocation(line: 2635, column: 7, scope: !8590)
!8791 = !DILocation(line: 2635, column: 14, scope: !8590)
!8792 = !DILocation(line: 2636, column: 2, scope: !8590)
!8793 = !DILocation(line: 2636, column: 7, scope: !8590)
!8794 = !DILocation(line: 2636, column: 15, scope: !8590)
!8795 = !DILocation(line: 2637, column: 15, scope: !8590)
!8796 = !DILocation(line: 2638, column: 8, scope: !8590)
!8797 = !DILocation(line: 2638, column: 15, scope: !8590)
!8798 = !DILocation(line: 2638, column: 24, scope: !8590)
!8799 = !DILocation(line: 2638, column: 33, scope: !8590)
!8800 = !DILocation(line: 2638, column: 40, scope: !8590)
!8801 = !DILocation(line: 2637, column: 2, scope: !8590)
!8802 = !DILocation(line: 2639, column: 25, scope: !8590)
!8803 = !DILocation(line: 2639, column: 2, scope: !8590)
!8804 = !DILocation(line: 2641, column: 21, scope: !8590)
!8805 = !DILocation(line: 2641, column: 10, scope: !8590)
!8806 = !DILocation(line: 2641, column: 8, scope: !8590)
!8807 = !DILocation(line: 2642, column: 6, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2642, column: 6)
!8809 = !DILocation(line: 2642, column: 6, scope: !8590)
!8810 = !DILocation(line: 2643, column: 3, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 2642, column: 13)
!8812 = !DILocation(line: 2644, column: 3, scope: !8811)
!8813 = !DILocation(line: 2646, column: 23, scope: !8590)
!8814 = !DILocation(line: 2646, column: 2, scope: !8590)
!8815 = !DILocation(line: 2647, column: 29, scope: !8590)
!8816 = !DILocation(line: 2647, column: 2, scope: !8590)
!8817 = !DILocation(line: 2649, column: 18, scope: !8590)
!8818 = !DILocation(line: 2649, column: 25, scope: !8590)
!8819 = !DILocation(line: 2649, column: 2, scope: !8590)
!8820 = !DILocation(line: 2652, column: 6, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2652, column: 6)
!8822 = !DILocation(line: 2652, column: 13, scope: !8821)
!8823 = !DILocation(line: 2652, column: 19, scope: !8821)
!8824 = !DILocation(line: 2652, column: 6, scope: !8590)
!8825 = !DILocation(line: 2654, column: 3, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 2652, column: 46)
!8827 = !DILocation(line: 2654, column: 10, scope: !8826)
!8828 = !DILocation(line: 2654, column: 16, scope: !8826)
!8829 = !DILocation(line: 2655, column: 19, scope: !8826)
!8830 = !DILocation(line: 2655, column: 27, scope: !8826)
!8831 = !DILocation(line: 2655, column: 34, scope: !8826)
!8832 = !DILocation(line: 2655, column: 3, scope: !8826)
!8833 = !DILocation(line: 2656, column: 2, scope: !8826)
!8834 = !DILocation(line: 2658, column: 9, scope: !8590)
!8835 = !DILocation(line: 2658, column: 2, scope: !8590)
!8836 = !DILabel(scope: !8590, name: "delete_rport", file: !3, line: 2660)
!8837 = !DILocation(line: 2660, column: 1, scope: !8590)
!8838 = !DILocation(line: 2661, column: 27, scope: !8590)
!8839 = !DILocation(line: 2661, column: 2, scope: !8590)
!8840 = !DILocation(line: 2662, column: 2, scope: !8590)
!8841 = !DILocation(line: 2662, column: 2, scope: !8597)
!8842 = !DILocalVariable(name: "__dummy", scope: !8843, file: !3, line: 2662, type: !419)
!8843 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 2662, column: 2)
!8844 = !DILocation(line: 2662, column: 2, scope: !8843)
!8845 = !DILocalVariable(name: "__dummy2", scope: !8843, file: !3, line: 2662, type: !419)
!8846 = !DILocation(line: 2662, column: 2, scope: !8596)
!8847 = !DILocation(line: 2662, column: 2, scope: !8595)
!8848 = !DILocation(line: 2662, column: 2, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 2662, column: 2)
!8850 = !DILocalVariable(name: "__dummy", scope: !8851, file: !3, line: 2662, type: !419)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2662, column: 2)
!8852 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 2662, column: 2)
!8853 = !DILocation(line: 2662, column: 2, scope: !8851)
!8854 = !DILocalVariable(name: "__dummy2", scope: !8851, file: !3, line: 2662, type: !419)
!8855 = !DILocation(line: 2662, column: 2, scope: !8852)
!8856 = !DILocation(line: 2662, column: 2, scope: !8594)
!8857 = !{i32 -2140165020}
!8858 = !DILocation(line: 2662, column: 2, scope: !8593)
!8859 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !8592)
!8860 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !8592)
!8861 = !DILocation(line: 2663, column: 12, scope: !8590)
!8862 = !DILocation(line: 2663, column: 19, scope: !8590)
!8863 = !DILocation(line: 2663, column: 2, scope: !8590)
!8864 = !DILocation(line: 2664, column: 16, scope: !8590)
!8865 = !DILocation(line: 2664, column: 2, scope: !8590)
!8866 = !DILocation(line: 2665, column: 25, scope: !8590)
!8867 = !DILocation(line: 2665, column: 32, scope: !8590)
!8868 = !DILocation(line: 2665, column: 43, scope: !8590)
!8869 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8602)
!8870 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8602)
!8871 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8602)
!8872 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8602)
!8873 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8602)
!8874 = !DILocation(line: 2666, column: 13, scope: !8590)
!8875 = !DILocation(line: 2666, column: 18, scope: !8590)
!8876 = !DILocation(line: 2666, column: 2, scope: !8590)
!8877 = !DILocation(line: 2667, column: 8, scope: !8590)
!8878 = !DILocation(line: 2667, column: 2, scope: !8590)
!8879 = !DILocation(line: 2668, column: 2, scope: !8590)
!8880 = !DILocation(line: 2669, column: 1, scope: !8590)
!8881 = distinct !DISubprogram(name: "fc_remote_port_delete", scope: !3, file: !3, line: 2945, type: !5477, scopeLine: 2946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8882 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8883)
!8883 = distinct !DILocation(line: 2983, column: 2, scope: !8881)
!8884 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8883)
!8885 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !8886)
!8886 = distinct !DILocation(line: 2962, column: 3, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2961, column: 48)
!8888 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2961, column: 6)
!8889 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !8886)
!8890 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !8891)
!8891 = distinct !DILocation(line: 2959, column: 2, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 2959, column: 2)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 2959, column: 2)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 2959, column: 2)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 2959, column: 2)
!8896 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2959, column: 2)
!8897 = !DILocalVariable(name: "rport", arg: 1, scope: !8881, file: !3, line: 2945, type: !281)
!8898 = !DILocation(line: 2945, column: 41, scope: !8881)
!8899 = !DILocalVariable(name: "shost", scope: !8881, file: !3, line: 2947, type: !5046)
!8900 = !DILocation(line: 2947, column: 20, scope: !8881)
!8901 = !DILocation(line: 2947, column: 28, scope: !8881)
!8902 = !DILocalVariable(name: "timeout", scope: !8881, file: !3, line: 2948, type: !419)
!8903 = !DILocation(line: 2948, column: 16, scope: !8881)
!8904 = !DILocation(line: 2948, column: 26, scope: !8881)
!8905 = !DILocation(line: 2948, column: 33, scope: !8881)
!8906 = !DILocalVariable(name: "flags", scope: !8881, file: !3, line: 2949, type: !419)
!8907 = !DILocation(line: 2949, column: 16, scope: !8881)
!8908 = !DILocation(line: 2959, column: 2, scope: !8881)
!8909 = !DILocation(line: 2959, column: 2, scope: !8896)
!8910 = !DILocalVariable(name: "__dummy", scope: !8911, file: !3, line: 2959, type: !419)
!8911 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 2959, column: 2)
!8912 = !DILocation(line: 2959, column: 2, scope: !8911)
!8913 = !DILocalVariable(name: "__dummy2", scope: !8911, file: !3, line: 2959, type: !419)
!8914 = !DILocation(line: 2959, column: 2, scope: !8895)
!8915 = !DILocation(line: 2959, column: 2, scope: !8894)
!8916 = !DILocation(line: 2959, column: 2, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 2959, column: 2)
!8918 = !DILocalVariable(name: "__dummy", scope: !8919, file: !3, line: 2959, type: !419)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 2959, column: 2)
!8920 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 2959, column: 2)
!8921 = !DILocation(line: 2959, column: 2, scope: !8919)
!8922 = !DILocalVariable(name: "__dummy2", scope: !8919, file: !3, line: 2959, type: !419)
!8923 = !DILocation(line: 2959, column: 2, scope: !8920)
!8924 = !DILocation(line: 2959, column: 2, scope: !8893)
!8925 = !{i32 -2140150876}
!8926 = !DILocation(line: 2959, column: 2, scope: !8892)
!8927 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !8891)
!8928 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !8891)
!8929 = !DILocation(line: 2961, column: 6, scope: !8888)
!8930 = !DILocation(line: 2961, column: 13, scope: !8888)
!8931 = !DILocation(line: 2961, column: 24, scope: !8888)
!8932 = !DILocation(line: 2961, column: 6, scope: !8881)
!8933 = !DILocation(line: 2962, column: 26, scope: !8887)
!8934 = !DILocation(line: 2962, column: 33, scope: !8887)
!8935 = !DILocation(line: 2962, column: 44, scope: !8887)
!8936 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8886)
!8937 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8886)
!8938 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8886)
!8939 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8886)
!8940 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8886)
!8941 = !DILocation(line: 2963, column: 3, scope: !8887)
!8942 = !DILocation(line: 2979, column: 2, scope: !8881)
!8943 = !DILocation(line: 2979, column: 9, scope: !8881)
!8944 = !DILocation(line: 2979, column: 20, scope: !8881)
!8945 = !DILocation(line: 2981, column: 2, scope: !8881)
!8946 = !DILocation(line: 2981, column: 9, scope: !8881)
!8947 = !DILocation(line: 2981, column: 15, scope: !8881)
!8948 = !DILocation(line: 2983, column: 25, scope: !8881)
!8949 = !DILocation(line: 2983, column: 32, scope: !8881)
!8950 = !DILocation(line: 2983, column: 43, scope: !8881)
!8951 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !8883)
!8952 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !8883)
!8953 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !8883)
!8954 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !8883)
!8955 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !8883)
!8956 = !DILocation(line: 2985, column: 21, scope: !8881)
!8957 = !DILocation(line: 2985, column: 28, scope: !8881)
!8958 = !DILocation(line: 2985, column: 2, scope: !8881)
!8959 = !DILocation(line: 2988, column: 7, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2988, column: 6)
!8961 = !DILocation(line: 2988, column: 14, scope: !8960)
!8962 = !DILocation(line: 2988, column: 31, scope: !8960)
!8963 = !DILocation(line: 2988, column: 38, scope: !8960)
!8964 = !DILocation(line: 2989, column: 7, scope: !8960)
!8965 = !DILocation(line: 2989, column: 14, scope: !8960)
!8966 = !DILocation(line: 2989, column: 33, scope: !8960)
!8967 = !DILocation(line: 2989, column: 31, scope: !8960)
!8968 = !DILocation(line: 2988, column: 6, scope: !8881)
!8969 = !DILocation(line: 2990, column: 25, scope: !8960)
!8970 = !DILocation(line: 2990, column: 33, scope: !8960)
!8971 = !DILocation(line: 2990, column: 40, scope: !8960)
!8972 = !DILocation(line: 2991, column: 6, scope: !8960)
!8973 = !DILocation(line: 2991, column: 13, scope: !8960)
!8974 = !DILocation(line: 2991, column: 30, scope: !8960)
!8975 = !DILocation(line: 2990, column: 3, scope: !8960)
!8976 = !DILocation(line: 2994, column: 24, scope: !8881)
!8977 = !DILocation(line: 2994, column: 32, scope: !8881)
!8978 = !DILocation(line: 2994, column: 39, scope: !8881)
!8979 = !DILocation(line: 2994, column: 54, scope: !8881)
!8980 = !DILocation(line: 2994, column: 62, scope: !8881)
!8981 = !DILocation(line: 2994, column: 2, scope: !8881)
!8982 = !DILocation(line: 2995, column: 1, scope: !8881)
!8983 = distinct !DISubprogram(name: "dev_to_shost", scope: !154, file: !154, line: 717, type: !8984, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!5046, !2400}
!8986 = !DILocalVariable(name: "dev", arg: 1, scope: !8983, file: !154, line: 717, type: !2400)
!8987 = !DILocation(line: 717, column: 61, scope: !8983)
!8988 = !DILocation(line: 719, column: 2, scope: !8983)
!8989 = !DILocation(line: 719, column: 30, scope: !8983)
!8990 = !DILocation(line: 719, column: 10, scope: !8983)
!8991 = !DILocation(line: 719, column: 9, scope: !8983)
!8992 = !DILocation(line: 720, column: 8, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !154, line: 720, column: 7)
!8994 = distinct !DILexicalBlock(scope: !8983, file: !154, line: 719, column: 36)
!8995 = !DILocation(line: 720, column: 13, scope: !8993)
!8996 = !DILocation(line: 720, column: 7, scope: !8994)
!8997 = !DILocation(line: 721, column: 4, scope: !8993)
!8998 = !DILocation(line: 722, column: 9, scope: !8994)
!8999 = !DILocation(line: 722, column: 14, scope: !8994)
!9000 = !DILocation(line: 722, column: 7, scope: !8994)
!9001 = distinct !{!9001, !8988, !9002}
!9002 = !DILocation(line: 723, column: 2, scope: !8983)
!9003 = !DILocalVariable(name: "__mptr", scope: !9004, file: !154, line: 724, type: !280)
!9004 = distinct !DILexicalBlock(scope: !8983, file: !154, line: 724, column: 9)
!9005 = !DILocation(line: 724, column: 9, scope: !9004)
!9006 = !DILocation(line: 724, column: 9, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9004, file: !154, line: 724, column: 9)
!9008 = !DILocation(line: 724, column: 2, scope: !8983)
!9009 = !DILocation(line: 725, column: 1, scope: !8983)
!9010 = distinct !DISubprogram(name: "fc_queue_devloss_work", scope: !3, file: !3, line: 2361, type: !9011, scopeLine: 2363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{!355, !5046, !9013, !419}
!9013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!9014 = !DILocalVariable(name: "shost", arg: 1, scope: !9010, file: !3, line: 2361, type: !5046)
!9015 = !DILocation(line: 2361, column: 41, scope: !9010)
!9016 = !DILocalVariable(name: "work", arg: 2, scope: !9010, file: !3, line: 2361, type: !9013)
!9017 = !DILocation(line: 2361, column: 69, scope: !9010)
!9018 = !DILocalVariable(name: "delay", arg: 3, scope: !9010, file: !3, line: 2362, type: !419)
!9019 = !DILocation(line: 2362, column: 19, scope: !9010)
!9020 = !DILocation(line: 2364, column: 6, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 2364, column: 6)
!9022 = !DILocation(line: 2364, column: 6, scope: !9010)
!9023 = !DILocation(line: 2367, column: 36, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 2364, column: 48)
!9025 = !DILocation(line: 2367, column: 43, scope: !9024)
!9026 = !DILocation(line: 2367, column: 50, scope: !9024)
!9027 = !DILocation(line: 2365, column: 3, scope: !9024)
!9028 = !DILocation(line: 2368, column: 3, scope: !9024)
!9029 = !DILocation(line: 2370, column: 3, scope: !9024)
!9030 = !DILocation(line: 2373, column: 28, scope: !9010)
!9031 = !DILocation(line: 2373, column: 59, scope: !9010)
!9032 = !DILocation(line: 2373, column: 65, scope: !9010)
!9033 = !DILocation(line: 2373, column: 9, scope: !9010)
!9034 = !DILocation(line: 2373, column: 2, scope: !9010)
!9035 = !DILocation(line: 2374, column: 1, scope: !9010)
!9036 = distinct !DISubprogram(name: "fc_block_rport", scope: !3, file: !3, line: 3273, type: !9037, scopeLine: 3274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9037 = !DISubroutineType(types: !9038)
!9038 = !{!355, !281}
!9039 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !9040)
!9040 = distinct !DILocation(line: 3283, column: 3, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 3283, column: 3)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 3283, column: 3)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 3283, column: 3)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 3283, column: 3)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 3283, column: 3)
!9046 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3280, column: 56)
!9047 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9048)
!9048 = distinct !DILocation(line: 3281, column: 3, scope: !9046)
!9049 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9048)
!9050 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9051)
!9051 = distinct !DILocation(line: 3285, column: 2, scope: !9036)
!9052 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9051)
!9053 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !9054)
!9054 = distinct !DILocation(line: 3278, column: 2, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 3278, column: 2)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 3278, column: 2)
!9057 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 3278, column: 2)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 3278, column: 2)
!9059 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3278, column: 2)
!9060 = !DILocalVariable(name: "rport", arg: 1, scope: !9036, file: !3, line: 3273, type: !281)
!9061 = !DILocation(line: 3273, column: 37, scope: !9036)
!9062 = !DILocalVariable(name: "shost", scope: !9036, file: !3, line: 3275, type: !5046)
!9063 = !DILocation(line: 3275, column: 20, scope: !9036)
!9064 = !DILocation(line: 3275, column: 28, scope: !9036)
!9065 = !DILocalVariable(name: "flags", scope: !9036, file: !3, line: 3276, type: !419)
!9066 = !DILocation(line: 3276, column: 16, scope: !9036)
!9067 = !DILocation(line: 3278, column: 2, scope: !9036)
!9068 = !DILocation(line: 3278, column: 2, scope: !9059)
!9069 = !DILocalVariable(name: "__dummy", scope: !9070, file: !3, line: 3278, type: !419)
!9070 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 3278, column: 2)
!9071 = !DILocation(line: 3278, column: 2, scope: !9070)
!9072 = !DILocalVariable(name: "__dummy2", scope: !9070, file: !3, line: 3278, type: !419)
!9073 = !DILocation(line: 3278, column: 2, scope: !9058)
!9074 = !DILocation(line: 3278, column: 2, scope: !9057)
!9075 = !DILocation(line: 3278, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 3278, column: 2)
!9077 = !DILocalVariable(name: "__dummy", scope: !9078, file: !3, line: 3278, type: !419)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 3278, column: 2)
!9079 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 3278, column: 2)
!9080 = !DILocation(line: 3278, column: 2, scope: !9078)
!9081 = !DILocalVariable(name: "__dummy2", scope: !9078, file: !3, line: 3278, type: !419)
!9082 = !DILocation(line: 3278, column: 2, scope: !9079)
!9083 = !DILocation(line: 3278, column: 2, scope: !9056)
!9084 = !{i32 -2140135051}
!9085 = !DILocation(line: 3278, column: 2, scope: !9055)
!9086 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !9054)
!9087 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !9054)
!9088 = !DILocation(line: 3279, column: 2, scope: !9036)
!9089 = !DILocation(line: 3279, column: 9, scope: !9036)
!9090 = !DILocation(line: 3279, column: 16, scope: !9036)
!9091 = !DILocation(line: 3279, column: 27, scope: !9036)
!9092 = !DILocation(line: 3279, column: 51, scope: !9036)
!9093 = !DILocation(line: 3280, column: 11, scope: !9036)
!9094 = !DILocation(line: 3280, column: 18, scope: !9036)
!9095 = !DILocation(line: 3280, column: 24, scope: !9036)
!9096 = !DILocation(line: 3280, column: 9, scope: !9036)
!9097 = !DILocation(line: 0, scope: !9036)
!9098 = !DILocation(line: 3281, column: 26, scope: !9046)
!9099 = !DILocation(line: 3281, column: 33, scope: !9046)
!9100 = !DILocation(line: 3281, column: 44, scope: !9046)
!9101 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9048)
!9102 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9048)
!9103 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9048)
!9104 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9048)
!9105 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9048)
!9106 = !DILocation(line: 3282, column: 3, scope: !9046)
!9107 = !DILocation(line: 3283, column: 3, scope: !9046)
!9108 = !DILocation(line: 3283, column: 3, scope: !9045)
!9109 = !DILocalVariable(name: "__dummy", scope: !9110, file: !3, line: 3283, type: !419)
!9110 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 3283, column: 3)
!9111 = !DILocation(line: 3283, column: 3, scope: !9110)
!9112 = !DILocalVariable(name: "__dummy2", scope: !9110, file: !3, line: 3283, type: !419)
!9113 = !DILocation(line: 3283, column: 3, scope: !9044)
!9114 = !DILocation(line: 3283, column: 3, scope: !9043)
!9115 = !DILocation(line: 3283, column: 3, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 3283, column: 3)
!9117 = !DILocalVariable(name: "__dummy", scope: !9118, file: !3, line: 3283, type: !419)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 3283, column: 3)
!9119 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 3283, column: 3)
!9120 = !DILocation(line: 3283, column: 3, scope: !9118)
!9121 = !DILocalVariable(name: "__dummy2", scope: !9118, file: !3, line: 3283, type: !419)
!9122 = !DILocation(line: 3283, column: 3, scope: !9119)
!9123 = !DILocation(line: 3283, column: 3, scope: !9042)
!9124 = !{i32 -2140133992}
!9125 = !DILocation(line: 3283, column: 3, scope: !9041)
!9126 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !9040)
!9127 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !9040)
!9128 = distinct !{!9128, !9088, !9129}
!9129 = !DILocation(line: 3284, column: 2, scope: !9036)
!9130 = !DILocation(line: 3285, column: 25, scope: !9036)
!9131 = !DILocation(line: 3285, column: 32, scope: !9036)
!9132 = !DILocation(line: 3285, column: 43, scope: !9036)
!9133 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9051)
!9134 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9051)
!9135 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9051)
!9136 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9051)
!9137 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9051)
!9138 = !DILocation(line: 3287, column: 6, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3287, column: 6)
!9140 = !DILocation(line: 3287, column: 13, scope: !9139)
!9141 = !DILocation(line: 3287, column: 19, scope: !9139)
!9142 = !DILocation(line: 3287, column: 6, scope: !9036)
!9143 = !DILocation(line: 3288, column: 3, scope: !9139)
!9144 = !DILocation(line: 3290, column: 2, scope: !9036)
!9145 = !DILocation(line: 3291, column: 1, scope: !9036)
!9146 = distinct !DISubprogram(name: "fc_block_scsi_eh", scope: !3, file: !3, line: 3308, type: !5314, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9147 = !DILocalVariable(name: "cmnd", arg: 1, scope: !9146, file: !3, line: 3308, type: !5226)
!9148 = !DILocation(line: 3308, column: 40, scope: !9146)
!9149 = !DILocalVariable(name: "rport", scope: !9146, file: !3, line: 3310, type: !281)
!9150 = !DILocation(line: 3310, column: 19, scope: !9146)
!9151 = !DILocation(line: 3310, column: 27, scope: !9146)
!9152 = !DILocalVariable(name: "__mptr", scope: !9153, file: !3, line: 3310, type: !280)
!9153 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 3310, column: 27)
!9154 = !DILocation(line: 3310, column: 27, scope: !9153)
!9155 = !DILocation(line: 3310, column: 27, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 3310, column: 27)
!9157 = !DILocalVariable(name: "__ret_warn_on", scope: !9158, file: !3, line: 3312, type: !355)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 3312, column: 6)
!9159 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 3312, column: 6)
!9160 = !DILocation(line: 3312, column: 6, scope: !9158)
!9161 = !DILocation(line: 3312, column: 6, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 3312, column: 6)
!9163 = !DILocation(line: 3312, column: 6, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 3312, column: 6)
!9165 = !DILocation(line: 3312, column: 6, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3312, column: 6)
!9167 = !DILocation(line: 3312, column: 6, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3312, column: 6)
!9169 = !{i32 -2140131232, i32 -2140131203, i32 -2140131157, i32 -2140131099, i32 -2140131045, i32 -2140130991, i32 -2140130936, i32 -2140130905}
!9170 = !DILocation(line: 3312, column: 6, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3312, column: 6)
!9172 = !{i32 -2140130479, i32 -2140130472, i32 -2140130420, i32 -2140130389, i32 -2140130359}
!9173 = !DILocation(line: 3312, column: 6, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3312, column: 6)
!9175 = !DILocation(line: 3312, column: 6, scope: !9159)
!9176 = !DILocation(line: 3312, column: 6, scope: !9146)
!9177 = !DILocation(line: 3313, column: 3, scope: !9159)
!9178 = !DILocation(line: 3315, column: 24, scope: !9146)
!9179 = !DILocation(line: 3315, column: 9, scope: !9146)
!9180 = !DILocation(line: 3315, column: 2, scope: !9146)
!9181 = !DILocation(line: 3316, column: 1, scope: !9146)
!9182 = distinct !DISubprogram(name: "fc_vport_create", scope: !3, file: !3, line: 3459, type: !9183, scopeLine: 3461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9183 = !DISubroutineType(types: !9184)
!9184 = !{!5538, !5046, !355, !9185}
!9185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9186, size: 64)
!9186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_vport_identifiers", file: !164, line: 180, size: 768, elements: !9187)
!9187 = !{!9188, !9189, !9190, !9191, !9192, !9193}
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !9186, file: !164, line: 181, baseType: !288, size: 64)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "port_name", scope: !9186, file: !164, line: 182, baseType: !288, size: 64, offset: 64)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "roles", scope: !9186, file: !164, line: 183, baseType: !274, size: 32, offset: 128)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !9186, file: !164, line: 184, baseType: !577, size: 8, offset: 160)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "vport_type", scope: !9186, file: !164, line: 185, baseType: !204, size: 32, offset: 192)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_name", scope: !9186, file: !164, line: 186, baseType: !2402, size: 512, offset: 224)
!9194 = !DILocalVariable(name: "shost", arg: 1, scope: !9182, file: !3, line: 3459, type: !5046)
!9195 = !DILocation(line: 3459, column: 35, scope: !9182)
!9196 = !DILocalVariable(name: "channel", arg: 2, scope: !9182, file: !3, line: 3459, type: !355)
!9197 = !DILocation(line: 3459, column: 46, scope: !9182)
!9198 = !DILocalVariable(name: "ids", arg: 3, scope: !9182, file: !3, line: 3460, type: !9185)
!9199 = !DILocation(line: 3460, column: 31, scope: !9182)
!9200 = !DILocalVariable(name: "stat", scope: !9182, file: !3, line: 3462, type: !355)
!9201 = !DILocation(line: 3462, column: 6, scope: !9182)
!9202 = !DILocalVariable(name: "vport", scope: !9182, file: !3, line: 3463, type: !5538)
!9203 = !DILocation(line: 3463, column: 19, scope: !9182)
!9204 = !DILocation(line: 3465, column: 24, scope: !9182)
!9205 = !DILocation(line: 3465, column: 31, scope: !9182)
!9206 = !DILocation(line: 3465, column: 41, scope: !9182)
!9207 = !DILocation(line: 3465, column: 48, scope: !9182)
!9208 = !DILocation(line: 3466, column: 4, scope: !9182)
!9209 = !DILocation(line: 3465, column: 9, scope: !9182)
!9210 = !DILocation(line: 3465, column: 7, scope: !9182)
!9211 = !DILocation(line: 3467, column: 9, scope: !9182)
!9212 = !DILocation(line: 3467, column: 23, scope: !9182)
!9213 = !DILocation(line: 3467, column: 2, scope: !9182)
!9214 = distinct !DISubprogram(name: "fc_vport_setup", scope: !3, file: !3, line: 3335, type: !9215, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{!355, !5046, !355, !2400, !9185, !9217}
!9217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!9218 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !9219)
!9219 = distinct !DILocation(line: 3437, column: 2, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !3, line: 3437, column: 2)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 3437, column: 2)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 3437, column: 2)
!9223 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 3437, column: 2)
!9224 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3437, column: 2)
!9225 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 3422, column: 2, scope: !9214)
!9227 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9226)
!9228 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !9229)
!9229 = distinct !DILocation(line: 3420, column: 2, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 3420, column: 2)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 3420, column: 2)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 3420, column: 2)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 3420, column: 2)
!9234 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3420, column: 2)
!9235 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9236)
!9236 = distinct !DILocation(line: 3383, column: 2, scope: !9214)
!9237 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9236)
!9238 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9239)
!9239 = distinct !DILocation(line: 3374, column: 3, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 3373, column: 62)
!9241 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3373, column: 6)
!9242 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9239)
!9243 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9244)
!9244 = distinct !DILocation(line: 3441, column: 2, scope: !9214)
!9245 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9244)
!9246 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !9247)
!9247 = distinct !DILocation(line: 3371, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 3371, column: 2)
!9249 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 3371, column: 2)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 3371, column: 2)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3371, column: 2)
!9252 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3371, column: 2)
!9253 = !DILocalVariable(name: "shost", arg: 1, scope: !9214, file: !3, line: 3335, type: !5046)
!9254 = !DILocation(line: 3335, column: 34, scope: !9214)
!9255 = !DILocalVariable(name: "channel", arg: 2, scope: !9214, file: !3, line: 3335, type: !355)
!9256 = !DILocation(line: 3335, column: 45, scope: !9214)
!9257 = !DILocalVariable(name: "pdev", arg: 3, scope: !9214, file: !3, line: 3335, type: !2400)
!9258 = !DILocation(line: 3335, column: 69, scope: !9214)
!9259 = !DILocalVariable(name: "ids", arg: 4, scope: !9214, file: !3, line: 3336, type: !9185)
!9260 = !DILocation(line: 3336, column: 32, scope: !9214)
!9261 = !DILocalVariable(name: "ret_vport", arg: 5, scope: !9214, file: !3, line: 3336, type: !9217)
!9262 = !DILocation(line: 3336, column: 55, scope: !9214)
!9263 = !DILocalVariable(name: "fc_host", scope: !9214, file: !3, line: 3338, type: !5655)
!9264 = !DILocation(line: 3338, column: 24, scope: !9214)
!9265 = !DILocation(line: 3338, column: 34, scope: !9214)
!9266 = !DILocalVariable(name: "fci", scope: !9214, file: !3, line: 3339, type: !4984)
!9267 = !DILocation(line: 3339, column: 22, scope: !9214)
!9268 = !DILocalVariable(name: "__mptr", scope: !9269, file: !3, line: 3339, type: !280)
!9269 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3339, column: 28)
!9270 = !DILocation(line: 3339, column: 28, scope: !9269)
!9271 = !DILocation(line: 3339, column: 28, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 3339, column: 28)
!9273 = !DILocalVariable(name: "vport", scope: !9214, file: !3, line: 3340, type: !5538)
!9274 = !DILocation(line: 3340, column: 19, scope: !9214)
!9275 = !DILocalVariable(name: "dev", scope: !9214, file: !3, line: 3341, type: !2400)
!9276 = !DILocation(line: 3341, column: 17, scope: !9214)
!9277 = !DILocalVariable(name: "flags", scope: !9214, file: !3, line: 3342, type: !419)
!9278 = !DILocation(line: 3342, column: 16, scope: !9214)
!9279 = !DILocalVariable(name: "size", scope: !9214, file: !3, line: 3343, type: !416)
!9280 = !DILocation(line: 3343, column: 9, scope: !9214)
!9281 = !DILocalVariable(name: "error", scope: !9214, file: !3, line: 3344, type: !355)
!9282 = !DILocation(line: 3344, column: 6, scope: !9214)
!9283 = !DILocation(line: 3346, column: 3, scope: !9214)
!9284 = !DILocation(line: 3346, column: 13, scope: !9214)
!9285 = !DILocation(line: 3348, column: 9, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3348, column: 7)
!9287 = !DILocation(line: 3348, column: 14, scope: !9286)
!9288 = !DILocation(line: 3348, column: 17, scope: !9286)
!9289 = !DILocation(line: 3348, column: 7, scope: !9214)
!9290 = !DILocation(line: 3349, column: 3, scope: !9286)
!9291 = !DILocation(line: 3351, column: 36, scope: !9214)
!9292 = !DILocation(line: 3351, column: 41, scope: !9214)
!9293 = !DILocation(line: 3351, column: 44, scope: !9214)
!9294 = !DILocation(line: 3351, column: 34, scope: !9214)
!9295 = !DILocation(line: 3351, column: 7, scope: !9214)
!9296 = !DILocation(line: 3352, column: 18, scope: !9214)
!9297 = !DILocation(line: 3352, column: 10, scope: !9214)
!9298 = !DILocation(line: 3352, column: 8, scope: !9214)
!9299 = !DILocation(line: 3353, column: 6, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3353, column: 6)
!9301 = !DILocation(line: 3353, column: 6, scope: !9214)
!9302 = !DILocation(line: 3354, column: 3, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 3353, column: 24)
!9304 = !DILocation(line: 3355, column: 3, scope: !9303)
!9305 = !DILocation(line: 3358, column: 2, scope: !9214)
!9306 = !DILocation(line: 3358, column: 9, scope: !9214)
!9307 = !DILocation(line: 3358, column: 21, scope: !9214)
!9308 = !DILocation(line: 3359, column: 2, scope: !9214)
!9309 = !DILocation(line: 3359, column: 9, scope: !9214)
!9310 = !DILocation(line: 3359, column: 26, scope: !9214)
!9311 = !DILocation(line: 3360, column: 21, scope: !9214)
!9312 = !DILocation(line: 3360, column: 26, scope: !9214)
!9313 = !DILocation(line: 3360, column: 2, scope: !9214)
!9314 = !DILocation(line: 3360, column: 9, scope: !9214)
!9315 = !DILocation(line: 3360, column: 19, scope: !9214)
!9316 = !DILocation(line: 3361, column: 21, scope: !9214)
!9317 = !DILocation(line: 3361, column: 26, scope: !9214)
!9318 = !DILocation(line: 3361, column: 2, scope: !9214)
!9319 = !DILocation(line: 3361, column: 9, scope: !9214)
!9320 = !DILocation(line: 3361, column: 19, scope: !9214)
!9321 = !DILocation(line: 3362, column: 17, scope: !9214)
!9322 = !DILocation(line: 3362, column: 22, scope: !9214)
!9323 = !DILocation(line: 3362, column: 2, scope: !9214)
!9324 = !DILocation(line: 3362, column: 9, scope: !9214)
!9325 = !DILocation(line: 3362, column: 15, scope: !9214)
!9326 = !DILocation(line: 3363, column: 22, scope: !9214)
!9327 = !DILocation(line: 3363, column: 27, scope: !9214)
!9328 = !DILocation(line: 3363, column: 2, scope: !9214)
!9329 = !DILocation(line: 3363, column: 9, scope: !9214)
!9330 = !DILocation(line: 3363, column: 20, scope: !9214)
!9331 = !DILocation(line: 3364, column: 6, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3364, column: 6)
!9333 = !DILocation(line: 3364, column: 11, scope: !9332)
!9334 = !DILocation(line: 3364, column: 14, scope: !9332)
!9335 = !DILocation(line: 3364, column: 6, scope: !9214)
!9336 = !DILocation(line: 3365, column: 21, scope: !9332)
!9337 = !DILocation(line: 3365, column: 20, scope: !9332)
!9338 = !DILocation(line: 3365, column: 3, scope: !9332)
!9339 = !DILocation(line: 3365, column: 10, scope: !9332)
!9340 = !DILocation(line: 3365, column: 18, scope: !9332)
!9341 = !DILocation(line: 3366, column: 17, scope: !9214)
!9342 = !DILocation(line: 3366, column: 2, scope: !9214)
!9343 = !DILocation(line: 3366, column: 9, scope: !9214)
!9344 = !DILocation(line: 3366, column: 15, scope: !9214)
!9345 = !DILocation(line: 3367, column: 19, scope: !9214)
!9346 = !DILocation(line: 3367, column: 2, scope: !9214)
!9347 = !DILocation(line: 3367, column: 9, scope: !9214)
!9348 = !DILocation(line: 3367, column: 17, scope: !9214)
!9349 = !DILocation(line: 3368, column: 2, scope: !9214)
!9350 = !DILocation(line: 3368, column: 9, scope: !9214)
!9351 = !DILocation(line: 3368, column: 15, scope: !9214)
!9352 = !DILocation(line: 3369, column: 2, scope: !9214)
!9353 = !DILocation(line: 3369, column: 2, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3369, column: 2)
!9355 = !DILocation(line: 3371, column: 2, scope: !9214)
!9356 = !DILocation(line: 3371, column: 2, scope: !9252)
!9357 = !DILocalVariable(name: "__dummy", scope: !9358, file: !3, line: 3371, type: !419)
!9358 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 3371, column: 2)
!9359 = !DILocation(line: 3371, column: 2, scope: !9358)
!9360 = !DILocalVariable(name: "__dummy2", scope: !9358, file: !3, line: 3371, type: !419)
!9361 = !DILocation(line: 3371, column: 2, scope: !9251)
!9362 = !DILocation(line: 3371, column: 2, scope: !9250)
!9363 = !DILocation(line: 3371, column: 2, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 3371, column: 2)
!9365 = !DILocalVariable(name: "__dummy", scope: !9366, file: !3, line: 3371, type: !419)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 3371, column: 2)
!9367 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 3371, column: 2)
!9368 = !DILocation(line: 3371, column: 2, scope: !9366)
!9369 = !DILocalVariable(name: "__dummy2", scope: !9366, file: !3, line: 3371, type: !419)
!9370 = !DILocation(line: 3371, column: 2, scope: !9367)
!9371 = !DILocation(line: 3371, column: 2, scope: !9249)
!9372 = !{i32 -2140126745}
!9373 = !DILocation(line: 3371, column: 2, scope: !9248)
!9374 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !9247)
!9375 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !9247)
!9376 = !DILocation(line: 3373, column: 6, scope: !9241)
!9377 = !DILocation(line: 3373, column: 15, scope: !9241)
!9378 = !DILocation(line: 3373, column: 36, scope: !9241)
!9379 = !DILocation(line: 3373, column: 45, scope: !9241)
!9380 = !DILocation(line: 3373, column: 33, scope: !9241)
!9381 = !DILocation(line: 3373, column: 6, scope: !9214)
!9382 = !DILocation(line: 3374, column: 26, scope: !9240)
!9383 = !DILocation(line: 3374, column: 33, scope: !9240)
!9384 = !DILocation(line: 3374, column: 44, scope: !9240)
!9385 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9239)
!9386 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9239)
!9387 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9239)
!9388 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9239)
!9389 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9239)
!9390 = !DILocation(line: 3375, column: 9, scope: !9240)
!9391 = !DILocation(line: 3375, column: 3, scope: !9240)
!9392 = !DILocation(line: 3376, column: 3, scope: !9240)
!9393 = !DILocation(line: 3378, column: 2, scope: !9214)
!9394 = !DILocation(line: 3378, column: 11, scope: !9214)
!9395 = !DILocation(line: 3378, column: 28, scope: !9214)
!9396 = !DILocation(line: 3379, column: 18, scope: !9214)
!9397 = !DILocation(line: 3379, column: 27, scope: !9214)
!9398 = !DILocation(line: 3379, column: 44, scope: !9214)
!9399 = !DILocation(line: 3379, column: 2, scope: !9214)
!9400 = !DILocation(line: 3379, column: 9, scope: !9214)
!9401 = !DILocation(line: 3379, column: 16, scope: !9214)
!9402 = !DILocation(line: 3380, column: 17, scope: !9214)
!9403 = !DILocation(line: 3380, column: 24, scope: !9214)
!9404 = !DILocation(line: 3380, column: 32, scope: !9214)
!9405 = !DILocation(line: 3380, column: 41, scope: !9214)
!9406 = !DILocation(line: 3380, column: 2, scope: !9214)
!9407 = !DILocation(line: 3381, column: 16, scope: !9214)
!9408 = !DILocation(line: 3381, column: 2, scope: !9214)
!9409 = !DILocation(line: 3383, column: 25, scope: !9214)
!9410 = !DILocation(line: 3383, column: 32, scope: !9214)
!9411 = !DILocation(line: 3383, column: 43, scope: !9214)
!9412 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9236)
!9413 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9236)
!9414 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9236)
!9415 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9236)
!9416 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9236)
!9417 = !DILocation(line: 3385, column: 9, scope: !9214)
!9418 = !DILocation(line: 3385, column: 16, scope: !9214)
!9419 = !DILocation(line: 3385, column: 6, scope: !9214)
!9420 = !DILocation(line: 3386, column: 20, scope: !9214)
!9421 = !DILocation(line: 3386, column: 2, scope: !9214)
!9422 = !DILocation(line: 3387, column: 27, scope: !9214)
!9423 = !DILocation(line: 3387, column: 16, scope: !9214)
!9424 = !DILocation(line: 3387, column: 2, scope: !9214)
!9425 = !DILocation(line: 3387, column: 7, scope: !9214)
!9426 = !DILocation(line: 3387, column: 14, scope: !9214)
!9427 = !DILocation(line: 3388, column: 2, scope: !9214)
!9428 = !DILocation(line: 3388, column: 7, scope: !9214)
!9429 = !DILocation(line: 3388, column: 15, scope: !9214)
!9430 = !DILocation(line: 3389, column: 15, scope: !9214)
!9431 = !DILocation(line: 3390, column: 8, scope: !9214)
!9432 = !DILocation(line: 3390, column: 15, scope: !9214)
!9433 = !DILocation(line: 3390, column: 24, scope: !9214)
!9434 = !DILocation(line: 3390, column: 33, scope: !9214)
!9435 = !DILocation(line: 3390, column: 40, scope: !9214)
!9436 = !DILocation(line: 3389, column: 2, scope: !9214)
!9437 = !DILocation(line: 3391, column: 25, scope: !9214)
!9438 = !DILocation(line: 3391, column: 2, scope: !9214)
!9439 = !DILocation(line: 3393, column: 21, scope: !9214)
!9440 = !DILocation(line: 3393, column: 10, scope: !9214)
!9441 = !DILocation(line: 3393, column: 8, scope: !9214)
!9442 = !DILocation(line: 3394, column: 6, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3394, column: 6)
!9444 = !DILocation(line: 3394, column: 6, scope: !9214)
!9445 = !DILocation(line: 3395, column: 3, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 3394, column: 13)
!9447 = !DILocation(line: 3396, column: 3, scope: !9446)
!9448 = !DILocation(line: 3398, column: 23, scope: !9214)
!9449 = !DILocation(line: 3398, column: 2, scope: !9214)
!9450 = !DILocation(line: 3399, column: 29, scope: !9214)
!9451 = !DILocation(line: 3399, column: 2, scope: !9214)
!9452 = !DILocation(line: 3401, column: 10, scope: !9214)
!9453 = !DILocation(line: 3401, column: 15, scope: !9214)
!9454 = !DILocation(line: 3401, column: 18, scope: !9214)
!9455 = !DILocation(line: 3401, column: 31, scope: !9214)
!9456 = !DILocation(line: 3401, column: 38, scope: !9214)
!9457 = !DILocation(line: 3401, column: 43, scope: !9214)
!9458 = !DILocation(line: 3401, column: 8, scope: !9214)
!9459 = !DILocation(line: 3402, column: 6, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3402, column: 6)
!9461 = !DILocation(line: 3402, column: 6, scope: !9214)
!9462 = !DILocation(line: 3403, column: 3, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 3402, column: 13)
!9464 = !DILocation(line: 3404, column: 3, scope: !9463)
!9465 = !DILocation(line: 3411, column: 6, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3411, column: 6)
!9467 = !DILocation(line: 3411, column: 15, scope: !9466)
!9468 = !DILocation(line: 3411, column: 22, scope: !9466)
!9469 = !DILocation(line: 3411, column: 11, scope: !9466)
!9470 = !DILocation(line: 3411, column: 6, scope: !9214)
!9471 = !DILocation(line: 3412, column: 30, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 3411, column: 36)
!9473 = !DILocation(line: 3412, column: 37, scope: !9472)
!9474 = !DILocation(line: 3412, column: 50, scope: !9472)
!9475 = !DILocation(line: 3413, column: 7, scope: !9472)
!9476 = !DILocation(line: 3413, column: 12, scope: !9472)
!9477 = !DILocation(line: 3413, column: 27, scope: !9472)
!9478 = !DILocation(line: 3413, column: 18, scope: !9472)
!9479 = !DILocation(line: 3412, column: 11, scope: !9472)
!9480 = !DILocation(line: 3412, column: 9, scope: !9472)
!9481 = !DILocation(line: 3414, column: 7, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3414, column: 7)
!9483 = !DILocation(line: 3414, column: 7, scope: !9472)
!9484 = !DILocation(line: 3418, column: 24, scope: !9482)
!9485 = !DILocation(line: 3418, column: 15, scope: !9482)
!9486 = !DILocation(line: 3418, column: 30, scope: !9482)
!9487 = !DILocation(line: 3415, column: 4, scope: !9482)
!9488 = !DILocation(line: 3419, column: 2, scope: !9472)
!9489 = !DILocation(line: 3420, column: 2, scope: !9214)
!9490 = !DILocation(line: 3420, column: 2, scope: !9234)
!9491 = !DILocalVariable(name: "__dummy", scope: !9492, file: !3, line: 3420, type: !419)
!9492 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 3420, column: 2)
!9493 = !DILocation(line: 3420, column: 2, scope: !9492)
!9494 = !DILocalVariable(name: "__dummy2", scope: !9492, file: !3, line: 3420, type: !419)
!9495 = !DILocation(line: 3420, column: 2, scope: !9233)
!9496 = !DILocation(line: 3420, column: 2, scope: !9232)
!9497 = !DILocation(line: 3420, column: 2, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 3420, column: 2)
!9499 = !DILocalVariable(name: "__dummy", scope: !9500, file: !3, line: 3420, type: !419)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 3420, column: 2)
!9501 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 3420, column: 2)
!9502 = !DILocation(line: 3420, column: 2, scope: !9500)
!9503 = !DILocalVariable(name: "__dummy2", scope: !9500, file: !3, line: 3420, type: !419)
!9504 = !DILocation(line: 3420, column: 2, scope: !9501)
!9505 = !DILocation(line: 3420, column: 2, scope: !9231)
!9506 = !{i32 -2140125628}
!9507 = !DILocation(line: 3420, column: 2, scope: !9230)
!9508 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !9229)
!9509 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !9229)
!9510 = !DILocation(line: 3421, column: 2, scope: !9214)
!9511 = !DILocation(line: 3421, column: 9, scope: !9214)
!9512 = !DILocation(line: 3421, column: 15, scope: !9214)
!9513 = !DILocation(line: 3422, column: 25, scope: !9214)
!9514 = !DILocation(line: 3422, column: 32, scope: !9214)
!9515 = !DILocation(line: 3422, column: 43, scope: !9214)
!9516 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9226)
!9517 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9226)
!9518 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9226)
!9519 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9226)
!9520 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9226)
!9521 = !DILocation(line: 3424, column: 26, scope: !9214)
!9522 = !DILocation(line: 3425, column: 52, scope: !9214)
!9523 = !DILocation(line: 3425, column: 43, scope: !9214)
!9524 = !DILocation(line: 3426, column: 4, scope: !9214)
!9525 = !DILocation(line: 3426, column: 11, scope: !9214)
!9526 = !DILocation(line: 3426, column: 20, scope: !9214)
!9527 = !DILocation(line: 3424, column: 2, scope: !9214)
!9528 = !DILocation(line: 3428, column: 15, scope: !9214)
!9529 = !DILocation(line: 3428, column: 3, scope: !9214)
!9530 = !DILocation(line: 3428, column: 13, scope: !9214)
!9531 = !DILocation(line: 3430, column: 2, scope: !9214)
!9532 = !DILabel(scope: !9214, name: "delete_vport_all", file: !3, line: 3432)
!9533 = !DILocation(line: 3432, column: 1, scope: !9214)
!9534 = !DILocation(line: 3433, column: 26, scope: !9214)
!9535 = !DILocation(line: 3433, column: 2, scope: !9214)
!9536 = !DILocation(line: 3434, column: 13, scope: !9214)
!9537 = !DILocation(line: 3434, column: 2, scope: !9214)
!9538 = !DILabel(scope: !9214, name: "delete_vport", file: !3, line: 3435)
!9539 = !DILocation(line: 3435, column: 1, scope: !9214)
!9540 = !DILocation(line: 3436, column: 27, scope: !9214)
!9541 = !DILocation(line: 3436, column: 2, scope: !9214)
!9542 = !DILocation(line: 3437, column: 2, scope: !9214)
!9543 = !DILocation(line: 3437, column: 2, scope: !9224)
!9544 = !DILocalVariable(name: "__dummy", scope: !9545, file: !3, line: 3437, type: !419)
!9545 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 3437, column: 2)
!9546 = !DILocation(line: 3437, column: 2, scope: !9545)
!9547 = !DILocalVariable(name: "__dummy2", scope: !9545, file: !3, line: 3437, type: !419)
!9548 = !DILocation(line: 3437, column: 2, scope: !9223)
!9549 = !DILocation(line: 3437, column: 2, scope: !9222)
!9550 = !DILocation(line: 3437, column: 2, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 3437, column: 2)
!9552 = !DILocalVariable(name: "__dummy", scope: !9553, file: !3, line: 3437, type: !419)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 3437, column: 2)
!9554 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 3437, column: 2)
!9555 = !DILocation(line: 3437, column: 2, scope: !9553)
!9556 = !DILocalVariable(name: "__dummy2", scope: !9553, file: !3, line: 3437, type: !419)
!9557 = !DILocation(line: 3437, column: 2, scope: !9554)
!9558 = !DILocation(line: 3437, column: 2, scope: !9221)
!9559 = !{i32 -2140124549}
!9560 = !DILocation(line: 3437, column: 2, scope: !9220)
!9561 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !9219)
!9562 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !9219)
!9563 = !DILocation(line: 3438, column: 12, scope: !9214)
!9564 = !DILocation(line: 3438, column: 19, scope: !9214)
!9565 = !DILocation(line: 3438, column: 2, scope: !9214)
!9566 = !DILocation(line: 3439, column: 16, scope: !9214)
!9567 = !DILocation(line: 3439, column: 2, scope: !9214)
!9568 = !DILocation(line: 3440, column: 2, scope: !9214)
!9569 = !DILocation(line: 3440, column: 11, scope: !9214)
!9570 = !DILocation(line: 3440, column: 28, scope: !9214)
!9571 = !DILocation(line: 3441, column: 25, scope: !9214)
!9572 = !DILocation(line: 3441, column: 32, scope: !9214)
!9573 = !DILocation(line: 3441, column: 43, scope: !9214)
!9574 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9244)
!9575 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9244)
!9576 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9244)
!9577 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9244)
!9578 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9244)
!9579 = !DILocation(line: 3442, column: 13, scope: !9214)
!9580 = !DILocation(line: 3442, column: 18, scope: !9214)
!9581 = !DILocation(line: 3442, column: 2, scope: !9214)
!9582 = !DILocation(line: 3443, column: 8, scope: !9214)
!9583 = !DILocation(line: 3443, column: 2, scope: !9214)
!9584 = !DILocation(line: 3445, column: 9, scope: !9214)
!9585 = !DILocation(line: 3445, column: 2, scope: !9214)
!9586 = !DILocation(line: 3446, column: 1, scope: !9214)
!9587 = distinct !DISubprogram(name: "fc_vport_terminate", scope: !3, file: !3, line: 3482, type: !5564, scopeLine: 3483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9588 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !9589)
!9589 = distinct !DILocation(line: 3504, column: 2, scope: !9587)
!9590 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !9589)
!9591 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !9592)
!9592 = distinct !DILocation(line: 3496, column: 2, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3496, column: 2)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 3496, column: 2)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 3496, column: 2)
!9596 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 3496, column: 2)
!9597 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3496, column: 2)
!9598 = !DILocalVariable(name: "vport", arg: 1, scope: !9587, file: !3, line: 3482, type: !5538)
!9599 = !DILocation(line: 3482, column: 37, scope: !9587)
!9600 = !DILocalVariable(name: "shost", scope: !9587, file: !3, line: 3484, type: !5046)
!9601 = !DILocation(line: 3484, column: 20, scope: !9587)
!9602 = !DILocation(line: 3484, column: 28, scope: !9587)
!9603 = !DILocalVariable(name: "fc_host", scope: !9587, file: !3, line: 3485, type: !5655)
!9604 = !DILocation(line: 3485, column: 24, scope: !9587)
!9605 = !DILocation(line: 3485, column: 34, scope: !9587)
!9606 = !DILocalVariable(name: "i", scope: !9587, file: !3, line: 3486, type: !4984)
!9607 = !DILocation(line: 3486, column: 22, scope: !9587)
!9608 = !DILocalVariable(name: "__mptr", scope: !9609, file: !3, line: 3486, type: !280)
!9609 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3486, column: 26)
!9610 = !DILocation(line: 3486, column: 26, scope: !9609)
!9611 = !DILocation(line: 3486, column: 26, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 3486, column: 26)
!9613 = !DILocalVariable(name: "dev", scope: !9587, file: !3, line: 3487, type: !2400)
!9614 = !DILocation(line: 3487, column: 17, scope: !9587)
!9615 = !DILocation(line: 3487, column: 24, scope: !9587)
!9616 = !DILocation(line: 3487, column: 31, scope: !9587)
!9617 = !DILocalVariable(name: "flags", scope: !9587, file: !3, line: 3488, type: !419)
!9618 = !DILocation(line: 3488, column: 16, scope: !9587)
!9619 = !DILocalVariable(name: "stat", scope: !9587, file: !3, line: 3489, type: !355)
!9620 = !DILocation(line: 3489, column: 6, scope: !9587)
!9621 = !DILocation(line: 3491, column: 6, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3491, column: 6)
!9623 = !DILocation(line: 3491, column: 9, scope: !9622)
!9624 = !DILocation(line: 3491, column: 12, scope: !9622)
!9625 = !DILocation(line: 3491, column: 6, scope: !9587)
!9626 = !DILocation(line: 3492, column: 10, scope: !9622)
!9627 = !DILocation(line: 3492, column: 13, scope: !9622)
!9628 = !DILocation(line: 3492, column: 16, scope: !9622)
!9629 = !DILocation(line: 3492, column: 29, scope: !9622)
!9630 = !DILocation(line: 3492, column: 8, scope: !9622)
!9631 = !DILocation(line: 3492, column: 3, scope: !9622)
!9632 = !DILocation(line: 3494, column: 8, scope: !9622)
!9633 = !DILocation(line: 3496, column: 2, scope: !9587)
!9634 = !DILocation(line: 3496, column: 2, scope: !9597)
!9635 = !DILocalVariable(name: "__dummy", scope: !9636, file: !3, line: 3496, type: !419)
!9636 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 3496, column: 2)
!9637 = !DILocation(line: 3496, column: 2, scope: !9636)
!9638 = !DILocalVariable(name: "__dummy2", scope: !9636, file: !3, line: 3496, type: !419)
!9639 = !DILocation(line: 3496, column: 2, scope: !9596)
!9640 = !DILocation(line: 3496, column: 2, scope: !9595)
!9641 = !DILocation(line: 3496, column: 2, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 3496, column: 2)
!9643 = !DILocalVariable(name: "__dummy", scope: !9644, file: !3, line: 3496, type: !419)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 3496, column: 2)
!9645 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 3496, column: 2)
!9646 = !DILocation(line: 3496, column: 2, scope: !9644)
!9647 = !DILocalVariable(name: "__dummy2", scope: !9644, file: !3, line: 3496, type: !419)
!9648 = !DILocation(line: 3496, column: 2, scope: !9645)
!9649 = !DILocation(line: 3496, column: 2, scope: !9594)
!9650 = !{i32 -2140121690}
!9651 = !DILocation(line: 3496, column: 2, scope: !9593)
!9652 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !9592)
!9653 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !9592)
!9654 = !DILocation(line: 3497, column: 2, scope: !9587)
!9655 = !DILocation(line: 3497, column: 9, scope: !9587)
!9656 = !DILocation(line: 3497, column: 15, scope: !9587)
!9657 = !DILocation(line: 3498, column: 7, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3498, column: 6)
!9659 = !DILocation(line: 3498, column: 6, scope: !9587)
!9660 = !DILocation(line: 3499, column: 3, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 3498, column: 13)
!9662 = !DILocation(line: 3499, column: 10, scope: !9661)
!9663 = !DILocation(line: 3499, column: 16, scope: !9661)
!9664 = !DILocation(line: 3500, column: 13, scope: !9661)
!9665 = !DILocation(line: 3500, column: 20, scope: !9661)
!9666 = !DILocation(line: 3500, column: 3, scope: !9661)
!9667 = !DILocation(line: 3501, column: 3, scope: !9661)
!9668 = !DILocation(line: 3501, column: 12, scope: !9661)
!9669 = !DILocation(line: 3501, column: 29, scope: !9661)
!9670 = !DILocation(line: 3502, column: 17, scope: !9661)
!9671 = !DILocation(line: 3502, column: 3, scope: !9661)
!9672 = !DILocation(line: 3503, column: 2, scope: !9661)
!9673 = !DILocation(line: 3504, column: 25, scope: !9587)
!9674 = !DILocation(line: 3504, column: 32, scope: !9587)
!9675 = !DILocation(line: 3504, column: 43, scope: !9587)
!9676 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !9589)
!9677 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !9589)
!9678 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !9589)
!9679 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !9589)
!9680 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !9589)
!9681 = !DILocation(line: 3506, column: 6, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3506, column: 6)
!9683 = !DILocation(line: 3506, column: 6, scope: !9587)
!9684 = !DILocation(line: 3507, column: 10, scope: !9682)
!9685 = !DILocation(line: 3507, column: 3, scope: !9682)
!9686 = !DILocation(line: 3509, column: 6, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3509, column: 6)
!9688 = !DILocation(line: 3509, column: 11, scope: !9687)
!9689 = !DILocation(line: 3509, column: 22, scope: !9687)
!9690 = !DILocation(line: 3509, column: 29, scope: !9687)
!9691 = !DILocation(line: 3509, column: 18, scope: !9687)
!9692 = !DILocation(line: 3509, column: 6, scope: !9587)
!9693 = !DILocation(line: 3510, column: 22, scope: !9687)
!9694 = !DILocation(line: 3510, column: 29, scope: !9687)
!9695 = !DILocation(line: 3510, column: 42, scope: !9687)
!9696 = !DILocation(line: 3510, column: 57, scope: !9687)
!9697 = !DILocation(line: 3510, column: 48, scope: !9687)
!9698 = !DILocation(line: 3510, column: 3, scope: !9687)
!9699 = !DILocation(line: 3511, column: 26, scope: !9587)
!9700 = !DILocation(line: 3511, column: 2, scope: !9587)
!9701 = !DILocation(line: 3512, column: 13, scope: !9587)
!9702 = !DILocation(line: 3512, column: 2, scope: !9587)
!9703 = !DILocation(line: 3513, column: 27, scope: !9587)
!9704 = !DILocation(line: 3513, column: 2, scope: !9587)
!9705 = !DILocation(line: 3520, column: 13, scope: !9587)
!9706 = !DILocation(line: 3520, column: 2, scope: !9587)
!9707 = !DILocation(line: 3522, column: 2, scope: !9587)
!9708 = !DILocation(line: 3523, column: 1, scope: !9587)
!9709 = distinct !DISubprogram(name: "dev_name", scope: !47, file: !47, line: 609, type: !9710, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{!318, !4869}
!9712 = !DILocalVariable(name: "dev", arg: 1, scope: !9709, file: !47, line: 609, type: !4869)
!9713 = !DILocation(line: 609, column: 57, scope: !9709)
!9714 = !DILocation(line: 612, column: 6, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9709, file: !47, line: 612, column: 6)
!9716 = !DILocation(line: 612, column: 11, scope: !9715)
!9717 = !DILocation(line: 612, column: 6, scope: !9709)
!9718 = !DILocation(line: 613, column: 10, scope: !9715)
!9719 = !DILocation(line: 613, column: 15, scope: !9715)
!9720 = !DILocation(line: 613, column: 3, scope: !9715)
!9721 = !DILocation(line: 615, column: 23, scope: !9709)
!9722 = !DILocation(line: 615, column: 28, scope: !9709)
!9723 = !DILocation(line: 615, column: 9, scope: !9709)
!9724 = !DILocation(line: 615, column: 2, scope: !9709)
!9725 = !DILocation(line: 616, column: 1, scope: !9709)
!9726 = distinct !DISubprogram(name: "fc_transport_init", scope: !3, file: !3, line: 649, type: !9727, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!355}
!9729 = !DILocalVariable(name: "v", arg: 1, scope: !9730, file: !6087, line: 39, type: !6090)
!9730 = distinct !DISubprogram(name: "arch_atomic_set", scope: !6087, file: !6087, line: 39, type: !9731, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9731 = !DISubroutineType(types: !9732)
!9732 = !{null, !6090, !355}
!9733 = !DILocation(line: 39, column: 55, scope: !9730, inlinedAt: !9734)
!9734 = distinct !DILocation(line: 46, column: 2, scope: !9735, inlinedAt: !9736)
!9735 = distinct !DISubprogram(name: "atomic_set", scope: !6094, file: !6094, line: 43, type: !9731, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9736 = distinct !DILocation(line: 653, column: 2, scope: !9726)
!9737 = !DILocalVariable(name: "i", arg: 2, scope: !9730, file: !6087, line: 39, type: !355)
!9738 = !DILocation(line: 39, column: 62, scope: !9730, inlinedAt: !9734)
!9739 = !DILocalVariable(name: "v", arg: 1, scope: !9740, file: !6103, line: 84, type: !6106)
!9740 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6103, file: !6103, line: 84, type: !6104, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9741 = !DILocation(line: 84, column: 74, scope: !9740, inlinedAt: !9742)
!9742 = distinct !DILocation(line: 45, column: 2, scope: !9735, inlinedAt: !9736)
!9743 = !DILocalVariable(name: "size", arg: 2, scope: !9740, file: !6103, line: 84, type: !416)
!9744 = !DILocation(line: 84, column: 84, scope: !9740, inlinedAt: !9742)
!9745 = !DILocalVariable(name: "v", arg: 1, scope: !9735, file: !6094, line: 43, type: !6090)
!9746 = !DILocation(line: 43, column: 22, scope: !9735, inlinedAt: !9736)
!9747 = !DILocalVariable(name: "i", arg: 2, scope: !9735, file: !6094, line: 43, type: !355)
!9748 = !DILocation(line: 43, column: 29, scope: !9735, inlinedAt: !9736)
!9749 = !DILocalVariable(name: "error", scope: !9726, file: !3, line: 651, type: !355)
!9750 = !DILocation(line: 651, column: 6, scope: !9726)
!9751 = !DILocation(line: 45, column: 26, scope: !9735, inlinedAt: !9736)
!9752 = !DILocation(line: 86, column: 20, scope: !9740, inlinedAt: !9742)
!9753 = !DILocation(line: 86, column: 23, scope: !9740, inlinedAt: !9742)
!9754 = !DILocation(line: 86, column: 2, scope: !9740, inlinedAt: !9742)
!9755 = !DILocation(line: 87, column: 2, scope: !9740, inlinedAt: !9742)
!9756 = !DILocation(line: 46, column: 18, scope: !9735, inlinedAt: !9736)
!9757 = !DILocation(line: 46, column: 21, scope: !9735, inlinedAt: !9736)
!9758 = !DILocation(line: 41, column: 2, scope: !9759, inlinedAt: !9734)
!9759 = distinct !DILexicalBlock(scope: !9730, file: !6087, line: 41, column: 2)
!9760 = !DILocation(line: 655, column: 10, scope: !9726)
!9761 = !DILocation(line: 655, column: 8, scope: !9726)
!9762 = !DILocation(line: 656, column: 6, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 656, column: 6)
!9764 = !DILocation(line: 656, column: 6, scope: !9726)
!9765 = !DILocation(line: 657, column: 10, scope: !9763)
!9766 = !DILocation(line: 657, column: 3, scope: !9763)
!9767 = !DILocation(line: 658, column: 10, scope: !9726)
!9768 = !DILocation(line: 658, column: 8, scope: !9726)
!9769 = !DILocation(line: 659, column: 6, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 659, column: 6)
!9771 = !DILocation(line: 659, column: 6, scope: !9726)
!9772 = !DILocation(line: 660, column: 3, scope: !9770)
!9773 = !DILocation(line: 661, column: 10, scope: !9726)
!9774 = !DILocation(line: 661, column: 8, scope: !9726)
!9775 = !DILocation(line: 662, column: 6, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 662, column: 6)
!9777 = !DILocation(line: 662, column: 6, scope: !9726)
!9778 = !DILocation(line: 663, column: 3, scope: !9776)
!9779 = !DILocation(line: 664, column: 10, scope: !9726)
!9780 = !DILocation(line: 664, column: 8, scope: !9726)
!9781 = !DILocation(line: 665, column: 6, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 665, column: 6)
!9783 = !DILocation(line: 665, column: 6, scope: !9726)
!9784 = !DILocation(line: 666, column: 3, scope: !9782)
!9785 = !DILocation(line: 667, column: 2, scope: !9726)
!9786 = !DILabel(scope: !9726, name: "unreg_rport_class", file: !3, line: 669)
!9787 = !DILocation(line: 669, column: 1, scope: !9726)
!9788 = !DILocation(line: 670, column: 2, scope: !9726)
!9789 = !DILabel(scope: !9726, name: "unreg_vport_class", file: !3, line: 671)
!9790 = !DILocation(line: 671, column: 1, scope: !9726)
!9791 = !DILocation(line: 672, column: 2, scope: !9726)
!9792 = !DILabel(scope: !9726, name: "unreg_host_class", file: !3, line: 673)
!9793 = !DILocation(line: 673, column: 1, scope: !9726)
!9794 = !DILocation(line: 674, column: 2, scope: !9726)
!9795 = !DILocation(line: 675, column: 9, scope: !9726)
!9796 = !DILocation(line: 675, column: 2, scope: !9726)
!9797 = !DILocation(line: 676, column: 1, scope: !9726)
!9798 = distinct !DISubprogram(name: "kasan_check_write", scope: !9799, file: !9799, line: 38, type: !9800, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9799 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!577, !6106, !7}
!9802 = !DILocalVariable(name: "p", arg: 1, scope: !9798, file: !9799, line: 38, type: !6106)
!9803 = !DILocation(line: 38, column: 59, scope: !9798)
!9804 = !DILocalVariable(name: "size", arg: 2, scope: !9798, file: !9799, line: 38, type: !7)
!9805 = !DILocation(line: 38, column: 75, scope: !9798)
!9806 = !DILocation(line: 40, column: 2, scope: !9798)
!9807 = distinct !DISubprogram(name: "kcsan_check_access", scope: !9808, file: !9808, line: 178, type: !9809, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9808 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9809 = !DISubroutineType(types: !9810)
!9810 = !{null, !6106, !416, !355}
!9811 = !DILocalVariable(name: "ptr", arg: 1, scope: !9807, file: !9808, line: 178, type: !6106)
!9812 = !DILocation(line: 178, column: 60, scope: !9807)
!9813 = !DILocalVariable(name: "size", arg: 2, scope: !9807, file: !9808, line: 178, type: !416)
!9814 = !DILocation(line: 178, column: 72, scope: !9807)
!9815 = !DILocalVariable(name: "type", arg: 3, scope: !9807, file: !9808, line: 179, type: !355)
!9816 = !DILocation(line: 179, column: 15, scope: !9807)
!9817 = !DILocation(line: 179, column: 23, scope: !9807)
!9818 = distinct !DISubprogram(name: "alloc_skb", scope: !6146, file: !6146, line: 1091, type: !9819, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{!6144, !7, !271}
!9821 = !DILocalVariable(name: "size", arg: 1, scope: !9818, file: !6146, line: 1091, type: !7)
!9822 = !DILocation(line: 1091, column: 54, scope: !9818)
!9823 = !DILocalVariable(name: "priority", arg: 2, scope: !9818, file: !6146, line: 1092, type: !271)
!9824 = !DILocation(line: 1092, column: 12, scope: !9818)
!9825 = !DILocation(line: 1094, column: 21, scope: !9818)
!9826 = !DILocation(line: 1094, column: 27, scope: !9818)
!9827 = !DILocation(line: 1094, column: 9, scope: !9818)
!9828 = !DILocation(line: 1094, column: 2, scope: !9818)
!9829 = distinct !DISubprogram(name: "nlmsg_total_size", scope: !6418, file: !6418, line: 550, type: !4257, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9830 = !DILocalVariable(name: "payload", arg: 1, scope: !9829, file: !6418, line: 550, type: !355)
!9831 = !DILocation(line: 550, column: 40, scope: !9829)
!9832 = !DILocation(line: 552, column: 9, scope: !9829)
!9833 = !DILocation(line: 552, column: 2, scope: !9829)
!9834 = distinct !DISubprogram(name: "nlmsg_msg_size", scope: !6418, file: !6418, line: 541, type: !4257, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9835 = !DILocalVariable(name: "payload", arg: 1, scope: !9834, file: !6418, line: 541, type: !355)
!9836 = !DILocation(line: 541, column: 38, scope: !9834)
!9837 = !DILocation(line: 543, column: 24, scope: !9834)
!9838 = !DILocation(line: 543, column: 22, scope: !9834)
!9839 = !DILocation(line: 543, column: 2, scope: !9834)
!9840 = distinct !DISubprogram(name: "skb_tailroom", scope: !6146, file: !6146, line: 2350, type: !9841, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{!355, !9843}
!9843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9844, size: 64)
!9844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6145)
!9845 = !DILocalVariable(name: "skb", arg: 1, scope: !9840, file: !6146, line: 2350, type: !9843)
!9846 = !DILocation(line: 2350, column: 54, scope: !9840)
!9847 = !DILocation(line: 2352, column: 26, scope: !9840)
!9848 = !DILocation(line: 2352, column: 9, scope: !9840)
!9849 = !DILocation(line: 2352, column: 37, scope: !9840)
!9850 = !DILocation(line: 2352, column: 42, scope: !9840)
!9851 = !DILocation(line: 2352, column: 48, scope: !9840)
!9852 = !DILocation(line: 2352, column: 53, scope: !9840)
!9853 = !DILocation(line: 2352, column: 46, scope: !9840)
!9854 = !DILocation(line: 2352, column: 2, scope: !9840)
!9855 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !6146, file: !6146, line: 2105, type: !9856, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9856 = !DISubroutineType(types: !9857)
!9857 = !{!577, !9843}
!9858 = !DILocalVariable(name: "skb", arg: 1, scope: !9855, file: !6146, line: 2105, type: !9843)
!9859 = !DILocation(line: 2105, column: 59, scope: !9855)
!9860 = !DILocation(line: 2107, column: 9, scope: !9855)
!9861 = !DILocation(line: 2107, column: 14, scope: !9855)
!9862 = !DILocation(line: 2107, column: 2, scope: !9855)
!9863 = distinct !DISubprogram(name: "fc_target_setup", scope: !3, file: !3, line: 346, type: !5839, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9864 = !DILocalVariable(name: "tc", arg: 1, scope: !9863, file: !3, line: 346, type: !5841)
!9865 = !DILocation(line: 346, column: 56, scope: !9863)
!9866 = !DILocalVariable(name: "dev", arg: 2, scope: !9863, file: !3, line: 346, type: !2400)
!9867 = !DILocation(line: 346, column: 75, scope: !9863)
!9868 = !DILocalVariable(name: "cdev", arg: 3, scope: !9863, file: !3, line: 347, type: !2400)
!9869 = !DILocation(line: 347, column: 22, scope: !9863)
!9870 = !DILocalVariable(name: "starget", scope: !9863, file: !3, line: 349, type: !5121)
!9871 = !DILocation(line: 349, column: 22, scope: !9863)
!9872 = !DILocalVariable(name: "__mptr", scope: !9873, file: !3, line: 349, type: !280)
!9873 = distinct !DILexicalBlock(scope: !9863, file: !3, line: 349, column: 32)
!9874 = !DILocation(line: 349, column: 32, scope: !9873)
!9875 = !DILocation(line: 349, column: 32, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 349, column: 32)
!9877 = !DILocalVariable(name: "rport", scope: !9863, file: !3, line: 350, type: !281)
!9878 = !DILocation(line: 350, column: 19, scope: !9863)
!9879 = !DILocation(line: 350, column: 27, scope: !9863)
!9880 = !DILocalVariable(name: "__mptr", scope: !9881, file: !3, line: 350, type: !280)
!9881 = distinct !DILexicalBlock(scope: !9863, file: !3, line: 350, column: 27)
!9882 = !DILocation(line: 350, column: 27, scope: !9881)
!9883 = !DILocation(line: 350, column: 27, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 350, column: 27)
!9885 = !DILocation(line: 357, column: 6, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9863, file: !3, line: 357, column: 6)
!9887 = !DILocation(line: 357, column: 6, scope: !9863)
!9888 = !DILocation(line: 358, column: 35, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 357, column: 13)
!9890 = !DILocation(line: 358, column: 42, scope: !9889)
!9891 = !DILocation(line: 358, column: 3, scope: !9889)
!9892 = !DILocation(line: 358, column: 33, scope: !9889)
!9893 = !DILocation(line: 359, column: 35, scope: !9889)
!9894 = !DILocation(line: 359, column: 42, scope: !9889)
!9895 = !DILocation(line: 359, column: 3, scope: !9889)
!9896 = !DILocation(line: 359, column: 33, scope: !9889)
!9897 = !DILocation(line: 360, column: 33, scope: !9889)
!9898 = !DILocation(line: 360, column: 40, scope: !9889)
!9899 = !DILocation(line: 360, column: 3, scope: !9889)
!9900 = !DILocation(line: 360, column: 31, scope: !9889)
!9901 = !DILocation(line: 361, column: 2, scope: !9889)
!9902 = !DILocation(line: 362, column: 3, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 361, column: 9)
!9904 = !DILocation(line: 362, column: 33, scope: !9903)
!9905 = !DILocation(line: 363, column: 3, scope: !9903)
!9906 = !DILocation(line: 363, column: 33, scope: !9903)
!9907 = !DILocation(line: 364, column: 3, scope: !9903)
!9908 = !DILocation(line: 364, column: 31, scope: !9903)
!9909 = !DILocation(line: 367, column: 2, scope: !9863)
!9910 = distinct !DISubprogram(name: "fc_host_setup", scope: !3, file: !3, line: 376, type: !5839, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!9911 = !DILocalVariable(name: "tc", arg: 1, scope: !9910, file: !3, line: 376, type: !5841)
!9912 = !DILocation(line: 376, column: 54, scope: !9910)
!9913 = !DILocalVariable(name: "dev", arg: 2, scope: !9910, file: !3, line: 376, type: !2400)
!9914 = !DILocation(line: 376, column: 73, scope: !9910)
!9915 = !DILocalVariable(name: "cdev", arg: 3, scope: !9910, file: !3, line: 377, type: !2400)
!9916 = !DILocation(line: 377, column: 20, scope: !9910)
!9917 = !DILocalVariable(name: "shost", scope: !9910, file: !3, line: 379, type: !5046)
!9918 = !DILocation(line: 379, column: 20, scope: !9910)
!9919 = !DILocation(line: 379, column: 41, scope: !9910)
!9920 = !DILocation(line: 379, column: 28, scope: !9910)
!9921 = !DILocalVariable(name: "fc_host", scope: !9910, file: !3, line: 380, type: !5655)
!9922 = !DILocation(line: 380, column: 24, scope: !9910)
!9923 = !DILocation(line: 380, column: 34, scope: !9910)
!9924 = !DILocation(line: 387, column: 2, scope: !9910)
!9925 = !DILocation(line: 387, column: 11, scope: !9910)
!9926 = !DILocation(line: 387, column: 21, scope: !9910)
!9927 = !DILocation(line: 388, column: 2, scope: !9910)
!9928 = !DILocation(line: 388, column: 11, scope: !9910)
!9929 = !DILocation(line: 388, column: 21, scope: !9910)
!9930 = !DILocation(line: 389, column: 2, scope: !9910)
!9931 = !DILocation(line: 389, column: 11, scope: !9910)
!9932 = !DILocation(line: 389, column: 31, scope: !9910)
!9933 = !DILocation(line: 390, column: 2, scope: !9910)
!9934 = !DILocation(line: 390, column: 11, scope: !9910)
!9935 = !DILocation(line: 390, column: 29, scope: !9910)
!9936 = !DILocation(line: 391, column: 9, scope: !9910)
!9937 = !DILocation(line: 391, column: 18, scope: !9910)
!9938 = !DILocation(line: 391, column: 2, scope: !9910)
!9939 = !DILocation(line: 393, column: 2, scope: !9910)
!9940 = !DILocation(line: 393, column: 11, scope: !9910)
!9941 = !DILocation(line: 393, column: 28, scope: !9910)
!9942 = !DILocation(line: 394, column: 2, scope: !9910)
!9943 = !DILocation(line: 394, column: 11, scope: !9910)
!9944 = !DILocation(line: 394, column: 25, scope: !9910)
!9945 = !DILocation(line: 395, column: 2, scope: !9910)
!9946 = !DILocation(line: 395, column: 11, scope: !9910)
!9947 = !DILocation(line: 395, column: 27, scope: !9910)
!9948 = !DILocation(line: 396, column: 9, scope: !9910)
!9949 = !DILocation(line: 396, column: 18, scope: !9910)
!9950 = !DILocation(line: 396, column: 2, scope: !9910)
!9951 = !DILocation(line: 398, column: 9, scope: !9910)
!9952 = !DILocation(line: 398, column: 18, scope: !9910)
!9953 = !DILocation(line: 398, column: 2, scope: !9910)
!9954 = !DILocation(line: 400, column: 9, scope: !9910)
!9955 = !DILocation(line: 400, column: 18, scope: !9910)
!9956 = !DILocation(line: 400, column: 2, scope: !9910)
!9957 = !DILocation(line: 402, column: 9, scope: !9910)
!9958 = !DILocation(line: 402, column: 18, scope: !9910)
!9959 = !DILocation(line: 402, column: 2, scope: !9910)
!9960 = !DILocation(line: 404, column: 9, scope: !9910)
!9961 = !DILocation(line: 404, column: 18, scope: !9910)
!9962 = !DILocation(line: 404, column: 2, scope: !9910)
!9963 = !DILocation(line: 406, column: 9, scope: !9910)
!9964 = !DILocation(line: 406, column: 18, scope: !9910)
!9965 = !DILocation(line: 406, column: 2, scope: !9910)
!9966 = !DILocation(line: 408, column: 9, scope: !9910)
!9967 = !DILocation(line: 408, column: 18, scope: !9910)
!9968 = !DILocation(line: 408, column: 2, scope: !9910)
!9969 = !DILocation(line: 410, column: 9, scope: !9910)
!9970 = !DILocation(line: 410, column: 18, scope: !9910)
!9971 = !DILocation(line: 410, column: 2, scope: !9910)
!9972 = !DILocation(line: 413, column: 2, scope: !9910)
!9973 = !DILocation(line: 413, column: 11, scope: !9910)
!9974 = !DILocation(line: 413, column: 19, scope: !9910)
!9975 = !DILocation(line: 414, column: 2, scope: !9910)
!9976 = !DILocation(line: 414, column: 11, scope: !9910)
!9977 = !DILocation(line: 414, column: 21, scope: !9910)
!9978 = !DILocation(line: 415, column: 2, scope: !9910)
!9979 = !DILocation(line: 415, column: 11, scope: !9910)
!9980 = !DILocation(line: 415, column: 22, scope: !9910)
!9981 = !DILocation(line: 416, column: 9, scope: !9910)
!9982 = !DILocation(line: 416, column: 18, scope: !9910)
!9983 = !DILocation(line: 416, column: 2, scope: !9910)
!9984 = !DILocation(line: 418, column: 2, scope: !9910)
!9985 = !DILocation(line: 418, column: 11, scope: !9910)
!9986 = !DILocation(line: 418, column: 17, scope: !9910)
!9987 = !DILocation(line: 419, column: 2, scope: !9910)
!9988 = !DILocation(line: 419, column: 11, scope: !9910)
!9989 = !DILocation(line: 419, column: 23, scope: !9910)
!9990 = !DILocation(line: 420, column: 9, scope: !9910)
!9991 = !DILocation(line: 420, column: 18, scope: !9910)
!9992 = !DILocation(line: 420, column: 2, scope: !9910)
!9993 = !DILocation(line: 421, column: 9, scope: !9910)
!9994 = !DILocation(line: 421, column: 18, scope: !9910)
!9995 = !DILocation(line: 421, column: 2, scope: !9910)
!9996 = !DILocation(line: 423, column: 2, scope: !9910)
!9997 = !DILocation(line: 423, column: 11, scope: !9910)
!9998 = !DILocation(line: 423, column: 27, scope: !9910)
!9999 = !DILocation(line: 425, column: 18, scope: !9910)
!10000 = !DILocation(line: 425, column: 27, scope: !9910)
!10001 = !DILocation(line: 425, column: 2, scope: !9910)
!10002 = !DILocation(line: 426, column: 18, scope: !9910)
!10003 = !DILocation(line: 426, column: 27, scope: !9910)
!10004 = !DILocation(line: 426, column: 2, scope: !9910)
!10005 = !DILocation(line: 427, column: 18, scope: !9910)
!10006 = !DILocation(line: 427, column: 27, scope: !9910)
!10007 = !DILocation(line: 427, column: 2, scope: !9910)
!10008 = !DILocation(line: 428, column: 2, scope: !9910)
!10009 = !DILocation(line: 428, column: 11, scope: !9910)
!10010 = !DILocation(line: 428, column: 29, scope: !9910)
!10011 = !DILocation(line: 429, column: 2, scope: !9910)
!10012 = !DILocation(line: 429, column: 11, scope: !9910)
!10013 = !DILocation(line: 429, column: 26, scope: !9910)
!10014 = !DILocation(line: 430, column: 2, scope: !9910)
!10015 = !DILocation(line: 430, column: 11, scope: !9910)
!10016 = !DILocation(line: 430, column: 29, scope: !9910)
!10017 = !DILocation(line: 431, column: 2, scope: !9910)
!10018 = !DILocation(line: 431, column: 11, scope: !9910)
!10019 = !DILocation(line: 431, column: 29, scope: !9910)
!10020 = !DILocation(line: 433, column: 11, scope: !9910)
!10021 = !DILocation(line: 433, column: 20, scope: !9910)
!10022 = !DILocation(line: 434, column: 16, scope: !9910)
!10023 = !DILocation(line: 434, column: 23, scope: !9910)
!10024 = !DILocation(line: 433, column: 2, scope: !9910)
!10025 = !DILocation(line: 435, column: 48, scope: !9910)
!10026 = !DILocation(line: 435, column: 57, scope: !9910)
!10027 = !DILocation(line: 435, column: 20, scope: !9910)
!10028 = !DILocation(line: 435, column: 2, scope: !9910)
!10029 = !DILocation(line: 435, column: 11, scope: !9910)
!10030 = !DILocation(line: 435, column: 18, scope: !9910)
!10031 = !DILocation(line: 436, column: 7, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 436, column: 6)
!10033 = !DILocation(line: 436, column: 16, scope: !10032)
!10034 = !DILocation(line: 436, column: 6, scope: !9910)
!10035 = !DILocation(line: 437, column: 3, scope: !10032)
!10036 = !DILocation(line: 439, column: 26, scope: !9910)
!10037 = !DILocation(line: 439, column: 2, scope: !9910)
!10038 = !DILocation(line: 439, column: 11, scope: !9910)
!10039 = !DILocation(line: 439, column: 24, scope: !9910)
!10040 = !DILocation(line: 440, column: 11, scope: !9910)
!10041 = !DILocation(line: 440, column: 20, scope: !9910)
!10042 = !DILocation(line: 442, column: 16, scope: !9910)
!10043 = !DILocation(line: 442, column: 23, scope: !9910)
!10044 = !DILocation(line: 440, column: 2, scope: !9910)
!10045 = !DILocation(line: 444, column: 6, scope: !9910)
!10046 = !DILocation(line: 444, column: 15, scope: !9910)
!10047 = !DILocation(line: 443, column: 28, scope: !9910)
!10048 = !DILocation(line: 443, column: 2, scope: !9910)
!10049 = !DILocation(line: 443, column: 11, scope: !9910)
!10050 = !DILocation(line: 443, column: 26, scope: !9910)
!10051 = !DILocation(line: 445, column: 7, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 445, column: 6)
!10053 = !DILocation(line: 445, column: 16, scope: !10052)
!10054 = !DILocation(line: 445, column: 6, scope: !9910)
!10055 = !DILocation(line: 446, column: 21, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 445, column: 32)
!10057 = !DILocation(line: 446, column: 30, scope: !10056)
!10058 = !DILocation(line: 446, column: 3, scope: !10056)
!10059 = !DILocation(line: 447, column: 3, scope: !10056)
!10060 = !DILocation(line: 447, column: 12, scope: !10056)
!10061 = !DILocation(line: 447, column: 19, scope: !10056)
!10062 = !DILocation(line: 448, column: 3, scope: !10056)
!10063 = !DILocation(line: 451, column: 17, scope: !9910)
!10064 = !DILocation(line: 451, column: 24, scope: !9910)
!10065 = !DILocation(line: 451, column: 2, scope: !9910)
!10066 = !DILocation(line: 454, column: 2, scope: !9910)
!10067 = !DILocation(line: 455, column: 1, scope: !9910)
!10068 = distinct !DISubprogram(name: "fc_host_remove", scope: !3, file: !3, line: 457, type: !5839, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10069 = !DILocalVariable(name: "tc", arg: 1, scope: !10068, file: !3, line: 457, type: !5841)
!10070 = !DILocation(line: 457, column: 55, scope: !10068)
!10071 = !DILocalVariable(name: "dev", arg: 2, scope: !10068, file: !3, line: 457, type: !2400)
!10072 = !DILocation(line: 457, column: 74, scope: !10068)
!10073 = !DILocalVariable(name: "cdev", arg: 3, scope: !10068, file: !3, line: 458, type: !2400)
!10074 = !DILocation(line: 458, column: 20, scope: !10068)
!10075 = !DILocalVariable(name: "shost", scope: !10068, file: !3, line: 460, type: !5046)
!10076 = !DILocation(line: 460, column: 20, scope: !10068)
!10077 = !DILocation(line: 460, column: 41, scope: !10068)
!10078 = !DILocation(line: 460, column: 28, scope: !10068)
!10079 = !DILocalVariable(name: "fc_host", scope: !10068, file: !3, line: 461, type: !5655)
!10080 = !DILocation(line: 461, column: 24, scope: !10068)
!10081 = !DILocation(line: 461, column: 34, scope: !10068)
!10082 = !DILocation(line: 463, column: 16, scope: !10068)
!10083 = !DILocation(line: 463, column: 25, scope: !10068)
!10084 = !DILocation(line: 463, column: 2, scope: !10068)
!10085 = !DILocation(line: 464, column: 2, scope: !10068)
!10086 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7865, file: !7865, line: 33, type: !7866, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10087 = !DILocalVariable(name: "list", arg: 1, scope: !10086, file: !7865, line: 33, type: !308)
!10088 = !DILocation(line: 33, column: 53, scope: !10086)
!10089 = !DILocation(line: 35, column: 2, scope: !10086)
!10090 = !DILocation(line: 35, column: 2, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10086, file: !7865, line: 35, column: 2)
!10092 = !DILocation(line: 35, column: 2, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10091, file: !7865, line: 35, column: 2)
!10094 = !DILocation(line: 35, column: 2, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10091, file: !7865, line: 35, column: 2)
!10096 = !DILocation(line: 36, column: 15, scope: !10086)
!10097 = !DILocation(line: 36, column: 2, scope: !10086)
!10098 = !DILocation(line: 36, column: 8, scope: !10086)
!10099 = !DILocation(line: 36, column: 13, scope: !10086)
!10100 = !DILocation(line: 37, column: 1, scope: !10086)
!10101 = distinct !DISubprogram(name: "fc_bsg_hostadd", scope: !3, file: !3, line: 3781, type: !10102, scopeLine: 3782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!355, !5046, !5655}
!10104 = !DILocalVariable(name: "shost", arg: 1, scope: !10101, file: !3, line: 3781, type: !5046)
!10105 = !DILocation(line: 3781, column: 34, scope: !10101)
!10106 = !DILocalVariable(name: "fc_host", arg: 2, scope: !10101, file: !3, line: 3781, type: !5655)
!10107 = !DILocation(line: 3781, column: 63, scope: !10101)
!10108 = !DILocalVariable(name: "dev", scope: !10101, file: !3, line: 3783, type: !2400)
!10109 = !DILocation(line: 3783, column: 17, scope: !10101)
!10110 = !DILocation(line: 3783, column: 24, scope: !10101)
!10111 = !DILocation(line: 3783, column: 31, scope: !10101)
!10112 = !DILocalVariable(name: "i", scope: !10101, file: !3, line: 3784, type: !4984)
!10113 = !DILocation(line: 3784, column: 22, scope: !10101)
!10114 = !DILocalVariable(name: "__mptr", scope: !10115, file: !3, line: 3784, type: !280)
!10115 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 3784, column: 26)
!10116 = !DILocation(line: 3784, column: 26, scope: !10115)
!10117 = !DILocation(line: 3784, column: 26, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 3784, column: 26)
!10119 = !DILocalVariable(name: "q", scope: !10101, file: !3, line: 3785, type: !2480)
!10120 = !DILocation(line: 3785, column: 24, scope: !10101)
!10121 = !DILocalVariable(name: "bsg_name", scope: !10101, file: !3, line: 3786, type: !5446)
!10122 = !DILocation(line: 3786, column: 7, scope: !10101)
!10123 = !DILocation(line: 3788, column: 2, scope: !10101)
!10124 = !DILocation(line: 3788, column: 11, scope: !10101)
!10125 = !DILocation(line: 3788, column: 18, scope: !10101)
!10126 = !DILocation(line: 3790, column: 7, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 3790, column: 6)
!10128 = !DILocation(line: 3790, column: 10, scope: !10127)
!10129 = !DILocation(line: 3790, column: 13, scope: !10127)
!10130 = !DILocation(line: 3790, column: 6, scope: !10101)
!10131 = !DILocation(line: 3791, column: 3, scope: !10127)
!10132 = !DILocation(line: 3793, column: 11, scope: !10101)
!10133 = !DILocation(line: 3794, column: 17, scope: !10101)
!10134 = !DILocation(line: 3794, column: 24, scope: !10101)
!10135 = !DILocation(line: 3793, column: 2, scope: !10101)
!10136 = !DILocation(line: 3796, column: 22, scope: !10101)
!10137 = !DILocation(line: 3796, column: 27, scope: !10101)
!10138 = !DILocation(line: 3797, column: 5, scope: !10101)
!10139 = !DILocation(line: 3797, column: 8, scope: !10101)
!10140 = !DILocation(line: 3797, column: 11, scope: !10101)
!10141 = !DILocation(line: 3796, column: 6, scope: !10101)
!10142 = !DILocation(line: 3796, column: 4, scope: !10101)
!10143 = !DILocation(line: 3798, column: 13, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 3798, column: 6)
!10145 = !DILocation(line: 3798, column: 6, scope: !10144)
!10146 = !DILocation(line: 3798, column: 6, scope: !10101)
!10147 = !DILocation(line: 3799, column: 3, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 3798, column: 17)
!10149 = !DILocation(line: 3802, column: 18, scope: !10148)
!10150 = !DILocation(line: 3802, column: 10, scope: !10148)
!10151 = !DILocation(line: 3802, column: 3, scope: !10148)
!10152 = !DILocation(line: 3804, column: 20, scope: !10101)
!10153 = !DILocation(line: 3804, column: 27, scope: !10101)
!10154 = !DILocation(line: 3804, column: 2, scope: !10101)
!10155 = !DILocation(line: 3805, column: 23, scope: !10101)
!10156 = !DILocation(line: 3805, column: 2, scope: !10101)
!10157 = !DILocation(line: 3806, column: 20, scope: !10101)
!10158 = !DILocation(line: 3806, column: 2, scope: !10101)
!10159 = !DILocation(line: 3806, column: 11, scope: !10101)
!10160 = !DILocation(line: 3806, column: 18, scope: !10101)
!10161 = !DILocation(line: 3807, column: 2, scope: !10101)
!10162 = !DILocation(line: 3808, column: 1, scope: !10101)
!10163 = distinct !DISubprogram(name: "fc_bsg_dispatch", scope: !3, file: !3, line: 3734, type: !5568, scopeLine: 3735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10164 = !DILocalVariable(name: "job", arg: 1, scope: !10163, file: !3, line: 3734, type: !5570)
!10165 = !DILocation(line: 3734, column: 44, scope: !10163)
!10166 = !DILocalVariable(name: "shost", scope: !10163, file: !3, line: 3736, type: !5046)
!10167 = !DILocation(line: 3736, column: 20, scope: !10163)
!10168 = !DILocation(line: 3736, column: 44, scope: !10163)
!10169 = !DILocation(line: 3736, column: 28, scope: !10163)
!10170 = !DILocation(line: 3738, column: 23, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10163, file: !3, line: 3738, column: 6)
!10172 = !DILocation(line: 3738, column: 28, scope: !10171)
!10173 = !DILocation(line: 3738, column: 6, scope: !10171)
!10174 = !DILocation(line: 3738, column: 6, scope: !10163)
!10175 = !DILocation(line: 3739, column: 32, scope: !10171)
!10176 = !DILocation(line: 3739, column: 39, scope: !10171)
!10177 = !DILocation(line: 3739, column: 10, scope: !10171)
!10178 = !DILocation(line: 3739, column: 3, scope: !10171)
!10179 = !DILocation(line: 3741, column: 31, scope: !10171)
!10180 = !DILocation(line: 3741, column: 38, scope: !10171)
!10181 = !DILocation(line: 3741, column: 10, scope: !10171)
!10182 = !DILocation(line: 3741, column: 3, scope: !10171)
!10183 = !DILocation(line: 3742, column: 1, scope: !10163)
!10184 = distinct !DISubprogram(name: "fc_bsg_job_timeout", scope: !3, file: !3, line: 3556, type: !10185, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10185 = !DISubroutineType(types: !10186)
!10186 = !{!80, !2484}
!10187 = !DILocalVariable(name: "req", arg: 1, scope: !10184, file: !3, line: 3556, type: !2484)
!10188 = !DILocation(line: 3556, column: 36, scope: !10184)
!10189 = !DILocalVariable(name: "job", scope: !10184, file: !3, line: 3558, type: !5570)
!10190 = !DILocation(line: 3558, column: 18, scope: !10184)
!10191 = !DILocation(line: 3558, column: 41, scope: !10184)
!10192 = !DILocation(line: 3558, column: 24, scope: !10184)
!10193 = !DILocalVariable(name: "shost", scope: !10184, file: !3, line: 3559, type: !5046)
!10194 = !DILocation(line: 3559, column: 20, scope: !10184)
!10195 = !DILocation(line: 3559, column: 44, scope: !10184)
!10196 = !DILocation(line: 3559, column: 28, scope: !10184)
!10197 = !DILocalVariable(name: "rport", scope: !10184, file: !3, line: 3560, type: !281)
!10198 = !DILocation(line: 3560, column: 19, scope: !10184)
!10199 = !DILocation(line: 3560, column: 43, scope: !10184)
!10200 = !DILocation(line: 3560, column: 27, scope: !10184)
!10201 = !DILocalVariable(name: "i", scope: !10184, file: !3, line: 3561, type: !4984)
!10202 = !DILocation(line: 3561, column: 22, scope: !10184)
!10203 = !DILocalVariable(name: "__mptr", scope: !10204, file: !3, line: 3561, type: !280)
!10204 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3561, column: 26)
!10205 = !DILocation(line: 3561, column: 26, scope: !10204)
!10206 = !DILocation(line: 3561, column: 26, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3561, column: 26)
!10208 = !DILocalVariable(name: "err", scope: !10184, file: !3, line: 3562, type: !355)
!10209 = !DILocation(line: 3562, column: 6, scope: !10184)
!10210 = !DILocalVariable(name: "inflight", scope: !10184, file: !3, line: 3562, type: !355)
!10211 = !DILocation(line: 3562, column: 15, scope: !10184)
!10212 = !DILocation(line: 3564, column: 6, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3564, column: 6)
!10214 = !DILocation(line: 3564, column: 12, scope: !10213)
!10215 = !DILocation(line: 3564, column: 15, scope: !10213)
!10216 = !DILocation(line: 3564, column: 22, scope: !10213)
!10217 = !DILocation(line: 3564, column: 33, scope: !10213)
!10218 = !DILocation(line: 3564, column: 6, scope: !10184)
!10219 = !DILocation(line: 3565, column: 3, scope: !10213)
!10220 = !DILocation(line: 3567, column: 25, scope: !10184)
!10221 = !DILocation(line: 3567, column: 13, scope: !10184)
!10222 = !DILocation(line: 3567, column: 11, scope: !10184)
!10223 = !DILocation(line: 3569, column: 6, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3569, column: 6)
!10225 = !DILocation(line: 3569, column: 15, scope: !10224)
!10226 = !DILocation(line: 3569, column: 18, scope: !10224)
!10227 = !DILocation(line: 3569, column: 21, scope: !10224)
!10228 = !DILocation(line: 3569, column: 24, scope: !10224)
!10229 = !DILocation(line: 3569, column: 6, scope: !10184)
!10230 = !DILocation(line: 3571, column: 9, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 3569, column: 37)
!10232 = !DILocation(line: 3571, column: 12, scope: !10231)
!10233 = !DILocation(line: 3571, column: 15, scope: !10231)
!10234 = !DILocation(line: 3571, column: 27, scope: !10231)
!10235 = !DILocation(line: 3571, column: 7, scope: !10231)
!10236 = !DILocation(line: 3572, column: 7, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 3572, column: 7)
!10238 = !DILocation(line: 3572, column: 11, scope: !10237)
!10239 = !DILocation(line: 3572, column: 7, scope: !10231)
!10240 = !DILocation(line: 3573, column: 16, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 3572, column: 23)
!10242 = !DILocation(line: 3573, column: 4, scope: !10241)
!10243 = !DILocation(line: 3574, column: 4, scope: !10241)
!10244 = !DILocation(line: 3575, column: 14, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 3575, column: 14)
!10246 = !DILocation(line: 3575, column: 14, scope: !10237)
!10247 = !DILocation(line: 3577, column: 38, scope: !10245)
!10248 = !DILocation(line: 3576, column: 4, scope: !10245)
!10249 = !DILocation(line: 3578, column: 2, scope: !10231)
!10250 = !DILocation(line: 3581, column: 6, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3581, column: 6)
!10252 = !DILocation(line: 3581, column: 6, scope: !10184)
!10253 = !DILocation(line: 3582, column: 22, scope: !10251)
!10254 = !DILocation(line: 3582, column: 3, scope: !10251)
!10255 = !DILocation(line: 3583, column: 2, scope: !10184)
!10256 = !DILocation(line: 3584, column: 1, scope: !10184)
!10257 = distinct !DISubprogram(name: "IS_ERR", scope: !10258, file: !10258, line: 34, type: !10259, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10258 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10259 = !DISubroutineType(types: !10260)
!10260 = !{!577, !3381}
!10261 = !DILocalVariable(name: "ptr", arg: 1, scope: !10257, file: !10258, line: 34, type: !3381)
!10262 = !DILocation(line: 34, column: 60, scope: !10257)
!10263 = !DILocation(line: 36, column: 9, scope: !10257)
!10264 = !DILocation(line: 36, column: 2, scope: !10257)
!10265 = distinct !DISubprogram(name: "PTR_ERR", scope: !10258, file: !10258, line: 29, type: !10266, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{!239, !3381}
!10268 = !DILocalVariable(name: "ptr", arg: 1, scope: !10265, file: !10258, line: 29, type: !3381)
!10269 = !DILocation(line: 29, column: 61, scope: !10265)
!10270 = !DILocation(line: 31, column: 16, scope: !10265)
!10271 = !DILocation(line: 31, column: 9, scope: !10265)
!10272 = !DILocation(line: 31, column: 2, scope: !10265)
!10273 = distinct !DISubprogram(name: "fc_bsg_to_shost", scope: !164, file: !164, line: 807, type: !10274, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!5046, !5570}
!10276 = !DILocalVariable(name: "job", arg: 1, scope: !10273, file: !164, line: 807, type: !5570)
!10277 = !DILocation(line: 807, column: 65, scope: !10273)
!10278 = !DILocation(line: 809, column: 26, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10273, file: !164, line: 809, column: 6)
!10280 = !DILocation(line: 809, column: 31, scope: !10279)
!10281 = !DILocation(line: 809, column: 6, scope: !10279)
!10282 = !DILocation(line: 809, column: 6, scope: !10273)
!10283 = !DILocation(line: 810, column: 23, scope: !10279)
!10284 = !DILocation(line: 810, column: 28, scope: !10279)
!10285 = !DILocation(line: 810, column: 10, scope: !10279)
!10286 = !DILocation(line: 810, column: 3, scope: !10279)
!10287 = !DILocalVariable(name: "__mptr", scope: !10288, file: !164, line: 811, type: !280)
!10288 = distinct !DILexicalBlock(scope: !10273, file: !164, line: 811, column: 9)
!10289 = !DILocation(line: 811, column: 9, scope: !10288)
!10290 = !DILocation(line: 811, column: 9, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10288, file: !164, line: 811, column: 9)
!10292 = !DILocation(line: 811, column: 9, scope: !10273)
!10293 = !DILocation(line: 811, column: 2, scope: !10273)
!10294 = !DILocation(line: 812, column: 1, scope: !10273)
!10295 = distinct !DISubprogram(name: "fc_bsg_rport_dispatch", scope: !3, file: !3, line: 3684, type: !10296, scopeLine: 3685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10296 = !DISubroutineType(types: !10297)
!10297 = !{!355, !5046, !5570}
!10298 = !DILocalVariable(name: "shost", arg: 1, scope: !10295, file: !3, line: 3684, type: !5046)
!10299 = !DILocation(line: 3684, column: 52, scope: !10295)
!10300 = !DILocalVariable(name: "job", arg: 2, scope: !10295, file: !3, line: 3684, type: !5570)
!10301 = !DILocation(line: 3684, column: 75, scope: !10295)
!10302 = !DILocalVariable(name: "i", scope: !10295, file: !3, line: 3686, type: !4984)
!10303 = !DILocation(line: 3686, column: 22, scope: !10295)
!10304 = !DILocalVariable(name: "__mptr", scope: !10305, file: !3, line: 3686, type: !280)
!10305 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3686, column: 26)
!10306 = !DILocation(line: 3686, column: 26, scope: !10305)
!10307 = !DILocation(line: 3686, column: 26, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 3686, column: 26)
!10309 = !DILocalVariable(name: "bsg_request", scope: !10295, file: !3, line: 3687, type: !10310)
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10311, size: 64)
!10311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_request", file: !10312, line: 269, size: 160, elements: !10313)
!10312 = !DIFile(filename: "./include/uapi/scsi/scsi_bsg_fc.h", directory: "/home/lizy2001/genbc/linux")
!10313 = !{!10314, !10315}
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "msgcode", scope: !10311, file: !10312, line: 270, baseType: !276, size: 32)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "rqst_data", scope: !10311, file: !10312, line: 280, baseType: !10316, size: 128, offset: 32)
!10316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10311, file: !10312, line: 271, size: 128, elements: !10317)
!10317 = !{!10318, !10324, !10329, !10334, !10342, !10347, !10351}
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "h_addrport", scope: !10316, file: !10312, line: 272, baseType: !10319, size: 32)
!10319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_host_add_rport", file: !10312, line: 70, size: 32, elements: !10320)
!10320 = !{!10321, !10322}
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10319, file: !10312, line: 71, baseType: !302, size: 8)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !10319, file: !10312, line: 74, baseType: !10323, size: 24, offset: 8)
!10323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 24, elements: !371)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "h_delrport", scope: !10316, file: !10312, line: 273, baseType: !10325, size: 32)
!10325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_host_del_rport", file: !10312, line: 91, size: 32, elements: !10326)
!10326 = !{!10327, !10328}
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10325, file: !10312, line: 92, baseType: !302, size: 8)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !10325, file: !10312, line: 95, baseType: !10323, size: 24, offset: 8)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "h_els", scope: !10316, file: !10312, line: 274, baseType: !10330, size: 32)
!10330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_host_els", file: !10312, line: 111, size: 32, elements: !10331)
!10331 = !{!10332, !10333}
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "command_code", scope: !10330, file: !10312, line: 116, baseType: !302, size: 8)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !10330, file: !10312, line: 119, baseType: !10323, size: 24, offset: 8)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "h_ct", scope: !10316, file: !10312, line: 275, baseType: !10335, size: 128)
!10335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_host_ct", file: !10312, line: 178, size: 128, elements: !10336)
!10336 = !{!10337, !10338, !10339, !10340, !10341}
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10335, file: !10312, line: 179, baseType: !302, size: 8)
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !10335, file: !10312, line: 182, baseType: !10323, size: 24, offset: 8)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_word0", scope: !10335, file: !10312, line: 187, baseType: !276, size: 32, offset: 32)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_word1", scope: !10335, file: !10312, line: 188, baseType: !276, size: 32, offset: 64)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_word2", scope: !10335, file: !10312, line: 189, baseType: !276, size: 32, offset: 96)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "h_vendor", scope: !10316, file: !10312, line: 276, baseType: !10343, size: 64)
!10343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_host_vendor", file: !10312, line: 204, size: 64, elements: !10344)
!10344 = !{!10345, !10346}
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !10343, file: !10312, line: 209, baseType: !289, size: 64)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_cmd", scope: !10343, file: !10312, line: 212, baseType: !6205, offset: 64)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "r_els", scope: !10316, file: !10312, line: 278, baseType: !10348, size: 8)
!10348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_rport_els", file: !10312, line: 233, size: 8, elements: !10349)
!10349 = !{!10350}
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "els_code", scope: !10348, file: !10312, line: 238, baseType: !302, size: 8)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "r_ct", scope: !10316, file: !10312, line: 279, baseType: !10352, size: 96)
!10352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_rport_ct", file: !10312, line: 252, size: 96, elements: !10353)
!10353 = !{!10354, !10355, !10356}
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_word0", scope: !10352, file: !10312, line: 256, baseType: !276, size: 32)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_word1", scope: !10352, file: !10312, line: 257, baseType: !276, size: 32, offset: 32)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_word2", scope: !10352, file: !10312, line: 258, baseType: !276, size: 32, offset: 64)
!10357 = !DILocation(line: 3687, column: 25, scope: !10295)
!10358 = !DILocation(line: 3687, column: 39, scope: !10295)
!10359 = !DILocation(line: 3687, column: 44, scope: !10295)
!10360 = !DILocalVariable(name: "bsg_reply", scope: !10295, file: !3, line: 3688, type: !10361)
!10361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10362, size: 64)
!10362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_reply", file: !10312, line: 285, size: 128, elements: !10363)
!10363 = !{!10364, !10365, !10366}
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !10362, file: !10312, line: 294, baseType: !276, size: 32)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "reply_payload_rcv_len", scope: !10362, file: !10312, line: 297, baseType: !276, size: 32, offset: 32)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "reply_data", scope: !10362, file: !10312, line: 303, baseType: !10367, size: 64, offset: 64)
!10367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10362, file: !10312, line: 299, size: 64, elements: !10368)
!10368 = !{!10369, !10373}
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_reply", scope: !10367, file: !10312, line: 300, baseType: !10370)
!10370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_host_vendor_reply", file: !10312, line: 217, elements: !10371)
!10371 = !{!10372}
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_rsp", scope: !10370, file: !10312, line: 219, baseType: !6205)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "ctels_reply", scope: !10367, file: !10312, line: 302, baseType: !10374, size: 64)
!10374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_bsg_ctels_reply", file: !10312, line: 131, size: 64, elements: !10375)
!10375 = !{!10376, !10377}
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10374, file: !10312, line: 156, baseType: !276, size: 32)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "rjt_data", scope: !10374, file: !10312, line: 164, baseType: !10378, size: 32, offset: 32)
!10378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10374, file: !10312, line: 159, size: 32, elements: !10379)
!10379 = !{!10380, !10381, !10382, !10383}
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !10378, file: !10312, line: 160, baseType: !302, size: 8)
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "reason_code", scope: !10378, file: !10312, line: 161, baseType: !302, size: 8, offset: 8)
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "reason_explanation", scope: !10378, file: !10312, line: 162, baseType: !302, size: 8, offset: 16)
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_unique", scope: !10378, file: !10312, line: 163, baseType: !302, size: 8, offset: 24)
!10384 = !DILocation(line: 3688, column: 23, scope: !10295)
!10385 = !DILocation(line: 3688, column: 35, scope: !10295)
!10386 = !DILocation(line: 3688, column: 40, scope: !10295)
!10387 = !DILocalVariable(name: "cmdlen", scope: !10295, file: !3, line: 3689, type: !355)
!10388 = !DILocation(line: 3689, column: 6, scope: !10295)
!10389 = !DILocalVariable(name: "ret", scope: !10295, file: !3, line: 3690, type: !355)
!10390 = !DILocation(line: 3690, column: 6, scope: !10295)
!10391 = !DILocation(line: 3693, column: 6, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3693, column: 6)
!10393 = !DILocation(line: 3693, column: 11, scope: !10392)
!10394 = !DILocation(line: 3693, column: 25, scope: !10392)
!10395 = !DILocation(line: 3693, column: 23, scope: !10392)
!10396 = !DILocation(line: 3693, column: 6, scope: !10295)
!10397 = !DILocation(line: 3694, column: 7, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10392, file: !3, line: 3693, column: 33)
!10399 = !DILocation(line: 3695, column: 3, scope: !10398)
!10400 = !DILocation(line: 3699, column: 10, scope: !10295)
!10401 = !DILocation(line: 3699, column: 23, scope: !10295)
!10402 = !DILocation(line: 3699, column: 2, scope: !10295)
!10403 = !DILocation(line: 3701, column: 10, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3699, column: 32)
!10405 = !DILocation(line: 3702, column: 3, scope: !10404)
!10406 = !DILocation(line: 3705, column: 10, scope: !10404)
!10407 = !DILocation(line: 3705, column: 3, scope: !10404)
!10408 = !DILabel(scope: !10404, name: "check_bidi", file: !3, line: 3706)
!10409 = !DILocation(line: 3706, column: 1, scope: !10404)
!10410 = !DILocation(line: 3708, column: 9, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 3708, column: 7)
!10412 = !DILocation(line: 3708, column: 14, scope: !10411)
!10413 = !DILocation(line: 3708, column: 30, scope: !10411)
!10414 = !DILocation(line: 3708, column: 43, scope: !10411)
!10415 = !DILocation(line: 3709, column: 9, scope: !10411)
!10416 = !DILocation(line: 3709, column: 14, scope: !10411)
!10417 = !DILocation(line: 3709, column: 28, scope: !10411)
!10418 = !DILocation(line: 3708, column: 7, scope: !10404)
!10419 = !DILocation(line: 3710, column: 8, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 3709, column: 42)
!10421 = !DILocation(line: 3711, column: 4, scope: !10420)
!10422 = !DILocation(line: 3713, column: 3, scope: !10404)
!10423 = !DILocation(line: 3715, column: 7, scope: !10404)
!10424 = !DILocation(line: 3716, column: 3, scope: !10404)
!10425 = !DILocation(line: 3719, column: 8, scope: !10295)
!10426 = !DILocation(line: 3719, column: 11, scope: !10295)
!10427 = !DILocation(line: 3719, column: 14, scope: !10295)
!10428 = !DILocation(line: 3719, column: 26, scope: !10295)
!10429 = !DILocation(line: 3719, column: 6, scope: !10295)
!10430 = !DILocation(line: 3720, column: 7, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3720, column: 6)
!10432 = !DILocation(line: 3720, column: 6, scope: !10295)
!10433 = !DILocation(line: 3721, column: 3, scope: !10431)
!10434 = !DILabel(scope: !10295, name: "fail_rport_msg", file: !3, line: 3723)
!10435 = !DILocation(line: 3723, column: 1, scope: !10295)
!10436 = !DILocation(line: 3725, column: 2, scope: !10295)
!10437 = !DILocation(line: 3725, column: 2, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 3725, column: 2)
!10439 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3725, column: 2)
!10440 = !DILocation(line: 3725, column: 2, scope: !10439)
!10441 = !DILocation(line: 3725, column: 2, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3725, column: 2)
!10443 = !DILocation(line: 3725, column: 2, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 3725, column: 2)
!10445 = !DILocation(line: 3725, column: 2, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 3725, column: 2)
!10447 = !{i32 -2140113044, i32 -2140113015, i32 -2140112969, i32 -2140112911, i32 -2140112857, i32 -2140112803, i32 -2140112748, i32 -2140112717}
!10448 = !DILocation(line: 3725, column: 2, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 3725, column: 2)
!10450 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 3725, column: 2)
!10451 = !{i32 -2140112261, i32 -2140112254, i32 -2140112200, i32 -2140112169, i32 -2140112139}
!10452 = !DILocation(line: 3725, column: 2, scope: !10450)
!10453 = !DILocation(line: 3726, column: 2, scope: !10295)
!10454 = !DILocation(line: 3726, column: 13, scope: !10295)
!10455 = !DILocation(line: 3726, column: 35, scope: !10295)
!10456 = !DILocation(line: 3727, column: 22, scope: !10295)
!10457 = !DILocation(line: 3727, column: 2, scope: !10295)
!10458 = !DILocation(line: 3727, column: 13, scope: !10295)
!10459 = !DILocation(line: 3727, column: 20, scope: !10295)
!10460 = !DILocation(line: 3728, column: 2, scope: !10295)
!10461 = !DILocation(line: 3728, column: 7, scope: !10295)
!10462 = !DILocation(line: 3728, column: 17, scope: !10295)
!10463 = !DILocation(line: 3729, column: 15, scope: !10295)
!10464 = !DILocation(line: 3729, column: 20, scope: !10295)
!10465 = !DILocation(line: 3729, column: 31, scope: !10295)
!10466 = !DILocation(line: 3730, column: 10, scope: !10295)
!10467 = !DILocation(line: 3730, column: 21, scope: !10295)
!10468 = !DILocation(line: 3729, column: 2, scope: !10295)
!10469 = !DILocation(line: 3731, column: 2, scope: !10295)
!10470 = !DILocation(line: 3732, column: 1, scope: !10295)
!10471 = distinct !DISubprogram(name: "fc_bsg_host_dispatch", scope: !3, file: !3, line: 3591, type: !10296, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10472 = !DILocalVariable(name: "shost", arg: 1, scope: !10471, file: !3, line: 3591, type: !5046)
!10473 = !DILocation(line: 3591, column: 51, scope: !10471)
!10474 = !DILocalVariable(name: "job", arg: 2, scope: !10471, file: !3, line: 3591, type: !5570)
!10475 = !DILocation(line: 3591, column: 74, scope: !10471)
!10476 = !DILocalVariable(name: "i", scope: !10471, file: !3, line: 3593, type: !4984)
!10477 = !DILocation(line: 3593, column: 22, scope: !10471)
!10478 = !DILocalVariable(name: "__mptr", scope: !10479, file: !3, line: 3593, type: !280)
!10479 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 3593, column: 26)
!10480 = !DILocation(line: 3593, column: 26, scope: !10479)
!10481 = !DILocation(line: 3593, column: 26, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 3593, column: 26)
!10483 = !DILocalVariable(name: "bsg_request", scope: !10471, file: !3, line: 3594, type: !10310)
!10484 = !DILocation(line: 3594, column: 25, scope: !10471)
!10485 = !DILocation(line: 3594, column: 39, scope: !10471)
!10486 = !DILocation(line: 3594, column: 44, scope: !10471)
!10487 = !DILocalVariable(name: "bsg_reply", scope: !10471, file: !3, line: 3595, type: !10361)
!10488 = !DILocation(line: 3595, column: 23, scope: !10471)
!10489 = !DILocation(line: 3595, column: 35, scope: !10471)
!10490 = !DILocation(line: 3595, column: 40, scope: !10471)
!10491 = !DILocalVariable(name: "cmdlen", scope: !10471, file: !3, line: 3596, type: !355)
!10492 = !DILocation(line: 3596, column: 6, scope: !10471)
!10493 = !DILocalVariable(name: "ret", scope: !10471, file: !3, line: 3597, type: !355)
!10494 = !DILocation(line: 3597, column: 6, scope: !10471)
!10495 = !DILocation(line: 3600, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 3600, column: 6)
!10497 = !DILocation(line: 3600, column: 11, scope: !10496)
!10498 = !DILocation(line: 3600, column: 25, scope: !10496)
!10499 = !DILocation(line: 3600, column: 23, scope: !10496)
!10500 = !DILocation(line: 3600, column: 6, scope: !10471)
!10501 = !DILocation(line: 3601, column: 7, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 3600, column: 33)
!10503 = !DILocation(line: 3602, column: 3, scope: !10502)
!10504 = !DILocation(line: 3606, column: 10, scope: !10471)
!10505 = !DILocation(line: 3606, column: 23, scope: !10471)
!10506 = !DILocation(line: 3606, column: 2, scope: !10471)
!10507 = !DILocation(line: 3608, column: 10, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 3606, column: 32)
!10509 = !DILocation(line: 3609, column: 3, scope: !10508)
!10510 = !DILocation(line: 3612, column: 10, scope: !10508)
!10511 = !DILocation(line: 3613, column: 3, scope: !10508)
!10512 = !DILocation(line: 3616, column: 10, scope: !10508)
!10513 = !DILocation(line: 3618, column: 9, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 3618, column: 7)
!10515 = !DILocation(line: 3618, column: 14, scope: !10514)
!10516 = !DILocation(line: 3618, column: 30, scope: !10514)
!10517 = !DILocation(line: 3618, column: 43, scope: !10514)
!10518 = !DILocation(line: 3619, column: 9, scope: !10514)
!10519 = !DILocation(line: 3619, column: 14, scope: !10514)
!10520 = !DILocation(line: 3619, column: 28, scope: !10514)
!10521 = !DILocation(line: 3618, column: 7, scope: !10508)
!10522 = !DILocation(line: 3620, column: 8, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10514, file: !3, line: 3619, column: 42)
!10524 = !DILocation(line: 3621, column: 4, scope: !10523)
!10525 = !DILocation(line: 3623, column: 3, scope: !10508)
!10526 = !DILocation(line: 3626, column: 10, scope: !10508)
!10527 = !DILocation(line: 3628, column: 9, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 3628, column: 7)
!10529 = !DILocation(line: 3628, column: 14, scope: !10528)
!10530 = !DILocation(line: 3628, column: 30, scope: !10528)
!10531 = !DILocation(line: 3628, column: 43, scope: !10528)
!10532 = !DILocation(line: 3629, column: 9, scope: !10528)
!10533 = !DILocation(line: 3629, column: 14, scope: !10528)
!10534 = !DILocation(line: 3629, column: 28, scope: !10528)
!10535 = !DILocation(line: 3628, column: 7, scope: !10508)
!10536 = !DILocation(line: 3630, column: 8, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 3629, column: 42)
!10538 = !DILocation(line: 3631, column: 4, scope: !10537)
!10539 = !DILocation(line: 3633, column: 3, scope: !10508)
!10540 = !DILocation(line: 3636, column: 10, scope: !10508)
!10541 = !DILocation(line: 3637, column: 8, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 3637, column: 7)
!10543 = !DILocation(line: 3637, column: 15, scope: !10542)
!10544 = !DILocation(line: 3637, column: 22, scope: !10542)
!10545 = !DILocation(line: 3637, column: 32, scope: !10542)
!10546 = !DILocation(line: 3637, column: 39, scope: !10542)
!10547 = !DILocation(line: 3638, column: 8, scope: !10542)
!10548 = !DILocation(line: 3638, column: 21, scope: !10542)
!10549 = !DILocation(line: 3638, column: 31, scope: !10542)
!10550 = !DILocation(line: 3638, column: 40, scope: !10542)
!10551 = !DILocation(line: 3639, column: 4, scope: !10542)
!10552 = !DILocation(line: 3639, column: 11, scope: !10542)
!10553 = !DILocation(line: 3639, column: 18, scope: !10542)
!10554 = !DILocation(line: 3638, column: 50, scope: !10542)
!10555 = !DILocation(line: 3637, column: 7, scope: !10508)
!10556 = !DILocation(line: 3640, column: 8, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10542, file: !3, line: 3639, column: 30)
!10558 = !DILocation(line: 3641, column: 4, scope: !10557)
!10559 = !DILocation(line: 3643, column: 3, scope: !10508)
!10560 = !DILocation(line: 3646, column: 7, scope: !10508)
!10561 = !DILocation(line: 3647, column: 3, scope: !10508)
!10562 = !DILocation(line: 3650, column: 8, scope: !10471)
!10563 = !DILocation(line: 3650, column: 11, scope: !10471)
!10564 = !DILocation(line: 3650, column: 14, scope: !10471)
!10565 = !DILocation(line: 3650, column: 26, scope: !10471)
!10566 = !DILocation(line: 3650, column: 6, scope: !10471)
!10567 = !DILocation(line: 3651, column: 7, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 3651, column: 6)
!10569 = !DILocation(line: 3651, column: 6, scope: !10471)
!10570 = !DILocation(line: 3652, column: 3, scope: !10568)
!10571 = !DILabel(scope: !10471, name: "fail_host_msg", file: !3, line: 3654)
!10572 = !DILocation(line: 3654, column: 1, scope: !10471)
!10573 = !DILocation(line: 3656, column: 2, scope: !10471)
!10574 = !DILocation(line: 3656, column: 2, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 3656, column: 2)
!10576 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 3656, column: 2)
!10577 = !DILocation(line: 3656, column: 2, scope: !10576)
!10578 = !DILocation(line: 3656, column: 2, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 3656, column: 2)
!10580 = !DILocation(line: 3656, column: 2, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3656, column: 2)
!10582 = !DILocation(line: 3656, column: 2, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3656, column: 2)
!10584 = !{i32 -2140116028, i32 -2140115999, i32 -2140115953, i32 -2140115895, i32 -2140115841, i32 -2140115787, i32 -2140115732, i32 -2140115701}
!10585 = !DILocation(line: 3656, column: 2, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 3656, column: 2)
!10587 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3656, column: 2)
!10588 = !{i32 -2140115245, i32 -2140115238, i32 -2140115184, i32 -2140115153, i32 -2140115123}
!10589 = !DILocation(line: 3656, column: 2, scope: !10587)
!10590 = !DILocation(line: 3657, column: 2, scope: !10471)
!10591 = !DILocation(line: 3657, column: 13, scope: !10471)
!10592 = !DILocation(line: 3657, column: 35, scope: !10471)
!10593 = !DILocation(line: 3658, column: 22, scope: !10471)
!10594 = !DILocation(line: 3658, column: 2, scope: !10471)
!10595 = !DILocation(line: 3658, column: 13, scope: !10471)
!10596 = !DILocation(line: 3658, column: 20, scope: !10471)
!10597 = !DILocation(line: 3659, column: 2, scope: !10471)
!10598 = !DILocation(line: 3659, column: 7, scope: !10471)
!10599 = !DILocation(line: 3659, column: 17, scope: !10471)
!10600 = !DILocation(line: 3660, column: 15, scope: !10471)
!10601 = !DILocation(line: 3660, column: 20, scope: !10471)
!10602 = !DILocation(line: 3660, column: 31, scope: !10471)
!10603 = !DILocation(line: 3661, column: 10, scope: !10471)
!10604 = !DILocation(line: 3661, column: 21, scope: !10471)
!10605 = !DILocation(line: 3660, column: 2, scope: !10471)
!10606 = !DILocation(line: 3662, column: 2, scope: !10471)
!10607 = !DILocation(line: 3663, column: 1, scope: !10471)
!10608 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !2494, file: !2494, line: 567, type: !10609, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!280, !2484}
!10611 = !DILocalVariable(name: "rq", arg: 1, scope: !10608, file: !2494, line: 567, type: !2484)
!10612 = !DILocation(line: 567, column: 54, scope: !10608)
!10613 = !DILocation(line: 569, column: 9, scope: !10608)
!10614 = !DILocation(line: 569, column: 12, scope: !10608)
!10615 = !DILocation(line: 569, column: 2, scope: !10608)
!10616 = distinct !DISubprogram(name: "fc_bsg_to_rport", scope: !164, file: !164, line: 814, type: !10617, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!281, !5570}
!10619 = !DILocalVariable(name: "job", arg: 1, scope: !10616, file: !164, line: 814, type: !5570)
!10620 = !DILocation(line: 814, column: 64, scope: !10616)
!10621 = !DILocation(line: 816, column: 23, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10616, file: !164, line: 816, column: 6)
!10623 = !DILocation(line: 816, column: 28, scope: !10622)
!10624 = !DILocation(line: 816, column: 6, scope: !10622)
!10625 = !DILocation(line: 816, column: 6, scope: !10616)
!10626 = !DILocalVariable(name: "__mptr", scope: !10627, file: !164, line: 817, type: !280)
!10627 = distinct !DILexicalBlock(scope: !10622, file: !164, line: 817, column: 10)
!10628 = !DILocation(line: 817, column: 10, scope: !10627)
!10629 = !DILocation(line: 817, column: 10, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10627, file: !164, line: 817, column: 10)
!10631 = !DILocation(line: 817, column: 3, scope: !10622)
!10632 = !DILocation(line: 818, column: 2, scope: !10616)
!10633 = !DILocation(line: 819, column: 1, scope: !10616)
!10634 = distinct !DISubprogram(name: "fc_bsg_remove", scope: !3, file: !3, line: 3850, type: !2845, scopeLine: 3851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10635 = !DILocalVariable(name: "q", arg: 1, scope: !10634, file: !3, line: 3850, type: !2480)
!10636 = !DILocation(line: 3850, column: 37, scope: !10634)
!10637 = !DILocation(line: 3852, column: 19, scope: !10634)
!10638 = !DILocation(line: 3852, column: 2, scope: !10634)
!10639 = !DILocation(line: 3853, column: 1, scope: !10634)
!10640 = distinct !DISubprogram(name: "get_order", scope: !10641, file: !10641, line: 29, type: !10642, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10641 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10642 = !DISubroutineType(types: !10643)
!10643 = !{!355, !419}
!10644 = !DILocalVariable(name: "x", arg: 1, scope: !10645, file: !10646, line: 366, type: !289)
!10645 = distinct !DISubprogram(name: "fls64", scope: !10646, file: !10646, line: 366, type: !10647, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10646 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10647 = !DISubroutineType(types: !10648)
!10648 = !{!355, !289}
!10649 = !DILocation(line: 366, column: 40, scope: !10645, inlinedAt: !10650)
!10650 = distinct !DILocation(line: 46, column: 9, scope: !10640)
!10651 = !DILocalVariable(name: "bitpos", scope: !10645, file: !10646, line: 368, type: !355)
!10652 = !DILocation(line: 368, column: 6, scope: !10645, inlinedAt: !10650)
!10653 = !DILocalVariable(name: "size", arg: 1, scope: !10640, file: !10641, line: 29, type: !419)
!10654 = !DILocation(line: 29, column: 63, scope: !10640)
!10655 = !DILocation(line: 31, column: 27, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10640, file: !10641, line: 31, column: 6)
!10657 = !DILocation(line: 31, column: 6, scope: !10656)
!10658 = !DILocation(line: 31, column: 6, scope: !10640)
!10659 = !DILocation(line: 32, column: 8, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !10641, line: 32, column: 7)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !10641, line: 31, column: 34)
!10662 = !DILocation(line: 32, column: 7, scope: !10661)
!10663 = !DILocation(line: 33, column: 4, scope: !10660)
!10664 = !DILocation(line: 35, column: 7, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10661, file: !10641, line: 35, column: 7)
!10666 = !DILocation(line: 35, column: 12, scope: !10665)
!10667 = !DILocation(line: 35, column: 7, scope: !10661)
!10668 = !DILocation(line: 36, column: 4, scope: !10665)
!10669 = !DILocation(line: 38, column: 10, scope: !10661)
!10670 = !DILocation(line: 38, column: 28, scope: !10661)
!10671 = !DILocation(line: 38, column: 41, scope: !10661)
!10672 = !DILocation(line: 38, column: 3, scope: !10661)
!10673 = !DILocation(line: 41, column: 6, scope: !10640)
!10674 = !DILocation(line: 42, column: 7, scope: !10640)
!10675 = !DILocation(line: 46, column: 15, scope: !10640)
!10676 = !DILocation(line: 374, column: 2, scope: !10645, inlinedAt: !10650)
!10677 = !DILocation(line: 376, column: 14, scope: !10645, inlinedAt: !10650)
!10678 = !{i32 413120}
!10679 = !DILocation(line: 377, column: 9, scope: !10645, inlinedAt: !10650)
!10680 = !DILocation(line: 377, column: 16, scope: !10645, inlinedAt: !10650)
!10681 = !DILocation(line: 46, column: 2, scope: !10640)
!10682 = !DILocation(line: 48, column: 1, scope: !10640)
!10683 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10684, file: !10684, line: 30, type: !10685, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10684 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10685 = !DISubroutineType(types: !10686)
!10686 = !{!355, !288}
!10687 = !DILocation(line: 366, column: 40, scope: !10645, inlinedAt: !10688)
!10688 = distinct !DILocation(line: 32, column: 9, scope: !10683)
!10689 = !DILocation(line: 368, column: 6, scope: !10645, inlinedAt: !10688)
!10690 = !DILocalVariable(name: "n", arg: 1, scope: !10683, file: !10684, line: 30, type: !288)
!10691 = !DILocation(line: 30, column: 21, scope: !10683)
!10692 = !DILocation(line: 32, column: 15, scope: !10683)
!10693 = !DILocation(line: 374, column: 2, scope: !10645, inlinedAt: !10688)
!10694 = !DILocation(line: 376, column: 14, scope: !10645, inlinedAt: !10688)
!10695 = !DILocation(line: 377, column: 9, scope: !10645, inlinedAt: !10688)
!10696 = !DILocation(line: 377, column: 16, scope: !10645, inlinedAt: !10688)
!10697 = !DILocation(line: 32, column: 18, scope: !10683)
!10698 = !DILocation(line: 32, column: 2, scope: !10683)
!10699 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10700, file: !10700, line: 137, type: !10701, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10700 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10701 = !DISubroutineType(types: !10702)
!10702 = !{!280, !1232, !3381, !416, !271}
!10703 = !DILocalVariable(name: "s", arg: 1, scope: !10699, file: !10700, line: 137, type: !1232)
!10704 = !DILocation(line: 137, column: 54, scope: !10699)
!10705 = !DILocalVariable(name: "object", arg: 2, scope: !10699, file: !10700, line: 137, type: !3381)
!10706 = !DILocation(line: 137, column: 69, scope: !10699)
!10707 = !DILocalVariable(name: "size", arg: 3, scope: !10699, file: !10700, line: 138, type: !416)
!10708 = !DILocation(line: 138, column: 12, scope: !10699)
!10709 = !DILocalVariable(name: "flags", arg: 4, scope: !10699, file: !10700, line: 138, type: !271)
!10710 = !DILocation(line: 138, column: 24, scope: !10699)
!10711 = !DILocation(line: 140, column: 17, scope: !10699)
!10712 = !DILocation(line: 140, column: 2, scope: !10699)
!10713 = distinct !DISubprogram(name: "show_fcstat_seconds_since_last_reset", scope: !3, file: !3, line: 1718, type: !5027, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10714 = !DILocalVariable(name: "cd", arg: 1, scope: !10713, file: !3, line: 1718, type: !2400)
!10715 = !DILocation(line: 1718, column: 1, scope: !10713)
!10716 = !DILocalVariable(name: "attr", arg: 2, scope: !10713, file: !3, line: 1718, type: !5021)
!10717 = !DILocalVariable(name: "buf", arg: 3, scope: !10713, file: !3, line: 1718, type: !278)
!10718 = distinct !DISubprogram(name: "fc_stat_show", scope: !3, file: !3, line: 1686, type: !10719, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10719 = !DISubroutineType(types: !10720)
!10720 = !{!401, !4869, !278, !419}
!10721 = !DILocalVariable(name: "dev", arg: 1, scope: !10718, file: !3, line: 1686, type: !4869)
!10722 = !DILocation(line: 1686, column: 35, scope: !10718)
!10723 = !DILocalVariable(name: "buf", arg: 2, scope: !10718, file: !3, line: 1686, type: !278)
!10724 = !DILocation(line: 1686, column: 46, scope: !10718)
!10725 = !DILocalVariable(name: "offset", arg: 3, scope: !10718, file: !3, line: 1686, type: !419)
!10726 = !DILocation(line: 1686, column: 65, scope: !10718)
!10727 = !DILocalVariable(name: "shost", scope: !10718, file: !3, line: 1688, type: !5046)
!10728 = !DILocation(line: 1688, column: 20, scope: !10718)
!10729 = !DILocation(line: 1688, column: 28, scope: !10718)
!10730 = !DILocalVariable(name: "i", scope: !10718, file: !3, line: 1689, type: !4984)
!10731 = !DILocation(line: 1689, column: 22, scope: !10718)
!10732 = !DILocalVariable(name: "__mptr", scope: !10733, file: !3, line: 1689, type: !280)
!10733 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 1689, column: 26)
!10734 = !DILocation(line: 1689, column: 26, scope: !10733)
!10735 = !DILocation(line: 1689, column: 26, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 1689, column: 26)
!10737 = !DILocalVariable(name: "stats", scope: !10718, file: !3, line: 1690, type: !5498)
!10738 = !DILocation(line: 1690, column: 29, scope: !10718)
!10739 = !DILocalVariable(name: "ret", scope: !10718, file: !3, line: 1691, type: !401)
!10740 = !DILocation(line: 1691, column: 10, scope: !10718)
!10741 = !DILocation(line: 1693, column: 6, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 1693, column: 6)
!10743 = !DILocation(line: 1693, column: 13, scope: !10742)
!10744 = !DILocation(line: 1693, column: 49, scope: !10742)
!10745 = !DILocation(line: 1694, column: 6, scope: !10742)
!10746 = !DILocation(line: 1694, column: 13, scope: !10742)
!10747 = !DILocation(line: 1694, column: 27, scope: !10742)
!10748 = !DILocation(line: 1693, column: 6, scope: !10718)
!10749 = !DILocalVariable(name: "__ret_warn_on", scope: !10750, file: !3, line: 1695, type: !355)
!10750 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 1695, column: 3)
!10751 = !DILocation(line: 1695, column: 3, scope: !10750)
!10752 = !DILocation(line: 1695, column: 3, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 1695, column: 3)
!10754 = !DILocation(line: 1695, column: 3, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 1695, column: 3)
!10756 = !DILocation(line: 1695, column: 3, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 1695, column: 3)
!10758 = !DILocation(line: 1695, column: 3, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 1695, column: 3)
!10760 = !{i32 -2140340936, i32 -2140340907, i32 -2140340861, i32 -2140340803, i32 -2140340749, i32 -2140340695, i32 -2140340640, i32 -2140340609}
!10761 = !DILocation(line: 1695, column: 3, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 1695, column: 3)
!10763 = !{i32 -2140340194, i32 -2140340187, i32 -2140340135, i32 -2140340104, i32 -2140340074}
!10764 = !DILocation(line: 1695, column: 3, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 1695, column: 3)
!10766 = !DILocation(line: 1695, column: 3, scope: !10742)
!10767 = !DILocation(line: 1697, column: 6, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 1697, column: 6)
!10769 = !DILocation(line: 1697, column: 9, scope: !10768)
!10770 = !DILocation(line: 1697, column: 12, scope: !10768)
!10771 = !DILocation(line: 1697, column: 6, scope: !10718)
!10772 = !DILocation(line: 1698, column: 12, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1697, column: 31)
!10774 = !DILocation(line: 1698, column: 15, scope: !10773)
!10775 = !DILocation(line: 1698, column: 18, scope: !10773)
!10776 = !DILocation(line: 1698, column: 37, scope: !10773)
!10777 = !DILocation(line: 1698, column: 11, scope: !10773)
!10778 = !DILocation(line: 1698, column: 9, scope: !10773)
!10779 = !DILocation(line: 1699, column: 7, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 1699, column: 7)
!10781 = !DILocation(line: 1699, column: 7, scope: !10773)
!10782 = !DILocation(line: 1700, column: 19, scope: !10780)
!10783 = !DILocation(line: 1701, column: 47, scope: !10780)
!10784 = !DILocation(line: 1701, column: 40, scope: !10780)
!10785 = !DILocation(line: 1701, column: 56, scope: !10780)
!10786 = !DILocation(line: 1701, column: 54, scope: !10780)
!10787 = !DILocation(line: 1701, column: 30, scope: !10780)
!10788 = !DILocation(line: 1700, column: 10, scope: !10780)
!10789 = !DILocation(line: 1700, column: 8, scope: !10780)
!10790 = !DILocation(line: 1700, column: 4, scope: !10780)
!10791 = !DILocation(line: 1702, column: 2, scope: !10773)
!10792 = !DILocation(line: 1703, column: 9, scope: !10718)
!10793 = !DILocation(line: 1703, column: 2, scope: !10718)
!10794 = distinct !DISubprogram(name: "show_fcstat_tx_frames", scope: !3, file: !3, line: 1719, type: !5027, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10795 = !DILocalVariable(name: "cd", arg: 1, scope: !10794, file: !3, line: 1719, type: !2400)
!10796 = !DILocation(line: 1719, column: 1, scope: !10794)
!10797 = !DILocalVariable(name: "attr", arg: 2, scope: !10794, file: !3, line: 1719, type: !5021)
!10798 = !DILocalVariable(name: "buf", arg: 3, scope: !10794, file: !3, line: 1719, type: !278)
!10799 = distinct !DISubprogram(name: "show_fcstat_tx_words", scope: !3, file: !3, line: 1720, type: !5027, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10800 = !DILocalVariable(name: "cd", arg: 1, scope: !10799, file: !3, line: 1720, type: !2400)
!10801 = !DILocation(line: 1720, column: 1, scope: !10799)
!10802 = !DILocalVariable(name: "attr", arg: 2, scope: !10799, file: !3, line: 1720, type: !5021)
!10803 = !DILocalVariable(name: "buf", arg: 3, scope: !10799, file: !3, line: 1720, type: !278)
!10804 = distinct !DISubprogram(name: "show_fcstat_rx_frames", scope: !3, file: !3, line: 1721, type: !5027, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10805 = !DILocalVariable(name: "cd", arg: 1, scope: !10804, file: !3, line: 1721, type: !2400)
!10806 = !DILocation(line: 1721, column: 1, scope: !10804)
!10807 = !DILocalVariable(name: "attr", arg: 2, scope: !10804, file: !3, line: 1721, type: !5021)
!10808 = !DILocalVariable(name: "buf", arg: 3, scope: !10804, file: !3, line: 1721, type: !278)
!10809 = distinct !DISubprogram(name: "show_fcstat_rx_words", scope: !3, file: !3, line: 1722, type: !5027, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10810 = !DILocalVariable(name: "cd", arg: 1, scope: !10809, file: !3, line: 1722, type: !2400)
!10811 = !DILocation(line: 1722, column: 1, scope: !10809)
!10812 = !DILocalVariable(name: "attr", arg: 2, scope: !10809, file: !3, line: 1722, type: !5021)
!10813 = !DILocalVariable(name: "buf", arg: 3, scope: !10809, file: !3, line: 1722, type: !278)
!10814 = distinct !DISubprogram(name: "show_fcstat_lip_count", scope: !3, file: !3, line: 1723, type: !5027, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10815 = !DILocalVariable(name: "cd", arg: 1, scope: !10814, file: !3, line: 1723, type: !2400)
!10816 = !DILocation(line: 1723, column: 1, scope: !10814)
!10817 = !DILocalVariable(name: "attr", arg: 2, scope: !10814, file: !3, line: 1723, type: !5021)
!10818 = !DILocalVariable(name: "buf", arg: 3, scope: !10814, file: !3, line: 1723, type: !278)
!10819 = distinct !DISubprogram(name: "show_fcstat_nos_count", scope: !3, file: !3, line: 1724, type: !5027, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10820 = !DILocalVariable(name: "cd", arg: 1, scope: !10819, file: !3, line: 1724, type: !2400)
!10821 = !DILocation(line: 1724, column: 1, scope: !10819)
!10822 = !DILocalVariable(name: "attr", arg: 2, scope: !10819, file: !3, line: 1724, type: !5021)
!10823 = !DILocalVariable(name: "buf", arg: 3, scope: !10819, file: !3, line: 1724, type: !278)
!10824 = distinct !DISubprogram(name: "show_fcstat_error_frames", scope: !3, file: !3, line: 1725, type: !5027, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10825 = !DILocalVariable(name: "cd", arg: 1, scope: !10824, file: !3, line: 1725, type: !2400)
!10826 = !DILocation(line: 1725, column: 1, scope: !10824)
!10827 = !DILocalVariable(name: "attr", arg: 2, scope: !10824, file: !3, line: 1725, type: !5021)
!10828 = !DILocalVariable(name: "buf", arg: 3, scope: !10824, file: !3, line: 1725, type: !278)
!10829 = distinct !DISubprogram(name: "show_fcstat_dumped_frames", scope: !3, file: !3, line: 1726, type: !5027, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10830 = !DILocalVariable(name: "cd", arg: 1, scope: !10829, file: !3, line: 1726, type: !2400)
!10831 = !DILocation(line: 1726, column: 1, scope: !10829)
!10832 = !DILocalVariable(name: "attr", arg: 2, scope: !10829, file: !3, line: 1726, type: !5021)
!10833 = !DILocalVariable(name: "buf", arg: 3, scope: !10829, file: !3, line: 1726, type: !278)
!10834 = distinct !DISubprogram(name: "show_fcstat_link_failure_count", scope: !3, file: !3, line: 1727, type: !5027, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10835 = !DILocalVariable(name: "cd", arg: 1, scope: !10834, file: !3, line: 1727, type: !2400)
!10836 = !DILocation(line: 1727, column: 1, scope: !10834)
!10837 = !DILocalVariable(name: "attr", arg: 2, scope: !10834, file: !3, line: 1727, type: !5021)
!10838 = !DILocalVariable(name: "buf", arg: 3, scope: !10834, file: !3, line: 1727, type: !278)
!10839 = distinct !DISubprogram(name: "show_fcstat_loss_of_sync_count", scope: !3, file: !3, line: 1728, type: !5027, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10840 = !DILocalVariable(name: "cd", arg: 1, scope: !10839, file: !3, line: 1728, type: !2400)
!10841 = !DILocation(line: 1728, column: 1, scope: !10839)
!10842 = !DILocalVariable(name: "attr", arg: 2, scope: !10839, file: !3, line: 1728, type: !5021)
!10843 = !DILocalVariable(name: "buf", arg: 3, scope: !10839, file: !3, line: 1728, type: !278)
!10844 = distinct !DISubprogram(name: "show_fcstat_loss_of_signal_count", scope: !3, file: !3, line: 1729, type: !5027, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10845 = !DILocalVariable(name: "cd", arg: 1, scope: !10844, file: !3, line: 1729, type: !2400)
!10846 = !DILocation(line: 1729, column: 1, scope: !10844)
!10847 = !DILocalVariable(name: "attr", arg: 2, scope: !10844, file: !3, line: 1729, type: !5021)
!10848 = !DILocalVariable(name: "buf", arg: 3, scope: !10844, file: !3, line: 1729, type: !278)
!10849 = distinct !DISubprogram(name: "show_fcstat_prim_seq_protocol_err_count", scope: !3, file: !3, line: 1730, type: !5027, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10850 = !DILocalVariable(name: "cd", arg: 1, scope: !10849, file: !3, line: 1730, type: !2400)
!10851 = !DILocation(line: 1730, column: 1, scope: !10849)
!10852 = !DILocalVariable(name: "attr", arg: 2, scope: !10849, file: !3, line: 1730, type: !5021)
!10853 = !DILocalVariable(name: "buf", arg: 3, scope: !10849, file: !3, line: 1730, type: !278)
!10854 = distinct !DISubprogram(name: "show_fcstat_invalid_tx_word_count", scope: !3, file: !3, line: 1731, type: !5027, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10855 = !DILocalVariable(name: "cd", arg: 1, scope: !10854, file: !3, line: 1731, type: !2400)
!10856 = !DILocation(line: 1731, column: 1, scope: !10854)
!10857 = !DILocalVariable(name: "attr", arg: 2, scope: !10854, file: !3, line: 1731, type: !5021)
!10858 = !DILocalVariable(name: "buf", arg: 3, scope: !10854, file: !3, line: 1731, type: !278)
!10859 = distinct !DISubprogram(name: "show_fcstat_invalid_crc_count", scope: !3, file: !3, line: 1732, type: !5027, scopeLine: 1732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10860 = !DILocalVariable(name: "cd", arg: 1, scope: !10859, file: !3, line: 1732, type: !2400)
!10861 = !DILocation(line: 1732, column: 1, scope: !10859)
!10862 = !DILocalVariable(name: "attr", arg: 2, scope: !10859, file: !3, line: 1732, type: !5021)
!10863 = !DILocalVariable(name: "buf", arg: 3, scope: !10859, file: !3, line: 1732, type: !278)
!10864 = distinct !DISubprogram(name: "show_fcstat_fcp_input_requests", scope: !3, file: !3, line: 1733, type: !5027, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10865 = !DILocalVariable(name: "cd", arg: 1, scope: !10864, file: !3, line: 1733, type: !2400)
!10866 = !DILocation(line: 1733, column: 1, scope: !10864)
!10867 = !DILocalVariable(name: "attr", arg: 2, scope: !10864, file: !3, line: 1733, type: !5021)
!10868 = !DILocalVariable(name: "buf", arg: 3, scope: !10864, file: !3, line: 1733, type: !278)
!10869 = distinct !DISubprogram(name: "show_fcstat_fcp_output_requests", scope: !3, file: !3, line: 1734, type: !5027, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10870 = !DILocalVariable(name: "cd", arg: 1, scope: !10869, file: !3, line: 1734, type: !2400)
!10871 = !DILocation(line: 1734, column: 1, scope: !10869)
!10872 = !DILocalVariable(name: "attr", arg: 2, scope: !10869, file: !3, line: 1734, type: !5021)
!10873 = !DILocalVariable(name: "buf", arg: 3, scope: !10869, file: !3, line: 1734, type: !278)
!10874 = distinct !DISubprogram(name: "show_fcstat_fcp_control_requests", scope: !3, file: !3, line: 1735, type: !5027, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10875 = !DILocalVariable(name: "cd", arg: 1, scope: !10874, file: !3, line: 1735, type: !2400)
!10876 = !DILocation(line: 1735, column: 1, scope: !10874)
!10877 = !DILocalVariable(name: "attr", arg: 2, scope: !10874, file: !3, line: 1735, type: !5021)
!10878 = !DILocalVariable(name: "buf", arg: 3, scope: !10874, file: !3, line: 1735, type: !278)
!10879 = distinct !DISubprogram(name: "show_fcstat_fcp_input_megabytes", scope: !3, file: !3, line: 1736, type: !5027, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10880 = !DILocalVariable(name: "cd", arg: 1, scope: !10879, file: !3, line: 1736, type: !2400)
!10881 = !DILocation(line: 1736, column: 1, scope: !10879)
!10882 = !DILocalVariable(name: "attr", arg: 2, scope: !10879, file: !3, line: 1736, type: !5021)
!10883 = !DILocalVariable(name: "buf", arg: 3, scope: !10879, file: !3, line: 1736, type: !278)
!10884 = distinct !DISubprogram(name: "show_fcstat_fcp_output_megabytes", scope: !3, file: !3, line: 1737, type: !5027, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10885 = !DILocalVariable(name: "cd", arg: 1, scope: !10884, file: !3, line: 1737, type: !2400)
!10886 = !DILocation(line: 1737, column: 1, scope: !10884)
!10887 = !DILocalVariable(name: "attr", arg: 2, scope: !10884, file: !3, line: 1737, type: !5021)
!10888 = !DILocalVariable(name: "buf", arg: 3, scope: !10884, file: !3, line: 1737, type: !278)
!10889 = distinct !DISubprogram(name: "show_fcstat_fcp_packet_alloc_failures", scope: !3, file: !3, line: 1738, type: !5027, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10890 = !DILocalVariable(name: "cd", arg: 1, scope: !10889, file: !3, line: 1738, type: !2400)
!10891 = !DILocation(line: 1738, column: 1, scope: !10889)
!10892 = !DILocalVariable(name: "attr", arg: 2, scope: !10889, file: !3, line: 1738, type: !5021)
!10893 = !DILocalVariable(name: "buf", arg: 3, scope: !10889, file: !3, line: 1738, type: !278)
!10894 = distinct !DISubprogram(name: "show_fcstat_fcp_packet_aborts", scope: !3, file: !3, line: 1739, type: !5027, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10895 = !DILocalVariable(name: "cd", arg: 1, scope: !10894, file: !3, line: 1739, type: !2400)
!10896 = !DILocation(line: 1739, column: 1, scope: !10894)
!10897 = !DILocalVariable(name: "attr", arg: 2, scope: !10894, file: !3, line: 1739, type: !5021)
!10898 = !DILocalVariable(name: "buf", arg: 3, scope: !10894, file: !3, line: 1739, type: !278)
!10899 = distinct !DISubprogram(name: "show_fcstat_fcp_frame_alloc_failures", scope: !3, file: !3, line: 1740, type: !5027, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10900 = !DILocalVariable(name: "cd", arg: 1, scope: !10899, file: !3, line: 1740, type: !2400)
!10901 = !DILocation(line: 1740, column: 1, scope: !10899)
!10902 = !DILocalVariable(name: "attr", arg: 2, scope: !10899, file: !3, line: 1740, type: !5021)
!10903 = !DILocalVariable(name: "buf", arg: 3, scope: !10899, file: !3, line: 1740, type: !278)
!10904 = distinct !DISubprogram(name: "show_fcstat_fc_no_free_exch", scope: !3, file: !3, line: 1741, type: !5027, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10905 = !DILocalVariable(name: "cd", arg: 1, scope: !10904, file: !3, line: 1741, type: !2400)
!10906 = !DILocation(line: 1741, column: 1, scope: !10904)
!10907 = !DILocalVariable(name: "attr", arg: 2, scope: !10904, file: !3, line: 1741, type: !5021)
!10908 = !DILocalVariable(name: "buf", arg: 3, scope: !10904, file: !3, line: 1741, type: !278)
!10909 = distinct !DISubprogram(name: "show_fcstat_fc_no_free_exch_xid", scope: !3, file: !3, line: 1742, type: !5027, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10910 = !DILocalVariable(name: "cd", arg: 1, scope: !10909, file: !3, line: 1742, type: !2400)
!10911 = !DILocation(line: 1742, column: 1, scope: !10909)
!10912 = !DILocalVariable(name: "attr", arg: 2, scope: !10909, file: !3, line: 1742, type: !5021)
!10913 = !DILocalVariable(name: "buf", arg: 3, scope: !10909, file: !3, line: 1742, type: !278)
!10914 = distinct !DISubprogram(name: "show_fcstat_fc_xid_not_found", scope: !3, file: !3, line: 1743, type: !5027, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10915 = !DILocalVariable(name: "cd", arg: 1, scope: !10914, file: !3, line: 1743, type: !2400)
!10916 = !DILocation(line: 1743, column: 1, scope: !10914)
!10917 = !DILocalVariable(name: "attr", arg: 2, scope: !10914, file: !3, line: 1743, type: !5021)
!10918 = !DILocalVariable(name: "buf", arg: 3, scope: !10914, file: !3, line: 1743, type: !278)
!10919 = distinct !DISubprogram(name: "show_fcstat_fc_xid_busy", scope: !3, file: !3, line: 1744, type: !5027, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10920 = !DILocalVariable(name: "cd", arg: 1, scope: !10919, file: !3, line: 1744, type: !2400)
!10921 = !DILocation(line: 1744, column: 1, scope: !10919)
!10922 = !DILocalVariable(name: "attr", arg: 2, scope: !10919, file: !3, line: 1744, type: !5021)
!10923 = !DILocalVariable(name: "buf", arg: 3, scope: !10919, file: !3, line: 1744, type: !278)
!10924 = distinct !DISubprogram(name: "show_fcstat_fc_seq_not_found", scope: !3, file: !3, line: 1745, type: !5027, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10925 = !DILocalVariable(name: "cd", arg: 1, scope: !10924, file: !3, line: 1745, type: !2400)
!10926 = !DILocation(line: 1745, column: 1, scope: !10924)
!10927 = !DILocalVariable(name: "attr", arg: 2, scope: !10924, file: !3, line: 1745, type: !5021)
!10928 = !DILocalVariable(name: "buf", arg: 3, scope: !10924, file: !3, line: 1745, type: !278)
!10929 = distinct !DISubprogram(name: "show_fcstat_fc_non_bls_resp", scope: !3, file: !3, line: 1746, type: !5027, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10930 = !DILocalVariable(name: "cd", arg: 1, scope: !10929, file: !3, line: 1746, type: !2400)
!10931 = !DILocation(line: 1746, column: 1, scope: !10929)
!10932 = !DILocalVariable(name: "attr", arg: 2, scope: !10929, file: !3, line: 1746, type: !5021)
!10933 = !DILocalVariable(name: "buf", arg: 3, scope: !10929, file: !3, line: 1746, type: !278)
!10934 = distinct !DISubprogram(name: "fc_reset_statistics", scope: !3, file: !3, line: 1749, type: !5031, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10935 = !DILocalVariable(name: "dev", arg: 1, scope: !10934, file: !3, line: 1749, type: !2400)
!10936 = !DILocation(line: 1749, column: 36, scope: !10934)
!10937 = !DILocalVariable(name: "attr", arg: 2, scope: !10934, file: !3, line: 1749, type: !5021)
!10938 = !DILocation(line: 1749, column: 66, scope: !10934)
!10939 = !DILocalVariable(name: "buf", arg: 3, scope: !10934, file: !3, line: 1750, type: !318)
!10940 = !DILocation(line: 1750, column: 19, scope: !10934)
!10941 = !DILocalVariable(name: "count", arg: 4, scope: !10934, file: !3, line: 1750, type: !416)
!10942 = !DILocation(line: 1750, column: 31, scope: !10934)
!10943 = !DILocalVariable(name: "shost", scope: !10934, file: !3, line: 1752, type: !5046)
!10944 = !DILocation(line: 1752, column: 20, scope: !10934)
!10945 = !DILocation(line: 1752, column: 28, scope: !10934)
!10946 = !DILocalVariable(name: "i", scope: !10934, file: !3, line: 1753, type: !4984)
!10947 = !DILocation(line: 1753, column: 22, scope: !10934)
!10948 = !DILocalVariable(name: "__mptr", scope: !10949, file: !3, line: 1753, type: !280)
!10949 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1753, column: 26)
!10950 = !DILocation(line: 1753, column: 26, scope: !10949)
!10951 = !DILocation(line: 1753, column: 26, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 1753, column: 26)
!10953 = !DILocation(line: 1756, column: 6, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1756, column: 6)
!10955 = !DILocation(line: 1756, column: 9, scope: !10954)
!10956 = !DILocation(line: 1756, column: 12, scope: !10954)
!10957 = !DILocation(line: 1756, column: 6, scope: !10934)
!10958 = !DILocation(line: 1757, column: 3, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 1756, column: 33)
!10960 = !DILocation(line: 1757, column: 6, scope: !10959)
!10961 = !DILocation(line: 1757, column: 9, scope: !10959)
!10962 = !DILocation(line: 1757, column: 29, scope: !10959)
!10963 = !DILocation(line: 1758, column: 10, scope: !10959)
!10964 = !DILocation(line: 1758, column: 3, scope: !10959)
!10965 = !DILocation(line: 1761, column: 2, scope: !10934)
!10966 = !DILocation(line: 1762, column: 1, scope: !10934)
!10967 = distinct !DISubprogram(name: "scsi_is_fc_vport", scope: !3, file: !3, line: 2021, type: !6580, scopeLine: 2022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10968 = !DILocalVariable(name: "dev", arg: 1, scope: !10967, file: !3, line: 2021, type: !4869)
!10969 = !DILocation(line: 2021, column: 50, scope: !10967)
!10970 = !DILocation(line: 2023, column: 9, scope: !10967)
!10971 = !DILocation(line: 2023, column: 14, scope: !10967)
!10972 = !DILocation(line: 2023, column: 22, scope: !10967)
!10973 = !DILocation(line: 2023, column: 2, scope: !10967)
!10974 = distinct !DISubprogram(name: "fc_vport_dev_release", scope: !3, file: !3, line: 2014, type: !4583, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10975 = !DILocalVariable(name: "dev", arg: 1, scope: !10974, file: !3, line: 2014, type: !2400)
!10976 = !DILocation(line: 2014, column: 49, scope: !10974)
!10977 = !DILocalVariable(name: "vport", scope: !10974, file: !3, line: 2016, type: !5538)
!10978 = !DILocation(line: 2016, column: 19, scope: !10974)
!10979 = !DILocalVariable(name: "__mptr", scope: !10980, file: !3, line: 2016, type: !280)
!10980 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 2016, column: 27)
!10981 = !DILocation(line: 2016, column: 27, scope: !10980)
!10982 = !DILocation(line: 2016, column: 27, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 2016, column: 27)
!10984 = !DILocation(line: 2017, column: 13, scope: !10974)
!10985 = !DILocation(line: 2017, column: 18, scope: !10974)
!10986 = !DILocation(line: 2017, column: 2, scope: !10974)
!10987 = !DILocation(line: 2018, column: 8, scope: !10974)
!10988 = !DILocation(line: 2018, column: 2, scope: !10974)
!10989 = !DILocation(line: 2019, column: 1, scope: !10974)
!10990 = distinct !DISubprogram(name: "fc_user_scan_tgt", scope: !3, file: !3, line: 2087, type: !10991, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{null, !5046, !5463, !5463, !288}
!10993 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !10994)
!10994 = distinct !DILocation(line: 2103, column: 4, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2102, column: 38)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 2101, column: 7)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2094, column: 60)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2094, column: 2)
!10999 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 2094, column: 2)
!11000 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !10994)
!11001 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !11002)
!11002 = distinct !DILocation(line: 2110, column: 2, scope: !10990)
!11003 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !11002)
!11004 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !11005)
!11005 = distinct !DILocation(line: 2092, column: 2, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 2092, column: 2)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 2092, column: 2)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 2092, column: 2)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 2092, column: 2)
!11010 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 2092, column: 2)
!11011 = !DILocalVariable(name: "shost", arg: 1, scope: !10990, file: !3, line: 2087, type: !5046)
!11012 = !DILocation(line: 2087, column: 36, scope: !10990)
!11013 = !DILocalVariable(name: "channel", arg: 2, scope: !10990, file: !3, line: 2087, type: !5463)
!11014 = !DILocation(line: 2087, column: 48, scope: !10990)
!11015 = !DILocalVariable(name: "id", arg: 3, scope: !10990, file: !3, line: 2087, type: !5463)
!11016 = !DILocation(line: 2087, column: 62, scope: !10990)
!11017 = !DILocalVariable(name: "lun", arg: 4, scope: !10990, file: !3, line: 2087, type: !288)
!11018 = !DILocation(line: 2087, column: 70, scope: !10990)
!11019 = !DILocalVariable(name: "rport", scope: !10990, file: !3, line: 2089, type: !281)
!11020 = !DILocation(line: 2089, column: 19, scope: !10990)
!11021 = !DILocalVariable(name: "flags", scope: !10990, file: !3, line: 2090, type: !419)
!11022 = !DILocation(line: 2090, column: 16, scope: !10990)
!11023 = !DILocation(line: 2092, column: 2, scope: !10990)
!11024 = !DILocation(line: 2092, column: 2, scope: !11010)
!11025 = !DILocalVariable(name: "__dummy", scope: !11026, file: !3, line: 2092, type: !419)
!11026 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 2092, column: 2)
!11027 = !DILocation(line: 2092, column: 2, scope: !11026)
!11028 = !DILocalVariable(name: "__dummy2", scope: !11026, file: !3, line: 2092, type: !419)
!11029 = !DILocation(line: 2092, column: 2, scope: !11009)
!11030 = !DILocation(line: 2092, column: 2, scope: !11008)
!11031 = !DILocation(line: 2092, column: 2, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 2092, column: 2)
!11033 = !DILocalVariable(name: "__dummy", scope: !11034, file: !3, line: 2092, type: !419)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 2092, column: 2)
!11035 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 2092, column: 2)
!11036 = !DILocation(line: 2092, column: 2, scope: !11034)
!11037 = !DILocalVariable(name: "__dummy2", scope: !11034, file: !3, line: 2092, type: !419)
!11038 = !DILocation(line: 2092, column: 2, scope: !11035)
!11039 = !DILocation(line: 2092, column: 2, scope: !11007)
!11040 = !{i32 -2140236901}
!11041 = !DILocation(line: 2092, column: 2, scope: !11006)
!11042 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !11005)
!11043 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !11005)
!11044 = !DILocalVariable(name: "__mptr", scope: !11045, file: !3, line: 2094, type: !280)
!11045 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2094, column: 2)
!11046 = !DILocation(line: 2094, column: 2, scope: !11045)
!11047 = !DILocation(line: 2094, column: 2, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 2094, column: 2)
!11049 = !DILocation(line: 2094, column: 2, scope: !10999)
!11050 = !DILocation(line: 2094, column: 2, scope: !10998)
!11051 = !DILocation(line: 2095, column: 7, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 2095, column: 7)
!11053 = !DILocation(line: 2095, column: 14, scope: !11052)
!11054 = !DILocation(line: 2095, column: 29, scope: !11052)
!11055 = !DILocation(line: 2095, column: 7, scope: !10997)
!11056 = !DILocation(line: 2096, column: 4, scope: !11052)
!11057 = !DILocation(line: 2098, column: 7, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 2098, column: 7)
!11059 = !DILocation(line: 2098, column: 14, scope: !11058)
!11060 = !DILocation(line: 2098, column: 25, scope: !11058)
!11061 = !DILocation(line: 2098, column: 7, scope: !10997)
!11062 = !DILocation(line: 2099, column: 4, scope: !11058)
!11063 = !DILocation(line: 2101, column: 8, scope: !10996)
!11064 = !DILocation(line: 2101, column: 19, scope: !10996)
!11065 = !DILocation(line: 2101, column: 26, scope: !10996)
!11066 = !DILocation(line: 2101, column: 16, scope: !10996)
!11067 = !DILocation(line: 2101, column: 35, scope: !10996)
!11068 = !DILocation(line: 2102, column: 8, scope: !10996)
!11069 = !DILocation(line: 2102, column: 14, scope: !10996)
!11070 = !DILocation(line: 2102, column: 21, scope: !10996)
!11071 = !DILocation(line: 2102, column: 11, scope: !10996)
!11072 = !DILocation(line: 2101, column: 7, scope: !10997)
!11073 = !DILocation(line: 2103, column: 27, scope: !10995)
!11074 = !DILocation(line: 2103, column: 34, scope: !10995)
!11075 = !DILocation(line: 2103, column: 45, scope: !10995)
!11076 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !10994)
!11077 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !10994)
!11078 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !10994)
!11079 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !10994)
!11080 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !10994)
!11081 = !DILocation(line: 2104, column: 22, scope: !10995)
!11082 = !DILocation(line: 2104, column: 29, scope: !10995)
!11083 = !DILocation(line: 2104, column: 34, scope: !10995)
!11084 = !DILocation(line: 2104, column: 43, scope: !10995)
!11085 = !DILocation(line: 2104, column: 47, scope: !10995)
!11086 = !DILocation(line: 2104, column: 4, scope: !10995)
!11087 = !DILocation(line: 2106, column: 4, scope: !10995)
!11088 = !DILocation(line: 2108, column: 2, scope: !10997)
!11089 = !DILocalVariable(name: "__mptr", scope: !11090, file: !3, line: 2094, type: !280)
!11090 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2094, column: 2)
!11091 = !DILocation(line: 2094, column: 2, scope: !11090)
!11092 = !DILocation(line: 2094, column: 2, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 2094, column: 2)
!11094 = distinct !{!11094, !11049, !11095}
!11095 = !DILocation(line: 2108, column: 2, scope: !10999)
!11096 = !DILocation(line: 2110, column: 25, scope: !10990)
!11097 = !DILocation(line: 2110, column: 32, scope: !10990)
!11098 = !DILocation(line: 2110, column: 43, scope: !10990)
!11099 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !11002)
!11100 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !11002)
!11101 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !11002)
!11102 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !11002)
!11103 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !11002)
!11104 = !DILocation(line: 2111, column: 1, scope: !10990)
!11105 = distinct !DISubprogram(name: "show_fc_starget_node_name", scope: !3, file: !3, line: 1051, type: !5027, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11106 = !DILocalVariable(name: "dev", arg: 1, scope: !11105, file: !3, line: 1051, type: !2400)
!11107 = !DILocation(line: 1051, column: 1, scope: !11105)
!11108 = !DILocalVariable(name: "attr", arg: 2, scope: !11105, file: !3, line: 1051, type: !5021)
!11109 = !DILocalVariable(name: "buf", arg: 3, scope: !11105, file: !3, line: 1051, type: !278)
!11110 = !DILocalVariable(name: "starget", scope: !11105, file: !3, line: 1051, type: !5121)
!11111 = !DILocalVariable(name: "__mptr", scope: !11112, file: !3, line: 1051, type: !280)
!11112 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 1051, column: 1)
!11113 = !DILocation(line: 1051, column: 1, scope: !11112)
!11114 = !DILocation(line: 1051, column: 1, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11112, file: !3, line: 1051, column: 1)
!11116 = !DILocalVariable(name: "shost", scope: !11105, file: !3, line: 1051, type: !5046)
!11117 = !DILocalVariable(name: "i", scope: !11105, file: !3, line: 1051, type: !4984)
!11118 = !DILocalVariable(name: "__mptr", scope: !11119, file: !3, line: 1051, type: !280)
!11119 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 1051, column: 1)
!11120 = !DILocation(line: 1051, column: 1, scope: !11119)
!11121 = !DILocation(line: 1051, column: 1, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 1051, column: 1)
!11123 = !DILocalVariable(name: "rport", scope: !11105, file: !3, line: 1051, type: !281)
!11124 = !DILocalVariable(name: "__mptr", scope: !11125, file: !3, line: 1051, type: !280)
!11125 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 1051, column: 1)
!11126 = !DILocation(line: 1051, column: 1, scope: !11125)
!11127 = !DILocation(line: 1051, column: 1, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 1051, column: 1)
!11129 = !DILocation(line: 1051, column: 1, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 1051, column: 1)
!11131 = !DILocation(line: 1051, column: 1, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 1051, column: 1)
!11133 = distinct !DISubprogram(name: "show_fc_starget_port_name", scope: !3, file: !3, line: 1052, type: !5027, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11134 = !DILocalVariable(name: "dev", arg: 1, scope: !11133, file: !3, line: 1052, type: !2400)
!11135 = !DILocation(line: 1052, column: 1, scope: !11133)
!11136 = !DILocalVariable(name: "attr", arg: 2, scope: !11133, file: !3, line: 1052, type: !5021)
!11137 = !DILocalVariable(name: "buf", arg: 3, scope: !11133, file: !3, line: 1052, type: !278)
!11138 = !DILocalVariable(name: "starget", scope: !11133, file: !3, line: 1052, type: !5121)
!11139 = !DILocalVariable(name: "__mptr", scope: !11140, file: !3, line: 1052, type: !280)
!11140 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 1052, column: 1)
!11141 = !DILocation(line: 1052, column: 1, scope: !11140)
!11142 = !DILocation(line: 1052, column: 1, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 1052, column: 1)
!11144 = !DILocalVariable(name: "shost", scope: !11133, file: !3, line: 1052, type: !5046)
!11145 = !DILocalVariable(name: "i", scope: !11133, file: !3, line: 1052, type: !4984)
!11146 = !DILocalVariable(name: "__mptr", scope: !11147, file: !3, line: 1052, type: !280)
!11147 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 1052, column: 1)
!11148 = !DILocation(line: 1052, column: 1, scope: !11147)
!11149 = !DILocation(line: 1052, column: 1, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11147, file: !3, line: 1052, column: 1)
!11151 = !DILocalVariable(name: "rport", scope: !11133, file: !3, line: 1052, type: !281)
!11152 = !DILocalVariable(name: "__mptr", scope: !11153, file: !3, line: 1052, type: !280)
!11153 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 1052, column: 1)
!11154 = !DILocation(line: 1052, column: 1, scope: !11153)
!11155 = !DILocation(line: 1052, column: 1, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 1052, column: 1)
!11157 = !DILocation(line: 1052, column: 1, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 1052, column: 1)
!11159 = !DILocation(line: 1052, column: 1, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 1052, column: 1)
!11161 = distinct !DISubprogram(name: "show_fc_starget_port_id", scope: !3, file: !3, line: 1053, type: !5027, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11162 = !DILocalVariable(name: "dev", arg: 1, scope: !11161, file: !3, line: 1053, type: !2400)
!11163 = !DILocation(line: 1053, column: 1, scope: !11161)
!11164 = !DILocalVariable(name: "attr", arg: 2, scope: !11161, file: !3, line: 1053, type: !5021)
!11165 = !DILocalVariable(name: "buf", arg: 3, scope: !11161, file: !3, line: 1053, type: !278)
!11166 = !DILocalVariable(name: "starget", scope: !11161, file: !3, line: 1053, type: !5121)
!11167 = !DILocalVariable(name: "__mptr", scope: !11168, file: !3, line: 1053, type: !280)
!11168 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 1053, column: 1)
!11169 = !DILocation(line: 1053, column: 1, scope: !11168)
!11170 = !DILocation(line: 1053, column: 1, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 1053, column: 1)
!11172 = !DILocalVariable(name: "shost", scope: !11161, file: !3, line: 1053, type: !5046)
!11173 = !DILocalVariable(name: "i", scope: !11161, file: !3, line: 1053, type: !4984)
!11174 = !DILocalVariable(name: "__mptr", scope: !11175, file: !3, line: 1053, type: !280)
!11175 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 1053, column: 1)
!11176 = !DILocation(line: 1053, column: 1, scope: !11175)
!11177 = !DILocation(line: 1053, column: 1, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 1053, column: 1)
!11179 = !DILocalVariable(name: "rport", scope: !11161, file: !3, line: 1053, type: !281)
!11180 = !DILocalVariable(name: "__mptr", scope: !11181, file: !3, line: 1053, type: !280)
!11181 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 1053, column: 1)
!11182 = !DILocation(line: 1053, column: 1, scope: !11181)
!11183 = !DILocation(line: 1053, column: 1, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 1053, column: 1)
!11185 = !DILocation(line: 1053, column: 1, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 1053, column: 1)
!11187 = !DILocation(line: 1053, column: 1, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 1053, column: 1)
!11189 = distinct !DISubprogram(name: "show_fc_host_node_name", scope: !3, file: !3, line: 1514, type: !5027, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11190 = !DILocalVariable(name: "dev", arg: 1, scope: !11189, file: !3, line: 1514, type: !2400)
!11191 = !DILocation(line: 1514, column: 1, scope: !11189)
!11192 = !DILocalVariable(name: "attr", arg: 2, scope: !11189, file: !3, line: 1514, type: !5021)
!11193 = !DILocalVariable(name: "buf", arg: 3, scope: !11189, file: !3, line: 1514, type: !278)
!11194 = !DILocalVariable(name: "shost", scope: !11189, file: !3, line: 1514, type: !5046)
!11195 = distinct !DISubprogram(name: "show_fc_host_port_name", scope: !3, file: !3, line: 1515, type: !5027, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11196 = !DILocalVariable(name: "dev", arg: 1, scope: !11195, file: !3, line: 1515, type: !2400)
!11197 = !DILocation(line: 1515, column: 1, scope: !11195)
!11198 = !DILocalVariable(name: "attr", arg: 2, scope: !11195, file: !3, line: 1515, type: !5021)
!11199 = !DILocalVariable(name: "buf", arg: 3, scope: !11195, file: !3, line: 1515, type: !278)
!11200 = !DILocalVariable(name: "shost", scope: !11195, file: !3, line: 1515, type: !5046)
!11201 = distinct !DISubprogram(name: "show_fc_host_permanent_port_name", scope: !3, file: !3, line: 1516, type: !5027, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11202 = !DILocalVariable(name: "dev", arg: 1, scope: !11201, file: !3, line: 1516, type: !2400)
!11203 = !DILocation(line: 1516, column: 1, scope: !11201)
!11204 = !DILocalVariable(name: "attr", arg: 2, scope: !11201, file: !3, line: 1516, type: !5021)
!11205 = !DILocalVariable(name: "buf", arg: 3, scope: !11201, file: !3, line: 1516, type: !278)
!11206 = !DILocalVariable(name: "shost", scope: !11201, file: !3, line: 1516, type: !5046)
!11207 = distinct !DISubprogram(name: "show_fc_host_supported_classes", scope: !3, file: !3, line: 1476, type: !5027, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11208 = !DILocalVariable(name: "dev", arg: 1, scope: !11207, file: !3, line: 1476, type: !2400)
!11209 = !DILocation(line: 1476, column: 48, scope: !11207)
!11210 = !DILocalVariable(name: "attr", arg: 2, scope: !11207, file: !3, line: 1477, type: !5021)
!11211 = !DILocation(line: 1477, column: 37, scope: !11207)
!11212 = !DILocalVariable(name: "buf", arg: 3, scope: !11207, file: !3, line: 1477, type: !278)
!11213 = !DILocation(line: 1477, column: 49, scope: !11207)
!11214 = !DILocalVariable(name: "shost", scope: !11207, file: !3, line: 1479, type: !5046)
!11215 = !DILocation(line: 1479, column: 20, scope: !11207)
!11216 = !DILocation(line: 1479, column: 28, scope: !11207)
!11217 = !DILocation(line: 1481, column: 6, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 1481, column: 6)
!11219 = !DILocation(line: 1481, column: 39, scope: !11218)
!11220 = !DILocation(line: 1481, column: 6, scope: !11207)
!11221 = !DILocation(line: 1482, column: 19, scope: !11218)
!11222 = !DILocation(line: 1482, column: 10, scope: !11218)
!11223 = !DILocation(line: 1482, column: 3, scope: !11218)
!11224 = !DILocation(line: 1484, column: 26, scope: !11207)
!11225 = !DILocation(line: 1484, column: 60, scope: !11207)
!11226 = !DILocation(line: 1484, column: 9, scope: !11207)
!11227 = !DILocation(line: 1484, column: 2, scope: !11207)
!11228 = !DILocation(line: 1485, column: 1, scope: !11207)
!11229 = distinct !DISubprogram(name: "get_fc_cos_names", scope: !3, file: !3, line: 234, type: !11230, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11230 = !DISubroutineType(types: !11231)
!11231 = !{!401, !274, !278}
!11232 = !DILocalVariable(name: "table_key", arg: 1, scope: !11229, file: !3, line: 234, type: !274)
!11233 = !DILocation(line: 234, column: 1, scope: !11229)
!11234 = !DILocalVariable(name: "buf", arg: 2, scope: !11229, file: !3, line: 234, type: !278)
!11235 = !DILocalVariable(name: "prefix", scope: !11229, file: !3, line: 234, type: !278)
!11236 = !DILocalVariable(name: "len", scope: !11229, file: !3, line: 234, type: !401)
!11237 = !DILocalVariable(name: "i", scope: !11229, file: !3, line: 234, type: !355)
!11238 = !DILocation(line: 234, column: 1, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 234, column: 1)
!11240 = !DILocation(line: 234, column: 1, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 234, column: 1)
!11242 = !DILocation(line: 234, column: 1, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 234, column: 1)
!11244 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 234, column: 1)
!11245 = !DILocation(line: 234, column: 1, scope: !11244)
!11246 = !DILocation(line: 234, column: 1, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 234, column: 1)
!11248 = distinct !{!11248, !11238, !11238}
!11249 = distinct !DISubprogram(name: "show_fc_host_supported_fc4s", scope: !3, file: !3, line: 1490, type: !5027, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11250 = !DILocalVariable(name: "dev", arg: 1, scope: !11249, file: !3, line: 1490, type: !2400)
!11251 = !DILocation(line: 1490, column: 45, scope: !11249)
!11252 = !DILocalVariable(name: "attr", arg: 2, scope: !11249, file: !3, line: 1491, type: !5021)
!11253 = !DILocation(line: 1491, column: 34, scope: !11249)
!11254 = !DILocalVariable(name: "buf", arg: 3, scope: !11249, file: !3, line: 1491, type: !278)
!11255 = !DILocation(line: 1491, column: 46, scope: !11249)
!11256 = !DILocalVariable(name: "shost", scope: !11249, file: !3, line: 1493, type: !5046)
!11257 = !DILocation(line: 1493, column: 20, scope: !11249)
!11258 = !DILocation(line: 1493, column: 28, scope: !11249)
!11259 = !DILocation(line: 1494, column: 31, scope: !11249)
!11260 = !DILocation(line: 1494, column: 36, scope: !11249)
!11261 = !DILocation(line: 1494, column: 18, scope: !11249)
!11262 = !DILocation(line: 1494, column: 9, scope: !11249)
!11263 = !DILocation(line: 1494, column: 2, scope: !11249)
!11264 = distinct !DISubprogram(name: "show_fc_fc4s", scope: !3, file: !3, line: 263, type: !11265, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{!355, !278, !5728}
!11267 = !DILocalVariable(name: "buf", arg: 1, scope: !11264, file: !3, line: 263, type: !278)
!11268 = !DILocation(line: 263, column: 21, scope: !11264)
!11269 = !DILocalVariable(name: "fc4_list", arg: 2, scope: !11264, file: !3, line: 263, type: !5728)
!11270 = !DILocation(line: 263, column: 30, scope: !11264)
!11271 = !DILocalVariable(name: "i", scope: !11264, file: !3, line: 265, type: !355)
!11272 = !DILocation(line: 265, column: 6, scope: !11264)
!11273 = !DILocalVariable(name: "len", scope: !11264, file: !3, line: 265, type: !355)
!11274 = !DILocation(line: 265, column: 9, scope: !11264)
!11275 = !DILocation(line: 267, column: 9, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 267, column: 2)
!11277 = !DILocation(line: 267, column: 7, scope: !11276)
!11278 = !DILocation(line: 267, column: 14, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 267, column: 2)
!11280 = !DILocation(line: 267, column: 16, scope: !11279)
!11281 = !DILocation(line: 267, column: 2, scope: !11276)
!11282 = !DILocation(line: 268, column: 18, scope: !11279)
!11283 = !DILocation(line: 268, column: 24, scope: !11279)
!11284 = !DILocation(line: 268, column: 22, scope: !11279)
!11285 = !DILocation(line: 268, column: 42, scope: !11279)
!11286 = !DILocation(line: 268, column: 41, scope: !11279)
!11287 = !DILocation(line: 268, column: 10, scope: !11279)
!11288 = !DILocation(line: 268, column: 7, scope: !11279)
!11289 = !DILocation(line: 268, column: 3, scope: !11279)
!11290 = !DILocation(line: 267, column: 37, scope: !11279)
!11291 = !DILocation(line: 267, column: 49, scope: !11279)
!11292 = !DILocation(line: 267, column: 2, scope: !11279)
!11293 = distinct !{!11293, !11281, !11294}
!11294 = !DILocation(line: 268, column: 50, scope: !11276)
!11295 = !DILocation(line: 269, column: 17, scope: !11264)
!11296 = !DILocation(line: 269, column: 23, scope: !11264)
!11297 = !DILocation(line: 269, column: 21, scope: !11264)
!11298 = !DILocation(line: 269, column: 9, scope: !11264)
!11299 = !DILocation(line: 269, column: 6, scope: !11264)
!11300 = !DILocation(line: 270, column: 9, scope: !11264)
!11301 = !DILocation(line: 270, column: 2, scope: !11264)
!11302 = distinct !DISubprogram(name: "show_fc_host_supported_speeds", scope: !3, file: !3, line: 1500, type: !5027, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11303 = !DILocalVariable(name: "dev", arg: 1, scope: !11302, file: !3, line: 1500, type: !2400)
!11304 = !DILocation(line: 1500, column: 47, scope: !11302)
!11305 = !DILocalVariable(name: "attr", arg: 2, scope: !11302, file: !3, line: 1501, type: !5021)
!11306 = !DILocation(line: 1501, column: 36, scope: !11302)
!11307 = !DILocalVariable(name: "buf", arg: 3, scope: !11302, file: !3, line: 1501, type: !278)
!11308 = !DILocation(line: 1501, column: 48, scope: !11302)
!11309 = !DILocalVariable(name: "shost", scope: !11302, file: !3, line: 1503, type: !5046)
!11310 = !DILocation(line: 1503, column: 20, scope: !11302)
!11311 = !DILocation(line: 1503, column: 28, scope: !11302)
!11312 = !DILocation(line: 1505, column: 6, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 1505, column: 6)
!11314 = !DILocation(line: 1505, column: 38, scope: !11313)
!11315 = !DILocation(line: 1505, column: 6, scope: !11302)
!11316 = !DILocation(line: 1506, column: 19, scope: !11313)
!11317 = !DILocation(line: 1506, column: 10, scope: !11313)
!11318 = !DILocation(line: 1506, column: 3, scope: !11313)
!11319 = !DILocation(line: 1508, column: 33, scope: !11302)
!11320 = !DILocation(line: 1508, column: 66, scope: !11302)
!11321 = !DILocation(line: 1508, column: 9, scope: !11302)
!11322 = !DILocation(line: 1508, column: 2, scope: !11302)
!11323 = !DILocation(line: 1509, column: 1, scope: !11302)
!11324 = distinct !DISubprogram(name: "get_fc_port_speed_names", scope: !3, file: !3, line: 259, type: !11230, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11325 = !DILocalVariable(name: "table_key", arg: 1, scope: !11324, file: !3, line: 259, type: !274)
!11326 = !DILocation(line: 259, column: 1, scope: !11324)
!11327 = !DILocalVariable(name: "buf", arg: 2, scope: !11324, file: !3, line: 259, type: !278)
!11328 = !DILocalVariable(name: "prefix", scope: !11324, file: !3, line: 259, type: !278)
!11329 = !DILocalVariable(name: "len", scope: !11324, file: !3, line: 259, type: !401)
!11330 = !DILocalVariable(name: "i", scope: !11324, file: !3, line: 259, type: !355)
!11331 = !DILocation(line: 259, column: 1, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 259, column: 1)
!11333 = !DILocation(line: 259, column: 1, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 259, column: 1)
!11335 = !DILocation(line: 259, column: 1, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 259, column: 1)
!11337 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 259, column: 1)
!11338 = !DILocation(line: 259, column: 1, scope: !11337)
!11339 = !DILocation(line: 259, column: 1, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 259, column: 1)
!11341 = distinct !{!11341, !11331, !11331}
!11342 = distinct !DISubprogram(name: "show_fc_host_maxframe_size", scope: !3, file: !3, line: 1518, type: !5027, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11343 = !DILocalVariable(name: "dev", arg: 1, scope: !11342, file: !3, line: 1518, type: !2400)
!11344 = !DILocation(line: 1518, column: 1, scope: !11342)
!11345 = !DILocalVariable(name: "attr", arg: 2, scope: !11342, file: !3, line: 1518, type: !5021)
!11346 = !DILocalVariable(name: "buf", arg: 3, scope: !11342, file: !3, line: 1518, type: !278)
!11347 = !DILocalVariable(name: "shost", scope: !11342, file: !3, line: 1518, type: !5046)
!11348 = distinct !DISubprogram(name: "show_fc_host_max_npiv_vports", scope: !3, file: !3, line: 1519, type: !5027, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11349 = !DILocalVariable(name: "dev", arg: 1, scope: !11348, file: !3, line: 1519, type: !2400)
!11350 = !DILocation(line: 1519, column: 1, scope: !11348)
!11351 = !DILocalVariable(name: "attr", arg: 2, scope: !11348, file: !3, line: 1519, type: !5021)
!11352 = !DILocalVariable(name: "buf", arg: 3, scope: !11348, file: !3, line: 1519, type: !278)
!11353 = !DILocalVariable(name: "shost", scope: !11348, file: !3, line: 1519, type: !5046)
!11354 = distinct !DISubprogram(name: "show_fc_host_npiv_vports_inuse", scope: !3, file: !3, line: 1678, type: !5027, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11355 = !DILocalVariable(name: "dev", arg: 1, scope: !11354, file: !3, line: 1678, type: !2400)
!11356 = !DILocation(line: 1678, column: 1, scope: !11354)
!11357 = !DILocalVariable(name: "attr", arg: 2, scope: !11354, file: !3, line: 1678, type: !5021)
!11358 = !DILocalVariable(name: "buf", arg: 3, scope: !11354, file: !3, line: 1678, type: !278)
!11359 = !DILocalVariable(name: "shost", scope: !11354, file: !3, line: 1678, type: !5046)
!11360 = distinct !DISubprogram(name: "show_fc_host_serial_number", scope: !3, file: !3, line: 1520, type: !5027, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11361 = !DILocalVariable(name: "dev", arg: 1, scope: !11360, file: !3, line: 1520, type: !2400)
!11362 = !DILocation(line: 1520, column: 1, scope: !11360)
!11363 = !DILocalVariable(name: "attr", arg: 2, scope: !11360, file: !3, line: 1520, type: !5021)
!11364 = !DILocalVariable(name: "buf", arg: 3, scope: !11360, file: !3, line: 1520, type: !278)
!11365 = !DILocalVariable(name: "shost", scope: !11360, file: !3, line: 1520, type: !5046)
!11366 = distinct !DISubprogram(name: "show_fc_host_manufacturer", scope: !3, file: !3, line: 1521, type: !5027, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11367 = !DILocalVariable(name: "dev", arg: 1, scope: !11366, file: !3, line: 1521, type: !2400)
!11368 = !DILocation(line: 1521, column: 1, scope: !11366)
!11369 = !DILocalVariable(name: "attr", arg: 2, scope: !11366, file: !3, line: 1521, type: !5021)
!11370 = !DILocalVariable(name: "buf", arg: 3, scope: !11366, file: !3, line: 1521, type: !278)
!11371 = !DILocalVariable(name: "shost", scope: !11366, file: !3, line: 1521, type: !5046)
!11372 = distinct !DISubprogram(name: "show_fc_host_model", scope: !3, file: !3, line: 1522, type: !5027, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11373 = !DILocalVariable(name: "dev", arg: 1, scope: !11372, file: !3, line: 1522, type: !2400)
!11374 = !DILocation(line: 1522, column: 1, scope: !11372)
!11375 = !DILocalVariable(name: "attr", arg: 2, scope: !11372, file: !3, line: 1522, type: !5021)
!11376 = !DILocalVariable(name: "buf", arg: 3, scope: !11372, file: !3, line: 1522, type: !278)
!11377 = !DILocalVariable(name: "shost", scope: !11372, file: !3, line: 1522, type: !5046)
!11378 = distinct !DISubprogram(name: "show_fc_host_model_description", scope: !3, file: !3, line: 1523, type: !5027, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11379 = !DILocalVariable(name: "dev", arg: 1, scope: !11378, file: !3, line: 1523, type: !2400)
!11380 = !DILocation(line: 1523, column: 1, scope: !11378)
!11381 = !DILocalVariable(name: "attr", arg: 2, scope: !11378, file: !3, line: 1523, type: !5021)
!11382 = !DILocalVariable(name: "buf", arg: 3, scope: !11378, file: !3, line: 1523, type: !278)
!11383 = !DILocalVariable(name: "shost", scope: !11378, file: !3, line: 1523, type: !5046)
!11384 = distinct !DISubprogram(name: "show_fc_host_hardware_version", scope: !3, file: !3, line: 1524, type: !5027, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11385 = !DILocalVariable(name: "dev", arg: 1, scope: !11384, file: !3, line: 1524, type: !2400)
!11386 = !DILocation(line: 1524, column: 1, scope: !11384)
!11387 = !DILocalVariable(name: "attr", arg: 2, scope: !11384, file: !3, line: 1524, type: !5021)
!11388 = !DILocalVariable(name: "buf", arg: 3, scope: !11384, file: !3, line: 1524, type: !278)
!11389 = !DILocalVariable(name: "shost", scope: !11384, file: !3, line: 1524, type: !5046)
!11390 = distinct !DISubprogram(name: "show_fc_host_driver_version", scope: !3, file: !3, line: 1525, type: !5027, scopeLine: 1525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11391 = !DILocalVariable(name: "dev", arg: 1, scope: !11390, file: !3, line: 1525, type: !2400)
!11392 = !DILocation(line: 1525, column: 1, scope: !11390)
!11393 = !DILocalVariable(name: "attr", arg: 2, scope: !11390, file: !3, line: 1525, type: !5021)
!11394 = !DILocalVariable(name: "buf", arg: 3, scope: !11390, file: !3, line: 1525, type: !278)
!11395 = !DILocalVariable(name: "shost", scope: !11390, file: !3, line: 1525, type: !5046)
!11396 = distinct !DISubprogram(name: "show_fc_host_firmware_version", scope: !3, file: !3, line: 1526, type: !5027, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11397 = !DILocalVariable(name: "dev", arg: 1, scope: !11396, file: !3, line: 1526, type: !2400)
!11398 = !DILocation(line: 1526, column: 1, scope: !11396)
!11399 = !DILocalVariable(name: "attr", arg: 2, scope: !11396, file: !3, line: 1526, type: !5021)
!11400 = !DILocalVariable(name: "buf", arg: 3, scope: !11396, file: !3, line: 1526, type: !278)
!11401 = !DILocalVariable(name: "shost", scope: !11396, file: !3, line: 1526, type: !5046)
!11402 = distinct !DISubprogram(name: "show_fc_host_optionrom_version", scope: !3, file: !3, line: 1527, type: !5027, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11403 = !DILocalVariable(name: "dev", arg: 1, scope: !11402, file: !3, line: 1527, type: !2400)
!11404 = !DILocation(line: 1527, column: 1, scope: !11402)
!11405 = !DILocalVariable(name: "attr", arg: 2, scope: !11402, file: !3, line: 1527, type: !5021)
!11406 = !DILocalVariable(name: "buf", arg: 3, scope: !11402, file: !3, line: 1527, type: !278)
!11407 = !DILocalVariable(name: "shost", scope: !11402, file: !3, line: 1527, type: !5046)
!11408 = distinct !DISubprogram(name: "show_fc_host_port_id", scope: !3, file: !3, line: 1566, type: !5027, scopeLine: 1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11409 = !DILocalVariable(name: "dev", arg: 1, scope: !11408, file: !3, line: 1566, type: !2400)
!11410 = !DILocation(line: 1566, column: 1, scope: !11408)
!11411 = !DILocalVariable(name: "attr", arg: 2, scope: !11408, file: !3, line: 1566, type: !5021)
!11412 = !DILocalVariable(name: "buf", arg: 3, scope: !11408, file: !3, line: 1566, type: !278)
!11413 = !DILocalVariable(name: "shost", scope: !11408, file: !3, line: 1566, type: !5046)
!11414 = !DILocalVariable(name: "i", scope: !11408, file: !3, line: 1566, type: !4984)
!11415 = !DILocalVariable(name: "__mptr", scope: !11416, file: !3, line: 1566, type: !280)
!11416 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1566, column: 1)
!11417 = !DILocation(line: 1566, column: 1, scope: !11416)
!11418 = !DILocation(line: 1566, column: 1, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 1566, column: 1)
!11420 = !DILocation(line: 1566, column: 1, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1566, column: 1)
!11422 = distinct !DISubprogram(name: "show_fc_host_port_type", scope: !3, file: !3, line: 1567, type: !5027, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11423 = !DILocalVariable(name: "dev", arg: 1, scope: !11422, file: !3, line: 1567, type: !2400)
!11424 = !DILocation(line: 1567, column: 1, scope: !11422)
!11425 = !DILocalVariable(name: "attr", arg: 2, scope: !11422, file: !3, line: 1567, type: !5021)
!11426 = !DILocalVariable(name: "buf", arg: 3, scope: !11422, file: !3, line: 1567, type: !278)
!11427 = !DILocalVariable(name: "shost", scope: !11422, file: !3, line: 1567, type: !5046)
!11428 = !DILocalVariable(name: "i", scope: !11422, file: !3, line: 1567, type: !4984)
!11429 = !DILocalVariable(name: "__mptr", scope: !11430, file: !3, line: 1567, type: !280)
!11430 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 1567, column: 1)
!11431 = !DILocation(line: 1567, column: 1, scope: !11430)
!11432 = !DILocation(line: 1567, column: 1, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1567, column: 1)
!11434 = !DILocalVariable(name: "name", scope: !11422, file: !3, line: 1567, type: !318)
!11435 = !DILocation(line: 1567, column: 1, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 1567, column: 1)
!11437 = !DILocation(line: 1567, column: 1, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 1567, column: 1)
!11439 = distinct !DISubprogram(name: "get_fc_port_type_name", scope: !3, file: !3, line: 110, type: !11440, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11440 = !DISubroutineType(types: !11441)
!11441 = !{!318, !204}
!11442 = !DILocalVariable(name: "table_key", arg: 1, scope: !11439, file: !3, line: 110, type: !204)
!11443 = !DILocation(line: 110, column: 1, scope: !11439)
!11444 = !DILocalVariable(name: "i", scope: !11439, file: !3, line: 110, type: !355)
!11445 = !DILocalVariable(name: "name", scope: !11439, file: !3, line: 110, type: !278)
!11446 = !DILocation(line: 110, column: 1, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 110, column: 1)
!11448 = !DILocation(line: 110, column: 1, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 110, column: 1)
!11450 = !DILocation(line: 110, column: 1, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 110, column: 1)
!11452 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 110, column: 1)
!11453 = !DILocation(line: 110, column: 1, scope: !11452)
!11454 = !DILocation(line: 110, column: 1, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 110, column: 1)
!11456 = distinct !{!11456, !11446, !11446}
!11457 = distinct !DISubprogram(name: "show_fc_host_port_state", scope: !3, file: !3, line: 1568, type: !5027, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11458 = !DILocalVariable(name: "dev", arg: 1, scope: !11457, file: !3, line: 1568, type: !2400)
!11459 = !DILocation(line: 1568, column: 1, scope: !11457)
!11460 = !DILocalVariable(name: "attr", arg: 2, scope: !11457, file: !3, line: 1568, type: !5021)
!11461 = !DILocalVariable(name: "buf", arg: 3, scope: !11457, file: !3, line: 1568, type: !278)
!11462 = !DILocalVariable(name: "shost", scope: !11457, file: !3, line: 1568, type: !5046)
!11463 = !DILocalVariable(name: "i", scope: !11457, file: !3, line: 1568, type: !4984)
!11464 = !DILocalVariable(name: "__mptr", scope: !11465, file: !3, line: 1568, type: !280)
!11465 = distinct !DILexicalBlock(scope: !11457, file: !3, line: 1568, column: 1)
!11466 = !DILocation(line: 1568, column: 1, scope: !11465)
!11467 = !DILocation(line: 1568, column: 1, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 1568, column: 1)
!11469 = !DILocalVariable(name: "name", scope: !11457, file: !3, line: 1568, type: !318)
!11470 = !DILocation(line: 1568, column: 1, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11457, file: !3, line: 1568, column: 1)
!11472 = !DILocation(line: 1568, column: 1, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11457, file: !3, line: 1568, column: 1)
!11474 = distinct !DISubprogram(name: "get_fc_port_state_name", scope: !3, file: !3, line: 158, type: !11475, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11475 = !DISubroutineType(types: !11476)
!11476 = !{!318, !179}
!11477 = !DILocalVariable(name: "table_key", arg: 1, scope: !11474, file: !3, line: 158, type: !179)
!11478 = !DILocation(line: 158, column: 1, scope: !11474)
!11479 = !DILocalVariable(name: "i", scope: !11474, file: !3, line: 158, type: !355)
!11480 = !DILocalVariable(name: "name", scope: !11474, file: !3, line: 158, type: !278)
!11481 = !DILocation(line: 158, column: 1, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 158, column: 1)
!11483 = !DILocation(line: 158, column: 1, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 158, column: 1)
!11485 = !DILocation(line: 158, column: 1, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 158, column: 1)
!11487 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 158, column: 1)
!11488 = !DILocation(line: 158, column: 1, scope: !11487)
!11489 = !DILocation(line: 158, column: 1, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 158, column: 1)
!11491 = distinct !{!11491, !11481, !11481}
!11492 = distinct !DISubprogram(name: "show_fc_host_active_fc4s", scope: !3, file: !3, line: 1533, type: !5027, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11493 = !DILocalVariable(name: "dev", arg: 1, scope: !11492, file: !3, line: 1533, type: !2400)
!11494 = !DILocation(line: 1533, column: 42, scope: !11492)
!11495 = !DILocalVariable(name: "attr", arg: 2, scope: !11492, file: !3, line: 1534, type: !5021)
!11496 = !DILocation(line: 1534, column: 31, scope: !11492)
!11497 = !DILocalVariable(name: "buf", arg: 3, scope: !11492, file: !3, line: 1534, type: !278)
!11498 = !DILocation(line: 1534, column: 43, scope: !11492)
!11499 = !DILocalVariable(name: "shost", scope: !11492, file: !3, line: 1536, type: !5046)
!11500 = !DILocation(line: 1536, column: 20, scope: !11492)
!11501 = !DILocation(line: 1536, column: 28, scope: !11492)
!11502 = !DILocalVariable(name: "i", scope: !11492, file: !3, line: 1537, type: !4984)
!11503 = !DILocation(line: 1537, column: 22, scope: !11492)
!11504 = !DILocalVariable(name: "__mptr", scope: !11505, file: !3, line: 1537, type: !280)
!11505 = distinct !DILexicalBlock(scope: !11492, file: !3, line: 1537, column: 26)
!11506 = !DILocation(line: 1537, column: 26, scope: !11505)
!11507 = !DILocation(line: 1537, column: 26, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 1537, column: 26)
!11509 = !DILocation(line: 1539, column: 6, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11492, file: !3, line: 1539, column: 6)
!11511 = !DILocation(line: 1539, column: 9, scope: !11510)
!11512 = !DILocation(line: 1539, column: 12, scope: !11510)
!11513 = !DILocation(line: 1539, column: 6, scope: !11492)
!11514 = !DILocation(line: 1540, column: 3, scope: !11510)
!11515 = !DILocation(line: 1540, column: 6, scope: !11510)
!11516 = !DILocation(line: 1540, column: 9, scope: !11510)
!11517 = !DILocation(line: 1540, column: 30, scope: !11510)
!11518 = !DILocation(line: 1542, column: 31, scope: !11492)
!11519 = !DILocation(line: 1542, column: 36, scope: !11492)
!11520 = !DILocation(line: 1542, column: 18, scope: !11492)
!11521 = !DILocation(line: 1542, column: 9, scope: !11492)
!11522 = !DILocation(line: 1542, column: 2, scope: !11492)
!11523 = distinct !DISubprogram(name: "show_fc_host_speed", scope: !3, file: !3, line: 1548, type: !5027, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11524 = !DILocalVariable(name: "dev", arg: 1, scope: !11523, file: !3, line: 1548, type: !2400)
!11525 = !DILocation(line: 1548, column: 36, scope: !11523)
!11526 = !DILocalVariable(name: "attr", arg: 2, scope: !11523, file: !3, line: 1549, type: !5021)
!11527 = !DILocation(line: 1549, column: 32, scope: !11523)
!11528 = !DILocalVariable(name: "buf", arg: 3, scope: !11523, file: !3, line: 1549, type: !278)
!11529 = !DILocation(line: 1549, column: 44, scope: !11523)
!11530 = !DILocalVariable(name: "shost", scope: !11523, file: !3, line: 1551, type: !5046)
!11531 = !DILocation(line: 1551, column: 20, scope: !11523)
!11532 = !DILocation(line: 1551, column: 28, scope: !11523)
!11533 = !DILocalVariable(name: "i", scope: !11523, file: !3, line: 1552, type: !4984)
!11534 = !DILocation(line: 1552, column: 22, scope: !11523)
!11535 = !DILocalVariable(name: "__mptr", scope: !11536, file: !3, line: 1552, type: !280)
!11536 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 1552, column: 26)
!11537 = !DILocation(line: 1552, column: 26, scope: !11536)
!11538 = !DILocation(line: 1552, column: 26, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 1552, column: 26)
!11540 = !DILocation(line: 1554, column: 6, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 1554, column: 6)
!11542 = !DILocation(line: 1554, column: 9, scope: !11541)
!11543 = !DILocation(line: 1554, column: 12, scope: !11541)
!11544 = !DILocation(line: 1554, column: 6, scope: !11523)
!11545 = !DILocation(line: 1555, column: 3, scope: !11541)
!11546 = !DILocation(line: 1555, column: 6, scope: !11541)
!11547 = !DILocation(line: 1555, column: 9, scope: !11541)
!11548 = !DILocation(line: 1555, column: 24, scope: !11541)
!11549 = !DILocation(line: 1557, column: 6, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 1557, column: 6)
!11551 = !DILocation(line: 1557, column: 27, scope: !11550)
!11552 = !DILocation(line: 1557, column: 6, scope: !11523)
!11553 = !DILocation(line: 1558, column: 19, scope: !11550)
!11554 = !DILocation(line: 1558, column: 10, scope: !11550)
!11555 = !DILocation(line: 1558, column: 3, scope: !11550)
!11556 = !DILocation(line: 1560, column: 33, scope: !11523)
!11557 = !DILocation(line: 1560, column: 55, scope: !11523)
!11558 = !DILocation(line: 1560, column: 9, scope: !11523)
!11559 = !DILocation(line: 1560, column: 2, scope: !11523)
!11560 = !DILocation(line: 1561, column: 1, scope: !11523)
!11561 = distinct !DISubprogram(name: "show_fc_host_fabric_name", scope: !3, file: !3, line: 1569, type: !5027, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11562 = !DILocalVariable(name: "dev", arg: 1, scope: !11561, file: !3, line: 1569, type: !2400)
!11563 = !DILocation(line: 1569, column: 1, scope: !11561)
!11564 = !DILocalVariable(name: "attr", arg: 2, scope: !11561, file: !3, line: 1569, type: !5021)
!11565 = !DILocalVariable(name: "buf", arg: 3, scope: !11561, file: !3, line: 1569, type: !278)
!11566 = !DILocalVariable(name: "shost", scope: !11561, file: !3, line: 1569, type: !5046)
!11567 = !DILocalVariable(name: "i", scope: !11561, file: !3, line: 1569, type: !4984)
!11568 = !DILocalVariable(name: "__mptr", scope: !11569, file: !3, line: 1569, type: !280)
!11569 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 1569, column: 1)
!11570 = !DILocation(line: 1569, column: 1, scope: !11569)
!11571 = !DILocation(line: 1569, column: 1, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 1569, column: 1)
!11573 = !DILocation(line: 1569, column: 1, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 1569, column: 1)
!11575 = distinct !DISubprogram(name: "show_fc_host_symbolic_name", scope: !3, file: !3, line: 1570, type: !5027, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11576 = !DILocalVariable(name: "dev", arg: 1, scope: !11575, file: !3, line: 1570, type: !2400)
!11577 = !DILocation(line: 1570, column: 1, scope: !11575)
!11578 = !DILocalVariable(name: "attr", arg: 2, scope: !11575, file: !3, line: 1570, type: !5021)
!11579 = !DILocalVariable(name: "buf", arg: 3, scope: !11575, file: !3, line: 1570, type: !278)
!11580 = !DILocalVariable(name: "shost", scope: !11575, file: !3, line: 1570, type: !5046)
!11581 = !DILocalVariable(name: "i", scope: !11575, file: !3, line: 1570, type: !4984)
!11582 = !DILocalVariable(name: "__mptr", scope: !11583, file: !3, line: 1570, type: !280)
!11583 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 1570, column: 1)
!11584 = !DILocation(line: 1570, column: 1, scope: !11583)
!11585 = !DILocation(line: 1570, column: 1, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 1570, column: 1)
!11587 = !DILocation(line: 1570, column: 1, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 1570, column: 1)
!11589 = distinct !DISubprogram(name: "show_fc_host_system_hostname", scope: !3, file: !3, line: 1572, type: !5027, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11590 = !DILocalVariable(name: "dev", arg: 1, scope: !11589, file: !3, line: 1572, type: !2400)
!11591 = !DILocation(line: 1572, column: 1, scope: !11589)
!11592 = !DILocalVariable(name: "attr", arg: 2, scope: !11589, file: !3, line: 1572, type: !5021)
!11593 = !DILocalVariable(name: "buf", arg: 3, scope: !11589, file: !3, line: 1572, type: !278)
!11594 = !DILocalVariable(name: "shost", scope: !11589, file: !3, line: 1572, type: !5046)
!11595 = distinct !DISubprogram(name: "store_fc_host_system_hostname", scope: !3, file: !3, line: 1574, type: !5031, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11596 = !DILocalVariable(name: "dev", arg: 1, scope: !11595, file: !3, line: 1574, type: !2400)
!11597 = !DILocation(line: 1574, column: 1, scope: !11595)
!11598 = !DILocalVariable(name: "attr", arg: 2, scope: !11595, file: !3, line: 1574, type: !5021)
!11599 = !DILocalVariable(name: "buf", arg: 3, scope: !11595, file: !3, line: 1574, type: !318)
!11600 = !DILocalVariable(name: "count", arg: 4, scope: !11595, file: !3, line: 1574, type: !416)
!11601 = !DILocalVariable(name: "shost", scope: !11595, file: !3, line: 1574, type: !5046)
!11602 = !DILocalVariable(name: "i", scope: !11595, file: !3, line: 1574, type: !4984)
!11603 = !DILocalVariable(name: "__mptr", scope: !11604, file: !3, line: 1574, type: !280)
!11604 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 1574, column: 1)
!11605 = !DILocation(line: 1574, column: 1, scope: !11604)
!11606 = !DILocation(line: 1574, column: 1, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11604, file: !3, line: 1574, column: 1)
!11608 = !DILocalVariable(name: "cnt", scope: !11595, file: !3, line: 1574, type: !7)
!11609 = !DILocation(line: 1574, column: 1, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 1574, column: 1)
!11611 = !DILocation(line: 1574, column: 1, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 1574, column: 1)
!11613 = distinct !DISubprogram(name: "show_fc_host_dev_loss_tmo", scope: !3, file: !3, line: 1673, type: !5027, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11614 = !DILocalVariable(name: "dev", arg: 1, scope: !11613, file: !3, line: 1673, type: !2400)
!11615 = !DILocation(line: 1673, column: 1, scope: !11613)
!11616 = !DILocalVariable(name: "attr", arg: 2, scope: !11613, file: !3, line: 1673, type: !5021)
!11617 = !DILocalVariable(name: "buf", arg: 3, scope: !11613, file: !3, line: 1673, type: !278)
!11618 = !DILocalVariable(name: "shost", scope: !11613, file: !3, line: 1673, type: !5046)
!11619 = distinct !DISubprogram(name: "store_fc_private_host_dev_loss_tmo", scope: !3, file: !3, line: 1651, type: !5031, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11620 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !11621)
!11621 = distinct !DILocation(line: 1669, column: 2, scope: !11619)
!11622 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !11621)
!11623 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !11624)
!11624 = distinct !DILocation(line: 1666, column: 2, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 1666, column: 2)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 1666, column: 2)
!11627 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 1666, column: 2)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 1666, column: 2)
!11629 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 1666, column: 2)
!11630 = !DILocalVariable(name: "dev", arg: 1, scope: !11619, file: !3, line: 1651, type: !2400)
!11631 = !DILocation(line: 1651, column: 51, scope: !11619)
!11632 = !DILocalVariable(name: "attr", arg: 2, scope: !11619, file: !3, line: 1652, type: !5021)
!11633 = !DILocation(line: 1652, column: 33, scope: !11619)
!11634 = !DILocalVariable(name: "buf", arg: 3, scope: !11619, file: !3, line: 1653, type: !318)
!11635 = !DILocation(line: 1653, column: 20, scope: !11619)
!11636 = !DILocalVariable(name: "count", arg: 4, scope: !11619, file: !3, line: 1653, type: !416)
!11637 = !DILocation(line: 1653, column: 32, scope: !11619)
!11638 = !DILocalVariable(name: "shost", scope: !11619, file: !3, line: 1655, type: !5046)
!11639 = !DILocation(line: 1655, column: 20, scope: !11619)
!11640 = !DILocation(line: 1655, column: 28, scope: !11619)
!11641 = !DILocalVariable(name: "fc_host", scope: !11619, file: !3, line: 1656, type: !5655)
!11642 = !DILocation(line: 1656, column: 24, scope: !11619)
!11643 = !DILocation(line: 1656, column: 34, scope: !11619)
!11644 = !DILocalVariable(name: "rport", scope: !11619, file: !3, line: 1657, type: !281)
!11645 = !DILocation(line: 1657, column: 19, scope: !11619)
!11646 = !DILocalVariable(name: "val", scope: !11619, file: !3, line: 1658, type: !419)
!11647 = !DILocation(line: 1658, column: 16, scope: !11619)
!11648 = !DILocalVariable(name: "flags", scope: !11619, file: !3, line: 1658, type: !419)
!11649 = !DILocation(line: 1658, column: 21, scope: !11619)
!11650 = !DILocalVariable(name: "rc", scope: !11619, file: !3, line: 1659, type: !355)
!11651 = !DILocation(line: 1659, column: 6, scope: !11619)
!11652 = !DILocation(line: 1661, column: 26, scope: !11619)
!11653 = !DILocation(line: 1661, column: 7, scope: !11619)
!11654 = !DILocation(line: 1661, column: 5, scope: !11619)
!11655 = !DILocation(line: 1662, column: 6, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 1662, column: 6)
!11657 = !DILocation(line: 1662, column: 6, scope: !11619)
!11658 = !DILocation(line: 1663, column: 10, scope: !11656)
!11659 = !DILocation(line: 1663, column: 3, scope: !11656)
!11660 = !DILocation(line: 1665, column: 32, scope: !11619)
!11661 = !DILocation(line: 1665, column: 2, scope: !11619)
!11662 = !DILocation(line: 1665, column: 30, scope: !11619)
!11663 = !DILocation(line: 1666, column: 2, scope: !11619)
!11664 = !DILocation(line: 1666, column: 2, scope: !11629)
!11665 = !DILocalVariable(name: "__dummy", scope: !11666, file: !3, line: 1666, type: !419)
!11666 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 1666, column: 2)
!11667 = !DILocation(line: 1666, column: 2, scope: !11666)
!11668 = !DILocalVariable(name: "__dummy2", scope: !11666, file: !3, line: 1666, type: !419)
!11669 = !DILocation(line: 1666, column: 2, scope: !11628)
!11670 = !DILocation(line: 1666, column: 2, scope: !11627)
!11671 = !DILocation(line: 1666, column: 2, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 1666, column: 2)
!11673 = !DILocalVariable(name: "__dummy", scope: !11674, file: !3, line: 1666, type: !419)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !3, line: 1666, column: 2)
!11675 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 1666, column: 2)
!11676 = !DILocation(line: 1666, column: 2, scope: !11674)
!11677 = !DILocalVariable(name: "__dummy2", scope: !11674, file: !3, line: 1666, type: !419)
!11678 = !DILocation(line: 1666, column: 2, scope: !11675)
!11679 = !DILocation(line: 1666, column: 2, scope: !11626)
!11680 = !{i32 -2140352471}
!11681 = !DILocation(line: 1666, column: 2, scope: !11625)
!11682 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !11624)
!11683 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !11624)
!11684 = !DILocalVariable(name: "__mptr", scope: !11685, file: !3, line: 1667, type: !280)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 1667, column: 2)
!11686 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 1667, column: 2)
!11687 = !DILocation(line: 1667, column: 2, scope: !11685)
!11688 = !DILocation(line: 1667, column: 2, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 1667, column: 2)
!11690 = !DILocation(line: 1667, column: 2, scope: !11686)
!11691 = !DILocation(line: 1667, column: 2, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 1667, column: 2)
!11693 = !DILocation(line: 1668, column: 29, scope: !11692)
!11694 = !DILocation(line: 1668, column: 36, scope: !11692)
!11695 = !DILocation(line: 1668, column: 3, scope: !11692)
!11696 = !DILocalVariable(name: "__mptr", scope: !11697, file: !3, line: 1667, type: !280)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 1667, column: 2)
!11698 = !DILocation(line: 1667, column: 2, scope: !11697)
!11699 = !DILocation(line: 1667, column: 2, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 1667, column: 2)
!11701 = distinct !{!11701, !11690, !11702}
!11702 = !DILocation(line: 1668, column: 39, scope: !11686)
!11703 = !DILocation(line: 1669, column: 25, scope: !11619)
!11704 = !DILocation(line: 1669, column: 32, scope: !11619)
!11705 = !DILocation(line: 1669, column: 43, scope: !11619)
!11706 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !11621)
!11707 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !11621)
!11708 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !11621)
!11709 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !11621)
!11710 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !11621)
!11711 = !DILocation(line: 1670, column: 9, scope: !11619)
!11712 = !DILocation(line: 1670, column: 2, scope: !11619)
!11713 = !DILocation(line: 1671, column: 1, scope: !11619)
!11714 = distinct !DISubprogram(name: "fc_str_to_dev_loss", scope: !3, file: !3, line: 838, type: !11715, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11715 = !DISubroutineType(types: !11716)
!11716 = !{!355, !318, !11717}
!11717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!11718 = !DILocalVariable(name: "buf", arg: 1, scope: !11714, file: !3, line: 838, type: !318)
!11719 = !DILocation(line: 838, column: 43, scope: !11714)
!11720 = !DILocalVariable(name: "val", arg: 2, scope: !11714, file: !3, line: 838, type: !11717)
!11721 = !DILocation(line: 838, column: 63, scope: !11714)
!11722 = !DILocalVariable(name: "cp", scope: !11714, file: !3, line: 840, type: !278)
!11723 = !DILocation(line: 840, column: 8, scope: !11714)
!11724 = !DILocation(line: 842, column: 24, scope: !11714)
!11725 = !DILocation(line: 842, column: 9, scope: !11714)
!11726 = !DILocation(line: 842, column: 3, scope: !11714)
!11727 = !DILocation(line: 842, column: 7, scope: !11714)
!11728 = !DILocation(line: 843, column: 7, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 843, column: 6)
!11730 = !DILocation(line: 843, column: 6, scope: !11729)
!11731 = !DILocation(line: 843, column: 10, scope: !11729)
!11732 = !DILocation(line: 843, column: 15, scope: !11729)
!11733 = !DILocation(line: 843, column: 14, scope: !11729)
!11734 = !DILocation(line: 843, column: 18, scope: !11729)
!11735 = !DILocation(line: 843, column: 6, scope: !11714)
!11736 = !DILocation(line: 844, column: 3, scope: !11729)
!11737 = !DILocation(line: 848, column: 7, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 848, column: 6)
!11739 = !DILocation(line: 848, column: 6, scope: !11738)
!11740 = !DILocation(line: 848, column: 11, scope: !11738)
!11741 = !DILocation(line: 848, column: 6, scope: !11714)
!11742 = !DILocation(line: 849, column: 3, scope: !11738)
!11743 = !DILocation(line: 851, column: 2, scope: !11714)
!11744 = !DILocation(line: 852, column: 1, scope: !11714)
!11745 = distinct !DISubprogram(name: "fc_rport_set_dev_loss_tmo", scope: !3, file: !3, line: 854, type: !11746, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11746 = !DISubroutineType(types: !11747)
!11747 = !{!355, !281, !419}
!11748 = !DILocalVariable(name: "rport", arg: 1, scope: !11745, file: !3, line: 854, type: !281)
!11749 = !DILocation(line: 854, column: 55, scope: !11745)
!11750 = !DILocalVariable(name: "val", arg: 2, scope: !11745, file: !3, line: 855, type: !419)
!11751 = !DILocation(line: 855, column: 24, scope: !11745)
!11752 = !DILocalVariable(name: "shost", scope: !11745, file: !3, line: 857, type: !5046)
!11753 = !DILocation(line: 857, column: 20, scope: !11745)
!11754 = !DILocation(line: 857, column: 28, scope: !11745)
!11755 = !DILocalVariable(name: "i", scope: !11745, file: !3, line: 858, type: !4984)
!11756 = !DILocation(line: 858, column: 22, scope: !11745)
!11757 = !DILocalVariable(name: "__mptr", scope: !11758, file: !3, line: 858, type: !280)
!11758 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 858, column: 26)
!11759 = !DILocation(line: 858, column: 26, scope: !11758)
!11760 = !DILocation(line: 858, column: 26, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 858, column: 26)
!11762 = !DILocation(line: 860, column: 7, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 860, column: 6)
!11764 = !DILocation(line: 860, column: 14, scope: !11763)
!11765 = !DILocation(line: 860, column: 25, scope: !11763)
!11766 = !DILocation(line: 860, column: 50, scope: !11763)
!11767 = !DILocation(line: 861, column: 7, scope: !11763)
!11768 = !DILocation(line: 861, column: 14, scope: !11763)
!11769 = !DILocation(line: 861, column: 25, scope: !11763)
!11770 = !DILocation(line: 861, column: 50, scope: !11763)
!11771 = !DILocation(line: 862, column: 7, scope: !11763)
!11772 = !DILocation(line: 862, column: 14, scope: !11763)
!11773 = !DILocation(line: 862, column: 25, scope: !11763)
!11774 = !DILocation(line: 860, column: 6, scope: !11745)
!11775 = !DILocation(line: 863, column: 3, scope: !11763)
!11776 = !DILocation(line: 867, column: 6, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 867, column: 6)
!11778 = !DILocation(line: 867, column: 10, scope: !11777)
!11779 = !DILocation(line: 867, column: 6, scope: !11745)
!11780 = !DILocation(line: 868, column: 3, scope: !11777)
!11781 = !DILocation(line: 874, column: 6, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 874, column: 6)
!11783 = !DILocation(line: 874, column: 13, scope: !11782)
!11784 = !DILocation(line: 874, column: 30, scope: !11782)
!11785 = !DILocation(line: 874, column: 36, scope: !11782)
!11786 = !DILocation(line: 875, column: 6, scope: !11782)
!11787 = !DILocation(line: 875, column: 10, scope: !11782)
!11788 = !DILocation(line: 874, column: 6, scope: !11745)
!11789 = !DILocation(line: 876, column: 3, scope: !11782)
!11790 = !DILocation(line: 878, column: 2, scope: !11745)
!11791 = !DILocation(line: 878, column: 5, scope: !11745)
!11792 = !DILocation(line: 878, column: 8, scope: !11745)
!11793 = !DILocation(line: 878, column: 31, scope: !11745)
!11794 = !DILocation(line: 878, column: 38, scope: !11745)
!11795 = !DILocation(line: 879, column: 2, scope: !11745)
!11796 = !DILocation(line: 880, column: 1, scope: !11745)
!11797 = distinct !DISubprogram(name: "show_fc_private_host_tgtid_bind_type", scope: !3, file: !3, line: 1582, type: !5027, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11798 = !DILocalVariable(name: "dev", arg: 1, scope: !11797, file: !3, line: 1582, type: !2400)
!11799 = !DILocation(line: 1582, column: 53, scope: !11797)
!11800 = !DILocalVariable(name: "attr", arg: 2, scope: !11797, file: !3, line: 1583, type: !5021)
!11801 = !DILocation(line: 1583, column: 35, scope: !11797)
!11802 = !DILocalVariable(name: "buf", arg: 3, scope: !11797, file: !3, line: 1583, type: !278)
!11803 = !DILocation(line: 1583, column: 47, scope: !11797)
!11804 = !DILocalVariable(name: "shost", scope: !11797, file: !3, line: 1585, type: !5046)
!11805 = !DILocation(line: 1585, column: 20, scope: !11797)
!11806 = !DILocation(line: 1585, column: 28, scope: !11797)
!11807 = !DILocalVariable(name: "name", scope: !11797, file: !3, line: 1586, type: !318)
!11808 = !DILocation(line: 1586, column: 14, scope: !11797)
!11809 = !DILocation(line: 1588, column: 37, scope: !11797)
!11810 = !DILocation(line: 1588, column: 9, scope: !11797)
!11811 = !DILocation(line: 1588, column: 7, scope: !11797)
!11812 = !DILocation(line: 1589, column: 7, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11797, file: !3, line: 1589, column: 6)
!11814 = !DILocation(line: 1589, column: 6, scope: !11797)
!11815 = !DILocation(line: 1590, column: 3, scope: !11813)
!11816 = !DILocation(line: 1591, column: 18, scope: !11797)
!11817 = !DILocation(line: 1591, column: 56, scope: !11797)
!11818 = !DILocation(line: 1591, column: 9, scope: !11797)
!11819 = !DILocation(line: 1591, column: 2, scope: !11797)
!11820 = !DILocation(line: 1592, column: 1, scope: !11797)
!11821 = distinct !DISubprogram(name: "store_fc_private_host_tgtid_bind_type", scope: !3, file: !3, line: 1598, type: !5031, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11822 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !11823)
!11823 = distinct !DILocation(line: 1619, column: 3, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 1610, column: 45)
!11825 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 1610, column: 6)
!11826 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !11823)
!11827 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !11828)
!11828 = distinct !DILocation(line: 1611, column: 3, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 1611, column: 3)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 1611, column: 3)
!11831 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 1611, column: 3)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 1611, column: 3)
!11833 = distinct !DILexicalBlock(scope: !11824, file: !3, line: 1611, column: 3)
!11834 = !DILocalVariable(name: "dev", arg: 1, scope: !11821, file: !3, line: 1598, type: !2400)
!11835 = !DILocation(line: 1598, column: 54, scope: !11821)
!11836 = !DILocalVariable(name: "attr", arg: 2, scope: !11821, file: !3, line: 1599, type: !5021)
!11837 = !DILocation(line: 1599, column: 27, scope: !11821)
!11838 = !DILocalVariable(name: "buf", arg: 3, scope: !11821, file: !3, line: 1599, type: !318)
!11839 = !DILocation(line: 1599, column: 45, scope: !11821)
!11840 = !DILocalVariable(name: "count", arg: 4, scope: !11821, file: !3, line: 1599, type: !416)
!11841 = !DILocation(line: 1599, column: 57, scope: !11821)
!11842 = !DILocalVariable(name: "shost", scope: !11821, file: !3, line: 1601, type: !5046)
!11843 = !DILocation(line: 1601, column: 20, scope: !11821)
!11844 = !DILocation(line: 1601, column: 28, scope: !11821)
!11845 = !DILocalVariable(name: "rport", scope: !11821, file: !3, line: 1602, type: !281)
!11846 = !DILocation(line: 1602, column: 19, scope: !11821)
!11847 = !DILocalVariable(name: "val", scope: !11821, file: !3, line: 1603, type: !214)
!11848 = !DILocation(line: 1603, column: 30, scope: !11821)
!11849 = !DILocalVariable(name: "flags", scope: !11821, file: !3, line: 1604, type: !419)
!11850 = !DILocation(line: 1604, column: 16, scope: !11821)
!11851 = !DILocation(line: 1606, column: 35, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 1606, column: 6)
!11853 = !DILocation(line: 1606, column: 6, scope: !11852)
!11854 = !DILocation(line: 1606, column: 6, scope: !11821)
!11855 = !DILocation(line: 1607, column: 3, scope: !11852)
!11856 = !DILocation(line: 1610, column: 6, scope: !11825)
!11857 = !DILocation(line: 1610, column: 13, scope: !11825)
!11858 = !DILocation(line: 1610, column: 10, scope: !11825)
!11859 = !DILocation(line: 1610, column: 6, scope: !11821)
!11860 = !DILocation(line: 1611, column: 3, scope: !11824)
!11861 = !DILocation(line: 1611, column: 3, scope: !11833)
!11862 = !DILocalVariable(name: "__dummy", scope: !11863, file: !3, line: 1611, type: !419)
!11863 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 1611, column: 3)
!11864 = !DILocation(line: 1611, column: 3, scope: !11863)
!11865 = !DILocalVariable(name: "__dummy2", scope: !11863, file: !3, line: 1611, type: !419)
!11866 = !DILocation(line: 1611, column: 3, scope: !11832)
!11867 = !DILocation(line: 1611, column: 3, scope: !11831)
!11868 = !DILocation(line: 1611, column: 3, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 1611, column: 3)
!11870 = !DILocalVariable(name: "__dummy", scope: !11871, file: !3, line: 1611, type: !419)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 1611, column: 3)
!11872 = distinct !DILexicalBlock(scope: !11869, file: !3, line: 1611, column: 3)
!11873 = !DILocation(line: 1611, column: 3, scope: !11871)
!11874 = !DILocalVariable(name: "__dummy2", scope: !11871, file: !3, line: 1611, type: !419)
!11875 = !DILocation(line: 1611, column: 3, scope: !11872)
!11876 = !DILocation(line: 1611, column: 3, scope: !11830)
!11877 = !{i32 -2140361712}
!11878 = !DILocation(line: 1611, column: 3, scope: !11829)
!11879 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !11828)
!11880 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !11828)
!11881 = !DILocation(line: 1612, column: 3, scope: !11824)
!11882 = !DILocation(line: 1612, column: 23, scope: !11824)
!11883 = !DILocation(line: 1612, column: 11, scope: !11824)
!11884 = !DILocation(line: 1612, column: 10, scope: !11824)
!11885 = !DILocalVariable(name: "__mptr", scope: !11886, file: !3, line: 1613, type: !280)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 1613, column: 4)
!11887 = distinct !DILexicalBlock(scope: !11824, file: !3, line: 1612, column: 55)
!11888 = !DILocation(line: 1613, column: 4, scope: !11886)
!11889 = !DILocation(line: 1613, column: 4, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 1613, column: 4)
!11891 = !DILocation(line: 1613, column: 4, scope: !11887)
!11892 = !DILocation(line: 1615, column: 14, scope: !11887)
!11893 = !DILocation(line: 1615, column: 21, scope: !11887)
!11894 = !DILocation(line: 1615, column: 4, scope: !11887)
!11895 = !DILocation(line: 1616, column: 4, scope: !11887)
!11896 = !DILocation(line: 1616, column: 11, scope: !11887)
!11897 = !DILocation(line: 1616, column: 22, scope: !11887)
!11898 = !DILocation(line: 1617, column: 18, scope: !11887)
!11899 = !DILocation(line: 1617, column: 26, scope: !11887)
!11900 = !DILocation(line: 1617, column: 33, scope: !11887)
!11901 = !DILocation(line: 1617, column: 4, scope: !11887)
!11902 = distinct !{!11902, !11881, !11903}
!11903 = !DILocation(line: 1618, column: 3, scope: !11824)
!11904 = !DILocation(line: 1619, column: 26, scope: !11824)
!11905 = !DILocation(line: 1619, column: 33, scope: !11824)
!11906 = !DILocation(line: 1619, column: 44, scope: !11824)
!11907 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !11823)
!11908 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !11823)
!11909 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !11823)
!11910 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !11823)
!11911 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !11823)
!11912 = !DILocation(line: 1620, column: 2, scope: !11824)
!11913 = !DILocation(line: 1622, column: 35, scope: !11821)
!11914 = !DILocation(line: 1622, column: 2, scope: !11821)
!11915 = !DILocation(line: 1622, column: 33, scope: !11821)
!11916 = !DILocation(line: 1623, column: 9, scope: !11821)
!11917 = !DILocation(line: 1623, column: 2, scope: !11821)
!11918 = !DILocation(line: 1624, column: 1, scope: !11821)
!11919 = distinct !DISubprogram(name: "get_fc_tgtid_bind_type_name", scope: !3, file: !3, line: 196, type: !11920, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11920 = !DISubroutineType(types: !11921)
!11921 = !{!318, !214}
!11922 = !DILocalVariable(name: "table_key", arg: 1, scope: !11919, file: !3, line: 196, type: !214)
!11923 = !DILocation(line: 196, column: 1, scope: !11919)
!11924 = !DILocalVariable(name: "i", scope: !11919, file: !3, line: 196, type: !355)
!11925 = !DILocalVariable(name: "name", scope: !11919, file: !3, line: 196, type: !278)
!11926 = !DILocation(line: 196, column: 1, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 196, column: 1)
!11928 = !DILocation(line: 196, column: 1, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 196, column: 1)
!11930 = !DILocation(line: 196, column: 1, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 196, column: 1)
!11932 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 196, column: 1)
!11933 = !DILocation(line: 196, column: 1, scope: !11932)
!11934 = !DILocation(line: 196, column: 1, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 196, column: 1)
!11936 = distinct !{!11936, !11926, !11926}
!11937 = distinct !DISubprogram(name: "get_fc_tgtid_bind_type_match", scope: !3, file: !3, line: 198, type: !11938, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11938 = !DISubroutineType(types: !11939)
!11939 = !{!355, !318, !11940}
!11940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!11941 = !DILocalVariable(name: "table_key", arg: 1, scope: !11937, file: !3, line: 198, type: !318)
!11942 = !DILocation(line: 198, column: 1, scope: !11937)
!11943 = !DILocalVariable(name: "value", arg: 2, scope: !11937, file: !3, line: 198, type: !11940)
!11944 = !DILocalVariable(name: "i", scope: !11937, file: !3, line: 198, type: !355)
!11945 = !DILocation(line: 198, column: 1, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 198, column: 1)
!11947 = !DILocation(line: 198, column: 1, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 198, column: 1)
!11949 = !DILocation(line: 198, column: 1, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 198, column: 1)
!11951 = distinct !DILexicalBlock(scope: !11948, file: !3, line: 198, column: 1)
!11952 = !DILocation(line: 198, column: 1, scope: !11951)
!11953 = !DILocation(line: 198, column: 1, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 198, column: 1)
!11955 = distinct !{!11955, !11945, !11945}
!11956 = distinct !DISubprogram(name: "list_empty", scope: !7865, file: !7865, line: 280, type: !11957, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11957 = !DISubroutineType(types: !11958)
!11958 = !{!355, !11959}
!11959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11960, size: 64)
!11960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!11961 = !DILocalVariable(name: "head", arg: 1, scope: !11956, file: !7865, line: 280, type: !11959)
!11962 = !DILocation(line: 280, column: 54, scope: !11956)
!11963 = !DILocation(line: 282, column: 9, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11956, file: !7865, line: 282, column: 9)
!11965 = !DILocation(line: 282, column: 9, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11964, file: !7865, line: 282, column: 9)
!11967 = !DILocation(line: 282, column: 34, scope: !11956)
!11968 = !DILocation(line: 282, column: 31, scope: !11956)
!11969 = !DILocation(line: 282, column: 2, scope: !11956)
!11970 = distinct !DISubprogram(name: "store_fc_private_host_issue_lip", scope: !3, file: !3, line: 1631, type: !5031, scopeLine: 1633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!11971 = !DILocalVariable(name: "dev", arg: 1, scope: !11970, file: !3, line: 1631, type: !2400)
!11972 = !DILocation(line: 1631, column: 48, scope: !11970)
!11973 = !DILocalVariable(name: "attr", arg: 2, scope: !11970, file: !3, line: 1632, type: !5021)
!11974 = !DILocation(line: 1632, column: 27, scope: !11970)
!11975 = !DILocalVariable(name: "buf", arg: 3, scope: !11970, file: !3, line: 1632, type: !318)
!11976 = !DILocation(line: 1632, column: 45, scope: !11970)
!11977 = !DILocalVariable(name: "count", arg: 4, scope: !11970, file: !3, line: 1632, type: !416)
!11978 = !DILocation(line: 1632, column: 57, scope: !11970)
!11979 = !DILocalVariable(name: "shost", scope: !11970, file: !3, line: 1634, type: !5046)
!11980 = !DILocation(line: 1634, column: 20, scope: !11970)
!11981 = !DILocation(line: 1634, column: 28, scope: !11970)
!11982 = !DILocalVariable(name: "i", scope: !11970, file: !3, line: 1635, type: !4984)
!11983 = !DILocation(line: 1635, column: 22, scope: !11970)
!11984 = !DILocalVariable(name: "__mptr", scope: !11985, file: !3, line: 1635, type: !280)
!11985 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 1635, column: 26)
!11986 = !DILocation(line: 1635, column: 26, scope: !11985)
!11987 = !DILocation(line: 1635, column: 26, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 1635, column: 26)
!11989 = !DILocalVariable(name: "ret", scope: !11970, file: !3, line: 1636, type: !355)
!11990 = !DILocation(line: 1636, column: 6, scope: !11970)
!11991 = !DILocation(line: 1639, column: 6, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 1639, column: 6)
!11993 = !DILocation(line: 1639, column: 9, scope: !11992)
!11994 = !DILocation(line: 1639, column: 12, scope: !11992)
!11995 = !DILocation(line: 1639, column: 6, scope: !11970)
!11996 = !DILocation(line: 1640, column: 9, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1639, column: 31)
!11998 = !DILocation(line: 1640, column: 12, scope: !11997)
!11999 = !DILocation(line: 1640, column: 15, scope: !11997)
!12000 = !DILocation(line: 1640, column: 33, scope: !11997)
!12001 = !DILocation(line: 1640, column: 7, scope: !11997)
!12002 = !DILocation(line: 1641, column: 10, scope: !11997)
!12003 = !DILocation(line: 1641, column: 16, scope: !11997)
!12004 = !DILocation(line: 1641, column: 21, scope: !11997)
!12005 = !DILocation(line: 1641, column: 3, scope: !11997)
!12006 = !DILocation(line: 1644, column: 2, scope: !11970)
!12007 = !DILocation(line: 1645, column: 1, scope: !11970)
!12008 = distinct !DISubprogram(name: "store_fc_host_vport_create", scope: !3, file: !3, line: 1844, type: !5031, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12009 = !DILocalVariable(name: "dev", arg: 1, scope: !12008, file: !3, line: 1844, type: !2400)
!12010 = !DILocation(line: 1844, column: 43, scope: !12008)
!12011 = !DILocalVariable(name: "attr", arg: 2, scope: !12008, file: !3, line: 1844, type: !5021)
!12012 = !DILocation(line: 1844, column: 73, scope: !12008)
!12013 = !DILocalVariable(name: "buf", arg: 3, scope: !12008, file: !3, line: 1845, type: !318)
!12014 = !DILocation(line: 1845, column: 19, scope: !12008)
!12015 = !DILocalVariable(name: "count", arg: 4, scope: !12008, file: !3, line: 1845, type: !416)
!12016 = !DILocation(line: 1845, column: 31, scope: !12008)
!12017 = !DILocalVariable(name: "shost", scope: !12008, file: !3, line: 1847, type: !5046)
!12018 = !DILocation(line: 1847, column: 20, scope: !12008)
!12019 = !DILocation(line: 1847, column: 28, scope: !12008)
!12020 = !DILocalVariable(name: "vid", scope: !12008, file: !3, line: 1848, type: !9186)
!12021 = !DILocation(line: 1848, column: 30, scope: !12008)
!12022 = !DILocalVariable(name: "vport", scope: !12008, file: !3, line: 1849, type: !5538)
!12023 = !DILocation(line: 1849, column: 19, scope: !12008)
!12024 = !DILocalVariable(name: "cnt", scope: !12008, file: !3, line: 1850, type: !7)
!12025 = !DILocation(line: 1850, column: 15, scope: !12008)
!12026 = !DILocation(line: 1850, column: 19, scope: !12008)
!12027 = !DILocalVariable(name: "stat", scope: !12008, file: !3, line: 1851, type: !355)
!12028 = !DILocation(line: 1851, column: 6, scope: !12008)
!12029 = !DILocation(line: 1853, column: 2, scope: !12008)
!12030 = !DILocation(line: 1856, column: 6, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1856, column: 6)
!12032 = !DILocation(line: 1856, column: 10, scope: !12031)
!12033 = !DILocation(line: 1856, column: 13, scope: !12031)
!12034 = !DILocation(line: 1856, column: 17, scope: !12031)
!12035 = !DILocation(line: 1856, column: 6, scope: !12008)
!12036 = !DILocation(line: 1857, column: 6, scope: !12031)
!12037 = !DILocation(line: 1857, column: 3, scope: !12031)
!12038 = !DILocation(line: 1860, column: 7, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1860, column: 6)
!12040 = !DILocation(line: 1860, column: 11, scope: !12039)
!12041 = !DILocation(line: 1860, column: 25, scope: !12039)
!12042 = !DILocation(line: 1860, column: 29, scope: !12039)
!12043 = !DILocation(line: 1860, column: 37, scope: !12039)
!12044 = !DILocation(line: 1860, column: 6, scope: !12008)
!12045 = !DILocation(line: 1861, column: 3, scope: !12039)
!12046 = !DILocation(line: 1863, column: 23, scope: !12008)
!12047 = !DILocation(line: 1863, column: 36, scope: !12008)
!12048 = !DILocation(line: 1863, column: 9, scope: !12008)
!12049 = !DILocation(line: 1863, column: 7, scope: !12008)
!12050 = !DILocation(line: 1864, column: 6, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1864, column: 6)
!12052 = !DILocation(line: 1864, column: 6, scope: !12008)
!12053 = !DILocation(line: 1865, column: 10, scope: !12051)
!12054 = !DILocation(line: 1865, column: 3, scope: !12051)
!12055 = !DILocation(line: 1867, column: 23, scope: !12008)
!12056 = !DILocation(line: 1867, column: 37, scope: !12008)
!12057 = !DILocation(line: 1867, column: 9, scope: !12008)
!12058 = !DILocation(line: 1867, column: 7, scope: !12008)
!12059 = !DILocation(line: 1868, column: 6, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1868, column: 6)
!12061 = !DILocation(line: 1868, column: 6, scope: !12008)
!12062 = !DILocation(line: 1869, column: 10, scope: !12060)
!12063 = !DILocation(line: 1869, column: 3, scope: !12060)
!12064 = !DILocation(line: 1871, column: 6, scope: !12008)
!12065 = !DILocation(line: 1871, column: 12, scope: !12008)
!12066 = !DILocation(line: 1872, column: 6, scope: !12008)
!12067 = !DILocation(line: 1872, column: 17, scope: !12008)
!12068 = !DILocation(line: 1874, column: 6, scope: !12008)
!12069 = !DILocation(line: 1874, column: 14, scope: !12008)
!12070 = !DILocation(line: 1877, column: 24, scope: !12008)
!12071 = !DILocation(line: 1877, column: 35, scope: !12008)
!12072 = !DILocation(line: 1877, column: 42, scope: !12008)
!12073 = !DILocation(line: 1877, column: 9, scope: !12008)
!12074 = !DILocation(line: 1877, column: 7, scope: !12008)
!12075 = !DILocation(line: 1878, column: 9, scope: !12008)
!12076 = !DILocation(line: 1878, column: 16, scope: !12008)
!12077 = !DILocation(line: 1878, column: 23, scope: !12008)
!12078 = !DILocation(line: 1878, column: 2, scope: !12008)
!12079 = !DILocation(line: 1879, column: 1, scope: !12008)
!12080 = distinct !DISubprogram(name: "fc_parse_wwn", scope: !3, file: !3, line: 1809, type: !12081, scopeLine: 1810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12081 = !DISubroutineType(types: !12082)
!12082 = !{!355, !318, !4819}
!12083 = !DILocalVariable(name: "ns", arg: 1, scope: !12080, file: !3, line: 1809, type: !318)
!12084 = !DILocation(line: 1809, column: 26, scope: !12080)
!12085 = !DILocalVariable(name: "nm", arg: 2, scope: !12080, file: !3, line: 1809, type: !4819)
!12086 = !DILocation(line: 1809, column: 35, scope: !12080)
!12087 = !DILocalVariable(name: "i", scope: !12080, file: !3, line: 1811, type: !7)
!12088 = !DILocation(line: 1811, column: 15, scope: !12080)
!12089 = !DILocalVariable(name: "j", scope: !12080, file: !3, line: 1811, type: !7)
!12090 = !DILocation(line: 1811, column: 18, scope: !12080)
!12091 = !DILocalVariable(name: "wwn", scope: !12080, file: !3, line: 1812, type: !12092)
!12092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 64, elements: !1617)
!12093 = !DILocation(line: 1812, column: 5, scope: !12080)
!12094 = !DILocation(line: 1814, column: 2, scope: !12080)
!12095 = !DILocation(line: 1817, column: 8, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 1817, column: 2)
!12097 = !DILocation(line: 1817, column: 13, scope: !12096)
!12098 = !DILocation(line: 1817, column: 7, scope: !12096)
!12099 = !DILocation(line: 1817, column: 17, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12096, file: !3, line: 1817, column: 2)
!12101 = !DILocation(line: 1817, column: 19, scope: !12100)
!12102 = !DILocation(line: 1817, column: 2, scope: !12096)
!12103 = !DILocalVariable(name: "value", scope: !12104, file: !3, line: 1818, type: !355)
!12104 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 1817, column: 30)
!12105 = !DILocation(line: 1818, column: 7, scope: !12104)
!12106 = !DILocation(line: 1820, column: 25, scope: !12104)
!12107 = !DILocation(line: 1820, column: 22, scope: !12104)
!12108 = !DILocation(line: 1820, column: 11, scope: !12104)
!12109 = !DILocation(line: 1820, column: 9, scope: !12104)
!12110 = !DILocation(line: 1821, column: 7, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 1821, column: 7)
!12112 = !DILocation(line: 1821, column: 13, scope: !12111)
!12113 = !DILocation(line: 1821, column: 7, scope: !12104)
!12114 = !DILocation(line: 1822, column: 9, scope: !12111)
!12115 = !DILocation(line: 1822, column: 11, scope: !12111)
!12116 = !DILocation(line: 1822, column: 19, scope: !12111)
!12117 = !DILocation(line: 1822, column: 17, scope: !12111)
!12118 = !DILocation(line: 1822, column: 6, scope: !12111)
!12119 = !DILocation(line: 1822, column: 4, scope: !12111)
!12120 = !DILocation(line: 1824, column: 4, scope: !12111)
!12121 = !DILocation(line: 1825, column: 7, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 1825, column: 7)
!12123 = !DILocation(line: 1825, column: 9, scope: !12122)
!12124 = !DILocation(line: 1825, column: 7, scope: !12104)
!12125 = !DILocation(line: 1826, column: 15, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12122, file: !3, line: 1825, column: 14)
!12127 = !DILocation(line: 1826, column: 17, scope: !12126)
!12128 = !DILocation(line: 1826, column: 8, scope: !12126)
!12129 = !DILocation(line: 1826, column: 9, scope: !12126)
!12130 = !DILocation(line: 1826, column: 4, scope: !12126)
!12131 = !DILocation(line: 1826, column: 13, scope: !12126)
!12132 = !DILocation(line: 1827, column: 6, scope: !12126)
!12133 = !DILocation(line: 1828, column: 3, scope: !12126)
!12134 = !DILocation(line: 1829, column: 2, scope: !12104)
!12135 = !DILocation(line: 1817, column: 26, scope: !12100)
!12136 = !DILocation(line: 1817, column: 2, scope: !12100)
!12137 = distinct !{!12137, !12102, !12138}
!12138 = !DILocation(line: 1829, column: 2, scope: !12096)
!12139 = !DILocation(line: 1831, column: 19, scope: !12080)
!12140 = !DILocation(line: 1831, column: 8, scope: !12080)
!12141 = !DILocation(line: 1831, column: 3, scope: !12080)
!12142 = !DILocation(line: 1831, column: 6, scope: !12080)
!12143 = !DILocation(line: 1833, column: 2, scope: !12080)
!12144 = !DILocation(line: 1834, column: 1, scope: !12080)
!12145 = distinct !DISubprogram(name: "wwn_to_u64", scope: !164, file: !164, line: 746, type: !12146, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12146 = !DISubroutineType(types: !12147)
!12147 = !{!288, !12148}
!12148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12149, size: 64)
!12149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!12150 = !DILocalVariable(name: "p", arg: 1, scope: !12151, file: !12152, line: 197, type: !12155)
!12151 = distinct !DISubprogram(name: "__swab64p", scope: !12152, file: !12152, line: 197, type: !12153, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12152 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!12153 = !DISubroutineType(types: !12154)
!12154 = !{!289, !12155}
!12155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12156, size: 64)
!12156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !289)
!12157 = !DILocation(line: 197, column: 53, scope: !12151, inlinedAt: !12158)
!12158 = distinct !DILocation(line: 74, column: 9, scope: !12159, inlinedAt: !12165)
!12159 = distinct !DISubprogram(name: "__be64_to_cpup", scope: !12160, file: !12160, line: 72, type: !12161, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12160 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!12161 = !DISubroutineType(types: !12162)
!12162 = !{!289, !12163}
!12163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12164, size: 64)
!12164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5732)
!12165 = distinct !DILocation(line: 35, column: 9, scope: !12166, inlinedAt: !12170)
!12166 = distinct !DISubprogram(name: "get_unaligned_be64", scope: !12167, file: !12167, line: 33, type: !12168, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12167 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!12168 = !DISubroutineType(types: !12169)
!12169 = !{!288, !3381}
!12170 = distinct !DILocation(line: 748, column: 9, scope: !12145)
!12171 = !DILocalVariable(name: "p", arg: 1, scope: !12159, file: !12160, line: 72, type: !12163)
!12172 = !DILocation(line: 72, column: 59, scope: !12159, inlinedAt: !12165)
!12173 = !DILocalVariable(name: "p", arg: 1, scope: !12166, file: !12167, line: 33, type: !3381)
!12174 = !DILocation(line: 33, column: 59, scope: !12166, inlinedAt: !12170)
!12175 = !DILocalVariable(name: "wwn", arg: 1, scope: !12145, file: !164, line: 746, type: !12148)
!12176 = !DILocation(line: 746, column: 40, scope: !12145)
!12177 = !DILocation(line: 748, column: 28, scope: !12145)
!12178 = !DILocation(line: 35, column: 32, scope: !12166, inlinedAt: !12170)
!12179 = !DILocation(line: 35, column: 22, scope: !12166, inlinedAt: !12170)
!12180 = !DILocation(line: 74, column: 28, scope: !12159, inlinedAt: !12165)
!12181 = !DILocation(line: 202, column: 9, scope: !12151, inlinedAt: !12158)
!12182 = !DILocation(line: 748, column: 2, scope: !12145)
!12183 = distinct !DISubprogram(name: "__fswab64", scope: !12152, file: !12152, line: 66, type: !12184, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12184 = !DISubroutineType(types: !12185)
!12185 = !{!289, !289}
!12186 = !DILocalVariable(name: "val", arg: 1, scope: !12183, file: !12152, line: 66, type: !289)
!12187 = !DILocation(line: 66, column: 57, scope: !12183)
!12188 = !DILocation(line: 69, column: 23, scope: !12183)
!12189 = !DILocation(line: 69, column: 9, scope: !12183)
!12190 = !DILocation(line: 69, column: 2, scope: !12183)
!12191 = distinct !DISubprogram(name: "__arch_swab64", scope: !12192, file: !12192, line: 15, type: !12184, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12192 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!12193 = !DILocalVariable(name: "val", arg: 1, scope: !12191, file: !12192, line: 15, type: !289)
!12194 = !DILocation(line: 15, column: 61, scope: !12191)
!12195 = !DILocation(line: 31, column: 38, scope: !12191)
!12196 = !DILocation(line: 31, column: 2, scope: !12191)
!12197 = !{i32 533748}
!12198 = !DILocation(line: 32, column: 9, scope: !12191)
!12199 = !DILocation(line: 32, column: 2, scope: !12191)
!12200 = distinct !DISubprogram(name: "store_fc_host_vport_delete", scope: !3, file: !3, line: 1891, type: !5031, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12201 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !12202)
!12202 = distinct !DILocation(line: 1931, column: 2, scope: !12200)
!12203 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !12202)
!12204 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !12205)
!12205 = distinct !DILocation(line: 1918, column: 2, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !3, line: 1918, column: 2)
!12207 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 1918, column: 2)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 1918, column: 2)
!12209 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 1918, column: 2)
!12210 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1918, column: 2)
!12211 = !DILocalVariable(name: "dev", arg: 1, scope: !12200, file: !3, line: 1891, type: !2400)
!12212 = !DILocation(line: 1891, column: 43, scope: !12200)
!12213 = !DILocalVariable(name: "attr", arg: 2, scope: !12200, file: !3, line: 1891, type: !5021)
!12214 = !DILocation(line: 1891, column: 73, scope: !12200)
!12215 = !DILocalVariable(name: "buf", arg: 3, scope: !12200, file: !3, line: 1892, type: !318)
!12216 = !DILocation(line: 1892, column: 19, scope: !12200)
!12217 = !DILocalVariable(name: "count", arg: 4, scope: !12200, file: !3, line: 1892, type: !416)
!12218 = !DILocation(line: 1892, column: 31, scope: !12200)
!12219 = !DILocalVariable(name: "shost", scope: !12200, file: !3, line: 1894, type: !5046)
!12220 = !DILocation(line: 1894, column: 20, scope: !12200)
!12221 = !DILocation(line: 1894, column: 28, scope: !12200)
!12222 = !DILocalVariable(name: "fc_host", scope: !12200, file: !3, line: 1895, type: !5655)
!12223 = !DILocation(line: 1895, column: 24, scope: !12200)
!12224 = !DILocation(line: 1895, column: 34, scope: !12200)
!12225 = !DILocalVariable(name: "vport", scope: !12200, file: !3, line: 1896, type: !5538)
!12226 = !DILocation(line: 1896, column: 19, scope: !12200)
!12227 = !DILocalVariable(name: "wwpn", scope: !12200, file: !3, line: 1897, type: !288)
!12228 = !DILocation(line: 1897, column: 6, scope: !12200)
!12229 = !DILocalVariable(name: "wwnn", scope: !12200, file: !3, line: 1897, type: !288)
!12230 = !DILocation(line: 1897, column: 12, scope: !12200)
!12231 = !DILocalVariable(name: "flags", scope: !12200, file: !3, line: 1898, type: !419)
!12232 = !DILocation(line: 1898, column: 16, scope: !12200)
!12233 = !DILocalVariable(name: "cnt", scope: !12200, file: !3, line: 1899, type: !7)
!12234 = !DILocation(line: 1899, column: 15, scope: !12200)
!12235 = !DILocation(line: 1899, column: 19, scope: !12200)
!12236 = !DILocalVariable(name: "stat", scope: !12200, file: !3, line: 1900, type: !355)
!12237 = !DILocation(line: 1900, column: 6, scope: !12200)
!12238 = !DILocalVariable(name: "match", scope: !12200, file: !3, line: 1900, type: !355)
!12239 = !DILocation(line: 1900, column: 12, scope: !12200)
!12240 = !DILocation(line: 1903, column: 6, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1903, column: 6)
!12242 = !DILocation(line: 1903, column: 10, scope: !12241)
!12243 = !DILocation(line: 1903, column: 13, scope: !12241)
!12244 = !DILocation(line: 1903, column: 17, scope: !12241)
!12245 = !DILocation(line: 1903, column: 6, scope: !12200)
!12246 = !DILocation(line: 1904, column: 6, scope: !12241)
!12247 = !DILocation(line: 1904, column: 3, scope: !12241)
!12248 = !DILocation(line: 1907, column: 7, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1907, column: 6)
!12250 = !DILocation(line: 1907, column: 11, scope: !12249)
!12251 = !DILocation(line: 1907, column: 25, scope: !12249)
!12252 = !DILocation(line: 1907, column: 29, scope: !12249)
!12253 = !DILocation(line: 1907, column: 37, scope: !12249)
!12254 = !DILocation(line: 1907, column: 6, scope: !12200)
!12255 = !DILocation(line: 1908, column: 3, scope: !12249)
!12256 = !DILocation(line: 1910, column: 23, scope: !12200)
!12257 = !DILocation(line: 1910, column: 9, scope: !12200)
!12258 = !DILocation(line: 1910, column: 7, scope: !12200)
!12259 = !DILocation(line: 1911, column: 6, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1911, column: 6)
!12261 = !DILocation(line: 1911, column: 6, scope: !12200)
!12262 = !DILocation(line: 1912, column: 10, scope: !12260)
!12263 = !DILocation(line: 1912, column: 3, scope: !12260)
!12264 = !DILocation(line: 1914, column: 23, scope: !12200)
!12265 = !DILocation(line: 1914, column: 9, scope: !12200)
!12266 = !DILocation(line: 1914, column: 7, scope: !12200)
!12267 = !DILocation(line: 1915, column: 6, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1915, column: 6)
!12269 = !DILocation(line: 1915, column: 6, scope: !12200)
!12270 = !DILocation(line: 1916, column: 10, scope: !12268)
!12271 = !DILocation(line: 1916, column: 3, scope: !12268)
!12272 = !DILocation(line: 1918, column: 2, scope: !12200)
!12273 = !DILocation(line: 1918, column: 2, scope: !12210)
!12274 = !DILocalVariable(name: "__dummy", scope: !12275, file: !3, line: 1918, type: !419)
!12275 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 1918, column: 2)
!12276 = !DILocation(line: 1918, column: 2, scope: !12275)
!12277 = !DILocalVariable(name: "__dummy2", scope: !12275, file: !3, line: 1918, type: !419)
!12278 = !DILocation(line: 1918, column: 2, scope: !12209)
!12279 = !DILocation(line: 1918, column: 2, scope: !12208)
!12280 = !DILocation(line: 1918, column: 2, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 1918, column: 2)
!12282 = !DILocalVariable(name: "__dummy", scope: !12283, file: !3, line: 1918, type: !419)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1918, column: 2)
!12284 = distinct !DILexicalBlock(scope: !12281, file: !3, line: 1918, column: 2)
!12285 = !DILocation(line: 1918, column: 2, scope: !12283)
!12286 = !DILocalVariable(name: "__dummy2", scope: !12283, file: !3, line: 1918, type: !419)
!12287 = !DILocation(line: 1918, column: 2, scope: !12284)
!12288 = !DILocation(line: 1918, column: 2, scope: !12207)
!12289 = !{i32 -2140256534}
!12290 = !DILocation(line: 1918, column: 2, scope: !12206)
!12291 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !12205)
!12292 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !12205)
!12293 = !DILocation(line: 1919, column: 8, scope: !12200)
!12294 = !DILocalVariable(name: "__mptr", scope: !12295, file: !3, line: 1921, type: !280)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 1921, column: 2)
!12296 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1921, column: 2)
!12297 = !DILocation(line: 1921, column: 2, scope: !12295)
!12298 = !DILocation(line: 1921, column: 2, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 1921, column: 2)
!12300 = !DILocation(line: 1921, column: 2, scope: !12296)
!12301 = !DILocation(line: 1921, column: 2, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 1921, column: 2)
!12303 = !DILocation(line: 1922, column: 8, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 1922, column: 7)
!12305 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 1921, column: 54)
!12306 = !DILocation(line: 1922, column: 15, scope: !12304)
!12307 = !DILocation(line: 1922, column: 23, scope: !12304)
!12308 = !DILocation(line: 1922, column: 29, scope: !12304)
!12309 = !DILocation(line: 1923, column: 8, scope: !12304)
!12310 = !DILocation(line: 1923, column: 15, scope: !12304)
!12311 = !DILocation(line: 1923, column: 28, scope: !12304)
!12312 = !DILocation(line: 1923, column: 25, scope: !12304)
!12313 = !DILocation(line: 1923, column: 34, scope: !12304)
!12314 = !DILocation(line: 1923, column: 38, scope: !12304)
!12315 = !DILocation(line: 1923, column: 45, scope: !12304)
!12316 = !DILocation(line: 1923, column: 58, scope: !12304)
!12317 = !DILocation(line: 1923, column: 55, scope: !12304)
!12318 = !DILocation(line: 1922, column: 7, scope: !12305)
!12319 = !DILocation(line: 1924, column: 8, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 1924, column: 8)
!12321 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 1923, column: 65)
!12322 = !DILocation(line: 1924, column: 15, scope: !12320)
!12323 = !DILocation(line: 1924, column: 21, scope: !12320)
!12324 = !DILocation(line: 1924, column: 8, scope: !12321)
!12325 = !DILocation(line: 1925, column: 5, scope: !12320)
!12326 = !DILocation(line: 1926, column: 4, scope: !12321)
!12327 = !DILocation(line: 1926, column: 11, scope: !12321)
!12328 = !DILocation(line: 1926, column: 17, scope: !12321)
!12329 = !DILocation(line: 1927, column: 10, scope: !12321)
!12330 = !DILocation(line: 1928, column: 4, scope: !12321)
!12331 = !DILocation(line: 1930, column: 2, scope: !12305)
!12332 = !DILocalVariable(name: "__mptr", scope: !12333, file: !3, line: 1921, type: !280)
!12333 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 1921, column: 2)
!12334 = !DILocation(line: 1921, column: 2, scope: !12333)
!12335 = !DILocation(line: 1921, column: 2, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 1921, column: 2)
!12337 = distinct !{!12337, !12300, !12338}
!12338 = !DILocation(line: 1930, column: 2, scope: !12296)
!12339 = !DILocation(line: 1931, column: 25, scope: !12200)
!12340 = !DILocation(line: 1931, column: 32, scope: !12200)
!12341 = !DILocation(line: 1931, column: 43, scope: !12200)
!12342 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !12202)
!12343 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !12202)
!12344 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !12202)
!12345 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !12202)
!12346 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !12202)
!12347 = !DILocation(line: 1933, column: 7, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1933, column: 6)
!12349 = !DILocation(line: 1933, column: 6, scope: !12200)
!12350 = !DILocation(line: 1934, column: 3, scope: !12348)
!12351 = !DILocation(line: 1936, column: 28, scope: !12200)
!12352 = !DILocation(line: 1936, column: 9, scope: !12200)
!12353 = !DILocation(line: 1936, column: 7, scope: !12200)
!12354 = !DILocation(line: 1937, column: 9, scope: !12200)
!12355 = !DILocation(line: 1937, column: 16, scope: !12200)
!12356 = !DILocation(line: 1937, column: 23, scope: !12200)
!12357 = !DILocation(line: 1937, column: 2, scope: !12200)
!12358 = !DILocation(line: 1938, column: 1, scope: !12200)
!12359 = distinct !DISubprogram(name: "show_fc_rport_maxframe_size", scope: !3, file: !3, line: 819, type: !5027, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12360 = !DILocalVariable(name: "dev", arg: 1, scope: !12359, file: !3, line: 819, type: !2400)
!12361 = !DILocation(line: 819, column: 1, scope: !12359)
!12362 = !DILocalVariable(name: "attr", arg: 2, scope: !12359, file: !3, line: 819, type: !5021)
!12363 = !DILocalVariable(name: "buf", arg: 3, scope: !12359, file: !3, line: 819, type: !278)
!12364 = !DILocalVariable(name: "rport", scope: !12359, file: !3, line: 819, type: !281)
!12365 = !DILocalVariable(name: "__mptr", scope: !12366, file: !3, line: 819, type: !280)
!12366 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 819, column: 1)
!12367 = !DILocation(line: 819, column: 1, scope: !12366)
!12368 = !DILocation(line: 819, column: 1, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 819, column: 1)
!12370 = distinct !DISubprogram(name: "show_fc_rport_supported_classes", scope: !3, file: !3, line: 822, type: !5027, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12371 = !DILocalVariable(name: "dev", arg: 1, scope: !12370, file: !3, line: 822, type: !2400)
!12372 = !DILocation(line: 822, column: 49, scope: !12370)
!12373 = !DILocalVariable(name: "attr", arg: 2, scope: !12370, file: !3, line: 823, type: !5021)
!12374 = !DILocation(line: 823, column: 31, scope: !12370)
!12375 = !DILocalVariable(name: "buf", arg: 3, scope: !12370, file: !3, line: 823, type: !278)
!12376 = !DILocation(line: 823, column: 43, scope: !12370)
!12377 = !DILocalVariable(name: "rport", scope: !12370, file: !3, line: 825, type: !281)
!12378 = !DILocation(line: 825, column: 19, scope: !12370)
!12379 = !DILocalVariable(name: "__mptr", scope: !12380, file: !3, line: 825, type: !280)
!12380 = distinct !DILexicalBlock(scope: !12370, file: !3, line: 825, column: 27)
!12381 = !DILocation(line: 825, column: 27, scope: !12380)
!12382 = !DILocation(line: 825, column: 27, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12380, file: !3, line: 825, column: 27)
!12384 = !DILocation(line: 826, column: 6, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12370, file: !3, line: 826, column: 6)
!12386 = !DILocation(line: 826, column: 13, scope: !12385)
!12387 = !DILocation(line: 826, column: 31, scope: !12385)
!12388 = !DILocation(line: 826, column: 6, scope: !12370)
!12389 = !DILocation(line: 827, column: 19, scope: !12385)
!12390 = !DILocation(line: 827, column: 10, scope: !12385)
!12391 = !DILocation(line: 827, column: 3, scope: !12385)
!12392 = !DILocation(line: 828, column: 26, scope: !12370)
!12393 = !DILocation(line: 828, column: 33, scope: !12370)
!12394 = !DILocation(line: 828, column: 52, scope: !12370)
!12395 = !DILocation(line: 828, column: 9, scope: !12370)
!12396 = !DILocation(line: 828, column: 2, scope: !12370)
!12397 = !DILocation(line: 829, column: 1, scope: !12370)
!12398 = distinct !DISubprogram(name: "show_fc_rport_dev_loss_tmo", scope: !3, file: !3, line: 882, type: !5027, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12399 = !DILocalVariable(name: "dev", arg: 1, scope: !12398, file: !3, line: 882, type: !2400)
!12400 = !DILocation(line: 882, column: 1, scope: !12398)
!12401 = !DILocalVariable(name: "attr", arg: 2, scope: !12398, file: !3, line: 882, type: !5021)
!12402 = !DILocalVariable(name: "buf", arg: 3, scope: !12398, file: !3, line: 882, type: !278)
!12403 = !DILocalVariable(name: "rport", scope: !12398, file: !3, line: 882, type: !281)
!12404 = !DILocalVariable(name: "__mptr", scope: !12405, file: !3, line: 882, type: !280)
!12405 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 882, column: 1)
!12406 = !DILocation(line: 882, column: 1, scope: !12405)
!12407 = !DILocation(line: 882, column: 1, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 882, column: 1)
!12409 = !DILocalVariable(name: "shost", scope: !12398, file: !3, line: 882, type: !5046)
!12410 = !DILocalVariable(name: "i", scope: !12398, file: !3, line: 882, type: !4984)
!12411 = !DILocalVariable(name: "__mptr", scope: !12412, file: !3, line: 882, type: !280)
!12412 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 882, column: 1)
!12413 = !DILocation(line: 882, column: 1, scope: !12412)
!12414 = !DILocation(line: 882, column: 1, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12412, file: !3, line: 882, column: 1)
!12416 = !DILocation(line: 882, column: 1, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 882, column: 1)
!12418 = distinct !DISubprogram(name: "store_fc_rport_dev_loss_tmo", scope: !3, file: !3, line: 884, type: !5031, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12419 = !DILocalVariable(name: "dev", arg: 1, scope: !12418, file: !3, line: 884, type: !2400)
!12420 = !DILocation(line: 884, column: 44, scope: !12418)
!12421 = !DILocalVariable(name: "attr", arg: 2, scope: !12418, file: !3, line: 884, type: !5021)
!12422 = !DILocation(line: 884, column: 74, scope: !12418)
!12423 = !DILocalVariable(name: "buf", arg: 3, scope: !12418, file: !3, line: 885, type: !318)
!12424 = !DILocation(line: 885, column: 20, scope: !12418)
!12425 = !DILocalVariable(name: "count", arg: 4, scope: !12418, file: !3, line: 885, type: !416)
!12426 = !DILocation(line: 885, column: 32, scope: !12418)
!12427 = !DILocalVariable(name: "rport", scope: !12418, file: !3, line: 887, type: !281)
!12428 = !DILocation(line: 887, column: 19, scope: !12418)
!12429 = !DILocalVariable(name: "__mptr", scope: !12430, file: !3, line: 887, type: !280)
!12430 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 887, column: 27)
!12431 = !DILocation(line: 887, column: 27, scope: !12430)
!12432 = !DILocation(line: 887, column: 27, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 887, column: 27)
!12434 = !DILocalVariable(name: "val", scope: !12418, file: !3, line: 888, type: !419)
!12435 = !DILocation(line: 888, column: 16, scope: !12418)
!12436 = !DILocalVariable(name: "rc", scope: !12418, file: !3, line: 889, type: !355)
!12437 = !DILocation(line: 889, column: 6, scope: !12418)
!12438 = !DILocation(line: 891, column: 26, scope: !12418)
!12439 = !DILocation(line: 891, column: 7, scope: !12418)
!12440 = !DILocation(line: 891, column: 5, scope: !12418)
!12441 = !DILocation(line: 892, column: 6, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 892, column: 6)
!12443 = !DILocation(line: 892, column: 6, scope: !12418)
!12444 = !DILocation(line: 893, column: 10, scope: !12442)
!12445 = !DILocation(line: 893, column: 3, scope: !12442)
!12446 = !DILocation(line: 895, column: 33, scope: !12418)
!12447 = !DILocation(line: 895, column: 40, scope: !12418)
!12448 = !DILocation(line: 895, column: 7, scope: !12418)
!12449 = !DILocation(line: 895, column: 5, scope: !12418)
!12450 = !DILocation(line: 896, column: 6, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 896, column: 6)
!12452 = !DILocation(line: 896, column: 6, scope: !12418)
!12453 = !DILocation(line: 897, column: 10, scope: !12451)
!12454 = !DILocation(line: 897, column: 3, scope: !12451)
!12455 = !DILocation(line: 898, column: 9, scope: !12418)
!12456 = !DILocation(line: 898, column: 2, scope: !12418)
!12457 = !DILocation(line: 899, column: 1, scope: !12418)
!12458 = distinct !DISubprogram(name: "show_fc_rport_node_name", scope: !3, file: !3, line: 906, type: !5027, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12459 = !DILocalVariable(name: "dev", arg: 1, scope: !12458, file: !3, line: 906, type: !2400)
!12460 = !DILocation(line: 906, column: 1, scope: !12458)
!12461 = !DILocalVariable(name: "attr", arg: 2, scope: !12458, file: !3, line: 906, type: !5021)
!12462 = !DILocalVariable(name: "buf", arg: 3, scope: !12458, file: !3, line: 906, type: !278)
!12463 = !DILocalVariable(name: "rport", scope: !12458, file: !3, line: 906, type: !281)
!12464 = !DILocalVariable(name: "__mptr", scope: !12465, file: !3, line: 906, type: !280)
!12465 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 906, column: 1)
!12466 = !DILocation(line: 906, column: 1, scope: !12465)
!12467 = !DILocation(line: 906, column: 1, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12465, file: !3, line: 906, column: 1)
!12469 = distinct !DISubprogram(name: "show_fc_rport_port_name", scope: !3, file: !3, line: 907, type: !5027, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12470 = !DILocalVariable(name: "dev", arg: 1, scope: !12469, file: !3, line: 907, type: !2400)
!12471 = !DILocation(line: 907, column: 1, scope: !12469)
!12472 = !DILocalVariable(name: "attr", arg: 2, scope: !12469, file: !3, line: 907, type: !5021)
!12473 = !DILocalVariable(name: "buf", arg: 3, scope: !12469, file: !3, line: 907, type: !278)
!12474 = !DILocalVariable(name: "rport", scope: !12469, file: !3, line: 907, type: !281)
!12475 = !DILocalVariable(name: "__mptr", scope: !12476, file: !3, line: 907, type: !280)
!12476 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 907, column: 1)
!12477 = !DILocation(line: 907, column: 1, scope: !12476)
!12478 = !DILocation(line: 907, column: 1, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12476, file: !3, line: 907, column: 1)
!12480 = distinct !DISubprogram(name: "show_fc_rport_port_id", scope: !3, file: !3, line: 908, type: !5027, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12481 = !DILocalVariable(name: "dev", arg: 1, scope: !12480, file: !3, line: 908, type: !2400)
!12482 = !DILocation(line: 908, column: 1, scope: !12480)
!12483 = !DILocalVariable(name: "attr", arg: 2, scope: !12480, file: !3, line: 908, type: !5021)
!12484 = !DILocalVariable(name: "buf", arg: 3, scope: !12480, file: !3, line: 908, type: !278)
!12485 = !DILocalVariable(name: "rport", scope: !12480, file: !3, line: 908, type: !281)
!12486 = !DILocalVariable(name: "__mptr", scope: !12487, file: !3, line: 908, type: !280)
!12487 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 908, column: 1)
!12488 = !DILocation(line: 908, column: 1, scope: !12487)
!12489 = !DILocation(line: 908, column: 1, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12487, file: !3, line: 908, column: 1)
!12491 = distinct !DISubprogram(name: "show_fc_rport_roles", scope: !3, file: !3, line: 911, type: !5027, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12492 = !DILocalVariable(name: "dev", arg: 1, scope: !12491, file: !3, line: 911, type: !2400)
!12493 = !DILocation(line: 911, column: 37, scope: !12491)
!12494 = !DILocalVariable(name: "attr", arg: 2, scope: !12491, file: !3, line: 911, type: !5021)
!12495 = !DILocation(line: 911, column: 67, scope: !12491)
!12496 = !DILocalVariable(name: "buf", arg: 3, scope: !12491, file: !3, line: 912, type: !278)
!12497 = !DILocation(line: 912, column: 14, scope: !12491)
!12498 = !DILocalVariable(name: "rport", scope: !12491, file: !3, line: 914, type: !281)
!12499 = !DILocation(line: 914, column: 19, scope: !12491)
!12500 = !DILocalVariable(name: "__mptr", scope: !12501, file: !3, line: 914, type: !280)
!12501 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 914, column: 27)
!12502 = !DILocation(line: 914, column: 27, scope: !12501)
!12503 = !DILocation(line: 914, column: 27, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 914, column: 27)
!12505 = !DILocation(line: 917, column: 7, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 917, column: 6)
!12507 = !DILocation(line: 917, column: 14, scope: !12506)
!12508 = !DILocation(line: 917, column: 22, scope: !12506)
!12509 = !DILocation(line: 917, column: 29, scope: !12506)
!12510 = !DILocation(line: 918, column: 7, scope: !12506)
!12511 = !DILocation(line: 918, column: 14, scope: !12506)
!12512 = !DILocation(line: 918, column: 22, scope: !12506)
!12513 = !DILocation(line: 918, column: 50, scope: !12506)
!12514 = !DILocation(line: 917, column: 6, scope: !12491)
!12515 = !DILocation(line: 920, column: 11, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12506, file: !3, line: 919, column: 32)
!12517 = !DILocation(line: 920, column: 18, scope: !12516)
!12518 = !DILocation(line: 920, column: 26, scope: !12516)
!12519 = !DILocation(line: 920, column: 3, scope: !12516)
!12520 = !DILocation(line: 922, column: 20, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 920, column: 52)
!12522 = !DILocation(line: 922, column: 11, scope: !12521)
!12523 = !DILocation(line: 922, column: 4, scope: !12521)
!12524 = !DILocation(line: 924, column: 20, scope: !12521)
!12525 = !DILocation(line: 924, column: 11, scope: !12521)
!12526 = !DILocation(line: 924, column: 4, scope: !12521)
!12527 = !DILocation(line: 926, column: 20, scope: !12521)
!12528 = !DILocation(line: 926, column: 11, scope: !12521)
!12529 = !DILocation(line: 926, column: 4, scope: !12521)
!12530 = !DILocation(line: 928, column: 20, scope: !12521)
!12531 = !DILocation(line: 928, column: 11, scope: !12521)
!12532 = !DILocation(line: 928, column: 4, scope: !12521)
!12533 = !DILocation(line: 930, column: 20, scope: !12521)
!12534 = !DILocation(line: 930, column: 11, scope: !12521)
!12535 = !DILocation(line: 930, column: 4, scope: !12521)
!12536 = !DILocation(line: 932, column: 20, scope: !12521)
!12537 = !DILocation(line: 932, column: 11, scope: !12521)
!12538 = !DILocation(line: 932, column: 4, scope: !12521)
!12539 = !DILocation(line: 935, column: 7, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !3, line: 935, column: 7)
!12541 = distinct !DILexicalBlock(scope: !12506, file: !3, line: 934, column: 9)
!12542 = !DILocation(line: 935, column: 14, scope: !12540)
!12543 = !DILocation(line: 935, column: 20, scope: !12540)
!12544 = !DILocation(line: 935, column: 7, scope: !12541)
!12545 = !DILocation(line: 936, column: 20, scope: !12540)
!12546 = !DILocation(line: 936, column: 11, scope: !12540)
!12547 = !DILocation(line: 936, column: 4, scope: !12540)
!12548 = !DILocation(line: 937, column: 34, scope: !12541)
!12549 = !DILocation(line: 937, column: 41, scope: !12541)
!12550 = !DILocation(line: 937, column: 48, scope: !12541)
!12551 = !DILocation(line: 937, column: 10, scope: !12541)
!12552 = !DILocation(line: 937, column: 3, scope: !12541)
!12553 = !DILocation(line: 939, column: 1, scope: !12491)
!12554 = distinct !DISubprogram(name: "get_fc_port_roles_names", scope: !3, file: !3, line: 287, type: !11230, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12555 = !DILocalVariable(name: "table_key", arg: 1, scope: !12554, file: !3, line: 287, type: !274)
!12556 = !DILocation(line: 287, column: 1, scope: !12554)
!12557 = !DILocalVariable(name: "buf", arg: 2, scope: !12554, file: !3, line: 287, type: !278)
!12558 = !DILocalVariable(name: "prefix", scope: !12554, file: !3, line: 287, type: !278)
!12559 = !DILocalVariable(name: "len", scope: !12554, file: !3, line: 287, type: !401)
!12560 = !DILocalVariable(name: "i", scope: !12554, file: !3, line: 287, type: !355)
!12561 = !DILocation(line: 287, column: 1, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12554, file: !3, line: 287, column: 1)
!12563 = !DILocation(line: 287, column: 1, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 287, column: 1)
!12565 = !DILocation(line: 287, column: 1, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 287, column: 1)
!12567 = distinct !DILexicalBlock(scope: !12564, file: !3, line: 287, column: 1)
!12568 = !DILocation(line: 287, column: 1, scope: !12567)
!12569 = !DILocation(line: 287, column: 1, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12566, file: !3, line: 287, column: 1)
!12571 = distinct !{!12571, !12561, !12561}
!12572 = distinct !DISubprogram(name: "show_fc_rport_port_state", scope: !3, file: !3, line: 943, type: !5027, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12573 = !DILocalVariable(name: "dev", arg: 1, scope: !12572, file: !3, line: 943, type: !2400)
!12574 = !DILocation(line: 943, column: 1, scope: !12572)
!12575 = !DILocalVariable(name: "attr", arg: 2, scope: !12572, file: !3, line: 943, type: !5021)
!12576 = !DILocalVariable(name: "buf", arg: 3, scope: !12572, file: !3, line: 943, type: !278)
!12577 = !DILocalVariable(name: "rport", scope: !12572, file: !3, line: 943, type: !281)
!12578 = !DILocalVariable(name: "__mptr", scope: !12579, file: !3, line: 943, type: !280)
!12579 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 943, column: 1)
!12580 = !DILocation(line: 943, column: 1, scope: !12579)
!12581 = !DILocation(line: 943, column: 1, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12579, file: !3, line: 943, column: 1)
!12583 = !DILocalVariable(name: "name", scope: !12572, file: !3, line: 943, type: !318)
!12584 = !DILocation(line: 943, column: 1, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 943, column: 1)
!12586 = distinct !DISubprogram(name: "show_fc_rport_scsi_target_id", scope: !3, file: !3, line: 944, type: !5027, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12587 = !DILocalVariable(name: "dev", arg: 1, scope: !12586, file: !3, line: 944, type: !2400)
!12588 = !DILocation(line: 944, column: 1, scope: !12586)
!12589 = !DILocalVariable(name: "attr", arg: 2, scope: !12586, file: !3, line: 944, type: !5021)
!12590 = !DILocalVariable(name: "buf", arg: 3, scope: !12586, file: !3, line: 944, type: !278)
!12591 = !DILocalVariable(name: "rport", scope: !12586, file: !3, line: 944, type: !281)
!12592 = !DILocalVariable(name: "__mptr", scope: !12593, file: !3, line: 944, type: !280)
!12593 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 944, column: 1)
!12594 = !DILocation(line: 944, column: 1, scope: !12593)
!12595 = !DILocation(line: 944, column: 1, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12593, file: !3, line: 944, column: 1)
!12597 = distinct !DISubprogram(name: "show_fc_rport_fast_io_fail_tmo", scope: !3, file: !3, line: 950, type: !5027, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12598 = !DILocalVariable(name: "dev", arg: 1, scope: !12597, file: !3, line: 950, type: !2400)
!12599 = !DILocation(line: 950, column: 48, scope: !12597)
!12600 = !DILocalVariable(name: "attr", arg: 2, scope: !12597, file: !3, line: 951, type: !5021)
!12601 = !DILocation(line: 951, column: 30, scope: !12597)
!12602 = !DILocalVariable(name: "buf", arg: 3, scope: !12597, file: !3, line: 951, type: !278)
!12603 = !DILocation(line: 951, column: 42, scope: !12597)
!12604 = !DILocalVariable(name: "rport", scope: !12597, file: !3, line: 953, type: !281)
!12605 = !DILocation(line: 953, column: 19, scope: !12597)
!12606 = !DILocalVariable(name: "__mptr", scope: !12607, file: !3, line: 953, type: !280)
!12607 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 953, column: 27)
!12608 = !DILocation(line: 953, column: 27, scope: !12607)
!12609 = !DILocation(line: 953, column: 27, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 953, column: 27)
!12611 = !DILocation(line: 955, column: 6, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 955, column: 6)
!12613 = !DILocation(line: 955, column: 13, scope: !12612)
!12614 = !DILocation(line: 955, column: 30, scope: !12612)
!12615 = !DILocation(line: 955, column: 6, scope: !12597)
!12616 = !DILocation(line: 956, column: 19, scope: !12612)
!12617 = !DILocation(line: 956, column: 10, scope: !12612)
!12618 = !DILocation(line: 956, column: 3, scope: !12612)
!12619 = !DILocation(line: 957, column: 18, scope: !12597)
!12620 = !DILocation(line: 957, column: 35, scope: !12597)
!12621 = !DILocation(line: 957, column: 42, scope: !12597)
!12622 = !DILocation(line: 957, column: 9, scope: !12597)
!12623 = !DILocation(line: 957, column: 2, scope: !12597)
!12624 = !DILocation(line: 958, column: 1, scope: !12597)
!12625 = distinct !DISubprogram(name: "store_fc_rport_fast_io_fail_tmo", scope: !3, file: !3, line: 961, type: !5031, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12626 = !DILocalVariable(name: "dev", arg: 1, scope: !12625, file: !3, line: 961, type: !2400)
!12627 = !DILocation(line: 961, column: 48, scope: !12625)
!12628 = !DILocalVariable(name: "attr", arg: 2, scope: !12625, file: !3, line: 962, type: !5021)
!12629 = !DILocation(line: 962, column: 30, scope: !12625)
!12630 = !DILocalVariable(name: "buf", arg: 3, scope: !12625, file: !3, line: 962, type: !318)
!12631 = !DILocation(line: 962, column: 48, scope: !12625)
!12632 = !DILocalVariable(name: "count", arg: 4, scope: !12625, file: !3, line: 963, type: !416)
!12633 = !DILocation(line: 963, column: 12, scope: !12625)
!12634 = !DILocalVariable(name: "val", scope: !12625, file: !3, line: 965, type: !355)
!12635 = !DILocation(line: 965, column: 6, scope: !12625)
!12636 = !DILocalVariable(name: "cp", scope: !12625, file: !3, line: 966, type: !278)
!12637 = !DILocation(line: 966, column: 8, scope: !12625)
!12638 = !DILocalVariable(name: "rport", scope: !12625, file: !3, line: 967, type: !281)
!12639 = !DILocation(line: 967, column: 19, scope: !12625)
!12640 = !DILocalVariable(name: "__mptr", scope: !12641, file: !3, line: 967, type: !280)
!12641 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 967, column: 27)
!12642 = !DILocation(line: 967, column: 27, scope: !12641)
!12643 = !DILocation(line: 967, column: 27, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12641, file: !3, line: 967, column: 27)
!12645 = !DILocation(line: 969, column: 7, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 969, column: 6)
!12647 = !DILocation(line: 969, column: 14, scope: !12646)
!12648 = !DILocation(line: 969, column: 25, scope: !12646)
!12649 = !DILocation(line: 969, column: 50, scope: !12646)
!12650 = !DILocation(line: 970, column: 7, scope: !12646)
!12651 = !DILocation(line: 970, column: 14, scope: !12646)
!12652 = !DILocation(line: 970, column: 25, scope: !12646)
!12653 = !DILocation(line: 970, column: 50, scope: !12646)
!12654 = !DILocation(line: 971, column: 7, scope: !12646)
!12655 = !DILocation(line: 971, column: 14, scope: !12646)
!12656 = !DILocation(line: 971, column: 25, scope: !12646)
!12657 = !DILocation(line: 969, column: 6, scope: !12625)
!12658 = !DILocation(line: 972, column: 3, scope: !12646)
!12659 = !DILocation(line: 973, column: 14, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 973, column: 6)
!12661 = !DILocation(line: 973, column: 6, scope: !12660)
!12662 = !DILocation(line: 973, column: 29, scope: !12660)
!12663 = !DILocation(line: 973, column: 6, scope: !12625)
!12664 = !DILocation(line: 974, column: 3, scope: !12660)
!12665 = !DILocation(line: 974, column: 10, scope: !12660)
!12666 = !DILocation(line: 974, column: 27, scope: !12660)
!12667 = !DILocation(line: 976, column: 24, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12660, file: !3, line: 975, column: 7)
!12669 = !DILocation(line: 976, column: 9, scope: !12668)
!12670 = !DILocation(line: 976, column: 7, scope: !12668)
!12671 = !DILocation(line: 977, column: 9, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 977, column: 7)
!12673 = !DILocation(line: 977, column: 8, scope: !12672)
!12674 = !DILocation(line: 977, column: 12, scope: !12672)
!12675 = !DILocation(line: 977, column: 17, scope: !12672)
!12676 = !DILocation(line: 977, column: 16, scope: !12672)
!12677 = !DILocation(line: 977, column: 20, scope: !12672)
!12678 = !DILocation(line: 977, column: 30, scope: !12672)
!12679 = !DILocation(line: 977, column: 34, scope: !12672)
!12680 = !DILocation(line: 977, column: 38, scope: !12672)
!12681 = !DILocation(line: 977, column: 7, scope: !12668)
!12682 = !DILocation(line: 978, column: 4, scope: !12672)
!12683 = !DILocation(line: 983, column: 8, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 983, column: 7)
!12685 = !DILocation(line: 983, column: 15, scope: !12684)
!12686 = !DILocation(line: 983, column: 22, scope: !12684)
!12687 = !DILocation(line: 983, column: 12, scope: !12684)
!12688 = !DILocation(line: 983, column: 36, scope: !12684)
!12689 = !DILocation(line: 984, column: 8, scope: !12684)
!12690 = !DILocation(line: 984, column: 12, scope: !12684)
!12691 = !DILocation(line: 983, column: 7, scope: !12668)
!12692 = !DILocation(line: 985, column: 4, scope: !12684)
!12693 = !DILocation(line: 987, column: 29, scope: !12668)
!12694 = !DILocation(line: 987, column: 3, scope: !12668)
!12695 = !DILocation(line: 987, column: 10, scope: !12668)
!12696 = !DILocation(line: 987, column: 27, scope: !12668)
!12697 = !DILocation(line: 989, column: 9, scope: !12625)
!12698 = !DILocation(line: 989, column: 2, scope: !12625)
!12699 = !DILocation(line: 990, column: 1, scope: !12625)
!12700 = distinct !DISubprogram(name: "show_fc_vport_vport_state", scope: !3, file: !3, line: 1244, type: !5027, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12701 = !DILocalVariable(name: "dev", arg: 1, scope: !12700, file: !3, line: 1244, type: !2400)
!12702 = !DILocation(line: 1244, column: 1, scope: !12700)
!12703 = !DILocalVariable(name: "attr", arg: 2, scope: !12700, file: !3, line: 1244, type: !5021)
!12704 = !DILocalVariable(name: "buf", arg: 3, scope: !12700, file: !3, line: 1244, type: !278)
!12705 = !DILocalVariable(name: "vport", scope: !12700, file: !3, line: 1244, type: !5538)
!12706 = !DILocalVariable(name: "__mptr", scope: !12707, file: !3, line: 1244, type: !280)
!12707 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 1244, column: 1)
!12708 = !DILocation(line: 1244, column: 1, scope: !12707)
!12709 = !DILocation(line: 1244, column: 1, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12707, file: !3, line: 1244, column: 1)
!12711 = !DILocalVariable(name: "name", scope: !12700, file: !3, line: 1244, type: !318)
!12712 = !DILocation(line: 1244, column: 1, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 1244, column: 1)
!12714 = distinct !DISubprogram(name: "get_fc_vport_state_name", scope: !3, file: !3, line: 178, type: !12715, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12715 = !DISubroutineType(types: !12716)
!12716 = !{!318, !192}
!12717 = !DILocalVariable(name: "table_key", arg: 1, scope: !12714, file: !3, line: 178, type: !192)
!12718 = !DILocation(line: 178, column: 1, scope: !12714)
!12719 = !DILocalVariable(name: "i", scope: !12714, file: !3, line: 178, type: !355)
!12720 = !DILocalVariable(name: "name", scope: !12714, file: !3, line: 178, type: !278)
!12721 = !DILocation(line: 178, column: 1, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 178, column: 1)
!12723 = !DILocation(line: 178, column: 1, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 178, column: 1)
!12725 = !DILocation(line: 178, column: 1, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 178, column: 1)
!12727 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 178, column: 1)
!12728 = !DILocation(line: 178, column: 1, scope: !12727)
!12729 = !DILocation(line: 178, column: 1, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12726, file: !3, line: 178, column: 1)
!12731 = distinct !{!12731, !12721, !12721}
!12732 = distinct !DISubprogram(name: "show_fc_vport_vport_last_state", scope: !3, file: !3, line: 1245, type: !5027, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12733 = !DILocalVariable(name: "dev", arg: 1, scope: !12732, file: !3, line: 1245, type: !2400)
!12734 = !DILocation(line: 1245, column: 1, scope: !12732)
!12735 = !DILocalVariable(name: "attr", arg: 2, scope: !12732, file: !3, line: 1245, type: !5021)
!12736 = !DILocalVariable(name: "buf", arg: 3, scope: !12732, file: !3, line: 1245, type: !278)
!12737 = !DILocalVariable(name: "vport", scope: !12732, file: !3, line: 1245, type: !5538)
!12738 = !DILocalVariable(name: "__mptr", scope: !12739, file: !3, line: 1245, type: !280)
!12739 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 1245, column: 1)
!12740 = !DILocation(line: 1245, column: 1, scope: !12739)
!12741 = !DILocation(line: 1245, column: 1, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1245, column: 1)
!12743 = !DILocalVariable(name: "name", scope: !12732, file: !3, line: 1245, type: !318)
!12744 = !DILocation(line: 1245, column: 1, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 1245, column: 1)
!12746 = distinct !DISubprogram(name: "show_fc_vport_node_name", scope: !3, file: !3, line: 1246, type: !5027, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12747 = !DILocalVariable(name: "dev", arg: 1, scope: !12746, file: !3, line: 1246, type: !2400)
!12748 = !DILocation(line: 1246, column: 1, scope: !12746)
!12749 = !DILocalVariable(name: "attr", arg: 2, scope: !12746, file: !3, line: 1246, type: !5021)
!12750 = !DILocalVariable(name: "buf", arg: 3, scope: !12746, file: !3, line: 1246, type: !278)
!12751 = !DILocalVariable(name: "vport", scope: !12746, file: !3, line: 1246, type: !5538)
!12752 = !DILocalVariable(name: "__mptr", scope: !12753, file: !3, line: 1246, type: !280)
!12753 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 1246, column: 1)
!12754 = !DILocation(line: 1246, column: 1, scope: !12753)
!12755 = !DILocation(line: 1246, column: 1, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 1246, column: 1)
!12757 = distinct !DISubprogram(name: "show_fc_vport_port_name", scope: !3, file: !3, line: 1247, type: !5027, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12758 = !DILocalVariable(name: "dev", arg: 1, scope: !12757, file: !3, line: 1247, type: !2400)
!12759 = !DILocation(line: 1247, column: 1, scope: !12757)
!12760 = !DILocalVariable(name: "attr", arg: 2, scope: !12757, file: !3, line: 1247, type: !5021)
!12761 = !DILocalVariable(name: "buf", arg: 3, scope: !12757, file: !3, line: 1247, type: !278)
!12762 = !DILocalVariable(name: "vport", scope: !12757, file: !3, line: 1247, type: !5538)
!12763 = !DILocalVariable(name: "__mptr", scope: !12764, file: !3, line: 1247, type: !280)
!12764 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1247, column: 1)
!12765 = !DILocation(line: 1247, column: 1, scope: !12764)
!12766 = !DILocation(line: 1247, column: 1, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 1247, column: 1)
!12768 = distinct !DISubprogram(name: "show_fc_vport_roles", scope: !3, file: !3, line: 1250, type: !5027, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12769 = !DILocalVariable(name: "dev", arg: 1, scope: !12768, file: !3, line: 1250, type: !2400)
!12770 = !DILocation(line: 1250, column: 37, scope: !12768)
!12771 = !DILocalVariable(name: "attr", arg: 2, scope: !12768, file: !3, line: 1250, type: !5021)
!12772 = !DILocation(line: 1250, column: 67, scope: !12768)
!12773 = !DILocalVariable(name: "buf", arg: 3, scope: !12768, file: !3, line: 1251, type: !278)
!12774 = !DILocation(line: 1251, column: 14, scope: !12768)
!12775 = !DILocalVariable(name: "vport", scope: !12768, file: !3, line: 1253, type: !5538)
!12776 = !DILocation(line: 1253, column: 19, scope: !12768)
!12777 = !DILocalVariable(name: "__mptr", scope: !12778, file: !3, line: 1253, type: !280)
!12778 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 1253, column: 27)
!12779 = !DILocation(line: 1253, column: 27, scope: !12778)
!12780 = !DILocation(line: 1253, column: 27, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 1253, column: 27)
!12782 = !DILocation(line: 1255, column: 6, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 1255, column: 6)
!12784 = !DILocation(line: 1255, column: 13, scope: !12783)
!12785 = !DILocation(line: 1255, column: 19, scope: !12783)
!12786 = !DILocation(line: 1255, column: 6, scope: !12768)
!12787 = !DILocation(line: 1256, column: 19, scope: !12783)
!12788 = !DILocation(line: 1256, column: 10, scope: !12783)
!12789 = !DILocation(line: 1256, column: 3, scope: !12783)
!12790 = !DILocation(line: 1257, column: 33, scope: !12768)
!12791 = !DILocation(line: 1257, column: 40, scope: !12768)
!12792 = !DILocation(line: 1257, column: 47, scope: !12768)
!12793 = !DILocation(line: 1257, column: 9, scope: !12768)
!12794 = !DILocation(line: 1257, column: 2, scope: !12768)
!12795 = !DILocation(line: 1258, column: 1, scope: !12768)
!12796 = distinct !DISubprogram(name: "show_fc_vport_vport_type", scope: !3, file: !3, line: 1261, type: !5027, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12797 = !DILocalVariable(name: "dev", arg: 1, scope: !12796, file: !3, line: 1261, type: !2400)
!12798 = !DILocation(line: 1261, column: 1, scope: !12796)
!12799 = !DILocalVariable(name: "attr", arg: 2, scope: !12796, file: !3, line: 1261, type: !5021)
!12800 = !DILocalVariable(name: "buf", arg: 3, scope: !12796, file: !3, line: 1261, type: !278)
!12801 = !DILocalVariable(name: "vport", scope: !12796, file: !3, line: 1261, type: !5538)
!12802 = !DILocalVariable(name: "__mptr", scope: !12803, file: !3, line: 1261, type: !280)
!12803 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 1261, column: 1)
!12804 = !DILocation(line: 1261, column: 1, scope: !12803)
!12805 = !DILocation(line: 1261, column: 1, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 1261, column: 1)
!12807 = !DILocalVariable(name: "name", scope: !12796, file: !3, line: 1261, type: !318)
!12808 = !DILocation(line: 1261, column: 1, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 1261, column: 1)
!12810 = distinct !DISubprogram(name: "show_fc_vport_symbolic_name", scope: !3, file: !3, line: 1263, type: !5027, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12811 = !DILocalVariable(name: "dev", arg: 1, scope: !12810, file: !3, line: 1263, type: !2400)
!12812 = !DILocation(line: 1263, column: 1, scope: !12810)
!12813 = !DILocalVariable(name: "attr", arg: 2, scope: !12810, file: !3, line: 1263, type: !5021)
!12814 = !DILocalVariable(name: "buf", arg: 3, scope: !12810, file: !3, line: 1263, type: !278)
!12815 = !DILocalVariable(name: "vport", scope: !12810, file: !3, line: 1263, type: !5538)
!12816 = !DILocalVariable(name: "__mptr", scope: !12817, file: !3, line: 1263, type: !280)
!12817 = distinct !DILexicalBlock(scope: !12810, file: !3, line: 1263, column: 1)
!12818 = !DILocation(line: 1263, column: 1, scope: !12817)
!12819 = !DILocation(line: 1263, column: 1, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12817, file: !3, line: 1263, column: 1)
!12821 = distinct !DISubprogram(name: "store_fc_vport_symbolic_name", scope: !3, file: !3, line: 1265, type: !5031, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12822 = !DILocalVariable(name: "dev", arg: 1, scope: !12821, file: !3, line: 1265, type: !2400)
!12823 = !DILocation(line: 1265, column: 1, scope: !12821)
!12824 = !DILocalVariable(name: "attr", arg: 2, scope: !12821, file: !3, line: 1265, type: !5021)
!12825 = !DILocalVariable(name: "buf", arg: 3, scope: !12821, file: !3, line: 1265, type: !318)
!12826 = !DILocalVariable(name: "count", arg: 4, scope: !12821, file: !3, line: 1265, type: !416)
!12827 = !DILocalVariable(name: "vport", scope: !12821, file: !3, line: 1265, type: !5538)
!12828 = !DILocalVariable(name: "__mptr", scope: !12829, file: !3, line: 1265, type: !280)
!12829 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 1265, column: 1)
!12830 = !DILocation(line: 1265, column: 1, scope: !12829)
!12831 = !DILocation(line: 1265, column: 1, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 1265, column: 1)
!12833 = !DILocalVariable(name: "shost", scope: !12821, file: !3, line: 1265, type: !5046)
!12834 = !DILocalVariable(name: "i", scope: !12821, file: !3, line: 1265, type: !4984)
!12835 = !DILocalVariable(name: "__mptr", scope: !12836, file: !3, line: 1265, type: !280)
!12836 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 1265, column: 1)
!12837 = !DILocation(line: 1265, column: 1, scope: !12836)
!12838 = !DILocation(line: 1265, column: 1, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 1265, column: 1)
!12840 = !DILocalVariable(name: "cnt", scope: !12821, file: !3, line: 1265, type: !7)
!12841 = !DILocation(line: 1265, column: 1, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 1265, column: 1)
!12843 = !DILocation(line: 1265, column: 1, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 1265, column: 1)
!12845 = distinct !DISubprogram(name: "store_fc_vport_delete", scope: !3, file: !3, line: 1270, type: !5031, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12846 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !12847)
!12847 = distinct !DILocation(line: 1283, column: 2, scope: !12845)
!12848 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !12847)
!12849 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !12850)
!12850 = distinct !DILocation(line: 1279, column: 3, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !3, line: 1278, column: 77)
!12852 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 1278, column: 6)
!12853 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !12850)
!12854 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !12855)
!12855 = distinct !DILocation(line: 1277, column: 2, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 1277, column: 2)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 1277, column: 2)
!12858 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 1277, column: 2)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !3, line: 1277, column: 2)
!12860 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 1277, column: 2)
!12861 = !DILocalVariable(name: "dev", arg: 1, scope: !12845, file: !3, line: 1270, type: !2400)
!12862 = !DILocation(line: 1270, column: 38, scope: !12845)
!12863 = !DILocalVariable(name: "attr", arg: 2, scope: !12845, file: !3, line: 1270, type: !5021)
!12864 = !DILocation(line: 1270, column: 68, scope: !12845)
!12865 = !DILocalVariable(name: "buf", arg: 3, scope: !12845, file: !3, line: 1271, type: !318)
!12866 = !DILocation(line: 1271, column: 21, scope: !12845)
!12867 = !DILocalVariable(name: "count", arg: 4, scope: !12845, file: !3, line: 1271, type: !416)
!12868 = !DILocation(line: 1271, column: 33, scope: !12845)
!12869 = !DILocalVariable(name: "vport", scope: !12845, file: !3, line: 1273, type: !5538)
!12870 = !DILocation(line: 1273, column: 19, scope: !12845)
!12871 = !DILocalVariable(name: "__mptr", scope: !12872, file: !3, line: 1273, type: !280)
!12872 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 1273, column: 27)
!12873 = !DILocation(line: 1273, column: 27, scope: !12872)
!12874 = !DILocation(line: 1273, column: 27, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 1273, column: 27)
!12876 = !DILocalVariable(name: "shost", scope: !12845, file: !3, line: 1274, type: !5046)
!12877 = !DILocation(line: 1274, column: 20, scope: !12845)
!12878 = !DILocation(line: 1274, column: 28, scope: !12845)
!12879 = !DILocalVariable(name: "flags", scope: !12845, file: !3, line: 1275, type: !419)
!12880 = !DILocation(line: 1275, column: 16, scope: !12845)
!12881 = !DILocation(line: 1277, column: 2, scope: !12845)
!12882 = !DILocation(line: 1277, column: 2, scope: !12860)
!12883 = !DILocalVariable(name: "__dummy", scope: !12884, file: !3, line: 1277, type: !419)
!12884 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 1277, column: 2)
!12885 = !DILocation(line: 1277, column: 2, scope: !12884)
!12886 = !DILocalVariable(name: "__dummy2", scope: !12884, file: !3, line: 1277, type: !419)
!12887 = !DILocation(line: 1277, column: 2, scope: !12859)
!12888 = !DILocation(line: 1277, column: 2, scope: !12858)
!12889 = !DILocation(line: 1277, column: 2, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 1277, column: 2)
!12891 = !DILocalVariable(name: "__dummy", scope: !12892, file: !3, line: 1277, type: !419)
!12892 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 1277, column: 2)
!12893 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 1277, column: 2)
!12894 = !DILocation(line: 1277, column: 2, scope: !12892)
!12895 = !DILocalVariable(name: "__dummy2", scope: !12892, file: !3, line: 1277, type: !419)
!12896 = !DILocation(line: 1277, column: 2, scope: !12893)
!12897 = !DILocation(line: 1277, column: 2, scope: !12857)
!12898 = !{i32 -2140448527}
!12899 = !DILocation(line: 1277, column: 2, scope: !12856)
!12900 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !12855)
!12901 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !12855)
!12902 = !DILocation(line: 1278, column: 6, scope: !12852)
!12903 = !DILocation(line: 1278, column: 13, scope: !12852)
!12904 = !DILocation(line: 1278, column: 19, scope: !12852)
!12905 = !DILocation(line: 1278, column: 6, scope: !12845)
!12906 = !DILocation(line: 1279, column: 26, scope: !12851)
!12907 = !DILocation(line: 1279, column: 33, scope: !12851)
!12908 = !DILocation(line: 1279, column: 44, scope: !12851)
!12909 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !12850)
!12910 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !12850)
!12911 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !12850)
!12912 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !12850)
!12913 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !12850)
!12914 = !DILocation(line: 1280, column: 3, scope: !12851)
!12915 = !DILocation(line: 1282, column: 2, scope: !12845)
!12916 = !DILocation(line: 1282, column: 9, scope: !12845)
!12917 = !DILocation(line: 1282, column: 15, scope: !12845)
!12918 = !DILocation(line: 1283, column: 25, scope: !12845)
!12919 = !DILocation(line: 1283, column: 32, scope: !12845)
!12920 = !DILocation(line: 1283, column: 43, scope: !12845)
!12921 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !12847)
!12922 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !12847)
!12923 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !12847)
!12924 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !12847)
!12925 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !12847)
!12926 = !DILocation(line: 1285, column: 16, scope: !12845)
!12927 = !DILocation(line: 1285, column: 24, scope: !12845)
!12928 = !DILocation(line: 1285, column: 31, scope: !12845)
!12929 = !DILocation(line: 1285, column: 2, scope: !12845)
!12930 = !DILocation(line: 1286, column: 9, scope: !12845)
!12931 = !DILocation(line: 1286, column: 2, scope: !12845)
!12932 = !DILocation(line: 1287, column: 1, scope: !12845)
!12933 = distinct !DISubprogram(name: "store_fc_vport_disable", scope: !3, file: !3, line: 1297, type: !5031, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!12934 = !DILocalVariable(name: "dev", arg: 1, scope: !12933, file: !3, line: 1297, type: !2400)
!12935 = !DILocation(line: 1297, column: 39, scope: !12933)
!12936 = !DILocalVariable(name: "attr", arg: 2, scope: !12933, file: !3, line: 1297, type: !5021)
!12937 = !DILocation(line: 1297, column: 69, scope: !12933)
!12938 = !DILocalVariable(name: "buf", arg: 3, scope: !12933, file: !3, line: 1298, type: !318)
!12939 = !DILocation(line: 1298, column: 22, scope: !12933)
!12940 = !DILocalVariable(name: "count", arg: 4, scope: !12933, file: !3, line: 1299, type: !416)
!12941 = !DILocation(line: 1299, column: 14, scope: !12933)
!12942 = !DILocalVariable(name: "vport", scope: !12933, file: !3, line: 1301, type: !5538)
!12943 = !DILocation(line: 1301, column: 19, scope: !12933)
!12944 = !DILocalVariable(name: "__mptr", scope: !12945, file: !3, line: 1301, type: !280)
!12945 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 1301, column: 27)
!12946 = !DILocation(line: 1301, column: 27, scope: !12945)
!12947 = !DILocation(line: 1301, column: 27, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 1301, column: 27)
!12949 = !DILocalVariable(name: "shost", scope: !12933, file: !3, line: 1302, type: !5046)
!12950 = !DILocation(line: 1302, column: 20, scope: !12933)
!12951 = !DILocation(line: 1302, column: 28, scope: !12933)
!12952 = !DILocalVariable(name: "i", scope: !12933, file: !3, line: 1303, type: !4984)
!12953 = !DILocation(line: 1303, column: 22, scope: !12933)
!12954 = !DILocalVariable(name: "__mptr", scope: !12955, file: !3, line: 1303, type: !280)
!12955 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 1303, column: 26)
!12956 = !DILocation(line: 1303, column: 26, scope: !12955)
!12957 = !DILocation(line: 1303, column: 26, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 1303, column: 26)
!12959 = !DILocalVariable(name: "stat", scope: !12933, file: !3, line: 1304, type: !355)
!12960 = !DILocation(line: 1304, column: 6, scope: !12933)
!12961 = !DILocation(line: 1306, column: 6, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 1306, column: 6)
!12963 = !DILocation(line: 1306, column: 13, scope: !12962)
!12964 = !DILocation(line: 1306, column: 19, scope: !12962)
!12965 = !DILocation(line: 1306, column: 6, scope: !12933)
!12966 = !DILocation(line: 1307, column: 3, scope: !12962)
!12967 = !DILocation(line: 1309, column: 7, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 1309, column: 6)
!12969 = !DILocation(line: 1309, column: 6, scope: !12968)
!12970 = !DILocation(line: 1309, column: 11, scope: !12968)
!12971 = !DILocation(line: 1309, column: 6, scope: !12933)
!12972 = !DILocation(line: 1310, column: 7, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 1310, column: 7)
!12974 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 1309, column: 19)
!12975 = !DILocation(line: 1310, column: 14, scope: !12973)
!12976 = !DILocation(line: 1310, column: 26, scope: !12973)
!12977 = !DILocation(line: 1310, column: 7, scope: !12974)
!12978 = !DILocation(line: 1311, column: 4, scope: !12973)
!12979 = !DILocation(line: 1312, column: 2, scope: !12974)
!12980 = !DILocation(line: 1312, column: 14, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 1312, column: 13)
!12982 = !DILocation(line: 1312, column: 13, scope: !12981)
!12983 = !DILocation(line: 1312, column: 18, scope: !12981)
!12984 = !DILocation(line: 1312, column: 13, scope: !12968)
!12985 = !DILocation(line: 1313, column: 7, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 1313, column: 7)
!12987 = distinct !DILexicalBlock(scope: !12981, file: !3, line: 1312, column: 26)
!12988 = !DILocation(line: 1313, column: 14, scope: !12986)
!12989 = !DILocation(line: 1313, column: 26, scope: !12986)
!12990 = !DILocation(line: 1313, column: 7, scope: !12987)
!12991 = !DILocation(line: 1314, column: 4, scope: !12986)
!12992 = !DILocation(line: 1315, column: 2, scope: !12987)
!12993 = !DILocation(line: 1316, column: 3, scope: !12981)
!12994 = !DILocation(line: 1318, column: 9, scope: !12933)
!12995 = !DILocation(line: 1318, column: 12, scope: !12933)
!12996 = !DILocation(line: 1318, column: 15, scope: !12933)
!12997 = !DILocation(line: 1318, column: 29, scope: !12933)
!12998 = !DILocation(line: 1318, column: 39, scope: !12933)
!12999 = !DILocation(line: 1318, column: 38, scope: !12933)
!13000 = !DILocation(line: 1318, column: 43, scope: !12933)
!13001 = !DILocation(line: 1318, column: 37, scope: !12933)
!13002 = !DILocation(line: 1318, column: 36, scope: !12933)
!13003 = !DILocation(line: 1318, column: 7, scope: !12933)
!13004 = !DILocation(line: 1319, column: 9, scope: !12933)
!13005 = !DILocation(line: 1319, column: 16, scope: !12933)
!13006 = !DILocation(line: 1319, column: 23, scope: !12933)
!13007 = !DILocation(line: 1319, column: 2, scope: !12933)
!13008 = !DILocation(line: 1320, column: 1, scope: !12933)
!13009 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7832, file: !7832, line: 646, type: !7833, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13010 = !DILocalVariable(name: "__ret", scope: !13011, file: !7832, line: 648, type: !419)
!13011 = distinct !DILexicalBlock(scope: !13009, file: !7832, line: 648, column: 9)
!13012 = !DILocation(line: 648, column: 9, scope: !13011)
!13013 = !DILocalVariable(name: "__edi", scope: !13011, file: !7832, line: 648, type: !419)
!13014 = !DILocalVariable(name: "__esi", scope: !13011, file: !7832, line: 648, type: !419)
!13015 = !DILocalVariable(name: "__edx", scope: !13011, file: !7832, line: 648, type: !419)
!13016 = !DILocalVariable(name: "__ecx", scope: !13011, file: !7832, line: 648, type: !419)
!13017 = !DILocalVariable(name: "__eax", scope: !13011, file: !7832, line: 648, type: !419)
!13018 = !DILocation(line: 648, column: 9, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !7832, line: 648, column: 9)
!13020 = distinct !DILexicalBlock(scope: !13011, file: !7832, line: 648, column: 9)
!13021 = !{i32 -2145674839, i32 -2145672524, i32 -2145672290, i32 -2145672239, i32 -2145672211, i32 -2145672186, i32 -2145672502, i32 -2145672489, i32 -2145672051, i32 -2145671932, i32 -2145672397, i32 -2145672370, i32 -2145672342, i32 -2145672312}
!13022 = !DILocalVariable(name: "__mask", scope: !13023, file: !7832, line: 648, type: !419)
!13023 = distinct !DILexicalBlock(scope: !13019, file: !7832, line: 648, column: 9)
!13024 = !DILocation(line: 648, column: 9, scope: !13023)
!13025 = !DILocation(line: 648, column: 9, scope: !13020)
!13026 = !DILocation(line: 648, column: 2, scope: !13009)
!13027 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7832, file: !7832, line: 656, type: !2155, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13028 = !DILocalVariable(name: "__edi", scope: !13029, file: !7832, line: 658, type: !419)
!13029 = distinct !DILexicalBlock(scope: !13027, file: !7832, line: 658, column: 2)
!13030 = !DILocation(line: 658, column: 2, scope: !13029)
!13031 = !DILocalVariable(name: "__esi", scope: !13029, file: !7832, line: 658, type: !419)
!13032 = !DILocalVariable(name: "__edx", scope: !13029, file: !7832, line: 658, type: !419)
!13033 = !DILocalVariable(name: "__ecx", scope: !13029, file: !7832, line: 658, type: !419)
!13034 = !DILocalVariable(name: "__eax", scope: !13029, file: !7832, line: 658, type: !419)
!13035 = !{i32 -2145667745, i32 -2145667013, i32 -2145666779, i32 -2145666728, i32 -2145666700, i32 -2145666675, i32 -2145666991, i32 -2145666978, i32 -2145666540, i32 -2145666421, i32 -2145666886, i32 -2145666859, i32 -2145666831, i32 -2145666801}
!13036 = !DILocation(line: 659, column: 1, scope: !13027)
!13037 = distinct !DISubprogram(name: "queue_work", scope: !238, file: !238, line: 504, type: !13038, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13038 = !DISubroutineType(types: !13039)
!13039 = !{!577, !2282, !2279}
!13040 = !DILocalVariable(name: "wq", arg: 1, scope: !13037, file: !238, line: 504, type: !2282)
!13041 = !DILocation(line: 504, column: 56, scope: !13037)
!13042 = !DILocalVariable(name: "work", arg: 2, scope: !13037, file: !238, line: 505, type: !2279)
!13043 = !DILocation(line: 505, column: 30, scope: !13037)
!13044 = !DILocation(line: 507, column: 41, scope: !13037)
!13045 = !DILocation(line: 507, column: 45, scope: !13037)
!13046 = !DILocation(line: 507, column: 9, scope: !13037)
!13047 = !DILocation(line: 507, column: 2, scope: !13037)
!13048 = distinct !DISubprogram(name: "__list_del_entry", scope: !7865, file: !7865, line: 130, type: !7866, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13049 = !DILocalVariable(name: "entry", arg: 1, scope: !13048, file: !7865, line: 130, type: !308)
!13050 = !DILocation(line: 130, column: 55, scope: !13048)
!13051 = !DILocation(line: 132, column: 30, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13048, file: !7865, line: 132, column: 6)
!13053 = !DILocation(line: 132, column: 7, scope: !13052)
!13054 = !DILocation(line: 132, column: 6, scope: !13048)
!13055 = !DILocation(line: 133, column: 3, scope: !13052)
!13056 = !DILocation(line: 135, column: 13, scope: !13048)
!13057 = !DILocation(line: 135, column: 20, scope: !13048)
!13058 = !DILocation(line: 135, column: 26, scope: !13048)
!13059 = !DILocation(line: 135, column: 33, scope: !13048)
!13060 = !DILocation(line: 135, column: 2, scope: !13048)
!13061 = !DILocation(line: 136, column: 1, scope: !13048)
!13062 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7865, file: !7865, line: 51, type: !13063, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!577, !308}
!13065 = !DILocalVariable(name: "entry", arg: 1, scope: !13062, file: !7865, line: 51, type: !308)
!13066 = !DILocation(line: 51, column: 61, scope: !13062)
!13067 = !DILocation(line: 53, column: 2, scope: !13062)
!13068 = distinct !DISubprogram(name: "__list_del", scope: !7865, file: !7865, line: 110, type: !8380, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13069 = !DILocalVariable(name: "prev", arg: 1, scope: !13068, file: !7865, line: 110, type: !308)
!13070 = !DILocation(line: 110, column: 50, scope: !13068)
!13071 = !DILocalVariable(name: "next", arg: 2, scope: !13068, file: !7865, line: 110, type: !308)
!13072 = !DILocation(line: 110, column: 75, scope: !13068)
!13073 = !DILocation(line: 112, column: 15, scope: !13068)
!13074 = !DILocation(line: 112, column: 2, scope: !13068)
!13075 = !DILocation(line: 112, column: 8, scope: !13068)
!13076 = !DILocation(line: 112, column: 13, scope: !13068)
!13077 = !DILocation(line: 113, column: 2, scope: !13068)
!13078 = !DILocation(line: 113, column: 2, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13068, file: !7865, line: 113, column: 2)
!13080 = !DILocation(line: 113, column: 2, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13079, file: !7865, line: 113, column: 2)
!13082 = !DILocation(line: 113, column: 2, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13079, file: !7865, line: 113, column: 2)
!13084 = !DILocation(line: 114, column: 1, scope: !13068)
!13085 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7832, file: !7832, line: 651, type: !13086, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13086 = !DISubroutineType(types: !13087)
!13087 = !{null, !419}
!13088 = !DILocalVariable(name: "f", arg: 1, scope: !13085, file: !7832, line: 651, type: !419)
!13089 = !DILocation(line: 651, column: 65, scope: !13085)
!13090 = !DILocalVariable(name: "__edi", scope: !13091, file: !7832, line: 653, type: !419)
!13091 = distinct !DILexicalBlock(scope: !13085, file: !7832, line: 653, column: 2)
!13092 = !DILocation(line: 653, column: 2, scope: !13091)
!13093 = !DILocalVariable(name: "__esi", scope: !13091, file: !7832, line: 653, type: !419)
!13094 = !DILocalVariable(name: "__edx", scope: !13091, file: !7832, line: 653, type: !419)
!13095 = !DILocalVariable(name: "__ecx", scope: !13091, file: !7832, line: 653, type: !419)
!13096 = !DILocalVariable(name: "__eax", scope: !13091, file: !7832, line: 653, type: !419)
!13097 = !{i32 -2145670372, i32 -2145669622, i32 -2145669388, i32 -2145669337, i32 -2145669309, i32 -2145669284, i32 -2145669600, i32 -2145669587, i32 -2145669149, i32 -2145669030, i32 -2145669495, i32 -2145669468, i32 -2145669440, i32 -2145669410}
!13098 = !DILocation(line: 654, column: 1, scope: !13085)
!13099 = distinct !DISubprogram(name: "list_add_tail", scope: !7865, file: !7865, line: 98, type: !8380, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13100 = !DILocalVariable(name: "new", arg: 1, scope: !13099, file: !7865, line: 98, type: !308)
!13101 = !DILocation(line: 98, column: 52, scope: !13099)
!13102 = !DILocalVariable(name: "head", arg: 2, scope: !13099, file: !7865, line: 98, type: !308)
!13103 = !DILocation(line: 98, column: 75, scope: !13099)
!13104 = !DILocation(line: 100, column: 13, scope: !13099)
!13105 = !DILocation(line: 100, column: 18, scope: !13099)
!13106 = !DILocation(line: 100, column: 24, scope: !13099)
!13107 = !DILocation(line: 100, column: 30, scope: !13099)
!13108 = !DILocation(line: 100, column: 2, scope: !13099)
!13109 = !DILocation(line: 101, column: 1, scope: !13099)
!13110 = distinct !DISubprogram(name: "__list_add", scope: !7865, file: !7865, line: 63, type: !13111, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13111 = !DISubroutineType(types: !13112)
!13112 = !{null, !308, !308, !308}
!13113 = !DILocalVariable(name: "new", arg: 1, scope: !13110, file: !7865, line: 63, type: !308)
!13114 = !DILocation(line: 63, column: 49, scope: !13110)
!13115 = !DILocalVariable(name: "prev", arg: 2, scope: !13110, file: !7865, line: 64, type: !308)
!13116 = !DILocation(line: 64, column: 28, scope: !13110)
!13117 = !DILocalVariable(name: "next", arg: 3, scope: !13110, file: !7865, line: 65, type: !308)
!13118 = !DILocation(line: 65, column: 28, scope: !13110)
!13119 = !DILocation(line: 67, column: 24, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13110, file: !7865, line: 67, column: 6)
!13121 = !DILocation(line: 67, column: 29, scope: !13120)
!13122 = !DILocation(line: 67, column: 35, scope: !13120)
!13123 = !DILocation(line: 67, column: 7, scope: !13120)
!13124 = !DILocation(line: 67, column: 6, scope: !13110)
!13125 = !DILocation(line: 68, column: 3, scope: !13120)
!13126 = !DILocation(line: 70, column: 15, scope: !13110)
!13127 = !DILocation(line: 70, column: 2, scope: !13110)
!13128 = !DILocation(line: 70, column: 8, scope: !13110)
!13129 = !DILocation(line: 70, column: 13, scope: !13110)
!13130 = !DILocation(line: 71, column: 14, scope: !13110)
!13131 = !DILocation(line: 71, column: 2, scope: !13110)
!13132 = !DILocation(line: 71, column: 7, scope: !13110)
!13133 = !DILocation(line: 71, column: 12, scope: !13110)
!13134 = !DILocation(line: 72, column: 14, scope: !13110)
!13135 = !DILocation(line: 72, column: 2, scope: !13110)
!13136 = !DILocation(line: 72, column: 7, scope: !13110)
!13137 = !DILocation(line: 72, column: 12, scope: !13110)
!13138 = !DILocation(line: 73, column: 2, scope: !13110)
!13139 = !DILocation(line: 73, column: 2, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13110, file: !7865, line: 73, column: 2)
!13141 = !DILocation(line: 73, column: 2, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13140, file: !7865, line: 73, column: 2)
!13143 = !DILocation(line: 73, column: 2, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13140, file: !7865, line: 73, column: 2)
!13145 = !DILocation(line: 74, column: 1, scope: !13110)
!13146 = distinct !DISubprogram(name: "__list_add_valid", scope: !7865, file: !7865, line: 45, type: !13147, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13147 = !DISubroutineType(types: !13148)
!13148 = !{!577, !308, !308, !308}
!13149 = !DILocalVariable(name: "new", arg: 1, scope: !13146, file: !7865, line: 45, type: !308)
!13150 = !DILocation(line: 45, column: 55, scope: !13146)
!13151 = !DILocalVariable(name: "prev", arg: 2, scope: !13146, file: !7865, line: 46, type: !308)
!13152 = !DILocation(line: 46, column: 23, scope: !13146)
!13153 = !DILocalVariable(name: "next", arg: 3, scope: !13146, file: !7865, line: 47, type: !308)
!13154 = !DILocation(line: 47, column: 23, scope: !13146)
!13155 = !DILocation(line: 49, column: 2, scope: !13146)
!13156 = distinct !DISubprogram(name: "__init_work", scope: !238, file: !238, line: 215, type: !13157, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13157 = !DISubroutineType(types: !13158)
!13158 = !{null, !2279, !355}
!13159 = !DILocalVariable(name: "work", arg: 1, scope: !13156, file: !238, line: 215, type: !2279)
!13160 = !DILocation(line: 215, column: 52, scope: !13156)
!13161 = !DILocalVariable(name: "onstack", arg: 2, scope: !13156, file: !238, line: 215, type: !355)
!13162 = !DILocation(line: 215, column: 62, scope: !13156)
!13163 = !DILocation(line: 215, column: 73, scope: !13156)
!13164 = distinct !DISubprogram(name: "fc_timeout_deleted_rport", scope: !3, file: !3, line: 3084, type: !2277, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13165 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13166)
!13166 = distinct !DILocation(line: 3200, column: 2, scope: !13164)
!13167 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13166)
!13168 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !13169)
!13169 = distinct !DILocation(line: 3167, column: 2, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !3, line: 3167, column: 2)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 3167, column: 2)
!13172 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 3167, column: 2)
!13173 = distinct !DILexicalBlock(scope: !13174, file: !3, line: 3167, column: 2)
!13174 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3167, column: 2)
!13175 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 3164, column: 2, scope: !13164)
!13177 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13176)
!13178 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13179)
!13179 = distinct !DILocation(line: 3134, column: 3, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !3, line: 3126, column: 37)
!13181 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3125, column: 6)
!13182 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13179)
!13183 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13184)
!13184 = distinct !DILocation(line: 3117, column: 3, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 3116, column: 49)
!13186 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3116, column: 6)
!13187 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13184)
!13188 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13189)
!13189 = distinct !DILocation(line: 3109, column: 3, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !3, line: 3105, column: 49)
!13191 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3103, column: 6)
!13192 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13189)
!13193 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !13194)
!13194 = distinct !DILocation(line: 3094, column: 2, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 3094, column: 2)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 3094, column: 2)
!13197 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 3094, column: 2)
!13198 = distinct !DILexicalBlock(scope: !13199, file: !3, line: 3094, column: 2)
!13199 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3094, column: 2)
!13200 = !DILocalVariable(name: "work", arg: 1, scope: !13164, file: !3, line: 3084, type: !2279)
!13201 = !DILocation(line: 3084, column: 46, scope: !13164)
!13202 = !DILocalVariable(name: "rport", scope: !13164, file: !3, line: 3086, type: !281)
!13203 = !DILocation(line: 3086, column: 19, scope: !13164)
!13204 = !DILocalVariable(name: "__mptr", scope: !13205, file: !3, line: 3087, type: !280)
!13205 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3087, column: 3)
!13206 = !DILocation(line: 3087, column: 3, scope: !13205)
!13207 = !DILocation(line: 3087, column: 3, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13205, file: !3, line: 3087, column: 3)
!13209 = !DILocalVariable(name: "shost", scope: !13164, file: !3, line: 3088, type: !5046)
!13210 = !DILocation(line: 3088, column: 20, scope: !13164)
!13211 = !DILocation(line: 3088, column: 28, scope: !13164)
!13212 = !DILocalVariable(name: "i", scope: !13164, file: !3, line: 3089, type: !4984)
!13213 = !DILocation(line: 3089, column: 22, scope: !13164)
!13214 = !DILocalVariable(name: "__mptr", scope: !13215, file: !3, line: 3089, type: !280)
!13215 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3089, column: 26)
!13216 = !DILocation(line: 3089, column: 26, scope: !13215)
!13217 = !DILocation(line: 3089, column: 26, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 3089, column: 26)
!13219 = !DILocalVariable(name: "fc_host", scope: !13164, file: !3, line: 3090, type: !5655)
!13220 = !DILocation(line: 3090, column: 24, scope: !13164)
!13221 = !DILocation(line: 3090, column: 34, scope: !13164)
!13222 = !DILocalVariable(name: "flags", scope: !13164, file: !3, line: 3091, type: !419)
!13223 = !DILocation(line: 3091, column: 16, scope: !13164)
!13224 = !DILocalVariable(name: "do_callback", scope: !13164, file: !3, line: 3092, type: !355)
!13225 = !DILocation(line: 3092, column: 6, scope: !13164)
!13226 = !DILocation(line: 3094, column: 2, scope: !13164)
!13227 = !DILocation(line: 3094, column: 2, scope: !13199)
!13228 = !DILocalVariable(name: "__dummy", scope: !13229, file: !3, line: 3094, type: !419)
!13229 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 3094, column: 2)
!13230 = !DILocation(line: 3094, column: 2, scope: !13229)
!13231 = !DILocalVariable(name: "__dummy2", scope: !13229, file: !3, line: 3094, type: !419)
!13232 = !DILocation(line: 3094, column: 2, scope: !13198)
!13233 = !DILocation(line: 3094, column: 2, scope: !13197)
!13234 = !DILocation(line: 3094, column: 2, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 3094, column: 2)
!13236 = !DILocalVariable(name: "__dummy", scope: !13237, file: !3, line: 3094, type: !419)
!13237 = distinct !DILexicalBlock(scope: !13238, file: !3, line: 3094, column: 2)
!13238 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 3094, column: 2)
!13239 = !DILocation(line: 3094, column: 2, scope: !13237)
!13240 = !DILocalVariable(name: "__dummy2", scope: !13237, file: !3, line: 3094, type: !419)
!13241 = !DILocation(line: 3094, column: 2, scope: !13238)
!13242 = !DILocation(line: 3094, column: 2, scope: !13196)
!13243 = !{i32 -2140143049}
!13244 = !DILocation(line: 3094, column: 2, scope: !13195)
!13245 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !13194)
!13246 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !13194)
!13247 = !DILocation(line: 3096, column: 2, scope: !13164)
!13248 = !DILocation(line: 3096, column: 9, scope: !13164)
!13249 = !DILocation(line: 3096, column: 15, scope: !13164)
!13250 = !DILocation(line: 3103, column: 7, scope: !13191)
!13251 = !DILocation(line: 3103, column: 14, scope: !13191)
!13252 = !DILocation(line: 3103, column: 25, scope: !13191)
!13253 = !DILocation(line: 3103, column: 49, scope: !13191)
!13254 = !DILocation(line: 3104, column: 7, scope: !13191)
!13255 = !DILocation(line: 3104, column: 14, scope: !13191)
!13256 = !DILocation(line: 3104, column: 29, scope: !13191)
!13257 = !DILocation(line: 3104, column: 36, scope: !13191)
!13258 = !DILocation(line: 3105, column: 8, scope: !13191)
!13259 = !DILocation(line: 3105, column: 15, scope: !13191)
!13260 = !DILocation(line: 3105, column: 21, scope: !13191)
!13261 = !DILocation(line: 3103, column: 6, scope: !13164)
!13262 = !DILocation(line: 3106, column: 25, scope: !13190)
!13263 = !DILocation(line: 3106, column: 32, scope: !13190)
!13264 = !DILocation(line: 3106, column: 3, scope: !13190)
!13265 = !DILocation(line: 3109, column: 26, scope: !13190)
!13266 = !DILocation(line: 3109, column: 33, scope: !13190)
!13267 = !DILocation(line: 3109, column: 44, scope: !13190)
!13268 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13189)
!13269 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13189)
!13270 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13189)
!13271 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13189)
!13272 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13189)
!13273 = !DILocation(line: 3110, column: 24, scope: !13190)
!13274 = !DILocation(line: 3110, column: 31, scope: !13190)
!13275 = !DILocation(line: 3110, column: 3, scope: !13190)
!13276 = !DILocation(line: 3111, column: 17, scope: !13190)
!13277 = !DILocation(line: 3111, column: 25, scope: !13190)
!13278 = !DILocation(line: 3111, column: 32, scope: !13190)
!13279 = !DILocation(line: 3111, column: 3, scope: !13190)
!13280 = !DILocation(line: 3112, column: 3, scope: !13190)
!13281 = !DILocation(line: 3116, column: 6, scope: !13186)
!13282 = !DILocation(line: 3116, column: 13, scope: !13186)
!13283 = !DILocation(line: 3116, column: 24, scope: !13186)
!13284 = !DILocation(line: 3116, column: 6, scope: !13164)
!13285 = !DILocation(line: 3117, column: 26, scope: !13185)
!13286 = !DILocation(line: 3117, column: 33, scope: !13185)
!13287 = !DILocation(line: 3117, column: 44, scope: !13185)
!13288 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13184)
!13289 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13184)
!13290 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13184)
!13291 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13184)
!13292 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13184)
!13293 = !DILocation(line: 3118, column: 25, scope: !13185)
!13294 = !DILocation(line: 3118, column: 32, scope: !13185)
!13295 = !DILocation(line: 3121, column: 5, scope: !13185)
!13296 = !DILocation(line: 3121, column: 12, scope: !13185)
!13297 = !DILocation(line: 3121, column: 27, scope: !13185)
!13298 = !DILocation(line: 3121, column: 4, scope: !13185)
!13299 = !DILocation(line: 3118, column: 3, scope: !13185)
!13300 = !DILocation(line: 3122, column: 3, scope: !13185)
!13301 = !DILocation(line: 3125, column: 7, scope: !13181)
!13302 = !DILocation(line: 3125, column: 16, scope: !13181)
!13303 = !DILocation(line: 3125, column: 32, scope: !13181)
!13304 = !DILocation(line: 3125, column: 55, scope: !13181)
!13305 = !DILocation(line: 3126, column: 7, scope: !13181)
!13306 = !DILocation(line: 3126, column: 14, scope: !13181)
!13307 = !DILocation(line: 3126, column: 29, scope: !13181)
!13308 = !DILocation(line: 3125, column: 6, scope: !13164)
!13309 = !DILocation(line: 3127, column: 13, scope: !13180)
!13310 = !DILocation(line: 3127, column: 20, scope: !13180)
!13311 = !DILocation(line: 3127, column: 3, scope: !13180)
!13312 = !DILocation(line: 3128, column: 3, scope: !13180)
!13313 = !DILocation(line: 3128, column: 10, scope: !13180)
!13314 = !DILocation(line: 3128, column: 21, scope: !13180)
!13315 = !DILocation(line: 3129, column: 25, scope: !13180)
!13316 = !DILocation(line: 3129, column: 32, scope: !13180)
!13317 = !DILocation(line: 3132, column: 5, scope: !13180)
!13318 = !DILocation(line: 3132, column: 12, scope: !13180)
!13319 = !DILocation(line: 3132, column: 27, scope: !13180)
!13320 = !DILocation(line: 3132, column: 4, scope: !13180)
!13321 = !DILocation(line: 3129, column: 3, scope: !13180)
!13322 = !DILocation(line: 3133, column: 17, scope: !13180)
!13323 = !DILocation(line: 3133, column: 25, scope: !13180)
!13324 = !DILocation(line: 3133, column: 32, scope: !13180)
!13325 = !DILocation(line: 3133, column: 3, scope: !13180)
!13326 = !DILocation(line: 3134, column: 26, scope: !13180)
!13327 = !DILocation(line: 3134, column: 33, scope: !13180)
!13328 = !DILocation(line: 3134, column: 44, scope: !13180)
!13329 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13179)
!13330 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13179)
!13331 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13179)
!13332 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13179)
!13333 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13179)
!13334 = !DILocation(line: 3135, column: 3, scope: !13180)
!13335 = !DILocation(line: 3138, column: 24, scope: !13164)
!13336 = !DILocation(line: 3138, column: 31, scope: !13164)
!13337 = !DILocation(line: 3138, column: 2, scope: !13164)
!13338 = !DILocation(line: 3142, column: 18, scope: !13164)
!13339 = !DILocation(line: 3142, column: 25, scope: !13164)
!13340 = !DILocation(line: 3142, column: 33, scope: !13164)
!13341 = !DILocation(line: 3142, column: 42, scope: !13164)
!13342 = !DILocation(line: 3142, column: 2, scope: !13164)
!13343 = !DILocation(line: 3153, column: 2, scope: !13164)
!13344 = !DILocation(line: 3153, column: 9, scope: !13164)
!13345 = !DILocation(line: 3153, column: 23, scope: !13164)
!13346 = !DILocation(line: 3154, column: 2, scope: !13164)
!13347 = !DILocation(line: 3154, column: 9, scope: !13164)
!13348 = !DILocation(line: 3154, column: 27, scope: !13164)
!13349 = !DILocation(line: 3155, column: 2, scope: !13164)
!13350 = !DILocation(line: 3155, column: 9, scope: !13164)
!13351 = !DILocation(line: 3155, column: 15, scope: !13164)
!13352 = !DILocation(line: 3156, column: 2, scope: !13164)
!13353 = !DILocation(line: 3156, column: 9, scope: !13164)
!13354 = !DILocation(line: 3156, column: 20, scope: !13164)
!13355 = !DILocation(line: 3157, column: 2, scope: !13164)
!13356 = !DILocation(line: 3157, column: 9, scope: !13164)
!13357 = !DILocation(line: 3157, column: 15, scope: !13164)
!13358 = !DILocation(line: 3164, column: 25, scope: !13164)
!13359 = !DILocation(line: 3164, column: 32, scope: !13164)
!13360 = !DILocation(line: 3164, column: 43, scope: !13164)
!13361 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13176)
!13362 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13176)
!13363 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13176)
!13364 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13176)
!13365 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13176)
!13366 = !DILocation(line: 3165, column: 24, scope: !13164)
!13367 = !DILocation(line: 3165, column: 2, scope: !13164)
!13368 = !DILocation(line: 3167, column: 2, scope: !13164)
!13369 = !DILocation(line: 3167, column: 2, scope: !13174)
!13370 = !DILocalVariable(name: "__dummy", scope: !13371, file: !3, line: 3167, type: !419)
!13371 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 3167, column: 2)
!13372 = !DILocation(line: 3167, column: 2, scope: !13371)
!13373 = !DILocalVariable(name: "__dummy2", scope: !13371, file: !3, line: 3167, type: !419)
!13374 = !DILocation(line: 3167, column: 2, scope: !13173)
!13375 = !DILocation(line: 3167, column: 2, scope: !13172)
!13376 = !DILocation(line: 3167, column: 2, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 3167, column: 2)
!13378 = !DILocalVariable(name: "__dummy", scope: !13379, file: !3, line: 3167, type: !419)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 3167, column: 2)
!13380 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 3167, column: 2)
!13381 = !DILocation(line: 3167, column: 2, scope: !13379)
!13382 = !DILocalVariable(name: "__dummy2", scope: !13379, file: !3, line: 3167, type: !419)
!13383 = !DILocation(line: 3167, column: 2, scope: !13380)
!13384 = !DILocation(line: 3167, column: 2, scope: !13171)
!13385 = !{i32 -2140141893}
!13386 = !DILocation(line: 3167, column: 2, scope: !13170)
!13387 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !13169)
!13388 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !13169)
!13389 = !DILocation(line: 3169, column: 6, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3169, column: 6)
!13391 = !DILocation(line: 3169, column: 13, scope: !13390)
!13392 = !DILocation(line: 3169, column: 24, scope: !13390)
!13393 = !DILocation(line: 3169, column: 6, scope: !13164)
!13394 = !DILocation(line: 3172, column: 11, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13390, file: !3, line: 3169, column: 52)
!13396 = !DILocation(line: 3172, column: 20, scope: !13395)
!13397 = !DILocation(line: 3172, column: 3, scope: !13395)
!13398 = !DILocation(line: 3174, column: 4, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13395, file: !3, line: 3172, column: 37)
!13400 = !DILocation(line: 3174, column: 11, scope: !13399)
!13401 = !DILocation(line: 3174, column: 21, scope: !13399)
!13402 = !DILocation(line: 3175, column: 4, scope: !13399)
!13403 = !DILocation(line: 3175, column: 11, scope: !13399)
!13404 = !DILocation(line: 3175, column: 19, scope: !13399)
!13405 = !DILocation(line: 3176, column: 4, scope: !13399)
!13406 = !DILocation(line: 3178, column: 4, scope: !13399)
!13407 = !DILocation(line: 3178, column: 11, scope: !13399)
!13408 = !DILocation(line: 3178, column: 21, scope: !13399)
!13409 = !DILocation(line: 3179, column: 4, scope: !13399)
!13410 = !DILocation(line: 3179, column: 11, scope: !13399)
!13411 = !DILocation(line: 3179, column: 19, scope: !13399)
!13412 = !DILocation(line: 3180, column: 4, scope: !13399)
!13413 = !DILocation(line: 3182, column: 4, scope: !13399)
!13414 = !DILocation(line: 3182, column: 11, scope: !13399)
!13415 = !DILocation(line: 3182, column: 21, scope: !13399)
!13416 = !DILocation(line: 3183, column: 4, scope: !13399)
!13417 = !DILocation(line: 3183, column: 11, scope: !13399)
!13418 = !DILocation(line: 3183, column: 21, scope: !13399)
!13419 = !DILocation(line: 3184, column: 4, scope: !13399)
!13420 = !DILocation(line: 3186, column: 4, scope: !13399)
!13421 = !DILocation(line: 3194, column: 3, scope: !13395)
!13422 = !DILocation(line: 3194, column: 10, scope: !13395)
!13423 = !DILocation(line: 3194, column: 16, scope: !13395)
!13424 = !DILocation(line: 3195, column: 17, scope: !13395)
!13425 = !DILocation(line: 3195, column: 25, scope: !13395)
!13426 = !DILocation(line: 3195, column: 32, scope: !13395)
!13427 = !DILocation(line: 3195, column: 3, scope: !13395)
!13428 = !DILocation(line: 3197, column: 15, scope: !13395)
!13429 = !DILocation(line: 3198, column: 2, scope: !13395)
!13430 = !DILocation(line: 3200, column: 25, scope: !13164)
!13431 = !DILocation(line: 3200, column: 32, scope: !13164)
!13432 = !DILocation(line: 3200, column: 43, scope: !13164)
!13433 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13166)
!13434 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13166)
!13435 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13166)
!13436 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13166)
!13437 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13166)
!13438 = !DILocation(line: 3208, column: 6, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3208, column: 6)
!13440 = !DILocation(line: 3208, column: 18, scope: !13439)
!13441 = !DILocation(line: 3208, column: 21, scope: !13439)
!13442 = !DILocation(line: 3208, column: 24, scope: !13439)
!13443 = !DILocation(line: 3208, column: 27, scope: !13439)
!13444 = !DILocation(line: 3208, column: 6, scope: !13164)
!13445 = !DILocation(line: 3209, column: 3, scope: !13439)
!13446 = !DILocation(line: 3209, column: 6, scope: !13439)
!13447 = !DILocation(line: 3209, column: 9, scope: !13439)
!13448 = !DILocation(line: 3209, column: 29, scope: !13439)
!13449 = !DILocation(line: 3210, column: 1, scope: !13164)
!13450 = distinct !DISubprogram(name: "fc_timeout_fail_rport_io", scope: !3, file: !3, line: 3221, type: !2277, scopeLine: 3222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13451 = !DILocalVariable(name: "work", arg: 1, scope: !13450, file: !3, line: 3221, type: !2279)
!13452 = !DILocation(line: 3221, column: 46, scope: !13450)
!13453 = !DILocalVariable(name: "rport", scope: !13450, file: !3, line: 3223, type: !281)
!13454 = !DILocation(line: 3223, column: 19, scope: !13450)
!13455 = !DILocalVariable(name: "__mptr", scope: !13456, file: !3, line: 3224, type: !280)
!13456 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 3224, column: 3)
!13457 = !DILocation(line: 3224, column: 3, scope: !13456)
!13458 = !DILocation(line: 3224, column: 3, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13456, file: !3, line: 3224, column: 3)
!13460 = !DILocation(line: 3226, column: 6, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 3226, column: 6)
!13462 = !DILocation(line: 3226, column: 13, scope: !13461)
!13463 = !DILocation(line: 3226, column: 24, scope: !13461)
!13464 = !DILocation(line: 3226, column: 6, scope: !13450)
!13465 = !DILocation(line: 3227, column: 3, scope: !13461)
!13466 = !DILocation(line: 3229, column: 2, scope: !13450)
!13467 = !DILocation(line: 3229, column: 9, scope: !13450)
!13468 = !DILocation(line: 3229, column: 15, scope: !13450)
!13469 = !DILocation(line: 3230, column: 24, scope: !13450)
!13470 = !DILocation(line: 3230, column: 2, scope: !13450)
!13471 = !DILocation(line: 3231, column: 1, scope: !13450)
!13472 = distinct !DISubprogram(name: "fc_scsi_scan_rport", scope: !3, file: !3, line: 3238, type: !2277, scopeLine: 3239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13473 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13474)
!13474 = distinct !DILocation(line: 3256, column: 2, scope: !13472)
!13475 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13474)
!13476 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 3254, column: 2, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 3254, column: 2)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 3254, column: 2)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 3254, column: 2)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !3, line: 3254, column: 2)
!13482 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3254, column: 2)
!13483 = !DILocalVariable(name: "work", arg: 1, scope: !13472, file: !3, line: 3238, type: !2279)
!13484 = !DILocation(line: 3238, column: 40, scope: !13472)
!13485 = !DILocalVariable(name: "rport", scope: !13472, file: !3, line: 3240, type: !281)
!13486 = !DILocation(line: 3240, column: 19, scope: !13472)
!13487 = !DILocalVariable(name: "__mptr", scope: !13488, file: !3, line: 3241, type: !280)
!13488 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3241, column: 3)
!13489 = !DILocation(line: 3241, column: 3, scope: !13488)
!13490 = !DILocation(line: 3241, column: 3, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 3241, column: 3)
!13492 = !DILocalVariable(name: "shost", scope: !13472, file: !3, line: 3242, type: !5046)
!13493 = !DILocation(line: 3242, column: 20, scope: !13472)
!13494 = !DILocation(line: 3242, column: 28, scope: !13472)
!13495 = !DILocalVariable(name: "i", scope: !13472, file: !3, line: 3243, type: !4984)
!13496 = !DILocation(line: 3243, column: 22, scope: !13472)
!13497 = !DILocalVariable(name: "__mptr", scope: !13498, file: !3, line: 3243, type: !280)
!13498 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3243, column: 26)
!13499 = !DILocation(line: 3243, column: 26, scope: !13498)
!13500 = !DILocation(line: 3243, column: 26, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13498, file: !3, line: 3243, column: 26)
!13502 = !DILocalVariable(name: "flags", scope: !13472, file: !3, line: 3244, type: !419)
!13503 = !DILocation(line: 3244, column: 16, scope: !13472)
!13504 = !DILocation(line: 3246, column: 7, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3246, column: 6)
!13506 = !DILocation(line: 3246, column: 14, scope: !13505)
!13507 = !DILocation(line: 3246, column: 25, scope: !13505)
!13508 = !DILocation(line: 3246, column: 49, scope: !13505)
!13509 = !DILocation(line: 3247, column: 7, scope: !13505)
!13510 = !DILocation(line: 3247, column: 14, scope: !13505)
!13511 = !DILocation(line: 3247, column: 20, scope: !13505)
!13512 = !DILocation(line: 3247, column: 47, scope: !13505)
!13513 = !DILocation(line: 3248, column: 8, scope: !13505)
!13514 = !DILocation(line: 3248, column: 11, scope: !13505)
!13515 = !DILocation(line: 3248, column: 14, scope: !13505)
!13516 = !DILocation(line: 3248, column: 7, scope: !13505)
!13517 = !DILocation(line: 3246, column: 6, scope: !13472)
!13518 = !DILocation(line: 3249, column: 21, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13505, file: !3, line: 3248, column: 36)
!13520 = !DILocation(line: 3249, column: 28, scope: !13519)
!13521 = !DILocation(line: 3249, column: 33, scope: !13519)
!13522 = !DILocation(line: 3249, column: 40, scope: !13519)
!13523 = !DILocation(line: 3250, column: 6, scope: !13519)
!13524 = !DILocation(line: 3250, column: 13, scope: !13519)
!13525 = !DILocation(line: 3249, column: 3, scope: !13519)
!13526 = !DILocation(line: 3252, column: 2, scope: !13519)
!13527 = !DILocation(line: 3254, column: 2, scope: !13472)
!13528 = !DILocation(line: 3254, column: 2, scope: !13482)
!13529 = !DILocalVariable(name: "__dummy", scope: !13530, file: !3, line: 3254, type: !419)
!13530 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 3254, column: 2)
!13531 = !DILocation(line: 3254, column: 2, scope: !13530)
!13532 = !DILocalVariable(name: "__dummy2", scope: !13530, file: !3, line: 3254, type: !419)
!13533 = !DILocation(line: 3254, column: 2, scope: !13481)
!13534 = !DILocation(line: 3254, column: 2, scope: !13480)
!13535 = !DILocation(line: 3254, column: 2, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 3254, column: 2)
!13537 = !DILocalVariable(name: "__dummy", scope: !13538, file: !3, line: 3254, type: !419)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !3, line: 3254, column: 2)
!13539 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 3254, column: 2)
!13540 = !DILocation(line: 3254, column: 2, scope: !13538)
!13541 = !DILocalVariable(name: "__dummy2", scope: !13538, file: !3, line: 3254, type: !419)
!13542 = !DILocation(line: 3254, column: 2, scope: !13539)
!13543 = !DILocation(line: 3254, column: 2, scope: !13479)
!13544 = !{i32 -2140136144}
!13545 = !DILocation(line: 3254, column: 2, scope: !13478)
!13546 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !13477)
!13547 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !13477)
!13548 = !DILocation(line: 3255, column: 2, scope: !13472)
!13549 = !DILocation(line: 3255, column: 9, scope: !13472)
!13550 = !DILocation(line: 3255, column: 15, scope: !13472)
!13551 = !DILocation(line: 3256, column: 25, scope: !13472)
!13552 = !DILocation(line: 3256, column: 32, scope: !13472)
!13553 = !DILocation(line: 3256, column: 43, scope: !13472)
!13554 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13474)
!13555 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13474)
!13556 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13474)
!13557 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13474)
!13558 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13474)
!13559 = !DILocation(line: 3257, column: 1, scope: !13472)
!13560 = distinct !DISubprogram(name: "fc_starget_delete", scope: !3, file: !3, line: 2485, type: !2277, scopeLine: 2486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13561 = !DILocalVariable(name: "work", arg: 1, scope: !13560, file: !3, line: 2485, type: !2279)
!13562 = !DILocation(line: 2485, column: 39, scope: !13560)
!13563 = !DILocalVariable(name: "rport", scope: !13560, file: !3, line: 2487, type: !281)
!13564 = !DILocation(line: 2487, column: 19, scope: !13560)
!13565 = !DILocalVariable(name: "__mptr", scope: !13566, file: !3, line: 2488, type: !280)
!13566 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 2488, column: 3)
!13567 = !DILocation(line: 2488, column: 3, scope: !13566)
!13568 = !DILocation(line: 2488, column: 3, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 2488, column: 3)
!13570 = !DILocation(line: 2490, column: 24, scope: !13560)
!13571 = !DILocation(line: 2490, column: 2, scope: !13560)
!13572 = !DILocation(line: 2491, column: 22, scope: !13560)
!13573 = !DILocation(line: 2491, column: 29, scope: !13560)
!13574 = !DILocation(line: 2491, column: 2, scope: !13560)
!13575 = !DILocation(line: 2492, column: 1, scope: !13560)
!13576 = distinct !DISubprogram(name: "fc_rport_final_delete", scope: !3, file: !3, line: 2500, type: !2277, scopeLine: 2501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13577 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13578)
!13578 = distinct !DILocation(line: 2554, column: 2, scope: !13576)
!13579 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13578)
!13580 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !13581)
!13581 = distinct !DILocation(line: 2548, column: 2, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !3, line: 2548, column: 2)
!13583 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 2548, column: 2)
!13584 = distinct !DILexicalBlock(scope: !13585, file: !3, line: 2548, column: 2)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 2548, column: 2)
!13586 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2548, column: 2)
!13587 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13588)
!13588 = distinct !DILocation(line: 2535, column: 2, scope: !13576)
!13589 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13588)
!13590 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 2532, column: 3, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 2532, column: 3)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 2532, column: 3)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 2532, column: 3)
!13595 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 2532, column: 3)
!13596 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 2532, column: 3)
!13597 = distinct !DILexicalBlock(scope: !13598, file: !3, line: 2525, column: 47)
!13598 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2525, column: 6)
!13599 = !DILocation(line: 407, column: 64, scope: !7625, inlinedAt: !13600)
!13600 = distinct !DILocation(line: 2526, column: 3, scope: !13597)
!13601 = !DILocation(line: 407, column: 84, scope: !7625, inlinedAt: !13600)
!13602 = !DILocation(line: 327, column: 67, scope: !7634, inlinedAt: !13603)
!13603 = distinct !DILocation(line: 2524, column: 2, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13605, file: !3, line: 2524, column: 2)
!13605 = distinct !DILexicalBlock(scope: !13606, file: !3, line: 2524, column: 2)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 2524, column: 2)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !3, line: 2524, column: 2)
!13608 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2524, column: 2)
!13609 = !DILocalVariable(name: "work", arg: 1, scope: !13576, file: !3, line: 2500, type: !2279)
!13610 = !DILocation(line: 2500, column: 43, scope: !13576)
!13611 = !DILocalVariable(name: "rport", scope: !13576, file: !3, line: 2502, type: !281)
!13612 = !DILocation(line: 2502, column: 19, scope: !13576)
!13613 = !DILocalVariable(name: "__mptr", scope: !13614, file: !3, line: 2503, type: !280)
!13614 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2503, column: 3)
!13615 = !DILocation(line: 2503, column: 3, scope: !13614)
!13616 = !DILocation(line: 2503, column: 3, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13614, file: !3, line: 2503, column: 3)
!13618 = !DILocalVariable(name: "dev", scope: !13576, file: !3, line: 2504, type: !2400)
!13619 = !DILocation(line: 2504, column: 17, scope: !13576)
!13620 = !DILocation(line: 2504, column: 24, scope: !13576)
!13621 = !DILocation(line: 2504, column: 31, scope: !13576)
!13622 = !DILocalVariable(name: "shost", scope: !13576, file: !3, line: 2505, type: !5046)
!13623 = !DILocation(line: 2505, column: 20, scope: !13576)
!13624 = !DILocation(line: 2505, column: 28, scope: !13576)
!13625 = !DILocalVariable(name: "i", scope: !13576, file: !3, line: 2506, type: !4984)
!13626 = !DILocation(line: 2506, column: 22, scope: !13576)
!13627 = !DILocalVariable(name: "__mptr", scope: !13628, file: !3, line: 2506, type: !280)
!13628 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2506, column: 26)
!13629 = !DILocation(line: 2506, column: 26, scope: !13628)
!13630 = !DILocation(line: 2506, column: 26, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 2506, column: 26)
!13632 = !DILocalVariable(name: "flags", scope: !13576, file: !3, line: 2507, type: !419)
!13633 = !DILocation(line: 2507, column: 16, scope: !13576)
!13634 = !DILocalVariable(name: "do_callback", scope: !13576, file: !3, line: 2508, type: !355)
!13635 = !DILocation(line: 2508, column: 6, scope: !13576)
!13636 = !DILocation(line: 2510, column: 24, scope: !13576)
!13637 = !DILocation(line: 2510, column: 2, scope: !13576)
!13638 = !DILocation(line: 2516, column: 6, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2516, column: 6)
!13640 = !DILocation(line: 2516, column: 13, scope: !13639)
!13641 = !DILocation(line: 2516, column: 19, scope: !13639)
!13642 = !DILocation(line: 2516, column: 6, scope: !13576)
!13643 = !DILocation(line: 2517, column: 19, scope: !13639)
!13644 = !DILocation(line: 2517, column: 3, scope: !13639)
!13645 = !DILocation(line: 2524, column: 2, scope: !13576)
!13646 = !DILocation(line: 2524, column: 2, scope: !13608)
!13647 = !DILocalVariable(name: "__dummy", scope: !13648, file: !3, line: 2524, type: !419)
!13648 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 2524, column: 2)
!13649 = !DILocation(line: 2524, column: 2, scope: !13648)
!13650 = !DILocalVariable(name: "__dummy2", scope: !13648, file: !3, line: 2524, type: !419)
!13651 = !DILocation(line: 2524, column: 2, scope: !13607)
!13652 = !DILocation(line: 2524, column: 2, scope: !13606)
!13653 = !DILocation(line: 2524, column: 2, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13606, file: !3, line: 2524, column: 2)
!13655 = !DILocalVariable(name: "__dummy", scope: !13656, file: !3, line: 2524, type: !419)
!13656 = distinct !DILexicalBlock(scope: !13657, file: !3, line: 2524, column: 2)
!13657 = distinct !DILexicalBlock(scope: !13654, file: !3, line: 2524, column: 2)
!13658 = !DILocation(line: 2524, column: 2, scope: !13656)
!13659 = !DILocalVariable(name: "__dummy2", scope: !13656, file: !3, line: 2524, type: !419)
!13660 = !DILocation(line: 2524, column: 2, scope: !13657)
!13661 = !DILocation(line: 2524, column: 2, scope: !13605)
!13662 = !{i32 -2140175098}
!13663 = !DILocation(line: 2524, column: 2, scope: !13604)
!13664 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !13603)
!13665 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !13603)
!13666 = !DILocation(line: 2525, column: 6, scope: !13598)
!13667 = !DILocation(line: 2525, column: 13, scope: !13598)
!13668 = !DILocation(line: 2525, column: 19, scope: !13598)
!13669 = !DILocation(line: 2525, column: 6, scope: !13576)
!13670 = !DILocation(line: 2526, column: 26, scope: !13597)
!13671 = !DILocation(line: 2526, column: 33, scope: !13597)
!13672 = !DILocation(line: 2526, column: 44, scope: !13597)
!13673 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13600)
!13674 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13600)
!13675 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13600)
!13676 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13600)
!13677 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13600)
!13678 = !DILocation(line: 2527, column: 29, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 2527, column: 7)
!13680 = !DILocation(line: 2527, column: 36, scope: !13679)
!13681 = !DILocation(line: 2527, column: 8, scope: !13679)
!13682 = !DILocation(line: 2527, column: 7, scope: !13597)
!13683 = !DILocation(line: 2528, column: 21, scope: !13679)
!13684 = !DILocation(line: 2528, column: 4, scope: !13679)
!13685 = !DILocation(line: 2529, column: 29, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 2529, column: 7)
!13687 = !DILocation(line: 2529, column: 36, scope: !13686)
!13688 = !DILocation(line: 2529, column: 8, scope: !13686)
!13689 = !DILocation(line: 2529, column: 7, scope: !13597)
!13690 = !DILocation(line: 2530, column: 21, scope: !13686)
!13691 = !DILocation(line: 2530, column: 4, scope: !13686)
!13692 = !DILocation(line: 2531, column: 21, scope: !13597)
!13693 = !DILocation(line: 2531, column: 28, scope: !13597)
!13694 = !DILocation(line: 2531, column: 3, scope: !13597)
!13695 = !DILocation(line: 2532, column: 3, scope: !13597)
!13696 = !DILocation(line: 2532, column: 3, scope: !13596)
!13697 = !DILocalVariable(name: "__dummy", scope: !13698, file: !3, line: 2532, type: !419)
!13698 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 2532, column: 3)
!13699 = !DILocation(line: 2532, column: 3, scope: !13698)
!13700 = !DILocalVariable(name: "__dummy2", scope: !13698, file: !3, line: 2532, type: !419)
!13701 = !DILocation(line: 2532, column: 3, scope: !13595)
!13702 = !DILocation(line: 2532, column: 3, scope: !13594)
!13703 = !DILocation(line: 2532, column: 3, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 2532, column: 3)
!13705 = !DILocalVariable(name: "__dummy", scope: !13706, file: !3, line: 2532, type: !419)
!13706 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 2532, column: 3)
!13707 = distinct !DILexicalBlock(scope: !13704, file: !3, line: 2532, column: 3)
!13708 = !DILocation(line: 2532, column: 3, scope: !13706)
!13709 = !DILocalVariable(name: "__dummy2", scope: !13706, file: !3, line: 2532, type: !419)
!13710 = !DILocation(line: 2532, column: 3, scope: !13707)
!13711 = !DILocation(line: 2532, column: 3, scope: !13593)
!13712 = !{i32 -2140174039}
!13713 = !DILocation(line: 2532, column: 3, scope: !13592)
!13714 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !13591)
!13715 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !13591)
!13716 = !DILocation(line: 2533, column: 3, scope: !13597)
!13717 = !DILocation(line: 2533, column: 10, scope: !13597)
!13718 = !DILocation(line: 2533, column: 16, scope: !13597)
!13719 = !DILocation(line: 2534, column: 2, scope: !13597)
!13720 = !DILocation(line: 2535, column: 25, scope: !13576)
!13721 = !DILocation(line: 2535, column: 32, scope: !13576)
!13722 = !DILocation(line: 2535, column: 43, scope: !13576)
!13723 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13588)
!13724 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13588)
!13725 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13588)
!13726 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13588)
!13727 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13588)
!13728 = !DILocation(line: 2538, column: 6, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2538, column: 6)
!13730 = !DILocation(line: 2538, column: 13, scope: !13729)
!13731 = !DILocation(line: 2538, column: 28, scope: !13729)
!13732 = !DILocation(line: 2538, column: 6, scope: !13576)
!13733 = !DILocation(line: 2539, column: 22, scope: !13729)
!13734 = !DILocation(line: 2539, column: 29, scope: !13729)
!13735 = !DILocation(line: 2539, column: 3, scope: !13729)
!13736 = !DILocation(line: 2548, column: 2, scope: !13576)
!13737 = !DILocation(line: 2548, column: 2, scope: !13586)
!13738 = !DILocalVariable(name: "__dummy", scope: !13739, file: !3, line: 2548, type: !419)
!13739 = distinct !DILexicalBlock(scope: !13585, file: !3, line: 2548, column: 2)
!13740 = !DILocation(line: 2548, column: 2, scope: !13739)
!13741 = !DILocalVariable(name: "__dummy2", scope: !13739, file: !3, line: 2548, type: !419)
!13742 = !DILocation(line: 2548, column: 2, scope: !13585)
!13743 = !DILocation(line: 2548, column: 2, scope: !13584)
!13744 = !DILocation(line: 2548, column: 2, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 2548, column: 2)
!13746 = !DILocalVariable(name: "__dummy", scope: !13747, file: !3, line: 2548, type: !419)
!13747 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 2548, column: 2)
!13748 = distinct !DILexicalBlock(scope: !13745, file: !3, line: 2548, column: 2)
!13749 = !DILocation(line: 2548, column: 2, scope: !13747)
!13750 = !DILocalVariable(name: "__dummy2", scope: !13747, file: !3, line: 2548, type: !419)
!13751 = !DILocation(line: 2548, column: 2, scope: !13748)
!13752 = !DILocation(line: 2548, column: 2, scope: !13583)
!13753 = !{i32 -2140172980}
!13754 = !DILocation(line: 2548, column: 2, scope: !13582)
!13755 = !DILocation(line: 329, column: 10, scope: !7634, inlinedAt: !13581)
!13756 = !DILocation(line: 329, column: 16, scope: !7634, inlinedAt: !13581)
!13757 = !DILocation(line: 2549, column: 8, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2549, column: 6)
!13759 = !DILocation(line: 2549, column: 15, scope: !13758)
!13760 = !DILocation(line: 2549, column: 21, scope: !13758)
!13761 = !DILocation(line: 2549, column: 53, scope: !13758)
!13762 = !DILocation(line: 2550, column: 7, scope: !13758)
!13763 = !DILocation(line: 2550, column: 10, scope: !13758)
!13764 = !DILocation(line: 2550, column: 13, scope: !13758)
!13765 = !DILocation(line: 2550, column: 6, scope: !13758)
!13766 = !DILocation(line: 2549, column: 6, scope: !13576)
!13767 = !DILocation(line: 2551, column: 3, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13758, file: !3, line: 2550, column: 35)
!13769 = !DILocation(line: 2551, column: 10, scope: !13768)
!13770 = !DILocation(line: 2551, column: 16, scope: !13768)
!13771 = !DILocation(line: 2552, column: 15, scope: !13768)
!13772 = !DILocation(line: 2553, column: 2, scope: !13768)
!13773 = !DILocation(line: 2554, column: 25, scope: !13576)
!13774 = !DILocation(line: 2554, column: 32, scope: !13576)
!13775 = !DILocation(line: 2554, column: 43, scope: !13576)
!13776 = !DILocation(line: 409, column: 2, scope: !7783, inlinedAt: !13578)
!13777 = !DILocation(line: 409, column: 2, scope: !7788, inlinedAt: !13578)
!13778 = !DILocation(line: 409, column: 2, scope: !7789, inlinedAt: !13578)
!13779 = !DILocation(line: 409, column: 2, scope: !7796, inlinedAt: !13578)
!13780 = !DILocation(line: 409, column: 2, scope: !7799, inlinedAt: !13578)
!13781 = !DILocation(line: 2556, column: 6, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 2556, column: 6)
!13783 = !DILocation(line: 2556, column: 6, scope: !13576)
!13784 = !DILocation(line: 2557, column: 3, scope: !13782)
!13785 = !DILocation(line: 2557, column: 6, scope: !13782)
!13786 = !DILocation(line: 2557, column: 9, scope: !13782)
!13787 = !DILocation(line: 2557, column: 29, scope: !13782)
!13788 = !DILocation(line: 2559, column: 16, scope: !13576)
!13789 = !DILocation(line: 2559, column: 23, scope: !13576)
!13790 = !DILocation(line: 2559, column: 2, scope: !13576)
!13791 = !DILocation(line: 2561, column: 26, scope: !13576)
!13792 = !DILocation(line: 2561, column: 2, scope: !13576)
!13793 = !DILocation(line: 2562, column: 13, scope: !13576)
!13794 = !DILocation(line: 2562, column: 2, scope: !13576)
!13795 = !DILocation(line: 2563, column: 27, scope: !13576)
!13796 = !DILocation(line: 2563, column: 2, scope: !13576)
!13797 = !DILocation(line: 2564, column: 16, scope: !13576)
!13798 = !DILocation(line: 2564, column: 2, scope: !13576)
!13799 = !DILocation(line: 2565, column: 13, scope: !13576)
!13800 = !DILocation(line: 2565, column: 2, scope: !13576)
!13801 = !DILocation(line: 2566, column: 1, scope: !13576)
!13802 = distinct !DISubprogram(name: "fc_bsg_rportadd", scope: !3, file: !3, line: 3816, type: !13803, scopeLine: 3817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13803 = !DISubroutineType(types: !13804)
!13804 = !{!355, !5046, !281}
!13805 = !DILocalVariable(name: "shost", arg: 1, scope: !13802, file: !3, line: 3816, type: !5046)
!13806 = !DILocation(line: 3816, column: 35, scope: !13802)
!13807 = !DILocalVariable(name: "rport", arg: 2, scope: !13802, file: !3, line: 3816, type: !281)
!13808 = !DILocation(line: 3816, column: 59, scope: !13802)
!13809 = !DILocalVariable(name: "dev", scope: !13802, file: !3, line: 3818, type: !2400)
!13810 = !DILocation(line: 3818, column: 17, scope: !13802)
!13811 = !DILocation(line: 3818, column: 24, scope: !13802)
!13812 = !DILocation(line: 3818, column: 31, scope: !13802)
!13813 = !DILocalVariable(name: "i", scope: !13802, file: !3, line: 3819, type: !4984)
!13814 = !DILocation(line: 3819, column: 22, scope: !13802)
!13815 = !DILocalVariable(name: "__mptr", scope: !13816, file: !3, line: 3819, type: !280)
!13816 = distinct !DILexicalBlock(scope: !13802, file: !3, line: 3819, column: 26)
!13817 = !DILocation(line: 3819, column: 26, scope: !13816)
!13818 = !DILocation(line: 3819, column: 26, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 3819, column: 26)
!13820 = !DILocalVariable(name: "q", scope: !13802, file: !3, line: 3820, type: !2480)
!13821 = !DILocation(line: 3820, column: 24, scope: !13802)
!13822 = !DILocation(line: 3822, column: 2, scope: !13802)
!13823 = !DILocation(line: 3822, column: 9, scope: !13802)
!13824 = !DILocation(line: 3822, column: 16, scope: !13802)
!13825 = !DILocation(line: 3824, column: 7, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13802, file: !3, line: 3824, column: 6)
!13827 = !DILocation(line: 3824, column: 10, scope: !13826)
!13828 = !DILocation(line: 3824, column: 13, scope: !13826)
!13829 = !DILocation(line: 3824, column: 6, scope: !13802)
!13830 = !DILocation(line: 3825, column: 3, scope: !13826)
!13831 = !DILocation(line: 3827, column: 22, scope: !13802)
!13832 = !DILocation(line: 3827, column: 36, scope: !13802)
!13833 = !DILocation(line: 3827, column: 27, scope: !13802)
!13834 = !DILocation(line: 3828, column: 25, scope: !13802)
!13835 = !DILocation(line: 3828, column: 28, scope: !13802)
!13836 = !DILocation(line: 3828, column: 31, scope: !13802)
!13837 = !DILocation(line: 3827, column: 6, scope: !13802)
!13838 = !DILocation(line: 3827, column: 4, scope: !13802)
!13839 = !DILocation(line: 3829, column: 13, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13802, file: !3, line: 3829, column: 6)
!13841 = !DILocation(line: 3829, column: 6, scope: !13840)
!13842 = !DILocation(line: 3829, column: 6, scope: !13802)
!13843 = !DILocation(line: 3830, column: 3, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13840, file: !3, line: 3829, column: 17)
!13845 = !DILocation(line: 3831, column: 18, scope: !13844)
!13846 = !DILocation(line: 3831, column: 10, scope: !13844)
!13847 = !DILocation(line: 3831, column: 3, scope: !13844)
!13848 = !DILocation(line: 3833, column: 20, scope: !13802)
!13849 = !DILocation(line: 3833, column: 27, scope: !13802)
!13850 = !DILocation(line: 3833, column: 2, scope: !13802)
!13851 = !DILocation(line: 3834, column: 23, scope: !13802)
!13852 = !DILocation(line: 3834, column: 2, scope: !13802)
!13853 = !DILocation(line: 3835, column: 18, scope: !13802)
!13854 = !DILocation(line: 3835, column: 2, scope: !13802)
!13855 = !DILocation(line: 3835, column: 9, scope: !13802)
!13856 = !DILocation(line: 3835, column: 16, scope: !13802)
!13857 = !DILocation(line: 3836, column: 2, scope: !13802)
!13858 = !DILocation(line: 3837, column: 1, scope: !13802)
!13859 = distinct !DISubprogram(name: "fc_terminate_rport_io", scope: !3, file: !3, line: 2463, type: !5477, scopeLine: 2464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13860 = !DILocalVariable(name: "rport", arg: 1, scope: !13859, file: !3, line: 2463, type: !281)
!13861 = !DILocation(line: 2463, column: 52, scope: !13859)
!13862 = !DILocalVariable(name: "shost", scope: !13859, file: !3, line: 2465, type: !5046)
!13863 = !DILocation(line: 2465, column: 20, scope: !13859)
!13864 = !DILocation(line: 2465, column: 28, scope: !13859)
!13865 = !DILocalVariable(name: "i", scope: !13859, file: !3, line: 2466, type: !4984)
!13866 = !DILocation(line: 2466, column: 22, scope: !13859)
!13867 = !DILocalVariable(name: "__mptr", scope: !13868, file: !3, line: 2466, type: !280)
!13868 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 2466, column: 26)
!13869 = !DILocation(line: 2466, column: 26, scope: !13868)
!13870 = !DILocation(line: 2466, column: 26, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13868, file: !3, line: 2466, column: 26)
!13872 = !DILocation(line: 2469, column: 6, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 2469, column: 6)
!13874 = !DILocation(line: 2469, column: 9, scope: !13873)
!13875 = !DILocation(line: 2469, column: 12, scope: !13873)
!13876 = !DILocation(line: 2469, column: 6, scope: !13859)
!13877 = !DILocation(line: 2470, column: 3, scope: !13873)
!13878 = !DILocation(line: 2470, column: 6, scope: !13873)
!13879 = !DILocation(line: 2470, column: 9, scope: !13873)
!13880 = !DILocation(line: 2470, column: 28, scope: !13873)
!13881 = !DILocation(line: 2475, column: 23, scope: !13859)
!13882 = !DILocation(line: 2475, column: 30, scope: !13859)
!13883 = !DILocation(line: 2475, column: 2, scope: !13859)
!13884 = !DILocation(line: 2476, column: 1, scope: !13859)
!13885 = distinct !DISubprogram(name: "fc_bsg_dispatch_prep", scope: !3, file: !3, line: 3757, type: !5568, scopeLine: 3758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13886 = !DILocalVariable(name: "job", arg: 1, scope: !13885, file: !3, line: 3757, type: !5570)
!13887 = !DILocation(line: 3757, column: 49, scope: !13885)
!13888 = !DILocalVariable(name: "rport", scope: !13885, file: !3, line: 3759, type: !281)
!13889 = !DILocation(line: 3759, column: 19, scope: !13885)
!13890 = !DILocation(line: 3759, column: 43, scope: !13885)
!13891 = !DILocation(line: 3759, column: 27, scope: !13885)
!13892 = !DILocalVariable(name: "ret", scope: !13885, file: !3, line: 3760, type: !2645)
!13893 = !DILocation(line: 3760, column: 15, scope: !13885)
!13894 = !DILocation(line: 3762, column: 26, scope: !13885)
!13895 = !DILocation(line: 3762, column: 8, scope: !13885)
!13896 = !DILocation(line: 3762, column: 6, scope: !13885)
!13897 = !DILocation(line: 3763, column: 10, scope: !13885)
!13898 = !DILocation(line: 3763, column: 2, scope: !13885)
!13899 = !DILocation(line: 3765, column: 3, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 3763, column: 15)
!13901 = !DILocation(line: 3767, column: 3, scope: !13900)
!13902 = !DILocation(line: 3769, column: 3, scope: !13900)
!13903 = !DILocation(line: 3772, column: 25, scope: !13885)
!13904 = !DILocation(line: 3772, column: 9, scope: !13885)
!13905 = !DILocation(line: 3772, column: 2, scope: !13885)
!13906 = !DILocation(line: 3773, column: 1, scope: !13885)
!13907 = distinct !DISubprogram(name: "fc_bsg_rport_prep", scope: !3, file: !3, line: 3744, type: !13908, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13908 = !DISubroutineType(types: !13909)
!13909 = !{!2645, !281}
!13910 = !DILocalVariable(name: "rport", arg: 1, scope: !13907, file: !3, line: 3744, type: !281)
!13911 = !DILocation(line: 3744, column: 56, scope: !13907)
!13912 = !DILocation(line: 3746, column: 6, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 3746, column: 6)
!13914 = !DILocation(line: 3746, column: 13, scope: !13913)
!13915 = !DILocation(line: 3746, column: 24, scope: !13913)
!13916 = !DILocation(line: 3746, column: 48, scope: !13913)
!13917 = !DILocation(line: 3747, column: 8, scope: !13913)
!13918 = !DILocation(line: 3747, column: 15, scope: !13913)
!13919 = !DILocation(line: 3747, column: 21, scope: !13913)
!13920 = !DILocation(line: 3746, column: 6, scope: !13907)
!13921 = !DILocation(line: 3748, column: 3, scope: !13913)
!13922 = !DILocation(line: 3750, column: 6, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 3750, column: 6)
!13924 = !DILocation(line: 3750, column: 13, scope: !13923)
!13925 = !DILocation(line: 3750, column: 24, scope: !13923)
!13926 = !DILocation(line: 3750, column: 6, scope: !13907)
!13927 = !DILocation(line: 3751, column: 3, scope: !13923)
!13928 = !DILocation(line: 3753, column: 2, scope: !13907)
!13929 = !DILocation(line: 3754, column: 1, scope: !13907)
!13930 = distinct !DISubprogram(name: "queue_delayed_work", scope: !238, file: !238, line: 518, type: !13931, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!577, !2282, !9013, !419}
!13933 = !DILocalVariable(name: "wq", arg: 1, scope: !13930, file: !238, line: 518, type: !2282)
!13934 = !DILocation(line: 518, column: 64, scope: !13930)
!13935 = !DILocalVariable(name: "dwork", arg: 2, scope: !13930, file: !238, line: 519, type: !9013)
!13936 = !DILocation(line: 519, column: 32, scope: !13930)
!13937 = !DILocalVariable(name: "delay", arg: 3, scope: !13930, file: !238, line: 520, type: !419)
!13938 = !DILocation(line: 520, column: 25, scope: !13930)
!13939 = !DILocation(line: 522, column: 49, scope: !13930)
!13940 = !DILocation(line: 522, column: 53, scope: !13930)
!13941 = !DILocation(line: 522, column: 60, scope: !13930)
!13942 = !DILocation(line: 522, column: 9, scope: !13930)
!13943 = !DILocation(line: 522, column: 2, scope: !13930)
!13944 = distinct !DISubprogram(name: "fc_vport_sched_delete", scope: !3, file: !3, line: 3531, type: !2277, scopeLine: 3532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13945 = !DILocalVariable(name: "work", arg: 1, scope: !13944, file: !3, line: 3531, type: !2279)
!13946 = !DILocation(line: 3531, column: 43, scope: !13944)
!13947 = !DILocalVariable(name: "vport", scope: !13944, file: !3, line: 3533, type: !5538)
!13948 = !DILocation(line: 3533, column: 19, scope: !13944)
!13949 = !DILocalVariable(name: "__mptr", scope: !13950, file: !3, line: 3534, type: !280)
!13950 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 3534, column: 3)
!13951 = !DILocation(line: 3534, column: 3, scope: !13950)
!13952 = !DILocation(line: 3534, column: 3, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13950, file: !3, line: 3534, column: 3)
!13954 = !DILocalVariable(name: "stat", scope: !13944, file: !3, line: 3535, type: !355)
!13955 = !DILocation(line: 3535, column: 6, scope: !13944)
!13956 = !DILocation(line: 3537, column: 28, scope: !13944)
!13957 = !DILocation(line: 3537, column: 9, scope: !13944)
!13958 = !DILocation(line: 3537, column: 7, scope: !13944)
!13959 = !DILocation(line: 3538, column: 6, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 3538, column: 6)
!13961 = !DILocation(line: 3538, column: 6, scope: !13944)
!13962 = !DILocation(line: 3539, column: 24, scope: !13960)
!13963 = !DILocation(line: 3539, column: 31, scope: !13960)
!13964 = !DILocation(line: 3539, column: 35, scope: !13960)
!13965 = !DILocation(line: 3542, column: 14, scope: !13960)
!13966 = !DILocation(line: 3542, column: 21, scope: !13960)
!13967 = !DILocation(line: 3542, column: 4, scope: !13960)
!13968 = !DILocation(line: 3542, column: 27, scope: !13960)
!13969 = !DILocation(line: 3542, column: 34, scope: !13960)
!13970 = !DILocation(line: 3542, column: 41, scope: !13960)
!13971 = !DILocation(line: 3543, column: 4, scope: !13960)
!13972 = !DILocation(line: 3543, column: 11, scope: !13960)
!13973 = !DILocation(line: 3543, column: 20, scope: !13960)
!13974 = !DILocation(line: 3539, column: 3, scope: !13960)
!13975 = !DILocation(line: 3544, column: 1, scope: !13944)
!13976 = distinct !DISubprogram(name: "kobject_name", scope: !315, file: !315, line: 88, type: !13977, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !343)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{!318, !13979}
!13979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13980, size: 64)
!13980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!13981 = !DILocalVariable(name: "kobj", arg: 1, scope: !13976, file: !315, line: 88, type: !13979)
!13982 = !DILocation(line: 88, column: 62, scope: !13976)
!13983 = !DILocation(line: 90, column: 9, scope: !13976)
!13984 = !DILocation(line: 90, column: 15, scope: !13976)
!13985 = !DILocation(line: 90, column: 2, scope: !13976)
