; ModuleID = '../bcout/drivers/scsi/advansys.llvm.bc'
source_filename = "drivers/scsi/advansys.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_advansys_init6:\09\09\09"
module asm ".long\09advansys_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.66, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.31, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.31 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.68, %union.anon.69, %union.anon.70, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.73, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.67, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.67 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.68 = type { %struct.hlist_node }
%union.anon.69 = type { %struct.rb_node }
%union.anon.70 = type { %struct.anon.72 }
%struct.anon.72 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.73 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.74, void (i8*)*, i8* }
%union.anon.74 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.75, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.75 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.66 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.eisa_driver = type { %struct.eisa_device_id*, %struct.device_driver }
%struct.eisa_device_id = type { [8 x i8], i64 }
%struct.isa_driver = type { i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, void (%struct.device*, i32)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, %struct.device_driver, %struct.device* }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_transport_template = type opaque
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.adveep_38C1600_config = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, i16, [16 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.adveep_38C0800_config = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, i16, [16 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.adveep_3550_config = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, i16, [16 x i8], i16, i16, i16, i16, i16, i16, i16 }
%struct.asc_board = type { %struct.device*, %struct.Scsi_Host*, i32, i32, %union.anon.77, %union.anon.78, i16, i16, [16 x i16], i16, [16 x i16], %union.anon.79, %struct.asc_stats, [8 x i8], i8*, i16, %struct.adv_req*, i64, i64, %struct.dma_pool*, i16, i16, i16, i16 }
%union.anon.77 = type { %struct.asc_dvc_var }
%struct.asc_dvc_var = type { i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8*, i64, i8, i8, i8, i8, i8, i8, i8, i16, [8 x i8], [8 x i8], [8 x %struct.asc_scsi_q*], [8 x %struct.asc_scsi_q*], i8*, %struct.asc_dvc_cfg*, i8, i8, i16, [8 x i8], i32, i8, i8, i8, i8, %struct.asc_board*, i32 }
%struct.asc_scsi_q = type { %struct.asc_scsiq_1, %struct.asc_scsiq_2, i8*, %struct.asc_sg_head*, i16, i16 }
%struct.asc_scsiq_1 = type { i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8 }
%struct.asc_scsiq_2 = type { i32, i8, i8, i8, i8, i16 }
%struct.asc_sg_head = type { i16, i16, i16, i16, [0 x %struct.asc_sg_list] }
%struct.asc_sg_list = type { i32, i32 }
%struct.asc_dvc_cfg = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, [8 x i8], [8 x i8], [6 x i8] }
%union.anon.78 = type { %struct.asc_dvc_cfg }
%union.anon.79 = type { %struct.adveep_38C0800_config }
%struct.asc_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.adv_req = type { %struct.adv_scsi_req_q, [24 x i8], %struct.scsi_cmnd*, i64, %struct.adv_sgblk* }
%struct.adv_scsi_req_q = type { i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [12 x i8], i32, i32, [4 x i8], i32, i32, i32, %struct.adv_sg_block* }
%struct.adv_sg_block = type { i8, i8, i8, i8, i32, [15 x %struct.anon.80] }
%struct.anon.80 = type { i32, i32 }
%struct.adv_sgblk = type { %struct.adv_sg_block, i64, %struct.adv_sgblk* }
%struct.dma_pool = type opaque
%struct.adv_dvc_var = type { i8*, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i16, i8, i8, i8, i16, %struct.asc_board*, i8, i8, i8, %struct.adv_carr_t*, %struct.adv_carr_t*, i64, %struct.adv_carr_t*, %struct.adv_carr_t*, i16, %struct.adv_dvc_cfg* }
%struct.adv_carr_t = type { i32, i32, i32, i32 }
%struct.adv_dvc_cfg = type { i16, i8, i8, i16, i16, i16, i16, i16, i16 }
%struct.asceep_config = type { i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [6 x i8], i16, i16 }
%struct.ext_msg = type { i8, i8, i8, %union.anon.81, i8 }
%union.anon.81 = type { %struct.anon.84 }
%struct.anon.84 = type { i8, i8, i8, i8 }
%struct.anon.82 = type { i8, i8 }
%struct.asc_sg_list_q = type { i8, i8, i8, i8, i8, i8 }
%struct.firmware = type { i64, i8*, i8* }
%struct.anon.83 = type { i8 }
%struct.asc_q_done_info = type { %struct.asc_scsiq_2, %struct.asc_scsiq_3, i8, i8, i8, i8, i8, i8, i32 }
%struct.asc_scsiq_3 = type { i8, i8, i8, i8 }
%struct.eisa_device = type { %struct.eisa_device_id, i32, i32, i64, [4 x %struct.resource], i64, %struct.device }
%struct.eisa_scsi_data = type { [2 x %struct.Scsi_Host*] }

@advansys_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([7 x %struct.pci_device_id], [7 x %struct.pci_device_id]* @advansys_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @advansys_pci_probe, void (%struct.pci_dev*)* @advansys_pci_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !0
@advansys_eisa_driver = internal global %struct.eisa_driver { %struct.eisa_device_id* getelementptr inbounds ([3 x %struct.eisa_device_id], [3 x %struct.eisa_device_id]* @advansys_eisa_table, i32 0, i32 0), %struct.device_driver { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* @advansys_eisa_probe, void (%struct.device*)* null, i32 (%struct.device*)* @advansys_eisa_remove, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null } }, align 8, !dbg !6091
@advansys_vlb_driver = internal global %struct.isa_driver { i32 (%struct.device*, i32)* null, i32 (%struct.device*, i32)* @advansys_vlb_probe, i32 (%struct.device*, i32)* @advansys_isa_remove, void (%struct.device*, i32)* null, i32 (%struct.device*, i32, i32)* null, i32 (%struct.device*, i32)* null, %struct.device_driver { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.152, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.device* null }, align 8, !dbg !6102
@advansys_isa_driver = internal global %struct.isa_driver { i32 (%struct.device*, i32)* null, i32 (%struct.device*, i32)* @advansys_isa_probe, i32 (%struct.device*, i32)* @advansys_isa_remove, void (%struct.device*, i32)* null, i32 (%struct.device*, i32, i32)* null, i32 (%struct.device*, i32)* null, %struct.device_driver { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.device* null }, align 8, !dbg !6129
@__UNIQUE_ID___addressable_advansys_init310 = internal global i8* bitcast (i32 ()* @advansys_init to i8*), section ".discard.addressable", align 8, !dbg !6028
@__exitcall_advansys_exit = internal global void ()* @advansys_exit, section ".exitcall.exit", align 8, !dbg !6030
@__UNIQUE_ID_file311 = internal constant [36 x i8] c"advansys.file=drivers/scsi/advansys\00", section ".modinfo", align 1, !dbg !6035
@__UNIQUE_ID_license312 = internal constant [21 x i8] c"advansys.license=GPL\00", section ".modinfo", align 1, !dbg !6040
@__UNIQUE_ID_firmware313 = internal constant [37 x i8] c"advansys.firmware=advansys/mcode.bin\00", section ".modinfo", align 1, !dbg !6045
@__UNIQUE_ID_firmware314 = internal constant [36 x i8] c"advansys.firmware=advansys/3550.bin\00", section ".modinfo", align 1, !dbg !6048
@__UNIQUE_ID_firmware315 = internal constant [39 x i8] c"advansys.firmware=advansys/38C0800.bin\00", section ".modinfo", align 1, !dbg !6050
@__UNIQUE_ID_firmware316 = internal constant [39 x i8] c"advansys.firmware=advansys/38C1600.bin\00", section ".modinfo", align 1, !dbg !6055
@.str = private unnamed_addr constant [9 x i8] c"advansys\00", align 1
@advansys_pci_tbl = internal global [7 x %struct.pci_device_id] [%struct.pci_device_id { i32 4301, i32 4352, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4301, i32 4608, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4301, i32 4864, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4301, i32 8960, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4301, i32 9472, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4301, i32 9984, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !6057
@advansys_template = internal global %struct.scsi_host_template { %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* (%struct.Scsi_Host*)* @advansys_info, i32 (%struct.scsi_device*, i32, i8*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @advansys_queuecommand, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* @advansys_reset, i32 (%struct.scsi_device*)* null, i32 (%struct.scsi_device*)* @advansys_slave_configure, void (%struct.scsi_device*)* null, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* null, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* @advansys_biosparam, void (%struct.scsi_device*)* null, i32 (%struct.seq_file*, %struct.Scsi_Host*)* @advansys_show_info, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %struct.proc_dir_entry* null, i32 0, i32 0, i16 0, i16 0, i32 0, i32 0, i64 0, i64 0, i16 0, i8 0, i32 0, i8 8, i32 0, %struct.device_attribute** null, %struct.device_attribute** null, %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !6060
@advansys_info.info = internal global [128 x i8] zeroinitializer, align 16, !dbg !6062
@.str.1 = private unnamed_addr constant [8 x i8] c"ISA PnP\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"ISA\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"AdvanSys SCSI %s: %s: IO 0x%lX-0x%lX, IRQ 0x%X, DMA 0x%X\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"3.5\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"VL\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"EISA\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"PCI Ultra\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"PCI\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"unknown bus type %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"AdvanSys SCSI %s: %s: IO 0x%lX-0x%lX, IRQ 0x%X\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"Ultra-Wide\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"Ultra2-Wide\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"Ultra3-Wide\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"AdvanSys SCSI %s: PCI %s: PCIMEM 0x%lX-0x%lX, IRQ 0x%X\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"drivers/scsi/advansys.c\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.18 = private unnamed_addr constant [41 x i8] c"ExeScsiQueue() ASC_ERROR, err_code 0x%x\0A\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"ExeScsiQueue() unknown, err_code 0x%x\0A\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"use_sg %d > sg_tablesize %d\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !6065
@.str.21 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.23 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@_syn_offset_one_disable_cmd = internal global [16 x i8] c"\12\03%C\15\1AUZ\FF\FF\FF\FF\FF\FF\FF\FF", align 16, !dbg !6071
@.str.24 = private unnamed_addr constant [32 x i8] c"use_sg %d > ADV_MAX_SG_LIST %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"SCSI host reset started...\0A\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"SCSI host reset error: 0x%x, status: 0x%x\0A\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"SCSI host reset warning: 0x%x\0A\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"SCSI host reset successful\0A\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"SCSI host reset error\0A\00", align 1
@__const.AscInitAsc1000Driver.fwname = private unnamed_addr constant [19 x i8] c"advansys/mcode.bin\00", align 16
@.str.31 = private unnamed_addr constant [36 x i8] c"\013Failed to load image \22%s\22 err %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"\013Bogus length %zu in image \22%s\22\0A\00", align 1
@__const.AdvInitAsc38C1600Driver.fwname = private unnamed_addr constant [21 x i8] c"advansys/38C1600.bin\00", align 16
@__const.AdvInitAsc38C0800Driver.fwname = private unnamed_addr constant [21 x i8] c"advansys/38C0800.bin\00", align 16
@__const.AdvInitAsc3550Driver.fwname = private unnamed_addr constant [18 x i8] c"advansys/3550.bin\00", align 16
@.str.33 = private unnamed_addr constant [11 x i8] c"advansys: \00", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"adv_isr_callback: scp is NULL; adv_req_t dropped.\0A\00", align 1
@.str.35 = private unnamed_addr constant [32 x i8] c"adv_isr_callback: reqp is NULL\0A\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"HP \00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"\0AROM BIOS Version: \00", align 1
@.str.39 = private unnamed_addr constant [163 x i8] c"Disabled or Pre-3.1\0ABIOS either disabled or Pre-3.1. If it is pre-3.1, then a newer version\0Acan be found at the ConnectCom FTP site: ftp://ftp.connectcom.net/pub\0A\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"%d.%d%c\0A\00", align 1
@.str.41 = private unnamed_addr constant [97 x i8] c"Newer version of ROM BIOS is available at the ConnectCom FTP site:\0Aftp://ftp.connectcom.net/pub\0A\00", align 1
@.str.42 = private unnamed_addr constant [48 x i8] c"\0ADevice Information for AdvanSys SCSI Host %d:\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Target IDs Detected:\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c" %X,\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c" (%X=Host Adapter)\0A\00", align 1
@.str.46 = private unnamed_addr constant [45 x i8] c"\0AEEPROM Settings for AdvanSys SCSI Host %d:\0A\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c" Serial Number: %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [49 x i8] c" Default Settings Used for EEPROM-less Adapter.\0A\00", align 1
@.str.49 = private unnamed_addr constant [39 x i8] c" Serial Number Signature Not Present.\0A\00", align 1
@.str.50 = private unnamed_addr constant [63 x i8] c" Host SCSI ID: %u, Host Queue Size: %u, Device Queue Size: %u\0A\00", align 1
@.str.51 = private unnamed_addr constant [26 x i8] c" cntl 0x%x, no_scam 0x%x\0A\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c" Target ID:           \00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"\0A Disconnects:         \00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c" %c\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"\0A Command Queuing:     \00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"\0A Start Motor:         \00", align 1
@.str.58 = private unnamed_addr constant [24 x i8] c"\0A Synchronous Transfer:\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"Low Off/High Off\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"Low Off/High On\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"Low On/High On\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"Automatic\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c" termination: %u (%s), bios_ctrl: 0x%x\0A\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c" %X\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c" Disconnects:         \00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c" Command Queuing:     \00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c" Start Motor:         \00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c" Synchronous Transfer:\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c" Ultra Transfer:      \00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c" Wide Transfer:       \00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c" Synchronous Transfer Speed (Mhz):\0A  \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"Off\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"  5\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c" 10\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c" 20\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c" 40\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c" 80\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"Unk\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"%X:%s \00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"\0A  \00", align 1
@.str.81 = private unnamed_addr constant [72 x i8] c"\0ALinux Driver Configuration and Information for AdvanSys SCSI Host %d:\0A\00", align 1
@.str.82 = private unnamed_addr constant [56 x i8] c" host_busy %d, max_id %u, max_lun %llu, max_channel %u\0A\00", align 1
@.str.83 = private unnamed_addr constant [74 x i8] c" unique_id %d, can_queue %d, this_id %d, sg_tablesize %u, cmd_per_lun %u\0A\00", align 1
@.str.84 = private unnamed_addr constant [23 x i8] c" unchecked_isa_dma %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [66 x i8] c" flags 0x%x, last_reset 0x%lx, jiffies 0x%lx, asc_n_io_port 0x%x\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.86 = private unnamed_addr constant [16 x i8] c" io_port 0x%lx\0A\00", align 1
@.str.87 = private unnamed_addr constant [53 x i8] c"\0ALinux Driver Statistics for AdvanSys SCSI Host %d:\0A\00", align 1
@.str.88 = private unnamed_addr constant [56 x i8] c" queuecommand %u, reset %u, biosparam %u, interrupt %u\0A\00", align 1
@.str.89 = private unnamed_addr constant [70 x i8] c" callback %u, done %u, build_error %u, build_noreq %u, build_nosg %u\0A\00", align 1
@.str.90 = private unnamed_addr constant [60 x i8] c" exe_noerror %u, exe_busy %u, exe_error %u, exe_unknown %u\0A\00", align 1
@.str.91 = private unnamed_addr constant [29 x i8] c" xfer_cnt %u, xfer_elem %u, \00", align 1
@.str.92 = private unnamed_addr constant [23 x i8] c"xfer_bytes %u.%01u kb\0A\00", align 1
@.str.93 = private unnamed_addr constant [24 x i8] c" avg_num_elem %u.%01u, \00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"avg_elem_size %u.%01u kb, \00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"avg_xfer_size %u.%01u kb\0A\00", align 1
@.str.96 = private unnamed_addr constant [70 x i8] c"\0AAsc Library Configuration and Statistics for AdvanSys SCSI Host %d:\0A\00", align 1
@.str.97 = private unnamed_addr constant [68 x i8] c" chip_version %u, mcode_date 0x%x, mcode_version 0x%x, err_code %u\0A\00", align 1
@.str.98 = private unnamed_addr constant [28 x i8] c" Total Command Pending: %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c" Command Queuing:\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c" %X:%c\00", align 1
@.str.101 = private unnamed_addr constant [25 x i8] c"\0A Command Queue Pending:\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c" %X:%u\00", align 1
@.str.103 = private unnamed_addr constant [23 x i8] c"\0A Command Queue Limit:\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"\0A Command Queue Full:\00", align 1
@.str.105 = private unnamed_addr constant [9 x i8] c" %X:Y-%d\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c" %X:N\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"  %X:\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c" Asynchronous\00", align 1
@.str.109 = private unnamed_addr constant [41 x i8] c" Transfer Period Factor: %d (%d.%d Mhz),\00", align 1
@.str.110 = private unnamed_addr constant [20 x i8] c" REQ/ACK Offset: %d\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"*\0A\00", align 1
@.str.112 = private unnamed_addr constant [50 x i8] c" * = Re-negotiation pending before next command.\0A\00", align 1
@.str.113 = private unnamed_addr constant [70 x i8] c"\0AAdv Library Configuration and Statistics for AdvanSys SCSI Host %d:\0A\00", align 1
@.str.114 = private unnamed_addr constant [48 x i8] c" iop_base 0x%lx, cable_detect: %X, err_code %u\0A\00", align 1
@.str.115 = private unnamed_addr constant [55 x i8] c" chip_version %u, mcode_date 0x%x, mcode_version 0x%x\0A\00", align 1
@.str.116 = private unnamed_addr constant [18 x i8] c" Queuing Enabled:\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"\0A Queue Limit:\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c" %X:%d\00", align 1
@.str.119 = private unnamed_addr constant [19 x i8] c"\0A Command Pending:\00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c" Wide Enabled:\00", align 1
@.str.121 = private unnamed_addr constant [21 x i8] c" Transfer Bit Width:\00", align 1
@.str.122 = private unnamed_addr constant [22 x i8] c" Synchronous Enabled:\00", align 1
@.str.123 = private unnamed_addr constant [26 x i8] c" Transfer Period Factor: \00", align 1
@.str.124 = private unnamed_addr constant [14 x i8] c"9 (80.0 Mhz),\00", align 1
@.str.125 = private unnamed_addr constant [15 x i8] c"10 (40.0 Mhz),\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"%d (? Mhz), \00", align 1
@.str.127 = private unnamed_addr constant [16 x i8] c"%d (%d.%d Mhz),\00", align 1
@.str.128 = private unnamed_addr constant [32 x i8] c"ioremap(%lx, %d) returned NULL\0A\00", align 1
@.str.129 = private unnamed_addr constant [26 x i8] c"unknown adapter type: %d\0A\00", align 1
@.str.130 = private unnamed_addr constant [40 x i8] c"request_irq(): IRQ 0x%x already in use\0A\00", align 1
@.str.131 = private unnamed_addr constant [35 x i8] c"request_irq(): IRQ 0x%x not valid\0A\00", align 1
@.str.132 = private unnamed_addr constant [40 x i8] c"request_irq(): IRQ 0x%x failed with %d\0A\00", align 1
@.str.133 = private unnamed_addr constant [47 x i8] c"error: init_state 0x%x, warn 0x%x, error 0x%x\0A\00", align 1
@.str.134 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.135 = private unnamed_addr constant [27 x i8] c"I/O port address modified\0A\00", align 1
@.str.136 = private unnamed_addr constant [35 x i8] c"I/O port increment switch enabled\0A\00", align 1
@.str.137 = private unnamed_addr constant [23 x i8] c"EEPROM checksum error\0A\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"IRQ modified\0A\00", align 1
@.str.139 = private unnamed_addr constant [37 x i8] c"tag queuing enabled w/o disconnects\0A\00", align 1
@.str.140 = private unnamed_addr constant [23 x i8] c"unknown warning: 0x%x\0A\00", align 1
@.str.141 = private unnamed_addr constant [31 x i8] c"error 0x%x at init_state 0x%x\0A\00", align 1
@asc_syn_xfer_period = internal constant [8 x i8] c"\19\1E#(2<FU", align 1, !dbg !6073
@asc_syn_ultra_xfer_period = internal constant [16 x i8] c"\0C\13\19 &,29?EKRX^dk", align 16, !dbg !6076
@.str.142 = private unnamed_addr constant [69 x i8] c"AscInitFromEEP: EEPROM checksum error; Will try to re-write EEPROM.\0A\00", align 1
@.str.143 = private unnamed_addr constant [59 x i8] c"AscInitFromEEP: Failed to re-write EEPROM with %d errors.\0A\00", align 1
@.str.144 = private unnamed_addr constant [47 x i8] c"AscInitFromEEP: Successfully re-wrote EEPROM.\0A\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"warning: 0x%x\0A\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"error code 0x%x\0A\00", align 1
@Default_38C1600_EEPROM_Config = internal global %struct.adveep_38C1600_config { i16 16384, i16 0, i16 -1, i16 -1, i16 21845, i16 -1, i16 -1, i16 -1, i16 0, i8 7, i8 0, i8 3, i8 0, i8 0, i8 0, i16 -25, i16 21845, i16 21845, i8 -3, i8 63, i16 0, i16 21845, i16 0, i16 0, i16 0, i16 0, [16 x i8] zeroinitializer, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 4301, i16 9984, i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !6081
@ADVEEP_38C1600_Config_Field_IsChar = internal global %struct.adveep_38C1600_config { i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i16 0, i16 0, i16 0, i8 1, i8 1, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, [16 x i8] c"\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !6079
@Default_38C0800_EEPROM_Config = internal global %struct.adveep_38C0800_config { i16 16384, i16 0, i16 -1, i16 -1, i16 17476, i16 -1, i16 -1, i16 -1, i16 0, i8 7, i8 0, i8 3, i8 0, i8 0, i8 0, i16 -25, i16 17476, i16 17476, i8 -3, i8 63, i16 0, i16 17476, i16 0, i16 0, i16 0, i16 0, [16 x i8] zeroinitializer, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 4301, i16 9472, i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !6085
@ADVEEP_38C0800_Config_Field_IsChar = internal global %struct.adveep_38C0800_config { i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i16 0, i16 0, i16 0, i8 1, i8 1, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, [16 x i8] c"\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !6083
@Default_3550_EEPROM_Config = internal global %struct.adveep_3550_config { i16 16384, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i8 7, i8 0, i8 3, i8 0, i8 0, i8 0, i16 -25, i16 -1, i16 0, i8 -3, i8 63, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, [16 x i8] zeroinitializer, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !6089
@ADVEEP_3550_Config_Field_IsChar = internal global %struct.adveep_3550_config { i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i16 0, i16 0, i16 0, i8 1, i8 1, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, [16 x i8] c"\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !6087
@.str.147 = private unnamed_addr constant [29 x i8] c"tag queuing w/o disconnects\0A\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"adv_sgblk\00", align 1
@.str.149 = private unnamed_addr constant [30 x i8] c"error: warn 0x%x, error 0x%x\0A\00", align 1
@.str.150 = private unnamed_addr constant [25 x i8] c"error: kmalloc() failed\0A\00", align 1
@advansys_eisa_table = internal global [3 x %struct.eisa_device_id] [%struct.eisa_device_id { [8 x i8] c"ABP7401\00", i64 0 }, %struct.eisa_device_id { [8 x i8] c"ABP7501\00", i64 0 }, %struct.eisa_device_id zeroinitializer], align 16, !dbg !6099
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.151 = private unnamed_addr constant [21 x i8] c"\014Region %x-%x busy\0A\00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"advansys_vlb\00", align 1
@_asc_def_iop_base = internal global [11 x i32] [i32 256, i32 272, i32 288, i32 304, i32 320, i32 336, i32 400, i32 528, i32 560, i32 592, i32 816], align 16, !dbg !6124
@llvm.used = appending global [9 x i8*] [i8* bitcast (void ()* @advansys_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_advansys_init310 to i8*), i8* bitcast (void ()** @__exitcall_advansys_exit to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_file311, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license312, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_firmware313, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_firmware314, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware315, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware316, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @advansys_exit() #0 section ".exit.text" !dbg !6137 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @advansys_pci_driver) #11, !dbg !6138
  call void @eisa_driver_unregister(%struct.eisa_driver* @advansys_eisa_driver) #11, !dbg !6139
  call void @isa_unregister_driver(%struct.isa_driver* @advansys_vlb_driver) #11, !dbg !6140
  call void @isa_unregister_driver(%struct.isa_driver* @advansys_isa_driver) #11, !dbg !6141
  ret void, !dbg !6142
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eisa_driver_unregister(%struct.eisa_driver* %edrv) #2 !dbg !6143 {
entry:
  %edrv.addr = alloca %struct.eisa_driver*, align 8
  store %struct.eisa_driver* %edrv, %struct.eisa_driver** %edrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.eisa_driver** %edrv.addr, metadata !6147, metadata !DIExpression()), !dbg !6148
  ret void, !dbg !6149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isa_unregister_driver(%struct.isa_driver* %d) #2 !dbg !6150 {
entry:
  %d.addr = alloca %struct.isa_driver*, align 8
  store %struct.isa_driver* %d, %struct.isa_driver** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isa_driver** %d.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  ret void, !dbg !6156
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_init() #0 section ".init.text" !dbg !6157 {
entry:
  %retval = alloca i32, align 4
  %error = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6160, metadata !DIExpression()), !dbg !6161
  %call = call i32 @isa_register_driver(%struct.isa_driver* @advansys_isa_driver, i32 11) #11, !dbg !6162
  store i32 %call, i32* %error, align 4, !dbg !6163
  %0 = load i32, i32* %error, align 4, !dbg !6164
  %tobool = icmp ne i32 %0, 0, !dbg !6164
  br i1 %tobool, label %if.then, label %if.end, !dbg !6166

if.then:                                          ; preds = %entry
  br label %fail, !dbg !6167

if.end:                                           ; preds = %entry
  %call1 = call i32 @isa_register_driver(%struct.isa_driver* @advansys_vlb_driver, i32 11) #11, !dbg !6168
  store i32 %call1, i32* %error, align 4, !dbg !6169
  %1 = load i32, i32* %error, align 4, !dbg !6170
  %tobool2 = icmp ne i32 %1, 0, !dbg !6170
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6172

if.then3:                                         ; preds = %if.end
  br label %unregister_isa, !dbg !6173

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @eisa_driver_register(%struct.eisa_driver* @advansys_eisa_driver) #11, !dbg !6174
  store i32 %call5, i32* %error, align 4, !dbg !6175
  %2 = load i32, i32* %error, align 4, !dbg !6176
  %tobool6 = icmp ne i32 %2, 0, !dbg !6176
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6178

if.then7:                                         ; preds = %if.end4
  br label %unregister_vlb, !dbg !6179

if.end8:                                          ; preds = %if.end4
  %call9 = call i32 @__pci_register_driver(%struct.pci_driver* @advansys_pci_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11, !dbg !6180
  store i32 %call9, i32* %error, align 4, !dbg !6181
  %3 = load i32, i32* %error, align 4, !dbg !6182
  %tobool10 = icmp ne i32 %3, 0, !dbg !6182
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6184

if.then11:                                        ; preds = %if.end8
  br label %unregister_eisa, !dbg !6185

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !6186
  br label %return, !dbg !6186

unregister_eisa:                                  ; preds = %if.then11
  call void @llvm.dbg.label(metadata !6187), !dbg !6188
  call void @eisa_driver_unregister(%struct.eisa_driver* @advansys_eisa_driver) #11, !dbg !6189
  br label %unregister_vlb, !dbg !6189

unregister_vlb:                                   ; preds = %unregister_eisa, %if.then7
  call void @llvm.dbg.label(metadata !6190), !dbg !6191
  call void @isa_unregister_driver(%struct.isa_driver* @advansys_vlb_driver) #11, !dbg !6192
  br label %unregister_isa, !dbg !6192

unregister_isa:                                   ; preds = %unregister_vlb, %if.then3
  call void @llvm.dbg.label(metadata !6193), !dbg !6194
  call void @isa_unregister_driver(%struct.isa_driver* @advansys_isa_driver) #11, !dbg !6195
  br label %fail, !dbg !6195

fail:                                             ; preds = %unregister_isa, %if.then
  call void @llvm.dbg.label(metadata !6196), !dbg !6197
  %4 = load i32, i32* %error, align 4, !dbg !6198
  store i32 %4, i32* %retval, align 4, !dbg !6199
  br label %return, !dbg !6199

return:                                           ; preds = %fail, %if.end12
  %5 = load i32, i32* %retval, align 4, !dbg !6200
  ret i32 %5, !dbg !6200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !6201 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %err = alloca i32, align 4
  %ioport = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6206, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.declare(metadata i32* %ioport, metadata !6208, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6214
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #11, !dbg !6215
  store i32 %call, i32* %err, align 4, !dbg !6216
  %1 = load i32, i32* %err, align 4, !dbg !6217
  %tobool = icmp ne i32 %1, 0, !dbg !6217
  br i1 %tobool, label %if.then, label %if.end, !dbg !6219

if.then:                                          ; preds = %entry
  br label %fail, !dbg !6220

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6221
  %call1 = call i32 @pci_request_regions(%struct.pci_dev* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11, !dbg !6222
  store i32 %call1, i32* %err, align 4, !dbg !6223
  %3 = load i32, i32* %err, align 4, !dbg !6224
  %tobool2 = icmp ne i32 %3, 0, !dbg !6224
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6226

if.then3:                                         ; preds = %if.end
  br label %disable_device, !dbg !6227

if.end4:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6228
  call void @pci_set_master(%struct.pci_dev* %4) #11, !dbg !6229
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6230
  call void @advansys_set_latency(%struct.pci_dev* %5) #11, !dbg !6231
  store i32 -19, i32* %err, align 4, !dbg !6232
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6233
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !6233
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6233
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !6233
  %7 = load i64, i64* %start, align 8, !dbg !6233
  %cmp = icmp eq i64 %7, 0, !dbg !6233
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6233

land.lhs.true:                                    ; preds = %if.end4
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6233
  %resource5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !6233
  %arrayidx6 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource5, i64 0, i64 0, !dbg !6233
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx6, i32 0, i32 1, !dbg !6233
  %9 = load i64, i64* %end, align 8, !dbg !6233
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6233
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !6233
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 0, !dbg !6233
  %start9 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 0, !dbg !6233
  %11 = load i64, i64* %start9, align 8, !dbg !6233
  %cmp10 = icmp eq i64 %9, %11, !dbg !6233
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !6233

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !6233

cond.false:                                       ; preds = %land.lhs.true, %if.end4
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6233
  %resource11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !6233
  %arrayidx12 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource11, i64 0, i64 0, !dbg !6233
  %end13 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx12, i32 0, i32 1, !dbg !6233
  %13 = load i64, i64* %end13, align 8, !dbg !6233
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6233
  %resource14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 44, !dbg !6233
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource14, i64 0, i64 0, !dbg !6233
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !6233
  %15 = load i64, i64* %start16, align 8, !dbg !6233
  %sub = sub i64 %13, %15, !dbg !6233
  %add = add i64 %sub, 1, !dbg !6233
  br label %cond.end, !dbg !6233

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !6233
  %cmp17 = icmp eq i64 %cond, 0, !dbg !6235
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !6236

if.then18:                                        ; preds = %cond.end
  br label %release_region, !dbg !6237

if.end19:                                         ; preds = %cond.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6238
  %resource20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !6238
  %arrayidx21 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource20, i64 0, i64 0, !dbg !6238
  %start22 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx21, i32 0, i32 0, !dbg !6238
  %17 = load i64, i64* %start22, align 8, !dbg !6238
  %conv = trunc i64 %17 to i32, !dbg !6238
  store i32 %conv, i32* %ioport, align 4, !dbg !6239
  store i32 -12, i32* %err, align 4, !dbg !6240
  %call23 = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @advansys_template, i32 640) #11, !dbg !6241
  store %struct.Scsi_Host* %call23, %struct.Scsi_Host** %shost, align 8, !dbg !6242
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !6243
  %tobool24 = icmp ne %struct.Scsi_Host* %18, null, !dbg !6243
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !6245

if.then25:                                        ; preds = %if.end19
  br label %release_region, !dbg !6246

if.end26:                                         ; preds = %if.end19
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !6247
  %call27 = call i8* @shost_priv(%struct.Scsi_Host* %19) #11, !dbg !6248
  %20 = bitcast i8* %call27 to %struct.asc_board*, !dbg !6248
  store %struct.asc_board* %20, %struct.asc_board** %board, align 8, !dbg !6249
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6250
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 43, !dbg !6251
  %22 = load i32, i32* %irq, align 4, !dbg !6251
  %23 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !6252
  %irq28 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %23, i32 0, i32 3, !dbg !6253
  store i32 %22, i32* %irq28, align 4, !dbg !6254
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6255
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !6256
  %25 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !6257
  %dev29 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %25, i32 0, i32 0, !dbg !6258
  store %struct.device* %dev, %struct.device** %dev29, align 8, !dbg !6259
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !6260
  %27 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !6261
  %shost30 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %27, i32 0, i32 1, !dbg !6262
  store %struct.Scsi_Host* %26, %struct.Scsi_Host** %shost30, align 8, !dbg !6263
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6264
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 8, !dbg !6266
  %29 = load i16, i16* %device, align 2, !dbg !6266
  %conv31 = zext i16 %29 to i32, !dbg !6264
  %cmp32 = icmp eq i32 %conv31, 8960, !dbg !6267
  br i1 %cmp32, label %if.then43, label %lor.lhs.false, !dbg !6268

lor.lhs.false:                                    ; preds = %if.end26
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6269
  %device34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 8, !dbg !6270
  %31 = load i16, i16* %device34, align 2, !dbg !6270
  %conv35 = zext i16 %31 to i32, !dbg !6269
  %cmp36 = icmp eq i32 %conv35, 9472, !dbg !6271
  br i1 %cmp36, label %if.then43, label %lor.lhs.false38, !dbg !6272

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6273
  %device39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 8, !dbg !6274
  %33 = load i16, i16* %device39, align 2, !dbg !6274
  %conv40 = zext i16 %33 to i32, !dbg !6273
  %cmp41 = icmp eq i32 %conv40, 9984, !dbg !6275
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !6276

if.then43:                                        ; preds = %lor.lhs.false38, %lor.lhs.false, %if.end26
  %34 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !6277
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %34, i32 0, i32 2, !dbg !6279
  %35 = load i32, i32* %flags, align 8, !dbg !6280
  %or = or i32 %35, 4, !dbg !6280
  store i32 %or, i32* %flags, align 8, !dbg !6280
  br label %if.end44, !dbg !6281

if.end44:                                         ; preds = %if.then43, %lor.lhs.false38
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !6282
  %37 = load i32, i32* %ioport, align 4, !dbg !6283
  %call45 = call i32 @advansys_board_found(%struct.Scsi_Host* %36, i32 %37, i32 4) #11, !dbg !6284
  store i32 %call45, i32* %err, align 4, !dbg !6285
  %38 = load i32, i32* %err, align 4, !dbg !6286
  %tobool46 = icmp ne i32 %38, 0, !dbg !6286
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !6288

if.then47:                                        ; preds = %if.end44
  br label %free_host, !dbg !6289

if.end48:                                         ; preds = %if.end44
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6290
  %40 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !6291
  %41 = bitcast %struct.Scsi_Host* %40 to i8*, !dbg !6291
  call void @pci_set_drvdata(%struct.pci_dev* %39, i8* %41) #11, !dbg !6292
  store i32 0, i32* %retval, align 4, !dbg !6293
  br label %return, !dbg !6293

free_host:                                        ; preds = %if.then47
  call void @llvm.dbg.label(metadata !6294), !dbg !6295
  %42 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !6296
  call void @scsi_host_put(%struct.Scsi_Host* %42) #11, !dbg !6297
  br label %release_region, !dbg !6297

release_region:                                   ; preds = %free_host, %if.then25, %if.then18
  call void @llvm.dbg.label(metadata !6298), !dbg !6299
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6300
  call void @pci_release_regions(%struct.pci_dev* %43) #11, !dbg !6301
  br label %disable_device, !dbg !6301

disable_device:                                   ; preds = %release_region, %if.then3
  call void @llvm.dbg.label(metadata !6302), !dbg !6303
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6304
  call void @pci_disable_device(%struct.pci_dev* %44) #11, !dbg !6305
  br label %fail, !dbg !6305

fail:                                             ; preds = %disable_device, %if.then
  call void @llvm.dbg.label(metadata !6306), !dbg !6307
  %45 = load i32, i32* %err, align 4, !dbg !6308
  store i32 %45, i32* %retval, align 4, !dbg !6309
  br label %return, !dbg !6309

return:                                           ; preds = %fail, %if.end48
  %46 = load i32, i32* %retval, align 4, !dbg !6310
  ret i32 %46, !dbg !6310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_pci_remove(%struct.pci_dev* %pdev) #2 !dbg !6311 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6314
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !6315
  %1 = bitcast i8* %call to %struct.Scsi_Host*, !dbg !6315
  %call1 = call i32 @advansys_release(%struct.Scsi_Host* %1) #11, !dbg !6316
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6317
  call void @pci_release_regions(%struct.pci_dev* %2) #11, !dbg !6318
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6319
  call void @pci_disable_device(%struct.pci_dev* %3) #11, !dbg !6320
  ret void, !dbg !6321
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_set_latency(%struct.pci_dev* %pdev) #2 !dbg !6322 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %latency = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6325
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !6327
  %1 = load i16, i16* %device, align 2, !dbg !6327
  %conv = zext i16 %1 to i32, !dbg !6325
  %cmp = icmp eq i32 %conv, 4352, !dbg !6328
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6329

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6330
  %device2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !6331
  %3 = load i16, i16* %device2, align 2, !dbg !6331
  %conv3 = zext i16 %3 to i32, !dbg !6330
  %cmp4 = icmp eq i32 %conv3, 4608, !dbg !6332
  br i1 %cmp4, label %if.then, label %if.else, !dbg !6333

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6334
  %call = call i32 @pci_write_config_byte(%struct.pci_dev* %4, i32 13, i8 zeroext 0) #11, !dbg !6336
  br label %if.end12, !dbg !6337

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8* %latency, metadata !6338, metadata !DIExpression()), !dbg !6340
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6341
  %call6 = call i32 @pci_read_config_byte(%struct.pci_dev* %5, i32 13, i8* %latency) #11, !dbg !6342
  %6 = load i8, i8* %latency, align 1, !dbg !6343
  %conv7 = zext i8 %6 to i32, !dbg !6343
  %cmp8 = icmp slt i32 %conv7, 32, !dbg !6345
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !6346

if.then10:                                        ; preds = %if.else
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6347
  %call11 = call i32 @pci_write_config_byte(%struct.pci_dev* %7, i32 13, i8 zeroext 32) #11, !dbg !6348
  br label %if.end, !dbg !6348

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  ret void, !dbg !6349
}

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @shost_priv(%struct.Scsi_Host* %shost) #2 !dbg !6350 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6355
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !6356
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6355
  %1 = bitcast i64* %arraydecay to i8*, !dbg !6357
  ret i8* %1, !dbg !6358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_board_found(%struct.Scsi_Host* %shost, i32 %iop, i32 %bus_type) #2 !dbg !6359 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %iop.addr = alloca i32, align 4
  %bus_type.addr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %asc_dvc_varp = alloca %struct.asc_dvc_var*, align 8
  %adv_dvc_varp = alloca %struct.adv_dvc_var*, align 8
  %share_irq = alloca i32, align 4
  %warn_code = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %ep = alloca %struct.asceep_config*, align 8
  %ep_3550 = alloca %struct.adveep_3550_config*, align 8
  %ep_38C0800 = alloca %struct.adveep_38C0800_config*, align 8
  %ep_38C1600 = alloca %struct.adveep_38C1600_config*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  store i32 %iop, i32* %iop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop.addr, metadata !6364, metadata !DIExpression()), !dbg !6365
  store i32 %bus_type, i32* %bus_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_type.addr, metadata !6366, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !6368, metadata !DIExpression()), !dbg !6369
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !6370, metadata !DIExpression()), !dbg !6371
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6372
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !6373
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !6373
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !6371
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc_varp, metadata !6374, metadata !DIExpression()), !dbg !6376
  store %struct.asc_dvc_var* null, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6376
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc_varp, metadata !6377, metadata !DIExpression()), !dbg !6379
  store %struct.adv_dvc_var* null, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6379
  call void @llvm.dbg.declare(metadata i32* %share_irq, metadata !6380, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.declare(metadata i32* %warn_code, metadata !6382, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6384, metadata !DIExpression()), !dbg !6385
  %2 = load i32, i32* %bus_type.addr, align 4, !dbg !6386
  %cmp = icmp eq i32 %2, 4, !dbg !6387
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6388

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6389, metadata !DIExpression()), !dbg !6391
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6391
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 0, !dbg !6391
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6391
  %5 = bitcast %struct.device* %4 to i8*, !dbg !6391
  store i8* %5, i8** %__mptr, align 8, !dbg !6391
  br label %do.body, !dbg !6391

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6392

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !6391
  %add.ptr = getelementptr i8, i8* %6, i64 -176, !dbg !6391
  %7 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6391
  store %struct.pci_dev* %7, %struct.pci_dev** %tmp, align 8, !dbg !6392
  %8 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6391
  br label %cond.end, !dbg !6388

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6388

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.pci_dev* [ %8, %do.end ], [ null, %cond.false ], !dbg !6388
  store %struct.pci_dev* %cond, %struct.pci_dev** %pdev, align 8, !dbg !6394
  %9 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6395
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 2, !dbg !6395
  %10 = load i32, i32* %flags, align 8, !dbg !6395
  %and = and i32 %10, 4, !dbg !6395
  %cmp1 = icmp eq i32 %and, 0, !dbg !6395
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6397

if.then:                                          ; preds = %cond.end
  %11 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6398
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %11, i32 0, i32 4, !dbg !6400
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !6401
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6402
  %12 = load i32, i32* %bus_type.addr, align 4, !dbg !6403
  %conv = trunc i32 %12 to i16, !dbg !6403
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6404
  %bus_type2 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 4, !dbg !6405
  store i16 %conv, i16* %bus_type2, align 2, !dbg !6406
  %14 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6407
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6408
  %drv_ptr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %15, i32 0, i32 36, !dbg !6409
  store %struct.asc_board* %14, %struct.asc_board** %drv_ptr, align 8, !dbg !6410
  %16 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6411
  %dvc_cfg = getelementptr inbounds %struct.asc_board, %struct.asc_board* %16, i32 0, i32 5, !dbg !6412
  %asc_dvc_cfg = bitcast %union.anon.78* %dvc_cfg to %struct.asc_dvc_cfg*, !dbg !6413
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6414
  %cfg = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 26, !dbg !6415
  store %struct.asc_dvc_cfg* %asc_dvc_cfg, %struct.asc_dvc_cfg** %cfg, align 8, !dbg !6416
  %18 = load i32, i32* %iop.addr, align 4, !dbg !6417
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6418
  %iop_base = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 0, !dbg !6419
  store i32 %18, i32* %iop_base, align 8, !dbg !6420
  br label %if.end53, !dbg !6421

if.else:                                          ; preds = %cond.end
  %20 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6422
  %dvc_var3 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %20, i32 0, i32 4, !dbg !6424
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var3 to %struct.adv_dvc_var*, !dbg !6425
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6426
  %21 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6427
  %22 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6428
  %drv_ptr4 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %22, i32 0, i32 18, !dbg !6429
  store %struct.asc_board* %21, %struct.asc_board** %drv_ptr4, align 8, !dbg !6430
  %23 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6431
  %dvc_cfg5 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %23, i32 0, i32 5, !dbg !6432
  %adv_dvc_cfg = bitcast %union.anon.78* %dvc_cfg5 to %struct.adv_dvc_cfg*, !dbg !6433
  %24 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6434
  %cfg6 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %24, i32 0, i32 28, !dbg !6435
  store %struct.adv_dvc_cfg* %adv_dvc_cfg, %struct.adv_dvc_cfg** %cfg6, align 8, !dbg !6436
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6437
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 8, !dbg !6439
  %26 = load i16, i16* %device, align 2, !dbg !6439
  %conv7 = zext i16 %26 to i32, !dbg !6437
  %cmp8 = icmp eq i32 %conv7, 8960, !dbg !6440
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !6441

if.then10:                                        ; preds = %if.else
  %27 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6442
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %27, i32 0, i32 20, !dbg !6444
  store i8 1, i8* %chip_type, align 1, !dbg !6445
  br label %if.end20, !dbg !6446

if.else11:                                        ; preds = %if.else
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6447
  %device12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 8, !dbg !6449
  %29 = load i16, i16* %device12, align 2, !dbg !6449
  %conv13 = zext i16 %29 to i32, !dbg !6447
  %cmp14 = icmp eq i32 %conv13, 9472, !dbg !6450
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !6451

if.then16:                                        ; preds = %if.else11
  %30 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6452
  %chip_type17 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %30, i32 0, i32 20, !dbg !6454
  store i8 2, i8* %chip_type17, align 1, !dbg !6455
  br label %if.end, !dbg !6456

if.else18:                                        ; preds = %if.else11
  %31 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6457
  %chip_type19 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %31, i32 0, i32 20, !dbg !6459
  store i8 3, i8* %chip_type19, align 1, !dbg !6460
  br label %if.end

if.end:                                           ; preds = %if.else18, %if.then16
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then10
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6461
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 44, !dbg !6461
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 1, !dbg !6461
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !6461
  %33 = load i64, i64* %start, align 8, !dbg !6461
  %cmp21 = icmp eq i64 %33, 0, !dbg !6461
  br i1 %cmp21, label %land.lhs.true, label %cond.false31, !dbg !6461

land.lhs.true:                                    ; preds = %if.end20
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6461
  %resource23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 44, !dbg !6461
  %arrayidx24 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource23, i64 0, i64 1, !dbg !6461
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx24, i32 0, i32 1, !dbg !6461
  %35 = load i64, i64* %end, align 8, !dbg !6461
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6461
  %resource25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 44, !dbg !6461
  %arrayidx26 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource25, i64 0, i64 1, !dbg !6461
  %start27 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx26, i32 0, i32 0, !dbg !6461
  %37 = load i64, i64* %start27, align 8, !dbg !6461
  %cmp28 = icmp eq i64 %35, %37, !dbg !6461
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !6461

cond.true30:                                      ; preds = %land.lhs.true
  br label %cond.end38, !dbg !6461

cond.false31:                                     ; preds = %land.lhs.true, %if.end20
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6461
  %resource32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 44, !dbg !6461
  %arrayidx33 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource32, i64 0, i64 1, !dbg !6461
  %end34 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx33, i32 0, i32 1, !dbg !6461
  %39 = load i64, i64* %end34, align 8, !dbg !6461
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6461
  %resource35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 44, !dbg !6461
  %arrayidx36 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource35, i64 0, i64 1, !dbg !6461
  %start37 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx36, i32 0, i32 0, !dbg !6461
  %41 = load i64, i64* %start37, align 8, !dbg !6461
  %sub = sub i64 %39, %41, !dbg !6461
  %add = add i64 %sub, 1, !dbg !6461
  br label %cond.end38, !dbg !6461

cond.end38:                                       ; preds = %cond.false31, %cond.true30
  %cond39 = phi i64 [ 0, %cond.true30 ], [ %add, %cond.false31 ], !dbg !6461
  %conv40 = trunc i64 %cond39 to i16, !dbg !6461
  %42 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6462
  %asc_n_io_port = getelementptr inbounds %struct.asc_board, %struct.asc_board* %42, i32 0, i32 6, !dbg !6463
  store i16 %conv40, i16* %asc_n_io_port, align 2, !dbg !6464
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6465
  %call41 = call i8* @pci_ioremap_bar(%struct.pci_dev* %43, i32 1) #11, !dbg !6466
  %44 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6467
  %ioremap_addr = getelementptr inbounds %struct.asc_board, %struct.asc_board* %44, i32 0, i32 14, !dbg !6468
  store i8* %call41, i8** %ioremap_addr, align 8, !dbg !6469
  %45 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6470
  %ioremap_addr42 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %45, i32 0, i32 14, !dbg !6472
  %46 = load i8*, i8** %ioremap_addr42, align 8, !dbg !6472
  %tobool = icmp ne i8* %46, null, !dbg !6470
  br i1 %tobool, label %if.end49, label %if.then43, !dbg !6473

if.then43:                                        ; preds = %cond.end38
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6474
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 47, !dbg !6474
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6474
  %resource44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 44, !dbg !6474
  %arrayidx45 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource44, i64 0, i64 1, !dbg !6474
  %start46 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx45, i32 0, i32 0, !dbg !6474
  %49 = load i64, i64* %start46, align 8, !dbg !6474
  %50 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6474
  %asc_n_io_port47 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %50, i32 0, i32 6, !dbg !6474
  %51 = load i16, i16* %asc_n_io_port47, align 2, !dbg !6474
  %conv48 = zext i16 %51 to i32, !dbg !6474
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.128, i64 0, i64 0), i64 %49, i32 %conv48) #12, !dbg !6474
  store i32 -19, i32* %ret, align 4, !dbg !6476
  br label %err_shost, !dbg !6477

if.end49:                                         ; preds = %cond.end38
  %52 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6478
  %ioremap_addr50 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %52, i32 0, i32 14, !dbg !6479
  %53 = load i8*, i8** %ioremap_addr50, align 8, !dbg !6479
  %54 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6480
  %iop_base51 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %54, i32 0, i32 0, !dbg !6481
  store i8* %53, i8** %iop_base51, align 8, !dbg !6482
  %55 = load i32, i32* %iop.addr, align 4, !dbg !6483
  %conv52 = trunc i32 %55 to i16, !dbg !6483
  %56 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6484
  %ioport = getelementptr inbounds %struct.asc_board, %struct.asc_board* %56, i32 0, i32 15, !dbg !6485
  store i16 %conv52, i16* %ioport, align 8, !dbg !6486
  br label %if.end53

if.end53:                                         ; preds = %if.end49, %if.then
  %57 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6487
  %flags54 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %57, i32 0, i32 2, !dbg !6487
  %58 = load i32, i32* %flags54, align 8, !dbg !6487
  %and55 = and i32 %58, 4, !dbg !6487
  %cmp56 = icmp eq i32 %and55, 0, !dbg !6487
  br i1 %cmp56, label %if.then58, label %if.else70, !dbg !6489

if.then58:                                        ; preds = %if.end53
  %59 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6490
  %bus_type59 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %59, i32 0, i32 4, !dbg !6492
  %60 = load i16, i16* %bus_type59, align 2, !dbg !6492
  %conv60 = zext i16 %60 to i32, !dbg !6490
  switch i32 %conv60, label %sw.default [
    i32 4, label %sw.bb
  ], !dbg !6493

sw.bb:                                            ; preds = %if.then58
  %61 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6494
  %unchecked_isa_dma = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %61, i32 0, i32 34, !dbg !6496
  %bf.load = load i16, i16* %unchecked_isa_dma, align 4, !dbg !6497
  %bf.clear = and i16 %bf.load, -5, !dbg !6497
  store i16 %bf.clear, i16* %unchecked_isa_dma, align 4, !dbg !6497
  store i32 128, i32* %share_irq, align 4, !dbg !6498
  br label %sw.epilog, !dbg !6499

sw.default:                                       ; preds = %if.then58
  %62 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6500
  %shost_gendev61 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %62, i32 0, i32 47, !dbg !6500
  %63 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6500
  %bus_type62 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %63, i32 0, i32 4, !dbg !6500
  %64 = load i16, i16* %bus_type62, align 2, !dbg !6500
  %conv63 = zext i16 %64 to i32, !dbg !6500
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev61, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.129, i64 0, i64 0), i32 %conv63) #12, !dbg !6500
  %65 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6501
  %unchecked_isa_dma64 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %65, i32 0, i32 34, !dbg !6502
  %bf.load65 = load i16, i16* %unchecked_isa_dma64, align 4, !dbg !6503
  %bf.clear66 = and i16 %bf.load65, -5, !dbg !6503
  store i16 %bf.clear66, i16* %unchecked_isa_dma64, align 4, !dbg !6503
  store i32 0, i32* %share_irq, align 4, !dbg !6504
  br label %sw.epilog, !dbg !6505

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %66 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6506
  %call67 = call i32 @AscInitGetConfig(%struct.Scsi_Host* %66) #11, !dbg !6507
  %tobool68 = icmp ne i32 %call67, 0, !dbg !6507
  %67 = zext i1 %tobool68 to i64, !dbg !6507
  %cond69 = select i1 %tobool68, i32 -19, i32 0, !dbg !6507
  store i32 %cond69, i32* %ret, align 4, !dbg !6508
  br label %if.end77, !dbg !6509

if.else70:                                        ; preds = %if.end53
  %68 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6510
  %unchecked_isa_dma71 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %68, i32 0, i32 34, !dbg !6512
  %bf.load72 = load i16, i16* %unchecked_isa_dma71, align 4, !dbg !6513
  %bf.clear73 = and i16 %bf.load72, -5, !dbg !6513
  store i16 %bf.clear73, i16* %unchecked_isa_dma71, align 4, !dbg !6513
  store i32 128, i32* %share_irq, align 4, !dbg !6514
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6515
  %70 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6516
  %call74 = call i32 @AdvInitGetConfig(%struct.pci_dev* %69, %struct.Scsi_Host* %70) #11, !dbg !6517
  %tobool75 = icmp ne i32 %call74, 0, !dbg !6517
  %71 = zext i1 %tobool75 to i64, !dbg !6517
  %cond76 = select i1 %tobool75, i32 -19, i32 0, !dbg !6517
  store i32 %cond76, i32* %ret, align 4, !dbg !6518
  br label %if.end77

if.end77:                                         ; preds = %if.else70, %sw.epilog
  %72 = load i32, i32* %ret, align 4, !dbg !6519
  %tobool78 = icmp ne i32 %72, 0, !dbg !6519
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !6521

if.then79:                                        ; preds = %if.end77
  br label %err_unmap, !dbg !6522

if.end80:                                         ; preds = %if.end77
  %73 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6523
  %flags81 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %73, i32 0, i32 2, !dbg !6523
  %74 = load i32, i32* %flags81, align 8, !dbg !6523
  %and82 = and i32 %74, 4, !dbg !6523
  %cmp83 = icmp eq i32 %and82, 0, !dbg !6523
  br i1 %cmp83, label %if.then85, label %if.else155, !dbg !6525

if.then85:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata %struct.asceep_config** %ep, metadata !6526, metadata !DIExpression()), !dbg !6528
  %75 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6529
  %cfg86 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %75, i32 0, i32 26, !dbg !6529
  %76 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg86, align 8, !dbg !6529
  %chip_scsi_id = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %76, i32 0, i32 4, !dbg !6529
  %77 = load i8, i8* %chip_scsi_id, align 2, !dbg !6529
  %conv87 = zext i8 %77 to i32, !dbg !6529
  %and88 = and i32 %conv87, 15, !dbg !6529
  %shl = shl i32 1, %and88, !dbg !6529
  %78 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6530
  %init_tidmask = getelementptr inbounds %struct.asc_board, %struct.asc_board* %78, i32 0, i32 7, !dbg !6531
  %79 = load i16, i16* %init_tidmask, align 4, !dbg !6532
  %conv89 = zext i16 %79 to i32, !dbg !6532
  %or = or i32 %conv89, %shl, !dbg !6532
  %conv90 = trunc i32 %or to i16, !dbg !6532
  store i16 %conv90, i16* %init_tidmask, align 4, !dbg !6532
  %80 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6533
  %eep_config = getelementptr inbounds %struct.asc_board, %struct.asc_board* %80, i32 0, i32 11, !dbg !6534
  %asc_eep = bitcast %union.anon.79* %eep_config to %struct.asceep_config*, !dbg !6535
  store %struct.asceep_config* %asc_eep, %struct.asceep_config** %ep, align 8, !dbg !6536
  %81 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6537
  %cfg91 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %81, i32 0, i32 26, !dbg !6538
  %82 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg91, align 8, !dbg !6538
  %sdtr_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %82, i32 0, i32 3, !dbg !6539
  %83 = load i8, i8* %sdtr_enable, align 1, !dbg !6539
  %84 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6540
  %init_sdtr = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %84, i32 0, i32 2, !dbg !6541
  store i8 %83, i8* %init_sdtr, align 2, !dbg !6542
  %85 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6543
  %cfg92 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %85, i32 0, i32 26, !dbg !6544
  %86 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg92, align 8, !dbg !6544
  %disc_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %86, i32 0, i32 2, !dbg !6545
  %87 = load i8, i8* %disc_enable, align 2, !dbg !6545
  %88 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6546
  %disc_enable93 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %88, i32 0, i32 3, !dbg !6547
  store i8 %87, i8* %disc_enable93, align 1, !dbg !6548
  %89 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6549
  %cfg94 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %89, i32 0, i32 26, !dbg !6550
  %90 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg94, align 8, !dbg !6550
  %cmd_qng_enabled = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %90, i32 0, i32 1, !dbg !6551
  %91 = load i8, i8* %cmd_qng_enabled, align 1, !dbg !6551
  %92 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6552
  %use_cmd_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %92, i32 0, i32 4, !dbg !6553
  store i8 %91, i8* %use_cmd_qng, align 2, !dbg !6554
  %93 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6555
  %id_speed = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %93, i32 0, i32 11, !dbg !6555
  %94 = load i8, i8* %id_speed, align 1, !dbg !6555
  %conv95 = zext i8 %94 to i32, !dbg !6555
  %and96 = and i32 %conv95, 15, !dbg !6555
  %95 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6555
  %cfg97 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %95, i32 0, i32 26, !dbg !6555
  %96 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg97, align 8, !dbg !6555
  %isa_dma_speed = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %96, i32 0, i32 5, !dbg !6555
  %97 = load i8, i8* %isa_dma_speed, align 1, !dbg !6555
  %conv98 = zext i8 %97 to i32, !dbg !6555
  %and99 = and i32 %conv98, 15, !dbg !6555
  %shl100 = shl i32 %and99, 4, !dbg !6555
  %or101 = or i32 %and96, %shl100, !dbg !6555
  %conv102 = trunc i32 %or101 to i8, !dbg !6555
  %98 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6555
  %id_speed103 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %98, i32 0, i32 11, !dbg !6555
  store i8 %conv102, i8* %id_speed103, align 1, !dbg !6555
  %99 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6556
  %start_motor = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %99, i32 0, i32 10, !dbg !6557
  %100 = load i8, i8* %start_motor, align 1, !dbg !6557
  %101 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6558
  %start_motor104 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %101, i32 0, i32 5, !dbg !6559
  store i8 %100, i8* %start_motor104, align 1, !dbg !6560
  %102 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6561
  %dvc_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %102, i32 0, i32 2, !dbg !6562
  %103 = load i16, i16* %dvc_cntl, align 2, !dbg !6562
  %104 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6563
  %cntl = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %104, i32 0, i32 14, !dbg !6564
  store i16 %103, i16* %cntl, align 2, !dbg !6565
  %105 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6566
  %no_scam = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %105, i32 0, i32 32, !dbg !6567
  %106 = load i8, i8* %no_scam, align 8, !dbg !6567
  %107 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6568
  %no_scam105 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %107, i32 0, i32 10, !dbg !6569
  store i8 %106, i8* %no_scam105, align 2, !dbg !6570
  %108 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6571
  %max_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %108, i32 0, i32 16, !dbg !6572
  %109 = load i8, i8* %max_total_qng, align 1, !dbg !6572
  %110 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6573
  %max_total_qng106 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %110, i32 0, i32 6, !dbg !6574
  store i8 %109, i8* %max_total_qng106, align 2, !dbg !6575
  %111 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6576
  %id_speed107 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %111, i32 0, i32 11, !dbg !6576
  %112 = load i8, i8* %id_speed107, align 1, !dbg !6576
  %conv108 = zext i8 %112 to i32, !dbg !6576
  %and109 = and i32 %conv108, 240, !dbg !6576
  %113 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6576
  %cfg110 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %113, i32 0, i32 26, !dbg !6576
  %114 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg110, align 8, !dbg !6576
  %chip_scsi_id111 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %114, i32 0, i32 4, !dbg !6576
  %115 = load i8, i8* %chip_scsi_id111, align 2, !dbg !6576
  %conv112 = zext i8 %115 to i32, !dbg !6576
  %and113 = and i32 %conv112, 7, !dbg !6576
  %or114 = or i32 %and109, %and113, !dbg !6576
  %conv115 = trunc i32 %or114 to i8, !dbg !6576
  %116 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6576
  %id_speed116 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %116, i32 0, i32 11, !dbg !6576
  store i8 %conv115, i8* %id_speed116, align 1, !dbg !6576
  %117 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6577
  %cfg117 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %117, i32 0, i32 26, !dbg !6578
  %118 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg117, align 8, !dbg !6578
  %max_tag_qng = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %118, i32 0, i32 10, !dbg !6579
  %arrayidx118 = getelementptr [8 x i8], [8 x i8]* %max_tag_qng, i64 0, i64 0, !dbg !6577
  %119 = load i8, i8* %arrayidx118, align 2, !dbg !6577
  %120 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6580
  %max_tag_qng119 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %120, i32 0, i32 7, !dbg !6581
  store i8 %119, i8* %max_tag_qng119, align 1, !dbg !6582
  %121 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6583
  %cfg120 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %121, i32 0, i32 26, !dbg !6584
  %122 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg120, align 8, !dbg !6584
  %adapter_info = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %122, i32 0, i32 12, !dbg !6585
  %arrayidx121 = getelementptr [6 x i8], [6 x i8]* %adapter_info, i64 0, i64 0, !dbg !6583
  %123 = load i8, i8* %arrayidx121, align 2, !dbg !6583
  %124 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6586
  %adapter_info122 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %124, i32 0, i32 13, !dbg !6587
  %arrayidx123 = getelementptr [6 x i8], [6 x i8]* %adapter_info122, i64 0, i64 0, !dbg !6586
  store i8 %123, i8* %arrayidx123, align 2, !dbg !6588
  %125 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6589
  %cfg124 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %125, i32 0, i32 26, !dbg !6590
  %126 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg124, align 8, !dbg !6590
  %adapter_info125 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %126, i32 0, i32 12, !dbg !6591
  %arrayidx126 = getelementptr [6 x i8], [6 x i8]* %adapter_info125, i64 0, i64 1, !dbg !6589
  %127 = load i8, i8* %arrayidx126, align 1, !dbg !6589
  %128 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6592
  %adapter_info127 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %128, i32 0, i32 13, !dbg !6593
  %arrayidx128 = getelementptr [6 x i8], [6 x i8]* %adapter_info127, i64 0, i64 1, !dbg !6592
  store i8 %127, i8* %arrayidx128, align 1, !dbg !6594
  %129 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6595
  %cfg129 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %129, i32 0, i32 26, !dbg !6596
  %130 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg129, align 8, !dbg !6596
  %adapter_info130 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %130, i32 0, i32 12, !dbg !6597
  %arrayidx131 = getelementptr [6 x i8], [6 x i8]* %adapter_info130, i64 0, i64 2, !dbg !6595
  %131 = load i8, i8* %arrayidx131, align 2, !dbg !6595
  %132 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6598
  %adapter_info132 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %132, i32 0, i32 13, !dbg !6599
  %arrayidx133 = getelementptr [6 x i8], [6 x i8]* %adapter_info132, i64 0, i64 2, !dbg !6598
  store i8 %131, i8* %arrayidx133, align 2, !dbg !6600
  %133 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6601
  %cfg134 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %133, i32 0, i32 26, !dbg !6602
  %134 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg134, align 8, !dbg !6602
  %adapter_info135 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %134, i32 0, i32 12, !dbg !6603
  %arrayidx136 = getelementptr [6 x i8], [6 x i8]* %adapter_info135, i64 0, i64 3, !dbg !6601
  %135 = load i8, i8* %arrayidx136, align 1, !dbg !6601
  %136 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6604
  %adapter_info137 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %136, i32 0, i32 13, !dbg !6605
  %arrayidx138 = getelementptr [6 x i8], [6 x i8]* %adapter_info137, i64 0, i64 3, !dbg !6604
  store i8 %135, i8* %arrayidx138, align 1, !dbg !6606
  %137 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6607
  %cfg139 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %137, i32 0, i32 26, !dbg !6608
  %138 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg139, align 8, !dbg !6608
  %adapter_info140 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %138, i32 0, i32 12, !dbg !6609
  %arrayidx141 = getelementptr [6 x i8], [6 x i8]* %adapter_info140, i64 0, i64 4, !dbg !6607
  %139 = load i8, i8* %arrayidx141, align 2, !dbg !6607
  %140 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6610
  %adapter_info142 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %140, i32 0, i32 13, !dbg !6611
  %arrayidx143 = getelementptr [6 x i8], [6 x i8]* %adapter_info142, i64 0, i64 4, !dbg !6610
  store i8 %139, i8* %arrayidx143, align 2, !dbg !6612
  %141 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6613
  %cfg144 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %141, i32 0, i32 26, !dbg !6614
  %142 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg144, align 8, !dbg !6614
  %adapter_info145 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %142, i32 0, i32 12, !dbg !6615
  %arrayidx146 = getelementptr [6 x i8], [6 x i8]* %adapter_info145, i64 0, i64 5, !dbg !6613
  %143 = load i8, i8* %arrayidx146, align 1, !dbg !6613
  %144 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !6616
  %adapter_info147 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %144, i32 0, i32 13, !dbg !6617
  %arrayidx148 = getelementptr [6 x i8], [6 x i8]* %adapter_info147, i64 0, i64 5, !dbg !6616
  store i8 %143, i8* %arrayidx148, align 1, !dbg !6618
  %145 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6619
  %146 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6620
  %call149 = call i32 @AscInitSetConfig(%struct.pci_dev* %145, %struct.Scsi_Host* %146) #11, !dbg !6621
  %tobool150 = icmp ne i32 %call149, 0, !dbg !6621
  %147 = zext i1 %tobool150 to i64, !dbg !6621
  %cond151 = select i1 %tobool150, i32 -19, i32 0, !dbg !6621
  store i32 %cond151, i32* %ret, align 4, !dbg !6622
  %148 = load i32, i32* %ret, align 4, !dbg !6623
  %tobool152 = icmp ne i32 %148, 0, !dbg !6623
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !6625

if.then153:                                       ; preds = %if.then85
  br label %err_unmap, !dbg !6626

if.end154:                                        ; preds = %if.then85
  br label %if.end276, !dbg !6627

if.else155:                                       ; preds = %if.end80
  call void @llvm.dbg.declare(metadata %struct.adveep_3550_config** %ep_3550, metadata !6628, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.declare(metadata %struct.adveep_38C0800_config** %ep_38C0800, metadata !6632, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.declare(metadata %struct.adveep_38C1600_config** %ep_38C1600, metadata !6635, metadata !DIExpression()), !dbg !6637
  %149 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6638
  %chip_type156 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %149, i32 0, i32 20, !dbg !6640
  %150 = load i8, i8* %chip_type156, align 1, !dbg !6640
  %conv157 = zext i8 %150 to i32, !dbg !6638
  %cmp158 = icmp eq i32 %conv157, 1, !dbg !6641
  br i1 %cmp158, label %if.then160, label %if.else180, !dbg !6642

if.then160:                                       ; preds = %if.else155
  %151 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6643
  %eep_config161 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %151, i32 0, i32 11, !dbg !6645
  %adv_3550_eep = bitcast %union.anon.79* %eep_config161 to %struct.adveep_3550_config*, !dbg !6646
  store %struct.adveep_3550_config* %adv_3550_eep, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6647
  %152 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6648
  %chip_scsi_id162 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %152, i32 0, i32 19, !dbg !6649
  %153 = load i8, i8* %chip_scsi_id162, align 8, !dbg !6649
  %154 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6650
  %adapter_scsi_id = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %154, i32 0, i32 9, !dbg !6651
  store i8 %153, i8* %adapter_scsi_id, align 2, !dbg !6652
  %155 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6653
  %max_host_qng = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %155, i32 0, i32 16, !dbg !6654
  %156 = load i8, i8* %max_host_qng, align 4, !dbg !6654
  %157 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6655
  %max_host_qng163 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %157, i32 0, i32 18, !dbg !6656
  store i8 %156, i8* %max_host_qng163, align 2, !dbg !6657
  %158 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6658
  %max_dvc_qng = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %158, i32 0, i32 12, !dbg !6659
  %159 = load i8, i8* %max_dvc_qng, align 2, !dbg !6659
  %160 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6660
  %max_dvc_qng164 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %160, i32 0, i32 19, !dbg !6661
  store i8 %159, i8* %max_dvc_qng164, align 1, !dbg !6662
  %161 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6663
  %cfg165 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %161, i32 0, i32 28, !dbg !6664
  %162 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg165, align 8, !dbg !6664
  %termination = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %162, i32 0, i32 2, !dbg !6665
  %163 = load i8, i8* %termination, align 1, !dbg !6665
  %164 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6666
  %termination166 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %164, i32 0, i32 13, !dbg !6667
  store i8 %163, i8* %termination166, align 2, !dbg !6668
  %165 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6669
  %cfg167 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %165, i32 0, i32 28, !dbg !6670
  %166 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg167, align 8, !dbg !6670
  %disc_enable168 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %166, i32 0, i32 0, !dbg !6671
  %167 = load i16, i16* %disc_enable168, align 2, !dbg !6671
  %168 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6672
  %disc_enable169 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %168, i32 0, i32 2, !dbg !6673
  store i16 %167, i16* %disc_enable169, align 2, !dbg !6674
  %169 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6675
  %bios_ctrl = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %169, i32 0, i32 2, !dbg !6676
  %170 = load i16, i16* %bios_ctrl, align 2, !dbg !6676
  %171 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6677
  %bios_ctrl170 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %171, i32 0, i32 15, !dbg !6678
  store i16 %170, i16* %bios_ctrl170, align 2, !dbg !6679
  %172 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6680
  %wdtr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %172, i32 0, i32 3, !dbg !6681
  %173 = load i16, i16* %wdtr_able, align 4, !dbg !6681
  %174 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6682
  %wdtr_able171 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %174, i32 0, i32 3, !dbg !6683
  store i16 %173, i16* %wdtr_able171, align 2, !dbg !6684
  %175 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6685
  %sdtr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %175, i32 0, i32 4, !dbg !6686
  %176 = load i16, i16* %sdtr_able, align 2, !dbg !6686
  %177 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6687
  %sdtr_able172 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %177, i32 0, i32 4, !dbg !6688
  store i16 %176, i16* %sdtr_able172, align 2, !dbg !6689
  %178 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6690
  %ultra_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %178, i32 0, i32 5, !dbg !6691
  %179 = load i16, i16* %ultra_able, align 8, !dbg !6691
  %180 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6692
  %ultra_able173 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %180, i32 0, i32 16, !dbg !6693
  store i16 %179, i16* %ultra_able173, align 2, !dbg !6694
  %181 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6695
  %tagqng_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %181, i32 0, i32 10, !dbg !6696
  %182 = load i16, i16* %tagqng_able, align 2, !dbg !6696
  %183 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6697
  %tagqng_able174 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %183, i32 0, i32 6, !dbg !6698
  store i16 %182, i16* %tagqng_able174, align 2, !dbg !6699
  %184 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6700
  %start_motor175 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %184, i32 0, i32 13, !dbg !6701
  %185 = load i16, i16* %start_motor175, align 8, !dbg !6701
  %186 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6702
  %start_motor176 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %186, i32 0, i32 5, !dbg !6703
  store i16 %185, i16* %start_motor176, align 2, !dbg !6704
  %187 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6705
  %scsi_reset_wait = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %187, i32 0, i32 14, !dbg !6706
  %188 = load i8, i8* %scsi_reset_wait, align 2, !dbg !6706
  %189 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6707
  %scsi_reset_delay = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %189, i32 0, i32 11, !dbg !6708
  store i8 %188, i8* %scsi_reset_delay, align 2, !dbg !6709
  %190 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6710
  %cfg177 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %190, i32 0, i32 28, !dbg !6711
  %191 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg177, align 8, !dbg !6711
  %serial1 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %191, i32 0, i32 6, !dbg !6712
  %192 = load i16, i16* %serial1, align 2, !dbg !6712
  %193 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6713
  %serial_number_word1 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %193, i32 0, i32 22, !dbg !6714
  store i16 %192, i16* %serial_number_word1, align 2, !dbg !6715
  %194 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6716
  %cfg178 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %194, i32 0, i32 28, !dbg !6717
  %195 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg178, align 8, !dbg !6717
  %serial2 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %195, i32 0, i32 7, !dbg !6718
  %196 = load i16, i16* %serial2, align 2, !dbg !6718
  %197 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6719
  %serial_number_word2 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %197, i32 0, i32 23, !dbg !6720
  store i16 %196, i16* %serial_number_word2, align 2, !dbg !6721
  %198 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6722
  %cfg179 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %198, i32 0, i32 28, !dbg !6723
  %199 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg179, align 8, !dbg !6723
  %serial3 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %199, i32 0, i32 8, !dbg !6724
  %200 = load i16, i16* %serial3, align 2, !dbg !6724
  %201 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !6725
  %serial_number_word3 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %201, i32 0, i32 24, !dbg !6726
  store i16 %200, i16* %serial_number_word3, align 2, !dbg !6727
  br label %if.end267, !dbg !6728

if.else180:                                       ; preds = %if.else155
  %202 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6729
  %chip_type181 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %202, i32 0, i32 20, !dbg !6731
  %203 = load i8, i8* %chip_type181, align 1, !dbg !6731
  %conv182 = zext i8 %203 to i32, !dbg !6729
  %cmp183 = icmp eq i32 %conv182, 2, !dbg !6732
  br i1 %cmp183, label %if.then185, label %if.else223, !dbg !6733

if.then185:                                       ; preds = %if.else180
  %204 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6734
  %eep_config186 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %204, i32 0, i32 11, !dbg !6736
  %adv_38C0800_eep = bitcast %union.anon.79* %eep_config186 to %struct.adveep_38C0800_config*, !dbg !6737
  store %struct.adveep_38C0800_config* %adv_38C0800_eep, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6738
  %205 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6739
  %chip_scsi_id187 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %205, i32 0, i32 19, !dbg !6740
  %206 = load i8, i8* %chip_scsi_id187, align 8, !dbg !6740
  %207 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6741
  %adapter_scsi_id188 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %207, i32 0, i32 9, !dbg !6742
  store i8 %206, i8* %adapter_scsi_id188, align 2, !dbg !6743
  %208 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6744
  %max_host_qng189 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %208, i32 0, i32 16, !dbg !6745
  %209 = load i8, i8* %max_host_qng189, align 4, !dbg !6745
  %210 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6746
  %max_host_qng190 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %210, i32 0, i32 18, !dbg !6747
  store i8 %209, i8* %max_host_qng190, align 2, !dbg !6748
  %211 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6749
  %max_dvc_qng191 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %211, i32 0, i32 12, !dbg !6750
  %212 = load i8, i8* %max_dvc_qng191, align 2, !dbg !6750
  %213 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6751
  %max_dvc_qng192 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %213, i32 0, i32 19, !dbg !6752
  store i8 %212, i8* %max_dvc_qng192, align 1, !dbg !6753
  %214 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6754
  %cfg193 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %214, i32 0, i32 28, !dbg !6755
  %215 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg193, align 8, !dbg !6755
  %termination194 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %215, i32 0, i32 2, !dbg !6756
  %216 = load i8, i8* %termination194, align 1, !dbg !6756
  %217 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6757
  %termination_lvd = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %217, i32 0, i32 14, !dbg !6758
  store i8 %216, i8* %termination_lvd, align 1, !dbg !6759
  %218 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6760
  %cfg195 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %218, i32 0, i32 28, !dbg !6761
  %219 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg195, align 8, !dbg !6761
  %disc_enable196 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %219, i32 0, i32 0, !dbg !6762
  %220 = load i16, i16* %disc_enable196, align 2, !dbg !6762
  %221 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6763
  %disc_enable197 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %221, i32 0, i32 2, !dbg !6764
  store i16 %220, i16* %disc_enable197, align 2, !dbg !6765
  %222 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6766
  %bios_ctrl198 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %222, i32 0, i32 2, !dbg !6767
  %223 = load i16, i16* %bios_ctrl198, align 2, !dbg !6767
  %224 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6768
  %bios_ctrl199 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %224, i32 0, i32 15, !dbg !6769
  store i16 %223, i16* %bios_ctrl199, align 2, !dbg !6770
  %225 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6771
  %wdtr_able200 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %225, i32 0, i32 3, !dbg !6772
  %226 = load i16, i16* %wdtr_able200, align 4, !dbg !6772
  %227 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6773
  %wdtr_able201 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %227, i32 0, i32 3, !dbg !6774
  store i16 %226, i16* %wdtr_able201, align 2, !dbg !6775
  %228 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6776
  %tagqng_able202 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %228, i32 0, i32 10, !dbg !6777
  %229 = load i16, i16* %tagqng_able202, align 2, !dbg !6777
  %230 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6778
  %tagqng_able203 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %230, i32 0, i32 6, !dbg !6779
  store i16 %229, i16* %tagqng_able203, align 2, !dbg !6780
  %231 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6781
  %sdtr_speed1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %231, i32 0, i32 6, !dbg !6782
  %232 = load i16, i16* %sdtr_speed1, align 2, !dbg !6782
  %233 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6783
  %sdtr_speed1204 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %233, i32 0, i32 4, !dbg !6784
  store i16 %232, i16* %sdtr_speed1204, align 2, !dbg !6785
  %234 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6786
  %sdtr_speed2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %234, i32 0, i32 7, !dbg !6787
  %235 = load i16, i16* %sdtr_speed2, align 4, !dbg !6787
  %236 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6788
  %sdtr_speed2205 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %236, i32 0, i32 16, !dbg !6789
  store i16 %235, i16* %sdtr_speed2205, align 2, !dbg !6790
  %237 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6791
  %sdtr_speed3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %237, i32 0, i32 8, !dbg !6792
  %238 = load i16, i16* %sdtr_speed3, align 2, !dbg !6792
  %239 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6793
  %sdtr_speed3206 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %239, i32 0, i32 17, !dbg !6794
  store i16 %238, i16* %sdtr_speed3206, align 2, !dbg !6795
  %240 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6796
  %sdtr_speed4 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %240, i32 0, i32 9, !dbg !6797
  %241 = load i16, i16* %sdtr_speed4, align 8, !dbg !6797
  %242 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6798
  %sdtr_speed4207 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %242, i32 0, i32 21, !dbg !6799
  store i16 %241, i16* %sdtr_speed4207, align 2, !dbg !6800
  %243 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6801
  %tagqng_able208 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %243, i32 0, i32 10, !dbg !6802
  %244 = load i16, i16* %tagqng_able208, align 2, !dbg !6802
  %245 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6803
  %tagqng_able209 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %245, i32 0, i32 6, !dbg !6804
  store i16 %244, i16* %tagqng_able209, align 2, !dbg !6805
  %246 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6806
  %start_motor210 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %246, i32 0, i32 13, !dbg !6807
  %247 = load i16, i16* %start_motor210, align 8, !dbg !6807
  %248 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6808
  %start_motor211 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %248, i32 0, i32 5, !dbg !6809
  store i16 %247, i16* %start_motor211, align 2, !dbg !6810
  %249 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6811
  %scsi_reset_wait212 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %249, i32 0, i32 14, !dbg !6812
  %250 = load i8, i8* %scsi_reset_wait212, align 2, !dbg !6812
  %251 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6813
  %scsi_reset_delay213 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %251, i32 0, i32 11, !dbg !6814
  store i8 %250, i8* %scsi_reset_delay213, align 2, !dbg !6815
  %252 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6816
  %cfg214 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %252, i32 0, i32 28, !dbg !6817
  %253 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg214, align 8, !dbg !6817
  %serial1215 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %253, i32 0, i32 6, !dbg !6818
  %254 = load i16, i16* %serial1215, align 2, !dbg !6818
  %255 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6819
  %serial_number_word1216 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %255, i32 0, i32 22, !dbg !6820
  store i16 %254, i16* %serial_number_word1216, align 2, !dbg !6821
  %256 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6822
  %cfg217 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %256, i32 0, i32 28, !dbg !6823
  %257 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg217, align 8, !dbg !6823
  %serial2218 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %257, i32 0, i32 7, !dbg !6824
  %258 = load i16, i16* %serial2218, align 2, !dbg !6824
  %259 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6825
  %serial_number_word2219 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %259, i32 0, i32 23, !dbg !6826
  store i16 %258, i16* %serial_number_word2219, align 2, !dbg !6827
  %260 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6828
  %cfg220 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %260, i32 0, i32 28, !dbg !6829
  %261 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg220, align 8, !dbg !6829
  %serial3221 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %261, i32 0, i32 8, !dbg !6830
  %262 = load i16, i16* %serial3221, align 2, !dbg !6830
  %263 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !6831
  %serial_number_word3222 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %263, i32 0, i32 24, !dbg !6832
  store i16 %262, i16* %serial_number_word3222, align 2, !dbg !6833
  br label %if.end266, !dbg !6834

if.else223:                                       ; preds = %if.else180
  %264 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6835
  %eep_config224 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %264, i32 0, i32 11, !dbg !6837
  %adv_38C1600_eep = bitcast %union.anon.79* %eep_config224 to %struct.adveep_38C1600_config*, !dbg !6838
  store %struct.adveep_38C1600_config* %adv_38C1600_eep, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6839
  %265 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6840
  %chip_scsi_id225 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %265, i32 0, i32 19, !dbg !6841
  %266 = load i8, i8* %chip_scsi_id225, align 8, !dbg !6841
  %267 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6842
  %adapter_scsi_id226 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %267, i32 0, i32 9, !dbg !6843
  store i8 %266, i8* %adapter_scsi_id226, align 2, !dbg !6844
  %268 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6845
  %max_host_qng227 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %268, i32 0, i32 16, !dbg !6846
  %269 = load i8, i8* %max_host_qng227, align 4, !dbg !6846
  %270 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6847
  %max_host_qng228 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %270, i32 0, i32 18, !dbg !6848
  store i8 %269, i8* %max_host_qng228, align 2, !dbg !6849
  %271 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6850
  %max_dvc_qng229 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %271, i32 0, i32 12, !dbg !6851
  %272 = load i8, i8* %max_dvc_qng229, align 2, !dbg !6851
  %273 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6852
  %max_dvc_qng230 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %273, i32 0, i32 19, !dbg !6853
  store i8 %272, i8* %max_dvc_qng230, align 1, !dbg !6854
  %274 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6855
  %cfg231 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %274, i32 0, i32 28, !dbg !6856
  %275 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg231, align 8, !dbg !6856
  %termination232 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %275, i32 0, i32 2, !dbg !6857
  %276 = load i8, i8* %termination232, align 1, !dbg !6857
  %277 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6858
  %termination_lvd233 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %277, i32 0, i32 14, !dbg !6859
  store i8 %276, i8* %termination_lvd233, align 1, !dbg !6860
  %278 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6861
  %cfg234 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %278, i32 0, i32 28, !dbg !6862
  %279 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg234, align 8, !dbg !6862
  %disc_enable235 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %279, i32 0, i32 0, !dbg !6863
  %280 = load i16, i16* %disc_enable235, align 2, !dbg !6863
  %281 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6864
  %disc_enable236 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %281, i32 0, i32 2, !dbg !6865
  store i16 %280, i16* %disc_enable236, align 2, !dbg !6866
  %282 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6867
  %bios_ctrl237 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %282, i32 0, i32 2, !dbg !6868
  %283 = load i16, i16* %bios_ctrl237, align 2, !dbg !6868
  %284 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6869
  %bios_ctrl238 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %284, i32 0, i32 15, !dbg !6870
  store i16 %283, i16* %bios_ctrl238, align 2, !dbg !6871
  %285 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6872
  %wdtr_able239 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %285, i32 0, i32 3, !dbg !6873
  %286 = load i16, i16* %wdtr_able239, align 4, !dbg !6873
  %287 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6874
  %wdtr_able240 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %287, i32 0, i32 3, !dbg !6875
  store i16 %286, i16* %wdtr_able240, align 2, !dbg !6876
  %288 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6877
  %tagqng_able241 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %288, i32 0, i32 10, !dbg !6878
  %289 = load i16, i16* %tagqng_able241, align 2, !dbg !6878
  %290 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6879
  %tagqng_able242 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %290, i32 0, i32 6, !dbg !6880
  store i16 %289, i16* %tagqng_able242, align 2, !dbg !6881
  %291 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6882
  %sdtr_speed1243 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %291, i32 0, i32 6, !dbg !6883
  %292 = load i16, i16* %sdtr_speed1243, align 2, !dbg !6883
  %293 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6884
  %sdtr_speed1244 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %293, i32 0, i32 4, !dbg !6885
  store i16 %292, i16* %sdtr_speed1244, align 2, !dbg !6886
  %294 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6887
  %sdtr_speed2245 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %294, i32 0, i32 7, !dbg !6888
  %295 = load i16, i16* %sdtr_speed2245, align 4, !dbg !6888
  %296 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6889
  %sdtr_speed2246 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %296, i32 0, i32 16, !dbg !6890
  store i16 %295, i16* %sdtr_speed2246, align 2, !dbg !6891
  %297 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6892
  %sdtr_speed3247 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %297, i32 0, i32 8, !dbg !6893
  %298 = load i16, i16* %sdtr_speed3247, align 2, !dbg !6893
  %299 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6894
  %sdtr_speed3248 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %299, i32 0, i32 17, !dbg !6895
  store i16 %298, i16* %sdtr_speed3248, align 2, !dbg !6896
  %300 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6897
  %sdtr_speed4249 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %300, i32 0, i32 9, !dbg !6898
  %301 = load i16, i16* %sdtr_speed4249, align 8, !dbg !6898
  %302 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6899
  %sdtr_speed4250 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %302, i32 0, i32 21, !dbg !6900
  store i16 %301, i16* %sdtr_speed4250, align 2, !dbg !6901
  %303 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6902
  %tagqng_able251 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %303, i32 0, i32 10, !dbg !6903
  %304 = load i16, i16* %tagqng_able251, align 2, !dbg !6903
  %305 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6904
  %tagqng_able252 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %305, i32 0, i32 6, !dbg !6905
  store i16 %304, i16* %tagqng_able252, align 2, !dbg !6906
  %306 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6907
  %start_motor253 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %306, i32 0, i32 13, !dbg !6908
  %307 = load i16, i16* %start_motor253, align 8, !dbg !6908
  %308 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6909
  %start_motor254 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %308, i32 0, i32 5, !dbg !6910
  store i16 %307, i16* %start_motor254, align 2, !dbg !6911
  %309 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6912
  %scsi_reset_wait255 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %309, i32 0, i32 14, !dbg !6913
  %310 = load i8, i8* %scsi_reset_wait255, align 2, !dbg !6913
  %311 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6914
  %scsi_reset_delay256 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %311, i32 0, i32 11, !dbg !6915
  store i8 %310, i8* %scsi_reset_delay256, align 2, !dbg !6916
  %312 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6917
  %cfg257 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %312, i32 0, i32 28, !dbg !6918
  %313 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg257, align 8, !dbg !6918
  %serial1258 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %313, i32 0, i32 6, !dbg !6919
  %314 = load i16, i16* %serial1258, align 2, !dbg !6919
  %315 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6920
  %serial_number_word1259 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %315, i32 0, i32 22, !dbg !6921
  store i16 %314, i16* %serial_number_word1259, align 2, !dbg !6922
  %316 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6923
  %cfg260 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %316, i32 0, i32 28, !dbg !6924
  %317 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg260, align 8, !dbg !6924
  %serial2261 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %317, i32 0, i32 7, !dbg !6925
  %318 = load i16, i16* %serial2261, align 2, !dbg !6925
  %319 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6926
  %serial_number_word2262 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %319, i32 0, i32 23, !dbg !6927
  store i16 %318, i16* %serial_number_word2262, align 2, !dbg !6928
  %320 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6929
  %cfg263 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %320, i32 0, i32 28, !dbg !6930
  %321 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg263, align 8, !dbg !6930
  %serial3264 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %321, i32 0, i32 8, !dbg !6931
  %322 = load i16, i16* %serial3264, align 2, !dbg !6931
  %323 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !6932
  %serial_number_word3265 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %323, i32 0, i32 24, !dbg !6933
  store i16 %322, i16* %serial_number_word3265, align 2, !dbg !6934
  br label %if.end266

if.end266:                                        ; preds = %if.else223, %if.then185
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then160
  %324 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6935
  %chip_scsi_id268 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %324, i32 0, i32 19, !dbg !6935
  %325 = load i8, i8* %chip_scsi_id268, align 8, !dbg !6935
  %conv269 = zext i8 %325 to i32, !dbg !6935
  %and270 = and i32 %conv269, 15, !dbg !6935
  %shl271 = shl i32 1, %and270, !dbg !6935
  %326 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6936
  %init_tidmask272 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %326, i32 0, i32 7, !dbg !6937
  %327 = load i16, i16* %init_tidmask272, align 4, !dbg !6938
  %conv273 = zext i16 %327 to i32, !dbg !6938
  %or274 = or i32 %conv273, %shl271, !dbg !6938
  %conv275 = trunc i32 %or274 to i16, !dbg !6938
  store i16 %conv275, i16* %init_tidmask272, align 4, !dbg !6938
  br label %if.end276

if.end276:                                        ; preds = %if.end267, %if.end154
  %328 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6939
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %328, i32 0, i32 19, !dbg !6940
  store i32 0, i32* %max_channel, align 8, !dbg !6941
  %329 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6942
  %flags277 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %329, i32 0, i32 2, !dbg !6942
  %330 = load i32, i32* %flags277, align 8, !dbg !6942
  %and278 = and i32 %330, 4, !dbg !6942
  %cmp279 = icmp eq i32 %and278, 0, !dbg !6942
  br i1 %cmp279, label %if.then281, label %if.else290, !dbg !6944

if.then281:                                       ; preds = %if.end276
  %331 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6945
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %331, i32 0, i32 20, !dbg !6947
  store i32 8, i32* %max_id, align 4, !dbg !6948
  %332 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6949
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %332, i32 0, i32 21, !dbg !6950
  store i64 8, i64* %max_lun, align 8, !dbg !6951
  %333 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6952
  %max_cmd_len = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %333, i32 0, i32 23, !dbg !6953
  store i16 12, i16* %max_cmd_len, align 4, !dbg !6954
  %334 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6955
  %iop_base282 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %334, i32 0, i32 0, !dbg !6956
  %335 = load i32, i32* %iop_base282, align 8, !dbg !6956
  %conv283 = zext i32 %335 to i64, !dbg !6955
  %336 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6957
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %336, i32 0, i32 42, !dbg !6958
  store i64 %conv283, i64* %io_port, align 8, !dbg !6959
  %337 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6960
  %asc_n_io_port284 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %337, i32 0, i32 6, !dbg !6961
  store i16 16, i16* %asc_n_io_port284, align 2, !dbg !6962
  %338 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6963
  %cfg285 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %338, i32 0, i32 26, !dbg !6964
  %339 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg285, align 8, !dbg !6964
  %chip_scsi_id286 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %339, i32 0, i32 4, !dbg !6965
  %340 = load i8, i8* %chip_scsi_id286, align 2, !dbg !6965
  %conv287 = zext i8 %340 to i32, !dbg !6963
  %341 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6966
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %341, i32 0, i32 24, !dbg !6967
  store i32 %conv287, i32* %this_id, align 8, !dbg !6968
  %342 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !6969
  %max_total_qng288 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %342, i32 0, i32 16, !dbg !6970
  %343 = load i8, i8* %max_total_qng288, align 1, !dbg !6970
  %conv289 = zext i8 %343 to i32, !dbg !6969
  %344 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6971
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %344, i32 0, i32 25, !dbg !6972
  store i32 %conv289, i32* %can_queue, align 4, !dbg !6973
  br label %if.end302, !dbg !6974

if.else290:                                       ; preds = %if.end276
  %345 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6975
  %max_id291 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %345, i32 0, i32 20, !dbg !6977
  store i32 16, i32* %max_id291, align 4, !dbg !6978
  %346 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6979
  %max_lun292 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %346, i32 0, i32 21, !dbg !6980
  store i64 8, i64* %max_lun292, align 8, !dbg !6981
  %347 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6982
  %max_cmd_len293 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %347, i32 0, i32 23, !dbg !6983
  store i16 16, i16* %max_cmd_len293, align 4, !dbg !6984
  %348 = load i32, i32* %iop.addr, align 4, !dbg !6985
  %conv294 = zext i32 %348 to i64, !dbg !6985
  %349 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6986
  %io_port295 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %349, i32 0, i32 42, !dbg !6987
  store i64 %conv294, i64* %io_port295, align 8, !dbg !6988
  %350 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6989
  %chip_scsi_id296 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %350, i32 0, i32 19, !dbg !6990
  %351 = load i8, i8* %chip_scsi_id296, align 8, !dbg !6990
  %conv297 = zext i8 %351 to i32, !dbg !6989
  %352 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6991
  %this_id298 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %352, i32 0, i32 24, !dbg !6992
  store i32 %conv297, i32* %this_id298, align 8, !dbg !6993
  %353 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !6994
  %max_host_qng299 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %353, i32 0, i32 16, !dbg !6995
  %354 = load i8, i8* %max_host_qng299, align 4, !dbg !6995
  %conv300 = zext i8 %354 to i32, !dbg !6994
  %355 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6996
  %can_queue301 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %355, i32 0, i32 25, !dbg !6997
  store i32 %conv300, i32* %can_queue301, align 4, !dbg !6998
  br label %if.end302

if.end302:                                        ; preds = %if.else290, %if.then281
  %356 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !6999
  %flags303 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %356, i32 0, i32 2, !dbg !6999
  %357 = load i32, i32* %flags303, align 8, !dbg !6999
  %and304 = and i32 %357, 4, !dbg !6999
  %cmp305 = icmp eq i32 %and304, 0, !dbg !6999
  br i1 %cmp305, label %if.then307, label %if.else313, !dbg !7001

if.then307:                                       ; preds = %if.end302
  %358 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7002
  %max_total_qng308 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %358, i32 0, i32 16, !dbg !7004
  %359 = load i8, i8* %max_total_qng308, align 1, !dbg !7004
  %conv309 = zext i8 %359 to i32, !dbg !7002
  %sub310 = sub i32 %conv309, 2, !dbg !7005
  %div = sdiv i32 %sub310, 2, !dbg !7006
  %mul = mul i32 %div, 7, !dbg !7007
  %add311 = add i32 %mul, 1, !dbg !7008
  %conv312 = trunc i32 %add311 to i16, !dbg !7009
  %360 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7010
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %360, i32 0, i32 27, !dbg !7011
  store i16 %conv312, i16* %sg_tablesize, align 2, !dbg !7012
  br label %if.end315, !dbg !7013

if.else313:                                       ; preds = %if.end302
  %361 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7014
  %sg_tablesize314 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %361, i32 0, i32 27, !dbg !7016
  store i16 255, i16* %sg_tablesize314, align 2, !dbg !7017
  br label %if.end315

if.end315:                                        ; preds = %if.else313, %if.then307
  %362 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7018
  %sg_tablesize316 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %362, i32 0, i32 27, !dbg !7020
  %363 = load i16, i16* %sg_tablesize316, align 2, !dbg !7020
  %conv317 = zext i16 %363 to i32, !dbg !7018
  %cmp318 = icmp sgt i32 %conv317, 128, !dbg !7021
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !7022

if.then320:                                       ; preds = %if.end315
  %364 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7023
  %sg_tablesize321 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %364, i32 0, i32 27, !dbg !7025
  store i16 128, i16* %sg_tablesize321, align 2, !dbg !7026
  br label %if.end322, !dbg !7027

if.end322:                                        ; preds = %if.then320, %if.end315
  %365 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7028
  %flags323 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %365, i32 0, i32 2, !dbg !7028
  %366 = load i32, i32* %flags323, align 8, !dbg !7028
  %and324 = and i32 %366, 4, !dbg !7028
  %cmp325 = icmp eq i32 %and324, 0, !dbg !7028
  br i1 %cmp325, label %if.then327, label %if.else332, !dbg !7030

if.then327:                                       ; preds = %if.end322
  %367 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7031
  %iop_base328 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %367, i32 0, i32 0, !dbg !7033
  %368 = load i32, i32* %iop_base328, align 8, !dbg !7033
  %369 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7034
  %bus_type329 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %369, i32 0, i32 4, !dbg !7035
  %370 = load i16, i16* %bus_type329, align 2, !dbg !7035
  %call330 = call zeroext i16 @AscGetChipBiosAddress(i32 %368, i16 zeroext %370) #11, !dbg !7036
  %conv331 = zext i16 %call330 to i64, !dbg !7036
  %371 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7037
  %base = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %371, i32 0, i32 41, !dbg !7038
  store i64 %conv331, i64* %base, align 8, !dbg !7039
  br label %if.end373, !dbg !7040

if.else332:                                       ; preds = %if.end322
  br label %do.body333, !dbg !7041

do.body333:                                       ; preds = %if.else332
  %372 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7043
  %iop_base334 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %372, i32 0, i32 0, !dbg !7043
  %373 = load i8*, i8** %iop_base334, align 8, !dbg !7043
  %add.ptr335 = getelementptr i8, i8* %373, i64 4, !dbg !7043
  call void @writew(i16 zeroext 88, i8* %add.ptr335) #11, !dbg !7043
  %374 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7043
  %iop_base336 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %374, i32 0, i32 0, !dbg !7043
  %375 = load i8*, i8** %iop_base336, align 8, !dbg !7043
  %add.ptr337 = getelementptr i8, i8* %375, i64 6, !dbg !7043
  %call338 = call zeroext i16 @readw(i8* %add.ptr337) #11, !dbg !7043
  %376 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7043
  %bios_signature = getelementptr inbounds %struct.asc_board, %struct.asc_board* %376, i32 0, i32 20, !dbg !7043
  store i16 %call338, i16* %bios_signature, align 8, !dbg !7043
  br label %do.end339, !dbg !7043

do.end339:                                        ; preds = %do.body333
  br label %do.body340, !dbg !7045

do.body340:                                       ; preds = %do.end339
  %377 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7046
  %iop_base341 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %377, i32 0, i32 0, !dbg !7046
  %378 = load i8*, i8** %iop_base341, align 8, !dbg !7046
  %add.ptr342 = getelementptr i8, i8* %378, i64 4, !dbg !7046
  call void @writew(i16 zeroext 90, i8* %add.ptr342) #11, !dbg !7046
  %379 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7046
  %iop_base343 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %379, i32 0, i32 0, !dbg !7046
  %380 = load i8*, i8** %iop_base343, align 8, !dbg !7046
  %add.ptr344 = getelementptr i8, i8* %380, i64 6, !dbg !7046
  %call345 = call zeroext i16 @readw(i8* %add.ptr344) #11, !dbg !7046
  %381 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7046
  %bios_version = getelementptr inbounds %struct.asc_board, %struct.asc_board* %381, i32 0, i32 21, !dbg !7046
  store i16 %call345, i16* %bios_version, align 2, !dbg !7046
  br label %do.end346, !dbg !7046

do.end346:                                        ; preds = %do.body340
  br label %do.body347, !dbg !7048

do.body347:                                       ; preds = %do.end346
  %382 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7049
  %iop_base348 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %382, i32 0, i32 0, !dbg !7049
  %383 = load i8*, i8** %iop_base348, align 8, !dbg !7049
  %add.ptr349 = getelementptr i8, i8* %383, i64 4, !dbg !7049
  call void @writew(i16 zeroext 84, i8* %add.ptr349) #11, !dbg !7049
  %384 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7049
  %iop_base350 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %384, i32 0, i32 0, !dbg !7049
  %385 = load i8*, i8** %iop_base350, align 8, !dbg !7049
  %add.ptr351 = getelementptr i8, i8* %385, i64 6, !dbg !7049
  %call352 = call zeroext i16 @readw(i8* %add.ptr351) #11, !dbg !7049
  %386 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7049
  %bios_codeseg = getelementptr inbounds %struct.asc_board, %struct.asc_board* %386, i32 0, i32 22, !dbg !7049
  store i16 %call352, i16* %bios_codeseg, align 4, !dbg !7049
  br label %do.end353, !dbg !7049

do.end353:                                        ; preds = %do.body347
  br label %do.body354, !dbg !7051

do.body354:                                       ; preds = %do.end353
  %387 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7052
  %iop_base355 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %387, i32 0, i32 0, !dbg !7052
  %388 = load i8*, i8** %iop_base355, align 8, !dbg !7052
  %add.ptr356 = getelementptr i8, i8* %388, i64 4, !dbg !7052
  call void @writew(i16 zeroext 86, i8* %add.ptr356) #11, !dbg !7052
  %389 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7052
  %iop_base357 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %389, i32 0, i32 0, !dbg !7052
  %390 = load i8*, i8** %iop_base357, align 8, !dbg !7052
  %add.ptr358 = getelementptr i8, i8* %390, i64 6, !dbg !7052
  %call359 = call zeroext i16 @readw(i8* %add.ptr358) #11, !dbg !7052
  %391 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7052
  %bios_codelen = getelementptr inbounds %struct.asc_board, %struct.asc_board* %391, i32 0, i32 23, !dbg !7052
  store i16 %call359, i16* %bios_codelen, align 2, !dbg !7052
  br label %do.end360, !dbg !7052

do.end360:                                        ; preds = %do.body354
  %392 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7054
  %bios_signature361 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %392, i32 0, i32 20, !dbg !7056
  %393 = load i16, i16* %bios_signature361, align 8, !dbg !7056
  %conv362 = zext i16 %393 to i32, !dbg !7054
  %cmp363 = icmp eq i32 %conv362, 21930, !dbg !7057
  br i1 %cmp363, label %if.then365, label %if.else370, !dbg !7058

if.then365:                                       ; preds = %do.end360
  %394 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7059
  %bios_codeseg366 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %394, i32 0, i32 22, !dbg !7061
  %395 = load i16, i16* %bios_codeseg366, align 4, !dbg !7061
  %conv367 = zext i16 %395 to i64, !dbg !7062
  %shl368 = shl i64 %conv367, 4, !dbg !7063
  %396 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7064
  %base369 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %396, i32 0, i32 41, !dbg !7065
  store i64 %shl368, i64* %base369, align 8, !dbg !7066
  br label %if.end372, !dbg !7067

if.else370:                                       ; preds = %do.end360
  %397 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7068
  %base371 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %397, i32 0, i32 41, !dbg !7070
  store i64 0, i64* %base371, align 8, !dbg !7071
  br label %if.end372

if.end372:                                        ; preds = %if.else370, %if.then365
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.then327
  %398 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7072
  %dma_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %398, i32 0, i32 44, !dbg !7073
  store i8 -1, i8* %dma_channel, align 1, !dbg !7074
  %399 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7075
  %irq = getelementptr inbounds %struct.asc_board, %struct.asc_board* %399, i32 0, i32 3, !dbg !7076
  %400 = load i32, i32* %irq, align 4, !dbg !7076
  %401 = load i32, i32* %share_irq, align 4, !dbg !7077
  %conv374 = sext i32 %401 to i64, !dbg !7077
  %402 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7078
  %403 = bitcast %struct.Scsi_Host* %402 to i8*, !dbg !7078
  %call375 = call i32 @request_irq(i32 %400, i32 (i32, i8*)* @advansys_interrupt, i64 %conv374, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %403) #11, !dbg !7079
  store i32 %call375, i32* %ret, align 4, !dbg !7080
  %404 = load i32, i32* %ret, align 4, !dbg !7081
  %tobool376 = icmp ne i32 %404, 0, !dbg !7081
  br i1 %tobool376, label %if.then377, label %if.end394, !dbg !7083

if.then377:                                       ; preds = %if.end373
  %405 = load i32, i32* %ret, align 4, !dbg !7084
  %cmp378 = icmp eq i32 %405, -16, !dbg !7087
  br i1 %cmp378, label %if.then380, label %if.else383, !dbg !7088

if.then380:                                       ; preds = %if.then377
  %406 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7089
  %shost_gendev381 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %406, i32 0, i32 47, !dbg !7089
  %407 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7089
  %irq382 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %407, i32 0, i32 3, !dbg !7089
  %408 = load i32, i32* %irq382, align 4, !dbg !7089
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev381, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.130, i64 0, i64 0), i32 %408) #12, !dbg !7089
  br label %if.end393, !dbg !7091

if.else383:                                       ; preds = %if.then377
  %409 = load i32, i32* %ret, align 4, !dbg !7092
  %cmp384 = icmp eq i32 %409, -22, !dbg !7094
  br i1 %cmp384, label %if.then386, label %if.else389, !dbg !7095

if.then386:                                       ; preds = %if.else383
  %410 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7096
  %shost_gendev387 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %410, i32 0, i32 47, !dbg !7096
  %411 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7096
  %irq388 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %411, i32 0, i32 3, !dbg !7096
  %412 = load i32, i32* %irq388, align 4, !dbg !7096
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev387, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.131, i64 0, i64 0), i32 %412) #12, !dbg !7096
  br label %if.end392, !dbg !7098

if.else389:                                       ; preds = %if.else383
  %413 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7099
  %shost_gendev390 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %413, i32 0, i32 47, !dbg !7099
  %414 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7099
  %irq391 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %414, i32 0, i32 3, !dbg !7099
  %415 = load i32, i32* %irq391, align 4, !dbg !7099
  %416 = load i32, i32* %ret, align 4, !dbg !7099
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev390, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.132, i64 0, i64 0), i32 %415, i32 %416) #12, !dbg !7099
  br label %if.end392

if.end392:                                        ; preds = %if.else389, %if.then386
  br label %if.end393

if.end393:                                        ; preds = %if.end392, %if.then380
  br label %err_free_dma, !dbg !7101

if.end394:                                        ; preds = %if.end373
  %417 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7102
  %flags395 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %417, i32 0, i32 2, !dbg !7102
  %418 = load i32, i32* %flags395, align 8, !dbg !7102
  %and396 = and i32 %418, 4, !dbg !7102
  %cmp397 = icmp eq i32 %and396, 0, !dbg !7102
  br i1 %cmp397, label %if.then399, label %if.else418, !dbg !7104

if.then399:                                       ; preds = %if.end394
  %call400 = call i8* @kzalloc(i64 64, i32 3264) #11, !dbg !7105
  %419 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7107
  %overrun_buf = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %419, i32 0, i32 11, !dbg !7108
  store i8* %call400, i8** %overrun_buf, align 8, !dbg !7109
  %420 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7110
  %overrun_buf401 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %420, i32 0, i32 11, !dbg !7112
  %421 = load i8*, i8** %overrun_buf401, align 8, !dbg !7112
  %tobool402 = icmp ne i8* %421, null, !dbg !7110
  br i1 %tobool402, label %if.end404, label %if.then403, !dbg !7113

if.then403:                                       ; preds = %if.then399
  store i32 -12, i32* %ret, align 4, !dbg !7114
  br label %err_free_irq, !dbg !7116

if.end404:                                        ; preds = %if.then399
  %422 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7117
  %call405 = call i32 @AscInitAsc1000Driver(%struct.asc_dvc_var* %422) #11, !dbg !7118
  store i32 %call405, i32* %warn_code, align 4, !dbg !7119
  %423 = load i32, i32* %warn_code, align 4, !dbg !7120
  %tobool406 = icmp ne i32 %423, 0, !dbg !7120
  br i1 %tobool406, label %if.then409, label %lor.lhs.false, !dbg !7122

lor.lhs.false:                                    ; preds = %if.end404
  %424 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7123
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %424, i32 0, i32 1, !dbg !7124
  %425 = load i16, i16* %err_code, align 4, !dbg !7124
  %conv407 = zext i16 %425 to i32, !dbg !7123
  %tobool408 = icmp ne i32 %conv407, 0, !dbg !7123
  br i1 %tobool408, label %if.then409, label %if.end417, !dbg !7125

if.then409:                                       ; preds = %lor.lhs.false, %if.end404
  %426 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7126
  %shost_gendev410 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %426, i32 0, i32 47, !dbg !7126
  %427 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7126
  %init_state = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %427, i32 0, i32 20, !dbg !7126
  %428 = load i16, i16* %init_state, align 8, !dbg !7126
  %conv411 = zext i16 %428 to i32, !dbg !7126
  %429 = load i32, i32* %warn_code, align 4, !dbg !7126
  %430 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7126
  %err_code412 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %430, i32 0, i32 1, !dbg !7126
  %431 = load i16, i16* %err_code412, align 4, !dbg !7126
  %conv413 = zext i16 %431 to i32, !dbg !7126
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev410, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.133, i64 0, i64 0), i32 %conv411, i32 %429, i32 %conv413) #12, !dbg !7126
  %432 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7128
  %overrun_dma = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %432, i32 0, i32 12, !dbg !7130
  %433 = load i64, i64* %overrun_dma, align 8, !dbg !7130
  %tobool414 = icmp ne i64 %433, 0, !dbg !7128
  br i1 %tobool414, label %if.end416, label %if.then415, !dbg !7131

if.then415:                                       ; preds = %if.then409
  store i32 -19, i32* %ret, align 4, !dbg !7132
  br label %err_free_mem, !dbg !7134

if.end416:                                        ; preds = %if.then409
  br label %if.end417, !dbg !7135

if.end417:                                        ; preds = %if.end416, %lor.lhs.false
  br label %if.end423, !dbg !7136

if.else418:                                       ; preds = %if.end394
  %434 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7137
  %call419 = call i32 @advansys_wide_init_chip(%struct.Scsi_Host* %434) #11, !dbg !7140
  %tobool420 = icmp ne i32 %call419, 0, !dbg !7140
  br i1 %tobool420, label %if.then421, label %if.end422, !dbg !7141

if.then421:                                       ; preds = %if.else418
  store i32 -19, i32* %ret, align 4, !dbg !7142
  br label %err_free_mem, !dbg !7144

if.end422:                                        ; preds = %if.else418
  br label %if.end423

if.end423:                                        ; preds = %if.end422, %if.end417
  %435 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7145
  %436 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7146
  %dev424 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %436, i32 0, i32 0, !dbg !7147
  %437 = load %struct.device*, %struct.device** %dev424, align 8, !dbg !7147
  %call425 = call i32 @scsi_add_host(%struct.Scsi_Host* %435, %struct.device* %437) #11, !dbg !7148
  store i32 %call425, i32* %ret, align 4, !dbg !7149
  %438 = load i32, i32* %ret, align 4, !dbg !7150
  %tobool426 = icmp ne i32 %438, 0, !dbg !7150
  br i1 %tobool426, label %if.then427, label %if.end428, !dbg !7152

if.then427:                                       ; preds = %if.end423
  br label %err_free_mem, !dbg !7153

if.end428:                                        ; preds = %if.end423
  %439 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7154
  call void @scsi_scan_host(%struct.Scsi_Host* %439) #11, !dbg !7155
  store i32 0, i32* %retval, align 4, !dbg !7156
  br label %return, !dbg !7156

err_free_mem:                                     ; preds = %if.then427, %if.then421, %if.then415
  call void @llvm.dbg.label(metadata !7157), !dbg !7158
  %440 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7159
  %flags429 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %440, i32 0, i32 2, !dbg !7159
  %441 = load i32, i32* %flags429, align 8, !dbg !7159
  %and430 = and i32 %441, 4, !dbg !7159
  %cmp431 = icmp eq i32 %and430, 0, !dbg !7159
  br i1 %cmp431, label %if.then433, label %if.else441, !dbg !7161

if.then433:                                       ; preds = %err_free_mem
  %442 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7162
  %overrun_dma434 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %442, i32 0, i32 12, !dbg !7165
  %443 = load i64, i64* %overrun_dma434, align 8, !dbg !7165
  %tobool435 = icmp ne i64 %443, 0, !dbg !7162
  br i1 %tobool435, label %if.then436, label %if.end439, !dbg !7166

if.then436:                                       ; preds = %if.then433
  %444 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7167
  %dev437 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %444, i32 0, i32 0, !dbg !7167
  %445 = load %struct.device*, %struct.device** %dev437, align 8, !dbg !7167
  %446 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7167
  %overrun_dma438 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %446, i32 0, i32 12, !dbg !7167
  %447 = load i64, i64* %overrun_dma438, align 8, !dbg !7167
  call void @dma_unmap_single_attrs(%struct.device* %445, i64 %447, i64 64, i32 2, i64 0) #11, !dbg !7167
  br label %if.end439, !dbg !7167

if.end439:                                        ; preds = %if.then436, %if.then433
  %448 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7168
  %overrun_buf440 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %448, i32 0, i32 11, !dbg !7169
  %449 = load i8*, i8** %overrun_buf440, align 8, !dbg !7169
  call void @kfree(i8* %449) #11, !dbg !7170
  br label %if.end442, !dbg !7171

if.else441:                                       ; preds = %err_free_mem
  %450 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7172
  call void @advansys_wide_free_mem(%struct.asc_board* %450) #11, !dbg !7173
  br label %if.end442

if.end442:                                        ; preds = %if.else441, %if.end439
  br label %err_free_irq, !dbg !7159

err_free_irq:                                     ; preds = %if.end442, %if.then403
  call void @llvm.dbg.label(metadata !7174), !dbg !7175
  %451 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7176
  %irq443 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %451, i32 0, i32 3, !dbg !7177
  %452 = load i32, i32* %irq443, align 4, !dbg !7177
  %453 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7178
  %454 = bitcast %struct.Scsi_Host* %453 to i8*, !dbg !7178
  %call444 = call i8* @free_irq(i32 %452, i8* %454) #11, !dbg !7179
  br label %err_free_dma, !dbg !7179

err_free_dma:                                     ; preds = %err_free_irq, %if.end393
  call void @llvm.dbg.label(metadata !7180), !dbg !7181
  br label %err_unmap, !dbg !7179

err_unmap:                                        ; preds = %err_free_dma, %if.then153, %if.then79
  call void @llvm.dbg.label(metadata !7182), !dbg !7183
  %455 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7184
  %ioremap_addr445 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %455, i32 0, i32 14, !dbg !7186
  %456 = load i8*, i8** %ioremap_addr445, align 8, !dbg !7186
  %tobool446 = icmp ne i8* %456, null, !dbg !7184
  br i1 %tobool446, label %if.then447, label %if.end449, !dbg !7187

if.then447:                                       ; preds = %err_unmap
  %457 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7188
  %ioremap_addr448 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %457, i32 0, i32 14, !dbg !7189
  %458 = load i8*, i8** %ioremap_addr448, align 8, !dbg !7189
  call void @iounmap(i8* %458) #11, !dbg !7190
  br label %if.end449, !dbg !7190

if.end449:                                        ; preds = %if.then447, %err_unmap
  br label %err_shost, !dbg !7186

err_shost:                                        ; preds = %if.end449, %if.then43
  call void @llvm.dbg.label(metadata !7191), !dbg !7192
  %459 = load i32, i32* %ret, align 4, !dbg !7193
  store i32 %459, i32* %retval, align 4, !dbg !7194
  br label %return, !dbg !7194

return:                                           ; preds = %err_shost, %if.end428
  %460 = load i32, i32* %retval, align 4, !dbg !7195
  ret i32 %460, !dbg !7195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !7196 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7199, metadata !DIExpression()), !dbg !7200
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7203
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7204
  %1 = load i8*, i8** %data.addr, align 8, !dbg !7205
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !7206
  ret void, !dbg !7207
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #1

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_byte(%struct.pci_dev*, i32, i8 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @advansys_info(%struct.Scsi_Host* %shost) #2 !dbg !6064 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %asc_dvc_varp = alloca %struct.asc_dvc_var*, align 8
  %adv_dvc_varp = alloca %struct.adv_dvc_var*, align 8
  %busname = alloca i8*, align 8
  %widename = alloca i8*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !7210, metadata !DIExpression()), !dbg !7211
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7212
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !7213
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !7213
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !7211
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc_varp, metadata !7214, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc_varp, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.declare(metadata i8** %busname, metadata !7218, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.declare(metadata i8** %widename, metadata !7220, metadata !DIExpression()), !dbg !7221
  store i8* null, i8** %widename, align 8, !dbg !7221
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7222
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 2, !dbg !7222
  %3 = load i32, i32* %flags, align 8, !dbg !7222
  %and = and i32 %3, 4, !dbg !7222
  %cmp = icmp eq i32 %and, 0, !dbg !7222
  br i1 %cmp, label %if.then, label %if.else51, !dbg !7224

if.then:                                          ; preds = %entry
  %4 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7225
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 4, !dbg !7227
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !7228
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7229
  %5 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7230
  %bus_type = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %5, i32 0, i32 4, !dbg !7232
  %6 = load i16, i16* %bus_type, align 2, !dbg !7232
  %conv = zext i16 %6 to i32, !dbg !7230
  %and1 = and i32 %conv, 1, !dbg !7233
  %tobool = icmp ne i32 %and1, 0, !dbg !7233
  br i1 %tobool, label %if.then2, label %if.else12, !dbg !7234

if.then2:                                         ; preds = %if.then
  %7 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7235
  %bus_type3 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %7, i32 0, i32 4, !dbg !7238
  %8 = load i16, i16* %bus_type3, align 2, !dbg !7238
  %conv4 = zext i16 %8 to i32, !dbg !7235
  %and5 = and i32 %conv4, 129, !dbg !7239
  %cmp6 = icmp eq i32 %and5, 129, !dbg !7240
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !7241

if.then8:                                         ; preds = %if.then2
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %busname, align 8, !dbg !7242
  br label %if.end, !dbg !7244

if.else:                                          ; preds = %if.then2
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %busname, align 8, !dbg !7245
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  %9 = load i8*, i8** %busname, align 8, !dbg !7247
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7248
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 42, !dbg !7249
  %11 = load i64, i64* %io_port, align 8, !dbg !7249
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7250
  %io_port9 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 42, !dbg !7251
  %13 = load i64, i64* %io_port9, align 8, !dbg !7251
  %add = add i64 %13, 16, !dbg !7252
  %sub = sub i64 %add, 1, !dbg !7253
  %14 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7254
  %irq = getelementptr inbounds %struct.asc_board, %struct.asc_board* %14, i32 0, i32 3, !dbg !7255
  %15 = load i32, i32* %irq, align 4, !dbg !7255
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7256
  %dma_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 44, !dbg !7257
  %17 = load i8, i8* %dma_channel, align 1, !dbg !7257
  %conv10 = zext i8 %17 to i32, !dbg !7256
  %call11 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @advansys_info.info, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %9, i64 %11, i64 %sub, i32 %15, i32 %conv10) #11, !dbg !7258
  br label %if.end50, !dbg !7259

if.else12:                                        ; preds = %if.then
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7260
  %bus_type13 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %18, i32 0, i32 4, !dbg !7263
  %19 = load i16, i16* %bus_type13, align 2, !dbg !7263
  %conv14 = zext i16 %19 to i32, !dbg !7260
  %and15 = and i32 %conv14, 64, !dbg !7264
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7264
  br i1 %tobool16, label %if.then17, label %if.else18, !dbg !7265

if.then17:                                        ; preds = %if.else12
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %busname, align 8, !dbg !7266
  br label %if.end43, !dbg !7268

if.else18:                                        ; preds = %if.else12
  %20 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7269
  %bus_type19 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %20, i32 0, i32 4, !dbg !7271
  %21 = load i16, i16* %bus_type19, align 2, !dbg !7271
  %conv20 = zext i16 %21 to i32, !dbg !7269
  %and21 = and i32 %conv20, 2, !dbg !7272
  %tobool22 = icmp ne i32 %and21, 0, !dbg !7272
  br i1 %tobool22, label %if.then23, label %if.else24, !dbg !7273

if.then23:                                        ; preds = %if.else18
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %busname, align 8, !dbg !7274
  br label %if.end42, !dbg !7276

if.else24:                                        ; preds = %if.else18
  %22 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7277
  %bus_type25 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %22, i32 0, i32 4, !dbg !7279
  %23 = load i16, i16* %bus_type25, align 2, !dbg !7279
  %conv26 = zext i16 %23 to i32, !dbg !7277
  %and27 = and i32 %conv26, 4, !dbg !7280
  %tobool28 = icmp ne i32 %and27, 0, !dbg !7280
  br i1 %tobool28, label %if.then29, label %if.else38, !dbg !7281

if.then29:                                        ; preds = %if.else24
  %24 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7282
  %bus_type30 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %24, i32 0, i32 4, !dbg !7285
  %25 = load i16, i16* %bus_type30, align 2, !dbg !7285
  %conv31 = zext i16 %25 to i32, !dbg !7282
  %and32 = and i32 %conv31, 260, !dbg !7286
  %cmp33 = icmp eq i32 %and32, 260, !dbg !7287
  br i1 %cmp33, label %if.then35, label %if.else36, !dbg !7288

if.then35:                                        ; preds = %if.then29
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %busname, align 8, !dbg !7289
  br label %if.end37, !dbg !7291

if.else36:                                        ; preds = %if.then29
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %busname, align 8, !dbg !7292
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then35
  br label %if.end41, !dbg !7294

if.else38:                                        ; preds = %if.else24
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8** %busname, align 8, !dbg !7295
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7297
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %26, i32 0, i32 47, !dbg !7297
  %27 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !7297
  %bus_type39 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %27, i32 0, i32 4, !dbg !7297
  %28 = load i16, i16* %bus_type39, align 2, !dbg !7297
  %conv40 = zext i16 %28 to i32, !dbg !7297
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 %conv40) #12, !dbg !7297
  br label %if.end41

if.end41:                                         ; preds = %if.else38, %if.end37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then23
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then17
  %29 = load i8*, i8** %busname, align 8, !dbg !7298
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7299
  %io_port44 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %30, i32 0, i32 42, !dbg !7300
  %31 = load i64, i64* %io_port44, align 8, !dbg !7300
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7301
  %io_port45 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 42, !dbg !7302
  %33 = load i64, i64* %io_port45, align 8, !dbg !7302
  %add46 = add i64 %33, 16, !dbg !7303
  %sub47 = sub i64 %add46, 1, !dbg !7304
  %34 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7305
  %irq48 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %34, i32 0, i32 3, !dbg !7306
  %35 = load i32, i32* %irq48, align 4, !dbg !7306
  %call49 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @advansys_info.info, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %29, i64 %31, i64 %sub47, i32 %35) #11, !dbg !7307
  br label %if.end50

if.end50:                                         ; preds = %if.end43, %if.end
  br label %if.end72, !dbg !7308

if.else51:                                        ; preds = %entry
  %36 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7309
  %dvc_var52 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %36, i32 0, i32 4, !dbg !7311
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var52 to %struct.adv_dvc_var*, !dbg !7312
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7313
  %37 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7314
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %37, i32 0, i32 20, !dbg !7316
  %38 = load i8, i8* %chip_type, align 1, !dbg !7316
  %conv53 = zext i8 %38 to i32, !dbg !7314
  %cmp54 = icmp eq i32 %conv53, 1, !dbg !7317
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !7318

if.then56:                                        ; preds = %if.else51
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8** %widename, align 8, !dbg !7319
  br label %if.end65, !dbg !7321

if.else57:                                        ; preds = %if.else51
  %39 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7322
  %chip_type58 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %39, i32 0, i32 20, !dbg !7324
  %40 = load i8, i8* %chip_type58, align 1, !dbg !7324
  %conv59 = zext i8 %40 to i32, !dbg !7322
  %cmp60 = icmp eq i32 %conv59, 2, !dbg !7325
  br i1 %cmp60, label %if.then62, label %if.else63, !dbg !7326

if.then62:                                        ; preds = %if.else57
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8** %widename, align 8, !dbg !7327
  br label %if.end64, !dbg !7329

if.else63:                                        ; preds = %if.else57
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8** %widename, align 8, !dbg !7330
  br label %if.end64

if.end64:                                         ; preds = %if.else63, %if.then62
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then56
  %41 = load i8*, i8** %widename, align 8, !dbg !7332
  %42 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7333
  %iop_base = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %42, i32 0, i32 0, !dbg !7334
  %43 = load i8*, i8** %iop_base, align 8, !dbg !7334
  %44 = ptrtoint i8* %43 to i64, !dbg !7335
  %45 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !7336
  %iop_base66 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %45, i32 0, i32 0, !dbg !7337
  %46 = load i8*, i8** %iop_base66, align 8, !dbg !7337
  %47 = ptrtoint i8* %46 to i64, !dbg !7338
  %48 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7339
  %asc_n_io_port = getelementptr inbounds %struct.asc_board, %struct.asc_board* %48, i32 0, i32 6, !dbg !7340
  %49 = load i16, i16* %asc_n_io_port, align 2, !dbg !7340
  %conv67 = zext i16 %49 to i64, !dbg !7339
  %add68 = add i64 %47, %conv67, !dbg !7341
  %sub69 = sub i64 %add68, 1, !dbg !7342
  %50 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7343
  %irq70 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %50, i32 0, i32 3, !dbg !7344
  %51 = load i32, i32* %irq70, align 4, !dbg !7344
  %call71 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @advansys_info.info, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %41, i64 %44, i64 %sub69, i32 %51) #11, !dbg !7345
  br label %if.end72

if.end72:                                         ; preds = %if.end65, %if.end50
  br label %do.body, !dbg !7346

do.body:                                          ; preds = %if.end72
  %call73 = call i64 @strlen(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @advansys_info.info, i64 0, i64 0)) #11, !dbg !7347
  %cmp74 = icmp uge i64 %call73, 128, !dbg !7347
  %lnot = xor i1 %cmp74, true, !dbg !7347
  %lnot76 = xor i1 %lnot, true, !dbg !7347
  %lnot.ext = zext i1 %lnot76 to i32, !dbg !7347
  %conv77 = sext i32 %lnot.ext to i64, !dbg !7347
  %tobool78 = icmp ne i64 %conv77, 0, !dbg !7347
  br i1 %tobool78, label %if.then79, label %if.end87, !dbg !7350

if.then79:                                        ; preds = %do.body
  br label %do.body80, !dbg !7347

do.body80:                                        ; preds = %if.then79
  br label %do.body81, !dbg !7351

do.body81:                                        ; preds = %do.body80
  br label %do.end, !dbg !7353

do.end:                                           ; preds = %do.body81
  br label %do.body82, !dbg !7351

do.body82:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 2698, i32 0, i64 12) #6, !dbg !7355, !srcloc !7357
  br label %do.end83, !dbg !7355

do.end83:                                         ; preds = %do.body82
  br label %do.body84, !dbg !7351

do.body84:                                        ; preds = %do.end83
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 296) #6, !dbg !7358, !srcloc !7361
  unreachable, !dbg !7362

do.end85:                                         ; No predecessors!
  br label %do.end86, !dbg !7351

do.end86:                                         ; preds = %do.end85
  br label %if.end87, !dbg !7351

if.end87:                                         ; preds = %do.end86, %do.body
  br label %do.end88, !dbg !7350

do.end88:                                         ; preds = %if.end87
  ret i8* getelementptr inbounds ([128 x i8], [128 x i8]* @advansys_info.info, i64 0, i64 0), !dbg !7363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_queuecommand(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #2 !dbg !7364 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !7365, metadata !DIExpression()), !dbg !7370
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7372, metadata !DIExpression()), !dbg !7373
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7374, metadata !DIExpression()), !dbg !7379
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %irq_flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !7388, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !7389, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7390, metadata !DIExpression()), !dbg !7387
  br label %do.body, !dbg !7387

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7391

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7392, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7395, metadata !DIExpression()), !dbg !7394
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7394
  %conv = zext i1 %cmp to i32, !dbg !7394
  store i32 1, i32* %tmp, align 4, !dbg !7394
  %0 = load i32, i32* %tmp, align 4, !dbg !7394
  br label %do.body2, !dbg !7396

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7397

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7398

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7400, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7404, metadata !DIExpression()), !dbg !7403
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7403
  %conv8 = zext i1 %cmp7 to i32, !dbg !7403
  store i32 1, i32* %tmp9, align 4, !dbg !7403
  %1 = load i32, i32* %tmp9, align 4, !dbg !7403
  %call = call i64 @arch_local_irq_save() #11, !dbg !7405
  store i64 %call, i64* %irq_flags, align 8, !dbg !7405
  br label %do.end, !dbg !7405

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7398

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7397

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7406, !srcloc !7407
  br label %do.body12, !dbg !7406

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7408
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !7408
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !7408
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7409
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !7410
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !7410
  br label %do.end14, !dbg !7408

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7406

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7397

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7396

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7391

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7387
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7387
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !7387
  %8 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !7387
  %call19 = call i32 @advansys_queuecommand_lck(%struct.scsi_cmnd* %6, void (%struct.scsi_cmnd*)* %8) #11, !dbg !7387
  store i32 %call19, i32* %rc, align 4, !dbg !7387
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7387
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !7387
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !7387
  %11 = load i64, i64* %irq_flags, align 8, !dbg !7387
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !233, metadata !7411, metadata !DIExpression()) #6, !dbg !7414
  call void @llvm.dbg.declare(metadata !233, metadata !7415, metadata !DIExpression()) #6, !dbg !7414
  store i32 1, i32* %tmp.i, align 4, !dbg !7414
  %12 = load i32, i32* %tmp.i, align 4, !dbg !7414
  call void @llvm.dbg.declare(metadata !233, metadata !7416, metadata !DIExpression()) #6, !dbg !7421
  call void @llvm.dbg.declare(metadata !233, metadata !7422, metadata !DIExpression()) #6, !dbg !7421
  store i32 1, i32* %tmp8.i, align 4, !dbg !7421
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !7421
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !7423
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !7423
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7424, !srcloc !7426
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !7427
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !7427
  %rlock.i22 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !7427
  %17 = load i32, i32* %rc, align 4, !dbg !7387
  ret i32 %17, !dbg !7387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_reset(%struct.scsi_cmnd* %scp) #2 !dbg !7429 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !7365, metadata !DIExpression()), !dbg !7430
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7372, metadata !DIExpression()), !dbg !7434
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7374, metadata !DIExpression()), !dbg !7435
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %flags = alloca i64, align 8
  %status = alloca i32, align 4
  %ret = alloca i32, align 4
  %asc_dvc = alloca %struct.asc_dvc_var*, align 8
  %adv_dvc = alloca %struct.adv_dvc_var*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !7444, metadata !DIExpression()), !dbg !7445
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7446
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !7447
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7447
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !7448
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7448
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %shost, align 8, !dbg !7445
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !7449, metadata !DIExpression()), !dbg !7450
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7451
  %call = call i8* @shost_priv(%struct.Scsi_Host* %3) #11, !dbg !7452
  %4 = bitcast i8* %call to %struct.asc_board*, !dbg !7452
  store %struct.asc_board* %4, %struct.asc_board** %boardp, align 8, !dbg !7450
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7453, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7457, metadata !DIExpression()), !dbg !7458
  store i32 8194, i32* %ret, align 4, !dbg !7458
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7459
  %call1 = call i8* @shost_priv(%struct.Scsi_Host* %5) #11, !dbg !7459
  %6 = bitcast i8* %call1 to %struct.asc_board*, !dbg !7459
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %6, i32 0, i32 12, !dbg !7459
  %reset = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 1, !dbg !7459
  %7 = load i32, i32* %reset, align 4, !dbg !7459
  %add = add i32 %7, 1, !dbg !7459
  store i32 %add, i32* %reset, align 4, !dbg !7459
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7460
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.scsi_cmnd* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0)) #11, !dbg !7461
  %9 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7462
  %flags2 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 2, !dbg !7462
  %10 = load i32, i32* %flags2, align 8, !dbg !7462
  %and = and i32 %10, 4, !dbg !7462
  %cmp = icmp eq i32 %and, 0, !dbg !7462
  br i1 %cmp, label %if.then, label %if.else12, !dbg !7463

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc, metadata !7464, metadata !DIExpression()), !dbg !7466
  %11 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7467
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %11, i32 0, i32 4, !dbg !7468
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !7469
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7466
  %12 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7470
  %call3 = call i32 @AscInitAsc1000Driver(%struct.asc_dvc_var* %12) #11, !dbg !7471
  store i32 %call3, i32* %status, align 4, !dbg !7472
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7473
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 1, !dbg !7475
  %14 = load i16, i16* %err_code, align 4, !dbg !7475
  %conv = zext i16 %14 to i32, !dbg !7473
  %tobool = icmp ne i32 %conv, 0, !dbg !7473
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !7476

lor.lhs.false:                                    ; preds = %if.then
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7477
  %overrun_dma = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %15, i32 0, i32 12, !dbg !7478
  %16 = load i64, i64* %overrun_dma, align 8, !dbg !7478
  %tobool4 = icmp ne i64 %16, 0, !dbg !7477
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !7479

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7480
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7482
  %err_code6 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %18, i32 0, i32 1, !dbg !7483
  %19 = load i16, i16* %err_code6, align 4, !dbg !7483
  %conv7 = zext i16 %19 to i32, !dbg !7482
  %20 = load i32, i32* %status, align 4, !dbg !7484
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.scsi_cmnd* %17, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0), i32 %conv7, i32 %20) #11, !dbg !7485
  store i32 8195, i32* %ret, align 4, !dbg !7486
  br label %if.end11, !dbg !7487

if.else:                                          ; preds = %lor.lhs.false
  %21 = load i32, i32* %status, align 4, !dbg !7488
  %tobool8 = icmp ne i32 %21, 0, !dbg !7488
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !7490

if.then9:                                         ; preds = %if.else
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7491
  %23 = load i32, i32* %status, align 4, !dbg !7493
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.scsi_cmnd* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0), i32 %23) #11, !dbg !7494
  br label %if.end, !dbg !7495

if.else10:                                        ; preds = %if.else
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7496
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.scsi_cmnd* %24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #11, !dbg !7498
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then9
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then5
  br label %if.end39, !dbg !7499

if.else12:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc, metadata !7500, metadata !DIExpression()), !dbg !7501
  %25 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7502
  %dvc_var13 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %25, i32 0, i32 4, !dbg !7503
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var13 to %struct.adv_dvc_var*, !dbg !7504
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !7501
  %26 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !7505
  %call14 = call i32 @AdvResetChipAndSB(%struct.adv_dvc_var* %26) #11, !dbg !7506
  switch i32 %call14, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb15
  ], !dbg !7507

sw.bb:                                            ; preds = %if.else12
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7508
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.scsi_cmnd* %27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #11, !dbg !7510
  br label %sw.epilog, !dbg !7511

sw.bb15:                                          ; preds = %if.else12
  br label %sw.default, !dbg !7511

sw.default:                                       ; preds = %if.else12, %sw.bb15
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7512
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.scsi_cmnd* %28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0)) #11, !dbg !7513
  store i32 8195, i32* %ret, align 4, !dbg !7514
  br label %sw.epilog, !dbg !7515

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %do.body, !dbg !7516

do.body:                                          ; preds = %sw.epilog
  br label %do.body16, !dbg !7517

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7518, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7521, metadata !DIExpression()), !dbg !7520
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !7520
  %conv18 = zext i1 %cmp17 to i32, !dbg !7520
  store i32 1, i32* %tmp, align 4, !dbg !7520
  %29 = load i32, i32* %tmp, align 4, !dbg !7520
  br label %do.body19, !dbg !7522

do.body19:                                        ; preds = %do.body16
  br label %do.body20, !dbg !7523

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !7524

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !7530, metadata !DIExpression()), !dbg !7529
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !7529
  %conv25 = zext i1 %cmp24 to i32, !dbg !7529
  store i32 1, i32* %tmp26, align 4, !dbg !7529
  %30 = load i32, i32* %tmp26, align 4, !dbg !7529
  %call27 = call i64 @arch_local_irq_save() #11, !dbg !7531
  store i64 %call27, i64* %flags, align 8, !dbg !7531
  br label %do.end, !dbg !7531

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !7524

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !7523

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7532, !srcloc !7533
  br label %do.body30, !dbg !7532

do.body30:                                        ; preds = %do.body29
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7534
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %31, i32 0, i32 4, !dbg !7534
  %32 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !7534
  store %struct.spinlock* %32, %struct.spinlock** %lock.addr.i, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7535
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !7536
  %rlock.i = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !7536
  br label %do.end32, !dbg !7534

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !7532

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !7523

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !7522

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !7517

do.end36:                                         ; preds = %do.end35
  %35 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !7537
  %call37 = call i32 @AdvISR(%struct.adv_dvc_var* %35) #11, !dbg !7538
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7539
  %host_lock38 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %36, i32 0, i32 4, !dbg !7540
  %37 = load %struct.spinlock*, %struct.spinlock** %host_lock38, align 8, !dbg !7540
  %38 = load i64, i64* %flags, align 8, !dbg !7541
  store %struct.spinlock* %37, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !233, metadata !7411, metadata !DIExpression()) #6, !dbg !7542
  call void @llvm.dbg.declare(metadata !233, metadata !7415, metadata !DIExpression()) #6, !dbg !7542
  store i32 1, i32* %tmp.i, align 4, !dbg !7542
  %39 = load i32, i32* %tmp.i, align 4, !dbg !7542
  call void @llvm.dbg.declare(metadata !233, metadata !7416, metadata !DIExpression()) #6, !dbg !7543
  call void @llvm.dbg.declare(metadata !233, metadata !7422, metadata !DIExpression()) #6, !dbg !7543
  store i32 1, i32* %tmp8.i, align 4, !dbg !7543
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !7543
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !7544
  call void @arch_local_irq_restore(i64 %41) #13, !dbg !7544
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7545, !srcloc !7426
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !7546
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !7546
  %rlock.i41 = bitcast %union.anon.1* %43 to %struct.raw_spinlock*, !dbg !7546
  br label %if.end39

if.end39:                                         ; preds = %do.end36, %if.end11
  %44 = load i32, i32* %ret, align 4, !dbg !7547
  ret i32 %44, !dbg !7548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_slave_configure(%struct.scsi_device* %sdev) #2 !dbg !7549 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !7552, metadata !DIExpression()), !dbg !7553
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7554
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !7555
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7555
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #11, !dbg !7556
  %2 = bitcast i8* %call to %struct.asc_board*, !dbg !7556
  store %struct.asc_board* %2, %struct.asc_board** %boardp, align 8, !dbg !7553
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7557
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 2, !dbg !7557
  %4 = load i32, i32* %flags, align 8, !dbg !7557
  %and = and i32 %4, 4, !dbg !7557
  %cmp = icmp eq i32 %and, 0, !dbg !7557
  br i1 %cmp, label %if.then, label %if.else, !dbg !7559

if.then:                                          ; preds = %entry
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7560
  %6 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7561
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %6, i32 0, i32 4, !dbg !7562
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !7563
  call void @advansys_narrow_slave_configure(%struct.scsi_device* %5, %struct.asc_dvc_var* %asc_dvc_var) #11, !dbg !7564
  br label %if.end, !dbg !7564

if.else:                                          ; preds = %entry
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7565
  %8 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7566
  %dvc_var1 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %8, i32 0, i32 4, !dbg !7567
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var1 to %struct.adv_dvc_var*, !dbg !7568
  call void @advansys_wide_slave_configure(%struct.scsi_device* %7, %struct.adv_dvc_var* %adv_dvc_var) #11, !dbg !7569
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !7570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_biosparam(%struct.scsi_device* %sdev, %struct.block_device* %bdev, i64 %capacity, i32* %ip) #2 !dbg !7571 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %bdev.addr = alloca %struct.block_device*, align 8
  %capacity.addr = alloca i64, align 8
  %ip.addr = alloca i32*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !7572, metadata !DIExpression()), !dbg !7573
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !7574, metadata !DIExpression()), !dbg !7575
  store i64 %capacity, i64* %capacity.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i32* %ip, i32** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ip.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !7580, metadata !DIExpression()), !dbg !7581
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7582
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !7583
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7583
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #11, !dbg !7584
  %2 = bitcast i8* %call to %struct.asc_board*, !dbg !7584
  store %struct.asc_board* %2, %struct.asc_board** %boardp, align 8, !dbg !7581
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7585
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 0, !dbg !7585
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !7585
  %call2 = call i8* @shost_priv(%struct.Scsi_Host* %4) #11, !dbg !7585
  %5 = bitcast i8* %call2 to %struct.asc_board*, !dbg !7585
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %5, i32 0, i32 12, !dbg !7585
  %biosparam = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 2, !dbg !7585
  %6 = load i32, i32* %biosparam, align 8, !dbg !7585
  %add = add i32 %6, 1, !dbg !7585
  store i32 %add, i32* %biosparam, align 8, !dbg !7585
  %7 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7586
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %7, i32 0, i32 2, !dbg !7586
  %8 = load i32, i32* %flags, align 8, !dbg !7586
  %and = and i32 %8, 4, !dbg !7586
  %cmp = icmp eq i32 %and, 0, !dbg !7586
  br i1 %cmp, label %if.then, label %if.else10, !dbg !7588

if.then:                                          ; preds = %entry
  %9 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7589
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 4, !dbg !7592
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !7593
  %dvc_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %asc_dvc_var, i32 0, i32 2, !dbg !7594
  %10 = load i16, i16* %dvc_cntl, align 2, !dbg !7594
  %conv = zext i16 %10 to i32, !dbg !7589
  %and3 = and i32 %conv, 2, !dbg !7595
  %tobool = icmp ne i32 %and3, 0, !dbg !7595
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7596

land.lhs.true:                                    ; preds = %if.then
  %11 = load i64, i64* %capacity.addr, align 8, !dbg !7597
  %cmp4 = icmp ugt i64 %11, 2097152, !dbg !7598
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !7599

if.then6:                                         ; preds = %land.lhs.true
  %12 = load i32*, i32** %ip.addr, align 8, !dbg !7600
  %arrayidx = getelementptr i32, i32* %12, i64 0, !dbg !7600
  store i32 255, i32* %arrayidx, align 4, !dbg !7602
  %13 = load i32*, i32** %ip.addr, align 8, !dbg !7603
  %arrayidx7 = getelementptr i32, i32* %13, i64 1, !dbg !7603
  store i32 63, i32* %arrayidx7, align 4, !dbg !7604
  br label %if.end, !dbg !7605

if.else:                                          ; preds = %land.lhs.true, %if.then
  %14 = load i32*, i32** %ip.addr, align 8, !dbg !7606
  %arrayidx8 = getelementptr i32, i32* %14, i64 0, !dbg !7606
  store i32 64, i32* %arrayidx8, align 4, !dbg !7608
  %15 = load i32*, i32** %ip.addr, align 8, !dbg !7609
  %arrayidx9 = getelementptr i32, i32* %15, i64 1, !dbg !7609
  store i32 32, i32* %arrayidx9, align 4, !dbg !7610
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end25, !dbg !7611

if.else10:                                        ; preds = %entry
  %16 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7612
  %dvc_var11 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %16, i32 0, i32 4, !dbg !7615
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var11 to %struct.adv_dvc_var*, !dbg !7616
  %bios_ctrl = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %adv_dvc_var, i32 0, i32 2, !dbg !7617
  %17 = load i16, i16* %bios_ctrl, align 2, !dbg !7617
  %conv12 = zext i16 %17 to i32, !dbg !7612
  %and13 = and i32 %conv12, 2, !dbg !7618
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7618
  br i1 %tobool14, label %land.lhs.true15, label %if.else21, !dbg !7619

land.lhs.true15:                                  ; preds = %if.else10
  %18 = load i64, i64* %capacity.addr, align 8, !dbg !7620
  %cmp16 = icmp ugt i64 %18, 2097152, !dbg !7621
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !7622

if.then18:                                        ; preds = %land.lhs.true15
  %19 = load i32*, i32** %ip.addr, align 8, !dbg !7623
  %arrayidx19 = getelementptr i32, i32* %19, i64 0, !dbg !7623
  store i32 255, i32* %arrayidx19, align 4, !dbg !7625
  %20 = load i32*, i32** %ip.addr, align 8, !dbg !7626
  %arrayidx20 = getelementptr i32, i32* %20, i64 1, !dbg !7626
  store i32 63, i32* %arrayidx20, align 4, !dbg !7627
  br label %if.end24, !dbg !7628

if.else21:                                        ; preds = %land.lhs.true15, %if.else10
  %21 = load i32*, i32** %ip.addr, align 8, !dbg !7629
  %arrayidx22 = getelementptr i32, i32* %21, i64 0, !dbg !7629
  store i32 64, i32* %arrayidx22, align 4, !dbg !7631
  %22 = load i32*, i32** %ip.addr, align 8, !dbg !7632
  %arrayidx23 = getelementptr i32, i32* %22, i64 1, !dbg !7632
  store i32 32, i32* %arrayidx23, align 4, !dbg !7633
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then18
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end
  %23 = load i64, i64* %capacity.addr, align 8, !dbg !7634
  %24 = load i32*, i32** %ip.addr, align 8, !dbg !7635
  %arrayidx26 = getelementptr i32, i32* %24, i64 0, !dbg !7635
  %25 = load i32, i32* %arrayidx26, align 4, !dbg !7635
  %26 = load i32*, i32** %ip.addr, align 8, !dbg !7636
  %arrayidx27 = getelementptr i32, i32* %26, i64 1, !dbg !7636
  %27 = load i32, i32* %arrayidx27, align 4, !dbg !7636
  %mul = mul i32 %25, %27, !dbg !7637
  %conv28 = sext i32 %mul to i64, !dbg !7638
  %div = udiv i64 %23, %conv28, !dbg !7639
  %conv29 = trunc i64 %div to i32, !dbg !7640
  %28 = load i32*, i32** %ip.addr, align 8, !dbg !7641
  %arrayidx30 = getelementptr i32, i32* %28, i64 2, !dbg !7641
  store i32 %conv29, i32* %arrayidx30, align 4, !dbg !7642
  ret i32 0, !dbg !7643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_show_info(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !7644 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !7645, metadata !DIExpression()), !dbg !7646
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7647, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !7649, metadata !DIExpression()), !dbg !7650
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7651
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !7652
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !7652
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !7650
  %2 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7653
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7654
  %call1 = call i8* @advansys_info(%struct.Scsi_Host* %3) #11, !dbg !7655
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8* %call1) #11, !dbg !7656
  %4 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7657
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 2, !dbg !7657
  %5 = load i32, i32* %flags, align 8, !dbg !7657
  %and = and i32 %5, 4, !dbg !7657
  %cmp = icmp eq i32 %and, 0, !dbg !7657
  br i1 %cmp, label %if.end, label %if.then, !dbg !7659

if.then:                                          ; preds = %entry
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7660
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7661
  call void @asc_prt_adv_bios(%struct.seq_file* %6, %struct.Scsi_Host* %7) #11, !dbg !7662
  br label %if.end, !dbg !7662

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7663
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7664
  call void @asc_prt_board_devices(%struct.seq_file* %8, %struct.Scsi_Host* %9) #11, !dbg !7665
  %10 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7666
  %flags2 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %10, i32 0, i32 2, !dbg !7666
  %11 = load i32, i32* %flags2, align 8, !dbg !7666
  %and3 = and i32 %11, 4, !dbg !7666
  %cmp4 = icmp eq i32 %and3, 0, !dbg !7666
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !7668

if.then5:                                         ; preds = %if.end
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7669
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7670
  call void @asc_prt_asc_board_eeprom(%struct.seq_file* %12, %struct.Scsi_Host* %13) #11, !dbg !7671
  br label %if.end6, !dbg !7671

if.else:                                          ; preds = %if.end
  %14 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7672
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7673
  call void @asc_prt_adv_board_eeprom(%struct.seq_file* %14, %struct.Scsi_Host* %15) #11, !dbg !7674
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %16 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7675
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7676
  call void @asc_prt_driver_conf(%struct.seq_file* %16, %struct.Scsi_Host* %17) #11, !dbg !7677
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7678
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7679
  call void @asc_prt_board_stats(%struct.seq_file* %18, %struct.Scsi_Host* %19) #11, !dbg !7680
  %20 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7681
  %flags7 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %20, i32 0, i32 2, !dbg !7681
  %21 = load i32, i32* %flags7, align 8, !dbg !7681
  %and8 = and i32 %21, 4, !dbg !7681
  %cmp9 = icmp eq i32 %and8, 0, !dbg !7681
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !7683

if.then10:                                        ; preds = %if.end6
  %22 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7684
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7685
  call void @asc_prt_asc_board_info(%struct.seq_file* %22, %struct.Scsi_Host* %23) #11, !dbg !7686
  br label %if.end12, !dbg !7686

if.else11:                                        ; preds = %if.end6
  %24 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !7687
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7688
  call void @asc_prt_adv_board_info(%struct.seq_file* %24, %struct.Scsi_Host* %25) #11, !dbg !7689
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then10
  ret i32 0, !dbg !7690
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !7691 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7695, metadata !DIExpression()), !dbg !7696
  %call = call i64 @arch_local_save_flags() #11, !dbg !7697
  store i64 %call, i64* %f, align 8, !dbg !7698
  call void @arch_local_irq_disable() #11, !dbg !7699
  %0 = load i64, i64* %f, align 8, !dbg !7700
  ret i64 %0, !dbg !7701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_queuecommand_lck(%struct.scsi_cmnd* %scp, void (%struct.scsi_cmnd*)* %done) #2 !dbg !7702 {
entry:
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %done.addr = alloca void (%struct.scsi_cmnd*)*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %asc_res = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !7705, metadata !DIExpression()), !dbg !7706
  store void (%struct.scsi_cmnd*)* %done, void (%struct.scsi_cmnd*)** %done.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.scsi_cmnd*)** %done.addr, metadata !7707, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !7709, metadata !DIExpression()), !dbg !7710
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7711
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !7712
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7712
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !7713
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7713
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %shost, align 8, !dbg !7710
  call void @llvm.dbg.declare(metadata i32* %asc_res, metadata !7714, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7716, metadata !DIExpression()), !dbg !7717
  store i32 0, i32* %result, align 4, !dbg !7717
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !7718
  %call = call i8* @shost_priv(%struct.Scsi_Host* %3) #11, !dbg !7718
  %4 = bitcast i8* %call to %struct.asc_board*, !dbg !7718
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 12, !dbg !7718
  %queuecommand = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 0, !dbg !7718
  %5 = load i32, i32* %queuecommand, align 8, !dbg !7718
  %add = add i32 %5, 1, !dbg !7718
  store i32 %add, i32* %queuecommand, align 8, !dbg !7718
  %6 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !7719
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7720
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !7721
  store void (%struct.scsi_cmnd*)* %6, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !7722
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7723
  %call1 = call i32 @asc_execute_scsi_cmnd(%struct.scsi_cmnd* %8) #11, !dbg !7724
  store i32 %call1, i32* %asc_res, align 4, !dbg !7725
  %9 = load i32, i32* %asc_res, align 4, !dbg !7726
  switch i32 %9, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
    i32 -1, label %sw.bb3
  ], !dbg !7727

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !7728

sw.bb2:                                           ; preds = %entry
  store i32 4181, i32* %result, align 4, !dbg !7730
  br label %sw.epilog, !dbg !7731

sw.bb3:                                           ; preds = %entry
  br label %sw.default, !dbg !7731

sw.default:                                       ; preds = %entry, %sw.bb3
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7732
  call void @asc_scsi_done(%struct.scsi_cmnd* %10) #11, !dbg !7733
  br label %sw.epilog, !dbg !7734

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %11 = load i32, i32* %result, align 4, !dbg !7735
  ret i32 %11, !dbg !7736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !7737 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7738, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7741, metadata !DIExpression()), !dbg !7740
  %0 = load i64, i64* %__edi, align 8, !dbg !7740
  store i64 %0, i64* %__edi, align 8, !dbg !7740
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7742, metadata !DIExpression()), !dbg !7740
  %1 = load i64, i64* %__esi, align 8, !dbg !7740
  store i64 %1, i64* %__esi, align 8, !dbg !7740
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7743, metadata !DIExpression()), !dbg !7740
  %2 = load i64, i64* %__edx, align 8, !dbg !7740
  store i64 %2, i64* %__edx, align 8, !dbg !7740
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7744, metadata !DIExpression()), !dbg !7740
  %3 = load i64, i64* %__ecx, align 8, !dbg !7740
  store i64 %3, i64* %__ecx, align 8, !dbg !7740
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7745, metadata !DIExpression()), !dbg !7740
  %4 = load i64, i64* %__eax, align 8, !dbg !7740
  store i64 %4, i64* %__eax, align 8, !dbg !7740
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7740
  %6 = call i64 @llvm.read_register.i64(metadata !6131), !dbg !7746
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !7746, !srcloc !7749
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7746
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7746
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7746
  call void @llvm.write_register.i64(metadata !6131, i64 %asmresult1), !dbg !7746
  %8 = load i64, i64* %__eax, align 8, !dbg !7746
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7750, metadata !DIExpression()), !dbg !7752
  store i64 -1, i64* %__mask, align 8, !dbg !7752
  %9 = load i64, i64* %__mask, align 8, !dbg !7752
  store i64 %9, i64* %tmp, align 8, !dbg !7752
  %10 = load i64, i64* %tmp, align 8, !dbg !7752
  %and = and i64 %8, %10, !dbg !7746
  store i64 %and, i64* %__ret, align 8, !dbg !7746
  %11 = load i64, i64* %__ret, align 8, !dbg !7740
  store i64 %11, i64* %tmp2, align 8, !dbg !7753
  %12 = load i64, i64* %tmp2, align 8, !dbg !7740
  ret i64 %12, !dbg !7754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !7755 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7756, metadata !DIExpression()), !dbg !7758
  %0 = load i64, i64* %__edi, align 8, !dbg !7758
  store i64 %0, i64* %__edi, align 8, !dbg !7758
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7759, metadata !DIExpression()), !dbg !7758
  %1 = load i64, i64* %__esi, align 8, !dbg !7758
  store i64 %1, i64* %__esi, align 8, !dbg !7758
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7760, metadata !DIExpression()), !dbg !7758
  %2 = load i64, i64* %__edx, align 8, !dbg !7758
  store i64 %2, i64* %__edx, align 8, !dbg !7758
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7761, metadata !DIExpression()), !dbg !7758
  %3 = load i64, i64* %__ecx, align 8, !dbg !7758
  store i64 %3, i64* %__ecx, align 8, !dbg !7758
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7762, metadata !DIExpression()), !dbg !7758
  %4 = load i64, i64* %__eax, align 8, !dbg !7758
  store i64 %4, i64* %__eax, align 8, !dbg !7758
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7758
  %6 = call i64 @llvm.read_register.i64(metadata !6131), !dbg !7758
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !7758, !srcloc !7763
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7758
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7758
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7758
  call void @llvm.write_register.i64(metadata !6131, i64 %asmresult1), !dbg !7758
  ret void, !dbg !7764
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @asc_execute_scsi_cmnd(%struct.scsi_cmnd* %scp) #2 !dbg !7765 {
entry:
  %retval = alloca i32, align 4
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %ret = alloca i32, align 4
  %err_code = alloca i32, align 4
  %boardp = alloca %struct.asc_board*, align 8
  %asc_dvc = alloca %struct.asc_dvc_var*, align 8
  %asc_scsi_q = alloca %struct.asc_scsi_q, align 8
  %adv_dvc = alloca %struct.adv_dvc_var*, align 8
  %adv_reqp = alloca %struct.adv_req*, align 8
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7768, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata i32* %err_code, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7774
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !7775
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7775
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !7776
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7776
  %call = call i8* @shost_priv(%struct.Scsi_Host* %2) #11, !dbg !7777
  %3 = bitcast i8* %call to %struct.asc_board*, !dbg !7777
  store %struct.asc_board* %3, %struct.asc_board** %boardp, align 8, !dbg !7773
  %4 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7778
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 2, !dbg !7778
  %5 = load i32, i32* %flags, align 8, !dbg !7778
  %and = and i32 %5, 4, !dbg !7778
  %cmp = icmp eq i32 %and, 0, !dbg !7778
  br i1 %cmp, label %if.then, label %if.else, !dbg !7780

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc, metadata !7781, metadata !DIExpression()), !dbg !7783
  %6 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7784
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %6, i32 0, i32 4, !dbg !7785
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !7786
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.asc_scsi_q* %asc_scsi_q, metadata !7787, metadata !DIExpression()), !dbg !7788
  %7 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7789
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7790
  %call1 = call i32 @asc_build_req(%struct.asc_board* %7, %struct.scsi_cmnd* %8, %struct.asc_scsi_q* %asc_scsi_q) #11, !dbg !7791
  store i32 %call1, i32* %ret, align 4, !dbg !7792
  %9 = load i32, i32* %ret, align 4, !dbg !7793
  %cmp2 = icmp ne i32 %9, 1, !dbg !7795
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7796

if.then3:                                         ; preds = %if.then
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7797
  %device4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 1, !dbg !7797
  %11 = load %struct.scsi_device*, %struct.scsi_device** %device4, align 8, !dbg !7797
  %host5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 0, !dbg !7797
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host5, align 8, !dbg !7797
  %call6 = call i8* @shost_priv(%struct.Scsi_Host* %12) #11, !dbg !7797
  %13 = bitcast i8* %call6 to %struct.asc_board*, !dbg !7797
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 12, !dbg !7797
  %build_error = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 6, !dbg !7797
  %14 = load i32, i32* %build_error, align 8, !dbg !7797
  %add = add i32 %14, 1, !dbg !7797
  store i32 %add, i32* %build_error, align 8, !dbg !7797
  %15 = load i32, i32* %ret, align 4, !dbg !7799
  store i32 %15, i32* %retval, align 4, !dbg !7800
  br label %return, !dbg !7800

if.end:                                           ; preds = %if.then
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7801
  %call7 = call i32 @AscExeScsiQueue(%struct.asc_dvc_var* %16, %struct.asc_scsi_q* %asc_scsi_q) #11, !dbg !7802
  store i32 %call7, i32* %ret, align 4, !dbg !7803
  %sg_head = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %asc_scsi_q, i32 0, i32 3, !dbg !7804
  %17 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !7804
  %18 = bitcast %struct.asc_sg_head* %17 to i8*, !dbg !7805
  call void @kfree(i8* %18) #11, !dbg !7806
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7807
  %err_code8 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 1, !dbg !7808
  %20 = load i16, i16* %err_code8, align 4, !dbg !7808
  %conv = zext i16 %20 to i32, !dbg !7807
  store i32 %conv, i32* %err_code, align 4, !dbg !7809
  br label %if.end22, !dbg !7810

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc, metadata !7811, metadata !DIExpression()), !dbg !7813
  %21 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7814
  %dvc_var9 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %21, i32 0, i32 4, !dbg !7815
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var9 to %struct.adv_dvc_var*, !dbg !7816
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !7813
  call void @llvm.dbg.declare(metadata %struct.adv_req** %adv_reqp, metadata !7817, metadata !DIExpression()), !dbg !7818
  %22 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7819
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7820
  %call10 = call i32 @adv_build_req(%struct.asc_board* %22, %struct.scsi_cmnd* %23, %struct.adv_req** %adv_reqp) #11, !dbg !7821
  switch i32 %call10, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb11
    i32 -1, label %sw.bb12
  ], !dbg !7822

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !7823

sw.bb11:                                          ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !7825
  br label %return, !dbg !7825

sw.bb12:                                          ; preds = %if.else
  br label %sw.default, !dbg !7825

sw.default:                                       ; preds = %if.else, %sw.bb12
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7826
  %device13 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 1, !dbg !7826
  %25 = load %struct.scsi_device*, %struct.scsi_device** %device13, align 8, !dbg !7826
  %host14 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 0, !dbg !7826
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host14, align 8, !dbg !7826
  %call15 = call i8* @shost_priv(%struct.Scsi_Host* %26) #11, !dbg !7826
  %27 = bitcast i8* %call15 to %struct.asc_board*, !dbg !7826
  %asc_stats16 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %27, i32 0, i32 12, !dbg !7826
  %build_error17 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats16, i32 0, i32 6, !dbg !7826
  %28 = load i32, i32* %build_error17, align 8, !dbg !7826
  %add18 = add i32 %28, 1, !dbg !7826
  store i32 %add18, i32* %build_error17, align 8, !dbg !7826
  store i32 -1, i32* %retval, align 4, !dbg !7827
  br label %return, !dbg !7827

sw.epilog:                                        ; preds = %sw.bb
  %29 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !7828
  %30 = load %struct.adv_req*, %struct.adv_req** %adv_reqp, align 8, !dbg !7829
  %call19 = call i32 @AdvExeScsiQueue(%struct.adv_dvc_var* %29, %struct.adv_req* %30) #11, !dbg !7830
  store i32 %call19, i32* %ret, align 4, !dbg !7831
  %31 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !7832
  %err_code20 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %31, i32 0, i32 1, !dbg !7833
  %32 = load i16, i16* %err_code20, align 8, !dbg !7833
  %conv21 = zext i16 %32 to i32, !dbg !7832
  store i32 %conv21, i32* %err_code, align 4, !dbg !7834
  br label %if.end22

if.end22:                                         ; preds = %sw.epilog, %if.end
  %33 = load i32, i32* %ret, align 4, !dbg !7835
  switch i32 %33, label %sw.default42 [
    i32 1, label %sw.bb23
    i32 0, label %sw.bb30
    i32 -1, label %sw.bb36
  ], !dbg !7836

sw.bb23:                                          ; preds = %if.end22
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7837
  %device24 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 1, !dbg !7837
  %35 = load %struct.scsi_device*, %struct.scsi_device** %device24, align 8, !dbg !7837
  %host25 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %35, i32 0, i32 0, !dbg !7837
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host25, align 8, !dbg !7837
  %call26 = call i8* @shost_priv(%struct.Scsi_Host* %36) #11, !dbg !7837
  %37 = bitcast i8* %call26 to %struct.asc_board*, !dbg !7837
  %asc_stats27 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %37, i32 0, i32 12, !dbg !7837
  %exe_noerror = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats27, i32 0, i32 9, !dbg !7837
  %38 = load i32, i32* %exe_noerror, align 4, !dbg !7837
  %add28 = add i32 %38, 1, !dbg !7837
  store i32 %add28, i32* %exe_noerror, align 4, !dbg !7837
  %39 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !7839
  %reqcnt = getelementptr inbounds %struct.asc_board, %struct.asc_board* %39, i32 0, i32 8, !dbg !7840
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7841
  %device29 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 1, !dbg !7842
  %41 = load %struct.scsi_device*, %struct.scsi_device** %device29, align 8, !dbg !7842
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %41, i32 0, i32 16, !dbg !7843
  %42 = load i32, i32* %id, align 8, !dbg !7843
  %idxprom = zext i32 %42 to i64, !dbg !7839
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %reqcnt, i64 0, i64 %idxprom, !dbg !7839
  %43 = load i16, i16* %arrayidx, align 2, !dbg !7844
  %inc = add i16 %43, 1, !dbg !7844
  store i16 %inc, i16* %arrayidx, align 2, !dbg !7844
  br label %sw.epilog49, !dbg !7845

sw.bb30:                                          ; preds = %if.end22
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7846
  %device31 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %44, i32 0, i32 1, !dbg !7846
  %45 = load %struct.scsi_device*, %struct.scsi_device** %device31, align 8, !dbg !7846
  %host32 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %45, i32 0, i32 0, !dbg !7846
  %46 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host32, align 8, !dbg !7846
  %call33 = call i8* @shost_priv(%struct.Scsi_Host* %46) #11, !dbg !7846
  %47 = bitcast i8* %call33 to %struct.asc_board*, !dbg !7846
  %asc_stats34 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %47, i32 0, i32 12, !dbg !7846
  %exe_busy = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats34, i32 0, i32 10, !dbg !7846
  %48 = load i32, i32* %exe_busy, align 8, !dbg !7846
  %add35 = add i32 %48, 1, !dbg !7846
  store i32 %add35, i32* %exe_busy, align 8, !dbg !7846
  br label %sw.epilog49, !dbg !7847

sw.bb36:                                          ; preds = %if.end22
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7848
  %50 = load i32, i32* %err_code, align 4, !dbg !7849
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.scsi_cmnd* %49, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), i32 %50) #11, !dbg !7850
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7851
  %device37 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 1, !dbg !7851
  %52 = load %struct.scsi_device*, %struct.scsi_device** %device37, align 8, !dbg !7851
  %host38 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %52, i32 0, i32 0, !dbg !7851
  %53 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host38, align 8, !dbg !7851
  %call39 = call i8* @shost_priv(%struct.Scsi_Host* %53) #11, !dbg !7851
  %54 = bitcast i8* %call39 to %struct.asc_board*, !dbg !7851
  %asc_stats40 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %54, i32 0, i32 12, !dbg !7851
  %exe_error = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats40, i32 0, i32 11, !dbg !7851
  %55 = load i32, i32* %exe_error, align 4, !dbg !7851
  %add41 = add i32 %55, 1, !dbg !7851
  store i32 %add41, i32* %exe_error, align 4, !dbg !7851
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7852
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %56, i32 0, i32 24, !dbg !7853
  store i32 458752, i32* %result, align 8, !dbg !7854
  br label %sw.epilog49, !dbg !7855

sw.default42:                                     ; preds = %if.end22
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7856
  %58 = load i32, i32* %err_code, align 4, !dbg !7857
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.scsi_cmnd* %57, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0), i32 %58) #11, !dbg !7858
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7859
  %device43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %59, i32 0, i32 1, !dbg !7859
  %60 = load %struct.scsi_device*, %struct.scsi_device** %device43, align 8, !dbg !7859
  %host44 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %60, i32 0, i32 0, !dbg !7859
  %61 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host44, align 8, !dbg !7859
  %call45 = call i8* @shost_priv(%struct.Scsi_Host* %61) #11, !dbg !7859
  %62 = bitcast i8* %call45 to %struct.asc_board*, !dbg !7859
  %asc_stats46 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %62, i32 0, i32 12, !dbg !7859
  %exe_unknown = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats46, i32 0, i32 12, !dbg !7859
  %63 = load i32, i32* %exe_unknown, align 8, !dbg !7859
  %add47 = add i32 %63, 1, !dbg !7859
  store i32 %add47, i32* %exe_unknown, align 8, !dbg !7859
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7860
  %result48 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %64, i32 0, i32 24, !dbg !7861
  store i32 458752, i32* %result48, align 8, !dbg !7862
  br label %sw.epilog49, !dbg !7863

sw.epilog49:                                      ; preds = %sw.default42, %sw.bb36, %sw.bb30, %sw.bb23
  %65 = load i32, i32* %ret, align 4, !dbg !7864
  store i32 %65, i32* %retval, align 4, !dbg !7865
  br label %return, !dbg !7865

return:                                           ; preds = %sw.epilog49, %sw.default, %sw.bb11, %if.then3
  %66 = load i32, i32* %retval, align 4, !dbg !7866
  ret i32 %66, !dbg !7866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_scsi_done(%struct.scsi_cmnd* %scp) #2 !dbg !7867 {
entry:
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7870
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %0) #11, !dbg !7871
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7872
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 1, !dbg !7872
  %2 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7872
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 0, !dbg !7872
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7872
  %call = call i8* @shost_priv(%struct.Scsi_Host* %3) #11, !dbg !7872
  %4 = bitcast i8* %call to %struct.asc_board*, !dbg !7872
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 12, !dbg !7872
  %done = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 5, !dbg !7872
  %5 = load i32, i32* %done, align 4, !dbg !7872
  %add = add i32 %5, 1, !dbg !7872
  store i32 %add, i32* %done, align 4, !dbg !7872
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7873
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 21, !dbg !7874
  %7 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !7874
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7875
  call void %7(%struct.scsi_cmnd* %8) #11, !dbg !7873
  ret void, !dbg !7876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @asc_build_req(%struct.asc_board* %boardp, %struct.scsi_cmnd* %scp, %struct.asc_scsi_q* %asc_scsi_q) #2 !dbg !7877 {
entry:
  %retval = alloca i32, align 4
  %boardp.addr = alloca %struct.asc_board*, align 8
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %asc_scsi_q.addr = alloca %struct.asc_scsi_q*, align 8
  %asc_dvc = alloca %struct.asc_dvc_var*, align 8
  %use_sg = alloca i32, align 4
  %srb_tag = alloca i32, align 4
  %sgcnt = alloca i32, align 4
  %slp = alloca %struct.scatterlist*, align 8
  %asc_sg_head = alloca %struct.asc_sg_head*, align 8
  store %struct.asc_board* %boardp, %struct.asc_board** %boardp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp.addr, metadata !7881, metadata !DIExpression()), !dbg !7882
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !7883, metadata !DIExpression()), !dbg !7884
  store %struct.asc_scsi_q* %asc_scsi_q, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_scsi_q** %asc_scsi_q.addr, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc, metadata !7887, metadata !DIExpression()), !dbg !7889
  %0 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !7890
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %0, i32 0, i32 4, !dbg !7891
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !7892
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7889
  call void @llvm.dbg.declare(metadata i32* %use_sg, metadata !7893, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.declare(metadata i32* %srb_tag, metadata !7895, metadata !DIExpression()), !dbg !7896
  %1 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7897
  %2 = bitcast %struct.asc_scsi_q* %1 to i8*, !dbg !7898
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 64, i1 false), !dbg !7898
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7899
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 19, !dbg !7900
  %4 = load %struct.request*, %struct.request** %request, align 8, !dbg !7900
  %tag = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 5, !dbg !7901
  %5 = load i32, i32* %tag, align 8, !dbg !7901
  %add = add i32 %5, 1, !dbg !7902
  store i32 %add, i32* %srb_tag, align 4, !dbg !7903
  %6 = load i32, i32* %srb_tag, align 4, !dbg !7904
  %7 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7905
  %q2 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %7, i32 0, i32 1, !dbg !7906
  %srb_tag1 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2, i32 0, i32 0, !dbg !7907
  store i32 %6, i32* %srb_tag1, align 8, !dbg !7908
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7909
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 14, !dbg !7910
  %9 = load i8*, i8** %cmnd, align 8, !dbg !7910
  %arrayidx = getelementptr i8, i8* %9, i64 0, !dbg !7909
  %10 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7911
  %cdbptr = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %10, i32 0, i32 2, !dbg !7912
  store i8* %arrayidx, i8** %cdbptr, align 8, !dbg !7913
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7914
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 12, !dbg !7915
  %12 = load i16, i16* %cmd_len, align 4, !dbg !7915
  %conv = trunc i16 %12 to i8, !dbg !7914
  %13 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7916
  %q22 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %13, i32 0, i32 1, !dbg !7917
  %cdb_len = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q22, i32 0, i32 3, !dbg !7918
  store i8 %conv, i8* %cdb_len, align 2, !dbg !7919
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7920
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 1, !dbg !7920
  %15 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7920
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 16, !dbg !7920
  %16 = load i32, i32* %id, align 8, !dbg !7920
  %shl = shl i32 1, %16, !dbg !7920
  %conv3 = trunc i32 %shl to i8, !dbg !7920
  %17 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7921
  %q1 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %17, i32 0, i32 0, !dbg !7922
  %target_id = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1, i32 0, i32 4, !dbg !7923
  store i8 %conv3, i8* %target_id, align 4, !dbg !7924
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7925
  %device4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 1, !dbg !7926
  %19 = load %struct.scsi_device*, %struct.scsi_device** %device4, align 8, !dbg !7926
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %19, i32 0, i32 18, !dbg !7927
  %20 = load i64, i64* %lun, align 8, !dbg !7927
  %conv5 = trunc i64 %20 to i8, !dbg !7925
  %21 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7928
  %q16 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %21, i32 0, i32 0, !dbg !7929
  %target_lun = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q16, i32 0, i32 5, !dbg !7930
  store i8 %conv5, i8* %target_lun, align 1, !dbg !7931
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7932
  %device7 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 1, !dbg !7932
  %23 = load %struct.scsi_device*, %struct.scsi_device** %device7, align 8, !dbg !7932
  %id8 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %23, i32 0, i32 16, !dbg !7932
  %24 = load i32, i32* %id8, align 8, !dbg !7932
  %conv9 = zext i32 %24 to i64, !dbg !7932
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7932
  %device10 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 1, !dbg !7932
  %26 = load %struct.scsi_device*, %struct.scsi_device** %device10, align 8, !dbg !7932
  %lun11 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 18, !dbg !7932
  %27 = load i64, i64* %lun11, align 8, !dbg !7932
  %shl12 = shl i64 %27, 3, !dbg !7932
  %add13 = add i64 %conv9, %shl12, !dbg !7932
  %conv14 = trunc i64 %add13 to i8, !dbg !7932
  %28 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7933
  %q215 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %28, i32 0, i32 1, !dbg !7934
  %target_ix = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q215, i32 0, i32 1, !dbg !7935
  store i8 %conv14, i8* %target_ix, align 4, !dbg !7936
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7937
  %call = call i32 @asc_get_sense_buffer_dma(%struct.scsi_cmnd* %29) #11, !dbg !7938
  %30 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7939
  %q116 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %30, i32 0, i32 0, !dbg !7940
  %sense_addr = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q116, i32 0, i32 8, !dbg !7941
  store i32 %call, i32* %sense_addr, align 8, !dbg !7942
  %31 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7943
  %q117 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %31, i32 0, i32 0, !dbg !7944
  %sense_len = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q117, i32 0, i32 9, !dbg !7945
  store i8 96, i8* %sense_len, align 4, !dbg !7946
  %32 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7947
  %q118 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %32, i32 0, i32 0, !dbg !7949
  %sense_addr19 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q118, i32 0, i32 8, !dbg !7950
  %33 = load i32, i32* %sense_addr19, align 8, !dbg !7950
  %tobool = icmp ne i32 %33, 0, !dbg !7947
  br i1 %tobool, label %if.end, label %if.then, !dbg !7951

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7952
  br label %return, !dbg !7952

if.end:                                           ; preds = %entry
  %34 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !7953
  %cur_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %34, i32 0, i32 21, !dbg !7955
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7956
  %device20 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %35, i32 0, i32 1, !dbg !7957
  %36 = load %struct.scsi_device*, %struct.scsi_device** %device20, align 8, !dbg !7957
  %id21 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %36, i32 0, i32 16, !dbg !7958
  %37 = load i32, i32* %id21, align 8, !dbg !7958
  %idxprom = zext i32 %37 to i64, !dbg !7953
  %arrayidx22 = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng, i64 0, i64 %idxprom, !dbg !7953
  %38 = load i8, i8* %arrayidx22, align 1, !dbg !7953
  %conv23 = zext i8 %38 to i32, !dbg !7953
  %cmp = icmp sgt i32 %conv23, 0, !dbg !7959
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7960

land.lhs.true:                                    ; preds = %if.end
  %39 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !7961
  %reqcnt = getelementptr inbounds %struct.asc_board, %struct.asc_board* %39, i32 0, i32 8, !dbg !7962
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7963
  %device25 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 1, !dbg !7964
  %41 = load %struct.scsi_device*, %struct.scsi_device** %device25, align 8, !dbg !7964
  %id26 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %41, i32 0, i32 16, !dbg !7965
  %42 = load i32, i32* %id26, align 8, !dbg !7965
  %idxprom27 = zext i32 %42 to i64, !dbg !7961
  %arrayidx28 = getelementptr [16 x i16], [16 x i16]* %reqcnt, i64 0, i64 %idxprom27, !dbg !7961
  %43 = load i16, i16* %arrayidx28, align 2, !dbg !7961
  %conv29 = zext i16 %43 to i32, !dbg !7961
  %rem = srem i32 %conv29, 255, !dbg !7966
  %cmp30 = icmp eq i32 %rem, 0, !dbg !7967
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !7968

if.then32:                                        ; preds = %land.lhs.true
  %44 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7969
  %q233 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %44, i32 0, i32 1, !dbg !7971
  %tag_code = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q233, i32 0, i32 4, !dbg !7972
  store i8 34, i8* %tag_code, align 1, !dbg !7973
  br label %if.end36, !dbg !7974

if.else:                                          ; preds = %land.lhs.true, %if.end
  %45 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !7975
  %q234 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %45, i32 0, i32 1, !dbg !7977
  %tag_code35 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q234, i32 0, i32 4, !dbg !7978
  store i8 32, i8* %tag_code35, align 1, !dbg !7979
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then32
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !7980
  %call37 = call i32 @scsi_dma_map(%struct.scsi_cmnd* %46) #11, !dbg !7981
  store i32 %call37, i32* %use_sg, align 4, !dbg !7982
  %47 = load i32, i32* %use_sg, align 4, !dbg !7983
  %cmp38 = icmp slt i32 %47, 0, !dbg !7985
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !7986

if.then40:                                        ; preds = %if.end36
  store i32 0, i32* %retval, align 4, !dbg !7987
  br label %return, !dbg !7987

if.else41:                                        ; preds = %if.end36
  %48 = load i32, i32* %use_sg, align 4, !dbg !7989
  %cmp42 = icmp sgt i32 %48, 0, !dbg !7991
  br i1 %cmp42, label %if.then44, label %if.end93, !dbg !7992

if.then44:                                        ; preds = %if.else41
  call void @llvm.dbg.declare(metadata i32* %sgcnt, metadata !7993, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %slp, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.declare(metadata %struct.asc_sg_head** %asc_sg_head, metadata !7998, metadata !DIExpression()), !dbg !8000
  %49 = load i32, i32* %use_sg, align 4, !dbg !8001
  %50 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8003
  %device45 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %50, i32 0, i32 1, !dbg !8004
  %51 = load %struct.scsi_device*, %struct.scsi_device** %device45, align 8, !dbg !8004
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %51, i32 0, i32 0, !dbg !8005
  %52 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8005
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %52, i32 0, i32 27, !dbg !8006
  %53 = load i16, i16* %sg_tablesize, align 2, !dbg !8006
  %conv46 = zext i16 %53 to i32, !dbg !8003
  %cmp47 = icmp sgt i32 %49, %conv46, !dbg !8007
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !8008

if.then49:                                        ; preds = %if.then44
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8009
  %55 = load i32, i32* %use_sg, align 4, !dbg !8011
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8012
  %device50 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %56, i32 0, i32 1, !dbg !8013
  %57 = load %struct.scsi_device*, %struct.scsi_device** %device50, align 8, !dbg !8013
  %host51 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %57, i32 0, i32 0, !dbg !8014
  %58 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host51, align 8, !dbg !8014
  %sg_tablesize52 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %58, i32 0, i32 27, !dbg !8015
  %59 = load i16, i16* %sg_tablesize52, align 2, !dbg !8015
  %conv53 = zext i16 %59 to i32, !dbg !8012
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.scsi_cmnd* %54, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 %55, i32 %conv53) #11, !dbg !8016
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8017
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %60) #11, !dbg !8018
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8019
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %61, i32 0, i32 24, !dbg !8020
  store i32 458752, i32* %result, align 8, !dbg !8021
  store i32 -1, i32* %retval, align 4, !dbg !8022
  br label %return, !dbg !8022

if.end54:                                         ; preds = %if.then44
  %62 = load i32, i32* %use_sg, align 4, !dbg !8023
  %conv55 = sext i32 %62 to i64, !dbg !8023
  %mul = mul i64 %conv55, 8, !dbg !8024
  %add56 = add i64 8, %mul, !dbg !8025
  %call57 = call i8* @kzalloc(i64 %add56, i32 2592) #11, !dbg !8026
  %63 = bitcast i8* %call57 to %struct.asc_sg_head*, !dbg !8026
  store %struct.asc_sg_head* %63, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8027
  %64 = load %struct.asc_sg_head*, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8028
  %tobool58 = icmp ne %struct.asc_sg_head* %64, null, !dbg !8028
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !8030

if.then59:                                        ; preds = %if.end54
  %65 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8031
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %65) #11, !dbg !8033
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8034
  %result60 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %66, i32 0, i32 24, !dbg !8035
  store i32 720896, i32* %result60, align 8, !dbg !8036
  store i32 -1, i32* %retval, align 4, !dbg !8037
  br label %return, !dbg !8037

if.end61:                                         ; preds = %if.end54
  %67 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !8038
  %q162 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %67, i32 0, i32 0, !dbg !8039
  %cntl = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q162, i32 0, i32 2, !dbg !8040
  %68 = load i8, i8* %cntl, align 2, !dbg !8041
  %conv63 = zext i8 %68 to i32, !dbg !8041
  %or = or i32 %conv63, 4, !dbg !8041
  %conv64 = trunc i32 %or to i8, !dbg !8041
  store i8 %conv64, i8* %cntl, align 2, !dbg !8041
  %69 = load %struct.asc_sg_head*, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8042
  %70 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !8043
  %sg_head = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %70, i32 0, i32 3, !dbg !8044
  store %struct.asc_sg_head* %69, %struct.asc_sg_head** %sg_head, align 8, !dbg !8045
  %71 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !8046
  %q165 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %71, i32 0, i32 0, !dbg !8047
  %data_cnt = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q165, i32 0, i32 7, !dbg !8048
  store i32 0, i32* %data_cnt, align 4, !dbg !8049
  %72 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !8050
  %q166 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %72, i32 0, i32 0, !dbg !8051
  %data_addr = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q166, i32 0, i32 6, !dbg !8052
  store i32 0, i32* %data_addr, align 8, !dbg !8053
  %73 = load i32, i32* %use_sg, align 4, !dbg !8054
  %conv67 = trunc i32 %73 to i8, !dbg !8054
  %74 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %asc_scsi_q.addr, align 8, !dbg !8055
  %q168 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %74, i32 0, i32 0, !dbg !8056
  %sg_queue_cnt = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q168, i32 0, i32 3, !dbg !8057
  store i8 %conv67, i8* %sg_queue_cnt, align 1, !dbg !8058
  %conv69 = zext i8 %conv67 to i16, !dbg !8055
  %75 = load %struct.asc_sg_head*, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8059
  %entry_cnt = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %75, i32 0, i32 0, !dbg !8060
  store i16 %conv69, i16* %entry_cnt, align 4, !dbg !8061
  %76 = load %struct.asc_sg_head*, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8062
  %entry_cnt70 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %76, i32 0, i32 0, !dbg !8062
  %77 = load i16, i16* %entry_cnt70, align 4, !dbg !8062
  %conv71 = zext i16 %77 to i32, !dbg !8062
  %78 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8062
  %device72 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %78, i32 0, i32 1, !dbg !8062
  %79 = load %struct.scsi_device*, %struct.scsi_device** %device72, align 8, !dbg !8062
  %host73 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %79, i32 0, i32 0, !dbg !8062
  %80 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host73, align 8, !dbg !8062
  %call74 = call i8* @shost_priv(%struct.Scsi_Host* %80) #11, !dbg !8062
  %81 = bitcast i8* %call74 to %struct.asc_board*, !dbg !8062
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %81, i32 0, i32 12, !dbg !8062
  %xfer_elem = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 14, !dbg !8062
  %82 = load i32, i32* %xfer_elem, align 8, !dbg !8062
  %add75 = add i32 %82, %conv71, !dbg !8062
  store i32 %add75, i32* %xfer_elem, align 8, !dbg !8062
  store i32 0, i32* %sgcnt, align 4, !dbg !8063
  %83 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8063
  %call76 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %83) #11, !dbg !8063
  store %struct.scatterlist* %call76, %struct.scatterlist** %slp, align 8, !dbg !8063
  br label %for.cond, !dbg !8063

for.cond:                                         ; preds = %for.inc, %if.end61
  %84 = load i32, i32* %sgcnt, align 4, !dbg !8065
  %85 = load i32, i32* %use_sg, align 4, !dbg !8065
  %cmp77 = icmp slt i32 %84, %85, !dbg !8065
  br i1 %cmp77, label %for.body, label %for.end, !dbg !8063

for.body:                                         ; preds = %for.cond
  %86 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !8067
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %86, i32 0, i32 3, !dbg !8067
  %87 = load i64, i64* %dma_address, align 8, !dbg !8067
  %conv79 = trunc i64 %87 to i32, !dbg !8067
  %88 = load %struct.asc_sg_head*, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8069
  %sg_list = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %88, i32 0, i32 4, !dbg !8070
  %89 = load i32, i32* %sgcnt, align 4, !dbg !8071
  %idxprom80 = sext i32 %89 to i64, !dbg !8069
  %arrayidx81 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list, i64 0, i64 %idxprom80, !dbg !8069
  %addr = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx81, i32 0, i32 0, !dbg !8072
  store i32 %conv79, i32* %addr, align 4, !dbg !8073
  %90 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !8074
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %90, i32 0, i32 4, !dbg !8074
  %91 = load i32, i32* %dma_length, align 8, !dbg !8074
  %92 = load %struct.asc_sg_head*, %struct.asc_sg_head** %asc_sg_head, align 8, !dbg !8075
  %sg_list82 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %92, i32 0, i32 4, !dbg !8076
  %93 = load i32, i32* %sgcnt, align 4, !dbg !8077
  %idxprom83 = sext i32 %93 to i64, !dbg !8075
  %arrayidx84 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list82, i64 0, i64 %idxprom83, !dbg !8075
  %bytes = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx84, i32 0, i32 1, !dbg !8078
  store i32 %91, i32* %bytes, align 4, !dbg !8079
  %94 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !8080
  %dma_length85 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %94, i32 0, i32 4, !dbg !8080
  %95 = load i32, i32* %dma_length85, align 8, !dbg !8080
  %add86 = add i32 %95, 512, !dbg !8080
  %sub = sub i32 %add86, 1, !dbg !8080
  %div = udiv i32 %sub, 512, !dbg !8080
  %96 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8080
  %device87 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %96, i32 0, i32 1, !dbg !8080
  %97 = load %struct.scsi_device*, %struct.scsi_device** %device87, align 8, !dbg !8080
  %host88 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %97, i32 0, i32 0, !dbg !8080
  %98 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host88, align 8, !dbg !8080
  %call89 = call i8* @shost_priv(%struct.Scsi_Host* %98) #11, !dbg !8080
  %99 = bitcast i8* %call89 to %struct.asc_board*, !dbg !8080
  %asc_stats90 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %99, i32 0, i32 12, !dbg !8080
  %xfer_sect = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats90, i32 0, i32 15, !dbg !8080
  %100 = load i32, i32* %xfer_sect, align 4, !dbg !8080
  %add91 = add i32 %100, %div, !dbg !8080
  store i32 %add91, i32* %xfer_sect, align 4, !dbg !8080
  br label %for.inc, !dbg !8081

for.inc:                                          ; preds = %for.body
  %101 = load i32, i32* %sgcnt, align 4, !dbg !8065
  %inc = add i32 %101, 1, !dbg !8065
  store i32 %inc, i32* %sgcnt, align 4, !dbg !8065
  %102 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !8065
  %call92 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %102) #11, !dbg !8065
  store %struct.scatterlist* %call92, %struct.scatterlist** %slp, align 8, !dbg !8065
  br label %for.cond, !dbg !8065, !llvm.loop !8082

for.end:                                          ; preds = %for.cond
  br label %if.end93, !dbg !8084

if.end93:                                         ; preds = %for.end, %if.else41
  br label %if.end94

if.end94:                                         ; preds = %if.end93
  %103 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8085
  %device95 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %103, i32 0, i32 1, !dbg !8085
  %104 = load %struct.scsi_device*, %struct.scsi_device** %device95, align 8, !dbg !8085
  %host96 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %104, i32 0, i32 0, !dbg !8085
  %105 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host96, align 8, !dbg !8085
  %call97 = call i8* @shost_priv(%struct.Scsi_Host* %105) #11, !dbg !8085
  %106 = bitcast i8* %call97 to %struct.asc_board*, !dbg !8085
  %asc_stats98 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %106, i32 0, i32 12, !dbg !8085
  %xfer_cnt = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats98, i32 0, i32 13, !dbg !8085
  %107 = load i32, i32* %xfer_cnt, align 4, !dbg !8085
  %add99 = add i32 %107, 1, !dbg !8085
  store i32 %add99, i32* %xfer_cnt, align 4, !dbg !8085
  store i32 1, i32* %retval, align 4, !dbg !8086
  br label %return, !dbg !8086

return:                                           ; preds = %if.end94, %if.then59, %if.then49, %if.then40, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !8087
  ret i32 %108, !dbg !8087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscExeScsiQueue(%struct.asc_dvc_var* %asc_dvc, %struct.asc_scsi_q* %scsiq) #2 !dbg !8088 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %scsiq.addr = alloca %struct.asc_scsi_q*, align 8
  %iop_base = alloca i32, align 4
  %sta = alloca i32, align 4
  %n_q_required = alloca i32, align 4
  %disable_syn_offset_one_fix = alloca i8, align 1
  %i = alloca i32, align 4
  %addr = alloca i32, align 4
  %sg_entry_cnt = alloca i16, align 2
  %sg_entry_cnt_minus_one = alloca i16, align 2
  %target_ix = alloca i8, align 1
  %tid_no = alloca i8, align 1
  %sdtr_data = alloca i8, align 1
  %extra_bytes = alloca i8, align 1
  %scsi_cmd = alloca i8, align 1
  %disable_cmd = alloca i8, align 1
  %sg_head = alloca %struct.asc_sg_head*, align 8
  %data_cnt = alloca i64, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  store %struct.asc_scsi_q* %scsiq, %struct.asc_scsi_q** %scsiq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_scsi_q** %scsiq.addr, metadata !8093, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !8095, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata i32* %sta, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata i32* %n_q_required, metadata !8099, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata i8* %disable_syn_offset_one_fix, metadata !8101, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata i16* %sg_entry_cnt, metadata !8107, metadata !DIExpression()), !dbg !8108
  store i16 0, i16* %sg_entry_cnt, align 2, !dbg !8108
  call void @llvm.dbg.declare(metadata i16* %sg_entry_cnt_minus_one, metadata !8109, metadata !DIExpression()), !dbg !8110
  store i16 0, i16* %sg_entry_cnt_minus_one, align 2, !dbg !8110
  call void @llvm.dbg.declare(metadata i8* %target_ix, metadata !8111, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.declare(metadata i8* %tid_no, metadata !8113, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.declare(metadata i8* %sdtr_data, metadata !8115, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.declare(metadata i8* %extra_bytes, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.declare(metadata i8* %scsi_cmd, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata i8* %disable_cmd, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata %struct.asc_sg_head** %sg_head, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata i64* %data_cnt, metadata !8125, metadata !DIExpression()), !dbg !8126
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8127
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !8128
  %1 = load i32, i32* %iop_base1, align 8, !dbg !8128
  store i32 %1, i32* %iop_base, align 4, !dbg !8129
  %2 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8130
  %sg_head2 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %2, i32 0, i32 3, !dbg !8131
  %3 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head2, align 8, !dbg !8131
  store %struct.asc_sg_head* %3, %struct.asc_sg_head** %sg_head, align 8, !dbg !8132
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8133
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 1, !dbg !8135
  %5 = load i16, i16* %err_code, align 4, !dbg !8135
  %conv = zext i16 %5 to i32, !dbg !8133
  %cmp = icmp ne i32 %conv, 0, !dbg !8136
  br i1 %cmp, label %if.then, label %if.end, !dbg !8137

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8138
  br label %return, !dbg !8138

if.end:                                           ; preds = %entry
  %6 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8139
  %q1 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %6, i32 0, i32 0, !dbg !8140
  %q_no = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1, i32 0, i32 1, !dbg !8141
  store i8 0, i8* %q_no, align 1, !dbg !8142
  %7 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8143
  %q2 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %7, i32 0, i32 1, !dbg !8145
  %tag_code = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2, i32 0, i32 4, !dbg !8146
  %8 = load i8, i8* %tag_code, align 1, !dbg !8146
  %conv4 = zext i8 %8 to i32, !dbg !8143
  %and = and i32 %conv4, 16, !dbg !8147
  %cmp5 = icmp eq i32 %and, 0, !dbg !8148
  br i1 %cmp5, label %if.then7, label %if.end10, !dbg !8149

if.then7:                                         ; preds = %if.end
  %9 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8150
  %q18 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %9, i32 0, i32 0, !dbg !8152
  %extra_bytes9 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q18, i32 0, i32 10, !dbg !8153
  store i8 0, i8* %extra_bytes9, align 1, !dbg !8154
  br label %if.end10, !dbg !8155

if.end10:                                         ; preds = %if.then7, %if.end
  store i32 0, i32* %sta, align 4, !dbg !8156
  %10 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8157
  %q211 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %10, i32 0, i32 1, !dbg !8158
  %target_ix12 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q211, i32 0, i32 1, !dbg !8159
  %11 = load i8, i8* %target_ix12, align 4, !dbg !8159
  store i8 %11, i8* %target_ix, align 1, !dbg !8160
  %12 = load i8, i8* %target_ix, align 1, !dbg !8161
  %conv13 = zext i8 %12 to i32, !dbg !8161
  %and14 = and i32 %conv13, 7, !dbg !8161
  %conv15 = trunc i32 %and14 to i8, !dbg !8161
  store i8 %conv15, i8* %tid_no, align 1, !dbg !8162
  store i32 1, i32* %n_q_required, align 4, !dbg !8163
  %13 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8164
  %cdbptr = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %13, i32 0, i32 2, !dbg !8166
  %14 = load i8*, i8** %cdbptr, align 8, !dbg !8166
  %arrayidx = getelementptr i8, i8* %14, i64 0, !dbg !8164
  %15 = load i8, i8* %arrayidx, align 1, !dbg !8164
  %conv16 = zext i8 %15 to i32, !dbg !8164
  %cmp17 = icmp eq i32 %conv16, 3, !dbg !8167
  br i1 %cmp17, label %if.then19, label %if.end50, !dbg !8168

if.then19:                                        ; preds = %if.end10
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8169
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %16, i32 0, i32 5, !dbg !8172
  %17 = load i8, i8* %init_sdtr, align 4, !dbg !8172
  %conv20 = zext i8 %17 to i32, !dbg !8169
  %18 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8173
  %q121 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %18, i32 0, i32 0, !dbg !8174
  %target_id = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q121, i32 0, i32 4, !dbg !8175
  %19 = load i8, i8* %target_id, align 4, !dbg !8175
  %conv22 = zext i8 %19 to i32, !dbg !8173
  %and23 = and i32 %conv20, %conv22, !dbg !8176
  %cmp24 = icmp ne i32 %and23, 0, !dbg !8177
  br i1 %cmp24, label %if.then26, label %if.end49, !dbg !8178

if.then26:                                        ; preds = %if.then19
  %20 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8179
  %q127 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %20, i32 0, i32 0, !dbg !8181
  %target_id28 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q127, i32 0, i32 4, !dbg !8182
  %21 = load i8, i8* %target_id28, align 4, !dbg !8182
  %conv29 = zext i8 %21 to i32, !dbg !8179
  %neg = xor i32 %conv29, -1, !dbg !8183
  %22 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8184
  %sdtr_done = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %22, i32 0, i32 6, !dbg !8185
  %23 = load i8, i8* %sdtr_done, align 1, !dbg !8186
  %conv30 = zext i8 %23 to i32, !dbg !8186
  %and31 = and i32 %conv30, %neg, !dbg !8186
  %conv32 = trunc i32 %and31 to i8, !dbg !8186
  store i8 %conv32, i8* %sdtr_done, align 1, !dbg !8186
  %24 = load i32, i32* %iop_base, align 4, !dbg !8187
  %25 = load i8, i8* %tid_no, align 1, !dbg !8187
  %conv33 = zext i8 %25 to i16, !dbg !8187
  %conv34 = zext i16 %conv33 to i32, !dbg !8187
  %add = add i32 16, %conv34, !dbg !8187
  %conv35 = trunc i32 %add to i16, !dbg !8187
  %call = call zeroext i8 @AscReadLramByte(i32 %24, i16 zeroext %conv35) #11, !dbg !8187
  store i8 %call, i8* %sdtr_data, align 1, !dbg !8188
  %26 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8189
  %27 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8190
  %sdtr_period_tbl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %27, i32 0, i32 25, !dbg !8191
  %28 = load i8*, i8** %sdtr_period_tbl, align 8, !dbg !8191
  %29 = load i8, i8* %sdtr_data, align 1, !dbg !8192
  %conv36 = zext i8 %29 to i32, !dbg !8192
  %shr = ashr i32 %conv36, 4, !dbg !8193
  %30 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8194
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %30, i32 0, i32 35, !dbg !8195
  %31 = load i8, i8* %max_sdtr_index, align 1, !dbg !8195
  %conv37 = zext i8 %31 to i32, !dbg !8194
  %sub = sub i32 %conv37, 1, !dbg !8196
  %conv38 = trunc i32 %sub to i8, !dbg !8197
  %conv39 = zext i8 %conv38 to i32, !dbg !8197
  %and40 = and i32 %shr, %conv39, !dbg !8198
  %idxprom = sext i32 %and40 to i64, !dbg !8190
  %arrayidx41 = getelementptr i8, i8* %28, i64 %idxprom, !dbg !8190
  %32 = load i8, i8* %arrayidx41, align 1, !dbg !8190
  %33 = load i8, i8* %sdtr_data, align 1, !dbg !8199
  %conv42 = zext i8 %33 to i32, !dbg !8199
  %and43 = and i32 %conv42, 15, !dbg !8200
  %conv44 = trunc i32 %and43 to i8, !dbg !8201
  %call45 = call zeroext i8 @AscMsgOutSDTR(%struct.asc_dvc_var* %26, i8 zeroext %32, i8 zeroext %conv44) #11, !dbg !8202
  %34 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8203
  %q146 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %34, i32 0, i32 0, !dbg !8204
  %cntl = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q146, i32 0, i32 2, !dbg !8205
  %35 = load i8, i8* %cntl, align 2, !dbg !8206
  %conv47 = zext i8 %35 to i32, !dbg !8206
  %or = or i32 %conv47, 96, !dbg !8206
  %conv48 = trunc i32 %or to i8, !dbg !8206
  store i8 %conv48, i8* %cntl, align 2, !dbg !8206
  br label %if.end49, !dbg !8207

if.end49:                                         ; preds = %if.then26, %if.then19
  br label %if.end50, !dbg !8208

if.end50:                                         ; preds = %if.end49, %if.end10
  %36 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8209
  %in_critical_cnt = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %36, i32 0, i32 18, !dbg !8211
  %37 = load i8, i8* %in_critical_cnt, align 1, !dbg !8211
  %conv51 = zext i8 %37 to i32, !dbg !8209
  %cmp52 = icmp ne i32 %conv51, 0, !dbg !8212
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !8213

if.then54:                                        ; preds = %if.end50
  %38 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8214
  %call55 = call i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %38, i16 zeroext 27) #11, !dbg !8216
  store i32 -1, i32* %retval, align 4, !dbg !8217
  br label %return, !dbg !8217

if.end56:                                         ; preds = %if.end50
  %39 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8218
  %in_critical_cnt57 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %39, i32 0, i32 18, !dbg !8219
  %40 = load i8, i8* %in_critical_cnt57, align 1, !dbg !8220
  %inc = add i8 %40, 1, !dbg !8220
  store i8 %inc, i8* %in_critical_cnt57, align 1, !dbg !8220
  %41 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8221
  %q158 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %41, i32 0, i32 0, !dbg !8223
  %cntl59 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q158, i32 0, i32 2, !dbg !8224
  %42 = load i8, i8* %cntl59, align 2, !dbg !8224
  %conv60 = zext i8 %42 to i32, !dbg !8221
  %and61 = and i32 %conv60, 4, !dbg !8225
  %cmp62 = icmp ne i32 %and61, 0, !dbg !8226
  br i1 %cmp62, label %if.then64, label %if.end98, !dbg !8227

if.then64:                                        ; preds = %if.end56
  %43 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8228
  %entry_cnt = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %43, i32 0, i32 0, !dbg !8231
  %44 = load i16, i16* %entry_cnt, align 4, !dbg !8231
  store i16 %44, i16* %sg_entry_cnt, align 2, !dbg !8232
  %conv65 = zext i16 %44 to i32, !dbg !8233
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !8234
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !8235

if.then68:                                        ; preds = %if.then64
  %45 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8236
  %in_critical_cnt69 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %45, i32 0, i32 18, !dbg !8238
  %46 = load i8, i8* %in_critical_cnt69, align 1, !dbg !8239
  %dec = add i8 %46, -1, !dbg !8239
  store i8 %dec, i8* %in_critical_cnt69, align 1, !dbg !8239
  store i32 -1, i32* %retval, align 4, !dbg !8240
  br label %return, !dbg !8240

if.end70:                                         ; preds = %if.then64
  %47 = load i16, i16* %sg_entry_cnt, align 2, !dbg !8241
  %conv71 = zext i16 %47 to i32, !dbg !8241
  %cmp72 = icmp sgt i32 %conv71, 255, !dbg !8243
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !8244

if.then74:                                        ; preds = %if.end70
  %48 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8245
  %in_critical_cnt75 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %48, i32 0, i32 18, !dbg !8247
  %49 = load i8, i8* %in_critical_cnt75, align 1, !dbg !8248
  %dec76 = add i8 %49, -1, !dbg !8248
  store i8 %dec76, i8* %in_critical_cnt75, align 1, !dbg !8248
  store i32 -1, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

if.end77:                                         ; preds = %if.end70
  %50 = load i16, i16* %sg_entry_cnt, align 2, !dbg !8250
  %conv78 = zext i16 %50 to i32, !dbg !8250
  %cmp79 = icmp eq i32 %conv78, 1, !dbg !8252
  br i1 %cmp79, label %if.then81, label %if.end94, !dbg !8253

if.then81:                                        ; preds = %if.end77
  %51 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8254
  %sg_list = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %51, i32 0, i32 4, !dbg !8254
  %arrayidx82 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list, i64 0, i64 0, !dbg !8254
  %addr83 = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx82, i32 0, i32 0, !dbg !8254
  %52 = load i32, i32* %addr83, align 4, !dbg !8254
  %53 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8256
  %q184 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %53, i32 0, i32 0, !dbg !8257
  %data_addr = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q184, i32 0, i32 6, !dbg !8258
  store i32 %52, i32* %data_addr, align 8, !dbg !8259
  %54 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8260
  %sg_list85 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %54, i32 0, i32 4, !dbg !8260
  %arrayidx86 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list85, i64 0, i64 0, !dbg !8260
  %bytes = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx86, i32 0, i32 1, !dbg !8260
  %55 = load i32, i32* %bytes, align 4, !dbg !8260
  %56 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8261
  %q187 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %56, i32 0, i32 0, !dbg !8262
  %data_cnt88 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q187, i32 0, i32 7, !dbg !8263
  store i32 %55, i32* %data_cnt88, align 4, !dbg !8264
  %57 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8265
  %q189 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %57, i32 0, i32 0, !dbg !8266
  %cntl90 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q189, i32 0, i32 2, !dbg !8267
  %58 = load i8, i8* %cntl90, align 2, !dbg !8268
  %conv91 = zext i8 %58 to i32, !dbg !8268
  %and92 = and i32 %conv91, -7, !dbg !8268
  %conv93 = trunc i32 %and92 to i8, !dbg !8268
  store i8 %conv93, i8* %cntl90, align 2, !dbg !8268
  br label %if.end94, !dbg !8269

if.end94:                                         ; preds = %if.then81, %if.end77
  %59 = load i16, i16* %sg_entry_cnt, align 2, !dbg !8270
  %conv95 = zext i16 %59 to i32, !dbg !8270
  %sub96 = sub i32 %conv95, 1, !dbg !8271
  %conv97 = trunc i32 %sub96 to i16, !dbg !8270
  store i16 %conv97, i16* %sg_entry_cnt_minus_one, align 2, !dbg !8272
  br label %if.end98, !dbg !8273

if.end98:                                         ; preds = %if.end94, %if.end56
  %60 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8274
  %cdbptr99 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %60, i32 0, i32 2, !dbg !8275
  %61 = load i8*, i8** %cdbptr99, align 8, !dbg !8275
  %arrayidx100 = getelementptr i8, i8* %61, i64 0, !dbg !8274
  %62 = load i8, i8* %arrayidx100, align 1, !dbg !8274
  store i8 %62, i8* %scsi_cmd, align 1, !dbg !8276
  store i8 0, i8* %disable_syn_offset_one_fix, align 1, !dbg !8277
  %63 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8278
  %pci_fix_asyn_xfer = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %63, i32 0, i32 33, !dbg !8280
  %64 = load i8, i8* %pci_fix_asyn_xfer, align 1, !dbg !8280
  %conv101 = zext i8 %64 to i32, !dbg !8278
  %65 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8281
  %q1102 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %65, i32 0, i32 0, !dbg !8282
  %target_id103 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1102, i32 0, i32 4, !dbg !8283
  %66 = load i8, i8* %target_id103, align 4, !dbg !8283
  %conv104 = zext i8 %66 to i32, !dbg !8281
  %and105 = and i32 %conv101, %conv104, !dbg !8284
  %tobool = icmp ne i32 %and105, 0, !dbg !8284
  br i1 %tobool, label %land.lhs.true, label %if.end162, !dbg !8285

land.lhs.true:                                    ; preds = %if.end98
  %67 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8286
  %pci_fix_asyn_xfer_always = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %67, i32 0, i32 27, !dbg !8287
  %68 = load i8, i8* %pci_fix_asyn_xfer_always, align 8, !dbg !8287
  %conv106 = zext i8 %68 to i32, !dbg !8286
  %69 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8288
  %q1107 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %69, i32 0, i32 0, !dbg !8289
  %target_id108 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1107, i32 0, i32 4, !dbg !8290
  %70 = load i8, i8* %target_id108, align 4, !dbg !8290
  %conv109 = zext i8 %70 to i32, !dbg !8288
  %and110 = and i32 %conv106, %conv109, !dbg !8291
  %tobool111 = icmp ne i32 %and110, 0, !dbg !8291
  br i1 %tobool111, label %if.end162, label %if.then112, !dbg !8292

if.then112:                                       ; preds = %land.lhs.true
  %71 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8293
  %q1113 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %71, i32 0, i32 0, !dbg !8296
  %cntl114 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1113, i32 0, i32 2, !dbg !8297
  %72 = load i8, i8* %cntl114, align 2, !dbg !8297
  %conv115 = zext i8 %72 to i32, !dbg !8293
  %and116 = and i32 %conv115, 4, !dbg !8298
  %tobool117 = icmp ne i32 %and116, 0, !dbg !8298
  br i1 %tobool117, label %if.then118, label %if.else, !dbg !8299

if.then118:                                       ; preds = %if.then112
  store i64 0, i64* %data_cnt, align 8, !dbg !8300
  store i32 0, i32* %i, align 4, !dbg !8302
  br label %for.cond, !dbg !8304

for.cond:                                         ; preds = %for.inc, %if.then118
  %73 = load i32, i32* %i, align 4, !dbg !8305
  %74 = load i16, i16* %sg_entry_cnt, align 2, !dbg !8307
  %conv119 = zext i16 %74 to i32, !dbg !8307
  %cmp120 = icmp slt i32 %73, %conv119, !dbg !8308
  br i1 %cmp120, label %for.body, label %for.end, !dbg !8309

for.body:                                         ; preds = %for.cond
  %75 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8310
  %sg_list122 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %75, i32 0, i32 4, !dbg !8310
  %76 = load i32, i32* %i, align 4, !dbg !8310
  %idxprom123 = sext i32 %76 to i64, !dbg !8310
  %arrayidx124 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list122, i64 0, i64 %idxprom123, !dbg !8310
  %bytes125 = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx124, i32 0, i32 1, !dbg !8310
  %77 = load i32, i32* %bytes125, align 4, !dbg !8310
  %conv126 = zext i32 %77 to i64, !dbg !8310
  %78 = load i64, i64* %data_cnt, align 8, !dbg !8312
  %add127 = add i64 %78, %conv126, !dbg !8312
  store i64 %add127, i64* %data_cnt, align 8, !dbg !8312
  br label %for.inc, !dbg !8313

for.inc:                                          ; preds = %for.body
  %79 = load i32, i32* %i, align 4, !dbg !8314
  %inc128 = add i32 %79, 1, !dbg !8314
  store i32 %inc128, i32* %i, align 4, !dbg !8314
  br label %for.cond, !dbg !8315, !llvm.loop !8316

for.end:                                          ; preds = %for.cond
  br label %if.end132, !dbg !8318

if.else:                                          ; preds = %if.then112
  %80 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8319
  %q1129 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %80, i32 0, i32 0, !dbg !8319
  %data_cnt130 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1129, i32 0, i32 7, !dbg !8319
  %81 = load i32, i32* %data_cnt130, align 4, !dbg !8319
  %conv131 = zext i32 %81 to i64, !dbg !8319
  store i64 %conv131, i64* %data_cnt, align 8, !dbg !8321
  br label %if.end132

if.end132:                                        ; preds = %if.else, %for.end
  %82 = load i64, i64* %data_cnt, align 8, !dbg !8322
  %cmp133 = icmp ne i64 %82, 0, !dbg !8324
  br i1 %cmp133, label %if.then135, label %if.end161, !dbg !8325

if.then135:                                       ; preds = %if.end132
  %83 = load i64, i64* %data_cnt, align 8, !dbg !8326
  %cmp136 = icmp ult i64 %83, 512, !dbg !8329
  br i1 %cmp136, label %if.then138, label %if.else139, !dbg !8330

if.then138:                                       ; preds = %if.then135
  store i8 1, i8* %disable_syn_offset_one_fix, align 1, !dbg !8331
  br label %if.end160, !dbg !8333

if.else139:                                       ; preds = %if.then135
  store i32 0, i32* %i, align 4, !dbg !8334
  br label %for.cond140, !dbg !8337

for.cond140:                                      ; preds = %for.inc157, %if.else139
  %84 = load i32, i32* %i, align 4, !dbg !8338
  %cmp141 = icmp slt i32 %84, 16, !dbg !8340
  br i1 %cmp141, label %for.body143, label %for.end159, !dbg !8341

for.body143:                                      ; preds = %for.cond140
  %85 = load i32, i32* %i, align 4, !dbg !8342
  %idxprom144 = sext i32 %85 to i64, !dbg !8344
  %arrayidx145 = getelementptr [16 x i8], [16 x i8]* @_syn_offset_one_disable_cmd, i64 0, i64 %idxprom144, !dbg !8344
  %86 = load i8, i8* %arrayidx145, align 1, !dbg !8344
  store i8 %86, i8* %disable_cmd, align 1, !dbg !8345
  %87 = load i8, i8* %disable_cmd, align 1, !dbg !8346
  %conv146 = zext i8 %87 to i32, !dbg !8346
  %cmp147 = icmp eq i32 %conv146, 255, !dbg !8348
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !8349

if.then149:                                       ; preds = %for.body143
  br label %for.end159, !dbg !8350

if.end150:                                        ; preds = %for.body143
  %88 = load i8, i8* %scsi_cmd, align 1, !dbg !8352
  %conv151 = zext i8 %88 to i32, !dbg !8352
  %89 = load i8, i8* %disable_cmd, align 1, !dbg !8354
  %conv152 = zext i8 %89 to i32, !dbg !8354
  %cmp153 = icmp eq i32 %conv151, %conv152, !dbg !8355
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !8356

if.then155:                                       ; preds = %if.end150
  store i8 1, i8* %disable_syn_offset_one_fix, align 1, !dbg !8357
  br label %for.end159, !dbg !8359

if.end156:                                        ; preds = %if.end150
  br label %for.inc157, !dbg !8360

for.inc157:                                       ; preds = %if.end156
  %90 = load i32, i32* %i, align 4, !dbg !8361
  %inc158 = add i32 %90, 1, !dbg !8361
  store i32 %inc158, i32* %i, align 4, !dbg !8361
  br label %for.cond140, !dbg !8362, !llvm.loop !8363

for.end159:                                       ; preds = %if.then155, %if.then149, %for.cond140
  br label %if.end160

if.end160:                                        ; preds = %for.end159, %if.then138
  br label %if.end161, !dbg !8365

if.end161:                                        ; preds = %if.end160, %if.end132
  br label %if.end162, !dbg !8366

if.end162:                                        ; preds = %if.end161, %land.lhs.true, %if.end98
  %91 = load i8, i8* %disable_syn_offset_one_fix, align 1, !dbg !8367
  %tobool163 = trunc i8 %91 to i1, !dbg !8367
  br i1 %tobool163, label %if.then164, label %if.else175, !dbg !8369

if.then164:                                       ; preds = %if.end162
  %92 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8370
  %q2165 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %92, i32 0, i32 1, !dbg !8372
  %tag_code166 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2165, i32 0, i32 4, !dbg !8373
  %93 = load i8, i8* %tag_code166, align 1, !dbg !8374
  %conv167 = zext i8 %93 to i32, !dbg !8374
  %and168 = and i32 %conv167, -33, !dbg !8374
  %conv169 = trunc i32 %and168 to i8, !dbg !8374
  store i8 %conv169, i8* %tag_code166, align 1, !dbg !8374
  %94 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8375
  %q2170 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %94, i32 0, i32 1, !dbg !8376
  %tag_code171 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2170, i32 0, i32 4, !dbg !8377
  %95 = load i8, i8* %tag_code171, align 1, !dbg !8378
  %conv172 = zext i8 %95 to i32, !dbg !8378
  %or173 = or i32 %conv172, 12, !dbg !8378
  %conv174 = trunc i32 %or173 to i8, !dbg !8378
  store i8 %conv174, i8* %tag_code171, align 1, !dbg !8378
  br label %if.end181, !dbg !8379

if.else175:                                       ; preds = %if.end162
  %96 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8380
  %q2176 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %96, i32 0, i32 1, !dbg !8382
  %tag_code177 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2176, i32 0, i32 4, !dbg !8383
  %97 = load i8, i8* %tag_code177, align 1, !dbg !8384
  %conv178 = zext i8 %97 to i32, !dbg !8384
  %and179 = and i32 %conv178, 39, !dbg !8384
  %conv180 = trunc i32 %and179 to i8, !dbg !8384
  store i8 %conv180, i8* %tag_code177, align 1, !dbg !8384
  br label %if.end181

if.end181:                                        ; preds = %if.else175, %if.then164
  %98 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8385
  %q1182 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %98, i32 0, i32 0, !dbg !8387
  %cntl183 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1182, i32 0, i32 2, !dbg !8388
  %99 = load i8, i8* %cntl183, align 2, !dbg !8388
  %conv184 = zext i8 %99 to i32, !dbg !8385
  %and185 = and i32 %conv184, 4, !dbg !8389
  %cmp186 = icmp ne i32 %and185, 0, !dbg !8390
  br i1 %cmp186, label %if.then188, label %if.else274, !dbg !8391

if.then188:                                       ; preds = %if.end181
  %100 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8392
  %bug_fix_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %100, i32 0, i32 3, !dbg !8395
  %101 = load i16, i16* %bug_fix_cntl, align 8, !dbg !8395
  %tobool189 = icmp ne i16 %101, 0, !dbg !8392
  br i1 %tobool189, label %if.then190, label %if.end249, !dbg !8396

if.then190:                                       ; preds = %if.then188
  %102 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8397
  %bug_fix_cntl191 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %102, i32 0, i32 3, !dbg !8400
  %103 = load i16, i16* %bug_fix_cntl191, align 8, !dbg !8400
  %conv192 = zext i16 %103 to i32, !dbg !8397
  %and193 = and i32 %conv192, 1, !dbg !8401
  %tobool194 = icmp ne i32 %and193, 0, !dbg !8401
  br i1 %tobool194, label %if.then195, label %if.end248, !dbg !8402

if.then195:                                       ; preds = %if.then190
  %104 = load i8, i8* %scsi_cmd, align 1, !dbg !8403
  %conv196 = zext i8 %104 to i32, !dbg !8403
  %cmp197 = icmp eq i32 %conv196, 8, !dbg !8406
  br i1 %cmp197, label %if.then202, label %lor.lhs.false, !dbg !8407

lor.lhs.false:                                    ; preds = %if.then195
  %105 = load i8, i8* %scsi_cmd, align 1, !dbg !8408
  %conv199 = zext i8 %105 to i32, !dbg !8408
  %cmp200 = icmp eq i32 %conv199, 40, !dbg !8409
  br i1 %cmp200, label %if.then202, label %if.end247, !dbg !8410

if.then202:                                       ; preds = %lor.lhs.false, %if.then195
  %106 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8411
  %sg_list203 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %106, i32 0, i32 4, !dbg !8411
  %107 = load i16, i16* %sg_entry_cnt_minus_one, align 2, !dbg !8411
  %idxprom204 = zext i16 %107 to i64, !dbg !8411
  %arrayidx205 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list203, i64 0, i64 %idxprom204, !dbg !8411
  %addr206 = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx205, i32 0, i32 0, !dbg !8411
  %108 = load i32, i32* %addr206, align 4, !dbg !8411
  %109 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8413
  %sg_list207 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %109, i32 0, i32 4, !dbg !8413
  %110 = load i16, i16* %sg_entry_cnt_minus_one, align 2, !dbg !8413
  %idxprom208 = zext i16 %110 to i64, !dbg !8413
  %arrayidx209 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list207, i64 0, i64 %idxprom208, !dbg !8413
  %bytes210 = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx209, i32 0, i32 1, !dbg !8413
  %111 = load i32, i32* %bytes210, align 4, !dbg !8413
  %add211 = add i32 %108, %111, !dbg !8414
  store i32 %add211, i32* %addr, align 4, !dbg !8415
  %112 = load i32, i32* %addr, align 4, !dbg !8416
  %conv212 = trunc i32 %112 to i16, !dbg !8417
  %conv213 = zext i16 %conv212 to i32, !dbg !8417
  %and214 = and i32 %conv213, 3, !dbg !8418
  %conv215 = trunc i32 %and214 to i8, !dbg !8419
  store i8 %conv215, i8* %extra_bytes, align 1, !dbg !8420
  %113 = load i8, i8* %extra_bytes, align 1, !dbg !8421
  %conv216 = zext i8 %113 to i32, !dbg !8421
  %cmp217 = icmp ne i32 %conv216, 0, !dbg !8423
  br i1 %cmp217, label %land.lhs.true219, label %if.end246, !dbg !8424

land.lhs.true219:                                 ; preds = %if.then202
  %114 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8425
  %q2220 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %114, i32 0, i32 1, !dbg !8426
  %tag_code221 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2220, i32 0, i32 4, !dbg !8427
  %115 = load i8, i8* %tag_code221, align 1, !dbg !8427
  %conv222 = zext i8 %115 to i32, !dbg !8425
  %and223 = and i32 %conv222, 16, !dbg !8428
  %cmp224 = icmp eq i32 %and223, 0, !dbg !8429
  br i1 %cmp224, label %if.then226, label %if.end246, !dbg !8430

if.then226:                                       ; preds = %land.lhs.true219
  %116 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8431
  %q2227 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %116, i32 0, i32 1, !dbg !8433
  %tag_code228 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2227, i32 0, i32 4, !dbg !8434
  %117 = load i8, i8* %tag_code228, align 1, !dbg !8435
  %conv229 = zext i8 %117 to i32, !dbg !8435
  %or230 = or i32 %conv229, 16, !dbg !8435
  %conv231 = trunc i32 %or230 to i8, !dbg !8435
  store i8 %conv231, i8* %tag_code228, align 1, !dbg !8435
  %118 = load i8, i8* %extra_bytes, align 1, !dbg !8436
  %119 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8437
  %q1232 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %119, i32 0, i32 0, !dbg !8438
  %extra_bytes233 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1232, i32 0, i32 10, !dbg !8439
  store i8 %118, i8* %extra_bytes233, align 1, !dbg !8440
  %120 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8441
  %sg_list234 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %120, i32 0, i32 4, !dbg !8441
  %121 = load i16, i16* %sg_entry_cnt_minus_one, align 2, !dbg !8441
  %idxprom235 = zext i16 %121 to i64, !dbg !8441
  %arrayidx236 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list234, i64 0, i64 %idxprom235, !dbg !8441
  %bytes237 = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx236, i32 0, i32 1, !dbg !8441
  %122 = load i32, i32* %bytes237, align 4, !dbg !8441
  %conv238 = zext i32 %122 to i64, !dbg !8441
  store i64 %conv238, i64* %data_cnt, align 8, !dbg !8442
  %123 = load i8, i8* %extra_bytes, align 1, !dbg !8443
  %conv239 = zext i8 %123 to i64, !dbg !8443
  %124 = load i64, i64* %data_cnt, align 8, !dbg !8444
  %sub240 = sub i64 %124, %conv239, !dbg !8444
  store i64 %sub240, i64* %data_cnt, align 8, !dbg !8444
  %125 = load i64, i64* %data_cnt, align 8, !dbg !8445
  %conv241 = trunc i64 %125 to i32, !dbg !8445
  %126 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8446
  %sg_list242 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %126, i32 0, i32 4, !dbg !8447
  %127 = load i16, i16* %sg_entry_cnt_minus_one, align 2, !dbg !8448
  %idxprom243 = zext i16 %127 to i64, !dbg !8446
  %arrayidx244 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list242, i64 0, i64 %idxprom243, !dbg !8446
  %bytes245 = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx244, i32 0, i32 1, !dbg !8449
  store i32 %conv241, i32* %bytes245, align 4, !dbg !8450
  br label %if.end246, !dbg !8451

if.end246:                                        ; preds = %if.then226, %land.lhs.true219, %if.then202
  br label %if.end247, !dbg !8452

if.end247:                                        ; preds = %if.end246, %lor.lhs.false
  br label %if.end248, !dbg !8453

if.end248:                                        ; preds = %if.end247, %if.then190
  br label %if.end249, !dbg !8454

if.end249:                                        ; preds = %if.end248, %if.then188
  %128 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8455
  %entry_cnt250 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %128, i32 0, i32 0, !dbg !8456
  %129 = load i16, i16* %entry_cnt250, align 4, !dbg !8456
  %130 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !8457
  %entry_to_copy = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %130, i32 0, i32 2, !dbg !8458
  store i16 %129, i16* %entry_to_copy, align 4, !dbg !8459
  %131 = load i16, i16* %sg_entry_cnt, align 2, !dbg !8460
  %conv251 = zext i16 %131 to i32, !dbg !8460
  %call252 = call i32 @AscSgListToQueue(i32 %conv251) #11, !dbg !8461
  store i32 %call252, i32* %n_q_required, align 4, !dbg !8462
  %132 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8463
  %133 = load i8, i8* %target_ix, align 1, !dbg !8465
  %134 = load i32, i32* %n_q_required, align 4, !dbg !8466
  %conv253 = trunc i32 %134 to i8, !dbg !8466
  %call254 = call i32 @AscGetNumOfFreeQueue(%struct.asc_dvc_var* %132, i8 zeroext %133, i8 zeroext %conv253) #11, !dbg !8467
  %135 = load i32, i32* %n_q_required, align 4, !dbg !8468
  %cmp255 = icmp uge i32 %call254, %135, !dbg !8469
  br i1 %cmp255, label %if.then264, label %lor.lhs.false257, !dbg !8470

lor.lhs.false257:                                 ; preds = %if.end249
  %136 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8471
  %q1258 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %136, i32 0, i32 0, !dbg !8472
  %cntl259 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1258, i32 0, i32 2, !dbg !8473
  %137 = load i8, i8* %cntl259, align 2, !dbg !8473
  %conv260 = zext i8 %137 to i32, !dbg !8471
  %and261 = and i32 %conv260, 32, !dbg !8474
  %cmp262 = icmp ne i32 %and261, 0, !dbg !8475
  br i1 %cmp262, label %if.then264, label %if.end273, !dbg !8476

if.then264:                                       ; preds = %lor.lhs.false257, %if.end249
  %138 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8477
  %139 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8480
  %140 = load i32, i32* %n_q_required, align 4, !dbg !8481
  %conv265 = trunc i32 %140 to i8, !dbg !8481
  %call266 = call i32 @AscSendScsiQueue(%struct.asc_dvc_var* %138, %struct.asc_scsi_q* %139, i8 zeroext %conv265) #11, !dbg !8482
  store i32 %call266, i32* %sta, align 4, !dbg !8483
  %cmp267 = icmp eq i32 %call266, 1, !dbg !8484
  br i1 %cmp267, label %if.then269, label %if.end272, !dbg !8485

if.then269:                                       ; preds = %if.then264
  %141 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8486
  %in_critical_cnt270 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %141, i32 0, i32 18, !dbg !8488
  %142 = load i8, i8* %in_critical_cnt270, align 1, !dbg !8489
  %dec271 = add i8 %142, -1, !dbg !8489
  store i8 %dec271, i8* %in_critical_cnt270, align 1, !dbg !8489
  %143 = load i32, i32* %sta, align 4, !dbg !8490
  store i32 %143, i32* %retval, align 4, !dbg !8491
  br label %return, !dbg !8491

if.end272:                                        ; preds = %if.then264
  br label %if.end273, !dbg !8492

if.end273:                                        ; preds = %if.end272, %lor.lhs.false257
  br label %if.end357, !dbg !8493

if.else274:                                       ; preds = %if.end181
  %144 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8494
  %bug_fix_cntl275 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %144, i32 0, i32 3, !dbg !8497
  %145 = load i16, i16* %bug_fix_cntl275, align 8, !dbg !8497
  %tobool276 = icmp ne i16 %145, 0, !dbg !8494
  br i1 %tobool276, label %if.then277, label %if.end336, !dbg !8498

if.then277:                                       ; preds = %if.else274
  %146 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8499
  %bug_fix_cntl278 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %146, i32 0, i32 3, !dbg !8502
  %147 = load i16, i16* %bug_fix_cntl278, align 8, !dbg !8502
  %conv279 = zext i16 %147 to i32, !dbg !8499
  %and280 = and i32 %conv279, 1, !dbg !8503
  %tobool281 = icmp ne i32 %and280, 0, !dbg !8503
  br i1 %tobool281, label %if.then282, label %if.end335, !dbg !8504

if.then282:                                       ; preds = %if.then277
  %148 = load i8, i8* %scsi_cmd, align 1, !dbg !8505
  %conv283 = zext i8 %148 to i32, !dbg !8505
  %cmp284 = icmp eq i32 %conv283, 8, !dbg !8508
  br i1 %cmp284, label %if.then290, label %lor.lhs.false286, !dbg !8509

lor.lhs.false286:                                 ; preds = %if.then282
  %149 = load i8, i8* %scsi_cmd, align 1, !dbg !8510
  %conv287 = zext i8 %149 to i32, !dbg !8510
  %cmp288 = icmp eq i32 %conv287, 40, !dbg !8511
  br i1 %cmp288, label %if.then290, label %if.end334, !dbg !8512

if.then290:                                       ; preds = %lor.lhs.false286, %if.then282
  %150 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8513
  %q1291 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %150, i32 0, i32 0, !dbg !8513
  %data_addr292 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1291, i32 0, i32 6, !dbg !8513
  %151 = load i32, i32* %data_addr292, align 8, !dbg !8513
  %152 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8515
  %q1293 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %152, i32 0, i32 0, !dbg !8515
  %data_cnt294 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1293, i32 0, i32 7, !dbg !8515
  %153 = load i32, i32* %data_cnt294, align 4, !dbg !8515
  %add295 = add i32 %151, %153, !dbg !8516
  store i32 %add295, i32* %addr, align 4, !dbg !8517
  %154 = load i32, i32* %addr, align 4, !dbg !8518
  %conv296 = trunc i32 %154 to i16, !dbg !8519
  %conv297 = zext i16 %conv296 to i32, !dbg !8519
  %and298 = and i32 %conv297, 3, !dbg !8520
  %conv299 = trunc i32 %and298 to i8, !dbg !8521
  store i8 %conv299, i8* %extra_bytes, align 1, !dbg !8522
  %155 = load i8, i8* %extra_bytes, align 1, !dbg !8523
  %conv300 = zext i8 %155 to i32, !dbg !8523
  %cmp301 = icmp ne i32 %conv300, 0, !dbg !8525
  br i1 %cmp301, label %land.lhs.true303, label %if.end333, !dbg !8526

land.lhs.true303:                                 ; preds = %if.then290
  %156 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8527
  %q2304 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %156, i32 0, i32 1, !dbg !8528
  %tag_code305 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2304, i32 0, i32 4, !dbg !8529
  %157 = load i8, i8* %tag_code305, align 1, !dbg !8529
  %conv306 = zext i8 %157 to i32, !dbg !8527
  %and307 = and i32 %conv306, 16, !dbg !8530
  %cmp308 = icmp eq i32 %and307, 0, !dbg !8531
  br i1 %cmp308, label %if.then310, label %if.end333, !dbg !8532

if.then310:                                       ; preds = %land.lhs.true303
  %158 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8533
  %q1311 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %158, i32 0, i32 0, !dbg !8533
  %data_cnt312 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1311, i32 0, i32 7, !dbg !8533
  %159 = load i32, i32* %data_cnt312, align 4, !dbg !8533
  %conv313 = zext i32 %159 to i64, !dbg !8533
  store i64 %conv313, i64* %data_cnt, align 8, !dbg !8535
  %160 = load i64, i64* %data_cnt, align 8, !dbg !8536
  %conv314 = trunc i64 %160 to i16, !dbg !8538
  %conv315 = zext i16 %conv314 to i32, !dbg !8538
  %and316 = and i32 %conv315, 511, !dbg !8539
  %cmp317 = icmp eq i32 %and316, 0, !dbg !8540
  br i1 %cmp317, label %if.then319, label %if.end332, !dbg !8541

if.then319:                                       ; preds = %if.then310
  %161 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8542
  %q2320 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %161, i32 0, i32 1, !dbg !8544
  %tag_code321 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2320, i32 0, i32 4, !dbg !8545
  %162 = load i8, i8* %tag_code321, align 1, !dbg !8546
  %conv322 = zext i8 %162 to i32, !dbg !8546
  %or323 = or i32 %conv322, 16, !dbg !8546
  %conv324 = trunc i32 %or323 to i8, !dbg !8546
  store i8 %conv324, i8* %tag_code321, align 1, !dbg !8546
  %163 = load i8, i8* %extra_bytes, align 1, !dbg !8547
  %conv325 = zext i8 %163 to i64, !dbg !8547
  %164 = load i64, i64* %data_cnt, align 8, !dbg !8548
  %sub326 = sub i64 %164, %conv325, !dbg !8548
  store i64 %sub326, i64* %data_cnt, align 8, !dbg !8548
  %165 = load i64, i64* %data_cnt, align 8, !dbg !8549
  %conv327 = trunc i64 %165 to i32, !dbg !8549
  %166 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8550
  %q1328 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %166, i32 0, i32 0, !dbg !8551
  %data_cnt329 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1328, i32 0, i32 7, !dbg !8552
  store i32 %conv327, i32* %data_cnt329, align 4, !dbg !8553
  %167 = load i8, i8* %extra_bytes, align 1, !dbg !8554
  %168 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8555
  %q1330 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %168, i32 0, i32 0, !dbg !8556
  %extra_bytes331 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1330, i32 0, i32 10, !dbg !8557
  store i8 %167, i8* %extra_bytes331, align 1, !dbg !8558
  br label %if.end332, !dbg !8559

if.end332:                                        ; preds = %if.then319, %if.then310
  br label %if.end333, !dbg !8560

if.end333:                                        ; preds = %if.end332, %land.lhs.true303, %if.then290
  br label %if.end334, !dbg !8561

if.end334:                                        ; preds = %if.end333, %lor.lhs.false286
  br label %if.end335, !dbg !8562

if.end335:                                        ; preds = %if.end334, %if.then277
  br label %if.end336, !dbg !8563

if.end336:                                        ; preds = %if.end335, %if.else274
  store i32 1, i32* %n_q_required, align 4, !dbg !8564
  %169 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8565
  %170 = load i8, i8* %target_ix, align 1, !dbg !8567
  %call337 = call i32 @AscGetNumOfFreeQueue(%struct.asc_dvc_var* %169, i8 zeroext %170, i8 zeroext 1) #11, !dbg !8568
  %cmp338 = icmp uge i32 %call337, 1, !dbg !8569
  br i1 %cmp338, label %if.then347, label %lor.lhs.false340, !dbg !8570

lor.lhs.false340:                                 ; preds = %if.end336
  %171 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8571
  %q1341 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %171, i32 0, i32 0, !dbg !8572
  %cntl342 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1341, i32 0, i32 2, !dbg !8573
  %172 = load i8, i8* %cntl342, align 2, !dbg !8573
  %conv343 = zext i8 %172 to i32, !dbg !8571
  %and344 = and i32 %conv343, 32, !dbg !8574
  %cmp345 = icmp ne i32 %and344, 0, !dbg !8575
  br i1 %cmp345, label %if.then347, label %if.end356, !dbg !8576

if.then347:                                       ; preds = %lor.lhs.false340, %if.end336
  %173 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8577
  %174 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !8580
  %175 = load i32, i32* %n_q_required, align 4, !dbg !8581
  %conv348 = trunc i32 %175 to i8, !dbg !8581
  %call349 = call i32 @AscSendScsiQueue(%struct.asc_dvc_var* %173, %struct.asc_scsi_q* %174, i8 zeroext %conv348) #11, !dbg !8582
  store i32 %call349, i32* %sta, align 4, !dbg !8583
  %cmp350 = icmp eq i32 %call349, 1, !dbg !8584
  br i1 %cmp350, label %if.then352, label %if.end355, !dbg !8585

if.then352:                                       ; preds = %if.then347
  %176 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8586
  %in_critical_cnt353 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %176, i32 0, i32 18, !dbg !8588
  %177 = load i8, i8* %in_critical_cnt353, align 1, !dbg !8589
  %dec354 = add i8 %177, -1, !dbg !8589
  store i8 %dec354, i8* %in_critical_cnt353, align 1, !dbg !8589
  %178 = load i32, i32* %sta, align 4, !dbg !8590
  store i32 %178, i32* %retval, align 4, !dbg !8591
  br label %return, !dbg !8591

if.end355:                                        ; preds = %if.then347
  br label %if.end356, !dbg !8592

if.end356:                                        ; preds = %if.end355, %lor.lhs.false340
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %if.end273
  %179 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !8593
  %in_critical_cnt358 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %179, i32 0, i32 18, !dbg !8594
  %180 = load i8, i8* %in_critical_cnt358, align 1, !dbg !8595
  %dec359 = add i8 %180, -1, !dbg !8595
  store i8 %dec359, i8* %in_critical_cnt358, align 1, !dbg !8595
  %181 = load i32, i32* %sta, align 4, !dbg !8596
  store i32 %181, i32* %retval, align 4, !dbg !8597
  br label %return, !dbg !8597

return:                                           ; preds = %if.end357, %if.then352, %if.then269, %if.then74, %if.then68, %if.then54, %if.then
  %182 = load i32, i32* %retval, align 4, !dbg !8598
  ret i32 %182, !dbg !8598
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adv_build_req(%struct.asc_board* %boardp, %struct.scsi_cmnd* %scp, %struct.adv_req** %adv_reqpp) #2 !dbg !8599 {
entry:
  %retval = alloca i32, align 4
  %boardp.addr = alloca %struct.asc_board*, align 8
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %adv_reqpp.addr = alloca %struct.adv_req**, align 8
  %srb_tag = alloca i32, align 4
  %reqp = alloca %struct.adv_req*, align 8
  %scsiqp = alloca %struct.adv_scsi_req_q*, align 8
  %ret = alloca i32, align 4
  %use_sg = alloca i32, align 4
  %sense_addr = alloca i64, align 8
  %cdb16_len = alloca i32, align 4
  store %struct.asc_board* %boardp, %struct.asc_board** %boardp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  store %struct.adv_req** %adv_reqpp, %struct.adv_req*** %adv_reqpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_req*** %adv_reqpp.addr, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.declare(metadata i32* %srb_tag, metadata !8609, metadata !DIExpression()), !dbg !8610
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8611
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !8612
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !8612
  %tag = getelementptr inbounds %struct.request, %struct.request* %1, i32 0, i32 5, !dbg !8613
  %2 = load i32, i32* %tag, align 8, !dbg !8613
  store i32 %2, i32* %srb_tag, align 4, !dbg !8610
  call void @llvm.dbg.declare(metadata %struct.adv_req** %reqp, metadata !8614, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.declare(metadata %struct.adv_scsi_req_q** %scsiqp, metadata !8616, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8619, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.declare(metadata i32* %use_sg, metadata !8621, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.declare(metadata i64* %sense_addr, metadata !8623, metadata !DIExpression()), !dbg !8624
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !8625
  %adv_reqp = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 16, !dbg !8626
  %4 = load %struct.adv_req*, %struct.adv_req** %adv_reqp, align 8, !dbg !8626
  %5 = load i32, i32* %srb_tag, align 4, !dbg !8627
  %idxprom = zext i32 %5 to i64, !dbg !8625
  %arrayidx = getelementptr %struct.adv_req, %struct.adv_req* %4, i64 %idxprom, !dbg !8625
  store %struct.adv_req* %arrayidx, %struct.adv_req** %reqp, align 8, !dbg !8628
  %6 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8629
  %cmndp = getelementptr inbounds %struct.adv_req, %struct.adv_req* %6, i32 0, i32 2, !dbg !8631
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmndp, align 32, !dbg !8631
  %tobool = icmp ne %struct.scsi_cmnd* %7, null, !dbg !8629
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8632

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8633
  %cmndp1 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %8, i32 0, i32 2, !dbg !8634
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmndp1, align 32, !dbg !8634
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8635
  %cmp = icmp ne %struct.scsi_cmnd* %9, %10, !dbg !8636
  br i1 %cmp, label %if.then, label %if.end, !dbg !8637

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8638
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 1, !dbg !8638
  %12 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8638
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 0, !dbg !8638
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8638
  %call = call i8* @shost_priv(%struct.Scsi_Host* %13) #11, !dbg !8638
  %14 = bitcast i8* %call to %struct.asc_board*, !dbg !8638
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %14, i32 0, i32 12, !dbg !8638
  %adv_build_noreq = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 7, !dbg !8638
  %15 = load i32, i32* %adv_build_noreq, align 4, !dbg !8638
  %add = add i32 %15, 1, !dbg !8638
  store i32 %add, i32* %adv_build_noreq, align 4, !dbg !8638
  store i32 0, i32* %retval, align 4, !dbg !8640
  br label %return, !dbg !8640

if.end:                                           ; preds = %land.lhs.true, %entry
  %16 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !8641
  %adv_reqp_addr = getelementptr inbounds %struct.asc_board, %struct.asc_board* %16, i32 0, i32 17, !dbg !8642
  %17 = load i64, i64* %adv_reqp_addr, align 8, !dbg !8642
  %18 = load i32, i32* %srb_tag, align 4, !dbg !8643
  %conv = zext i32 %18 to i64, !dbg !8643
  %mul = mul i64 %conv, 120, !dbg !8644
  %add2 = add i64 %17, %mul, !dbg !8645
  %19 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8646
  %req_addr = getelementptr inbounds %struct.adv_req, %struct.adv_req* %19, i32 0, i32 3, !dbg !8647
  store i64 %add2, i64* %req_addr, align 8, !dbg !8648
  %20 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8649
  %scsi_req_q = getelementptr inbounds %struct.adv_req, %struct.adv_req* %20, i32 0, i32 0, !dbg !8650
  store %struct.adv_scsi_req_q* %scsi_req_q, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8651
  %21 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8652
  %done_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %21, i32 0, i32 12, !dbg !8653
  store i8 0, i8* %done_status, align 8, !dbg !8654
  %22 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8655
  %scsi_cntl = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %22, i32 0, i32 11, !dbg !8656
  store i8 0, i8* %scsi_cntl, align 1, !dbg !8657
  %23 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8658
  %cntl = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %23, i32 0, i32 0, !dbg !8659
  store i8 0, i8* %cntl, align 8, !dbg !8660
  %24 = load i32, i32* %srb_tag, align 4, !dbg !8661
  %25 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8662
  %srb_tag3 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %25, i32 0, i32 22, !dbg !8663
  store i32 %24, i32* %srb_tag3, align 4, !dbg !8664
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8665
  %27 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8666
  %cmndp4 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %27, i32 0, i32 2, !dbg !8667
  store %struct.scsi_cmnd* %26, %struct.scsi_cmnd** %cmndp4, align 32, !dbg !8668
  %28 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8669
  %29 = bitcast %struct.adv_req* %28 to i8*, !dbg !8670
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8671
  %host_scribble = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 23, !dbg !8672
  store i8* %29, i8** %host_scribble, align 8, !dbg !8673
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8674
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 12, !dbg !8675
  %32 = load i16, i16* %cmd_len, align 4, !dbg !8675
  %conv5 = trunc i16 %32 to i8, !dbg !8674
  %33 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8676
  %cdb_len = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %33, i32 0, i32 10, !dbg !8677
  store i8 %conv5, i8* %cdb_len, align 2, !dbg !8678
  %34 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8679
  %cdb = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %34, i32 0, i32 16, !dbg !8680
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %cdb, i64 0, i64 0, !dbg !8681
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8682
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %35, i32 0, i32 14, !dbg !8683
  %36 = load i8*, i8** %cmnd, align 8, !dbg !8683
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8684
  %cmd_len6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 12, !dbg !8685
  %38 = load i16, i16* %cmd_len6, align 4, !dbg !8685
  %conv7 = zext i16 %38 to i32, !dbg !8684
  %cmp8 = icmp slt i32 %conv7, 12, !dbg !8686
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !8684

cond.true:                                        ; preds = %if.end
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8687
  %cmd_len10 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 12, !dbg !8688
  %40 = load i16, i16* %cmd_len10, align 4, !dbg !8688
  %conv11 = zext i16 %40 to i32, !dbg !8687
  br label %cond.end, !dbg !8684

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8684

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv11, %cond.true ], [ 12, %cond.false ], !dbg !8684
  %conv12 = sext i32 %cond to i64, !dbg !8684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 1 %36, i64 %conv12, i1 false), !dbg !8681
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8689
  %cmd_len13 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %41, i32 0, i32 12, !dbg !8691
  %42 = load i16, i16* %cmd_len13, align 4, !dbg !8691
  %conv14 = zext i16 %42 to i32, !dbg !8689
  %cmp15 = icmp sgt i32 %conv14, 12, !dbg !8692
  br i1 %cmp15, label %if.then17, label %if.end24, !dbg !8693

if.then17:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %cdb16_len, metadata !8694, metadata !DIExpression()), !dbg !8696
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8697
  %cmd_len18 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 12, !dbg !8698
  %44 = load i16, i16* %cmd_len18, align 4, !dbg !8698
  %conv19 = zext i16 %44 to i32, !dbg !8697
  %sub = sub i32 %conv19, 12, !dbg !8699
  store i32 %sub, i32* %cdb16_len, align 4, !dbg !8696
  %45 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8700
  %cdb16 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %45, i32 0, i32 19, !dbg !8701
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %cdb16, i64 0, i64 0, !dbg !8702
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8703
  %cmnd21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 14, !dbg !8704
  %47 = load i8*, i8** %cmnd21, align 8, !dbg !8704
  %arrayidx22 = getelementptr i8, i8* %47, i64 12, !dbg !8703
  %48 = load i32, i32* %cdb16_len, align 4, !dbg !8705
  %conv23 = sext i32 %48 to i64, !dbg !8705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay20, i8* align 1 %arrayidx22, i64 %conv23, i1 false), !dbg !8702
  br label %if.end24, !dbg !8706

if.end24:                                         ; preds = %if.then17, %cond.end
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8707
  %device25 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 1, !dbg !8708
  %50 = load %struct.scsi_device*, %struct.scsi_device** %device25, align 8, !dbg !8708
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %50, i32 0, i32 16, !dbg !8709
  %51 = load i32, i32* %id, align 8, !dbg !8709
  %conv26 = trunc i32 %51 to i8, !dbg !8707
  %52 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8710
  %target_id = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %52, i32 0, i32 2, !dbg !8711
  store i8 %conv26, i8* %target_id, align 2, !dbg !8712
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8713
  %device27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %53, i32 0, i32 1, !dbg !8714
  %54 = load %struct.scsi_device*, %struct.scsi_device** %device27, align 8, !dbg !8714
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %54, i32 0, i32 18, !dbg !8715
  %55 = load i64, i64* %lun, align 8, !dbg !8715
  %conv28 = trunc i64 %55 to i8, !dbg !8713
  %56 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8716
  %target_lun = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %56, i32 0, i32 3, !dbg !8717
  store i8 %conv28, i8* %target_lun, align 1, !dbg !8718
  %57 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !8719
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %57, i32 0, i32 0, !dbg !8719
  %58 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8719
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8719
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %59, i32 0, i32 20, !dbg !8719
  %60 = load i8*, i8** %sense_buffer, align 8, !dbg !8719
  %call29 = call i64 @dma_map_single_attrs(%struct.device* %58, i8* %60, i64 96, i32 2, i64 0) #11, !dbg !8719
  store i64 %call29, i64* %sense_addr, align 8, !dbg !8720
  %61 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !8721
  %dev30 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %61, i32 0, i32 0, !dbg !8723
  %62 = load %struct.device*, %struct.device** %dev30, align 8, !dbg !8723
  %63 = load i64, i64* %sense_addr, align 8, !dbg !8724
  %call31 = call i32 @dma_mapping_error(%struct.device* %62, i64 %63) #11, !dbg !8725
  %tobool32 = icmp ne i32 %call31, 0, !dbg !8725
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !8726

if.then33:                                        ; preds = %if.end24
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8727
  %device34 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %64, i32 0, i32 1, !dbg !8727
  %65 = load %struct.scsi_device*, %struct.scsi_device** %device34, align 8, !dbg !8727
  %host35 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %65, i32 0, i32 0, !dbg !8727
  %66 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host35, align 8, !dbg !8727
  %call36 = call i8* @shost_priv(%struct.Scsi_Host* %66) #11, !dbg !8727
  %67 = bitcast i8* %call36 to %struct.asc_board*, !dbg !8727
  %asc_stats37 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %67, i32 0, i32 12, !dbg !8727
  %adv_build_noreq38 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats37, i32 0, i32 7, !dbg !8727
  %68 = load i32, i32* %adv_build_noreq38, align 4, !dbg !8727
  %add39 = add i32 %68, 1, !dbg !8727
  store i32 %add39, i32* %adv_build_noreq38, align 4, !dbg !8727
  store i32 0, i32* %retval, align 4, !dbg !8729
  br label %return, !dbg !8729

if.end40:                                         ; preds = %if.end24
  %69 = load i64, i64* %sense_addr, align 8, !dbg !8730
  %conv41 = trunc i64 %69 to i32, !dbg !8730
  %70 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8731
  %sense_addr42 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %70, i32 0, i32 6, !dbg !8732
  store i32 %conv41, i32* %sense_addr42, align 4, !dbg !8733
  %71 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8734
  %sense_len = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %71, i32 0, i32 9, !dbg !8735
  store i8 96, i8* %sense_len, align 1, !dbg !8736
  %72 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8737
  %call43 = call i32 @scsi_dma_map(%struct.scsi_cmnd* %72) #11, !dbg !8738
  store i32 %call43, i32* %use_sg, align 4, !dbg !8739
  %73 = load i32, i32* %use_sg, align 4, !dbg !8740
  %cmp44 = icmp slt i32 %73, 0, !dbg !8742
  br i1 %cmp44, label %if.then46, label %if.else, !dbg !8743

if.then46:                                        ; preds = %if.end40
  %74 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8744
  %device47 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %74, i32 0, i32 1, !dbg !8744
  %75 = load %struct.scsi_device*, %struct.scsi_device** %device47, align 8, !dbg !8744
  %host48 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %75, i32 0, i32 0, !dbg !8744
  %76 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host48, align 8, !dbg !8744
  %call49 = call i8* @shost_priv(%struct.Scsi_Host* %76) #11, !dbg !8744
  %77 = bitcast i8* %call49 to %struct.asc_board*, !dbg !8744
  %asc_stats50 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %77, i32 0, i32 12, !dbg !8744
  %adv_build_noreq51 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats50, i32 0, i32 7, !dbg !8744
  %78 = load i32, i32* %adv_build_noreq51, align 4, !dbg !8744
  %add52 = add i32 %78, 1, !dbg !8744
  store i32 %add52, i32* %adv_build_noreq51, align 4, !dbg !8744
  store i32 0, i32* %retval, align 4, !dbg !8746
  br label %return, !dbg !8746

if.else:                                          ; preds = %if.end40
  %79 = load i32, i32* %use_sg, align 4, !dbg !8747
  %cmp53 = icmp eq i32 %79, 0, !dbg !8749
  br i1 %cmp53, label %if.then55, label %if.else56, !dbg !8750

if.then55:                                        ; preds = %if.else
  %80 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8751
  %sgblkp = getelementptr inbounds %struct.adv_req, %struct.adv_req* %80, i32 0, i32 4, !dbg !8753
  store %struct.adv_sgblk* null, %struct.adv_sgblk** %sgblkp, align 16, !dbg !8754
  %81 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8755
  %data_cnt = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %81, i32 0, i32 5, !dbg !8756
  store i32 0, i32* %data_cnt, align 8, !dbg !8757
  %82 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8758
  %data_addr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %82, i32 0, i32 4, !dbg !8759
  store i32 0, i32* %data_addr, align 4, !dbg !8760
  %83 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8761
  %sg_list_ptr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %83, i32 0, i32 23, !dbg !8762
  store %struct.adv_sg_block* null, %struct.adv_sg_block** %sg_list_ptr, align 8, !dbg !8763
  %84 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8764
  %sg_real_addr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %84, i32 0, i32 17, !dbg !8765
  store i32 0, i32* %sg_real_addr, align 8, !dbg !8766
  br label %if.end81, !dbg !8767

if.else56:                                        ; preds = %if.else
  %85 = load i32, i32* %use_sg, align 4, !dbg !8768
  %cmp57 = icmp sgt i32 %85, 255, !dbg !8771
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !8772

if.then59:                                        ; preds = %if.else56
  %86 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8773
  %87 = load i32, i32* %use_sg, align 4, !dbg !8775
  %88 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8776
  %device60 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %88, i32 0, i32 1, !dbg !8777
  %89 = load %struct.scsi_device*, %struct.scsi_device** %device60, align 8, !dbg !8777
  %host61 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %89, i32 0, i32 0, !dbg !8778
  %90 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host61, align 8, !dbg !8778
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %90, i32 0, i32 27, !dbg !8779
  %91 = load i16, i16* %sg_tablesize, align 2, !dbg !8779
  %conv62 = zext i16 %91 to i32, !dbg !8776
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.scsi_cmnd* %86, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i32 %87, i32 %conv62) #11, !dbg !8780
  %92 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8781
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %92) #11, !dbg !8782
  %93 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8783
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %93, i32 0, i32 24, !dbg !8784
  store i32 458752, i32* %result, align 8, !dbg !8785
  %94 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8786
  %cmndp63 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %94, i32 0, i32 2, !dbg !8787
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %cmndp63, align 32, !dbg !8788
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8789
  %host_scribble64 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %95, i32 0, i32 23, !dbg !8790
  store i8* null, i8** %host_scribble64, align 8, !dbg !8791
  store i32 -1, i32* %retval, align 4, !dbg !8792
  br label %return, !dbg !8792

if.end65:                                         ; preds = %if.else56
  %96 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8793
  %call66 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %96) #11, !dbg !8793
  %97 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8794
  %data_cnt67 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %97, i32 0, i32 5, !dbg !8795
  store i32 %call66, i32* %data_cnt67, align 8, !dbg !8796
  %98 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !8797
  %99 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8798
  %100 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp, align 8, !dbg !8799
  %101 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8800
  %102 = load i32, i32* %use_sg, align 4, !dbg !8801
  %call68 = call i32 @adv_get_sglist(%struct.asc_board* %98, %struct.adv_req* %99, %struct.adv_scsi_req_q* %100, %struct.scsi_cmnd* %101, i32 %102) #11, !dbg !8802
  store i32 %call68, i32* %ret, align 4, !dbg !8803
  %103 = load i32, i32* %ret, align 4, !dbg !8804
  %cmp69 = icmp ne i32 %103, 1, !dbg !8806
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !8807

if.then71:                                        ; preds = %if.end65
  %104 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8808
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %104) #11, !dbg !8810
  %105 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8811
  %result72 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %105, i32 0, i32 24, !dbg !8812
  store i32 458752, i32* %result72, align 8, !dbg !8813
  %106 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8814
  %cmndp73 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %106, i32 0, i32 2, !dbg !8815
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %cmndp73, align 32, !dbg !8816
  %107 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8817
  %host_scribble74 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %107, i32 0, i32 23, !dbg !8818
  store i8* null, i8** %host_scribble74, align 8, !dbg !8819
  %108 = load i32, i32* %ret, align 4, !dbg !8820
  store i32 %108, i32* %retval, align 4, !dbg !8821
  br label %return, !dbg !8821

if.end75:                                         ; preds = %if.end65
  %109 = load i32, i32* %use_sg, align 4, !dbg !8822
  %110 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8822
  %device76 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %110, i32 0, i32 1, !dbg !8822
  %111 = load %struct.scsi_device*, %struct.scsi_device** %device76, align 8, !dbg !8822
  %host77 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %111, i32 0, i32 0, !dbg !8822
  %112 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host77, align 8, !dbg !8822
  %call78 = call i8* @shost_priv(%struct.Scsi_Host* %112) #11, !dbg !8822
  %113 = bitcast i8* %call78 to %struct.asc_board*, !dbg !8822
  %asc_stats79 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %113, i32 0, i32 12, !dbg !8822
  %xfer_elem = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats79, i32 0, i32 14, !dbg !8822
  %114 = load i32, i32* %xfer_elem, align 8, !dbg !8822
  %add80 = add i32 %114, %109, !dbg !8822
  store i32 %add80, i32* %xfer_elem, align 8, !dbg !8822
  br label %if.end81

if.end81:                                         ; preds = %if.end75, %if.then55
  br label %if.end82

if.end82:                                         ; preds = %if.end81
  %115 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8823
  %device83 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %115, i32 0, i32 1, !dbg !8823
  %116 = load %struct.scsi_device*, %struct.scsi_device** %device83, align 8, !dbg !8823
  %host84 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %116, i32 0, i32 0, !dbg !8823
  %117 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host84, align 8, !dbg !8823
  %call85 = call i8* @shost_priv(%struct.Scsi_Host* %117) #11, !dbg !8823
  %118 = bitcast i8* %call85 to %struct.asc_board*, !dbg !8823
  %asc_stats86 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %118, i32 0, i32 12, !dbg !8823
  %xfer_cnt = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats86, i32 0, i32 13, !dbg !8823
  %119 = load i32, i32* %xfer_cnt, align 4, !dbg !8823
  %add87 = add i32 %119, 1, !dbg !8823
  store i32 %add87, i32* %xfer_cnt, align 4, !dbg !8823
  %120 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !8824
  %121 = load %struct.adv_req**, %struct.adv_req*** %adv_reqpp.addr, align 8, !dbg !8825
  store %struct.adv_req* %120, %struct.adv_req** %121, align 8, !dbg !8826
  store i32 1, i32* %retval, align 4, !dbg !8827
  br label %return, !dbg !8827

return:                                           ; preds = %if.end82, %if.then71, %if.then59, %if.then46, %if.then33, %if.then
  %122 = load i32, i32* %retval, align 4, !dbg !8828
  ret i32 %122, !dbg !8828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvExeScsiQueue(%struct.adv_dvc_var* %asc_dvc, %struct.adv_req* %reqp) #2 !dbg !8829 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %reqp.addr = alloca %struct.adv_req*, align 8
  %iop_base = alloca i8*, align 8
  %new_carrp = alloca %struct.adv_carr_t*, align 8
  %scsiq = alloca %struct.adv_scsi_req_q*, align 8
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  store %struct.adv_req* %reqp, %struct.adv_req** %reqp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_req** %reqp.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata %struct.adv_carr_t** %new_carrp, metadata !8838, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.declare(metadata %struct.adv_scsi_req_q** %scsiq, metadata !8840, metadata !DIExpression()), !dbg !8841
  %0 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !8842
  %scsi_req_q = getelementptr inbounds %struct.adv_req, %struct.adv_req* %0, i32 0, i32 0, !dbg !8843
  store %struct.adv_scsi_req_q* %scsi_req_q, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8841
  %1 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8844
  %target_id = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %1, i32 0, i32 2, !dbg !8846
  %2 = load i8, i8* %target_id, align 2, !dbg !8846
  %conv = zext i8 %2 to i32, !dbg !8844
  %cmp = icmp sgt i32 %conv, 15, !dbg !8847
  br i1 %cmp, label %if.then, label %if.end, !dbg !8848

if.then:                                          ; preds = %entry
  %3 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8849
  %host_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %3, i32 0, i32 14, !dbg !8851
  store i8 69, i8* %host_status, align 2, !dbg !8852
  %4 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8853
  %done_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %4, i32 0, i32 12, !dbg !8854
  store i8 4, i8* %done_status, align 8, !dbg !8855
  store i32 -1, i32* %retval, align 4, !dbg !8856
  br label %return, !dbg !8856

if.end:                                           ; preds = %entry
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8857
  %iop_base2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 0, !dbg !8858
  %6 = load i8*, i8** %iop_base2, align 8, !dbg !8858
  store i8* %6, i8** %iop_base, align 8, !dbg !8859
  %7 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8860
  %call = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %7) #11, !dbg !8861
  store %struct.adv_carr_t* %call, %struct.adv_carr_t** %new_carrp, align 8, !dbg !8862
  %8 = load %struct.adv_carr_t*, %struct.adv_carr_t** %new_carrp, align 8, !dbg !8863
  %tobool = icmp ne %struct.adv_carr_t* %8, null, !dbg !8863
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !8865

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8866
  br label %return, !dbg !8866

if.end4:                                          ; preds = %if.end
  %9 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8868
  %carr_pending_cnt = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %9, i32 0, i32 27, !dbg !8869
  %10 = load i16, i16* %carr_pending_cnt, align 8, !dbg !8870
  %inc = add i16 %10, 1, !dbg !8870
  store i16 %inc, i16* %carr_pending_cnt, align 8, !dbg !8870
  %11 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8871
  %srb_tag = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %11, i32 0, i32 22, !dbg !8871
  %12 = load i32, i32* %srb_tag, align 4, !dbg !8871
  %13 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8872
  %scsiq_ptr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %13, i32 0, i32 20, !dbg !8873
  store i32 %12, i32* %scsiq_ptr, align 4, !dbg !8874
  %14 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !8875
  %req_addr = getelementptr inbounds %struct.adv_req, %struct.adv_req* %14, i32 0, i32 3, !dbg !8875
  %15 = load i64, i64* %req_addr, align 8, !dbg !8875
  %conv5 = trunc i64 %15 to i32, !dbg !8875
  %16 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8876
  %scsiq_rptr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %16, i32 0, i32 18, !dbg !8877
  store i32 %conv5, i32* %scsiq_rptr, align 4, !dbg !8878
  %17 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8879
  %icq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %17, i32 0, i32 25, !dbg !8880
  %18 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp, align 8, !dbg !8880
  %carr_va = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %18, i32 0, i32 0, !dbg !8881
  %19 = load i32, i32* %carr_va, align 4, !dbg !8881
  %20 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8882
  %carr_va6 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %20, i32 0, i32 21, !dbg !8883
  store i32 %19, i32* %carr_va6, align 8, !dbg !8884
  %21 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8885
  %icq_sp7 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %21, i32 0, i32 25, !dbg !8886
  %22 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp7, align 8, !dbg !8886
  %carr_pa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %22, i32 0, i32 1, !dbg !8887
  %23 = load i32, i32* %carr_pa, align 4, !dbg !8887
  %24 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8888
  %carr_pa8 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %24, i32 0, i32 7, !dbg !8889
  store i32 %23, i32* %carr_pa8, align 8, !dbg !8890
  %25 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !8891
  %scsiq_rptr9 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %25, i32 0, i32 18, !dbg !8892
  %26 = load i32, i32* %scsiq_rptr9, align 4, !dbg !8892
  %27 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8893
  %icq_sp10 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %27, i32 0, i32 25, !dbg !8894
  %28 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp10, align 8, !dbg !8894
  %areq_vpa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %28, i32 0, i32 2, !dbg !8895
  store i32 %26, i32* %areq_vpa, align 4, !dbg !8896
  %29 = load %struct.adv_carr_t*, %struct.adv_carr_t** %new_carrp, align 8, !dbg !8897
  %carr_pa11 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %29, i32 0, i32 1, !dbg !8898
  %30 = load i32, i32* %carr_pa11, align 4, !dbg !8898
  %31 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8899
  %icq_sp12 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %31, i32 0, i32 25, !dbg !8900
  %32 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp12, align 8, !dbg !8900
  %next_vpa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %32, i32 0, i32 3, !dbg !8901
  store i32 %30, i32* %next_vpa, align 4, !dbg !8902
  %33 = load %struct.adv_carr_t*, %struct.adv_carr_t** %new_carrp, align 8, !dbg !8903
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8904
  %icq_sp13 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %34, i32 0, i32 25, !dbg !8905
  store %struct.adv_carr_t* %33, %struct.adv_carr_t** %icq_sp13, align 8, !dbg !8906
  %35 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8907
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %35, i32 0, i32 20, !dbg !8909
  %36 = load i8, i8* %chip_type, align 1, !dbg !8909
  %conv14 = zext i8 %36 to i32, !dbg !8907
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !8910
  br i1 %cmp15, label %if.then21, label %lor.lhs.false, !dbg !8911

lor.lhs.false:                                    ; preds = %if.end4
  %37 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8912
  %chip_type17 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %37, i32 0, i32 20, !dbg !8913
  %38 = load i8, i8* %chip_type17, align 1, !dbg !8913
  %conv18 = zext i8 %38 to i32, !dbg !8912
  %cmp19 = icmp eq i32 %conv18, 2, !dbg !8914
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !8915

if.then21:                                        ; preds = %lor.lhs.false, %if.end4
  %39 = load i8*, i8** %iop_base, align 8, !dbg !8916
  %add.ptr = getelementptr i8, i8* %39, i64 34, !dbg !8916
  call void @writeb(i8 zeroext 1, i8* %add.ptr) #11, !dbg !8916
  %40 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8918
  %chip_type22 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %40, i32 0, i32 20, !dbg !8920
  %41 = load i8, i8* %chip_type22, align 1, !dbg !8920
  %conv23 = zext i8 %41 to i32, !dbg !8918
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !8921
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !8922

if.then26:                                        ; preds = %if.then21
  %42 = load i8*, i8** %iop_base, align 8, !dbg !8923
  %add.ptr27 = getelementptr i8, i8* %42, i64 34, !dbg !8923
  call void @writeb(i8 zeroext 0, i8* %add.ptr27) #11, !dbg !8923
  br label %if.end28, !dbg !8925

if.end28:                                         ; preds = %if.then26, %if.then21
  br label %if.end37, !dbg !8926

if.else:                                          ; preds = %lor.lhs.false
  %43 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !8927
  %chip_type29 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %43, i32 0, i32 20, !dbg !8929
  %44 = load i8, i8* %chip_type29, align 1, !dbg !8929
  %conv30 = zext i8 %44 to i32, !dbg !8927
  %cmp31 = icmp eq i32 %conv30, 3, !dbg !8930
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !8931

if.then33:                                        ; preds = %if.else
  %45 = load %struct.adv_carr_t*, %struct.adv_carr_t** %new_carrp, align 8, !dbg !8932
  %carr_pa34 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %45, i32 0, i32 1, !dbg !8932
  %46 = load i32, i32* %carr_pa34, align 4, !dbg !8932
  %47 = load i8*, i8** %iop_base, align 8, !dbg !8932
  %add.ptr35 = getelementptr i8, i8* %47, i64 20, !dbg !8932
  call void @writel(i32 %46, i8* %add.ptr35) #11, !dbg !8932
  br label %if.end36, !dbg !8934

if.end36:                                         ; preds = %if.then33, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end28
  store i32 1, i32* %retval, align 4, !dbg !8935
  br label %return, !dbg !8935

return:                                           ; preds = %if.end37, %if.then3, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !8936
  ret i32 %48, !dbg !8936
}

; Function Attrs: noredzone
declare dso_local void @scmd_printk(i8*, %struct.scsi_cmnd*, i8*, ...) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @asc_get_sense_buffer_dma(%struct.scsi_cmnd* %scp) #2 !dbg !8937 {
entry:
  %retval = alloca i32, align 4
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %board = alloca %struct.asc_board*, align 8
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !8942, metadata !DIExpression()), !dbg !8943
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8944
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !8945
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8945
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !8946
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8946
  %call = call i8* @shost_priv(%struct.Scsi_Host* %2) #11, !dbg !8947
  %3 = bitcast i8* %call to %struct.asc_board*, !dbg !8947
  store %struct.asc_board* %3, %struct.asc_board** %board, align 8, !dbg !8943
  %4 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !8948
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 0, !dbg !8948
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8948
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8948
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 20, !dbg !8948
  %7 = load i8*, i8** %sense_buffer, align 8, !dbg !8948
  %call1 = call i64 @dma_map_single_attrs(%struct.device* %5, i8* %7, i64 96, i32 2, i64 0) #11, !dbg !8948
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8949
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 22, !dbg !8950
  %dma_handle = getelementptr inbounds %struct.scsi_pointer, %struct.scsi_pointer* %SCp, i32 0, i32 4, !dbg !8951
  store i64 %call1, i64* %dma_handle, align 8, !dbg !8952
  %9 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !8953
  %dev2 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 0, !dbg !8955
  %10 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !8955
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8956
  %SCp3 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 22, !dbg !8957
  %dma_handle4 = getelementptr inbounds %struct.scsi_pointer, %struct.scsi_pointer* %SCp3, i32 0, i32 4, !dbg !8958
  %12 = load i64, i64* %dma_handle4, align 8, !dbg !8958
  %call5 = call i32 @dma_mapping_error(%struct.device* %10, i64 %12) #11, !dbg !8959
  %tobool = icmp ne i32 %call5, 0, !dbg !8959
  br i1 %tobool, label %if.then, label %if.end, !dbg !8960

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8961
  br label %return, !dbg !8961

if.end:                                           ; preds = %entry
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !8963
  %SCp6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 22, !dbg !8963
  %dma_handle7 = getelementptr inbounds %struct.scsi_pointer, %struct.scsi_pointer* %SCp6, i32 0, i32 4, !dbg !8963
  %14 = load i64, i64* %dma_handle7, align 8, !dbg !8963
  %conv = trunc i64 %14 to i32, !dbg !8963
  store i32 %conv, i32* %retval, align 4, !dbg !8964
  br label %return, !dbg !8964

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8965
  ret i32 %15, !dbg !8965
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_dma_map(%struct.scsi_cmnd*) #1

; Function Attrs: noredzone
declare dso_local void @scsi_dma_unmap(%struct.scsi_cmnd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !8966 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8969, metadata !DIExpression()), !dbg !8973
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8979, metadata !DIExpression()), !dbg !8980
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8981, metadata !DIExpression()), !dbg !8982
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8983, metadata !DIExpression()), !dbg !8984
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8985, metadata !DIExpression()), !dbg !8989
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8991, metadata !DIExpression()), !dbg !8995
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8997, metadata !DIExpression()), !dbg !9001
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9006, metadata !DIExpression()), !dbg !9007
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9008, metadata !DIExpression()), !dbg !9009
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9010, metadata !DIExpression()), !dbg !9011
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9012, metadata !DIExpression()), !dbg !9013
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9014, metadata !DIExpression()), !dbg !9015
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9016, metadata !DIExpression()), !dbg !9017
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9018, metadata !DIExpression()), !dbg !9019
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9020, metadata !DIExpression()), !dbg !9021
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9024, metadata !DIExpression()), !dbg !9025
  %0 = load i64, i64* %size.addr, align 8, !dbg !9026
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9027
  %or = or i32 %1, 256, !dbg !9028
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9029
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !9030
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9031

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9032
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9033
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9034

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9035
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9036
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9037
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !9038
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9015
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9039
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9040
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9041
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9042
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9043
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9044
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !9045
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9045
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9045
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9045
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !9045
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9046
  br label %kmalloc.exit, !dbg !9046

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9047
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9048
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9048
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9050

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9051
  br label %kmalloc_index.exit.i, !dbg !9051

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9052
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9054
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9055

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9056
  br label %kmalloc_index.exit.i, !dbg !9056

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9057
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9059
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9060

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9061
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9062
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9063

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9064
  br label %kmalloc_index.exit.i, !dbg !9064

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9065
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9067
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9068

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9069
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9070
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9071

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9072
  br label %kmalloc_index.exit.i, !dbg !9072

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9073
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9075
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9076

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9077
  br label %kmalloc_index.exit.i, !dbg !9077

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9078
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9080
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9081

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9082
  br label %kmalloc_index.exit.i, !dbg !9082

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9083
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9085
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9086

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9087
  br label %kmalloc_index.exit.i, !dbg !9087

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9088
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9090
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9091

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9092
  br label %kmalloc_index.exit.i, !dbg !9092

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9093
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9095
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9096

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9097
  br label %kmalloc_index.exit.i, !dbg !9097

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9098
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9100
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9101

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9102
  br label %kmalloc_index.exit.i, !dbg !9102

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9103
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9105
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9106

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9107
  br label %kmalloc_index.exit.i, !dbg !9107

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9108
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9110
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9111

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9112
  br label %kmalloc_index.exit.i, !dbg !9112

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9113
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9115
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9116

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9117
  br label %kmalloc_index.exit.i, !dbg !9117

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9118
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9120
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9121

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9122
  br label %kmalloc_index.exit.i, !dbg !9122

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9123
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9125
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9126

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9127
  br label %kmalloc_index.exit.i, !dbg !9127

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9128
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9130
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9131

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9132
  br label %kmalloc_index.exit.i, !dbg !9132

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9133
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9135
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9136

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9137
  br label %kmalloc_index.exit.i, !dbg !9137

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9138
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9140
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9141

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9142
  br label %kmalloc_index.exit.i, !dbg !9142

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9143
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9145
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9146

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9147
  br label %kmalloc_index.exit.i, !dbg !9147

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9148
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9150
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9151

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9152
  br label %kmalloc_index.exit.i, !dbg !9152

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9153
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9155
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9156

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9157
  br label %kmalloc_index.exit.i, !dbg !9157

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9158
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9160
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9161

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9162
  br label %kmalloc_index.exit.i, !dbg !9162

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9163
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9165
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9166

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9167
  br label %kmalloc_index.exit.i, !dbg !9167

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9168
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9170
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9171

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9172
  br label %kmalloc_index.exit.i, !dbg !9172

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9173
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9175
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9176

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9177
  br label %kmalloc_index.exit.i, !dbg !9177

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9178
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9180
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9181

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9182
  br label %kmalloc_index.exit.i, !dbg !9182

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9183
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9185
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9186

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9187
  br label %kmalloc_index.exit.i, !dbg !9187

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9188
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9190
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9191

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9192
  br label %kmalloc_index.exit.i, !dbg !9192

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !9193, !srcloc !9196
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #6, !dbg !9197, !srcloc !9200
  unreachable, !dbg !9201

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9202
  store i32 %45, i32* %index.i, align 4, !dbg !9203
  %46 = load i32, i32* %index.i, align 4, !dbg !9204
  %tobool.i = icmp ne i32 %46, 0, !dbg !9204
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9206

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9207
  br label %kmalloc.exit, !dbg !9207

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9208
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9209
  %and.i.i = and i32 %48, 17, !dbg !9209
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9209
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9209
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9209
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9209
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9211

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9212
  br label %kmalloc_type.exit.i, !dbg !9212

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9213
  %and2.i.i = and i32 %49, 1, !dbg !9214
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9213
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9213
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9213
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9215
  br label %kmalloc_type.exit.i, !dbg !9215

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9216
  %idxprom.i = zext i32 %51 to i64, !dbg !9217
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9217
  %52 = load i32, i32* %index.i, align 4, !dbg !9218
  %idxprom6.i = zext i32 %52 to i64, !dbg !9217
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9217
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9217
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9219
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9220
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9221
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9222
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !9223
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9223
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9223
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9223
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !9223
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8984
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9224
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9225
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9226
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9227
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !9228
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9229
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9230
  store i8* %62, i8** %retval.i, align 8, !dbg !9231
  br label %kmalloc.exit, !dbg !9231

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9232
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9233
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !9234
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9234
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9234
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9234
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !9234
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9235
  br label %kmalloc.exit, !dbg !9235

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9236
  ret i8* %65, !dbg !9237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #2 !dbg !9238 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9243
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !9244
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !9245
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !9246
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !9246
  ret %struct.scatterlist* %1, !dbg !9247
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !6067 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9252, metadata !DIExpression()), !dbg !9253
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !9254, metadata !DIExpression()), !dbg !9255
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !9258, metadata !DIExpression()), !dbg !9261
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9261
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !9261
  %lnot = xor i1 %call, true, !dbg !9261
  %lnot1 = xor i1 %lnot, true, !dbg !9261
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9261
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !9261
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !9262
  %tobool = icmp ne i32 %1, 0, !dbg !9262
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9262

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !9262
  %tobool2 = trunc i8 %2 to i1, !dbg !9262
  %lnot3 = xor i1 %tobool2, true, !dbg !9262
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !9264
  %lnot5 = xor i1 %3, true, !dbg !9262
  %lnot7 = xor i1 %lnot5, true, !dbg !9262
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9262
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9262
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9262
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !9261

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !9265
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9267, metadata !DIExpression()), !dbg !9269
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9269
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9270
  %tobool10 = icmp ne i32 %4, 0, !dbg !9270
  %lnot11 = xor i1 %tobool10, true, !dbg !9270
  %lnot13 = xor i1 %lnot11, true, !dbg !9270
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9270
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !9270
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !9270
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9269

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !9270

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !9272

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !9274

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9272
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !9272
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9272
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !9272
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !9272
  br label %do.body21, !dbg !9272

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !9276

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !9278

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !9276

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i32 276, i32 2313, i64 12) #6, !dbg !9280, !srcloc !9282
  br label %do.end25, !dbg !9280

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 285) #6, !dbg !9283, !srcloc !9285
  br label %do.body26, !dbg !9276

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !9286

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !9276

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !9272

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !9288

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !9272

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !9272

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !9269
  %tobool32 = icmp ne i32 %7, 0, !dbg !9269
  %lnot33 = xor i1 %tobool32, true, !dbg !9269
  %lnot35 = xor i1 %lnot33, true, !dbg !9269
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !9269
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !9269
  store i64 %conv37, i64* %tmp, align 8, !dbg !9270
  %8 = load i64, i64* %tmp, align 8, !dbg !9269
  br label %if.end38, !dbg !9265

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !9261
  %tobool40 = icmp ne i32 %9, 0, !dbg !9261
  %lnot41 = xor i1 %tobool40, true, !dbg !9261
  %lnot43 = xor i1 %lnot41, true, !dbg !9261
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !9261
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !9261
  store i64 %conv45, i64* %tmp39, align 8, !dbg !9262
  %10 = load i64, i64* %tmp39, align 8, !dbg !9261
  %tobool46 = icmp ne i64 %10, 0, !dbg !9290
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9291

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !9292
  br label %return, !dbg !9292

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9293
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !9294
  %13 = load i64, i64* %size.addr, align 8, !dbg !9295
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !9296
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9297
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !9298
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !9298
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !9298
  %18 = ptrtoint i8* %17 to i64, !dbg !9298
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !9298
  %shr = lshr i64 %call49, 12, !dbg !9298
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !9298
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !9299
  %20 = ptrtoint i8* %19 to i64, !dbg !9299
  %and = and i64 %20, 4095, !dbg !9299
  %21 = load i64, i64* %size.addr, align 8, !dbg !9300
  %22 = load i32, i32* %dir.addr, align 4, !dbg !9301
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !9302
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !9303
  store i64 %call50, i64* %retval, align 8, !dbg !9304
  br label %return, !dbg !9304

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !9305
  ret i64 %24, !dbg !9305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !9306 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !9311, metadata !DIExpression()), !dbg !9312
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9313
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !9314
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #11, !dbg !9315
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !9316
  %cmp = icmp eq i64 %2, -1, !dbg !9318
  br i1 %cmp, label %if.then, label %if.end, !dbg !9319

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9320
  br label %return, !dbg !9320

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9321
  br label %return, !dbg !9321

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !9322
  ret i32 %3, !dbg !9322
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !9323 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9328
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9330
  %1 = load i8*, i8** %init_name, align 8, !dbg !9330
  %tobool = icmp ne i8* %1, null, !dbg !9328
  br i1 %tobool, label %if.then, label %if.end, !dbg !9331

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9332
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9333
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9333
  store i8* %3, i8** %retval, align 8, !dbg !9334
  br label %return, !dbg !9334

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9335
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9336
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !9337
  store i8* %call, i8** %retval, align 8, !dbg !9338
  br label %return, !dbg !9338

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9339
  ret i8* %5, !dbg !9339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !9340 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9343, metadata !DIExpression()), !dbg !9344
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9345, metadata !DIExpression()), !dbg !9346
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9347, metadata !DIExpression()), !dbg !9348
  ret void, !dbg !9349
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !9350 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !9354, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9356, metadata !DIExpression()), !dbg !9357
  %0 = load i64, i64* %x.addr, align 8, !dbg !9358
  %sub = sub i64 %0, -2147483648, !dbg !9359
  store i64 %sub, i64* %y, align 8, !dbg !9357
  %1 = load i64, i64* %y, align 8, !dbg !9360
  %2 = load i64, i64* %x.addr, align 8, !dbg !9361
  %3 = load i64, i64* %y, align 8, !dbg !9362
  %cmp = icmp ugt i64 %2, %3, !dbg !9363
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9364

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !9365
  br label %cond.end, !dbg !9364

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !9366
  %sub1 = sub i64 -2147483648, %5, !dbg !9367
  br label %cond.end, !dbg !9364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !9364
  %add = add i64 %1, %cond, !dbg !9368
  store i64 %add, i64* %x.addr, align 8, !dbg !9369
  %6 = load i64, i64* %x.addr, align 8, !dbg !9370
  ret i64 %6, !dbg !9371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !9372 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9379
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !9380
  %1 = load i8*, i8** %name, align 8, !dbg !9380
  ret i8* %1, !dbg !9381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !9382 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !9387, metadata !DIExpression()), !dbg !9388
  ret void, !dbg !9389
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !9390 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9394, metadata !DIExpression()), !dbg !9399
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9401, metadata !DIExpression()), !dbg !9402
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9403, metadata !DIExpression()), !dbg !9404
  %0 = load i64, i64* %size.addr, align 8, !dbg !9405
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9407
  br i1 %1, label %if.then, label %if.end447, !dbg !9408

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9409
  %tobool = icmp ne i64 %2, 0, !dbg !9409
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9412

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9414
  %cmp = icmp ult i64 %3, 4096, !dbg !9416
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9417

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9418
  br label %return, !dbg !9418

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub = sub i64 %4, 1, !dbg !9419
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9419
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9419

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub4 = sub i64 %6, 1, !dbg !9419
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9419
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9419

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub6 = sub i64 %8, 1, !dbg !9419
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9419
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9419

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9419

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub9 = sub i64 %9, 1, !dbg !9419
  %and = and i64 %sub9, -9223372036854775808, !dbg !9419
  %tobool10 = icmp ne i64 %and, 0, !dbg !9419
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9419

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9419

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub13 = sub i64 %10, 1, !dbg !9419
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9419
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9419
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9419

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9419

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub18 = sub i64 %11, 1, !dbg !9419
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9419
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9419
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9419

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9419

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub23 = sub i64 %12, 1, !dbg !9419
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9419
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9419
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9419

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9419

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub28 = sub i64 %13, 1, !dbg !9419
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9419
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9419
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9419

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9419

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub33 = sub i64 %14, 1, !dbg !9419
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9419
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9419
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9419

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9419

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub38 = sub i64 %15, 1, !dbg !9419
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9419
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9419
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9419

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9419

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub43 = sub i64 %16, 1, !dbg !9419
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9419
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9419
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9419

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9419

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub48 = sub i64 %17, 1, !dbg !9419
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9419
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9419
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9419

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9419

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub53 = sub i64 %18, 1, !dbg !9419
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9419
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9419
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9419

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9419

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub58 = sub i64 %19, 1, !dbg !9419
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9419
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9419
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9419

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9419

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub63 = sub i64 %20, 1, !dbg !9419
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9419
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9419
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9419

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9419

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub68 = sub i64 %21, 1, !dbg !9419
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9419
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9419
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9419

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9419

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub73 = sub i64 %22, 1, !dbg !9419
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9419
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9419
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9419

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9419

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub78 = sub i64 %23, 1, !dbg !9419
  %and79 = and i64 %sub78, 562949953421312, !dbg !9419
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9419
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9419

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9419

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub83 = sub i64 %24, 1, !dbg !9419
  %and84 = and i64 %sub83, 281474976710656, !dbg !9419
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9419
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9419

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9419

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub88 = sub i64 %25, 1, !dbg !9419
  %and89 = and i64 %sub88, 140737488355328, !dbg !9419
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9419
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9419

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9419

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub93 = sub i64 %26, 1, !dbg !9419
  %and94 = and i64 %sub93, 70368744177664, !dbg !9419
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9419
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9419

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9419

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub98 = sub i64 %27, 1, !dbg !9419
  %and99 = and i64 %sub98, 35184372088832, !dbg !9419
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9419
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9419

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9419

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub103 = sub i64 %28, 1, !dbg !9419
  %and104 = and i64 %sub103, 17592186044416, !dbg !9419
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9419
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9419

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9419

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub108 = sub i64 %29, 1, !dbg !9419
  %and109 = and i64 %sub108, 8796093022208, !dbg !9419
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9419
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9419

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9419

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub113 = sub i64 %30, 1, !dbg !9419
  %and114 = and i64 %sub113, 4398046511104, !dbg !9419
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9419
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9419

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9419

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub118 = sub i64 %31, 1, !dbg !9419
  %and119 = and i64 %sub118, 2199023255552, !dbg !9419
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9419
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9419

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9419

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub123 = sub i64 %32, 1, !dbg !9419
  %and124 = and i64 %sub123, 1099511627776, !dbg !9419
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9419
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9419

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9419

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub128 = sub i64 %33, 1, !dbg !9419
  %and129 = and i64 %sub128, 549755813888, !dbg !9419
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9419
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9419

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9419

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub133 = sub i64 %34, 1, !dbg !9419
  %and134 = and i64 %sub133, 274877906944, !dbg !9419
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9419
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9419

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9419

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub138 = sub i64 %35, 1, !dbg !9419
  %and139 = and i64 %sub138, 137438953472, !dbg !9419
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9419
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9419

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9419

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub143 = sub i64 %36, 1, !dbg !9419
  %and144 = and i64 %sub143, 68719476736, !dbg !9419
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9419
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9419

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9419

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub148 = sub i64 %37, 1, !dbg !9419
  %and149 = and i64 %sub148, 34359738368, !dbg !9419
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9419
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9419

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9419

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub153 = sub i64 %38, 1, !dbg !9419
  %and154 = and i64 %sub153, 17179869184, !dbg !9419
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9419
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9419

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9419

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub158 = sub i64 %39, 1, !dbg !9419
  %and159 = and i64 %sub158, 8589934592, !dbg !9419
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9419
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9419

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9419

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub163 = sub i64 %40, 1, !dbg !9419
  %and164 = and i64 %sub163, 4294967296, !dbg !9419
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9419
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9419

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9419

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub168 = sub i64 %41, 1, !dbg !9419
  %and169 = and i64 %sub168, 2147483648, !dbg !9419
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9419
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9419

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9419

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub173 = sub i64 %42, 1, !dbg !9419
  %and174 = and i64 %sub173, 1073741824, !dbg !9419
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9419
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9419

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9419

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub178 = sub i64 %43, 1, !dbg !9419
  %and179 = and i64 %sub178, 536870912, !dbg !9419
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9419
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9419

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9419

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub183 = sub i64 %44, 1, !dbg !9419
  %and184 = and i64 %sub183, 268435456, !dbg !9419
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9419
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9419

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9419

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub188 = sub i64 %45, 1, !dbg !9419
  %and189 = and i64 %sub188, 134217728, !dbg !9419
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9419
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9419

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9419

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub193 = sub i64 %46, 1, !dbg !9419
  %and194 = and i64 %sub193, 67108864, !dbg !9419
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9419
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9419

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9419

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub198 = sub i64 %47, 1, !dbg !9419
  %and199 = and i64 %sub198, 33554432, !dbg !9419
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9419
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9419

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9419

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub203 = sub i64 %48, 1, !dbg !9419
  %and204 = and i64 %sub203, 16777216, !dbg !9419
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9419
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9419

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9419

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub208 = sub i64 %49, 1, !dbg !9419
  %and209 = and i64 %sub208, 8388608, !dbg !9419
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9419
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9419

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9419

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub213 = sub i64 %50, 1, !dbg !9419
  %and214 = and i64 %sub213, 4194304, !dbg !9419
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9419
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9419

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9419

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub218 = sub i64 %51, 1, !dbg !9419
  %and219 = and i64 %sub218, 2097152, !dbg !9419
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9419
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9419

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9419

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub223 = sub i64 %52, 1, !dbg !9419
  %and224 = and i64 %sub223, 1048576, !dbg !9419
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9419
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9419

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9419

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub228 = sub i64 %53, 1, !dbg !9419
  %and229 = and i64 %sub228, 524288, !dbg !9419
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9419
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9419

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9419

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub233 = sub i64 %54, 1, !dbg !9419
  %and234 = and i64 %sub233, 262144, !dbg !9419
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9419
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9419

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9419

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub238 = sub i64 %55, 1, !dbg !9419
  %and239 = and i64 %sub238, 131072, !dbg !9419
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9419
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9419

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9419

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub243 = sub i64 %56, 1, !dbg !9419
  %and244 = and i64 %sub243, 65536, !dbg !9419
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9419
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9419

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9419

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub248 = sub i64 %57, 1, !dbg !9419
  %and249 = and i64 %sub248, 32768, !dbg !9419
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9419
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9419

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9419

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub253 = sub i64 %58, 1, !dbg !9419
  %and254 = and i64 %sub253, 16384, !dbg !9419
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9419
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9419

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9419

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub258 = sub i64 %59, 1, !dbg !9419
  %and259 = and i64 %sub258, 8192, !dbg !9419
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9419
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9419

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9419

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub263 = sub i64 %60, 1, !dbg !9419
  %and264 = and i64 %sub263, 4096, !dbg !9419
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9419
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9419

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9419

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub268 = sub i64 %61, 1, !dbg !9419
  %and269 = and i64 %sub268, 2048, !dbg !9419
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9419
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9419

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9419

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub273 = sub i64 %62, 1, !dbg !9419
  %and274 = and i64 %sub273, 1024, !dbg !9419
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9419
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9419

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9419

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub278 = sub i64 %63, 1, !dbg !9419
  %and279 = and i64 %sub278, 512, !dbg !9419
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9419
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9419

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9419

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub283 = sub i64 %64, 1, !dbg !9419
  %and284 = and i64 %sub283, 256, !dbg !9419
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9419
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9419

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9419

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub288 = sub i64 %65, 1, !dbg !9419
  %and289 = and i64 %sub288, 128, !dbg !9419
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9419
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9419

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9419

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub293 = sub i64 %66, 1, !dbg !9419
  %and294 = and i64 %sub293, 64, !dbg !9419
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9419
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9419

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9419

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub298 = sub i64 %67, 1, !dbg !9419
  %and299 = and i64 %sub298, 32, !dbg !9419
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9419
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9419

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9419

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub303 = sub i64 %68, 1, !dbg !9419
  %and304 = and i64 %sub303, 16, !dbg !9419
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9419
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9419

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9419

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub308 = sub i64 %69, 1, !dbg !9419
  %and309 = and i64 %sub308, 8, !dbg !9419
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9419
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9419

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9419

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub313 = sub i64 %70, 1, !dbg !9419
  %and314 = and i64 %sub313, 4, !dbg !9419
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9419
  %71 = zext i1 %tobool315 to i64, !dbg !9419
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9419
  br label %cond.end, !dbg !9419

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9419
  br label %cond.end317, !dbg !9419

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9419
  br label %cond.end319, !dbg !9419

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9419
  br label %cond.end321, !dbg !9419

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9419
  br label %cond.end323, !dbg !9419

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9419
  br label %cond.end325, !dbg !9419

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9419
  br label %cond.end327, !dbg !9419

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9419
  br label %cond.end329, !dbg !9419

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9419
  br label %cond.end331, !dbg !9419

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9419
  br label %cond.end333, !dbg !9419

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9419
  br label %cond.end335, !dbg !9419

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9419
  br label %cond.end337, !dbg !9419

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9419
  br label %cond.end339, !dbg !9419

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9419
  br label %cond.end341, !dbg !9419

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9419
  br label %cond.end343, !dbg !9419

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9419
  br label %cond.end345, !dbg !9419

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9419
  br label %cond.end347, !dbg !9419

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9419
  br label %cond.end349, !dbg !9419

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9419
  br label %cond.end351, !dbg !9419

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9419
  br label %cond.end353, !dbg !9419

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9419
  br label %cond.end355, !dbg !9419

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9419
  br label %cond.end357, !dbg !9419

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9419
  br label %cond.end359, !dbg !9419

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9419
  br label %cond.end361, !dbg !9419

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9419
  br label %cond.end363, !dbg !9419

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9419
  br label %cond.end365, !dbg !9419

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9419
  br label %cond.end367, !dbg !9419

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9419
  br label %cond.end369, !dbg !9419

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9419
  br label %cond.end371, !dbg !9419

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9419
  br label %cond.end373, !dbg !9419

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9419
  br label %cond.end375, !dbg !9419

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9419
  br label %cond.end377, !dbg !9419

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9419
  br label %cond.end379, !dbg !9419

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9419
  br label %cond.end381, !dbg !9419

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9419
  br label %cond.end383, !dbg !9419

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9419
  br label %cond.end385, !dbg !9419

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9419
  br label %cond.end387, !dbg !9419

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9419
  br label %cond.end389, !dbg !9419

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9419
  br label %cond.end391, !dbg !9419

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9419
  br label %cond.end393, !dbg !9419

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9419
  br label %cond.end395, !dbg !9419

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9419
  br label %cond.end397, !dbg !9419

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9419
  br label %cond.end399, !dbg !9419

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9419
  br label %cond.end401, !dbg !9419

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9419
  br label %cond.end403, !dbg !9419

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9419
  br label %cond.end405, !dbg !9419

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9419
  br label %cond.end407, !dbg !9419

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9419
  br label %cond.end409, !dbg !9419

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9419
  br label %cond.end411, !dbg !9419

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9419
  br label %cond.end413, !dbg !9419

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9419
  br label %cond.end415, !dbg !9419

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9419
  br label %cond.end417, !dbg !9419

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9419
  br label %cond.end419, !dbg !9419

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9419
  br label %cond.end421, !dbg !9419

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9419
  br label %cond.end423, !dbg !9419

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9419
  br label %cond.end425, !dbg !9419

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9419
  br label %cond.end427, !dbg !9419

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9419
  br label %cond.end429, !dbg !9419

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9419
  br label %cond.end431, !dbg !9419

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9419
  br label %cond.end433, !dbg !9419

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9419
  br label %cond.end435, !dbg !9419

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9419
  br label %cond.end437, !dbg !9419

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9419
  br label %cond.end440, !dbg !9419

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9419

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9419
  br label %cond.end444, !dbg !9419

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9419
  %sub443 = sub i64 %72, 1, !dbg !9419
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !9419
  br label %cond.end444, !dbg !9419

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9419
  %sub446 = sub i32 %cond445, 12, !dbg !9420
  %add = add i32 %sub446, 1, !dbg !9421
  store i32 %add, i32* %retval, align 4, !dbg !9422
  br label %return, !dbg !9422

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9423
  %dec = add i64 %73, -1, !dbg !9423
  store i64 %dec, i64* %size.addr, align 8, !dbg !9423
  %74 = load i64, i64* %size.addr, align 8, !dbg !9424
  %shr = lshr i64 %74, 12, !dbg !9424
  store i64 %shr, i64* %size.addr, align 8, !dbg !9424
  %75 = load i64, i64* %size.addr, align 8, !dbg !9425
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9402
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9426
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9427
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !9426, !srcloc !9428
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9426
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9429
  %add.i = add i32 %79, 1, !dbg !9430
  store i32 %add.i, i32* %retval, align 4, !dbg !9431
  br label %return, !dbg !9431

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9432
  ret i32 %80, !dbg !9432
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !9433 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9394, metadata !DIExpression()), !dbg !9437
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9401, metadata !DIExpression()), !dbg !9439
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9440, metadata !DIExpression()), !dbg !9441
  %0 = load i64, i64* %n.addr, align 8, !dbg !9442
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9439
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9443
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9444
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !9443, !srcloc !9428
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9443
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9445
  %add.i = add i32 %4, 1, !dbg !9446
  %sub = sub i32 %add.i, 1, !dbg !9447
  ret i32 %sub, !dbg !9448
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !9449 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9453, metadata !DIExpression()), !dbg !9454
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9461
  ret i8* %0, !dbg !9462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscReadLramByte(i32 %iop_base, i16 zeroext %addr) #2 !dbg !9463 {
entry:
  %iop_base.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %byte_data = alloca i8, align 1
  %word_data = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !9466, metadata !DIExpression()), !dbg !9467
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !9468, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.declare(metadata i8* %byte_data, metadata !9470, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.declare(metadata i16* %word_data, metadata !9472, metadata !DIExpression()), !dbg !9473
  %0 = load i16, i16* %addr.addr, align 2, !dbg !9474
  %conv = zext i16 %0 to i32, !dbg !9474
  %and = and i32 %conv, 1, !dbg !9474
  %cmp = icmp ne i32 %and, 0, !dbg !9474
  br i1 %cmp, label %if.then, label %if.else, !dbg !9476

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %addr.addr, align 2, !dbg !9477
  %conv2 = zext i16 %1 to i32, !dbg !9477
  %sub = sub i32 %conv2, 1, !dbg !9477
  %conv3 = trunc i32 %sub to i16, !dbg !9477
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !9477
  %add = add i32 %2, 10, !dbg !9477
  call void @outw(i16 zeroext %conv3, i32 %add) #11, !dbg !9477
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !9479
  %add4 = add i32 %3, 8, !dbg !9479
  %call = call zeroext i16 @inw(i32 %add4) #11, !dbg !9479
  store i16 %call, i16* %word_data, align 2, !dbg !9480
  %4 = load i16, i16* %word_data, align 2, !dbg !9481
  %conv5 = zext i16 %4 to i32, !dbg !9481
  %shr = ashr i32 %conv5, 8, !dbg !9482
  %and6 = and i32 %shr, 255, !dbg !9483
  %conv7 = trunc i32 %and6 to i8, !dbg !9484
  store i8 %conv7, i8* %byte_data, align 1, !dbg !9485
  br label %if.end, !dbg !9486

if.else:                                          ; preds = %entry
  %5 = load i16, i16* %addr.addr, align 2, !dbg !9487
  %6 = load i32, i32* %iop_base.addr, align 4, !dbg !9487
  %add8 = add i32 %6, 10, !dbg !9487
  call void @outw(i16 zeroext %5, i32 %add8) #11, !dbg !9487
  %7 = load i32, i32* %iop_base.addr, align 4, !dbg !9489
  %add9 = add i32 %7, 8, !dbg !9489
  %call10 = call zeroext i16 @inw(i32 %add9) #11, !dbg !9489
  store i16 %call10, i16* %word_data, align 2, !dbg !9490
  %8 = load i16, i16* %word_data, align 2, !dbg !9491
  %conv11 = zext i16 %8 to i32, !dbg !9491
  %and12 = and i32 %conv11, 255, !dbg !9492
  %conv13 = trunc i32 %and12 to i8, !dbg !9491
  store i8 %conv13, i8* %byte_data, align 1, !dbg !9493
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i8, i8* %byte_data, align 1, !dbg !9494
  ret i8 %9, !dbg !9495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscMsgOutSDTR(%struct.asc_dvc_var* %asc_dvc, i8 zeroext %sdtr_period, i8 zeroext %sdtr_offset) #2 !dbg !9496 {
entry:
  %retval = alloca i8, align 1
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %sdtr_period.addr = alloca i8, align 1
  %sdtr_offset.addr = alloca i8, align 1
  %iop_base = alloca i32, align 4
  %sdtr_period_index = alloca i8, align 1
  %sdtr_buf = alloca %struct.ext_msg, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  store i8 %sdtr_period, i8* %sdtr_period.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sdtr_period.addr, metadata !9501, metadata !DIExpression()), !dbg !9502
  store i8 %sdtr_offset, i8* %sdtr_offset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sdtr_offset.addr, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !9505, metadata !DIExpression()), !dbg !9506
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9507
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !9508
  %1 = load i32, i32* %iop_base1, align 8, !dbg !9508
  store i32 %1, i32* %iop_base, align 4, !dbg !9506
  call void @llvm.dbg.declare(metadata i8* %sdtr_period_index, metadata !9509, metadata !DIExpression()), !dbg !9510
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9511
  %3 = load i8, i8* %sdtr_period.addr, align 1, !dbg !9512
  %call = call zeroext i8 @AscGetSynPeriodIndex(%struct.asc_dvc_var* %2, i8 zeroext %3) #11, !dbg !9513
  store i8 %call, i8* %sdtr_period_index, align 1, !dbg !9510
  call void @llvm.dbg.declare(metadata %struct.ext_msg* %sdtr_buf, metadata !9514, metadata !DIExpression()), !dbg !9541
  %msg_type = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %sdtr_buf, i32 0, i32 0, !dbg !9542
  store i8 1, i8* %msg_type, align 1, !dbg !9542
  %msg_len = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %sdtr_buf, i32 0, i32 1, !dbg !9542
  store i8 3, i8* %msg_len, align 1, !dbg !9542
  %msg_req = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %sdtr_buf, i32 0, i32 2, !dbg !9542
  store i8 1, i8* %msg_req, align 1, !dbg !9542
  %u_ext_msg = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %sdtr_buf, i32 0, i32 3, !dbg !9542
  %sdtr = bitcast %union.anon.81* %u_ext_msg to %struct.anon.82*, !dbg !9543
  %sdtr_xfer_period = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr, i32 0, i32 0, !dbg !9543
  %4 = load i8, i8* %sdtr_period.addr, align 1, !dbg !9544
  store i8 %4, i8* %sdtr_xfer_period, align 1, !dbg !9543
  %sdtr_req_ack_offset = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr, i32 0, i32 1, !dbg !9543
  %5 = load i8, i8* %sdtr_offset.addr, align 1, !dbg !9545
  store i8 %5, i8* %sdtr_req_ack_offset, align 1, !dbg !9543
  %res = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %sdtr_buf, i32 0, i32 4, !dbg !9542
  store i8 0, i8* %res, align 1, !dbg !9542
  %6 = load i8, i8* %sdtr_offset.addr, align 1, !dbg !9546
  %conv = zext i8 %6 to i32, !dbg !9546
  %and = and i32 %conv, 15, !dbg !9546
  %conv2 = trunc i32 %and to i8, !dbg !9546
  store i8 %conv2, i8* %sdtr_offset.addr, align 1, !dbg !9546
  %7 = load i8, i8* %sdtr_period_index, align 1, !dbg !9547
  %conv3 = zext i8 %7 to i32, !dbg !9547
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9549
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %8, i32 0, i32 35, !dbg !9550
  %9 = load i8, i8* %max_sdtr_index, align 1, !dbg !9550
  %conv4 = zext i8 %9 to i32, !dbg !9549
  %cmp = icmp sle i32 %conv3, %conv4, !dbg !9551
  br i1 %cmp, label %if.then, label %if.else, !dbg !9552

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %iop_base, align 4, !dbg !9553
  %11 = bitcast %struct.ext_msg* %sdtr_buf to i8*, !dbg !9555
  call void @AscMemWordCopyPtrToLram(i32 %10, i16 zeroext 0, i8* %11, i32 4) #11, !dbg !9556
  %12 = load i8, i8* %sdtr_period_index, align 1, !dbg !9557
  %conv6 = zext i8 %12 to i32, !dbg !9557
  %shl = shl i32 %conv6, 4, !dbg !9558
  %13 = load i8, i8* %sdtr_offset.addr, align 1, !dbg !9559
  %conv7 = zext i8 %13 to i32, !dbg !9559
  %or = or i32 %shl, %conv7, !dbg !9560
  %conv8 = trunc i32 %or to i8, !dbg !9561
  store i8 %conv8, i8* %retval, align 1, !dbg !9562
  br label %return, !dbg !9562

if.else:                                          ; preds = %entry
  %u_ext_msg9 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %sdtr_buf, i32 0, i32 3, !dbg !9563
  %sdtr10 = bitcast %union.anon.81* %u_ext_msg9 to %struct.anon.82*, !dbg !9563
  %sdtr_req_ack_offset11 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr10, i32 0, i32 1, !dbg !9563
  store i8 0, i8* %sdtr_req_ack_offset11, align 1, !dbg !9565
  %14 = load i32, i32* %iop_base, align 4, !dbg !9566
  %15 = bitcast %struct.ext_msg* %sdtr_buf to i8*, !dbg !9567
  call void @AscMemWordCopyPtrToLram(i32 %14, i16 zeroext 0, i8* %15, i32 4) #11, !dbg !9568
  store i8 0, i8* %retval, align 1, !dbg !9569
  br label %return, !dbg !9569

return:                                           ; preds = %if.else, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !9570
  ret i8 %16, !dbg !9570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %asc_dvc, i16 zeroext %err_code) #2 !dbg !9571 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %err_code.addr = alloca i16, align 2
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  store i16 %err_code, i16* %err_code.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %err_code.addr, metadata !9576, metadata !DIExpression()), !dbg !9577
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9578
  %err_code1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 1, !dbg !9580
  %1 = load i16, i16* %err_code1, align 4, !dbg !9580
  %conv = zext i16 %1 to i32, !dbg !9578
  %cmp = icmp eq i32 %conv, 0, !dbg !9581
  br i1 %cmp, label %if.then, label %if.end, !dbg !9582

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %err_code.addr, align 2, !dbg !9583
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9585
  %err_code3 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 1, !dbg !9586
  store i16 %2, i16* %err_code3, align 4, !dbg !9587
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9588
  %iop_base = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 0, !dbg !9589
  %5 = load i32, i32* %iop_base, align 8, !dbg !9589
  %6 = load i16, i16* %err_code.addr, align 2, !dbg !9590
  call void @AscWriteLramWord(i32 %5, i16 zeroext 48, i16 zeroext %6) #11, !dbg !9591
  br label %if.end, !dbg !9592

if.end:                                           ; preds = %if.then, %entry
  %7 = load i16, i16* %err_code.addr, align 2, !dbg !9593
  %conv4 = zext i16 %7 to i32, !dbg !9593
  ret i32 %conv4, !dbg !9594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscSgListToQueue(i32 %sg_list) #2 !dbg !9595 {
entry:
  %sg_list.addr = alloca i32, align 4
  %n_sg_list_qs = alloca i32, align 4
  store i32 %sg_list, i32* %sg_list.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_list.addr, metadata !9596, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.declare(metadata i32* %n_sg_list_qs, metadata !9598, metadata !DIExpression()), !dbg !9599
  %0 = load i32, i32* %sg_list.addr, align 4, !dbg !9600
  %sub = sub i32 %0, 1, !dbg !9601
  %div = sdiv i32 %sub, 7, !dbg !9602
  store i32 %div, i32* %n_sg_list_qs, align 4, !dbg !9603
  %1 = load i32, i32* %sg_list.addr, align 4, !dbg !9604
  %sub1 = sub i32 %1, 1, !dbg !9606
  %rem = srem i32 %sub1, 7, !dbg !9607
  %cmp = icmp ne i32 %rem, 0, !dbg !9608
  br i1 %cmp, label %if.then, label %if.end, !dbg !9609

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %n_sg_list_qs, align 4, !dbg !9610
  %inc = add i32 %2, 1, !dbg !9610
  store i32 %inc, i32* %n_sg_list_qs, align 4, !dbg !9610
  br label %if.end, !dbg !9611

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %n_sg_list_qs, align 4, !dbg !9612
  %add = add i32 %3, 1, !dbg !9613
  ret i32 %add, !dbg !9614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscGetNumOfFreeQueue(%struct.asc_dvc_var* %asc_dvc, i8 zeroext %target_ix, i8 zeroext %n_qs) #2 !dbg !9615 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %target_ix.addr = alloca i8, align 1
  %n_qs.addr = alloca i8, align 1
  %cur_used_qs = alloca i32, align 4
  %cur_free_qs = alloca i32, align 4
  %target_id = alloca i8, align 1
  %tid_no = alloca i8, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !9618, metadata !DIExpression()), !dbg !9619
  store i8 %target_ix, i8* %target_ix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %target_ix.addr, metadata !9620, metadata !DIExpression()), !dbg !9621
  store i8 %n_qs, i8* %n_qs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %n_qs.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.declare(metadata i32* %cur_used_qs, metadata !9624, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.declare(metadata i32* %cur_free_qs, metadata !9626, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.declare(metadata i8* %target_id, metadata !9628, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.declare(metadata i8* %tid_no, metadata !9630, metadata !DIExpression()), !dbg !9631
  %0 = load i8, i8* %target_ix.addr, align 1, !dbg !9632
  %conv = zext i8 %0 to i32, !dbg !9632
  %and = and i32 %conv, 7, !dbg !9632
  %shl = shl i32 1, %and, !dbg !9632
  %conv1 = trunc i32 %shl to i8, !dbg !9632
  store i8 %conv1, i8* %target_id, align 1, !dbg !9633
  %1 = load i8, i8* %target_ix.addr, align 1, !dbg !9634
  %conv2 = zext i8 %1 to i32, !dbg !9634
  %and3 = and i32 %conv2, 7, !dbg !9634
  %conv4 = trunc i32 %and3 to i8, !dbg !9634
  store i8 %conv4, i8* %tid_no, align 1, !dbg !9635
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9636
  %unit_not_ready = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %2, i32 0, i32 8, !dbg !9638
  %3 = load i8, i8* %unit_not_ready, align 1, !dbg !9638
  %conv5 = zext i8 %3 to i32, !dbg !9636
  %4 = load i8, i8* %target_id, align 1, !dbg !9639
  %conv6 = zext i8 %4 to i32, !dbg !9639
  %and7 = and i32 %conv5, %conv6, !dbg !9640
  %tobool = icmp ne i32 %and7, 0, !dbg !9640
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9641

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9642
  %queue_full_or_busy = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %5, i32 0, i32 9, !dbg !9643
  %6 = load i8, i8* %queue_full_or_busy, align 8, !dbg !9643
  %conv8 = zext i8 %6 to i32, !dbg !9642
  %7 = load i8, i8* %target_id, align 1, !dbg !9644
  %conv9 = zext i8 %7 to i32, !dbg !9644
  %and10 = and i32 %conv8, %conv9, !dbg !9645
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9645
  br i1 %tobool11, label %if.then, label %if.end, !dbg !9646

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9647
  br label %return, !dbg !9647

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i8, i8* %n_qs.addr, align 1, !dbg !9649
  %conv12 = zext i8 %8 to i32, !dbg !9649
  %cmp = icmp eq i32 %conv12, 1, !dbg !9651
  br i1 %cmp, label %if.then14, label %if.else, !dbg !9652

if.then14:                                        ; preds = %if.end
  %9 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9653
  %cur_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %9, i32 0, i32 17, !dbg !9655
  %10 = load i8, i8* %cur_total_qng, align 4, !dbg !9655
  %conv15 = zext i8 %10 to i32, !dbg !9656
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9657
  %last_q_shortage = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %11, i32 0, i32 19, !dbg !9658
  %12 = load i8, i8* %last_q_shortage, align 2, !dbg !9658
  %conv16 = zext i8 %12 to i32, !dbg !9659
  %add = add i32 %conv15, %conv16, !dbg !9660
  %add17 = add i32 %add, 2, !dbg !9661
  store i32 %add17, i32* %cur_used_qs, align 4, !dbg !9662
  br label %if.end21, !dbg !9663

if.else:                                          ; preds = %if.end
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9664
  %cur_total_qng18 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 17, !dbg !9666
  %14 = load i8, i8* %cur_total_qng18, align 4, !dbg !9666
  %conv19 = zext i8 %14 to i32, !dbg !9667
  %add20 = add i32 %conv19, 2, !dbg !9668
  store i32 %add20, i32* %cur_used_qs, align 4, !dbg !9669
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then14
  %15 = load i32, i32* %cur_used_qs, align 4, !dbg !9670
  %16 = load i8, i8* %n_qs.addr, align 1, !dbg !9672
  %conv22 = zext i8 %16 to i32, !dbg !9672
  %add23 = add i32 %15, %conv22, !dbg !9673
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9674
  %max_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 16, !dbg !9675
  %18 = load i8, i8* %max_total_qng, align 1, !dbg !9675
  %conv24 = zext i8 %18 to i32, !dbg !9676
  %cmp25 = icmp ule i32 %add23, %conv24, !dbg !9677
  br i1 %cmp25, label %if.then27, label %if.end38, !dbg !9678

if.then27:                                        ; preds = %if.end21
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9679
  %max_total_qng28 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 16, !dbg !9681
  %20 = load i8, i8* %max_total_qng28, align 1, !dbg !9681
  %conv29 = zext i8 %20 to i32, !dbg !9682
  %21 = load i32, i32* %cur_used_qs, align 4, !dbg !9683
  %sub = sub i32 %conv29, %21, !dbg !9684
  store i32 %sub, i32* %cur_free_qs, align 4, !dbg !9685
  %22 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9686
  %cur_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %22, i32 0, i32 21, !dbg !9688
  %23 = load i8, i8* %tid_no, align 1, !dbg !9689
  %idxprom = zext i8 %23 to i64, !dbg !9686
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng, i64 0, i64 %idxprom, !dbg !9686
  %24 = load i8, i8* %arrayidx, align 1, !dbg !9686
  %conv30 = zext i8 %24 to i32, !dbg !9686
  %25 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9690
  %max_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %25, i32 0, i32 22, !dbg !9691
  %26 = load i8, i8* %tid_no, align 1, !dbg !9692
  %idxprom31 = zext i8 %26 to i64, !dbg !9690
  %arrayidx32 = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng, i64 0, i64 %idxprom31, !dbg !9690
  %27 = load i8, i8* %arrayidx32, align 1, !dbg !9690
  %conv33 = zext i8 %27 to i32, !dbg !9690
  %cmp34 = icmp sge i32 %conv30, %conv33, !dbg !9693
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9694

if.then36:                                        ; preds = %if.then27
  store i32 0, i32* %retval, align 4, !dbg !9695
  br label %return, !dbg !9695

if.end37:                                         ; preds = %if.then27
  %28 = load i32, i32* %cur_free_qs, align 4, !dbg !9697
  store i32 %28, i32* %retval, align 4, !dbg !9698
  br label %return, !dbg !9698

if.end38:                                         ; preds = %if.end21
  %29 = load i8, i8* %n_qs.addr, align 1, !dbg !9699
  %conv39 = zext i8 %29 to i32, !dbg !9699
  %cmp40 = icmp sgt i32 %conv39, 1, !dbg !9701
  br i1 %cmp40, label %if.then42, label %if.end57, !dbg !9702

if.then42:                                        ; preds = %if.end38
  %30 = load i8, i8* %n_qs.addr, align 1, !dbg !9703
  %conv43 = zext i8 %30 to i32, !dbg !9703
  %31 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9706
  %last_q_shortage44 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %31, i32 0, i32 19, !dbg !9707
  %32 = load i8, i8* %last_q_shortage44, align 2, !dbg !9707
  %conv45 = zext i8 %32 to i32, !dbg !9706
  %cmp46 = icmp sgt i32 %conv43, %conv45, !dbg !9708
  br i1 %cmp46, label %land.lhs.true, label %if.end56, !dbg !9709

land.lhs.true:                                    ; preds = %if.then42
  %33 = load i8, i8* %n_qs.addr, align 1, !dbg !9710
  %conv48 = zext i8 %33 to i32, !dbg !9710
  %34 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9711
  %max_total_qng49 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %34, i32 0, i32 16, !dbg !9712
  %35 = load i8, i8* %max_total_qng49, align 1, !dbg !9712
  %conv50 = zext i8 %35 to i32, !dbg !9711
  %sub51 = sub i32 %conv50, 2, !dbg !9713
  %cmp52 = icmp sle i32 %conv48, %sub51, !dbg !9714
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !9715

if.then54:                                        ; preds = %land.lhs.true
  %36 = load i8, i8* %n_qs.addr, align 1, !dbg !9716
  %37 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9718
  %last_q_shortage55 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %37, i32 0, i32 19, !dbg !9719
  store i8 %36, i8* %last_q_shortage55, align 2, !dbg !9720
  br label %if.end56, !dbg !9721

if.end56:                                         ; preds = %if.then54, %land.lhs.true, %if.then42
  br label %if.end57, !dbg !9722

if.end57:                                         ; preds = %if.end56, %if.end38
  store i32 0, i32* %retval, align 4, !dbg !9723
  br label %return, !dbg !9723

return:                                           ; preds = %if.end57, %if.end37, %if.then36, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !9724
  ret i32 %38, !dbg !9724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscSendScsiQueue(%struct.asc_dvc_var* %asc_dvc, %struct.asc_scsi_q* %scsiq, i8 zeroext %n_q_required) #2 !dbg !9725 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %scsiq.addr = alloca %struct.asc_scsi_q*, align 8
  %n_q_required.addr = alloca i8, align 1
  %iop_base = alloca i32, align 4
  %free_q_head = alloca i8, align 1
  %next_qp = alloca i8, align 1
  %tid_no = alloca i8, align 1
  %target_ix = alloca i8, align 1
  %sta = alloca i32, align 4
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !9728, metadata !DIExpression()), !dbg !9729
  store %struct.asc_scsi_q* %scsiq, %struct.asc_scsi_q** %scsiq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_scsi_q** %scsiq.addr, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i8 %n_q_required, i8* %n_q_required.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %n_q_required.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata i8* %free_q_head, metadata !9736, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.declare(metadata i8* %next_qp, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata i8* %tid_no, metadata !9740, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.declare(metadata i8* %target_ix, metadata !9742, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.declare(metadata i32* %sta, metadata !9744, metadata !DIExpression()), !dbg !9745
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9746
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !9747
  %1 = load i32, i32* %iop_base1, align 8, !dbg !9747
  store i32 %1, i32* %iop_base, align 4, !dbg !9748
  %2 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !9749
  %q2 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %2, i32 0, i32 1, !dbg !9750
  %target_ix2 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2, i32 0, i32 1, !dbg !9751
  %3 = load i8, i8* %target_ix2, align 4, !dbg !9751
  store i8 %3, i8* %target_ix, align 1, !dbg !9752
  %4 = load i8, i8* %target_ix, align 1, !dbg !9753
  %conv = zext i8 %4 to i32, !dbg !9753
  %and = and i32 %conv, 7, !dbg !9753
  %conv3 = trunc i32 %and to i8, !dbg !9753
  store i8 %conv3, i8* %tid_no, align 1, !dbg !9754
  store i32 0, i32* %sta, align 4, !dbg !9755
  %5 = load i32, i32* %iop_base, align 4, !dbg !9756
  %call = call zeroext i16 @AscReadLramWord(i32 %5, i16 zeroext 88) #11, !dbg !9756
  %conv4 = trunc i16 %call to i8, !dbg !9757
  store i8 %conv4, i8* %free_q_head, align 1, !dbg !9758
  %6 = load i8, i8* %n_q_required.addr, align 1, !dbg !9759
  %conv5 = zext i8 %6 to i32, !dbg !9759
  %cmp = icmp sgt i32 %conv5, 1, !dbg !9761
  br i1 %cmp, label %if.then, label %if.else, !dbg !9762

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %iop_base, align 4, !dbg !9763
  %8 = load i8, i8* %free_q_head, align 1, !dbg !9765
  %9 = load i8, i8* %n_q_required.addr, align 1, !dbg !9766
  %call7 = call zeroext i8 @AscAllocMultipleFreeQueue(i32 %7, i8 zeroext %8, i8 zeroext %9) #11, !dbg !9767
  store i8 %call7, i8* %next_qp, align 1, !dbg !9768
  %10 = load i8, i8* %next_qp, align 1, !dbg !9769
  %conv8 = zext i8 %10 to i32, !dbg !9769
  %cmp9 = icmp ne i32 %conv8, 255, !dbg !9771
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !9772

if.then11:                                        ; preds = %if.then
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9773
  %last_q_shortage = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %11, i32 0, i32 19, !dbg !9775
  store i8 0, i8* %last_q_shortage, align 2, !dbg !9776
  %12 = load i8, i8* %n_q_required.addr, align 1, !dbg !9777
  %conv12 = zext i8 %12 to i32, !dbg !9777
  %sub = sub i32 %conv12, 1, !dbg !9778
  %conv13 = trunc i32 %sub to i16, !dbg !9777
  %13 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !9779
  %sg_head = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %13, i32 0, i32 3, !dbg !9780
  %14 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !9780
  %queue_cnt = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %14, i32 0, i32 1, !dbg !9781
  store i16 %conv13, i16* %queue_cnt, align 2, !dbg !9782
  %15 = load i8, i8* %free_q_head, align 1, !dbg !9783
  %16 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !9784
  %q1 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %16, i32 0, i32 0, !dbg !9785
  %q_no = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1, i32 0, i32 1, !dbg !9786
  store i8 %15, i8* %q_no, align 1, !dbg !9787
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9788
  %18 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !9789
  %19 = load i8, i8* %free_q_head, align 1, !dbg !9790
  %call14 = call i32 @AscPutReadySgListQueue(%struct.asc_dvc_var* %17, %struct.asc_scsi_q* %18, i8 zeroext %19) #11, !dbg !9791
  store i32 %call14, i32* %sta, align 4, !dbg !9792
  br label %if.end, !dbg !9793

if.end:                                           ; preds = %if.then11, %if.then
  br label %if.end29, !dbg !9794

if.else:                                          ; preds = %entry
  %20 = load i8, i8* %n_q_required.addr, align 1, !dbg !9795
  %conv15 = zext i8 %20 to i32, !dbg !9795
  %cmp16 = icmp eq i32 %conv15, 1, !dbg !9797
  br i1 %cmp16, label %if.then18, label %if.end28, !dbg !9798

if.then18:                                        ; preds = %if.else
  %21 = load i32, i32* %iop_base, align 4, !dbg !9799
  %22 = load i8, i8* %free_q_head, align 1, !dbg !9801
  %call19 = call zeroext i8 @AscAllocFreeQueue(i32 %21, i8 zeroext %22) #11, !dbg !9802
  store i8 %call19, i8* %next_qp, align 1, !dbg !9803
  %23 = load i8, i8* %next_qp, align 1, !dbg !9804
  %conv20 = zext i8 %23 to i32, !dbg !9804
  %cmp21 = icmp ne i32 %conv20, 255, !dbg !9806
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !9807

if.then23:                                        ; preds = %if.then18
  %24 = load i8, i8* %free_q_head, align 1, !dbg !9808
  %25 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !9810
  %q124 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %25, i32 0, i32 0, !dbg !9811
  %q_no25 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q124, i32 0, i32 1, !dbg !9812
  store i8 %24, i8* %q_no25, align 1, !dbg !9813
  %26 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9814
  %27 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !9815
  %28 = load i8, i8* %free_q_head, align 1, !dbg !9816
  %call26 = call i32 @AscPutReadyQueue(%struct.asc_dvc_var* %26, %struct.asc_scsi_q* %27, i8 zeroext %28) #11, !dbg !9817
  store i32 %call26, i32* %sta, align 4, !dbg !9818
  br label %if.end27, !dbg !9819

if.end27:                                         ; preds = %if.then23, %if.then18
  br label %if.end28, !dbg !9820

if.end28:                                         ; preds = %if.end27, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end
  %29 = load i32, i32* %sta, align 4, !dbg !9821
  %cmp30 = icmp eq i32 %29, 1, !dbg !9823
  br i1 %cmp30, label %if.then32, label %if.end37, !dbg !9824

if.then32:                                        ; preds = %if.end29
  %30 = load i32, i32* %iop_base, align 4, !dbg !9825
  %31 = load i8, i8* %next_qp, align 1, !dbg !9825
  %conv33 = zext i8 %31 to i16, !dbg !9825
  call void @AscWriteLramWord(i32 %30, i16 zeroext 88, i16 zeroext %conv33) #11, !dbg !9825
  %32 = load i8, i8* %n_q_required.addr, align 1, !dbg !9827
  %conv34 = zext i8 %32 to i32, !dbg !9827
  %33 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9828
  %cur_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %33, i32 0, i32 17, !dbg !9829
  %34 = load i8, i8* %cur_total_qng, align 4, !dbg !9830
  %conv35 = zext i8 %34 to i32, !dbg !9830
  %add = add i32 %conv35, %conv34, !dbg !9830
  %conv36 = trunc i32 %add to i8, !dbg !9830
  store i8 %conv36, i8* %cur_total_qng, align 4, !dbg !9830
  %35 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9831
  %cur_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %35, i32 0, i32 21, !dbg !9832
  %36 = load i8, i8* %tid_no, align 1, !dbg !9833
  %idxprom = zext i8 %36 to i64, !dbg !9831
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng, i64 0, i64 %idxprom, !dbg !9831
  %37 = load i8, i8* %arrayidx, align 1, !dbg !9834
  %inc = add i8 %37, 1, !dbg !9834
  store i8 %inc, i8* %arrayidx, align 1, !dbg !9834
  br label %if.end37, !dbg !9835

if.end37:                                         ; preds = %if.then32, %if.end29
  %38 = load i32, i32* %sta, align 4, !dbg !9836
  ret i32 %38, !dbg !9837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #2 !dbg !9838 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9844, metadata !DIExpression()), !dbg !9843
  %0 = load i16, i16* %value.addr, align 2, !dbg !9843
  %1 = load i32, i32* %port.addr, align 4, !dbg !9843
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #6, !dbg !9843, !srcloc !9845
  ret void, !dbg !9843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #2 !dbg !9846 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.declare(metadata i16* %value, metadata !9851, metadata !DIExpression()), !dbg !9850
  %0 = load i32, i32* %port.addr, align 4, !dbg !9850
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !9850, !srcloc !9852
  store i16 %1, i16* %value, align 2, !dbg !9850
  %2 = load i16, i16* %value, align 2, !dbg !9850
  ret i16 %2, !dbg !9850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscGetSynPeriodIndex(%struct.asc_dvc_var* %asc_dvc, i8 zeroext %syn_time) #2 !dbg !9853 {
entry:
  %retval = alloca i8, align 1
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %syn_time.addr = alloca i8, align 1
  %period_table = alloca i8*, align 8
  %max_index = alloca i32, align 4
  %min_index = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i8 %syn_time, i8* %syn_time.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %syn_time.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.declare(metadata i8** %period_table, metadata !9860, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.declare(metadata i32* %max_index, metadata !9862, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.declare(metadata i32* %min_index, metadata !9864, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9866, metadata !DIExpression()), !dbg !9867
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9868
  %sdtr_period_tbl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 25, !dbg !9869
  %1 = load i8*, i8** %sdtr_period_tbl, align 8, !dbg !9869
  store i8* %1, i8** %period_table, align 8, !dbg !9870
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9871
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %2, i32 0, i32 35, !dbg !9872
  %3 = load i8, i8* %max_sdtr_index, align 1, !dbg !9872
  %conv = zext i8 %3 to i32, !dbg !9873
  store i32 %conv, i32* %max_index, align 4, !dbg !9874
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !9875
  %min_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 34, !dbg !9876
  %5 = load i8, i8* %min_sdtr_index, align 2, !dbg !9876
  %conv1 = zext i8 %5 to i32, !dbg !9877
  store i32 %conv1, i32* %min_index, align 4, !dbg !9878
  %6 = load i8, i8* %syn_time.addr, align 1, !dbg !9879
  %conv2 = zext i8 %6 to i32, !dbg !9879
  %7 = load i8*, i8** %period_table, align 8, !dbg !9881
  %8 = load i32, i32* %max_index, align 4, !dbg !9882
  %idxprom = sext i32 %8 to i64, !dbg !9881
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !9881
  %9 = load i8, i8* %arrayidx, align 1, !dbg !9881
  %conv3 = zext i8 %9 to i32, !dbg !9881
  %cmp = icmp sle i32 %conv2, %conv3, !dbg !9883
  br i1 %cmp, label %if.then, label %if.else, !dbg !9884

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %min_index, align 4, !dbg !9885
  store i32 %10, i32* %i, align 4, !dbg !9888
  br label %for.cond, !dbg !9889

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !9890
  %12 = load i32, i32* %max_index, align 4, !dbg !9892
  %sub = sub i32 %12, 1, !dbg !9893
  %cmp5 = icmp slt i32 %11, %sub, !dbg !9894
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9895

for.body:                                         ; preds = %for.cond
  %13 = load i8, i8* %syn_time.addr, align 1, !dbg !9896
  %conv7 = zext i8 %13 to i32, !dbg !9896
  %14 = load i8*, i8** %period_table, align 8, !dbg !9899
  %15 = load i32, i32* %i, align 4, !dbg !9900
  %idxprom8 = sext i32 %15 to i64, !dbg !9899
  %arrayidx9 = getelementptr i8, i8* %14, i64 %idxprom8, !dbg !9899
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !9899
  %conv10 = zext i8 %16 to i32, !dbg !9899
  %cmp11 = icmp sle i32 %conv7, %conv10, !dbg !9901
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !9902

if.then13:                                        ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9903
  %conv14 = trunc i32 %17 to i8, !dbg !9905
  store i8 %conv14, i8* %retval, align 1, !dbg !9906
  br label %return, !dbg !9906

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9907

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !9908
  %inc = add i32 %18, 1, !dbg !9908
  store i32 %inc, i32* %i, align 4, !dbg !9908
  br label %for.cond, !dbg !9909, !llvm.loop !9910

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %max_index, align 4, !dbg !9912
  %conv15 = trunc i32 %19 to i8, !dbg !9913
  store i8 %conv15, i8* %retval, align 1, !dbg !9914
  br label %return, !dbg !9914

if.else:                                          ; preds = %entry
  %20 = load i32, i32* %max_index, align 4, !dbg !9915
  %add = add i32 %20, 1, !dbg !9917
  %conv16 = trunc i32 %add to i8, !dbg !9918
  store i8 %conv16, i8* %retval, align 1, !dbg !9919
  br label %return, !dbg !9919

return:                                           ; preds = %if.else, %for.end, %if.then13
  %21 = load i8, i8* %retval, align 1, !dbg !9920
  ret i8 %21, !dbg !9920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscMemWordCopyPtrToLram(i32 %iop_base, i16 zeroext %s_addr, i8* %s_buffer, i32 %words) #2 !dbg !9921 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %s_buffer.addr = alloca i8*, align 8
  %words.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !9924, metadata !DIExpression()), !dbg !9925
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  store i8* %s_buffer, i8** %s_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s_buffer.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  store i32 %words, i32* %words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %words.addr, metadata !9930, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9932, metadata !DIExpression()), !dbg !9933
  %0 = load i16, i16* %s_addr.addr, align 2, !dbg !9934
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !9934
  %add = add i32 %1, 10, !dbg !9934
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !9934
  store i32 0, i32* %i, align 4, !dbg !9935
  br label %for.cond, !dbg !9937

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9938
  %3 = load i32, i32* %words.addr, align 4, !dbg !9940
  %mul = mul i32 2, %3, !dbg !9941
  %cmp = icmp slt i32 %2, %mul, !dbg !9942
  br i1 %cmp, label %for.body, label %for.end, !dbg !9943

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s_buffer.addr, align 8, !dbg !9944
  %5 = load i32, i32* %i, align 4, !dbg !9944
  %add1 = add i32 %5, 1, !dbg !9944
  %idxprom = sext i32 %add1 to i64, !dbg !9944
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !9944
  %6 = load i8, i8* %arrayidx, align 1, !dbg !9944
  %conv = zext i8 %6 to i16, !dbg !9944
  %conv2 = zext i16 %conv to i32, !dbg !9944
  %shl = shl i32 %conv2, 8, !dbg !9944
  %7 = load i8*, i8** %s_buffer.addr, align 8, !dbg !9944
  %8 = load i32, i32* %i, align 4, !dbg !9944
  %idxprom3 = sext i32 %8 to i64, !dbg !9944
  %arrayidx4 = getelementptr i8, i8* %7, i64 %idxprom3, !dbg !9944
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !9944
  %conv5 = zext i8 %9 to i32, !dbg !9944
  %or = or i32 %shl, %conv5, !dbg !9944
  %conv6 = trunc i32 %or to i16, !dbg !9944
  %10 = load i32, i32* %iop_base.addr, align 4, !dbg !9944
  %add7 = add i32 %10, 8, !dbg !9944
  call void @outw(i16 zeroext %conv6, i32 %add7) #11, !dbg !9944
  br label %for.inc, !dbg !9946

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !9947
  %add8 = add i32 %11, 2, !dbg !9947
  store i32 %add8, i32* %i, align 4, !dbg !9947
  br label %for.cond, !dbg !9948, !llvm.loop !9949

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscWriteLramWord(i32 %iop_base, i16 zeroext %addr, i16 zeroext %word_val) #2 !dbg !9952 {
entry:
  %iop_base.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %word_val.addr = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  store i16 %word_val, i16* %word_val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %word_val.addr, metadata !9959, metadata !DIExpression()), !dbg !9960
  %0 = load i16, i16* %addr.addr, align 2, !dbg !9961
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !9961
  %add = add i32 %1, 10, !dbg !9961
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !9961
  %2 = load i16, i16* %word_val.addr, align 2, !dbg !9962
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !9962
  %add1 = add i32 %3, 8, !dbg !9962
  call void @outw(i16 zeroext %2, i32 %add1) #11, !dbg !9962
  ret void, !dbg !9963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AscReadLramWord(i32 %iop_base, i16 zeroext %addr) #2 !dbg !9964 {
entry:
  %iop_base.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %word_data = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.declare(metadata i16* %word_data, metadata !9971, metadata !DIExpression()), !dbg !9972
  %0 = load i16, i16* %addr.addr, align 2, !dbg !9973
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !9973
  %add = add i32 %1, 10, !dbg !9973
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !9973
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !9974
  %add1 = add i32 %2, 8, !dbg !9974
  %call = call zeroext i16 @inw(i32 %add1) #11, !dbg !9974
  store i16 %call, i16* %word_data, align 2, !dbg !9975
  %3 = load i16, i16* %word_data, align 2, !dbg !9976
  ret i16 %3, !dbg !9977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscAllocMultipleFreeQueue(i32 %iop_base, i8 zeroext %free_q_head, i8 zeroext %n_free_q) #2 !dbg !9978 {
entry:
  %iop_base.addr = alloca i32, align 4
  %free_q_head.addr = alloca i8, align 1
  %n_free_q.addr = alloca i8, align 1
  %i = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !9981, metadata !DIExpression()), !dbg !9982
  store i8 %free_q_head, i8* %free_q_head.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %free_q_head.addr, metadata !9983, metadata !DIExpression()), !dbg !9984
  store i8 %n_free_q, i8* %n_free_q.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %n_free_q.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.declare(metadata i8* %i, metadata !9987, metadata !DIExpression()), !dbg !9988
  store i8 0, i8* %i, align 1, !dbg !9989
  br label %for.cond, !dbg !9991

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8, i8* %i, align 1, !dbg !9992
  %conv = zext i8 %0 to i32, !dbg !9992
  %1 = load i8, i8* %n_free_q.addr, align 1, !dbg !9994
  %conv1 = zext i8 %1 to i32, !dbg !9994
  %cmp = icmp slt i32 %conv, %conv1, !dbg !9995
  br i1 %cmp, label %for.body, label %for.end, !dbg !9996

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !9997
  %3 = load i8, i8* %free_q_head.addr, align 1, !dbg !9999
  %call = call zeroext i8 @AscAllocFreeQueue(i32 %2, i8 zeroext %3) #11, !dbg !10000
  store i8 %call, i8* %free_q_head.addr, align 1, !dbg !10001
  %4 = load i8, i8* %free_q_head.addr, align 1, !dbg !10002
  %conv3 = zext i8 %4 to i32, !dbg !10002
  %cmp4 = icmp eq i32 %conv3, 255, !dbg !10004
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10005

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10006

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10007

for.inc:                                          ; preds = %if.end
  %5 = load i8, i8* %i, align 1, !dbg !10008
  %inc = add i8 %5, 1, !dbg !10008
  store i8 %inc, i8* %i, align 1, !dbg !10008
  br label %for.cond, !dbg !10009, !llvm.loop !10010

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i8, i8* %free_q_head.addr, align 1, !dbg !10012
  ret i8 %6, !dbg !10013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscPutReadySgListQueue(%struct.asc_dvc_var* %asc_dvc, %struct.asc_scsi_q* %scsiq, i8 zeroext %q_no) #2 !dbg !10014 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %scsiq.addr = alloca %struct.asc_scsi_q*, align 8
  %q_no.addr = alloca i8, align 1
  %sta = alloca i32, align 4
  %i = alloca i32, align 4
  %sg_head = alloca %struct.asc_sg_head*, align 8
  %scsi_sg_q = alloca %struct.asc_sg_list_q, align 1
  %saved_data_addr = alloca i32, align 4
  %saved_data_cnt = alloca i32, align 4
  %iop_base = alloca i32, align 4
  %sg_list_dwords = alloca i16, align 2
  %sg_index = alloca i16, align 2
  %sg_entry_cnt = alloca i16, align 2
  %q_addr = alloca i16, align 2
  %next_qp = alloca i8, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  store %struct.asc_scsi_q* %scsiq, %struct.asc_scsi_q** %scsiq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_scsi_q** %scsiq.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  store i8 %q_no, i8* %q_no.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_no.addr, metadata !10019, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.declare(metadata i32* %sta, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10023, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.declare(metadata %struct.asc_sg_head** %sg_head, metadata !10025, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.declare(metadata %struct.asc_sg_list_q* %scsi_sg_q, metadata !10027, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.declare(metadata i32* %saved_data_addr, metadata !10038, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata i32* %saved_data_cnt, metadata !10040, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !10042, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.declare(metadata i16* %sg_list_dwords, metadata !10044, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.declare(metadata i16* %sg_index, metadata !10046, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.declare(metadata i16* %sg_entry_cnt, metadata !10048, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.declare(metadata i16* %q_addr, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.declare(metadata i8* %next_qp, metadata !10052, metadata !DIExpression()), !dbg !10053
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10054
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !10055
  %1 = load i32, i32* %iop_base1, align 8, !dbg !10055
  store i32 %1, i32* %iop_base, align 4, !dbg !10056
  %2 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10057
  %sg_head2 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %2, i32 0, i32 3, !dbg !10058
  %3 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head2, align 8, !dbg !10058
  store %struct.asc_sg_head* %3, %struct.asc_sg_head** %sg_head, align 8, !dbg !10059
  %4 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10060
  %q1 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %4, i32 0, i32 0, !dbg !10061
  %data_addr = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1, i32 0, i32 6, !dbg !10062
  %5 = load i32, i32* %data_addr, align 8, !dbg !10062
  store i32 %5, i32* %saved_data_addr, align 4, !dbg !10063
  %6 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10064
  %q13 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %6, i32 0, i32 0, !dbg !10065
  %data_cnt = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q13, i32 0, i32 7, !dbg !10066
  %7 = load i32, i32* %data_cnt, align 4, !dbg !10066
  store i32 %7, i32* %saved_data_cnt, align 4, !dbg !10067
  %8 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !10068
  %sg_list = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %8, i32 0, i32 4, !dbg !10068
  %arrayidx = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list, i64 0, i64 0, !dbg !10068
  %addr = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx, i32 0, i32 0, !dbg !10068
  %9 = load i32, i32* %addr, align 4, !dbg !10068
  %10 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10069
  %q14 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %10, i32 0, i32 0, !dbg !10070
  %data_addr5 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q14, i32 0, i32 6, !dbg !10071
  store i32 %9, i32* %data_addr5, align 8, !dbg !10072
  %11 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !10073
  %sg_list6 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %11, i32 0, i32 4, !dbg !10073
  %arrayidx7 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list6, i64 0, i64 0, !dbg !10073
  %bytes = getelementptr inbounds %struct.asc_sg_list, %struct.asc_sg_list* %arrayidx7, i32 0, i32 1, !dbg !10073
  %12 = load i32, i32* %bytes, align 4, !dbg !10073
  %13 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10074
  %q18 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %13, i32 0, i32 0, !dbg !10075
  %data_cnt9 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q18, i32 0, i32 7, !dbg !10076
  store i32 %12, i32* %data_cnt9, align 4, !dbg !10077
  %14 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !10078
  %entry_cnt = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %14, i32 0, i32 0, !dbg !10079
  %15 = load i16, i16* %entry_cnt, align 4, !dbg !10079
  %conv = zext i16 %15 to i32, !dbg !10078
  %sub = sub i32 %conv, 1, !dbg !10080
  %conv10 = trunc i32 %sub to i16, !dbg !10078
  store i16 %conv10, i16* %sg_entry_cnt, align 2, !dbg !10081
  %16 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10082
  %conv11 = zext i16 %16 to i32, !dbg !10082
  %cmp = icmp ne i32 %conv11, 0, !dbg !10084
  br i1 %cmp, label %if.then, label %if.else85, !dbg !10085

if.then:                                          ; preds = %entry
  %17 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10086
  %q113 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %17, i32 0, i32 0, !dbg !10088
  %cntl = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q113, i32 0, i32 2, !dbg !10089
  %18 = load i8, i8* %cntl, align 2, !dbg !10090
  %conv14 = zext i8 %18 to i32, !dbg !10090
  %or = or i32 %conv14, 4, !dbg !10090
  %conv15 = trunc i32 %or to i8, !dbg !10090
  store i8 %conv15, i8* %cntl, align 2, !dbg !10090
  %19 = load i8, i8* %q_no.addr, align 1, !dbg !10091
  %conv16 = zext i8 %19 to i32, !dbg !10091
  %shl = shl i32 %conv16, 6, !dbg !10091
  %add = add i32 16384, %shl, !dbg !10091
  %conv17 = trunc i32 %add to i16, !dbg !10091
  store i16 %conv17, i16* %q_addr, align 2, !dbg !10092
  store i16 1, i16* %sg_index, align 2, !dbg !10093
  %20 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !10094
  %queue_cnt = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %20, i32 0, i32 1, !dbg !10095
  %21 = load i16, i16* %queue_cnt, align 2, !dbg !10095
  %conv18 = trunc i16 %21 to i8, !dbg !10094
  %22 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10096
  %q119 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %22, i32 0, i32 0, !dbg !10097
  %sg_queue_cnt = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q119, i32 0, i32 3, !dbg !10098
  store i8 %conv18, i8* %sg_queue_cnt, align 1, !dbg !10099
  %23 = load i8, i8* %q_no.addr, align 1, !dbg !10100
  %sg_head_qp = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 3, !dbg !10101
  store i8 %23, i8* %sg_head_qp, align 1, !dbg !10102
  %cntl20 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 2, !dbg !10103
  store i8 2, i8* %cntl20, align 1, !dbg !10104
  store i32 0, i32* %i, align 4, !dbg !10105
  br label %for.cond, !dbg !10107

for.cond:                                         ; preds = %for.inc, %if.then
  %24 = load i32, i32* %i, align 4, !dbg !10108
  %25 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !10110
  %queue_cnt21 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %25, i32 0, i32 1, !dbg !10111
  %26 = load i16, i16* %queue_cnt21, align 2, !dbg !10111
  %conv22 = zext i16 %26 to i32, !dbg !10110
  %cmp23 = icmp slt i32 %24, %conv22, !dbg !10112
  br i1 %cmp23, label %for.body, label %for.end, !dbg !10113

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %i, align 4, !dbg !10114
  %add25 = add i32 %27, 1, !dbg !10116
  %conv26 = trunc i32 %add25 to i8, !dbg !10114
  %seq_no = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 0, !dbg !10117
  store i8 %conv26, i8* %seq_no, align 1, !dbg !10118
  %28 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10119
  %conv27 = zext i16 %28 to i32, !dbg !10119
  %cmp28 = icmp sgt i32 %conv27, 7, !dbg !10121
  br i1 %cmp28, label %if.then30, label %if.else39, !dbg !10122

if.then30:                                        ; preds = %for.body
  store i16 14, i16* %sg_list_dwords, align 2, !dbg !10123
  %29 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10125
  %conv31 = zext i16 %29 to i32, !dbg !10125
  %sub32 = sub i32 %conv31, 7, !dbg !10125
  %conv33 = trunc i32 %sub32 to i16, !dbg !10125
  store i16 %conv33, i16* %sg_entry_cnt, align 2, !dbg !10125
  %30 = load i32, i32* %i, align 4, !dbg !10126
  %cmp34 = icmp eq i32 %30, 0, !dbg !10128
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !10129

if.then36:                                        ; preds = %if.then30
  %sg_list_cnt = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 4, !dbg !10130
  store i8 7, i8* %sg_list_cnt, align 1, !dbg !10132
  %sg_cur_list_cnt = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 5, !dbg !10133
  store i8 7, i8* %sg_cur_list_cnt, align 1, !dbg !10134
  br label %if.end, !dbg !10135

if.else:                                          ; preds = %if.then30
  %sg_list_cnt37 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 4, !dbg !10136
  store i8 6, i8* %sg_list_cnt37, align 1, !dbg !10138
  %sg_cur_list_cnt38 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 5, !dbg !10139
  store i8 6, i8* %sg_cur_list_cnt38, align 1, !dbg !10140
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then36
  br label %if.end64, !dbg !10141

if.else39:                                        ; preds = %for.body
  %cntl40 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 2, !dbg !10142
  %31 = load i8, i8* %cntl40, align 1, !dbg !10144
  %conv41 = zext i8 %31 to i32, !dbg !10144
  %or42 = or i32 %conv41, 8, !dbg !10144
  %conv43 = trunc i32 %or42 to i8, !dbg !10144
  store i8 %conv43, i8* %cntl40, align 1, !dbg !10144
  %32 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10145
  %conv44 = zext i16 %32 to i32, !dbg !10145
  %shl45 = shl i32 %conv44, 1, !dbg !10146
  %conv46 = trunc i32 %shl45 to i16, !dbg !10145
  store i16 %conv46, i16* %sg_list_dwords, align 2, !dbg !10147
  %33 = load i32, i32* %i, align 4, !dbg !10148
  %cmp47 = icmp eq i32 %33, 0, !dbg !10150
  br i1 %cmp47, label %if.then49, label %if.else54, !dbg !10151

if.then49:                                        ; preds = %if.else39
  %34 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10152
  %conv50 = trunc i16 %34 to i8, !dbg !10152
  %sg_list_cnt51 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 4, !dbg !10154
  store i8 %conv50, i8* %sg_list_cnt51, align 1, !dbg !10155
  %35 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10156
  %conv52 = trunc i16 %35 to i8, !dbg !10156
  %sg_cur_list_cnt53 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 5, !dbg !10157
  store i8 %conv52, i8* %sg_cur_list_cnt53, align 1, !dbg !10158
  br label %if.end63, !dbg !10159

if.else54:                                        ; preds = %if.else39
  %36 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10160
  %conv55 = zext i16 %36 to i32, !dbg !10160
  %sub56 = sub i32 %conv55, 1, !dbg !10162
  %conv57 = trunc i32 %sub56 to i8, !dbg !10160
  %sg_list_cnt58 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 4, !dbg !10163
  store i8 %conv57, i8* %sg_list_cnt58, align 1, !dbg !10164
  %37 = load i16, i16* %sg_entry_cnt, align 2, !dbg !10165
  %conv59 = zext i16 %37 to i32, !dbg !10165
  %sub60 = sub i32 %conv59, 1, !dbg !10166
  %conv61 = trunc i32 %sub60 to i8, !dbg !10165
  %sg_cur_list_cnt62 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 5, !dbg !10167
  store i8 %conv61, i8* %sg_cur_list_cnt62, align 1, !dbg !10168
  br label %if.end63

if.end63:                                         ; preds = %if.else54, %if.then49
  store i16 0, i16* %sg_entry_cnt, align 2, !dbg !10169
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end
  %38 = load i32, i32* %iop_base, align 4, !dbg !10170
  %39 = load i16, i16* %q_addr, align 2, !dbg !10171
  %conv65 = zext i16 %39 to i32, !dbg !10171
  %add66 = add i32 %conv65, 0, !dbg !10172
  %conv67 = trunc i32 %add66 to i16, !dbg !10173
  %call = call zeroext i8 @AscReadLramByte(i32 %38, i16 zeroext %conv67) #11, !dbg !10174
  store i8 %call, i8* %next_qp, align 1, !dbg !10175
  %40 = load i8, i8* %next_qp, align 1, !dbg !10176
  %q_no68 = getelementptr inbounds %struct.asc_sg_list_q, %struct.asc_sg_list_q* %scsi_sg_q, i32 0, i32 1, !dbg !10177
  store i8 %40, i8* %q_no68, align 1, !dbg !10178
  %41 = load i8, i8* %next_qp, align 1, !dbg !10179
  %conv69 = zext i8 %41 to i32, !dbg !10179
  %shl70 = shl i32 %conv69, 6, !dbg !10179
  %add71 = add i32 16384, %shl70, !dbg !10179
  %conv72 = trunc i32 %add71 to i16, !dbg !10179
  store i16 %conv72, i16* %q_addr, align 2, !dbg !10180
  %42 = load i32, i32* %iop_base, align 4, !dbg !10181
  %43 = load i16, i16* %q_addr, align 2, !dbg !10182
  %conv73 = zext i16 %43 to i32, !dbg !10182
  %add74 = add i32 %conv73, 2, !dbg !10183
  %conv75 = trunc i32 %add74 to i16, !dbg !10182
  %44 = bitcast %struct.asc_sg_list_q* %scsi_sg_q to i8*, !dbg !10184
  call void @AscMemWordCopyPtrToLram(i32 %42, i16 zeroext %conv75, i8* %44, i32 3) #11, !dbg !10185
  %45 = load i32, i32* %iop_base, align 4, !dbg !10186
  %46 = load i16, i16* %q_addr, align 2, !dbg !10187
  %conv76 = zext i16 %46 to i32, !dbg !10187
  %add77 = add i32 %conv76, 8, !dbg !10188
  %conv78 = trunc i32 %add77 to i16, !dbg !10187
  %47 = load %struct.asc_sg_head*, %struct.asc_sg_head** %sg_head, align 8, !dbg !10189
  %sg_list79 = getelementptr inbounds %struct.asc_sg_head, %struct.asc_sg_head* %47, i32 0, i32 4, !dbg !10190
  %48 = load i16, i16* %sg_index, align 2, !dbg !10191
  %idxprom = zext i16 %48 to i64, !dbg !10189
  %arrayidx80 = getelementptr [0 x %struct.asc_sg_list], [0 x %struct.asc_sg_list]* %sg_list79, i64 0, i64 %idxprom, !dbg !10189
  %49 = bitcast %struct.asc_sg_list* %arrayidx80 to i8*, !dbg !10192
  %50 = load i16, i16* %sg_list_dwords, align 2, !dbg !10193
  %conv81 = zext i16 %50 to i32, !dbg !10193
  call void @AscMemDWordCopyPtrToLram(i32 %45, i16 zeroext %conv78, i8* %49, i32 %conv81) #11, !dbg !10194
  %51 = load i16, i16* %sg_index, align 2, !dbg !10195
  %conv82 = zext i16 %51 to i32, !dbg !10195
  %add83 = add i32 %conv82, 7, !dbg !10195
  %conv84 = trunc i32 %add83 to i16, !dbg !10195
  store i16 %conv84, i16* %sg_index, align 2, !dbg !10195
  %52 = load i16, i16* %sg_index, align 2, !dbg !10196
  %53 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10197
  %next_sg_index = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %53, i32 0, i32 5, !dbg !10198
  store i16 %52, i16* %next_sg_index, align 2, !dbg !10199
  br label %for.inc, !dbg !10200

for.inc:                                          ; preds = %if.end64
  %54 = load i32, i32* %i, align 4, !dbg !10201
  %inc = add i32 %54, 1, !dbg !10201
  store i32 %inc, i32* %i, align 4, !dbg !10201
  br label %for.cond, !dbg !10202, !llvm.loop !10203

for.end:                                          ; preds = %for.cond
  br label %if.end90, !dbg !10205

if.else85:                                        ; preds = %entry
  %55 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10206
  %q186 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %55, i32 0, i32 0, !dbg !10208
  %cntl87 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q186, i32 0, i32 2, !dbg !10209
  %56 = load i8, i8* %cntl87, align 2, !dbg !10210
  %conv88 = zext i8 %56 to i32, !dbg !10210
  %and = and i32 %conv88, -5, !dbg !10210
  %conv89 = trunc i32 %and to i8, !dbg !10210
  store i8 %conv89, i8* %cntl87, align 2, !dbg !10210
  br label %if.end90

if.end90:                                         ; preds = %if.else85, %for.end
  %57 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10211
  %58 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10212
  %59 = load i8, i8* %q_no.addr, align 1, !dbg !10213
  %call91 = call i32 @AscPutReadyQueue(%struct.asc_dvc_var* %57, %struct.asc_scsi_q* %58, i8 zeroext %59) #11, !dbg !10214
  store i32 %call91, i32* %sta, align 4, !dbg !10215
  %60 = load i32, i32* %saved_data_addr, align 4, !dbg !10216
  %61 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10217
  %q192 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %61, i32 0, i32 0, !dbg !10218
  %data_addr93 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q192, i32 0, i32 6, !dbg !10219
  store i32 %60, i32* %data_addr93, align 8, !dbg !10220
  %62 = load i32, i32* %saved_data_cnt, align 4, !dbg !10221
  %63 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10222
  %q194 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %63, i32 0, i32 0, !dbg !10223
  %data_cnt95 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q194, i32 0, i32 7, !dbg !10224
  store i32 %62, i32* %data_cnt95, align 4, !dbg !10225
  %64 = load i32, i32* %sta, align 4, !dbg !10226
  ret i32 %64, !dbg !10227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscAllocFreeQueue(i32 %iop_base, i8 zeroext %free_q_head) #2 !dbg !10228 {
entry:
  %retval = alloca i8, align 1
  %iop_base.addr = alloca i32, align 4
  %free_q_head.addr = alloca i8, align 1
  %q_addr = alloca i16, align 2
  %next_qp = alloca i8, align 1
  %q_status = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  store i8 %free_q_head, i8* %free_q_head.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %free_q_head.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata i16* %q_addr, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata i8* %next_qp, metadata !10237, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.declare(metadata i8* %q_status, metadata !10239, metadata !DIExpression()), !dbg !10240
  %0 = load i8, i8* %free_q_head.addr, align 1, !dbg !10241
  %conv = zext i8 %0 to i32, !dbg !10241
  %shl = shl i32 %conv, 6, !dbg !10241
  %add = add i32 16384, %shl, !dbg !10241
  %conv1 = trunc i32 %add to i16, !dbg !10241
  store i16 %conv1, i16* %q_addr, align 2, !dbg !10242
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !10243
  %2 = load i16, i16* %q_addr, align 2, !dbg !10244
  %conv2 = zext i16 %2 to i32, !dbg !10244
  %add3 = add i32 %conv2, 2, !dbg !10245
  %conv4 = trunc i32 %add3 to i16, !dbg !10246
  %call = call zeroext i8 @AscReadLramByte(i32 %1, i16 zeroext %conv4) #11, !dbg !10247
  store i8 %call, i8* %q_status, align 1, !dbg !10248
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !10249
  %4 = load i16, i16* %q_addr, align 2, !dbg !10250
  %conv5 = zext i16 %4 to i32, !dbg !10250
  %add6 = add i32 %conv5, 0, !dbg !10251
  %conv7 = trunc i32 %add6 to i16, !dbg !10252
  %call8 = call zeroext i8 @AscReadLramByte(i32 %3, i16 zeroext %conv7) #11, !dbg !10253
  store i8 %call8, i8* %next_qp, align 1, !dbg !10254
  %5 = load i8, i8* %q_status, align 1, !dbg !10255
  %conv9 = zext i8 %5 to i32, !dbg !10255
  %and = and i32 %conv9, 1, !dbg !10257
  %cmp = icmp eq i32 %and, 0, !dbg !10258
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10259

land.lhs.true:                                    ; preds = %entry
  %6 = load i8, i8* %next_qp, align 1, !dbg !10260
  %conv11 = zext i8 %6 to i32, !dbg !10260
  %cmp12 = icmp ne i32 %conv11, 255, !dbg !10261
  br i1 %cmp12, label %if.then, label %if.end, !dbg !10262

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8, i8* %next_qp, align 1, !dbg !10263
  store i8 %7, i8* %retval, align 1, !dbg !10264
  br label %return, !dbg !10264

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8 -1, i8* %retval, align 1, !dbg !10265
  br label %return, !dbg !10265

return:                                           ; preds = %if.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !10266
  ret i8 %8, !dbg !10266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscPutReadyQueue(%struct.asc_dvc_var* %asc_dvc, %struct.asc_scsi_q* %scsiq, i8 zeroext %q_no) #2 !dbg !10267 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %scsiq.addr = alloca %struct.asc_scsi_q*, align 8
  %q_no.addr = alloca i8, align 1
  %q_addr = alloca i16, align 2
  %tid_no = alloca i8, align 1
  %sdtr_data = alloca i8, align 1
  %syn_period_ix = alloca i8, align 1
  %syn_offset = alloca i8, align 1
  %iop_base = alloca i32, align 4
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !10268, metadata !DIExpression()), !dbg !10269
  store %struct.asc_scsi_q* %scsiq, %struct.asc_scsi_q** %scsiq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_scsi_q** %scsiq.addr, metadata !10270, metadata !DIExpression()), !dbg !10271
  store i8 %q_no, i8* %q_no.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_no.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.declare(metadata i16* %q_addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.declare(metadata i8* %tid_no, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.declare(metadata i8* %sdtr_data, metadata !10278, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.declare(metadata i8* %syn_period_ix, metadata !10280, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.declare(metadata i8* %syn_offset, metadata !10282, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !10284, metadata !DIExpression()), !dbg !10285
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10286
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !10287
  %1 = load i32, i32* %iop_base1, align 8, !dbg !10287
  store i32 %1, i32* %iop_base, align 4, !dbg !10288
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10289
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %2, i32 0, i32 5, !dbg !10291
  %3 = load i8, i8* %init_sdtr, align 4, !dbg !10291
  %conv = zext i8 %3 to i32, !dbg !10289
  %4 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10292
  %q1 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %4, i32 0, i32 0, !dbg !10293
  %target_id = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q1, i32 0, i32 4, !dbg !10294
  %5 = load i8, i8* %target_id, align 4, !dbg !10294
  %conv2 = zext i8 %5 to i32, !dbg !10292
  %and = and i32 %conv, %conv2, !dbg !10295
  %cmp = icmp ne i32 %and, 0, !dbg !10296
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10297

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10298
  %sdtr_done = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %6, i32 0, i32 6, !dbg !10299
  %7 = load i8, i8* %sdtr_done, align 1, !dbg !10299
  %conv4 = zext i8 %7 to i32, !dbg !10298
  %8 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10300
  %q15 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %8, i32 0, i32 0, !dbg !10301
  %target_id6 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q15, i32 0, i32 4, !dbg !10302
  %9 = load i8, i8* %target_id6, align 4, !dbg !10302
  %conv7 = zext i8 %9 to i32, !dbg !10300
  %and8 = and i32 %conv4, %conv7, !dbg !10303
  %cmp9 = icmp eq i32 %and8, 0, !dbg !10304
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10305

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10306
  %q2 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %10, i32 0, i32 1, !dbg !10306
  %target_ix = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q2, i32 0, i32 1, !dbg !10306
  %11 = load i8, i8* %target_ix, align 4, !dbg !10306
  %conv11 = zext i8 %11 to i32, !dbg !10306
  %and12 = and i32 %conv11, 7, !dbg !10306
  %conv13 = trunc i32 %and12 to i8, !dbg !10306
  store i8 %conv13, i8* %tid_no, align 1, !dbg !10308
  %12 = load i32, i32* %iop_base, align 4, !dbg !10309
  %13 = load i8, i8* %tid_no, align 1, !dbg !10309
  %conv14 = zext i8 %13 to i16, !dbg !10309
  %conv15 = zext i16 %conv14 to i32, !dbg !10309
  %add = add i32 16, %conv15, !dbg !10309
  %conv16 = trunc i32 %add to i16, !dbg !10309
  %call = call zeroext i8 @AscReadLramByte(i32 %12, i16 zeroext %conv16) #11, !dbg !10309
  store i8 %call, i8* %sdtr_data, align 1, !dbg !10310
  %14 = load i8, i8* %sdtr_data, align 1, !dbg !10311
  %conv17 = zext i8 %14 to i32, !dbg !10311
  %shr = ashr i32 %conv17, 4, !dbg !10312
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10313
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %15, i32 0, i32 35, !dbg !10314
  %16 = load i8, i8* %max_sdtr_index, align 1, !dbg !10314
  %conv18 = zext i8 %16 to i32, !dbg !10313
  %sub = sub i32 %conv18, 1, !dbg !10315
  %and19 = and i32 %shr, %sub, !dbg !10316
  %conv20 = trunc i32 %and19 to i8, !dbg !10317
  store i8 %conv20, i8* %syn_period_ix, align 1, !dbg !10318
  %17 = load i8, i8* %sdtr_data, align 1, !dbg !10319
  %conv21 = zext i8 %17 to i32, !dbg !10319
  %and22 = and i32 %conv21, 15, !dbg !10320
  %conv23 = trunc i32 %and22 to i8, !dbg !10319
  store i8 %conv23, i8* %syn_offset, align 1, !dbg !10321
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10322
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10323
  %sdtr_period_tbl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 25, !dbg !10324
  %20 = load i8*, i8** %sdtr_period_tbl, align 8, !dbg !10324
  %21 = load i8, i8* %syn_period_ix, align 1, !dbg !10325
  %idxprom = zext i8 %21 to i64, !dbg !10323
  %arrayidx = getelementptr i8, i8* %20, i64 %idxprom, !dbg !10323
  %22 = load i8, i8* %arrayidx, align 1, !dbg !10323
  %23 = load i8, i8* %syn_offset, align 1, !dbg !10326
  %call24 = call zeroext i8 @AscMsgOutSDTR(%struct.asc_dvc_var* %18, i8 zeroext %22, i8 zeroext %23) #11, !dbg !10327
  %24 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10328
  %q125 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %24, i32 0, i32 0, !dbg !10329
  %cntl = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q125, i32 0, i32 2, !dbg !10330
  %25 = load i8, i8* %cntl, align 2, !dbg !10331
  %conv26 = zext i8 %25 to i32, !dbg !10331
  %or = or i32 %conv26, 64, !dbg !10331
  %conv27 = trunc i32 %or to i8, !dbg !10331
  store i8 %conv27, i8* %cntl, align 2, !dbg !10331
  br label %if.end, !dbg !10332

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %26 = load i8, i8* %q_no.addr, align 1, !dbg !10333
  %conv28 = zext i8 %26 to i32, !dbg !10333
  %shl = shl i32 %conv28, 6, !dbg !10333
  %add29 = add i32 16384, %shl, !dbg !10333
  %conv30 = trunc i32 %add29 to i16, !dbg !10333
  store i16 %conv30, i16* %q_addr, align 2, !dbg !10334
  %27 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10335
  %q131 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %27, i32 0, i32 0, !dbg !10337
  %target_id32 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q131, i32 0, i32 4, !dbg !10338
  %28 = load i8, i8* %target_id32, align 4, !dbg !10338
  %conv33 = zext i8 %28 to i32, !dbg !10335
  %29 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10339
  %use_tagged_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %29, i32 0, i32 7, !dbg !10340
  %30 = load i8, i8* %use_tagged_qng, align 2, !dbg !10340
  %conv34 = zext i8 %30 to i32, !dbg !10339
  %and35 = and i32 %conv33, %conv34, !dbg !10341
  %cmp36 = icmp eq i32 %and35, 0, !dbg !10342
  br i1 %cmp36, label %if.then38, label %if.end43, !dbg !10343

if.then38:                                        ; preds = %if.end
  %31 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10344
  %q239 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %31, i32 0, i32 1, !dbg !10346
  %tag_code = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q239, i32 0, i32 4, !dbg !10347
  %32 = load i8, i8* %tag_code, align 1, !dbg !10348
  %conv40 = zext i8 %32 to i32, !dbg !10348
  %and41 = and i32 %conv40, -33, !dbg !10348
  %conv42 = trunc i32 %and41 to i8, !dbg !10348
  store i8 %conv42, i8* %tag_code, align 1, !dbg !10348
  br label %if.end43, !dbg !10349

if.end43:                                         ; preds = %if.then38, %if.end
  %33 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10350
  %q144 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %33, i32 0, i32 0, !dbg !10351
  %status = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q144, i32 0, i32 0, !dbg !10352
  store i8 0, i8* %status, align 8, !dbg !10353
  %34 = load i32, i32* %iop_base, align 4, !dbg !10354
  %35 = load i16, i16* %q_addr, align 2, !dbg !10355
  %conv45 = zext i16 %35 to i32, !dbg !10355
  %add46 = add i32 %conv45, 36, !dbg !10356
  %conv47 = trunc i32 %add46 to i16, !dbg !10355
  %36 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10357
  %cdbptr = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %36, i32 0, i32 2, !dbg !10358
  %37 = load i8*, i8** %cdbptr, align 8, !dbg !10358
  %38 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10359
  %q248 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %38, i32 0, i32 1, !dbg !10360
  %cdb_len = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %q248, i32 0, i32 3, !dbg !10361
  %39 = load i8, i8* %cdb_len, align 2, !dbg !10361
  %conv49 = zext i8 %39 to i32, !dbg !10359
  %shr50 = ashr i32 %conv49, 1, !dbg !10362
  call void @AscMemWordCopyPtrToLram(i32 %34, i16 zeroext %conv47, i8* %37, i32 %shr50) #11, !dbg !10363
  %40 = load i32, i32* %iop_base, align 4, !dbg !10364
  %41 = load i16, i16* %q_addr, align 2, !dbg !10365
  %conv51 = zext i16 %41 to i32, !dbg !10365
  %add52 = add i32 %conv51, 4, !dbg !10366
  %conv53 = trunc i32 %add52 to i16, !dbg !10365
  %42 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10367
  %q154 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %42, i32 0, i32 0, !dbg !10368
  %cntl55 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q154, i32 0, i32 2, !dbg !10369
  call void @DvcPutScsiQ(i32 %40, i16 zeroext %conv53, i8* %cntl55, i32 17) #11, !dbg !10370
  %43 = load i32, i32* %iop_base, align 4, !dbg !10371
  %44 = load i16, i16* %q_addr, align 2, !dbg !10372
  %conv56 = zext i16 %44 to i32, !dbg !10372
  %add57 = add i32 %conv56, 2, !dbg !10373
  %conv58 = trunc i32 %add57 to i16, !dbg !10374
  %45 = load %struct.asc_scsi_q*, %struct.asc_scsi_q** %scsiq.addr, align 8, !dbg !10375
  %q159 = getelementptr inbounds %struct.asc_scsi_q, %struct.asc_scsi_q* %45, i32 0, i32 0, !dbg !10376
  %q_no60 = getelementptr inbounds %struct.asc_scsiq_1, %struct.asc_scsiq_1* %q159, i32 0, i32 1, !dbg !10377
  %46 = load i8, i8* %q_no60, align 1, !dbg !10377
  %conv61 = zext i8 %46 to i16, !dbg !10378
  %conv62 = zext i16 %conv61 to i32, !dbg !10378
  %shl63 = shl i32 %conv62, 8, !dbg !10379
  %or64 = or i32 %shl63, 1, !dbg !10380
  %conv65 = trunc i32 %or64 to i16, !dbg !10381
  call void @AscWriteLramWord(i32 %43, i16 zeroext %conv58, i16 zeroext %conv65) #11, !dbg !10382
  ret i32 1, !dbg !10383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscMemDWordCopyPtrToLram(i32 %iop_base, i16 zeroext %s_addr, i8* %s_buffer, i32 %dwords) #2 !dbg !10384 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %s_buffer.addr = alloca i8*, align 8
  %dwords.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !10387, metadata !DIExpression()), !dbg !10388
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  store i8* %s_buffer, i8** %s_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s_buffer.addr, metadata !10391, metadata !DIExpression()), !dbg !10392
  store i32 %dwords, i32* %dwords.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dwords.addr, metadata !10393, metadata !DIExpression()), !dbg !10394
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10395, metadata !DIExpression()), !dbg !10396
  %0 = load i16, i16* %s_addr.addr, align 2, !dbg !10397
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !10397
  %add = add i32 %1, 10, !dbg !10397
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !10397
  store i32 0, i32* %i, align 4, !dbg !10398
  br label %for.cond, !dbg !10400

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10401
  %3 = load i32, i32* %dwords.addr, align 4, !dbg !10403
  %mul = mul i32 4, %3, !dbg !10404
  %cmp = icmp slt i32 %2, %mul, !dbg !10405
  br i1 %cmp, label %for.body, label %for.end, !dbg !10406

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s_buffer.addr, align 8, !dbg !10407
  %5 = load i32, i32* %i, align 4, !dbg !10407
  %add1 = add i32 %5, 1, !dbg !10407
  %idxprom = sext i32 %add1 to i64, !dbg !10407
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !10407
  %6 = load i8, i8* %arrayidx, align 1, !dbg !10407
  %conv = zext i8 %6 to i16, !dbg !10407
  %conv2 = zext i16 %conv to i32, !dbg !10407
  %shl = shl i32 %conv2, 8, !dbg !10407
  %7 = load i8*, i8** %s_buffer.addr, align 8, !dbg !10407
  %8 = load i32, i32* %i, align 4, !dbg !10407
  %idxprom3 = sext i32 %8 to i64, !dbg !10407
  %arrayidx4 = getelementptr i8, i8* %7, i64 %idxprom3, !dbg !10407
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !10407
  %conv5 = zext i8 %9 to i32, !dbg !10407
  %or = or i32 %shl, %conv5, !dbg !10407
  %conv6 = trunc i32 %or to i16, !dbg !10407
  %10 = load i32, i32* %iop_base.addr, align 4, !dbg !10407
  %add7 = add i32 %10, 8, !dbg !10407
  call void @outw(i16 zeroext %conv6, i32 %add7) #11, !dbg !10407
  %11 = load i8*, i8** %s_buffer.addr, align 8, !dbg !10409
  %12 = load i32, i32* %i, align 4, !dbg !10409
  %add8 = add i32 %12, 3, !dbg !10409
  %idxprom9 = sext i32 %add8 to i64, !dbg !10409
  %arrayidx10 = getelementptr i8, i8* %11, i64 %idxprom9, !dbg !10409
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !10409
  %conv11 = zext i8 %13 to i16, !dbg !10409
  %conv12 = zext i16 %conv11 to i32, !dbg !10409
  %shl13 = shl i32 %conv12, 8, !dbg !10409
  %14 = load i8*, i8** %s_buffer.addr, align 8, !dbg !10409
  %15 = load i32, i32* %i, align 4, !dbg !10409
  %add14 = add i32 %15, 2, !dbg !10409
  %idxprom15 = sext i32 %add14 to i64, !dbg !10409
  %arrayidx16 = getelementptr i8, i8* %14, i64 %idxprom15, !dbg !10409
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !10409
  %conv17 = zext i8 %16 to i32, !dbg !10409
  %or18 = or i32 %shl13, %conv17, !dbg !10409
  %conv19 = trunc i32 %or18 to i16, !dbg !10409
  %17 = load i32, i32* %iop_base.addr, align 4, !dbg !10409
  %add20 = add i32 %17, 8, !dbg !10409
  call void @outw(i16 zeroext %conv19, i32 %add20) #11, !dbg !10409
  br label %for.inc, !dbg !10410

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !10411
  %add21 = add i32 %18, 4, !dbg !10411
  store i32 %add21, i32* %i, align 4, !dbg !10411
  br label %for.cond, !dbg !10412, !llvm.loop !10413

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DvcPutScsiQ(i32 %iop_base, i16 zeroext %s_addr, i8* %outbuf, i32 %words) #2 !dbg !10416 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %outbuf.addr = alloca i8*, align 8
  %words.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  store i8* %outbuf, i8** %outbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %outbuf.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store i32 %words, i32* %words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %words.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10425, metadata !DIExpression()), !dbg !10426
  %0 = load i16, i16* %s_addr.addr, align 2, !dbg !10427
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !10427
  %add = add i32 %1, 10, !dbg !10427
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !10427
  store i32 0, i32* %i, align 4, !dbg !10428
  br label %for.cond, !dbg !10430

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10431
  %3 = load i32, i32* %words.addr, align 4, !dbg !10433
  %mul = mul i32 2, %3, !dbg !10434
  %cmp = icmp slt i32 %2, %mul, !dbg !10435
  br i1 %cmp, label %for.body, label %for.end, !dbg !10436

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !10437
  %cmp1 = icmp eq i32 %4, 4, !dbg !10440
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !10441

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !10442
  %cmp2 = icmp eq i32 %5, 20, !dbg !10443
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10444

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10445

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8*, i8** %outbuf.addr, align 8, !dbg !10447
  %7 = load i32, i32* %i, align 4, !dbg !10447
  %add3 = add i32 %7, 1, !dbg !10447
  %idxprom = sext i32 %add3 to i64, !dbg !10447
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !10447
  %8 = load i8, i8* %arrayidx, align 1, !dbg !10447
  %conv = zext i8 %8 to i16, !dbg !10447
  %conv4 = zext i16 %conv to i32, !dbg !10447
  %shl = shl i32 %conv4, 8, !dbg !10447
  %9 = load i8*, i8** %outbuf.addr, align 8, !dbg !10447
  %10 = load i32, i32* %i, align 4, !dbg !10447
  %idxprom5 = sext i32 %10 to i64, !dbg !10447
  %arrayidx6 = getelementptr i8, i8* %9, i64 %idxprom5, !dbg !10447
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !10447
  %conv7 = zext i8 %11 to i32, !dbg !10447
  %or = or i32 %shl, %conv7, !dbg !10447
  %conv8 = trunc i32 %or to i16, !dbg !10447
  %12 = load i32, i32* %iop_base.addr, align 4, !dbg !10447
  %add9 = add i32 %12, 8, !dbg !10447
  call void @outw(i16 zeroext %conv8, i32 %add9) #11, !dbg !10447
  br label %for.inc, !dbg !10448

for.inc:                                          ; preds = %if.end, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !10449
  %add10 = add i32 %13, 2, !dbg !10449
  store i32 %add10, i32* %i, align 4, !dbg !10449
  br label %for.cond, !dbg !10450, !llvm.loop !10451

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10453
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_bufflen(%struct.scsi_cmnd* %cmd) #2 !dbg !10454 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10459
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !10460
  %length = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 1, !dbg !10461
  %1 = load i32, i32* %length, align 8, !dbg !10461
  ret i32 %1, !dbg !10462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adv_get_sglist(%struct.asc_board* %boardp, %struct.adv_req* %reqp, %struct.adv_scsi_req_q* %scsiqp, %struct.scsi_cmnd* %scp, i32 %use_sg) #2 !dbg !10463 {
entry:
  %retval = alloca i32, align 4
  %boardp.addr = alloca %struct.asc_board*, align 8
  %reqp.addr = alloca %struct.adv_req*, align 8
  %scsiqp.addr = alloca %struct.adv_scsi_req_q*, align 8
  %scp.addr = alloca %struct.scsi_cmnd*, align 8
  %use_sg.addr = alloca i32, align 4
  %sgblkp = alloca %struct.adv_sgblk*, align 8
  %prev_sgblkp = alloca %struct.adv_sgblk*, align 8
  %slp = alloca %struct.scatterlist*, align 8
  %sg_elem_cnt = alloca i32, align 4
  %sg_block = alloca %struct.adv_sg_block*, align 8
  %prev_sg_block = alloca %struct.adv_sg_block*, align 8
  %sgblk_paddr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.asc_board* %boardp, %struct.asc_board** %boardp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  store %struct.adv_req* %reqp, %struct.adv_req** %reqp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_req** %reqp.addr, metadata !10468, metadata !DIExpression()), !dbg !10469
  store %struct.adv_scsi_req_q* %scsiqp, %struct.adv_scsi_req_q** %scsiqp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_scsi_req_q** %scsiqp.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  store %struct.scsi_cmnd* %scp, %struct.scsi_cmnd** %scp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp.addr, metadata !10472, metadata !DIExpression()), !dbg !10473
  store i32 %use_sg, i32* %use_sg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_sg.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.declare(metadata %struct.adv_sgblk** %sgblkp, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.declare(metadata %struct.adv_sgblk** %prev_sgblkp, metadata !10478, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %slp, metadata !10480, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.declare(metadata i32* %sg_elem_cnt, metadata !10482, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.declare(metadata %struct.adv_sg_block** %sg_block, metadata !10484, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.declare(metadata %struct.adv_sg_block** %prev_sg_block, metadata !10486, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata i64* %sgblk_paddr, metadata !10488, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10490, metadata !DIExpression()), !dbg !10491
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !10492
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %0) #11, !dbg !10493
  store %struct.scatterlist* %call, %struct.scatterlist** %slp, align 8, !dbg !10494
  %1 = load i32, i32* %use_sg.addr, align 4, !dbg !10495
  store i32 %1, i32* %sg_elem_cnt, align 4, !dbg !10496
  store %struct.adv_sgblk* null, %struct.adv_sgblk** %prev_sgblkp, align 8, !dbg !10497
  store %struct.adv_sg_block* null, %struct.adv_sg_block** %prev_sg_block, align 8, !dbg !10498
  %2 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !10499
  %sgblkp1 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %2, i32 0, i32 4, !dbg !10500
  store %struct.adv_sgblk* null, %struct.adv_sgblk** %sgblkp1, align 16, !dbg !10501
  br label %for.cond, !dbg !10502

for.cond:                                         ; preds = %for.end, %entry
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !10503
  %adv_sgblk_pool = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 19, !dbg !10507
  %4 = load %struct.dma_pool*, %struct.dma_pool** %adv_sgblk_pool, align 8, !dbg !10507
  %call2 = call i8* @dma_pool_alloc(%struct.dma_pool* %4, i32 2592, i64* %sgblk_paddr) #11, !dbg !10508
  %5 = bitcast i8* %call2 to %struct.adv_sgblk*, !dbg !10508
  store %struct.adv_sgblk* %5, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10509
  %6 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10510
  %tobool = icmp ne %struct.adv_sgblk* %6, null, !dbg !10510
  br i1 %tobool, label %if.end, label %if.then, !dbg !10512

if.then:                                          ; preds = %for.cond
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !10513
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 1, !dbg !10513
  %8 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10513
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 0, !dbg !10513
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10513
  %call3 = call i8* @shost_priv(%struct.Scsi_Host* %9) #11, !dbg !10513
  %10 = bitcast i8* %call3 to %struct.asc_board*, !dbg !10513
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %10, i32 0, i32 12, !dbg !10513
  %adv_build_nosg = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 8, !dbg !10513
  %11 = load i32, i32* %adv_build_nosg, align 8, !dbg !10513
  %add = add i32 %11, 1, !dbg !10513
  store i32 %add, i32* %adv_build_nosg, align 8, !dbg !10513
  br label %while.cond, !dbg !10515

while.cond:                                       ; preds = %while.body, %if.then
  %12 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !10516
  %sgblkp4 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %12, i32 0, i32 4, !dbg !10517
  %13 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp4, align 16, !dbg !10517
  store %struct.adv_sgblk* %13, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10518
  %cmp = icmp ne %struct.adv_sgblk* %13, null, !dbg !10519
  br i1 %cmp, label %while.body, label %while.end, !dbg !10515

while.body:                                       ; preds = %while.cond
  %14 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10520
  %next_sgblkp = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %14, i32 0, i32 2, !dbg !10522
  %15 = load %struct.adv_sgblk*, %struct.adv_sgblk** %next_sgblkp, align 8, !dbg !10522
  %16 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !10523
  %sgblkp5 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %16, i32 0, i32 4, !dbg !10524
  store %struct.adv_sgblk* %15, %struct.adv_sgblk** %sgblkp5, align 16, !dbg !10525
  %17 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10526
  %next_sgblkp6 = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %17, i32 0, i32 2, !dbg !10527
  store %struct.adv_sgblk* null, %struct.adv_sgblk** %next_sgblkp6, align 8, !dbg !10528
  %18 = load %struct.asc_board*, %struct.asc_board** %boardp.addr, align 8, !dbg !10529
  %adv_sgblk_pool7 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %18, i32 0, i32 19, !dbg !10530
  %19 = load %struct.dma_pool*, %struct.dma_pool** %adv_sgblk_pool7, align 8, !dbg !10530
  %20 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10531
  %21 = bitcast %struct.adv_sgblk* %20 to i8*, !dbg !10531
  %22 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10532
  %sg_addr = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %22, i32 0, i32 1, !dbg !10533
  %23 = load i64, i64* %sg_addr, align 8, !dbg !10533
  call void @dma_pool_free(%struct.dma_pool* %19, i8* %21, i64 %23) #11, !dbg !10534
  br label %while.cond, !dbg !10515, !llvm.loop !10535

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !10537
  br label %return, !dbg !10537

if.end:                                           ; preds = %for.cond
  %24 = load i64, i64* %sgblk_paddr, align 8, !dbg !10538
  %25 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10539
  %sg_addr8 = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %25, i32 0, i32 1, !dbg !10540
  store i64 %24, i64* %sg_addr8, align 8, !dbg !10541
  %26 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10542
  %next_sgblkp9 = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %26, i32 0, i32 2, !dbg !10543
  store %struct.adv_sgblk* null, %struct.adv_sgblk** %next_sgblkp9, align 8, !dbg !10544
  %27 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10545
  %sg_block10 = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %27, i32 0, i32 0, !dbg !10546
  store %struct.adv_sg_block* %sg_block10, %struct.adv_sg_block** %sg_block, align 8, !dbg !10547
  %28 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !10548
  %sgblkp11 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %28, i32 0, i32 4, !dbg !10550
  %29 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp11, align 16, !dbg !10550
  %cmp12 = icmp eq %struct.adv_sgblk* %29, null, !dbg !10551
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !10552

if.then13:                                        ; preds = %if.end
  %30 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10553
  %31 = load %struct.adv_req*, %struct.adv_req** %reqp.addr, align 8, !dbg !10555
  %sgblkp14 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %31, i32 0, i32 4, !dbg !10556
  store %struct.adv_sgblk* %30, %struct.adv_sgblk** %sgblkp14, align 16, !dbg !10557
  %32 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10558
  %33 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !10559
  %sg_list_ptr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %33, i32 0, i32 23, !dbg !10560
  store %struct.adv_sg_block* %32, %struct.adv_sg_block** %sg_list_ptr, align 8, !dbg !10561
  %34 = load i64, i64* %sgblk_paddr, align 8, !dbg !10562
  %conv = trunc i64 %34 to i32, !dbg !10562
  %35 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !10563
  %sg_real_addr = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %35, i32 0, i32 17, !dbg !10564
  store i32 %conv, i32* %sg_real_addr, align 8, !dbg !10565
  br label %if.end17, !dbg !10566

if.else:                                          ; preds = %if.end
  %36 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10567
  %37 = load %struct.adv_sgblk*, %struct.adv_sgblk** %prev_sgblkp, align 8, !dbg !10569
  %next_sgblkp15 = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %37, i32 0, i32 2, !dbg !10570
  store %struct.adv_sgblk* %36, %struct.adv_sgblk** %next_sgblkp15, align 8, !dbg !10571
  %38 = load i64, i64* %sgblk_paddr, align 8, !dbg !10572
  %conv16 = trunc i64 %38 to i32, !dbg !10572
  %39 = load %struct.adv_sg_block*, %struct.adv_sg_block** %prev_sg_block, align 8, !dbg !10573
  %sg_ptr = getelementptr inbounds %struct.adv_sg_block, %struct.adv_sg_block* %39, i32 0, i32 4, !dbg !10574
  store i32 %conv16, i32* %sg_ptr, align 4, !dbg !10575
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then13
  store i32 0, i32* %i, align 4, !dbg !10576
  br label %for.cond18, !dbg !10578

for.cond18:                                       ; preds = %for.inc, %if.end17
  %40 = load i32, i32* %i, align 4, !dbg !10579
  %cmp19 = icmp slt i32 %40, 15, !dbg !10581
  br i1 %cmp19, label %for.body, label %for.end, !dbg !10582

for.body:                                         ; preds = %for.cond18
  %41 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !10583
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %41, i32 0, i32 3, !dbg !10583
  %42 = load i64, i64* %dma_address, align 8, !dbg !10583
  %conv21 = trunc i64 %42 to i32, !dbg !10583
  %43 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10585
  %sg_list = getelementptr inbounds %struct.adv_sg_block, %struct.adv_sg_block* %43, i32 0, i32 5, !dbg !10586
  %44 = load i32, i32* %i, align 4, !dbg !10587
  %idxprom = sext i32 %44 to i64, !dbg !10585
  %arrayidx = getelementptr [15 x %struct.anon.80], [15 x %struct.anon.80]* %sg_list, i64 0, i64 %idxprom, !dbg !10585
  %sg_addr22 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %arrayidx, i32 0, i32 0, !dbg !10588
  store i32 %conv21, i32* %sg_addr22, align 4, !dbg !10589
  %45 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !10590
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %45, i32 0, i32 4, !dbg !10590
  %46 = load i32, i32* %dma_length, align 8, !dbg !10590
  %47 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10591
  %sg_list23 = getelementptr inbounds %struct.adv_sg_block, %struct.adv_sg_block* %47, i32 0, i32 5, !dbg !10592
  %48 = load i32, i32* %i, align 4, !dbg !10593
  %idxprom24 = sext i32 %48 to i64, !dbg !10591
  %arrayidx25 = getelementptr [15 x %struct.anon.80], [15 x %struct.anon.80]* %sg_list23, i64 0, i64 %idxprom24, !dbg !10591
  %sg_count = getelementptr inbounds %struct.anon.80, %struct.anon.80* %arrayidx25, i32 0, i32 1, !dbg !10594
  store i32 %46, i32* %sg_count, align 4, !dbg !10595
  %49 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !10596
  %dma_length26 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %49, i32 0, i32 4, !dbg !10596
  %50 = load i32, i32* %dma_length26, align 8, !dbg !10596
  %add27 = add i32 %50, 512, !dbg !10596
  %sub = sub i32 %add27, 1, !dbg !10596
  %div = udiv i32 %sub, 512, !dbg !10596
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp.addr, align 8, !dbg !10596
  %device28 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 1, !dbg !10596
  %52 = load %struct.scsi_device*, %struct.scsi_device** %device28, align 8, !dbg !10596
  %host29 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %52, i32 0, i32 0, !dbg !10596
  %53 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host29, align 8, !dbg !10596
  %call30 = call i8* @shost_priv(%struct.Scsi_Host* %53) #11, !dbg !10596
  %54 = bitcast i8* %call30 to %struct.asc_board*, !dbg !10596
  %asc_stats31 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %54, i32 0, i32 12, !dbg !10596
  %xfer_sect = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats31, i32 0, i32 15, !dbg !10596
  %55 = load i32, i32* %xfer_sect, align 4, !dbg !10596
  %add32 = add i32 %55, %div, !dbg !10596
  store i32 %add32, i32* %xfer_sect, align 4, !dbg !10596
  %56 = load i32, i32* %sg_elem_cnt, align 4, !dbg !10597
  %dec = add i32 %56, -1, !dbg !10597
  store i32 %dec, i32* %sg_elem_cnt, align 4, !dbg !10597
  %cmp33 = icmp eq i32 %dec, 0, !dbg !10599
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !10600

if.then35:                                        ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !10601
  %add36 = add i32 %57, 1, !dbg !10603
  %conv37 = trunc i32 %add36 to i8, !dbg !10601
  %58 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10604
  %sg_cnt = getelementptr inbounds %struct.adv_sg_block, %struct.adv_sg_block* %58, i32 0, i32 3, !dbg !10605
  store i8 %conv37, i8* %sg_cnt, align 1, !dbg !10606
  %59 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10607
  %sg_ptr38 = getelementptr inbounds %struct.adv_sg_block, %struct.adv_sg_block* %59, i32 0, i32 4, !dbg !10608
  store i32 0, i32* %sg_ptr38, align 4, !dbg !10609
  store i32 1, i32* %retval, align 4, !dbg !10610
  br label %return, !dbg !10610

if.end39:                                         ; preds = %for.body
  %60 = load %struct.scatterlist*, %struct.scatterlist** %slp, align 8, !dbg !10611
  %call40 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %60) #11, !dbg !10612
  store %struct.scatterlist* %call40, %struct.scatterlist** %slp, align 8, !dbg !10613
  br label %for.inc, !dbg !10614

for.inc:                                          ; preds = %if.end39
  %61 = load i32, i32* %i, align 4, !dbg !10615
  %inc = add i32 %61, 1, !dbg !10615
  store i32 %inc, i32* %i, align 4, !dbg !10615
  br label %for.cond18, !dbg !10616, !llvm.loop !10617

for.end:                                          ; preds = %for.cond18
  %62 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10619
  %sg_cnt41 = getelementptr inbounds %struct.adv_sg_block, %struct.adv_sg_block* %62, i32 0, i32 3, !dbg !10620
  store i8 15, i8* %sg_cnt41, align 1, !dbg !10621
  %63 = load %struct.adv_sg_block*, %struct.adv_sg_block** %sg_block, align 8, !dbg !10622
  store %struct.adv_sg_block* %63, %struct.adv_sg_block** %prev_sg_block, align 8, !dbg !10623
  %64 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !10624
  store %struct.adv_sgblk* %64, %struct.adv_sgblk** %prev_sgblkp, align 8, !dbg !10625
  br label %for.cond, !dbg !10626, !llvm.loop !10627

return:                                           ; preds = %if.then35, %while.end
  %65 = load i32, i32* %retval, align 4, !dbg !10630
  ret i32 %65, !dbg !10630
}

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #1

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %adv_dvc) #2 !dbg !10631 {
entry:
  %retval = alloca %struct.adv_carr_t*, align 8
  %adv_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %carrp = alloca %struct.adv_carr_t*, align 8
  %next_vpa = alloca i32, align 4
  store %struct.adv_dvc_var* %adv_dvc, %struct.adv_dvc_var** %adv_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc.addr, metadata !10635, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.declare(metadata %struct.adv_carr_t** %carrp, metadata !10637, metadata !DIExpression()), !dbg !10638
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !10639
  %carr_freelist = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 23, !dbg !10640
  %1 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carr_freelist, align 8, !dbg !10640
  store %struct.adv_carr_t* %1, %struct.adv_carr_t** %carrp, align 8, !dbg !10638
  call void @llvm.dbg.declare(metadata i32* %next_vpa, metadata !10641, metadata !DIExpression()), !dbg !10642
  %2 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrp, align 8, !dbg !10643
  %next_vpa1 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %2, i32 0, i32 3, !dbg !10643
  %3 = load i32, i32* %next_vpa1, align 4, !dbg !10643
  store i32 %3, i32* %next_vpa, align 4, !dbg !10642
  %4 = load i32, i32* %next_vpa, align 4, !dbg !10644
  %cmp = icmp eq i32 %4, 0, !dbg !10646
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10647

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %next_vpa, align 4, !dbg !10648
  %cmp2 = icmp eq i32 %5, -1, !dbg !10649
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10650

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.adv_carr_t* null, %struct.adv_carr_t** %retval, align 8, !dbg !10651
  br label %return, !dbg !10651

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !10653
  %7 = load i32, i32* %next_vpa, align 4, !dbg !10654
  %call = call %struct.adv_carr_t* @adv_get_carrier(%struct.adv_dvc_var* %6, i32 %7) #11, !dbg !10655
  %8 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !10656
  %carr_freelist3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %8, i32 0, i32 23, !dbg !10657
  store %struct.adv_carr_t* %call, %struct.adv_carr_t** %carr_freelist3, align 8, !dbg !10658
  %9 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrp, align 8, !dbg !10659
  %next_vpa4 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %9, i32 0, i32 3, !dbg !10660
  store i32 0, i32* %next_vpa4, align 4, !dbg !10661
  %10 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrp, align 8, !dbg !10662
  store %struct.adv_carr_t* %10, %struct.adv_carr_t** %retval, align 8, !dbg !10663
  br label %return, !dbg !10663

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct.adv_carr_t*, %struct.adv_carr_t** %retval, align 8, !dbg !10664
  ret %struct.adv_carr_t* %11, !dbg !10664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !10665 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !10670, metadata !DIExpression()), !dbg !10671
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10672, metadata !DIExpression()), !dbg !10671
  %0 = load i8, i8* %val.addr, align 1, !dbg !10671
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10671
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #6, !dbg !10671, !srcloc !10673
  ret void, !dbg !10671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !10674 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10677, metadata !DIExpression()), !dbg !10678
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10679, metadata !DIExpression()), !dbg !10678
  %0 = load i32, i32* %val.addr, align 4, !dbg !10678
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10678
  %2 = bitcast i8* %1 to i32*, !dbg !10678
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #6, !dbg !10678, !srcloc !10680
  ret void, !dbg !10678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.adv_carr_t* @adv_get_carrier(%struct.adv_dvc_var* %adv_dvc, i32 %offset) #2 !dbg !10681 {
entry:
  %adv_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %offset.addr = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.adv_dvc_var* %adv_dvc, %struct.adv_dvc_var** %adv_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc.addr, metadata !10684, metadata !DIExpression()), !dbg !10685
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10686, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10688, metadata !DIExpression()), !dbg !10689
  br label %do.body, !dbg !10690

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %offset.addr, align 4, !dbg !10691
  %conv = zext i32 %0 to i64, !dbg !10691
  %cmp = icmp ugt i64 %conv, 4096, !dbg !10691
  %lnot = xor i1 %cmp, true, !dbg !10691
  %lnot2 = xor i1 %lnot, true, !dbg !10691
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10691
  %conv3 = sext i32 %lnot.ext to i64, !dbg !10691
  %tobool = icmp ne i64 %conv3, 0, !dbg !10691
  br i1 %tobool, label %if.then, label %if.end, !dbg !10694

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !10691

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !10695

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !10697

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !10695

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 4240, i32 0, i64 12) #6, !dbg !10699, !srcloc !10701
  br label %do.end7, !dbg !10699

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !10695

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 299) #6, !dbg !10702, !srcloc !10705
  unreachable, !dbg !10706

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !10695

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !10695

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !10694

do.end11:                                         ; preds = %if.end
  %1 = load i32, i32* %offset.addr, align 4, !dbg !10707
  %conv12 = zext i32 %1 to i64, !dbg !10707
  %div = udiv i64 %conv12, 16, !dbg !10708
  %conv13 = trunc i64 %div to i32, !dbg !10707
  store i32 %conv13, i32* %index, align 4, !dbg !10709
  %2 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !10710
  %carrier = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %2, i32 0, i32 22, !dbg !10711
  %3 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier, align 8, !dbg !10711
  %4 = load i32, i32* %index, align 4, !dbg !10712
  %idxprom = sext i32 %4 to i64, !dbg !10710
  %arrayidx = getelementptr %struct.adv_carr_t, %struct.adv_carr_t* %3, i64 %idxprom, !dbg !10710
  ret %struct.adv_carr_t* %arrayidx, !dbg !10713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !10714 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10719, metadata !DIExpression()), !dbg !10721
  %0 = load i64, i64* %__edi, align 8, !dbg !10721
  store i64 %0, i64* %__edi, align 8, !dbg !10721
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10722, metadata !DIExpression()), !dbg !10721
  %1 = load i64, i64* %__esi, align 8, !dbg !10721
  store i64 %1, i64* %__esi, align 8, !dbg !10721
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10723, metadata !DIExpression()), !dbg !10721
  %2 = load i64, i64* %__edx, align 8, !dbg !10721
  store i64 %2, i64* %__edx, align 8, !dbg !10721
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10724, metadata !DIExpression()), !dbg !10721
  %3 = load i64, i64* %__ecx, align 8, !dbg !10721
  store i64 %3, i64* %__ecx, align 8, !dbg !10721
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10725, metadata !DIExpression()), !dbg !10721
  %4 = load i64, i64* %__eax, align 8, !dbg !10721
  store i64 %4, i64* %__eax, align 8, !dbg !10721
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !10721
  %6 = call i64 @llvm.read_register.i64(metadata !6131), !dbg !10721
  %7 = load i64, i64* %f.addr, align 8, !dbg !10721
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !10721, !srcloc !10726
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !10721
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !10721
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10721
  call void @llvm.write_register.i64(metadata !6131, i64 %asmresult1), !dbg !10721
  ret void, !dbg !10727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscInitAsc1000Driver(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !10728 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %fw = alloca %struct.firmware*, align 8
  %fwname = alloca [19 x i8], align 16
  %err = alloca i32, align 4
  %chksum = alloca i64, align 8
  %warn_code = alloca i32, align 4
  %iop_base = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !10731, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !10733, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.declare(metadata [19 x i8]* %fwname, metadata !10745, metadata !DIExpression()), !dbg !10749
  %0 = bitcast [19 x i8]* %fwname to i8*, !dbg !10749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([19 x i8], [19 x i8]* @__const.AscInitAsc1000Driver.fwname, i32 0, i32 0), i64 19, i1 false), !dbg !10749
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10750, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.declare(metadata i64* %chksum, metadata !10752, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.declare(metadata i32* %warn_code, metadata !10754, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !10756, metadata !DIExpression()), !dbg !10757
  %1 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10758
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %1, i32 0, i32 0, !dbg !10759
  %2 = load i32, i32* %iop_base1, align 8, !dbg !10759
  store i32 %2, i32* %iop_base, align 4, !dbg !10760
  store i32 0, i32* %warn_code, align 4, !dbg !10761
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10762
  %dvc_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 2, !dbg !10764
  %4 = load i16, i16* %dvc_cntl, align 2, !dbg !10764
  %conv = zext i16 %4 to i32, !dbg !10762
  %and = and i32 %conv, 512, !dbg !10765
  %tobool = icmp ne i32 %and, 0, !dbg !10765
  br i1 %tobool, label %land.lhs.true, label %if.end41, !dbg !10766

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10767
  %init_state = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %5, i32 0, i32 20, !dbg !10768
  %6 = load i16, i16* %init_state, align 8, !dbg !10768
  %conv2 = zext i16 %6 to i32, !dbg !10767
  %and3 = and i32 %conv2, 256, !dbg !10769
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10769
  br i1 %tobool4, label %if.end41, label %if.then, !dbg !10770

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10771
  %call = call zeroext i1 @AscResetChipAndScsiBus(%struct.asc_dvc_var* %7) #11, !dbg !10773
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10774
  %scsi_reset_wait = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %8, i32 0, i32 13, !dbg !10774
  %9 = load i8, i8* %scsi_reset_wait, align 8, !dbg !10774
  %conv5 = zext i8 %9 to i32, !dbg !10774
  %mul = mul i32 %conv5, 1000, !dbg !10774
  %10 = call i1 @llvm.is.constant.i32(i32 %mul), !dbg !10774
  br i1 %10, label %land.lhs.true6, label %cond.false, !dbg !10774

land.lhs.true6:                                   ; preds = %if.then
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10774
  %scsi_reset_wait7 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %11, i32 0, i32 13, !dbg !10774
  %12 = load i8, i8* %scsi_reset_wait7, align 8, !dbg !10774
  %conv8 = zext i8 %12 to i32, !dbg !10774
  %mul9 = mul i32 %conv8, 1000, !dbg !10774
  %cmp = icmp sle i32 %mul9, 5, !dbg !10774
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10774

cond.true:                                        ; preds = %land.lhs.true6
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10775
  %scsi_reset_wait11 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 13, !dbg !10775
  %14 = load i8, i8* %scsi_reset_wait11, align 8, !dbg !10775
  %conv12 = zext i8 %14 to i32, !dbg !10775
  %mul13 = mul i32 %conv12, 1000, !dbg !10775
  %mul14 = mul i32 %mul13, 1000, !dbg !10775
  %15 = call i1 @llvm.is.constant.i32(i32 %mul14), !dbg !10775
  br i1 %15, label %if.then15, label %if.else29, !dbg !10778

if.then15:                                        ; preds = %cond.true
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10779
  %scsi_reset_wait16 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %16, i32 0, i32 13, !dbg !10779
  %17 = load i8, i8* %scsi_reset_wait16, align 8, !dbg !10779
  %conv17 = zext i8 %17 to i32, !dbg !10779
  %mul18 = mul i32 %conv17, 1000, !dbg !10779
  %mul19 = mul i32 %mul18, 1000, !dbg !10779
  %div = sdiv i32 %mul19, 20000, !dbg !10779
  %cmp20 = icmp sge i32 %div, 1, !dbg !10779
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !10782

if.then22:                                        ; preds = %if.then15
  call void @__bad_udelay() #11, !dbg !10779
  br label %if.end, !dbg !10779

if.else:                                          ; preds = %if.then15
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10779
  %scsi_reset_wait23 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %18, i32 0, i32 13, !dbg !10779
  %19 = load i8, i8* %scsi_reset_wait23, align 8, !dbg !10779
  %conv24 = zext i8 %19 to i32, !dbg !10779
  %mul25 = mul i32 %conv24, 1000, !dbg !10779
  %mul26 = mul i32 %mul25, 1000, !dbg !10779
  %conv27 = sext i32 %mul26 to i64, !dbg !10779
  %mul28 = mul i64 %conv27, 4295, !dbg !10779
  call void @__const_udelay(i64 %mul28) #11, !dbg !10779
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then22
  br label %if.end35, !dbg !10782

if.else29:                                        ; preds = %cond.true
  %20 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10783
  %scsi_reset_wait30 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %20, i32 0, i32 13, !dbg !10783
  %21 = load i8, i8* %scsi_reset_wait30, align 8, !dbg !10783
  %conv31 = zext i8 %21 to i32, !dbg !10783
  %mul32 = mul i32 %conv31, 1000, !dbg !10783
  %mul33 = mul i32 %mul32, 1000, !dbg !10783
  %conv34 = sext i32 %mul33 to i64, !dbg !10783
  call void @__udelay(i64 %conv34) #11, !dbg !10783
  br label %if.end35

if.end35:                                         ; preds = %if.else29, %if.end
  br label %cond.end, !dbg !10774

cond.false:                                       ; preds = %land.lhs.true6, %if.then
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !10785, metadata !DIExpression()), !dbg !10787
  %22 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10787
  %scsi_reset_wait36 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %22, i32 0, i32 13, !dbg !10787
  %23 = load i8, i8* %scsi_reset_wait36, align 8, !dbg !10787
  %conv37 = zext i8 %23 to i32, !dbg !10787
  %mul38 = mul i32 %conv37, 1000, !dbg !10787
  %conv39 = sext i32 %mul38 to i64, !dbg !10787
  store i64 %conv39, i64* %__ms, align 8, !dbg !10787
  br label %while.cond, !dbg !10787

while.cond:                                       ; preds = %while.body, %cond.false
  %24 = load i64, i64* %__ms, align 8, !dbg !10787
  %dec = add i64 %24, -1, !dbg !10787
  store i64 %dec, i64* %__ms, align 8, !dbg !10787
  %tobool40 = icmp ne i64 %24, 0, !dbg !10787
  br i1 %tobool40, label %while.body, label %while.end, !dbg !10787

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !10788
  br label %while.cond, !dbg !10787, !llvm.loop !10793

while.end:                                        ; preds = %while.cond
  br label %cond.end, !dbg !10774

cond.end:                                         ; preds = %while.end, %if.end35
  br label %if.end41, !dbg !10794

if.end41:                                         ; preds = %cond.end, %land.lhs.true, %entry
  %25 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10795
  %init_state42 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %25, i32 0, i32 20, !dbg !10796
  %26 = load i16, i16* %init_state42, align 8, !dbg !10797
  %conv43 = zext i16 %26 to i32, !dbg !10797
  %or = or i32 %conv43, 16, !dbg !10797
  %conv44 = trunc i32 %or to i16, !dbg !10797
  store i16 %conv44, i16* %init_state42, align 8, !dbg !10797
  %27 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10798
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %27, i32 0, i32 1, !dbg !10800
  %28 = load i16, i16* %err_code, align 4, !dbg !10800
  %conv45 = zext i16 %28 to i32, !dbg !10798
  %cmp46 = icmp ne i32 %conv45, 0, !dbg !10801
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !10802

if.then48:                                        ; preds = %if.end41
  store i32 -1, i32* %retval, align 4, !dbg !10803
  br label %return, !dbg !10803

if.end49:                                         ; preds = %if.end41
  %29 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10804
  %iop_base50 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %29, i32 0, i32 0, !dbg !10806
  %30 = load i32, i32* %iop_base50, align 8, !dbg !10806
  %call51 = call i32 @AscFindSignature(i32 %30) #11, !dbg !10807
  %tobool52 = icmp ne i32 %call51, 0, !dbg !10807
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !10808

if.then53:                                        ; preds = %if.end49
  %31 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10809
  %err_code54 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %31, i32 0, i32 1, !dbg !10811
  store i16 512, i16* %err_code54, align 4, !dbg !10812
  %32 = load i32, i32* %warn_code, align 4, !dbg !10813
  store i32 %32, i32* %retval, align 4, !dbg !10814
  br label %return, !dbg !10814

if.end55:                                         ; preds = %if.end49
  %33 = load i32, i32* %iop_base, align 4, !dbg !10815
  call void @AscDisableInterrupt(i32 %33) #11, !dbg !10816
  %34 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10817
  call void @AscInitLram(%struct.asc_dvc_var* %34) #11, !dbg !10818
  %arraydecay = getelementptr inbounds [19 x i8], [19 x i8]* %fwname, i64 0, i64 0, !dbg !10819
  %35 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10820
  %drv_ptr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %35, i32 0, i32 36, !dbg !10821
  %36 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !10821
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %36, i32 0, i32 0, !dbg !10822
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10822
  %call56 = call i32 @request_firmware(%struct.firmware** %fw, i8* %arraydecay, %struct.device* %37) #11, !dbg !10823
  store i32 %call56, i32* %err, align 4, !dbg !10824
  %38 = load i32, i32* %err, align 4, !dbg !10825
  %tobool57 = icmp ne i32 %38, 0, !dbg !10825
  br i1 %tobool57, label %if.then58, label %if.end65, !dbg !10827

if.then58:                                        ; preds = %if.end55
  %arraydecay59 = getelementptr inbounds [19 x i8], [19 x i8]* %fwname, i64 0, i64 0, !dbg !10828
  %39 = load i32, i32* %err, align 4, !dbg !10830
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0), i8* %arraydecay59, i32 %39) #12, !dbg !10831
  %40 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10832
  %err_code61 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %40, i32 0, i32 1, !dbg !10833
  %41 = load i16, i16* %err_code61, align 4, !dbg !10834
  %conv62 = zext i16 %41 to i32, !dbg !10834
  %or63 = or i32 %conv62, 2, !dbg !10834
  %conv64 = trunc i32 %or63 to i16, !dbg !10834
  store i16 %conv64, i16* %err_code61, align 4, !dbg !10834
  %42 = load i32, i32* %err, align 4, !dbg !10835
  store i32 %42, i32* %retval, align 4, !dbg !10836
  br label %return, !dbg !10836

if.end65:                                         ; preds = %if.end55
  %43 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10837
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %43, i32 0, i32 0, !dbg !10839
  %44 = load i64, i64* %size, align 8, !dbg !10839
  %cmp66 = icmp ult i64 %44, 4, !dbg !10840
  br i1 %cmp66, label %if.then68, label %if.end76, !dbg !10841

if.then68:                                        ; preds = %if.end65
  %45 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10842
  %size69 = getelementptr inbounds %struct.firmware, %struct.firmware* %45, i32 0, i32 0, !dbg !10844
  %46 = load i64, i64* %size69, align 8, !dbg !10844
  %arraydecay70 = getelementptr inbounds [19 x i8], [19 x i8]* %fwname, i64 0, i64 0, !dbg !10845
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i64 %46, i8* %arraydecay70) #12, !dbg !10846
  %47 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10847
  call void @release_firmware(%struct.firmware* %47) #11, !dbg !10848
  %48 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10849
  %err_code72 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %48, i32 0, i32 1, !dbg !10850
  %49 = load i16, i16* %err_code72, align 4, !dbg !10851
  %conv73 = zext i16 %49 to i32, !dbg !10851
  %or74 = or i32 %conv73, 2, !dbg !10851
  %conv75 = trunc i32 %or74 to i16, !dbg !10851
  store i16 %conv75, i16* %err_code72, align 4, !dbg !10851
  store i32 -22, i32* %retval, align 4, !dbg !10852
  br label %return, !dbg !10852

if.end76:                                         ; preds = %if.end65
  %50 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10853
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %50, i32 0, i32 1, !dbg !10854
  %51 = load i8*, i8** %data, align 8, !dbg !10854
  %arrayidx = getelementptr i8, i8* %51, i64 3, !dbg !10853
  %52 = load i8, i8* %arrayidx, align 1, !dbg !10853
  %conv77 = zext i8 %52 to i32, !dbg !10853
  %shl = shl i32 %conv77, 24, !dbg !10855
  %53 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10856
  %data78 = getelementptr inbounds %struct.firmware, %struct.firmware* %53, i32 0, i32 1, !dbg !10857
  %54 = load i8*, i8** %data78, align 8, !dbg !10857
  %arrayidx79 = getelementptr i8, i8* %54, i64 2, !dbg !10856
  %55 = load i8, i8* %arrayidx79, align 1, !dbg !10856
  %conv80 = zext i8 %55 to i32, !dbg !10856
  %shl81 = shl i32 %conv80, 16, !dbg !10858
  %or82 = or i32 %shl, %shl81, !dbg !10859
  %56 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10860
  %data83 = getelementptr inbounds %struct.firmware, %struct.firmware* %56, i32 0, i32 1, !dbg !10861
  %57 = load i8*, i8** %data83, align 8, !dbg !10861
  %arrayidx84 = getelementptr i8, i8* %57, i64 1, !dbg !10860
  %58 = load i8, i8* %arrayidx84, align 1, !dbg !10860
  %conv85 = zext i8 %58 to i32, !dbg !10860
  %shl86 = shl i32 %conv85, 8, !dbg !10862
  %or87 = or i32 %or82, %shl86, !dbg !10863
  %59 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10864
  %data88 = getelementptr inbounds %struct.firmware, %struct.firmware* %59, i32 0, i32 1, !dbg !10865
  %60 = load i8*, i8** %data88, align 8, !dbg !10865
  %arrayidx89 = getelementptr i8, i8* %60, i64 0, !dbg !10864
  %61 = load i8, i8* %arrayidx89, align 1, !dbg !10864
  %conv90 = zext i8 %61 to i32, !dbg !10864
  %or91 = or i32 %or87, %conv90, !dbg !10866
  %conv92 = sext i32 %or91 to i64, !dbg !10867
  store i64 %conv92, i64* %chksum, align 8, !dbg !10868
  %62 = load i32, i32* %iop_base, align 4, !dbg !10869
  %63 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10871
  %data93 = getelementptr inbounds %struct.firmware, %struct.firmware* %63, i32 0, i32 1, !dbg !10872
  %64 = load i8*, i8** %data93, align 8, !dbg !10872
  %arrayidx94 = getelementptr i8, i8* %64, i64 4, !dbg !10871
  %65 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10873
  %size95 = getelementptr inbounds %struct.firmware, %struct.firmware* %65, i32 0, i32 0, !dbg !10874
  %66 = load i64, i64* %size95, align 8, !dbg !10874
  %sub = sub i64 %66, 4, !dbg !10875
  %conv96 = trunc i64 %sub to i16, !dbg !10873
  %call97 = call i32 @AscLoadMicroCode(i32 %62, i16 zeroext 0, i8* %arrayidx94, i16 zeroext %conv96) #11, !dbg !10876
  %conv98 = zext i32 %call97 to i64, !dbg !10876
  %67 = load i64, i64* %chksum, align 8, !dbg !10877
  %cmp99 = icmp ne i64 %conv98, %67, !dbg !10878
  br i1 %cmp99, label %if.then101, label %if.end106, !dbg !10879

if.then101:                                       ; preds = %if.end76
  %68 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10880
  %err_code102 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %68, i32 0, i32 1, !dbg !10882
  %69 = load i16, i16* %err_code102, align 4, !dbg !10883
  %conv103 = zext i16 %69 to i32, !dbg !10883
  %or104 = or i32 %conv103, 2, !dbg !10883
  %conv105 = trunc i32 %or104 to i16, !dbg !10883
  store i16 %conv105, i16* %err_code102, align 4, !dbg !10883
  %70 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10884
  call void @release_firmware(%struct.firmware* %70) #11, !dbg !10885
  %71 = load i32, i32* %warn_code, align 4, !dbg !10886
  store i32 %71, i32* %retval, align 4, !dbg !10887
  br label %return, !dbg !10887

if.end106:                                        ; preds = %if.end76
  %72 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !10888
  call void @release_firmware(%struct.firmware* %72) #11, !dbg !10889
  %73 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10890
  %call107 = call i32 @AscInitMicroCodeVar(%struct.asc_dvc_var* %73) #11, !dbg !10891
  %74 = load i32, i32* %warn_code, align 4, !dbg !10892
  %or108 = or i32 %74, %call107, !dbg !10892
  store i32 %or108, i32* %warn_code, align 4, !dbg !10892
  %75 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10893
  %overrun_dma = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %75, i32 0, i32 12, !dbg !10895
  %76 = load i64, i64* %overrun_dma, align 8, !dbg !10895
  %tobool109 = icmp ne i64 %76, 0, !dbg !10893
  br i1 %tobool109, label %if.end111, label %if.then110, !dbg !10896

if.then110:                                       ; preds = %if.end106
  %77 = load i32, i32* %warn_code, align 4, !dbg !10897
  store i32 %77, i32* %retval, align 4, !dbg !10898
  br label %return, !dbg !10898

if.end111:                                        ; preds = %if.end106
  %78 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !10899
  %init_state112 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %78, i32 0, i32 20, !dbg !10900
  %79 = load i16, i16* %init_state112, align 8, !dbg !10901
  %conv113 = zext i16 %79 to i32, !dbg !10901
  %or114 = or i32 %conv113, 32, !dbg !10901
  %conv115 = trunc i32 %or114 to i16, !dbg !10901
  store i16 %conv115, i16* %init_state112, align 8, !dbg !10901
  %80 = load i32, i32* %iop_base, align 4, !dbg !10902
  call void @AscEnableInterrupt(i32 %80) #11, !dbg !10903
  %81 = load i32, i32* %warn_code, align 4, !dbg !10904
  store i32 %81, i32* %retval, align 4, !dbg !10905
  br label %return, !dbg !10905

return:                                           ; preds = %if.end111, %if.then110, %if.then101, %if.then68, %if.then58, %if.then53, %if.then48
  %82 = load i32, i32* %retval, align 4, !dbg !10906
  ret i32 %82, !dbg !10906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvResetChipAndSB(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !10907 {
entry:
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %status = alloca i32, align 4
  %wdtr_able = alloca i16, align 2
  %sdtr_able = alloca i16, align 2
  %tagqng_able = alloca i16, align 2
  %ppr_able = alloca i16, align 2
  %tid = alloca i8, align 1
  %max_cmd = alloca [16 x i8], align 16
  %iop_base = alloca i8*, align 8
  %bios_sig = alloca i16, align 2
  %__ms = alloca i64, align 8
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10912, metadata !DIExpression()), !dbg !10913
  call void @llvm.dbg.declare(metadata i16* %wdtr_able, metadata !10914, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.declare(metadata i16* %sdtr_able, metadata !10916, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.declare(metadata i16* %tagqng_able, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.declare(metadata i16* %ppr_able, metadata !10920, metadata !DIExpression()), !dbg !10921
  store i16 0, i16* %ppr_able, align 2, !dbg !10921
  call void @llvm.dbg.declare(metadata i8* %tid, metadata !10922, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.declare(metadata [16 x i8]* %max_cmd, metadata !10924, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !10926, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.declare(metadata i16* %bios_sig, metadata !10928, metadata !DIExpression()), !dbg !10929
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !10930
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !10931
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !10931
  store i8* %1, i8** %iop_base, align 8, !dbg !10932
  br label %do.body, !dbg !10933

do.body:                                          ; preds = %entry
  %2 = load i8*, i8** %iop_base, align 8, !dbg !10934
  %add.ptr = getelementptr i8, i8* %2, i64 4, !dbg !10934
  call void @writew(i16 zeroext 156, i8* %add.ptr) #11, !dbg !10934
  %3 = load i8*, i8** %iop_base, align 8, !dbg !10934
  %add.ptr2 = getelementptr i8, i8* %3, i64 6, !dbg !10934
  %call = call zeroext i16 @readw(i8* %add.ptr2) #11, !dbg !10934
  store i16 %call, i16* %wdtr_able, align 2, !dbg !10934
  br label %do.end, !dbg !10934

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !10936

do.body3:                                         ; preds = %do.end
  %4 = load i8*, i8** %iop_base, align 8, !dbg !10937
  %add.ptr4 = getelementptr i8, i8* %4, i64 4, !dbg !10937
  call void @writew(i16 zeroext 158, i8* %add.ptr4) #11, !dbg !10937
  %5 = load i8*, i8** %iop_base, align 8, !dbg !10937
  %add.ptr5 = getelementptr i8, i8* %5, i64 6, !dbg !10937
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #11, !dbg !10937
  store i16 %call6, i16* %sdtr_able, align 2, !dbg !10937
  br label %do.end7, !dbg !10937

do.end7:                                          ; preds = %do.body3
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !10939
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 20, !dbg !10941
  %7 = load i8, i8* %chip_type, align 1, !dbg !10941
  %conv = zext i8 %7 to i32, !dbg !10939
  %cmp = icmp eq i32 %conv, 3, !dbg !10942
  br i1 %cmp, label %if.then, label %if.end, !dbg !10943

if.then:                                          ; preds = %do.end7
  br label %do.body9, !dbg !10944

do.body9:                                         ; preds = %if.then
  %8 = load i8*, i8** %iop_base, align 8, !dbg !10946
  %add.ptr10 = getelementptr i8, i8* %8, i64 4, !dbg !10946
  call void @writew(i16 zeroext 378, i8* %add.ptr10) #11, !dbg !10946
  %9 = load i8*, i8** %iop_base, align 8, !dbg !10946
  %add.ptr11 = getelementptr i8, i8* %9, i64 6, !dbg !10946
  %call12 = call zeroext i16 @readw(i8* %add.ptr11) #11, !dbg !10946
  store i16 %call12, i16* %ppr_able, align 2, !dbg !10946
  br label %do.end13, !dbg !10946

do.end13:                                         ; preds = %do.body9
  br label %if.end, !dbg !10948

if.end:                                           ; preds = %do.end13, %do.end7
  br label %do.body14, !dbg !10949

do.body14:                                        ; preds = %if.end
  %10 = load i8*, i8** %iop_base, align 8, !dbg !10950
  %add.ptr15 = getelementptr i8, i8* %10, i64 4, !dbg !10950
  call void @writew(i16 zeroext 160, i8* %add.ptr15) #11, !dbg !10950
  %11 = load i8*, i8** %iop_base, align 8, !dbg !10950
  %add.ptr16 = getelementptr i8, i8* %11, i64 6, !dbg !10950
  %call17 = call zeroext i16 @readw(i8* %add.ptr16) #11, !dbg !10950
  store i16 %call17, i16* %tagqng_able, align 2, !dbg !10950
  br label %do.end18, !dbg !10950

do.end18:                                         ; preds = %do.body14
  store i8 0, i8* %tid, align 1, !dbg !10952
  br label %for.cond, !dbg !10954

for.cond:                                         ; preds = %for.inc, %do.end18
  %12 = load i8, i8* %tid, align 1, !dbg !10955
  %conv19 = zext i8 %12 to i32, !dbg !10955
  %cmp20 = icmp sle i32 %conv19, 15, !dbg !10957
  br i1 %cmp20, label %for.body, label %for.end, !dbg !10958

for.body:                                         ; preds = %for.cond
  br label %do.body22, !dbg !10959

do.body22:                                        ; preds = %for.body
  %13 = load i8, i8* %tid, align 1, !dbg !10961
  %conv23 = zext i8 %13 to i32, !dbg !10961
  %add = add i32 208, %conv23, !dbg !10961
  %conv24 = trunc i32 %add to i16, !dbg !10961
  %14 = load i8*, i8** %iop_base, align 8, !dbg !10961
  %add.ptr25 = getelementptr i8, i8* %14, i64 4, !dbg !10961
  call void @writew(i16 zeroext %conv24, i8* %add.ptr25) #11, !dbg !10961
  %15 = load i8*, i8** %iop_base, align 8, !dbg !10961
  %add.ptr26 = getelementptr i8, i8* %15, i64 6, !dbg !10961
  %call27 = call zeroext i8 @readb(i8* %add.ptr26) #11, !dbg !10961
  %16 = load i8, i8* %tid, align 1, !dbg !10961
  %idxprom = zext i8 %16 to i64, !dbg !10961
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %max_cmd, i64 0, i64 %idxprom, !dbg !10961
  store i8 %call27, i8* %arrayidx, align 1, !dbg !10961
  br label %do.end28, !dbg !10961

do.end28:                                         ; preds = %do.body22
  br label %for.inc, !dbg !10963

for.inc:                                          ; preds = %do.end28
  %17 = load i8, i8* %tid, align 1, !dbg !10964
  %inc = add i8 %17, 1, !dbg !10964
  store i8 %inc, i8* %tid, align 1, !dbg !10964
  br label %for.cond, !dbg !10965, !llvm.loop !10966

for.end:                                          ; preds = %for.cond
  br label %do.body29, !dbg !10968

do.body29:                                        ; preds = %for.end
  %18 = load i8*, i8** %iop_base, align 8, !dbg !10969
  %add.ptr30 = getelementptr i8, i8* %18, i64 4, !dbg !10969
  call void @writew(i16 zeroext 88, i8* %add.ptr30) #11, !dbg !10969
  %19 = load i8*, i8** %iop_base, align 8, !dbg !10969
  %add.ptr31 = getelementptr i8, i8* %19, i64 6, !dbg !10969
  %call32 = call zeroext i16 @readw(i8* %add.ptr31) #11, !dbg !10969
  store i16 %call32, i16* %bios_sig, align 2, !dbg !10969
  br label %do.end33, !dbg !10969

do.end33:                                         ; preds = %do.body29
  %20 = load i8*, i8** %iop_base, align 8, !dbg !10971
  %add.ptr34 = getelementptr i8, i8* %20, i64 4, !dbg !10971
  call void @writew(i16 zeroext 88, i8* %add.ptr34) #11, !dbg !10971
  %21 = load i8*, i8** %iop_base, align 8, !dbg !10971
  %add.ptr35 = getelementptr i8, i8* %21, i64 6, !dbg !10971
  call void @writew(i16 zeroext 0, i8* %add.ptr35) #11, !dbg !10971
  %22 = load i8*, i8** %iop_base, align 8, !dbg !10972
  %add.ptr36 = getelementptr i8, i8* %22, i64 10, !dbg !10972
  call void @writew(i16 zeroext 0, i8* %add.ptr36) #11, !dbg !10972
  %23 = load i8*, i8** %iop_base, align 8, !dbg !10973
  %add.ptr37 = getelementptr i8, i8* %23, i64 2, !dbg !10973
  call void @writew(i16 zeroext 198, i8* %add.ptr37) #11, !dbg !10973
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !10974, metadata !DIExpression()), !dbg !10976
  store i64 100, i64* %__ms, align 8, !dbg !10976
  br label %while.cond, !dbg !10976

while.cond:                                       ; preds = %while.body, %do.end33
  %24 = load i64, i64* %__ms, align 8, !dbg !10976
  %dec = add i64 %24, -1, !dbg !10976
  store i64 %dec, i64* %__ms, align 8, !dbg !10976
  %tobool = icmp ne i64 %24, 0, !dbg !10976
  br i1 %tobool, label %while.body, label %while.end, !dbg !10976

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !10977
  br label %while.cond, !dbg !10976, !llvm.loop !10982

while.end:                                        ; preds = %while.cond
  %25 = load i8*, i8** %iop_base, align 8, !dbg !10983
  %add.ptr38 = getelementptr i8, i8* %25, i64 2, !dbg !10983
  call void @writew(i16 zeroext 197, i8* %add.ptr38) #11, !dbg !10983
  %26 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !10984
  %err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %26, i32 0, i32 1, !dbg !10985
  store i16 0, i16* %err_code, align 8, !dbg !10986
  %27 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !10987
  %chip_type39 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %27, i32 0, i32 20, !dbg !10989
  %28 = load i8, i8* %chip_type39, align 1, !dbg !10989
  %conv40 = zext i8 %28 to i32, !dbg !10987
  %cmp41 = icmp eq i32 %conv40, 3, !dbg !10990
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !10991

if.then43:                                        ; preds = %while.end
  %29 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !10992
  %call44 = call i32 @AdvInitAsc38C1600Driver(%struct.adv_dvc_var* %29) #11, !dbg !10994
  store i32 %call44, i32* %status, align 4, !dbg !10995
  br label %if.end54, !dbg !10996

if.else:                                          ; preds = %while.end
  %30 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !10997
  %chip_type45 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %30, i32 0, i32 20, !dbg !10999
  %31 = load i8, i8* %chip_type45, align 1, !dbg !10999
  %conv46 = zext i8 %31 to i32, !dbg !10997
  %cmp47 = icmp eq i32 %conv46, 2, !dbg !11000
  br i1 %cmp47, label %if.then49, label %if.else51, !dbg !11001

if.then49:                                        ; preds = %if.else
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11002
  %call50 = call i32 @AdvInitAsc38C0800Driver(%struct.adv_dvc_var* %32) #11, !dbg !11004
  store i32 %call50, i32* %status, align 4, !dbg !11005
  br label %if.end53, !dbg !11006

if.else51:                                        ; preds = %if.else
  %33 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11007
  %call52 = call i32 @AdvInitAsc3550Driver(%struct.adv_dvc_var* %33) #11, !dbg !11009
  store i32 %call52, i32* %status, align 4, !dbg !11010
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then49
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then43
  %34 = load i32, i32* %status, align 4, !dbg !11011
  %cmp55 = icmp eq i32 %34, 0, !dbg !11013
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !11014

if.then57:                                        ; preds = %if.end54
  store i32 1, i32* %status, align 4, !dbg !11015
  br label %if.end59, !dbg !11017

if.else58:                                        ; preds = %if.end54
  store i32 0, i32* %status, align 4, !dbg !11018
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  %35 = load i8*, i8** %iop_base, align 8, !dbg !11020
  %add.ptr60 = getelementptr i8, i8* %35, i64 4, !dbg !11020
  call void @writew(i16 zeroext 88, i8* %add.ptr60) #11, !dbg !11020
  %36 = load i16, i16* %bios_sig, align 2, !dbg !11020
  %37 = load i8*, i8** %iop_base, align 8, !dbg !11020
  %add.ptr61 = getelementptr i8, i8* %37, i64 6, !dbg !11020
  call void @writew(i16 zeroext %36, i8* %add.ptr61) #11, !dbg !11020
  %38 = load i8*, i8** %iop_base, align 8, !dbg !11021
  %add.ptr62 = getelementptr i8, i8* %38, i64 4, !dbg !11021
  call void @writew(i16 zeroext 156, i8* %add.ptr62) #11, !dbg !11021
  %39 = load i16, i16* %wdtr_able, align 2, !dbg !11021
  %40 = load i8*, i8** %iop_base, align 8, !dbg !11021
  %add.ptr63 = getelementptr i8, i8* %40, i64 6, !dbg !11021
  call void @writew(i16 zeroext %39, i8* %add.ptr63) #11, !dbg !11021
  %41 = load i8*, i8** %iop_base, align 8, !dbg !11022
  %add.ptr64 = getelementptr i8, i8* %41, i64 4, !dbg !11022
  call void @writew(i16 zeroext 158, i8* %add.ptr64) #11, !dbg !11022
  %42 = load i16, i16* %sdtr_able, align 2, !dbg !11022
  %43 = load i8*, i8** %iop_base, align 8, !dbg !11022
  %add.ptr65 = getelementptr i8, i8* %43, i64 6, !dbg !11022
  call void @writew(i16 zeroext %42, i8* %add.ptr65) #11, !dbg !11022
  %44 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11023
  %chip_type66 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %44, i32 0, i32 20, !dbg !11025
  %45 = load i8, i8* %chip_type66, align 1, !dbg !11025
  %conv67 = zext i8 %45 to i32, !dbg !11023
  %cmp68 = icmp eq i32 %conv67, 3, !dbg !11026
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !11027

if.then70:                                        ; preds = %if.end59
  %46 = load i8*, i8** %iop_base, align 8, !dbg !11028
  %add.ptr71 = getelementptr i8, i8* %46, i64 4, !dbg !11028
  call void @writew(i16 zeroext 378, i8* %add.ptr71) #11, !dbg !11028
  %47 = load i16, i16* %ppr_able, align 2, !dbg !11028
  %48 = load i8*, i8** %iop_base, align 8, !dbg !11028
  %add.ptr72 = getelementptr i8, i8* %48, i64 6, !dbg !11028
  call void @writew(i16 zeroext %47, i8* %add.ptr72) #11, !dbg !11028
  br label %if.end73, !dbg !11030

if.end73:                                         ; preds = %if.then70, %if.end59
  %49 = load i8*, i8** %iop_base, align 8, !dbg !11031
  %add.ptr74 = getelementptr i8, i8* %49, i64 4, !dbg !11031
  call void @writew(i16 zeroext 160, i8* %add.ptr74) #11, !dbg !11031
  %50 = load i16, i16* %tagqng_able, align 2, !dbg !11031
  %51 = load i8*, i8** %iop_base, align 8, !dbg !11031
  %add.ptr75 = getelementptr i8, i8* %51, i64 6, !dbg !11031
  call void @writew(i16 zeroext %50, i8* %add.ptr75) #11, !dbg !11031
  store i8 0, i8* %tid, align 1, !dbg !11032
  br label %for.cond76, !dbg !11034

for.cond76:                                       ; preds = %for.inc88, %if.end73
  %52 = load i8, i8* %tid, align 1, !dbg !11035
  %conv77 = zext i8 %52 to i32, !dbg !11035
  %cmp78 = icmp sle i32 %conv77, 15, !dbg !11037
  br i1 %cmp78, label %for.body80, label %for.end90, !dbg !11038

for.body80:                                       ; preds = %for.cond76
  %53 = load i8, i8* %tid, align 1, !dbg !11039
  %conv81 = zext i8 %53 to i32, !dbg !11039
  %add82 = add i32 208, %conv81, !dbg !11039
  %conv83 = trunc i32 %add82 to i16, !dbg !11039
  %54 = load i8*, i8** %iop_base, align 8, !dbg !11039
  %add.ptr84 = getelementptr i8, i8* %54, i64 4, !dbg !11039
  call void @writew(i16 zeroext %conv83, i8* %add.ptr84) #11, !dbg !11039
  %55 = load i8, i8* %tid, align 1, !dbg !11039
  %idxprom85 = zext i8 %55 to i64, !dbg !11039
  %arrayidx86 = getelementptr [16 x i8], [16 x i8]* %max_cmd, i64 0, i64 %idxprom85, !dbg !11039
  %56 = load i8, i8* %arrayidx86, align 1, !dbg !11039
  %57 = load i8*, i8** %iop_base, align 8, !dbg !11039
  %add.ptr87 = getelementptr i8, i8* %57, i64 6, !dbg !11039
  call void @writeb(i8 zeroext %56, i8* %add.ptr87) #11, !dbg !11039
  br label %for.inc88, !dbg !11041

for.inc88:                                        ; preds = %for.body80
  %58 = load i8, i8* %tid, align 1, !dbg !11042
  %inc89 = add i8 %58, 1, !dbg !11042
  store i8 %inc89, i8* %tid, align 1, !dbg !11042
  br label %for.cond76, !dbg !11043, !llvm.loop !11044

for.end90:                                        ; preds = %for.cond76
  %59 = load i32, i32* %status, align 4, !dbg !11046
  ret i32 %59, !dbg !11047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvISR(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !11048 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %iop_base = alloca i8*, align 8
  %int_stat = alloca i8, align 1
  %target_bit = alloca i16, align 2
  %free_carrp = alloca %struct.adv_carr_t*, align 8
  %irq_next_vpa = alloca i32, align 4
  %scsiq = alloca %struct.adv_scsi_req_q*, align 8
  %reqp = alloca %struct.adv_req*, align 8
  %intrb_code = alloca i8, align 1
  %pa_offset = alloca i32, align 4
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !11049, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !11051, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.declare(metadata i8* %int_stat, metadata !11053, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata i16* %target_bit, metadata !11055, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.declare(metadata %struct.adv_carr_t** %free_carrp, metadata !11057, metadata !DIExpression()), !dbg !11058
  call void @llvm.dbg.declare(metadata i32* %irq_next_vpa, metadata !11059, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.declare(metadata %struct.adv_scsi_req_q** %scsiq, metadata !11061, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.declare(metadata %struct.adv_req** %reqp, metadata !11063, metadata !DIExpression()), !dbg !11064
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11065
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !11066
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !11066
  store i8* %1, i8** %iop_base, align 8, !dbg !11067
  %2 = load i8*, i8** %iop_base, align 8, !dbg !11068
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11068
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !11068
  store i8 %call, i8* %int_stat, align 1, !dbg !11069
  %3 = load i8, i8* %int_stat, align 1, !dbg !11070
  %conv = zext i8 %3 to i32, !dbg !11070
  %and = and i32 %conv, 7, !dbg !11072
  %cmp = icmp eq i32 %and, 0, !dbg !11073
  br i1 %cmp, label %if.then, label %if.end, !dbg !11074

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11075
  br label %return, !dbg !11075

if.end:                                           ; preds = %entry
  %4 = load i8, i8* %int_stat, align 1, !dbg !11077
  %conv3 = zext i8 %4 to i32, !dbg !11077
  %and4 = and i32 %conv3, 2, !dbg !11079
  %tobool = icmp ne i32 %and4, 0, !dbg !11079
  br i1 %tobool, label %if.then5, label %if.end34, !dbg !11080

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %intrb_code, metadata !11081, metadata !DIExpression()), !dbg !11083
  br label %do.body, !dbg !11084

do.body:                                          ; preds = %if.then5
  %5 = load i8*, i8** %iop_base, align 8, !dbg !11085
  %add.ptr6 = getelementptr i8, i8* %5, i64 4, !dbg !11085
  call void @writew(i16 zeroext 155, i8* %add.ptr6) #11, !dbg !11085
  %6 = load i8*, i8** %iop_base, align 8, !dbg !11085
  %add.ptr7 = getelementptr i8, i8* %6, i64 6, !dbg !11085
  %call8 = call zeroext i8 @readb(i8* %add.ptr7) #11, !dbg !11085
  store i8 %call8, i8* %intrb_code, align 1, !dbg !11085
  br label %do.end, !dbg !11085

do.end:                                           ; preds = %do.body
  %7 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11087
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %7, i32 0, i32 20, !dbg !11089
  %8 = load i8, i8* %chip_type, align 1, !dbg !11089
  %conv9 = zext i8 %8 to i32, !dbg !11087
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !11090
  br i1 %cmp10, label %if.then16, label %lor.lhs.false, !dbg !11091

lor.lhs.false:                                    ; preds = %do.end
  %9 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11092
  %chip_type12 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %9, i32 0, i32 20, !dbg !11093
  %10 = load i8, i8* %chip_type12, align 1, !dbg !11093
  %conv13 = zext i8 %10 to i32, !dbg !11092
  %cmp14 = icmp eq i32 %conv13, 2, !dbg !11094
  br i1 %cmp14, label %if.then16, label %if.end33, !dbg !11095

if.then16:                                        ; preds = %lor.lhs.false, %do.end
  %11 = load i8, i8* %intrb_code, align 1, !dbg !11096
  %conv17 = zext i8 %11 to i32, !dbg !11096
  %cmp18 = icmp eq i32 %conv17, 3, !dbg !11099
  br i1 %cmp18, label %land.lhs.true, label %if.end32, !dbg !11100

land.lhs.true:                                    ; preds = %if.then16
  %12 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11101
  %carr_pending_cnt = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %12, i32 0, i32 27, !dbg !11102
  %13 = load i16, i16* %carr_pending_cnt, align 8, !dbg !11102
  %conv20 = zext i16 %13 to i32, !dbg !11101
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !11103
  br i1 %cmp21, label %if.then23, label %if.end32, !dbg !11104

if.then23:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %iop_base, align 8, !dbg !11105
  %add.ptr24 = getelementptr i8, i8* %14, i64 34, !dbg !11105
  call void @writeb(i8 zeroext 1, i8* %add.ptr24) #11, !dbg !11105
  %15 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11107
  %chip_type25 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %15, i32 0, i32 20, !dbg !11109
  %16 = load i8, i8* %chip_type25, align 1, !dbg !11109
  %conv26 = zext i8 %16 to i32, !dbg !11107
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !11110
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !11111

if.then29:                                        ; preds = %if.then23
  %17 = load i8*, i8** %iop_base, align 8, !dbg !11112
  %add.ptr30 = getelementptr i8, i8* %17, i64 34, !dbg !11112
  call void @writeb(i8 zeroext 0, i8* %add.ptr30) #11, !dbg !11112
  br label %if.end31, !dbg !11114

if.end31:                                         ; preds = %if.then29, %if.then23
  br label %if.end32, !dbg !11115

if.end32:                                         ; preds = %if.end31, %land.lhs.true, %if.then16
  br label %if.end33, !dbg !11116

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %18 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11117
  %19 = load i8, i8* %intrb_code, align 1, !dbg !11118
  call void @adv_async_callback(%struct.adv_dvc_var* %18, i8 zeroext %19) #11, !dbg !11119
  br label %if.end34, !dbg !11120

if.end34:                                         ; preds = %if.end33, %if.end
  br label %while.cond, !dbg !11121

while.cond:                                       ; preds = %if.end44, %if.end34
  %20 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11122
  %irq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %20, i32 0, i32 26, !dbg !11122
  %21 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp, align 8, !dbg !11122
  %next_vpa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %21, i32 0, i32 3, !dbg !11122
  %22 = load i32, i32* %next_vpa, align 4, !dbg !11122
  store i32 %22, i32* %irq_next_vpa, align 4, !dbg !11123
  %and35 = and i32 %22, 1, !dbg !11124
  %cmp36 = icmp ne i32 %and35, 0, !dbg !11125
  br i1 %cmp36, label %while.body, label %while.end, !dbg !11121

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %pa_offset, metadata !11126, metadata !DIExpression()), !dbg !11128
  %23 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11129
  %irq_sp38 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %23, i32 0, i32 26, !dbg !11129
  %24 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp38, align 8, !dbg !11129
  %areq_vpa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %24, i32 0, i32 2, !dbg !11129
  %25 = load i32, i32* %areq_vpa, align 4, !dbg !11129
  store i32 %25, i32* %pa_offset, align 4, !dbg !11128
  %26 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11130
  %27 = load i32, i32* %pa_offset, align 4, !dbg !11131
  %call39 = call %struct.adv_req* @adv_get_reqp(%struct.adv_dvc_var* %26, i32 %27) #11, !dbg !11132
  store %struct.adv_req* %call39, %struct.adv_req** %reqp, align 8, !dbg !11133
  %28 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !11134
  %scsi_req_q = getelementptr inbounds %struct.adv_req, %struct.adv_req* %28, i32 0, i32 0, !dbg !11135
  store %struct.adv_scsi_req_q* %scsi_req_q, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11136
  %29 = load i32, i32* %irq_next_vpa, align 4, !dbg !11137
  %and40 = and i32 %29, 2, !dbg !11139
  %cmp41 = icmp ne i32 %and40, 0, !dbg !11140
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !11141

if.then43:                                        ; preds = %while.body
  %30 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11142
  %done_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %30, i32 0, i32 12, !dbg !11144
  store i8 1, i8* %done_status, align 8, !dbg !11145
  %31 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11146
  %scsi_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %31, i32 0, i32 13, !dbg !11147
  store i8 0, i8* %scsi_status, align 1, !dbg !11148
  %32 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11149
  %host_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %32, i32 0, i32 14, !dbg !11150
  store i8 0, i8* %host_status, align 2, !dbg !11151
  %33 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11152
  %data_cnt = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %33, i32 0, i32 5, !dbg !11153
  store i32 0, i32* %data_cnt, align 8, !dbg !11154
  br label %if.end44, !dbg !11155

if.end44:                                         ; preds = %if.then43, %while.body
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11156
  %irq_sp45 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %34, i32 0, i32 26, !dbg !11157
  %35 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp45, align 8, !dbg !11157
  store %struct.adv_carr_t* %35, %struct.adv_carr_t** %free_carrp, align 8, !dbg !11158
  %36 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11159
  %37 = load i32, i32* %irq_next_vpa, align 4, !dbg !11160
  %and46 = and i32 %37, -16, !dbg !11160
  %call47 = call %struct.adv_carr_t* @adv_get_carrier(%struct.adv_dvc_var* %36, i32 %and46) #11, !dbg !11161
  %38 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11162
  %irq_sp48 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %38, i32 0, i32 26, !dbg !11163
  store %struct.adv_carr_t* %call47, %struct.adv_carr_t** %irq_sp48, align 8, !dbg !11164
  %39 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11165
  %carr_freelist = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %39, i32 0, i32 23, !dbg !11166
  %40 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carr_freelist, align 8, !dbg !11166
  %carr_va = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %40, i32 0, i32 0, !dbg !11167
  %41 = load i32, i32* %carr_va, align 4, !dbg !11167
  %42 = load %struct.adv_carr_t*, %struct.adv_carr_t** %free_carrp, align 8, !dbg !11168
  %next_vpa49 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %42, i32 0, i32 3, !dbg !11169
  store i32 %41, i32* %next_vpa49, align 4, !dbg !11170
  %43 = load %struct.adv_carr_t*, %struct.adv_carr_t** %free_carrp, align 8, !dbg !11171
  %44 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11172
  %carr_freelist50 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %44, i32 0, i32 23, !dbg !11173
  store %struct.adv_carr_t* %43, %struct.adv_carr_t** %carr_freelist50, align 8, !dbg !11174
  %45 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11175
  %carr_pending_cnt51 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %45, i32 0, i32 27, !dbg !11176
  %46 = load i16, i16* %carr_pending_cnt51, align 8, !dbg !11177
  %dec = add i16 %46, -1, !dbg !11177
  store i16 %dec, i16* %carr_pending_cnt51, align 8, !dbg !11177
  %47 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11178
  %target_id = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %47, i32 0, i32 2, !dbg !11178
  %48 = load i8, i8* %target_id, align 2, !dbg !11178
  %conv52 = zext i8 %48 to i32, !dbg !11178
  %and53 = and i32 %conv52, 15, !dbg !11178
  %shl = shl i32 1, %and53, !dbg !11178
  %conv54 = trunc i32 %shl to i16, !dbg !11178
  store i16 %conv54, i16* %target_bit, align 2, !dbg !11179
  %49 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11180
  %cntl = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %49, i32 0, i32 0, !dbg !11181
  store i8 0, i8* %cntl, align 8, !dbg !11182
  %50 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11183
  %51 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiq, align 8, !dbg !11184
  call void @adv_isr_callback(%struct.adv_dvc_var* %50, %struct.adv_scsi_req_q* %51) #11, !dbg !11185
  br label %while.cond, !dbg !11121, !llvm.loop !11186

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !11188
  br label %return, !dbg !11188

return:                                           ; preds = %while.end, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !11189
  ret i32 %52, !dbg !11189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @AscResetChipAndScsiBus(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !11190 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %iop_base = alloca i32, align 4
  %i = alloca i32, align 4
  %__ms = alloca i64, align 8
  %__ms12 = alloca i64, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11197, metadata !DIExpression()), !dbg !11198
  store i32 10, i32* %i, align 4, !dbg !11198
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11199
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !11200
  %1 = load i32, i32* %iop_base1, align 8, !dbg !11200
  store i32 %1, i32* %iop_base, align 4, !dbg !11201
  br label %while.cond, !dbg !11202

while.cond:                                       ; preds = %while.end, %entry
  %2 = load i32, i32* %iop_base, align 4, !dbg !11203
  %add = add i32 %2, 14, !dbg !11203
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !11203
  %conv = zext i16 %call to i32, !dbg !11203
  %and = and i32 %conv, 8, !dbg !11204
  %tobool = icmp ne i32 %and, 0, !dbg !11204
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11205

land.rhs:                                         ; preds = %while.cond
  %3 = load i32, i32* %i, align 4, !dbg !11206
  %dec = add i32 %3, -1, !dbg !11206
  store i32 %dec, i32* %i, align 4, !dbg !11206
  %cmp = icmp sgt i32 %3, 0, !dbg !11207
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !11208
  br i1 %4, label %while.body, label %while.end7, !dbg !11202

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !11209, metadata !DIExpression()), !dbg !11212
  store i64 100, i64* %__ms, align 8, !dbg !11212
  br label %while.cond3, !dbg !11212

while.cond3:                                      ; preds = %while.body6, %while.body
  %5 = load i64, i64* %__ms, align 8, !dbg !11212
  %dec4 = add i64 %5, -1, !dbg !11212
  store i64 %dec4, i64* %__ms, align 8, !dbg !11212
  %tobool5 = icmp ne i64 %5, 0, !dbg !11212
  br i1 %tobool5, label %while.body6, label %while.end, !dbg !11212

while.body6:                                      ; preds = %while.cond3
  call void @__const_udelay(i64 4295000) #11, !dbg !11213
  br label %while.cond3, !dbg !11212, !llvm.loop !11218

while.end:                                        ; preds = %while.cond3
  br label %while.cond, !dbg !11202, !llvm.loop !11219

while.end7:                                       ; preds = %land.end
  %6 = load i32, i32* %iop_base, align 4, !dbg !11221
  %call8 = call zeroext i1 @AscStopChip(i32 %6) #11, !dbg !11222
  %7 = load i32, i32* %iop_base, align 4, !dbg !11223
  %add9 = add i32 %7, 15, !dbg !11223
  call void @outb(i8 zeroext -32, i32 %add9) #11, !dbg !11223
  call void @__const_udelay(i64 257700) #11, !dbg !11224
  %8 = load i32, i32* %iop_base, align 4, !dbg !11229
  call void @AscSetChipIH(i32 %8, i16 zeroext 29568) #11, !dbg !11230
  %9 = load i32, i32* %iop_base, align 4, !dbg !11231
  call void @AscSetChipIH(i32 %9, i16 zeroext 25216) #11, !dbg !11232
  %10 = load i32, i32* %iop_base, align 4, !dbg !11233
  %add10 = add i32 %10, 15, !dbg !11233
  call void @outb(i8 zeroext -96, i32 %add10) #11, !dbg !11233
  %11 = load i32, i32* %iop_base, align 4, !dbg !11234
  %add11 = add i32 %11, 15, !dbg !11234
  call void @outb(i8 zeroext 32, i32 %add11) #11, !dbg !11234
  call void @llvm.dbg.declare(metadata i64* %__ms12, metadata !11235, metadata !DIExpression()), !dbg !11237
  store i64 200, i64* %__ms12, align 8, !dbg !11237
  br label %while.cond13, !dbg !11237

while.cond13:                                     ; preds = %while.body16, %while.end7
  %12 = load i64, i64* %__ms12, align 8, !dbg !11237
  %dec14 = add i64 %12, -1, !dbg !11237
  store i64 %dec14, i64* %__ms12, align 8, !dbg !11237
  %tobool15 = icmp ne i64 %12, 0, !dbg !11237
  br i1 %tobool15, label %while.body16, label %while.end17, !dbg !11237

while.body16:                                     ; preds = %while.cond13
  call void @__const_udelay(i64 4295000) #11, !dbg !11238
  br label %while.cond13, !dbg !11237, !llvm.loop !11243

while.end17:                                      ; preds = %while.cond13
  %13 = load i32, i32* %iop_base, align 4, !dbg !11244
  %add18 = add i32 %13, 14, !dbg !11244
  call void @outw(i16 zeroext 4096, i32 %add18) #11, !dbg !11244
  %14 = load i32, i32* %iop_base, align 4, !dbg !11245
  %add19 = add i32 %14, 14, !dbg !11245
  call void @outw(i16 zeroext 0, i32 %add19) #11, !dbg !11245
  %15 = load i32, i32* %iop_base, align 4, !dbg !11246
  %call20 = call zeroext i1 @AscIsChipHalted(i32 %15) #11, !dbg !11247
  ret i1 %call20, !dbg !11248
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #1

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscFindSignature(i32 %iop_base) #2 !dbg !11249 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i32, align 4
  %sig_word = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11252, metadata !DIExpression()), !dbg !11253
  call void @llvm.dbg.declare(metadata i16* %sig_word, metadata !11254, metadata !DIExpression()), !dbg !11255
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11256
  %add = add i32 %0, 1, !dbg !11256
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !11256
  %conv = zext i8 %call to i32, !dbg !11256
  %cmp = icmp eq i32 %conv, 37, !dbg !11258
  br i1 %cmp, label %if.then, label %if.end11, !dbg !11259

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !11260
  %add2 = add i32 %1, 0, !dbg !11260
  %call3 = call zeroext i16 @inw(i32 %add2) #11, !dbg !11260
  store i16 %call3, i16* %sig_word, align 2, !dbg !11262
  %2 = load i16, i16* %sig_word, align 2, !dbg !11263
  %conv4 = zext i16 %2 to i32, !dbg !11263
  %cmp5 = icmp eq i32 %conv4, 1217, !dbg !11265
  br i1 %cmp5, label %if.then10, label %lor.lhs.false, !dbg !11266

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %sig_word, align 2, !dbg !11267
  %conv7 = zext i16 %3 to i32, !dbg !11267
  %cmp8 = icmp eq i32 %conv7, 193, !dbg !11268
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !11269

if.then10:                                        ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %retval, align 4, !dbg !11270
  br label %return, !dbg !11270

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end11, !dbg !11272

if.end11:                                         ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !11273
  br label %return, !dbg !11273

return:                                           ; preds = %if.end11, %if.then10
  %4 = load i32, i32* %retval, align 4, !dbg !11274
  ret i32 %4, !dbg !11274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscDisableInterrupt(i32 %iop_base) #2 !dbg !11275 {
entry:
  %iop_base.addr = alloca i32, align 4
  %cfg = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11278, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.declare(metadata i16* %cfg, metadata !11280, metadata !DIExpression()), !dbg !11281
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11282
  %add = add i32 %0, 2, !dbg !11282
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !11282
  store i16 %call, i16* %cfg, align 2, !dbg !11283
  %1 = load i16, i16* %cfg, align 2, !dbg !11284
  %conv = zext i16 %1 to i32, !dbg !11284
  %and = and i32 %conv, -33, !dbg !11284
  %conv1 = trunc i32 %and to i16, !dbg !11284
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !11284
  %add2 = add i32 %2, 2, !dbg !11284
  call void @outw(i16 zeroext %conv1, i32 %add2) #11, !dbg !11284
  ret void, !dbg !11285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscInitLram(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !11286 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %i = alloca i8, align 1
  %s_addr = alloca i16, align 2
  %iop_base = alloca i32, align 4
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !11289, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.declare(metadata i8* %i, metadata !11291, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.declare(metadata i16* %s_addr, metadata !11293, metadata !DIExpression()), !dbg !11294
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !11295, metadata !DIExpression()), !dbg !11296
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11297
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !11298
  %1 = load i32, i32* %iop_base1, align 8, !dbg !11298
  store i32 %1, i32* %iop_base, align 4, !dbg !11299
  %2 = load i32, i32* %iop_base, align 4, !dbg !11300
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11301
  %max_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 16, !dbg !11302
  %4 = load i8, i8* %max_total_qng, align 1, !dbg !11302
  %conv = zext i8 %4 to i32, !dbg !11301
  %add = add i32 %conv, 2, !dbg !11303
  %add2 = add i32 %add, 1, !dbg !11304
  %mul = mul i32 %add2, 64, !dbg !11305
  %shr = ashr i32 %mul, 1, !dbg !11306
  %conv3 = trunc i32 %shr to i16, !dbg !11307
  %conv4 = zext i16 %conv3 to i32, !dbg !11307
  call void @AscMemWordSetLram(i32 %2, i16 zeroext 16384, i16 zeroext 0, i32 %conv4) #11, !dbg !11308
  store i8 1, i8* %i, align 1, !dbg !11309
  store i16 16448, i16* %s_addr, align 2, !dbg !11310
  %5 = load i32, i32* %iop_base, align 4, !dbg !11311
  %6 = load i16, i16* %s_addr, align 2, !dbg !11312
  %conv5 = zext i16 %6 to i32, !dbg !11312
  %add6 = add i32 %conv5, 0, !dbg !11313
  %conv7 = trunc i32 %add6 to i16, !dbg !11314
  %7 = load i8, i8* %i, align 1, !dbg !11315
  %conv8 = zext i8 %7 to i32, !dbg !11315
  %add9 = add i32 %conv8, 1, !dbg !11316
  %conv10 = trunc i32 %add9 to i8, !dbg !11317
  call void @AscWriteLramByte(i32 %5, i16 zeroext %conv7, i8 zeroext %conv10) #11, !dbg !11318
  %8 = load i32, i32* %iop_base, align 4, !dbg !11319
  %9 = load i16, i16* %s_addr, align 2, !dbg !11320
  %conv11 = zext i16 %9 to i32, !dbg !11320
  %add12 = add i32 %conv11, 1, !dbg !11321
  %conv13 = trunc i32 %add12 to i16, !dbg !11322
  %10 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11323
  %max_total_qng14 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %10, i32 0, i32 16, !dbg !11324
  %11 = load i8, i8* %max_total_qng14, align 1, !dbg !11324
  call void @AscWriteLramByte(i32 %8, i16 zeroext %conv13, i8 zeroext %11) #11, !dbg !11325
  %12 = load i32, i32* %iop_base, align 4, !dbg !11326
  %13 = load i16, i16* %s_addr, align 2, !dbg !11327
  %conv15 = zext i16 %13 to i32, !dbg !11327
  %add16 = add i32 %conv15, 3, !dbg !11328
  %conv17 = trunc i32 %add16 to i16, !dbg !11329
  %14 = load i8, i8* %i, align 1, !dbg !11330
  call void @AscWriteLramByte(i32 %12, i16 zeroext %conv17, i8 zeroext %14) #11, !dbg !11331
  %15 = load i8, i8* %i, align 1, !dbg !11332
  %inc = add i8 %15, 1, !dbg !11332
  store i8 %inc, i8* %i, align 1, !dbg !11332
  %16 = load i16, i16* %s_addr, align 2, !dbg !11333
  %conv18 = zext i16 %16 to i32, !dbg !11333
  %add19 = add i32 %conv18, 64, !dbg !11333
  %conv20 = trunc i32 %add19 to i16, !dbg !11333
  store i16 %conv20, i16* %s_addr, align 2, !dbg !11333
  br label %for.cond, !dbg !11334

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i8, i8* %i, align 1, !dbg !11335
  %conv21 = zext i8 %17 to i32, !dbg !11335
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11338
  %max_total_qng22 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %18, i32 0, i32 16, !dbg !11339
  %19 = load i8, i8* %max_total_qng22, align 1, !dbg !11339
  %conv23 = zext i8 %19 to i32, !dbg !11338
  %cmp = icmp slt i32 %conv21, %conv23, !dbg !11340
  br i1 %cmp, label %for.body, label %for.end, !dbg !11341

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %iop_base, align 4, !dbg !11342
  %21 = load i16, i16* %s_addr, align 2, !dbg !11344
  %conv25 = zext i16 %21 to i32, !dbg !11344
  %add26 = add i32 %conv25, 0, !dbg !11345
  %conv27 = trunc i32 %add26 to i16, !dbg !11346
  %22 = load i8, i8* %i, align 1, !dbg !11347
  %conv28 = zext i8 %22 to i32, !dbg !11347
  %add29 = add i32 %conv28, 1, !dbg !11348
  %conv30 = trunc i32 %add29 to i8, !dbg !11349
  call void @AscWriteLramByte(i32 %20, i16 zeroext %conv27, i8 zeroext %conv30) #11, !dbg !11350
  %23 = load i32, i32* %iop_base, align 4, !dbg !11351
  %24 = load i16, i16* %s_addr, align 2, !dbg !11352
  %conv31 = zext i16 %24 to i32, !dbg !11352
  %add32 = add i32 %conv31, 1, !dbg !11353
  %conv33 = trunc i32 %add32 to i16, !dbg !11354
  %25 = load i8, i8* %i, align 1, !dbg !11355
  %conv34 = zext i8 %25 to i32, !dbg !11355
  %sub = sub i32 %conv34, 1, !dbg !11356
  %conv35 = trunc i32 %sub to i8, !dbg !11357
  call void @AscWriteLramByte(i32 %23, i16 zeroext %conv33, i8 zeroext %conv35) #11, !dbg !11358
  %26 = load i32, i32* %iop_base, align 4, !dbg !11359
  %27 = load i16, i16* %s_addr, align 2, !dbg !11360
  %conv36 = zext i16 %27 to i32, !dbg !11360
  %add37 = add i32 %conv36, 3, !dbg !11361
  %conv38 = trunc i32 %add37 to i16, !dbg !11362
  %28 = load i8, i8* %i, align 1, !dbg !11363
  call void @AscWriteLramByte(i32 %26, i16 zeroext %conv38, i8 zeroext %28) #11, !dbg !11364
  br label %for.inc, !dbg !11365

for.inc:                                          ; preds = %for.body
  %29 = load i8, i8* %i, align 1, !dbg !11366
  %inc39 = add i8 %29, 1, !dbg !11366
  store i8 %inc39, i8* %i, align 1, !dbg !11366
  %30 = load i16, i16* %s_addr, align 2, !dbg !11367
  %conv40 = zext i16 %30 to i32, !dbg !11367
  %add41 = add i32 %conv40, 64, !dbg !11367
  %conv42 = trunc i32 %add41 to i16, !dbg !11367
  store i16 %conv42, i16* %s_addr, align 2, !dbg !11367
  br label %for.cond, !dbg !11368, !llvm.loop !11369

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* %iop_base, align 4, !dbg !11371
  %32 = load i16, i16* %s_addr, align 2, !dbg !11372
  %conv43 = zext i16 %32 to i32, !dbg !11372
  %add44 = add i32 %conv43, 0, !dbg !11373
  %conv45 = trunc i32 %add44 to i16, !dbg !11374
  call void @AscWriteLramByte(i32 %31, i16 zeroext %conv45, i8 zeroext -1) #11, !dbg !11375
  %33 = load i32, i32* %iop_base, align 4, !dbg !11376
  %34 = load i16, i16* %s_addr, align 2, !dbg !11377
  %conv46 = zext i16 %34 to i32, !dbg !11377
  %add47 = add i32 %conv46, 1, !dbg !11378
  %conv48 = trunc i32 %add47 to i16, !dbg !11379
  %35 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11380
  %max_total_qng49 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %35, i32 0, i32 16, !dbg !11381
  %36 = load i8, i8* %max_total_qng49, align 1, !dbg !11381
  %conv50 = zext i8 %36 to i32, !dbg !11380
  %sub51 = sub i32 %conv50, 1, !dbg !11382
  %conv52 = trunc i32 %sub51 to i8, !dbg !11383
  call void @AscWriteLramByte(i32 %33, i16 zeroext %conv48, i8 zeroext %conv52) #11, !dbg !11384
  %37 = load i32, i32* %iop_base, align 4, !dbg !11385
  %38 = load i16, i16* %s_addr, align 2, !dbg !11386
  %conv53 = zext i16 %38 to i32, !dbg !11386
  %add54 = add i32 %conv53, 3, !dbg !11387
  %conv55 = trunc i32 %add54 to i16, !dbg !11388
  %39 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11389
  %max_total_qng56 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %39, i32 0, i32 16, !dbg !11390
  %40 = load i8, i8* %max_total_qng56, align 1, !dbg !11390
  call void @AscWriteLramByte(i32 %37, i16 zeroext %conv55, i8 zeroext %40) #11, !dbg !11391
  %41 = load i8, i8* %i, align 1, !dbg !11392
  %inc57 = add i8 %41, 1, !dbg !11392
  store i8 %inc57, i8* %i, align 1, !dbg !11392
  %42 = load i16, i16* %s_addr, align 2, !dbg !11393
  %conv58 = zext i16 %42 to i32, !dbg !11393
  %add59 = add i32 %conv58, 64, !dbg !11393
  %conv60 = trunc i32 %add59 to i16, !dbg !11393
  store i16 %conv60, i16* %s_addr, align 2, !dbg !11393
  br label %for.cond61, !dbg !11394

for.cond61:                                       ; preds = %for.inc80, %for.end
  %43 = load i8, i8* %i, align 1, !dbg !11395
  %conv62 = zext i8 %43 to i32, !dbg !11395
  %44 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11398
  %max_total_qng63 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %44, i32 0, i32 16, !dbg !11399
  %45 = load i8, i8* %max_total_qng63, align 1, !dbg !11399
  %conv64 = zext i8 %45 to i32, !dbg !11398
  %add65 = add i32 %conv64, 3, !dbg !11400
  %conv66 = trunc i32 %add65 to i8, !dbg !11401
  %conv67 = zext i8 %conv66 to i32, !dbg !11401
  %cmp68 = icmp sle i32 %conv62, %conv67, !dbg !11402
  br i1 %cmp68, label %for.body70, label %for.end85, !dbg !11403

for.body70:                                       ; preds = %for.cond61
  %46 = load i32, i32* %iop_base, align 4, !dbg !11404
  %47 = load i16, i16* %s_addr, align 2, !dbg !11406
  %conv71 = zext i16 %47 to i32, !dbg !11406
  %add72 = add i32 %conv71, 0, !dbg !11407
  %conv73 = trunc i32 %add72 to i16, !dbg !11408
  %48 = load i8, i8* %i, align 1, !dbg !11409
  call void @AscWriteLramByte(i32 %46, i16 zeroext %conv73, i8 zeroext %48) #11, !dbg !11410
  %49 = load i32, i32* %iop_base, align 4, !dbg !11411
  %50 = load i16, i16* %s_addr, align 2, !dbg !11412
  %conv74 = zext i16 %50 to i32, !dbg !11412
  %add75 = add i32 %conv74, 1, !dbg !11413
  %conv76 = trunc i32 %add75 to i16, !dbg !11414
  %51 = load i8, i8* %i, align 1, !dbg !11415
  call void @AscWriteLramByte(i32 %49, i16 zeroext %conv76, i8 zeroext %51) #11, !dbg !11416
  %52 = load i32, i32* %iop_base, align 4, !dbg !11417
  %53 = load i16, i16* %s_addr, align 2, !dbg !11418
  %conv77 = zext i16 %53 to i32, !dbg !11418
  %add78 = add i32 %conv77, 3, !dbg !11419
  %conv79 = trunc i32 %add78 to i16, !dbg !11420
  %54 = load i8, i8* %i, align 1, !dbg !11421
  call void @AscWriteLramByte(i32 %52, i16 zeroext %conv79, i8 zeroext %54) #11, !dbg !11422
  br label %for.inc80, !dbg !11423

for.inc80:                                        ; preds = %for.body70
  %55 = load i8, i8* %i, align 1, !dbg !11424
  %inc81 = add i8 %55, 1, !dbg !11424
  store i8 %inc81, i8* %i, align 1, !dbg !11424
  %56 = load i16, i16* %s_addr, align 2, !dbg !11425
  %conv82 = zext i16 %56 to i32, !dbg !11425
  %add83 = add i32 %conv82, 64, !dbg !11425
  %conv84 = trunc i32 %add83 to i16, !dbg !11425
  store i16 %conv84, i16* %s_addr, align 2, !dbg !11425
  br label %for.cond61, !dbg !11426, !llvm.loop !11427

for.end85:                                        ; preds = %for.cond61
  ret void, !dbg !11429
}

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscLoadMicroCode(i32 %iop_base, i16 zeroext %s_addr, i8* %mcode_buf, i16 zeroext %mcode_size) #2 !dbg !11430 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %mcode_buf.addr = alloca i8*, align 8
  %mcode_size.addr = alloca i16, align 2
  %chksum = alloca i32, align 4
  %mcode_word_size = alloca i16, align 2
  %mcode_chksum = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11433, metadata !DIExpression()), !dbg !11434
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !11435, metadata !DIExpression()), !dbg !11436
  store i8* %mcode_buf, i8** %mcode_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mcode_buf.addr, metadata !11437, metadata !DIExpression()), !dbg !11438
  store i16 %mcode_size, i16* %mcode_size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mcode_size.addr, metadata !11439, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.declare(metadata i32* %chksum, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.declare(metadata i16* %mcode_word_size, metadata !11443, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.declare(metadata i16* %mcode_chksum, metadata !11445, metadata !DIExpression()), !dbg !11446
  %0 = load i16, i16* %mcode_size.addr, align 2, !dbg !11447
  %conv = zext i16 %0 to i32, !dbg !11447
  %shr = ashr i32 %conv, 1, !dbg !11448
  %conv1 = trunc i32 %shr to i16, !dbg !11449
  store i16 %conv1, i16* %mcode_word_size, align 2, !dbg !11450
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !11451
  %2 = load i16, i16* %s_addr.addr, align 2, !dbg !11452
  %3 = load i16, i16* %mcode_word_size, align 2, !dbg !11453
  %conv2 = zext i16 %3 to i32, !dbg !11453
  call void @AscMemWordSetLram(i32 %1, i16 zeroext %2, i16 zeroext 0, i32 %conv2) #11, !dbg !11454
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !11455
  %5 = load i16, i16* %s_addr.addr, align 2, !dbg !11456
  %6 = load i8*, i8** %mcode_buf.addr, align 8, !dbg !11457
  %7 = load i16, i16* %mcode_word_size, align 2, !dbg !11458
  %conv3 = zext i16 %7 to i32, !dbg !11458
  call void @AscMemWordCopyPtrToLram(i32 %4, i16 zeroext %5, i8* %6, i32 %conv3) #11, !dbg !11459
  %8 = load i32, i32* %iop_base.addr, align 4, !dbg !11460
  %9 = load i16, i16* %s_addr.addr, align 2, !dbg !11461
  %10 = load i16, i16* %mcode_word_size, align 2, !dbg !11462
  %conv4 = zext i16 %10 to i32, !dbg !11462
  %call = call i32 @AscMemSumLramWord(i32 %8, i16 zeroext %9, i32 %conv4) #11, !dbg !11463
  store i32 %call, i32* %chksum, align 4, !dbg !11464
  %11 = load i32, i32* %iop_base.addr, align 4, !dbg !11465
  %12 = load i16, i16* %mcode_size.addr, align 2, !dbg !11466
  %conv5 = zext i16 %12 to i32, !dbg !11466
  %13 = load i16, i16* %s_addr.addr, align 2, !dbg !11467
  %conv6 = zext i16 %13 to i32, !dbg !11467
  %sub = sub i32 %conv5, %conv6, !dbg !11468
  %sub7 = sub i32 %sub, 128, !dbg !11469
  %div = sdiv i32 %sub7, 2, !dbg !11470
  %conv8 = trunc i32 %div to i16, !dbg !11471
  %conv9 = zext i16 %conv8 to i32, !dbg !11471
  %call10 = call i32 @AscMemSumLramWord(i32 %11, i16 zeroext 128, i32 %conv9) #11, !dbg !11472
  %conv11 = trunc i32 %call10 to i16, !dbg !11473
  store i16 %conv11, i16* %mcode_chksum, align 2, !dbg !11474
  %14 = load i32, i32* %iop_base.addr, align 4, !dbg !11475
  %15 = load i16, i16* %mcode_chksum, align 2, !dbg !11476
  call void @AscWriteLramWord(i32 %14, i16 zeroext 50, i16 zeroext %15) #11, !dbg !11477
  %16 = load i32, i32* %iop_base.addr, align 4, !dbg !11478
  %17 = load i16, i16* %mcode_size.addr, align 2, !dbg !11479
  call void @AscWriteLramWord(i32 %16, i16 zeroext 52, i16 zeroext %17) #11, !dbg !11480
  %18 = load i32, i32* %chksum, align 4, !dbg !11481
  ret i32 %18, !dbg !11482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscInitMicroCodeVar(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !11483 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %i = alloca i32, align 4
  %warn_code = alloca i32, align 4
  %iop_base = alloca i32, align 4
  %phy_addr = alloca i32, align 4
  %phy_size = alloca i32, align 4
  %board = alloca %struct.asc_board*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.asc_board*, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !11484, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11486, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.declare(metadata i32* %warn_code, metadata !11488, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !11490, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.declare(metadata i32* %phy_addr, metadata !11492, metadata !DIExpression()), !dbg !11493
  call void @llvm.dbg.declare(metadata i32* %phy_size, metadata !11494, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !11496, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11498, metadata !DIExpression()), !dbg !11500
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11500
  %1 = bitcast %struct.asc_dvc_var* %0 to i8*, !dbg !11500
  store i8* %1, i8** %__mptr, align 8, !dbg !11500
  br label %do.body, !dbg !11500

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11501

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11500
  %add.ptr = getelementptr i8, i8* %2, i64 -24, !dbg !11500
  %3 = bitcast i8* %add.ptr to %struct.asc_board*, !dbg !11500
  store %struct.asc_board* %3, %struct.asc_board** %tmp, align 8, !dbg !11501
  %4 = load %struct.asc_board*, %struct.asc_board** %tmp, align 8, !dbg !11500
  store %struct.asc_board* %4, %struct.asc_board** %board, align 8, !dbg !11497
  %5 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11503
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %5, i32 0, i32 0, !dbg !11504
  %6 = load i32, i32* %iop_base1, align 8, !dbg !11504
  store i32 %6, i32* %iop_base, align 4, !dbg !11505
  store i32 0, i32* %warn_code, align 4, !dbg !11506
  store i32 0, i32* %i, align 4, !dbg !11507
  br label %for.cond, !dbg !11509

for.cond:                                         ; preds = %for.inc, %do.end
  %7 = load i32, i32* %i, align 4, !dbg !11510
  %cmp = icmp sle i32 %7, 7, !dbg !11512
  br i1 %cmp, label %for.body, label %for.end, !dbg !11513

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %iop_base, align 4, !dbg !11514
  %9 = load i32, i32* %i, align 4, !dbg !11514
  %conv = trunc i32 %9 to i16, !dbg !11514
  %conv2 = zext i16 %conv to i32, !dbg !11514
  %add = add i32 16, %conv2, !dbg !11514
  %conv3 = trunc i32 %add to i16, !dbg !11514
  %10 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11514
  %cfg = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %10, i32 0, i32 26, !dbg !11514
  %11 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg, align 8, !dbg !11514
  %sdtr_period_offset = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %11, i32 0, i32 11, !dbg !11514
  %12 = load i32, i32* %i, align 4, !dbg !11514
  %idxprom = sext i32 %12 to i64, !dbg !11514
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %sdtr_period_offset, i64 0, i64 %idxprom, !dbg !11514
  %13 = load i8, i8* %arrayidx, align 1, !dbg !11514
  call void @AscWriteLramByte(i32 %8, i16 zeroext %conv3, i8 zeroext %13) #11, !dbg !11514
  br label %for.inc, !dbg !11516

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !11517
  %inc = add i32 %14, 1, !dbg !11517
  store i32 %inc, i32* %i, align 4, !dbg !11517
  br label %for.cond, !dbg !11518, !llvm.loop !11519

for.end:                                          ; preds = %for.cond
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11521
  call void @AscInitQLinkVar(%struct.asc_dvc_var* %15) #11, !dbg !11522
  %16 = load i32, i32* %iop_base, align 4, !dbg !11523
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11524
  %cfg4 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 26, !dbg !11525
  %18 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg4, align 8, !dbg !11525
  %disc_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %18, i32 0, i32 2, !dbg !11526
  %19 = load i8, i8* %disc_enable, align 2, !dbg !11526
  call void @AscWriteLramByte(i32 %16, i16 zeroext 82, i8 zeroext %19) #11, !dbg !11527
  %20 = load i32, i32* %iop_base, align 4, !dbg !11528
  %21 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11529
  %cfg5 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %21, i32 0, i32 26, !dbg !11529
  %22 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg5, align 8, !dbg !11529
  %chip_scsi_id = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %22, i32 0, i32 4, !dbg !11529
  %23 = load i8, i8* %chip_scsi_id, align 2, !dbg !11529
  %conv6 = zext i8 %23 to i32, !dbg !11529
  %shl = shl i32 1, %conv6, !dbg !11529
  %conv7 = trunc i32 %shl to i8, !dbg !11529
  call void @AscWriteLramByte(i32 %20, i16 zeroext 85, i8 zeroext %conv7) #11, !dbg !11530
  br label %do.body8, !dbg !11531

do.body8:                                         ; preds = %for.end
  %24 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11532
  %overrun_buf = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %24, i32 0, i32 11, !dbg !11532
  %25 = load i8*, i8** %overrun_buf, align 8, !dbg !11532
  %26 = ptrtoint i8* %25 to i64, !dbg !11532
  %and = and i64 %26, 7, !dbg !11532
  %tobool = icmp ne i64 %and, 0, !dbg !11532
  %lnot = xor i1 %tobool, true, !dbg !11532
  %lnot9 = xor i1 %lnot, true, !dbg !11532
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !11532
  %conv10 = sext i32 %lnot.ext to i64, !dbg !11532
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !11532
  br i1 %tobool11, label %if.then, label %if.end, !dbg !11535

if.then:                                          ; preds = %do.body8
  br label %do.body12, !dbg !11532

do.body12:                                        ; preds = %if.then
  br label %do.body13, !dbg !11536

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !11538

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !11536

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 4037, i32 0, i64 12) #6, !dbg !11540, !srcloc !11542
  br label %do.end16, !dbg !11540

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !11536

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 298) #6, !dbg !11543, !srcloc !11546
  unreachable, !dbg !11547

do.end18:                                         ; No predecessors!
  br label %do.end19, !dbg !11536

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !11536

if.end:                                           ; preds = %do.end19, %do.body8
  br label %do.end20, !dbg !11535

do.end20:                                         ; preds = %if.end
  %27 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !11548
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %27, i32 0, i32 0, !dbg !11548
  %28 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11548
  %29 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11548
  %overrun_buf21 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %29, i32 0, i32 11, !dbg !11548
  %30 = load i8*, i8** %overrun_buf21, align 8, !dbg !11548
  %call = call i64 @dma_map_single_attrs(%struct.device* %28, i8* %30, i64 64, i32 2, i64 0) #11, !dbg !11548
  %31 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11549
  %overrun_dma = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %31, i32 0, i32 12, !dbg !11550
  store i64 %call, i64* %overrun_dma, align 8, !dbg !11551
  %32 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !11552
  %dev22 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %32, i32 0, i32 0, !dbg !11554
  %33 = load %struct.device*, %struct.device** %dev22, align 8, !dbg !11554
  %34 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11555
  %overrun_dma23 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %34, i32 0, i32 12, !dbg !11556
  %35 = load i64, i64* %overrun_dma23, align 8, !dbg !11556
  %call24 = call i32 @dma_mapping_error(%struct.device* %33, i64 %35) #11, !dbg !11557
  %tobool25 = icmp ne i32 %call24, 0, !dbg !11557
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !11558

if.then26:                                        ; preds = %do.end20
  store i32 -12, i32* %warn_code, align 4, !dbg !11559
  br label %err_dma_map, !dbg !11561

if.end27:                                         ; preds = %do.end20
  %36 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11562
  %overrun_dma28 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %36, i32 0, i32 12, !dbg !11562
  %37 = load i64, i64* %overrun_dma28, align 8, !dbg !11562
  %conv29 = trunc i64 %37 to i32, !dbg !11562
  store i32 %conv29, i32* %phy_addr, align 4, !dbg !11563
  %38 = load i32, i32* %iop_base, align 4, !dbg !11564
  %39 = bitcast i32* %phy_addr to i8*, !dbg !11565
  call void @AscMemDWordCopyPtrToLram(i32 %38, i16 zeroext 56, i8* %39, i32 1) #11, !dbg !11566
  store i32 64, i32* %phy_size, align 4, !dbg !11567
  %40 = load i32, i32* %iop_base, align 4, !dbg !11568
  %41 = bitcast i32* %phy_size to i8*, !dbg !11569
  call void @AscMemDWordCopyPtrToLram(i32 %40, i16 zeroext 60, i8* %41, i32 1) #11, !dbg !11570
  %42 = load i32, i32* %iop_base, align 4, !dbg !11571
  %call30 = call zeroext i16 @AscReadLramWord(i32 %42, i16 zeroext 68) #11, !dbg !11572
  %43 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11573
  %cfg31 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %43, i32 0, i32 26, !dbg !11574
  %44 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg31, align 8, !dbg !11574
  %mcode_date = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %44, i32 0, i32 8, !dbg !11575
  store i16 %call30, i16* %mcode_date, align 2, !dbg !11576
  %45 = load i32, i32* %iop_base, align 4, !dbg !11577
  %call32 = call zeroext i16 @AscReadLramWord(i32 %45, i16 zeroext 70) #11, !dbg !11578
  %46 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11579
  %cfg33 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %46, i32 0, i32 26, !dbg !11580
  %47 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg33, align 8, !dbg !11580
  %mcode_version = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %47, i32 0, i32 9, !dbg !11581
  store i16 %call32, i16* %mcode_version, align 2, !dbg !11582
  %48 = load i32, i32* %iop_base, align 4, !dbg !11583
  %add34 = add i32 %48, 12, !dbg !11583
  call void @outw(i16 zeroext 128, i32 %add34) #11, !dbg !11583
  %49 = load i32, i32* %iop_base, align 4, !dbg !11584
  %add35 = add i32 %49, 12, !dbg !11584
  %call36 = call zeroext i16 @inw(i32 %add35) #11, !dbg !11584
  %conv37 = zext i16 %call36 to i32, !dbg !11584
  %cmp38 = icmp ne i32 %conv37, 128, !dbg !11586
  br i1 %cmp38, label %if.then40, label %if.end43, !dbg !11587

if.then40:                                        ; preds = %if.end27
  %50 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11588
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %50, i32 0, i32 1, !dbg !11590
  %51 = load i16, i16* %err_code, align 4, !dbg !11591
  %conv41 = zext i16 %51 to i32, !dbg !11591
  %or = or i32 %conv41, 4, !dbg !11591
  %conv42 = trunc i32 %or to i16, !dbg !11591
  store i16 %conv42, i16* %err_code, align 4, !dbg !11591
  store i32 -22, i32* %warn_code, align 4, !dbg !11592
  br label %err_mcode_start, !dbg !11593

if.end43:                                         ; preds = %if.end27
  %52 = load i32, i32* %iop_base, align 4, !dbg !11594
  %call44 = call i32 @AscStartChip(i32 %52) #11, !dbg !11596
  %cmp45 = icmp ne i32 %call44, 1, !dbg !11597
  br i1 %cmp45, label %if.then47, label %if.end52, !dbg !11598

if.then47:                                        ; preds = %if.end43
  %53 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11599
  %err_code48 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %53, i32 0, i32 1, !dbg !11601
  %54 = load i16, i16* %err_code48, align 4, !dbg !11602
  %conv49 = zext i16 %54 to i32, !dbg !11602
  %or50 = or i32 %conv49, 8, !dbg !11602
  %conv51 = trunc i32 %or50 to i16, !dbg !11602
  store i16 %conv51, i16* %err_code48, align 4, !dbg !11602
  store i32 -5, i32* %warn_code, align 4, !dbg !11603
  br label %err_mcode_start, !dbg !11604

if.end52:                                         ; preds = %if.end43
  %55 = load i32, i32* %warn_code, align 4, !dbg !11605
  store i32 %55, i32* %retval, align 4, !dbg !11606
  br label %return, !dbg !11606

err_mcode_start:                                  ; preds = %if.then47, %if.then40
  call void @llvm.dbg.label(metadata !11607), !dbg !11608
  %56 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !11609
  %dev53 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %56, i32 0, i32 0, !dbg !11609
  %57 = load %struct.device*, %struct.device** %dev53, align 8, !dbg !11609
  %58 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11609
  %overrun_dma54 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %58, i32 0, i32 12, !dbg !11609
  %59 = load i64, i64* %overrun_dma54, align 8, !dbg !11609
  call void @dma_unmap_single_attrs(%struct.device* %57, i64 %59, i64 64, i32 2, i64 0) #11, !dbg !11609
  br label %err_dma_map, !dbg !11609

err_dma_map:                                      ; preds = %err_mcode_start, %if.then26
  call void @llvm.dbg.label(metadata !11610), !dbg !11611
  %60 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11612
  %overrun_dma55 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %60, i32 0, i32 12, !dbg !11613
  store i64 0, i64* %overrun_dma55, align 8, !dbg !11614
  %61 = load i32, i32* %warn_code, align 4, !dbg !11615
  store i32 %61, i32* %retval, align 4, !dbg !11616
  br label %return, !dbg !11616

return:                                           ; preds = %err_dma_map, %if.end52
  %62 = load i32, i32* %retval, align 4, !dbg !11617
  ret i32 %62, !dbg !11617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscEnableInterrupt(i32 %iop_base) #2 !dbg !11618 {
entry:
  %iop_base.addr = alloca i32, align 4
  %cfg = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.declare(metadata i16* %cfg, metadata !11621, metadata !DIExpression()), !dbg !11622
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11623
  %add = add i32 %0, 2, !dbg !11623
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !11623
  store i16 %call, i16* %cfg, align 2, !dbg !11624
  %1 = load i16, i16* %cfg, align 2, !dbg !11625
  %conv = zext i16 %1 to i32, !dbg !11625
  %or = or i32 %conv, 32, !dbg !11625
  %conv1 = trunc i32 %or to i16, !dbg !11625
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !11625
  %add2 = add i32 %2, 2, !dbg !11625
  call void @outw(i16 zeroext %conv1, i32 %add2) #11, !dbg !11625
  ret void, !dbg !11626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @AscStopChip(i32 %iop_base) #2 !dbg !11627 {
entry:
  %retval = alloca i1, align 1
  %iop_base.addr = alloca i32, align 4
  %cc_val = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  call void @llvm.dbg.declare(metadata i8* %cc_val, metadata !11632, metadata !DIExpression()), !dbg !11633
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11634
  %add = add i32 %0, 15, !dbg !11634
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !11634
  %conv = zext i8 %call to i32, !dbg !11634
  %and = and i32 %conv, -22, !dbg !11635
  %conv1 = trunc i32 %and to i8, !dbg !11634
  store i8 %conv1, i8* %cc_val, align 1, !dbg !11636
  %1 = load i8, i8* %cc_val, align 1, !dbg !11637
  %conv2 = zext i8 %1 to i32, !dbg !11637
  %or = or i32 %conv2, 32, !dbg !11637
  %conv3 = trunc i32 %or to i8, !dbg !11637
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !11637
  %add4 = add i32 %2, 15, !dbg !11637
  call void @outb(i8 zeroext %conv3, i32 %add4) #11, !dbg !11637
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !11638
  call void @AscSetChipIH(i32 %3, i16 zeroext 25216) #11, !dbg !11639
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !11640
  call void @AscSetChipIH(i32 %4, i16 zeroext 29568) #11, !dbg !11641
  %5 = load i32, i32* %iop_base.addr, align 4, !dbg !11642
  %add5 = add i32 %5, 14, !dbg !11642
  %call6 = call zeroext i16 @inw(i32 %add5) #11, !dbg !11642
  %conv7 = zext i16 %call6 to i32, !dbg !11642
  %and8 = and i32 %conv7, 16, !dbg !11644
  %cmp = icmp eq i32 %and8, 0, !dbg !11645
  br i1 %cmp, label %if.then, label %if.end, !dbg !11646

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11647
  br label %return, !dbg !11647

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11649
  br label %return, !dbg !11649

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !11650
  ret i1 %6, !dbg !11650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #2 !dbg !11651 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !11654, metadata !DIExpression()), !dbg !11655
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11656, metadata !DIExpression()), !dbg !11655
  %0 = load i8, i8* %value.addr, align 1, !dbg !11655
  %1 = load i32, i32* %port.addr, align 4, !dbg !11655
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #6, !dbg !11655, !srcloc !11657
  ret void, !dbg !11655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscSetChipIH(i32 %iop_base, i16 zeroext %ins_code) #2 !dbg !11658 {
entry:
  %iop_base.addr = alloca i32, align 4
  %ins_code.addr = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11661, metadata !DIExpression()), !dbg !11662
  store i16 %ins_code, i16* %ins_code.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ins_code.addr, metadata !11663, metadata !DIExpression()), !dbg !11664
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11665
  call void @AscSetBank(i32 %0, i8 zeroext 1) #11, !dbg !11666
  %1 = load i16, i16* %ins_code.addr, align 2, !dbg !11667
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !11667
  %add = add i32 %2, 2, !dbg !11667
  call void @outw(i16 zeroext %1, i32 %add) #11, !dbg !11667
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !11668
  call void @AscSetBank(i32 %3, i8 zeroext 0) #11, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @AscIsChipHalted(i32 %iop_base) #2 !dbg !11671 {
entry:
  %retval = alloca i1, align 1
  %iop_base.addr = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11672, metadata !DIExpression()), !dbg !11673
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11674
  %add = add i32 %0, 14, !dbg !11674
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !11674
  %conv = zext i16 %call to i32, !dbg !11674
  %and = and i32 %conv, 16, !dbg !11676
  %cmp = icmp ne i32 %and, 0, !dbg !11677
  br i1 %cmp, label %if.then, label %if.end9, !dbg !11678

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !11679
  %add2 = add i32 %1, 15, !dbg !11679
  %call3 = call zeroext i8 @inb(i32 %add2) #11, !dbg !11679
  %conv4 = zext i8 %call3 to i32, !dbg !11679
  %and5 = and i32 %conv4, 32, !dbg !11682
  %cmp6 = icmp ne i32 %and5, 0, !dbg !11683
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !11684

if.then8:                                         ; preds = %if.then
  store i1 true, i1* %retval, align 1, !dbg !11685
  br label %return, !dbg !11685

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !11687

if.end9:                                          ; preds = %if.end, %entry
  store i1 false, i1* %retval, align 1, !dbg !11688
  br label %return, !dbg !11688

return:                                           ; preds = %if.end9, %if.then8
  %2 = load i1, i1* %retval, align 1, !dbg !11689
  ret i1 %2, !dbg !11689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #2 !dbg !11690 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.declare(metadata i8* %value, metadata !11695, metadata !DIExpression()), !dbg !11694
  %0 = load i32, i32* %port.addr, align 4, !dbg !11694
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !11694, !srcloc !11696
  store i8 %1, i8* %value, align 1, !dbg !11694
  %2 = load i8, i8* %value, align 1, !dbg !11694
  ret i8 %2, !dbg !11694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscSetBank(i32 %iop_base, i8 zeroext %bank) #2 !dbg !11697 {
entry:
  %iop_base.addr = alloca i32, align 4
  %bank.addr = alloca i8, align 1
  %val = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11700, metadata !DIExpression()), !dbg !11701
  store i8 %bank, i8* %bank.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bank.addr, metadata !11702, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.declare(metadata i8* %val, metadata !11704, metadata !DIExpression()), !dbg !11705
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11706
  %add = add i32 %0, 15, !dbg !11706
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !11706
  %conv = zext i8 %call to i32, !dbg !11706
  %and = and i32 %conv, -214, !dbg !11707
  %conv1 = trunc i32 %and to i8, !dbg !11706
  store i8 %conv1, i8* %val, align 1, !dbg !11708
  %1 = load i8, i8* %bank.addr, align 1, !dbg !11709
  %conv2 = zext i8 %1 to i32, !dbg !11709
  %cmp = icmp eq i32 %conv2, 1, !dbg !11711
  br i1 %cmp, label %if.then, label %if.else, !dbg !11712

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %val, align 1, !dbg !11713
  %conv4 = zext i8 %2 to i32, !dbg !11713
  %or = or i32 %conv4, 2, !dbg !11713
  %conv5 = trunc i32 %or to i8, !dbg !11713
  store i8 %conv5, i8* %val, align 1, !dbg !11713
  br label %if.end17, !dbg !11715

if.else:                                          ; preds = %entry
  %3 = load i8, i8* %bank.addr, align 1, !dbg !11716
  %conv6 = zext i8 %3 to i32, !dbg !11716
  %cmp7 = icmp eq i32 %conv6, 2, !dbg !11718
  br i1 %cmp7, label %if.then9, label %if.else13, !dbg !11719

if.then9:                                         ; preds = %if.else
  %4 = load i8, i8* %val, align 1, !dbg !11720
  %conv10 = zext i8 %4 to i32, !dbg !11720
  %or11 = or i32 %conv10, 3, !dbg !11720
  %conv12 = trunc i32 %or11 to i8, !dbg !11720
  store i8 %conv12, i8* %val, align 1, !dbg !11720
  br label %if.end, !dbg !11722

if.else13:                                        ; preds = %if.else
  %5 = load i8, i8* %val, align 1, !dbg !11723
  %conv14 = zext i8 %5 to i32, !dbg !11723
  %and15 = and i32 %conv14, -3, !dbg !11723
  %conv16 = trunc i32 %and15 to i8, !dbg !11723
  store i8 %conv16, i8* %val, align 1, !dbg !11723
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %6 = load i8, i8* %val, align 1, !dbg !11725
  %7 = load i32, i32* %iop_base.addr, align 4, !dbg !11725
  %add18 = add i32 %7, 15, !dbg !11725
  call void @outb(i8 zeroext %6, i32 %add18) #11, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscMemWordSetLram(i32 %iop_base, i16 zeroext %s_addr, i16 zeroext %set_wval, i32 %words) #2 !dbg !11727 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %set_wval.addr = alloca i16, align 2
  %words.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !11732, metadata !DIExpression()), !dbg !11733
  store i16 %set_wval, i16* %set_wval.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %set_wval.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  store i32 %words, i32* %words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %words.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11738, metadata !DIExpression()), !dbg !11739
  %0 = load i16, i16* %s_addr.addr, align 2, !dbg !11740
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !11740
  %add = add i32 %1, 10, !dbg !11740
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !11740
  store i32 0, i32* %i, align 4, !dbg !11741
  br label %for.cond, !dbg !11743

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !11744
  %3 = load i32, i32* %words.addr, align 4, !dbg !11746
  %cmp = icmp slt i32 %2, %3, !dbg !11747
  br i1 %cmp, label %for.body, label %for.end, !dbg !11748

for.body:                                         ; preds = %for.cond
  %4 = load i16, i16* %set_wval.addr, align 2, !dbg !11749
  %5 = load i32, i32* %iop_base.addr, align 4, !dbg !11749
  %add1 = add i32 %5, 8, !dbg !11749
  call void @outw(i16 zeroext %4, i32 %add1) #11, !dbg !11749
  br label %for.inc, !dbg !11751

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !11752
  %inc = add i32 %6, 1, !dbg !11752
  store i32 %inc, i32* %i, align 4, !dbg !11752
  br label %for.cond, !dbg !11753, !llvm.loop !11754

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscWriteLramByte(i32 %iop_base, i16 zeroext %addr, i8 zeroext %byte_val) #2 !dbg !11757 {
entry:
  %iop_base.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %byte_val.addr = alloca i8, align 1
  %word_data = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11760, metadata !DIExpression()), !dbg !11761
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !11762, metadata !DIExpression()), !dbg !11763
  store i8 %byte_val, i8* %byte_val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte_val.addr, metadata !11764, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.declare(metadata i16* %word_data, metadata !11766, metadata !DIExpression()), !dbg !11767
  %0 = load i16, i16* %addr.addr, align 2, !dbg !11768
  %conv = zext i16 %0 to i32, !dbg !11768
  %and = and i32 %conv, 1, !dbg !11768
  %cmp = icmp ne i32 %and, 0, !dbg !11768
  br i1 %cmp, label %if.then, label %if.else, !dbg !11770

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %addr.addr, align 2, !dbg !11771
  %dec = add i16 %1, -1, !dbg !11771
  store i16 %dec, i16* %addr.addr, align 2, !dbg !11771
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !11773
  %3 = load i16, i16* %addr.addr, align 2, !dbg !11774
  %call = call zeroext i16 @AscReadLramWord(i32 %2, i16 zeroext %3) #11, !dbg !11775
  store i16 %call, i16* %word_data, align 2, !dbg !11776
  %4 = load i16, i16* %word_data, align 2, !dbg !11777
  %conv2 = zext i16 %4 to i32, !dbg !11777
  %and3 = and i32 %conv2, 255, !dbg !11777
  %conv4 = trunc i32 %and3 to i16, !dbg !11777
  store i16 %conv4, i16* %word_data, align 2, !dbg !11777
  %5 = load i8, i8* %byte_val.addr, align 1, !dbg !11778
  %conv5 = zext i8 %5 to i16, !dbg !11779
  %conv6 = zext i16 %conv5 to i32, !dbg !11779
  %shl = shl i32 %conv6, 8, !dbg !11780
  %and7 = and i32 %shl, 65280, !dbg !11781
  %6 = load i16, i16* %word_data, align 2, !dbg !11782
  %conv8 = zext i16 %6 to i32, !dbg !11782
  %or = or i32 %conv8, %and7, !dbg !11782
  %conv9 = trunc i32 %or to i16, !dbg !11782
  store i16 %conv9, i16* %word_data, align 2, !dbg !11782
  br label %if.end, !dbg !11783

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %iop_base.addr, align 4, !dbg !11784
  %8 = load i16, i16* %addr.addr, align 2, !dbg !11786
  %call10 = call zeroext i16 @AscReadLramWord(i32 %7, i16 zeroext %8) #11, !dbg !11787
  store i16 %call10, i16* %word_data, align 2, !dbg !11788
  %9 = load i16, i16* %word_data, align 2, !dbg !11789
  %conv11 = zext i16 %9 to i32, !dbg !11789
  %and12 = and i32 %conv11, 65280, !dbg !11789
  %conv13 = trunc i32 %and12 to i16, !dbg !11789
  store i16 %conv13, i16* %word_data, align 2, !dbg !11789
  %10 = load i8, i8* %byte_val.addr, align 1, !dbg !11790
  %conv14 = zext i8 %10 to i16, !dbg !11791
  %conv15 = zext i16 %conv14 to i32, !dbg !11791
  %and16 = and i32 %conv15, 255, !dbg !11792
  %11 = load i16, i16* %word_data, align 2, !dbg !11793
  %conv17 = zext i16 %11 to i32, !dbg !11793
  %or18 = or i32 %conv17, %and16, !dbg !11793
  %conv19 = trunc i32 %or18 to i16, !dbg !11793
  store i16 %conv19, i16* %word_data, align 2, !dbg !11793
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %iop_base.addr, align 4, !dbg !11794
  %13 = load i16, i16* %addr.addr, align 2, !dbg !11795
  %14 = load i16, i16* %word_data, align 2, !dbg !11796
  call void @AscWriteLramWord(i32 %12, i16 zeroext %13, i16 zeroext %14) #11, !dbg !11797
  ret void, !dbg !11798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscMemSumLramWord(i32 %iop_base, i16 zeroext %s_addr, i32 %words) #2 !dbg !11799 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %words.addr = alloca i32, align 4
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !11804, metadata !DIExpression()), !dbg !11805
  store i32 %words, i32* %words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %words.addr, metadata !11806, metadata !DIExpression()), !dbg !11807
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !11808, metadata !DIExpression()), !dbg !11809
  store i32 0, i32* %sum, align 4, !dbg !11809
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11810, metadata !DIExpression()), !dbg !11811
  store i32 0, i32* %i, align 4, !dbg !11812
  br label %for.cond, !dbg !11814

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11815
  %1 = load i32, i32* %words.addr, align 4, !dbg !11817
  %cmp = icmp slt i32 %0, %1, !dbg !11818
  br i1 %cmp, label %for.body, label %for.end, !dbg !11819

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !11820
  %3 = load i16, i16* %s_addr.addr, align 2, !dbg !11822
  %call = call zeroext i16 @AscReadLramWord(i32 %2, i16 zeroext %3) #11, !dbg !11823
  %conv = zext i16 %call to i32, !dbg !11823
  %4 = load i32, i32* %sum, align 4, !dbg !11824
  %add = add i32 %4, %conv, !dbg !11824
  store i32 %add, i32* %sum, align 4, !dbg !11824
  br label %for.inc, !dbg !11825

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !11826
  %inc = add i32 %5, 1, !dbg !11826
  store i32 %inc, i32* %i, align 4, !dbg !11826
  %6 = load i16, i16* %s_addr.addr, align 2, !dbg !11827
  %conv1 = zext i16 %6 to i32, !dbg !11827
  %add2 = add i32 %conv1, 2, !dbg !11827
  %conv3 = trunc i32 %add2 to i16, !dbg !11827
  store i16 %conv3, i16* %s_addr.addr, align 2, !dbg !11827
  br label %for.cond, !dbg !11828, !llvm.loop !11829

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %sum, align 4, !dbg !11831
  ret i32 %7, !dbg !11832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscInitQLinkVar(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !11833 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %iop_base = alloca i32, align 4
  %i = alloca i32, align 4
  %lram_addr = alloca i16, align 2
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !11836, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11838, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.declare(metadata i16* %lram_addr, metadata !11840, metadata !DIExpression()), !dbg !11841
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11842
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !11843
  %1 = load i32, i32* %iop_base1, align 8, !dbg !11843
  store i32 %1, i32* %iop_base, align 4, !dbg !11844
  %2 = load i32, i32* %iop_base, align 4, !dbg !11845
  call void @AscWriteLramByte(i32 %2, i16 zeroext 72, i8 zeroext 1) #11, !dbg !11845
  %3 = load i32, i32* %iop_base, align 4, !dbg !11846
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11846
  %max_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 16, !dbg !11846
  %5 = load i8, i8* %max_total_qng, align 1, !dbg !11846
  call void @AscWriteLramByte(i32 %3, i16 zeroext 73, i8 zeroext %5) #11, !dbg !11846
  %6 = load i32, i32* %iop_base, align 4, !dbg !11847
  call void @AscWriteLramWord(i32 %6, i16 zeroext 88, i16 zeroext 1) #11, !dbg !11847
  %7 = load i32, i32* %iop_base, align 4, !dbg !11848
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11848
  %max_total_qng2 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %8, i32 0, i32 16, !dbg !11848
  %9 = load i8, i8* %max_total_qng2, align 1, !dbg !11848
  %conv = zext i8 %9 to i16, !dbg !11848
  call void @AscWriteLramWord(i32 %7, i16 zeroext 90, i16 zeroext %conv) #11, !dbg !11848
  %10 = load i32, i32* %iop_base, align 4, !dbg !11849
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11850
  %max_total_qng3 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %11, i32 0, i32 16, !dbg !11851
  %12 = load i8, i8* %max_total_qng3, align 1, !dbg !11851
  %conv4 = zext i8 %12 to i32, !dbg !11852
  %add = add i32 %conv4, 1, !dbg !11853
  %conv5 = trunc i32 %add to i8, !dbg !11854
  call void @AscWriteLramByte(i32 %10, i16 zeroext 79, i8 zeroext %conv5) #11, !dbg !11855
  %13 = load i32, i32* %iop_base, align 4, !dbg !11856
  %14 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11857
  %max_total_qng6 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %14, i32 0, i32 16, !dbg !11858
  %15 = load i8, i8* %max_total_qng6, align 1, !dbg !11858
  %conv7 = zext i8 %15 to i32, !dbg !11859
  %add8 = add i32 %conv7, 2, !dbg !11860
  %conv9 = trunc i32 %add8 to i8, !dbg !11861
  call void @AscWriteLramByte(i32 %13, i16 zeroext 80, i8 zeroext %conv9) #11, !dbg !11862
  %16 = load i32, i32* %iop_base, align 4, !dbg !11863
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !11864
  %max_total_qng10 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 16, !dbg !11865
  %18 = load i8, i8* %max_total_qng10, align 1, !dbg !11865
  call void @AscWriteLramByte(i32 %16, i16 zeroext 100, i8 zeroext %18) #11, !dbg !11866
  %19 = load i32, i32* %iop_base, align 4, !dbg !11867
  call void @AscWriteLramWord(i32 %19, i16 zeroext 48, i16 zeroext 0) #11, !dbg !11868
  %20 = load i32, i32* %iop_base, align 4, !dbg !11869
  call void @AscWriteLramWord(i32 %20, i16 zeroext 64, i16 zeroext 0) #11, !dbg !11870
  %21 = load i32, i32* %iop_base, align 4, !dbg !11871
  call void @AscWriteLramByte(i32 %21, i16 zeroext 54, i8 zeroext 0) #11, !dbg !11872
  %22 = load i32, i32* %iop_base, align 4, !dbg !11873
  call void @AscWriteLramByte(i32 %22, i16 zeroext 75, i8 zeroext 0) #11, !dbg !11874
  %23 = load i32, i32* %iop_base, align 4, !dbg !11875
  call void @AscWriteLramByte(i32 %23, i16 zeroext 104, i8 zeroext 0) #11, !dbg !11876
  %24 = load i32, i32* %iop_base, align 4, !dbg !11877
  call void @AscWriteLramByte(i32 %24, i16 zeroext 76, i8 zeroext 0) #11, !dbg !11877
  store i16 16384, i16* %lram_addr, align 2, !dbg !11878
  store i32 0, i32* %i, align 4, !dbg !11879
  br label %for.cond, !dbg !11881

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %i, align 4, !dbg !11882
  %cmp = icmp slt i32 %25, 32, !dbg !11884
  br i1 %cmp, label %for.body, label %for.end, !dbg !11885

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %iop_base, align 4, !dbg !11886
  %27 = load i16, i16* %lram_addr, align 2, !dbg !11888
  call void @AscWriteLramWord(i32 %26, i16 zeroext %27, i16 zeroext 0) #11, !dbg !11889
  br label %for.inc, !dbg !11890

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !11891
  %inc = add i32 %28, 1, !dbg !11891
  store i32 %inc, i32* %i, align 4, !dbg !11891
  %29 = load i16, i16* %lram_addr, align 2, !dbg !11892
  %conv12 = zext i16 %29 to i32, !dbg !11892
  %add13 = add i32 %conv12, 2, !dbg !11892
  %conv14 = trunc i32 %add13 to i16, !dbg !11892
  store i16 %conv14, i16* %lram_addr, align 2, !dbg !11892
  br label %for.cond, !dbg !11893, !llvm.loop !11894

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscStartChip(i32 %iop_base) #2 !dbg !11897 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !11898, metadata !DIExpression()), !dbg !11899
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !11900
  %add = add i32 %0, 15, !dbg !11900
  call void @outb(i8 zeroext 0, i32 %add) #11, !dbg !11900
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !11901
  %add1 = add i32 %1, 14, !dbg !11901
  %call = call zeroext i16 @inw(i32 %add1) #11, !dbg !11901
  %conv = zext i16 %call to i32, !dbg !11901
  %and = and i32 %conv, 16, !dbg !11903
  %cmp = icmp ne i32 %and, 0, !dbg !11904
  br i1 %cmp, label %if.then, label %if.end, !dbg !11905

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11906
  br label %return, !dbg !11906

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11908
  br label %return, !dbg !11908

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11909
  ret i32 %2, !dbg !11909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !11910 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11913, metadata !DIExpression()), !dbg !11914
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11923
  %1 = load i64, i64* %addr.addr, align 8, !dbg !11924
  %2 = load i64, i64* %size.addr, align 8, !dbg !11925
  %3 = load i32, i32* %dir.addr, align 4, !dbg !11926
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !11927
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !11928
  ret void, !dbg !11929
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !11930 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11933, metadata !DIExpression()), !dbg !11934
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11935, metadata !DIExpression()), !dbg !11934
  %0 = load i16, i16* %val.addr, align 2, !dbg !11934
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !11934
  %2 = bitcast i8* %1 to i16*, !dbg !11934
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #6, !dbg !11934, !srcloc !11936
  ret void, !dbg !11934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !11937 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !11944, metadata !DIExpression()), !dbg !11943
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !11943
  %1 = bitcast i8* %0 to i16*, !dbg !11943
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #6, !dbg !11943, !srcloc !11945
  store i16 %2, i16* %ret, align 2, !dbg !11943
  %3 = load i16, i16* %ret, align 2, !dbg !11943
  ret i16 %3, !dbg !11943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !11946 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !11951, metadata !DIExpression()), !dbg !11950
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !11950
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #6, !dbg !11950, !srcloc !11952
  store i8 %1, i8* %ret, align 1, !dbg !11950
  %2 = load i8, i8* %ret, align 1, !dbg !11950
  ret i8 %2, !dbg !11950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitAsc38C1600Driver(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !11953 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %fw = alloca %struct.firmware*, align 8
  %fwname = alloca [21 x i8], align 16
  %iop_base = alloca i8*, align 8
  %warn_code = alloca i16, align 2
  %begin_addr = alloca i32, align 4
  %end_addr = alloca i32, align 4
  %code_sum = alloca i16, align 2
  %word = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %chksum = alloca i64, align 8
  %scsi_cfg1 = alloca i16, align 2
  %byte = alloca i8, align 1
  %tid = alloca i8, align 1
  %bios_mem = alloca [40 x i16], align 16
  %wdtr_able = alloca i16, align 2
  %sdtr_able = alloca i16, align 2
  %ppr_able = alloca i16, align 2
  %tagqng_able = alloca i16, align 2
  %max_cmd = alloca [8 x i8], align 1
  %__ms = alloca i64, align 8
  %__ms69 = alloca i64, align 8
  %__ms87 = alloca i64, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr306 = alloca i8*, align 8
  %tmp = alloca %struct.asc_board*, align 8
  %tmp313 = alloca %struct.pci_dev*, align 8
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !11954, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !11956, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.declare(metadata [21 x i8]* %fwname, metadata !11958, metadata !DIExpression()), !dbg !11959
  %0 = bitcast [21 x i8]* %fwname to i8*, !dbg !11959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([21 x i8], [21 x i8]* @__const.AdvInitAsc38C1600Driver.fwname, i32 0, i32 0), i64 21, i1 false), !dbg !11959
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !11960, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !11962, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.declare(metadata i32* %begin_addr, metadata !11964, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.declare(metadata i32* %end_addr, metadata !11966, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.declare(metadata i16* %code_sum, metadata !11968, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.declare(metadata i64* %word, metadata !11970, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11972, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata i64* %chksum, metadata !11976, metadata !DIExpression()), !dbg !11977
  call void @llvm.dbg.declare(metadata i16* %scsi_cfg1, metadata !11978, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !11980, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.declare(metadata i8* %tid, metadata !11982, metadata !DIExpression()), !dbg !11983
  call void @llvm.dbg.declare(metadata [40 x i16]* %bios_mem, metadata !11984, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.declare(metadata i16* %wdtr_able, metadata !11989, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.declare(metadata i16* %sdtr_able, metadata !11991, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.declare(metadata i16* %ppr_able, metadata !11993, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.declare(metadata i16* %tagqng_able, metadata !11995, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.declare(metadata [8 x i8]* %max_cmd, metadata !11997, metadata !DIExpression()), !dbg !11998
  %1 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !11999
  %err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %1, i32 0, i32 1, !dbg !12001
  %2 = load i16, i16* %err_code, align 8, !dbg !12001
  %conv = zext i16 %2 to i32, !dbg !11999
  %cmp = icmp ne i32 %conv, 0, !dbg !12002
  br i1 %cmp, label %if.then, label %if.end, !dbg !12003

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12004
  br label %return, !dbg !12004

if.end:                                           ; preds = %entry
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12006
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 20, !dbg !12008
  %4 = load i8, i8* %chip_type, align 1, !dbg !12008
  %conv2 = zext i8 %4 to i32, !dbg !12006
  %cmp3 = icmp ne i32 %conv2, 3, !dbg !12009
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !12010

if.then5:                                         ; preds = %if.end
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12011
  %err_code6 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 1, !dbg !12013
  store i16 8192, i16* %err_code6, align 8, !dbg !12014
  store i32 -1, i32* %retval, align 4, !dbg !12015
  br label %return, !dbg !12015

if.end7:                                          ; preds = %if.end
  store i16 0, i16* %warn_code, align 2, !dbg !12016
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12017
  %iop_base8 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 0, !dbg !12018
  %7 = load i8*, i8** %iop_base8, align 8, !dbg !12018
  store i8* %7, i8** %iop_base, align 8, !dbg !12019
  store i32 0, i32* %i, align 4, !dbg !12020
  br label %for.cond, !dbg !12022

for.cond:                                         ; preds = %for.inc, %if.end7
  %8 = load i32, i32* %i, align 4, !dbg !12023
  %cmp9 = icmp slt i32 %8, 40, !dbg !12025
  br i1 %cmp9, label %for.body, label %for.end, !dbg !12026

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !12027

do.body:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !12029
  %mul = mul i32 2, %9, !dbg !12029
  %add = add i32 64, %mul, !dbg !12029
  %conv11 = trunc i32 %add to i16, !dbg !12029
  %10 = load i8*, i8** %iop_base, align 8, !dbg !12029
  %add.ptr = getelementptr i8, i8* %10, i64 4, !dbg !12029
  call void @writew(i16 zeroext %conv11, i8* %add.ptr) #11, !dbg !12029
  %11 = load i8*, i8** %iop_base, align 8, !dbg !12029
  %add.ptr12 = getelementptr i8, i8* %11, i64 6, !dbg !12029
  %call = call zeroext i16 @readw(i8* %add.ptr12) #11, !dbg !12029
  %12 = load i32, i32* %i, align 4, !dbg !12029
  %idxprom = sext i32 %12 to i64, !dbg !12029
  %arrayidx = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 %idxprom, !dbg !12029
  store i16 %call, i16* %arrayidx, align 2, !dbg !12029
  br label %do.end, !dbg !12029

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !12031

for.inc:                                          ; preds = %do.end
  %13 = load i32, i32* %i, align 4, !dbg !12032
  %inc = add i32 %13, 1, !dbg !12032
  store i32 %inc, i32* %i, align 4, !dbg !12032
  br label %for.cond, !dbg !12033, !llvm.loop !12034

for.end:                                          ; preds = %for.cond
  br label %do.body13, !dbg !12036

do.body13:                                        ; preds = %for.end
  %14 = load i8*, i8** %iop_base, align 8, !dbg !12037
  %add.ptr14 = getelementptr i8, i8* %14, i64 4, !dbg !12037
  call void @writew(i16 zeroext 156, i8* %add.ptr14) #11, !dbg !12037
  %15 = load i8*, i8** %iop_base, align 8, !dbg !12037
  %add.ptr15 = getelementptr i8, i8* %15, i64 6, !dbg !12037
  %call16 = call zeroext i16 @readw(i8* %add.ptr15) #11, !dbg !12037
  store i16 %call16, i16* %wdtr_able, align 2, !dbg !12037
  br label %do.end17, !dbg !12037

do.end17:                                         ; preds = %do.body13
  br label %do.body18, !dbg !12039

do.body18:                                        ; preds = %do.end17
  %16 = load i8*, i8** %iop_base, align 8, !dbg !12040
  %add.ptr19 = getelementptr i8, i8* %16, i64 4, !dbg !12040
  call void @writew(i16 zeroext 158, i8* %add.ptr19) #11, !dbg !12040
  %17 = load i8*, i8** %iop_base, align 8, !dbg !12040
  %add.ptr20 = getelementptr i8, i8* %17, i64 6, !dbg !12040
  %call21 = call zeroext i16 @readw(i8* %add.ptr20) #11, !dbg !12040
  store i16 %call21, i16* %sdtr_able, align 2, !dbg !12040
  br label %do.end22, !dbg !12040

do.end22:                                         ; preds = %do.body18
  br label %do.body23, !dbg !12042

do.body23:                                        ; preds = %do.end22
  %18 = load i8*, i8** %iop_base, align 8, !dbg !12043
  %add.ptr24 = getelementptr i8, i8* %18, i64 4, !dbg !12043
  call void @writew(i16 zeroext 378, i8* %add.ptr24) #11, !dbg !12043
  %19 = load i8*, i8** %iop_base, align 8, !dbg !12043
  %add.ptr25 = getelementptr i8, i8* %19, i64 6, !dbg !12043
  %call26 = call zeroext i16 @readw(i8* %add.ptr25) #11, !dbg !12043
  store i16 %call26, i16* %ppr_able, align 2, !dbg !12043
  br label %do.end27, !dbg !12043

do.end27:                                         ; preds = %do.body23
  br label %do.body28, !dbg !12045

do.body28:                                        ; preds = %do.end27
  %20 = load i8*, i8** %iop_base, align 8, !dbg !12046
  %add.ptr29 = getelementptr i8, i8* %20, i64 4, !dbg !12046
  call void @writew(i16 zeroext 160, i8* %add.ptr29) #11, !dbg !12046
  %21 = load i8*, i8** %iop_base, align 8, !dbg !12046
  %add.ptr30 = getelementptr i8, i8* %21, i64 6, !dbg !12046
  %call31 = call zeroext i16 @readw(i8* %add.ptr30) #11, !dbg !12046
  store i16 %call31, i16* %tagqng_able, align 2, !dbg !12046
  br label %do.end32, !dbg !12046

do.end32:                                         ; preds = %do.body28
  store i8 0, i8* %tid, align 1, !dbg !12048
  br label %for.cond33, !dbg !12050

for.cond33:                                       ; preds = %for.inc48, %do.end32
  %22 = load i8, i8* %tid, align 1, !dbg !12051
  %conv34 = zext i8 %22 to i32, !dbg !12051
  %cmp35 = icmp sle i32 %conv34, 7, !dbg !12053
  br i1 %cmp35, label %for.body37, label %for.end50, !dbg !12054

for.body37:                                       ; preds = %for.cond33
  br label %do.body38, !dbg !12055

do.body38:                                        ; preds = %for.body37
  %23 = load i8, i8* %tid, align 1, !dbg !12057
  %conv39 = zext i8 %23 to i32, !dbg !12057
  %add40 = add i32 208, %conv39, !dbg !12057
  %conv41 = trunc i32 %add40 to i16, !dbg !12057
  %24 = load i8*, i8** %iop_base, align 8, !dbg !12057
  %add.ptr42 = getelementptr i8, i8* %24, i64 4, !dbg !12057
  call void @writew(i16 zeroext %conv41, i8* %add.ptr42) #11, !dbg !12057
  %25 = load i8*, i8** %iop_base, align 8, !dbg !12057
  %add.ptr43 = getelementptr i8, i8* %25, i64 6, !dbg !12057
  %call44 = call zeroext i8 @readb(i8* %add.ptr43) #11, !dbg !12057
  %26 = load i8, i8* %tid, align 1, !dbg !12057
  %idxprom45 = zext i8 %26 to i64, !dbg !12057
  %arrayidx46 = getelementptr [8 x i8], [8 x i8]* %max_cmd, i64 0, i64 %idxprom45, !dbg !12057
  store i8 %call44, i8* %arrayidx46, align 1, !dbg !12057
  br label %do.end47, !dbg !12057

do.end47:                                         ; preds = %do.body38
  br label %for.inc48, !dbg !12059

for.inc48:                                        ; preds = %do.end47
  %27 = load i8, i8* %tid, align 1, !dbg !12060
  %inc49 = add i8 %27, 1, !dbg !12060
  store i8 %inc49, i8* %tid, align 1, !dbg !12060
  br label %for.cond33, !dbg !12061, !llvm.loop !12062

for.end50:                                        ; preds = %for.cond33
  store i32 0, i32* %i, align 4, !dbg !12064
  br label %for.cond51, !dbg !12066

for.cond51:                                       ; preds = %for.inc83, %for.end50
  %28 = load i32, i32* %i, align 4, !dbg !12067
  %cmp52 = icmp slt i32 %28, 2, !dbg !12069
  br i1 %cmp52, label %for.body54, label %for.end85, !dbg !12070

for.body54:                                       ; preds = %for.cond51
  %29 = load i8*, i8** %iop_base, align 8, !dbg !12071
  %add.ptr55 = getelementptr i8, i8* %29, i64 56, !dbg !12071
  call void @writeb(i8 zeroext 64, i8* %add.ptr55) #11, !dbg !12071
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !12073, metadata !DIExpression()), !dbg !12075
  store i64 10, i64* %__ms, align 8, !dbg !12075
  br label %while.cond, !dbg !12075

while.cond:                                       ; preds = %while.body, %for.body54
  %30 = load i64, i64* %__ms, align 8, !dbg !12075
  %dec = add i64 %30, -1, !dbg !12075
  store i64 %dec, i64* %__ms, align 8, !dbg !12075
  %tobool = icmp ne i64 %30, 0, !dbg !12075
  br i1 %tobool, label %while.body, label %while.end, !dbg !12075

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !12076
  br label %while.cond, !dbg !12075, !llvm.loop !12081

while.end:                                        ; preds = %while.cond
  %31 = load i8*, i8** %iop_base, align 8, !dbg !12082
  %add.ptr56 = getelementptr i8, i8* %31, i64 56, !dbg !12082
  %call57 = call zeroext i8 @readb(i8* %add.ptr56) #11, !dbg !12082
  store i8 %call57, i8* %byte, align 1, !dbg !12083
  %32 = load i8, i8* %byte, align 1, !dbg !12084
  %conv58 = zext i8 %32 to i32, !dbg !12084
  %and = and i32 %conv58, 16, !dbg !12086
  %cmp59 = icmp eq i32 %and, 0, !dbg !12087
  br i1 %cmp59, label %if.then65, label %lor.lhs.false, !dbg !12088

lor.lhs.false:                                    ; preds = %while.end
  %33 = load i8, i8* %byte, align 1, !dbg !12089
  %conv61 = zext i8 %33 to i32, !dbg !12089
  %and62 = and i32 %conv61, 15, !dbg !12090
  %cmp63 = icmp ne i32 %and62, 5, !dbg !12091
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !12092

if.then65:                                        ; preds = %lor.lhs.false, %while.end
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12093
  %err_code66 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %34, i32 0, i32 1, !dbg !12095
  store i16 2048, i16* %err_code66, align 8, !dbg !12096
  store i32 -1, i32* %retval, align 4, !dbg !12097
  br label %return, !dbg !12097

if.end67:                                         ; preds = %lor.lhs.false
  %35 = load i8*, i8** %iop_base, align 8, !dbg !12098
  %add.ptr68 = getelementptr i8, i8* %35, i64 56, !dbg !12098
  call void @writeb(i8 zeroext 0, i8* %add.ptr68) #11, !dbg !12098
  call void @llvm.dbg.declare(metadata i64* %__ms69, metadata !12099, metadata !DIExpression()), !dbg !12101
  store i64 10, i64* %__ms69, align 8, !dbg !12101
  br label %while.cond70, !dbg !12101

while.cond70:                                     ; preds = %while.body73, %if.end67
  %36 = load i64, i64* %__ms69, align 8, !dbg !12101
  %dec71 = add i64 %36, -1, !dbg !12101
  store i64 %dec71, i64* %__ms69, align 8, !dbg !12101
  %tobool72 = icmp ne i64 %36, 0, !dbg !12101
  br i1 %tobool72, label %while.body73, label %while.end74, !dbg !12101

while.body73:                                     ; preds = %while.cond70
  call void @__const_udelay(i64 4295000) #11, !dbg !12102
  br label %while.cond70, !dbg !12101, !llvm.loop !12107

while.end74:                                      ; preds = %while.cond70
  %37 = load i8*, i8** %iop_base, align 8, !dbg !12108
  %add.ptr75 = getelementptr i8, i8* %37, i64 56, !dbg !12108
  %call76 = call zeroext i8 @readb(i8* %add.ptr75) #11, !dbg !12108
  %conv77 = zext i8 %call76 to i32, !dbg !12108
  %cmp78 = icmp ne i32 %conv77, 0, !dbg !12110
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !12111

if.then80:                                        ; preds = %while.end74
  %38 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12112
  %err_code81 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %38, i32 0, i32 1, !dbg !12114
  store i16 2048, i16* %err_code81, align 8, !dbg !12115
  store i32 -1, i32* %retval, align 4, !dbg !12116
  br label %return, !dbg !12116

if.end82:                                         ; preds = %while.end74
  br label %for.inc83, !dbg !12117

for.inc83:                                        ; preds = %if.end82
  %39 = load i32, i32* %i, align 4, !dbg !12118
  %inc84 = add i32 %39, 1, !dbg !12118
  store i32 %inc84, i32* %i, align 4, !dbg !12118
  br label %for.cond51, !dbg !12119, !llvm.loop !12120

for.end85:                                        ; preds = %for.cond51
  %40 = load i8*, i8** %iop_base, align 8, !dbg !12122
  %add.ptr86 = getelementptr i8, i8* %40, i64 56, !dbg !12122
  call void @writeb(i8 zeroext -128, i8* %add.ptr86) #11, !dbg !12122
  call void @llvm.dbg.declare(metadata i64* %__ms87, metadata !12123, metadata !DIExpression()), !dbg !12125
  store i64 10, i64* %__ms87, align 8, !dbg !12125
  br label %while.cond88, !dbg !12125

while.cond88:                                     ; preds = %while.body91, %for.end85
  %41 = load i64, i64* %__ms87, align 8, !dbg !12125
  %dec89 = add i64 %41, -1, !dbg !12125
  store i64 %dec89, i64* %__ms87, align 8, !dbg !12125
  %tobool90 = icmp ne i64 %41, 0, !dbg !12125
  br i1 %tobool90, label %while.body91, label %while.end92, !dbg !12125

while.body91:                                     ; preds = %while.cond88
  call void @__const_udelay(i64 4295000) #11, !dbg !12126
  br label %while.cond88, !dbg !12125, !llvm.loop !12131

while.end92:                                      ; preds = %while.cond88
  %42 = load i8*, i8** %iop_base, align 8, !dbg !12132
  %add.ptr93 = getelementptr i8, i8* %42, i64 56, !dbg !12132
  %call94 = call zeroext i8 @readb(i8* %add.ptr93) #11, !dbg !12132
  store i8 %call94, i8* %byte, align 1, !dbg !12133
  %43 = load i8, i8* %byte, align 1, !dbg !12134
  %conv95 = zext i8 %43 to i32, !dbg !12134
  %and96 = and i32 %conv95, 16, !dbg !12136
  %cmp97 = icmp eq i32 %and96, 0, !dbg !12137
  br i1 %cmp97, label %if.then104, label %lor.lhs.false99, !dbg !12138

lor.lhs.false99:                                  ; preds = %while.end92
  %44 = load i8, i8* %byte, align 1, !dbg !12139
  %conv100 = zext i8 %44 to i32, !dbg !12139
  %and101 = and i32 %conv100, 15, !dbg !12140
  %cmp102 = icmp ne i32 %and101, 0, !dbg !12141
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !12142

if.then104:                                       ; preds = %lor.lhs.false99, %while.end92
  %45 = load i8, i8* %byte, align 1, !dbg !12143
  %46 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12145
  %bist_err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %46, i32 0, i32 21, !dbg !12146
  store i8 %45, i8* %bist_err_code, align 2, !dbg !12147
  %47 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12148
  %err_code105 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %47, i32 0, i32 1, !dbg !12149
  store i16 4096, i16* %err_code105, align 8, !dbg !12150
  store i32 -1, i32* %retval, align 4, !dbg !12151
  br label %return, !dbg !12151

if.end106:                                        ; preds = %lor.lhs.false99
  %48 = load i8*, i8** %iop_base, align 8, !dbg !12152
  %add.ptr107 = getelementptr i8, i8* %48, i64 56, !dbg !12152
  call void @writeb(i8 zeroext 0, i8* %add.ptr107) #11, !dbg !12152
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %fwname, i64 0, i64 0, !dbg !12153
  %49 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12154
  %drv_ptr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %49, i32 0, i32 18, !dbg !12155
  %50 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !12155
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %50, i32 0, i32 0, !dbg !12156
  %51 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12156
  %call108 = call i32 @request_firmware(%struct.firmware** %fw, i8* %arraydecay, %struct.device* %51) #11, !dbg !12157
  store i32 %call108, i32* %err, align 4, !dbg !12158
  %52 = load i32, i32* %err, align 4, !dbg !12159
  %tobool109 = icmp ne i32 %52, 0, !dbg !12159
  br i1 %tobool109, label %if.then110, label %if.end114, !dbg !12161

if.then110:                                       ; preds = %if.end106
  %arraydecay111 = getelementptr inbounds [21 x i8], [21 x i8]* %fwname, i64 0, i64 0, !dbg !12162
  %53 = load i32, i32* %err, align 4, !dbg !12164
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0), i8* %arraydecay111, i32 %53) #12, !dbg !12165
  %54 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12166
  %err_code113 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %54, i32 0, i32 1, !dbg !12167
  store i16 2, i16* %err_code113, align 8, !dbg !12168
  %55 = load i32, i32* %err, align 4, !dbg !12169
  store i32 %55, i32* %retval, align 4, !dbg !12170
  br label %return, !dbg !12170

if.end114:                                        ; preds = %if.end106
  %56 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12171
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %56, i32 0, i32 0, !dbg !12173
  %57 = load i64, i64* %size, align 8, !dbg !12173
  %cmp115 = icmp ult i64 %57, 4, !dbg !12174
  br i1 %cmp115, label %if.then117, label %if.end122, !dbg !12175

if.then117:                                       ; preds = %if.end114
  %58 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12176
  %size118 = getelementptr inbounds %struct.firmware, %struct.firmware* %58, i32 0, i32 0, !dbg !12178
  %59 = load i64, i64* %size118, align 8, !dbg !12178
  %arraydecay119 = getelementptr inbounds [21 x i8], [21 x i8]* %fwname, i64 0, i64 0, !dbg !12179
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i64 %59, i8* %arraydecay119) #12, !dbg !12180
  %60 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12181
  call void @release_firmware(%struct.firmware* %60) #11, !dbg !12182
  %61 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12183
  %err_code121 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %61, i32 0, i32 1, !dbg !12184
  store i16 2, i16* %err_code121, align 8, !dbg !12185
  store i32 -22, i32* %retval, align 4, !dbg !12186
  br label %return, !dbg !12186

if.end122:                                        ; preds = %if.end114
  %62 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12187
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %62, i32 0, i32 1, !dbg !12188
  %63 = load i8*, i8** %data, align 8, !dbg !12188
  %arrayidx123 = getelementptr i8, i8* %63, i64 3, !dbg !12187
  %64 = load i8, i8* %arrayidx123, align 1, !dbg !12187
  %conv124 = zext i8 %64 to i32, !dbg !12187
  %shl = shl i32 %conv124, 24, !dbg !12189
  %65 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12190
  %data125 = getelementptr inbounds %struct.firmware, %struct.firmware* %65, i32 0, i32 1, !dbg !12191
  %66 = load i8*, i8** %data125, align 8, !dbg !12191
  %arrayidx126 = getelementptr i8, i8* %66, i64 2, !dbg !12190
  %67 = load i8, i8* %arrayidx126, align 1, !dbg !12190
  %conv127 = zext i8 %67 to i32, !dbg !12190
  %shl128 = shl i32 %conv127, 16, !dbg !12192
  %or = or i32 %shl, %shl128, !dbg !12193
  %68 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12194
  %data129 = getelementptr inbounds %struct.firmware, %struct.firmware* %68, i32 0, i32 1, !dbg !12195
  %69 = load i8*, i8** %data129, align 8, !dbg !12195
  %arrayidx130 = getelementptr i8, i8* %69, i64 1, !dbg !12194
  %70 = load i8, i8* %arrayidx130, align 1, !dbg !12194
  %conv131 = zext i8 %70 to i32, !dbg !12194
  %shl132 = shl i32 %conv131, 8, !dbg !12196
  %or133 = or i32 %or, %shl132, !dbg !12197
  %71 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12198
  %data134 = getelementptr inbounds %struct.firmware, %struct.firmware* %71, i32 0, i32 1, !dbg !12199
  %72 = load i8*, i8** %data134, align 8, !dbg !12199
  %arrayidx135 = getelementptr i8, i8* %72, i64 0, !dbg !12198
  %73 = load i8, i8* %arrayidx135, align 1, !dbg !12198
  %conv136 = zext i8 %73 to i32, !dbg !12198
  %or137 = or i32 %or133, %conv136, !dbg !12200
  %conv138 = sext i32 %or137 to i64, !dbg !12201
  store i64 %conv138, i64* %chksum, align 8, !dbg !12202
  %74 = load i8*, i8** %iop_base, align 8, !dbg !12203
  %75 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12204
  %data139 = getelementptr inbounds %struct.firmware, %struct.firmware* %75, i32 0, i32 1, !dbg !12205
  %76 = load i8*, i8** %data139, align 8, !dbg !12205
  %arrayidx140 = getelementptr i8, i8* %76, i64 4, !dbg !12204
  %77 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12206
  %size141 = getelementptr inbounds %struct.firmware, %struct.firmware* %77, i32 0, i32 0, !dbg !12207
  %78 = load i64, i64* %size141, align 8, !dbg !12207
  %sub = sub i64 %78, 4, !dbg !12208
  %conv142 = trunc i64 %sub to i32, !dbg !12206
  %79 = load i64, i64* %chksum, align 8, !dbg !12209
  %conv143 = trunc i64 %79 to i32, !dbg !12209
  %call144 = call i32 @AdvLoadMicrocode(i8* %74, i8* %arrayidx140, i32 %conv142, i32 16384, i32 %conv143) #11, !dbg !12210
  %conv145 = trunc i32 %call144 to i16, !dbg !12210
  %80 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12211
  %err_code146 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %80, i32 0, i32 1, !dbg !12212
  store i16 %conv145, i16* %err_code146, align 8, !dbg !12213
  %81 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12214
  call void @release_firmware(%struct.firmware* %81) #11, !dbg !12215
  %82 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12216
  %err_code147 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %82, i32 0, i32 1, !dbg !12218
  %83 = load i16, i16* %err_code147, align 8, !dbg !12218
  %tobool148 = icmp ne i16 %83, 0, !dbg !12216
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !12219

if.then149:                                       ; preds = %if.end122
  store i32 -1, i32* %retval, align 4, !dbg !12220
  br label %return, !dbg !12220

if.end150:                                        ; preds = %if.end122
  store i32 0, i32* %i, align 4, !dbg !12221
  br label %for.cond151, !dbg !12223

for.cond151:                                      ; preds = %for.inc162, %if.end150
  %84 = load i32, i32* %i, align 4, !dbg !12224
  %cmp152 = icmp slt i32 %84, 40, !dbg !12226
  br i1 %cmp152, label %for.body154, label %for.end164, !dbg !12227

for.body154:                                      ; preds = %for.cond151
  %85 = load i32, i32* %i, align 4, !dbg !12228
  %mul155 = mul i32 2, %85, !dbg !12228
  %add156 = add i32 64, %mul155, !dbg !12228
  %conv157 = trunc i32 %add156 to i16, !dbg !12228
  %86 = load i8*, i8** %iop_base, align 8, !dbg !12228
  %add.ptr158 = getelementptr i8, i8* %86, i64 4, !dbg !12228
  call void @writew(i16 zeroext %conv157, i8* %add.ptr158) #11, !dbg !12228
  %87 = load i32, i32* %i, align 4, !dbg !12228
  %idxprom159 = sext i32 %87 to i64, !dbg !12228
  %arrayidx160 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 %idxprom159, !dbg !12228
  %88 = load i16, i16* %arrayidx160, align 2, !dbg !12228
  %89 = load i8*, i8** %iop_base, align 8, !dbg !12228
  %add.ptr161 = getelementptr i8, i8* %89, i64 6, !dbg !12228
  call void @writew(i16 zeroext %88, i8* %add.ptr161) #11, !dbg !12228
  br label %for.inc162, !dbg !12230

for.inc162:                                       ; preds = %for.body154
  %90 = load i32, i32* %i, align 4, !dbg !12231
  %inc163 = add i32 %90, 1, !dbg !12231
  store i32 %inc163, i32* %i, align 4, !dbg !12231
  br label %for.cond151, !dbg !12232, !llvm.loop !12233

for.end164:                                       ; preds = %for.cond151
  br label %do.body165, !dbg !12235

do.body165:                                       ; preds = %for.end164
  %91 = load i8*, i8** %iop_base, align 8, !dbg !12236
  %add.ptr166 = getelementptr i8, i8* %91, i64 4, !dbg !12236
  call void @writew(i16 zeroext 40, i8* %add.ptr166) #11, !dbg !12236
  %92 = load i8*, i8** %iop_base, align 8, !dbg !12236
  %add.ptr167 = getelementptr i8, i8* %92, i64 6, !dbg !12236
  %call168 = call zeroext i16 @readw(i8* %add.ptr167) #11, !dbg !12236
  %conv169 = zext i16 %call168 to i32, !dbg !12236
  store i32 %conv169, i32* %begin_addr, align 4, !dbg !12236
  br label %do.end170, !dbg !12236

do.end170:                                        ; preds = %do.body165
  br label %do.body171, !dbg !12238

do.body171:                                       ; preds = %do.end170
  %93 = load i8*, i8** %iop_base, align 8, !dbg !12239
  %add.ptr172 = getelementptr i8, i8* %93, i64 4, !dbg !12239
  call void @writew(i16 zeroext 42, i8* %add.ptr172) #11, !dbg !12239
  %94 = load i8*, i8** %iop_base, align 8, !dbg !12239
  %add.ptr173 = getelementptr i8, i8* %94, i64 6, !dbg !12239
  %call174 = call zeroext i16 @readw(i8* %add.ptr173) #11, !dbg !12239
  %conv175 = zext i16 %call174 to i32, !dbg !12239
  store i32 %conv175, i32* %end_addr, align 4, !dbg !12239
  br label %do.end176, !dbg !12239

do.end176:                                        ; preds = %do.body171
  store i16 0, i16* %code_sum, align 2, !dbg !12241
  %95 = load i32, i32* %begin_addr, align 4, !dbg !12242
  %conv177 = trunc i32 %95 to i16, !dbg !12242
  %96 = load i8*, i8** %iop_base, align 8, !dbg !12242
  %add.ptr178 = getelementptr i8, i8* %96, i64 4, !dbg !12242
  call void @writew(i16 zeroext %conv177, i8* %add.ptr178) #11, !dbg !12242
  %97 = load i32, i32* %begin_addr, align 4, !dbg !12243
  %conv179 = sext i32 %97 to i64, !dbg !12243
  store i64 %conv179, i64* %word, align 8, !dbg !12245
  br label %for.cond180, !dbg !12246

for.cond180:                                      ; preds = %for.inc191, %do.end176
  %98 = load i64, i64* %word, align 8, !dbg !12247
  %99 = load i32, i32* %end_addr, align 4, !dbg !12249
  %conv181 = sext i32 %99 to i64, !dbg !12249
  %cmp182 = icmp slt i64 %98, %conv181, !dbg !12250
  br i1 %cmp182, label %for.body184, label %for.end193, !dbg !12251

for.body184:                                      ; preds = %for.cond180
  %100 = load i8*, i8** %iop_base, align 8, !dbg !12252
  %add.ptr185 = getelementptr i8, i8* %100, i64 6, !dbg !12252
  %call186 = call zeroext i16 @readw(i8* %add.ptr185) #11, !dbg !12252
  %conv187 = zext i16 %call186 to i32, !dbg !12252
  %101 = load i16, i16* %code_sum, align 2, !dbg !12254
  %conv188 = zext i16 %101 to i32, !dbg !12254
  %add189 = add i32 %conv188, %conv187, !dbg !12254
  %conv190 = trunc i32 %add189 to i16, !dbg !12254
  store i16 %conv190, i16* %code_sum, align 2, !dbg !12254
  br label %for.inc191, !dbg !12255

for.inc191:                                       ; preds = %for.body184
  %102 = load i64, i64* %word, align 8, !dbg !12256
  %add192 = add i64 %102, 2, !dbg !12256
  store i64 %add192, i64* %word, align 8, !dbg !12256
  br label %for.cond180, !dbg !12257, !llvm.loop !12258

for.end193:                                       ; preds = %for.cond180
  %103 = load i8*, i8** %iop_base, align 8, !dbg !12260
  %add.ptr194 = getelementptr i8, i8* %103, i64 4, !dbg !12260
  call void @writew(i16 zeroext 44, i8* %add.ptr194) #11, !dbg !12260
  %104 = load i16, i16* %code_sum, align 2, !dbg !12260
  %105 = load i8*, i8** %iop_base, align 8, !dbg !12260
  %add.ptr195 = getelementptr i8, i8* %105, i64 6, !dbg !12260
  call void @writew(i16 zeroext %104, i8* %add.ptr195) #11, !dbg !12260
  br label %do.body196, !dbg !12261

do.body196:                                       ; preds = %for.end193
  %106 = load i8*, i8** %iop_base, align 8, !dbg !12262
  %add.ptr197 = getelementptr i8, i8* %106, i64 4, !dbg !12262
  call void @writew(i16 zeroext 56, i8* %add.ptr197) #11, !dbg !12262
  %107 = load i8*, i8** %iop_base, align 8, !dbg !12262
  %add.ptr198 = getelementptr i8, i8* %107, i64 6, !dbg !12262
  %call199 = call zeroext i16 @readw(i8* %add.ptr198) #11, !dbg !12262
  %108 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12262
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %108, i32 0, i32 28, !dbg !12262
  %109 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !12262
  %mcode_date = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %109, i32 0, i32 4, !dbg !12262
  store i16 %call199, i16* %mcode_date, align 2, !dbg !12262
  br label %do.end200, !dbg !12262

do.end200:                                        ; preds = %do.body196
  br label %do.body201, !dbg !12264

do.body201:                                       ; preds = %do.end200
  %110 = load i8*, i8** %iop_base, align 8, !dbg !12265
  %add.ptr202 = getelementptr i8, i8* %110, i64 4, !dbg !12265
  call void @writew(i16 zeroext 58, i8* %add.ptr202) #11, !dbg !12265
  %111 = load i8*, i8** %iop_base, align 8, !dbg !12265
  %add.ptr203 = getelementptr i8, i8* %111, i64 6, !dbg !12265
  %call204 = call zeroext i16 @readw(i8* %add.ptr203) #11, !dbg !12265
  %112 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12265
  %cfg205 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %112, i32 0, i32 28, !dbg !12265
  %113 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg205, align 8, !dbg !12265
  %mcode_version = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %113, i32 0, i32 5, !dbg !12265
  store i16 %call204, i16* %mcode_version, align 2, !dbg !12265
  br label %do.end206, !dbg !12265

do.end206:                                        ; preds = %do.body201
  %114 = load i8*, i8** %iop_base, align 8, !dbg !12267
  %add.ptr207 = getelementptr i8, i8* %114, i64 4, !dbg !12267
  call void @writew(i16 zeroext 154, i8* %add.ptr207) #11, !dbg !12267
  %115 = load i8*, i8** %iop_base, align 8, !dbg !12267
  %add.ptr208 = getelementptr i8, i8* %115, i64 6, !dbg !12267
  call void @writew(i16 zeroext 3, i8* %add.ptr208) #11, !dbg !12267
  %116 = load i8*, i8** %iop_base, align 8, !dbg !12268
  %add.ptr209 = getelementptr i8, i8* %116, i64 14, !dbg !12268
  %call210 = call zeroext i16 @readw(i8* %add.ptr209) #11, !dbg !12268
  store i16 %call210, i16* %scsi_cfg1, align 2, !dbg !12269
  %117 = load i16, i16* %scsi_cfg1, align 2, !dbg !12270
  %conv211 = zext i16 %117 to i32, !dbg !12270
  %or212 = or i32 %conv211, 16384, !dbg !12270
  %conv213 = trunc i32 %or212 to i16, !dbg !12270
  %118 = load i8*, i8** %iop_base, align 8, !dbg !12270
  %add.ptr214 = getelementptr i8, i8* %118, i64 14, !dbg !12270
  call void @writew(i16 zeroext %conv213, i8* %add.ptr214) #11, !dbg !12270
  %119 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12271
  %cfg215 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %119, i32 0, i32 28, !dbg !12273
  %120 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg215, align 8, !dbg !12273
  %control_flag = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %120, i32 0, i32 3, !dbg !12274
  %121 = load i16, i16* %control_flag, align 2, !dbg !12274
  %conv216 = zext i16 %121 to i32, !dbg !12271
  %and217 = and i32 %conv216, 1, !dbg !12275
  %tobool218 = icmp ne i32 %and217, 0, !dbg !12275
  br i1 %tobool218, label %if.then219, label %if.end230, !dbg !12276

if.then219:                                       ; preds = %do.end206
  br label %do.body220, !dbg !12277

do.body220:                                       ; preds = %if.then219
  %122 = load i8*, i8** %iop_base, align 8, !dbg !12279
  %add.ptr221 = getelementptr i8, i8* %122, i64 4, !dbg !12279
  call void @writew(i16 zeroext 290, i8* %add.ptr221) #11, !dbg !12279
  %123 = load i8*, i8** %iop_base, align 8, !dbg !12279
  %add.ptr222 = getelementptr i8, i8* %123, i64 6, !dbg !12279
  %call223 = call zeroext i16 @readw(i8* %add.ptr222) #11, !dbg !12279
  %conv224 = zext i16 %call223 to i64, !dbg !12279
  store i64 %conv224, i64* %word, align 8, !dbg !12279
  br label %do.end225, !dbg !12279

do.end225:                                        ; preds = %do.body220
  %124 = load i64, i64* %word, align 8, !dbg !12281
  %or226 = or i64 %124, 1, !dbg !12281
  store i64 %or226, i64* %word, align 8, !dbg !12281
  %125 = load i8*, i8** %iop_base, align 8, !dbg !12282
  %add.ptr227 = getelementptr i8, i8* %125, i64 4, !dbg !12282
  call void @writew(i16 zeroext 290, i8* %add.ptr227) #11, !dbg !12282
  %126 = load i64, i64* %word, align 8, !dbg !12282
  %conv228 = trunc i64 %126 to i16, !dbg !12282
  %127 = load i8*, i8** %iop_base, align 8, !dbg !12282
  %add.ptr229 = getelementptr i8, i8* %127, i64 6, !dbg !12282
  call void @writew(i16 zeroext %conv228, i8* %add.ptr229) #11, !dbg !12282
  br label %if.end230, !dbg !12283

if.end230:                                        ; preds = %do.end225, %do.end206
  %128 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12284
  %bios_ctrl = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %128, i32 0, i32 2, !dbg !12286
  %129 = load i16, i16* %bios_ctrl, align 2, !dbg !12286
  %conv231 = zext i16 %129 to i32, !dbg !12284
  %and232 = and i32 %conv231, 8192, !dbg !12287
  %cmp233 = icmp eq i32 %and232, 0, !dbg !12288
  br i1 %cmp233, label %if.then235, label %if.end246, !dbg !12289

if.then235:                                       ; preds = %if.end230
  br label %do.body236, !dbg !12290

do.body236:                                       ; preds = %if.then235
  %130 = load i8*, i8** %iop_base, align 8, !dbg !12292
  %add.ptr237 = getelementptr i8, i8* %130, i64 4, !dbg !12292
  call void @writew(i16 zeroext 290, i8* %add.ptr237) #11, !dbg !12292
  %131 = load i8*, i8** %iop_base, align 8, !dbg !12292
  %add.ptr238 = getelementptr i8, i8* %131, i64 6, !dbg !12292
  %call239 = call zeroext i16 @readw(i8* %add.ptr238) #11, !dbg !12292
  %conv240 = zext i16 %call239 to i64, !dbg !12292
  store i64 %conv240, i64* %word, align 8, !dbg !12292
  br label %do.end241, !dbg !12292

do.end241:                                        ; preds = %do.body236
  %132 = load i64, i64* %word, align 8, !dbg !12294
  %or242 = or i64 %132, 2, !dbg !12294
  store i64 %or242, i64* %word, align 8, !dbg !12294
  %133 = load i8*, i8** %iop_base, align 8, !dbg !12295
  %add.ptr243 = getelementptr i8, i8* %133, i64 4, !dbg !12295
  call void @writew(i16 zeroext 290, i8* %add.ptr243) #11, !dbg !12295
  %134 = load i64, i64* %word, align 8, !dbg !12295
  %conv244 = trunc i64 %134 to i16, !dbg !12295
  %135 = load i8*, i8** %iop_base, align 8, !dbg !12295
  %add.ptr245 = getelementptr i8, i8* %135, i64 6, !dbg !12295
  call void @writew(i16 zeroext %conv244, i8* %add.ptr245) #11, !dbg !12295
  br label %if.end246, !dbg !12296

if.end246:                                        ; preds = %do.end241, %if.end230
  %136 = load i8*, i8** %iop_base, align 8, !dbg !12297
  %add.ptr247 = getelementptr i8, i8* %136, i64 32, !dbg !12297
  call void @writeb(i8 zeroext 83, i8* %add.ptr247) #11, !dbg !12297
  %137 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12298
  %bios_ctrl248 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %137, i32 0, i32 2, !dbg !12300
  %138 = load i16, i16* %bios_ctrl248, align 2, !dbg !12300
  %conv249 = zext i16 %138 to i32, !dbg !12298
  %and250 = and i32 %conv249, 512, !dbg !12301
  %cmp251 = icmp eq i32 %and250, 0, !dbg !12302
  br i1 %cmp251, label %if.then253, label %if.end260, !dbg !12303

if.then253:                                       ; preds = %if.end246
  %139 = load i8*, i8** %iop_base, align 8, !dbg !12304
  %add.ptr254 = getelementptr i8, i8* %139, i64 4, !dbg !12304
  call void @writew(i16 zeroext 156, i8* %add.ptr254) #11, !dbg !12304
  %140 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12304
  %wdtr_able255 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %140, i32 0, i32 3, !dbg !12304
  %141 = load i16, i16* %wdtr_able255, align 4, !dbg !12304
  %142 = load i8*, i8** %iop_base, align 8, !dbg !12304
  %add.ptr256 = getelementptr i8, i8* %142, i64 6, !dbg !12304
  call void @writew(i16 zeroext %141, i8* %add.ptr256) #11, !dbg !12304
  %143 = load i8*, i8** %iop_base, align 8, !dbg !12306
  %add.ptr257 = getelementptr i8, i8* %143, i64 4, !dbg !12306
  call void @writew(i16 zeroext 158, i8* %add.ptr257) #11, !dbg !12306
  %144 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12306
  %sdtr_able258 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %144, i32 0, i32 4, !dbg !12306
  %145 = load i16, i16* %sdtr_able258, align 2, !dbg !12306
  %146 = load i8*, i8** %iop_base, align 8, !dbg !12306
  %add.ptr259 = getelementptr i8, i8* %146, i64 6, !dbg !12306
  call void @writew(i16 zeroext %145, i8* %add.ptr259) #11, !dbg !12306
  br label %if.end260, !dbg !12307

if.end260:                                        ; preds = %if.then253, %if.end246
  %147 = load i8*, i8** %iop_base, align 8, !dbg !12308
  %add.ptr261 = getelementptr i8, i8* %147, i64 4, !dbg !12308
  call void @writew(i16 zeroext 162, i8* %add.ptr261) #11, !dbg !12308
  %148 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12308
  %cfg262 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %148, i32 0, i32 28, !dbg !12308
  %149 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg262, align 8, !dbg !12308
  %disc_enable = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %149, i32 0, i32 0, !dbg !12308
  %150 = load i16, i16* %disc_enable, align 2, !dbg !12308
  %151 = load i8*, i8** %iop_base, align 8, !dbg !12308
  %add.ptr263 = getelementptr i8, i8* %151, i64 6, !dbg !12308
  call void @writew(i16 zeroext %150, i8* %add.ptr263) #11, !dbg !12308
  %152 = load i8*, i8** %iop_base, align 8, !dbg !12309
  %add.ptr264 = getelementptr i8, i8* %152, i64 4, !dbg !12309
  call void @writew(i16 zeroext 144, i8* %add.ptr264) #11, !dbg !12309
  %153 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12309
  %sdtr_speed1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %153, i32 0, i32 6, !dbg !12309
  %154 = load i16, i16* %sdtr_speed1, align 2, !dbg !12309
  %155 = load i8*, i8** %iop_base, align 8, !dbg !12309
  %add.ptr265 = getelementptr i8, i8* %155, i64 6, !dbg !12309
  call void @writew(i16 zeroext %154, i8* %add.ptr265) #11, !dbg !12309
  %156 = load i8*, i8** %iop_base, align 8, !dbg !12310
  %add.ptr266 = getelementptr i8, i8* %156, i64 4, !dbg !12310
  call void @writew(i16 zeroext 146, i8* %add.ptr266) #11, !dbg !12310
  %157 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12310
  %sdtr_speed2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %157, i32 0, i32 7, !dbg !12310
  %158 = load i16, i16* %sdtr_speed2, align 4, !dbg !12310
  %159 = load i8*, i8** %iop_base, align 8, !dbg !12310
  %add.ptr267 = getelementptr i8, i8* %159, i64 6, !dbg !12310
  call void @writew(i16 zeroext %158, i8* %add.ptr267) #11, !dbg !12310
  %160 = load i8*, i8** %iop_base, align 8, !dbg !12311
  %add.ptr268 = getelementptr i8, i8* %160, i64 4, !dbg !12311
  call void @writew(i16 zeroext 148, i8* %add.ptr268) #11, !dbg !12311
  %161 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12311
  %sdtr_speed3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %161, i32 0, i32 8, !dbg !12311
  %162 = load i16, i16* %sdtr_speed3, align 2, !dbg !12311
  %163 = load i8*, i8** %iop_base, align 8, !dbg !12311
  %add.ptr269 = getelementptr i8, i8* %163, i64 6, !dbg !12311
  call void @writew(i16 zeroext %162, i8* %add.ptr269) #11, !dbg !12311
  %164 = load i8*, i8** %iop_base, align 8, !dbg !12312
  %add.ptr270 = getelementptr i8, i8* %164, i64 4, !dbg !12312
  call void @writew(i16 zeroext 150, i8* %add.ptr270) #11, !dbg !12312
  %165 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12312
  %sdtr_speed4 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %165, i32 0, i32 9, !dbg !12312
  %166 = load i16, i16* %sdtr_speed4, align 8, !dbg !12312
  %167 = load i8*, i8** %iop_base, align 8, !dbg !12312
  %add.ptr271 = getelementptr i8, i8* %167, i64 6, !dbg !12312
  call void @writew(i16 zeroext %166, i8* %add.ptr271) #11, !dbg !12312
  %168 = load i8*, i8** %iop_base, align 8, !dbg !12313
  %add.ptr272 = getelementptr i8, i8* %168, i64 4, !dbg !12313
  call void @writew(i16 zeroext 172, i8* %add.ptr272) #11, !dbg !12313
  %169 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12313
  %chip_scsi_id = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %169, i32 0, i32 19, !dbg !12313
  %170 = load i8, i8* %chip_scsi_id, align 8, !dbg !12313
  %conv273 = zext i8 %170 to i32, !dbg !12313
  %or274 = or i32 9296, %conv273, !dbg !12313
  %conv275 = trunc i32 %or274 to i16, !dbg !12313
  %171 = load i8*, i8** %iop_base, align 8, !dbg !12313
  %add.ptr276 = getelementptr i8, i8* %171, i64 6, !dbg !12313
  call void @writew(i16 zeroext %conv275, i8* %add.ptr276) #11, !dbg !12313
  %172 = load i8*, i8** %iop_base, align 8, !dbg !12314
  %add.ptr277 = getelementptr i8, i8* %172, i64 14, !dbg !12314
  %call278 = call zeroext i16 @readw(i8* %add.ptr277) #11, !dbg !12314
  store i16 %call278, i16* %scsi_cfg1, align 2, !dbg !12315
  %173 = load i8*, i8** %iop_base, align 8, !dbg !12316
  %add.ptr279 = getelementptr i8, i8* %173, i64 52, !dbg !12316
  %call280 = call zeroext i16 @readw(i8* %add.ptr279) #11, !dbg !12316
  %conv281 = zext i16 %call280 to i32, !dbg !12316
  %and282 = and i32 %conv281, 16135, !dbg !12318
  %cmp283 = icmp eq i32 %and282, 16135, !dbg !12319
  br i1 %cmp283, label %if.then285, label %if.end290, !dbg !12320

if.then285:                                       ; preds = %if.end260
  %174 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12321
  %err_code286 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %174, i32 0, i32 1, !dbg !12323
  %175 = load i16, i16* %err_code286, align 8, !dbg !12324
  %conv287 = zext i16 %175 to i32, !dbg !12324
  %or288 = or i32 %conv287, 64, !dbg !12324
  %conv289 = trunc i32 %or288 to i16, !dbg !12324
  store i16 %conv289, i16* %err_code286, align 8, !dbg !12324
  store i32 -1, i32* %retval, align 4, !dbg !12325
  br label %return, !dbg !12325

if.end290:                                        ; preds = %if.end260
  %176 = load i16, i16* %scsi_cfg1, align 2, !dbg !12326
  %conv291 = zext i16 %176 to i32, !dbg !12326
  %and292 = and i32 %conv291, 4096, !dbg !12328
  %tobool293 = icmp ne i32 %and292, 0, !dbg !12328
  br i1 %tobool293, label %if.then294, label %if.end299, !dbg !12329

if.then294:                                       ; preds = %if.end290
  %177 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12330
  %err_code295 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %177, i32 0, i32 1, !dbg !12332
  %178 = load i16, i16* %err_code295, align 8, !dbg !12333
  %conv296 = zext i16 %178 to i32, !dbg !12333
  %or297 = or i32 %conv296, 256, !dbg !12333
  %conv298 = trunc i32 %or297 to i16, !dbg !12333
  store i16 %conv298, i16* %err_code295, align 8, !dbg !12333
  store i32 -1, i32* %retval, align 4, !dbg !12334
  br label %return, !dbg !12334

if.end299:                                        ; preds = %if.end290
  %179 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12335
  %cfg300 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %179, i32 0, i32 28, !dbg !12337
  %180 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg300, align 8, !dbg !12337
  %termination = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %180, i32 0, i32 2, !dbg !12338
  %181 = load i8, i8* %termination, align 1, !dbg !12338
  %conv301 = zext i8 %181 to i32, !dbg !12335
  %and302 = and i32 %conv301, 48, !dbg !12339
  %cmp303 = icmp eq i32 %and302, 0, !dbg !12340
  br i1 %cmp303, label %if.then305, label %if.end333, !dbg !12341

if.then305:                                       ; preds = %if.end299
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12342, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12345, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.declare(metadata i8** %__mptr306, metadata !12348, metadata !DIExpression()), !dbg !12350
  %182 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12350
  %183 = bitcast %struct.adv_dvc_var* %182 to i8*, !dbg !12350
  store i8* %183, i8** %__mptr306, align 8, !dbg !12350
  br label %do.body307, !dbg !12350

do.body307:                                       ; preds = %if.then305
  br label %do.end308, !dbg !12351

do.end308:                                        ; preds = %do.body307
  %184 = load i8*, i8** %__mptr306, align 8, !dbg !12350
  %add.ptr309 = getelementptr i8, i8* %184, i64 -24, !dbg !12350
  %185 = bitcast i8* %add.ptr309 to %struct.asc_board*, !dbg !12350
  store %struct.asc_board* %185, %struct.asc_board** %tmp, align 8, !dbg !12351
  %186 = load %struct.asc_board*, %struct.asc_board** %tmp, align 8, !dbg !12350
  %dev310 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %186, i32 0, i32 0, !dbg !12347
  %187 = load %struct.device*, %struct.device** %dev310, align 8, !dbg !12347
  %188 = bitcast %struct.device* %187 to i8*, !dbg !12347
  store i8* %188, i8** %__mptr, align 8, !dbg !12347
  br label %do.body311, !dbg !12347

do.body311:                                       ; preds = %do.end308
  br label %do.end312, !dbg !12353

do.end312:                                        ; preds = %do.body311
  %189 = load i8*, i8** %__mptr, align 8, !dbg !12347
  %add.ptr314 = getelementptr i8, i8* %189, i64 -176, !dbg !12347
  %190 = bitcast i8* %add.ptr314 to %struct.pci_dev*, !dbg !12347
  store %struct.pci_dev* %190, %struct.pci_dev** %tmp313, align 8, !dbg !12353
  %191 = load %struct.pci_dev*, %struct.pci_dev** %tmp313, align 8, !dbg !12347
  store %struct.pci_dev* %191, %struct.pci_dev** %pdev, align 8, !dbg !12344
  %192 = load i16, i16* %scsi_cfg1, align 2, !dbg !12355
  %conv315 = zext i16 %192 to i32, !dbg !12355
  %and316 = and i32 %conv315, 3, !dbg !12356
  switch i32 %and316, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 0, label %sw.bb322
  ], !dbg !12357

sw.bb:                                            ; preds = %do.end312, %do.end312, %do.end312
  %193 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12358
  %cfg317 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %193, i32 0, i32 28, !dbg !12360
  %194 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg317, align 8, !dbg !12360
  %termination318 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %194, i32 0, i32 2, !dbg !12361
  %195 = load i8, i8* %termination318, align 1, !dbg !12362
  %conv319 = zext i8 %195 to i32, !dbg !12362
  %or320 = or i32 %conv319, 48, !dbg !12362
  %conv321 = trunc i32 %or320 to i8, !dbg !12362
  store i8 %conv321, i8* %termination318, align 1, !dbg !12362
  br label %sw.epilog, !dbg !12363

sw.bb322:                                         ; preds = %do.end312
  %196 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12364
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %196, i32 0, i32 6, !dbg !12364
  %197 = load i32, i32* %devfn, align 8, !dbg !12364
  %and323 = and i32 %197, 7, !dbg !12364
  %cmp324 = icmp eq i32 %and323, 0, !dbg !12366
  br i1 %cmp324, label %if.then326, label %if.else, !dbg !12367

if.then326:                                       ; preds = %sw.bb322
  br label %if.end332, !dbg !12368

if.else:                                          ; preds = %sw.bb322
  %198 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12370
  %cfg327 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %198, i32 0, i32 28, !dbg !12372
  %199 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg327, align 8, !dbg !12372
  %termination328 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %199, i32 0, i32 2, !dbg !12373
  %200 = load i8, i8* %termination328, align 1, !dbg !12374
  %conv329 = zext i8 %200 to i32, !dbg !12374
  %or330 = or i32 %conv329, 32, !dbg !12374
  %conv331 = trunc i32 %or330 to i8, !dbg !12374
  store i8 %conv331, i8* %termination328, align 1, !dbg !12374
  br label %if.end332

if.end332:                                        ; preds = %if.else, %if.then326
  br label %sw.epilog, !dbg !12375

sw.epilog:                                        ; preds = %do.end312, %if.end332, %sw.bb
  br label %if.end333, !dbg !12376

if.end333:                                        ; preds = %sw.epilog, %if.end299
  %201 = load i16, i16* %scsi_cfg1, align 2, !dbg !12377
  %conv334 = zext i16 %201 to i32, !dbg !12377
  %and335 = and i32 %conv334, -49, !dbg !12377
  %conv336 = trunc i32 %and335 to i16, !dbg !12377
  store i16 %conv336, i16* %scsi_cfg1, align 2, !dbg !12377
  %202 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12378
  %cfg337 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %202, i32 0, i32 28, !dbg !12379
  %203 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg337, align 8, !dbg !12379
  %termination338 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %203, i32 0, i32 2, !dbg !12380
  %204 = load i8, i8* %termination338, align 1, !dbg !12380
  %conv339 = zext i8 %204 to i32, !dbg !12378
  %neg = xor i32 %conv339, -1, !dbg !12381
  %and340 = and i32 %neg, 48, !dbg !12382
  %205 = load i16, i16* %scsi_cfg1, align 2, !dbg !12383
  %conv341 = zext i16 %205 to i32, !dbg !12383
  %or342 = or i32 %conv341, %and340, !dbg !12383
  %conv343 = trunc i32 %or342 to i16, !dbg !12383
  store i16 %conv343, i16* %scsi_cfg1, align 2, !dbg !12383
  %206 = load i16, i16* %scsi_cfg1, align 2, !dbg !12384
  %conv344 = zext i16 %206 to i32, !dbg !12384
  %and345 = and i32 %conv344, -57345, !dbg !12384
  %conv346 = trunc i32 %and345 to i16, !dbg !12384
  store i16 %conv346, i16* %scsi_cfg1, align 2, !dbg !12384
  %207 = load i8*, i8** %iop_base, align 8, !dbg !12385
  %add.ptr347 = getelementptr i8, i8* %207, i64 4, !dbg !12385
  call void @writew(i16 zeroext 174, i8* %add.ptr347) #11, !dbg !12385
  %208 = load i16, i16* %scsi_cfg1, align 2, !dbg !12385
  %209 = load i8*, i8** %iop_base, align 8, !dbg !12385
  %add.ptr348 = getelementptr i8, i8* %209, i64 6, !dbg !12385
  call void @writew(i16 zeroext %208, i8* %add.ptr348) #11, !dbg !12385
  %210 = load i8*, i8** %iop_base, align 8, !dbg !12386
  %add.ptr349 = getelementptr i8, i8* %210, i64 4, !dbg !12386
  call void @writew(i16 zeroext 176, i8* %add.ptr349) #11, !dbg !12386
  %211 = load i8*, i8** %iop_base, align 8, !dbg !12386
  %add.ptr350 = getelementptr i8, i8* %211, i64 6, !dbg !12386
  call void @writew(i16 zeroext 76, i8* %add.ptr350) #11, !dbg !12386
  %212 = load i8*, i8** %iop_base, align 8, !dbg !12387
  %add.ptr351 = getelementptr i8, i8* %212, i64 4, !dbg !12387
  call void @writew(i16 zeroext 178, i8* %add.ptr351) #11, !dbg !12387
  %213 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12387
  %chip_scsi_id352 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %213, i32 0, i32 19, !dbg !12387
  %214 = load i8, i8* %chip_scsi_id352, align 8, !dbg !12387
  %conv353 = zext i8 %214 to i32, !dbg !12387
  %and354 = and i32 %conv353, 15, !dbg !12387
  %shl355 = shl i32 1, %and354, !dbg !12387
  %conv356 = trunc i32 %shl355 to i16, !dbg !12387
  %215 = load i8*, i8** %iop_base, align 8, !dbg !12387
  %add.ptr357 = getelementptr i8, i8* %215, i64 6, !dbg !12387
  call void @writew(i16 zeroext %conv356, i8* %add.ptr357) #11, !dbg !12387
  %216 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12388
  call void @AdvBuildCarrierFreelist(%struct.adv_dvc_var* %216) #11, !dbg !12389
  %217 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12390
  %call358 = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %217) #11, !dbg !12391
  %218 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12392
  %icq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %218, i32 0, i32 25, !dbg !12393
  store %struct.adv_carr_t* %call358, %struct.adv_carr_t** %icq_sp, align 8, !dbg !12394
  %219 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12395
  %icq_sp359 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %219, i32 0, i32 25, !dbg !12397
  %220 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp359, align 8, !dbg !12397
  %tobool360 = icmp ne %struct.adv_carr_t* %220, null, !dbg !12395
  br i1 %tobool360, label %if.end366, label %if.then361, !dbg !12398

if.then361:                                       ; preds = %if.end333
  %221 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12399
  %err_code362 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %221, i32 0, i32 1, !dbg !12401
  %222 = load i16, i16* %err_code362, align 8, !dbg !12402
  %conv363 = zext i16 %222 to i32, !dbg !12402
  %or364 = or i32 %conv363, 1, !dbg !12402
  %conv365 = trunc i32 %or364 to i16, !dbg !12402
  store i16 %conv365, i16* %err_code362, align 8, !dbg !12402
  store i32 -1, i32* %retval, align 4, !dbg !12403
  br label %return, !dbg !12403

if.end366:                                        ; preds = %if.end333
  %223 = load i8*, i8** %iop_base, align 8, !dbg !12404
  %add.ptr367 = getelementptr i8, i8* %223, i64 4, !dbg !12404
  call void @writew(i16 zeroext 352, i8* %add.ptr367) #11, !dbg !12404
  %224 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12404
  %icq_sp368 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %224, i32 0, i32 25, !dbg !12404
  %225 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp368, align 8, !dbg !12404
  %carr_pa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %225, i32 0, i32 1, !dbg !12404
  %226 = load i32, i32* %carr_pa, align 4, !dbg !12404
  %and369 = and i32 %226, 65535, !dbg !12404
  %conv370 = trunc i32 %and369 to i16, !dbg !12404
  %227 = load i8*, i8** %iop_base, align 8, !dbg !12404
  %add.ptr371 = getelementptr i8, i8* %227, i64 6, !dbg !12404
  call void @writew(i16 zeroext %conv370, i8* %add.ptr371) #11, !dbg !12404
  %228 = load i8*, i8** %iop_base, align 8, !dbg !12404
  %add.ptr372 = getelementptr i8, i8* %228, i64 4, !dbg !12404
  call void @writew(i16 zeroext 354, i8* %add.ptr372) #11, !dbg !12404
  %229 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12404
  %icq_sp373 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %229, i32 0, i32 25, !dbg !12404
  %230 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp373, align 8, !dbg !12404
  %carr_pa374 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %230, i32 0, i32 1, !dbg !12404
  %231 = load i32, i32* %carr_pa374, align 4, !dbg !12404
  %shr = lshr i32 %231, 16, !dbg !12404
  %and375 = and i32 %shr, 65535, !dbg !12404
  %conv376 = trunc i32 %and375 to i16, !dbg !12404
  %232 = load i8*, i8** %iop_base, align 8, !dbg !12404
  %add.ptr377 = getelementptr i8, i8* %232, i64 6, !dbg !12404
  call void @writew(i16 zeroext %conv376, i8* %add.ptr377) #11, !dbg !12404
  %233 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12405
  %icq_sp378 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %233, i32 0, i32 25, !dbg !12405
  %234 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp378, align 8, !dbg !12405
  %carr_pa379 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %234, i32 0, i32 1, !dbg !12405
  %235 = load i32, i32* %carr_pa379, align 4, !dbg !12405
  %236 = load i8*, i8** %iop_base, align 8, !dbg !12405
  %add.ptr380 = getelementptr i8, i8* %236, i64 20, !dbg !12405
  call void @writel(i32 %235, i8* %add.ptr380) #11, !dbg !12405
  %237 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12406
  %call381 = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %237) #11, !dbg !12407
  %238 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12408
  %irq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %238, i32 0, i32 26, !dbg !12409
  store %struct.adv_carr_t* %call381, %struct.adv_carr_t** %irq_sp, align 8, !dbg !12410
  %239 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12411
  %irq_sp382 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %239, i32 0, i32 26, !dbg !12413
  %240 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp382, align 8, !dbg !12413
  %tobool383 = icmp ne %struct.adv_carr_t* %240, null, !dbg !12411
  br i1 %tobool383, label %if.end389, label %if.then384, !dbg !12414

if.then384:                                       ; preds = %if.end366
  %241 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12415
  %err_code385 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %241, i32 0, i32 1, !dbg !12417
  %242 = load i16, i16* %err_code385, align 8, !dbg !12418
  %conv386 = zext i16 %242 to i32, !dbg !12418
  %or387 = or i32 %conv386, 1, !dbg !12418
  %conv388 = trunc i32 %or387 to i16, !dbg !12418
  store i16 %conv388, i16* %err_code385, align 8, !dbg !12418
  store i32 -1, i32* %retval, align 4, !dbg !12419
  br label %return, !dbg !12419

if.end389:                                        ; preds = %if.end366
  %243 = load i8*, i8** %iop_base, align 8, !dbg !12420
  %add.ptr390 = getelementptr i8, i8* %243, i64 4, !dbg !12420
  call void @writew(i16 zeroext 356, i8* %add.ptr390) #11, !dbg !12420
  %244 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12420
  %irq_sp391 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %244, i32 0, i32 26, !dbg !12420
  %245 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp391, align 8, !dbg !12420
  %carr_pa392 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %245, i32 0, i32 1, !dbg !12420
  %246 = load i32, i32* %carr_pa392, align 4, !dbg !12420
  %and393 = and i32 %246, 65535, !dbg !12420
  %conv394 = trunc i32 %and393 to i16, !dbg !12420
  %247 = load i8*, i8** %iop_base, align 8, !dbg !12420
  %add.ptr395 = getelementptr i8, i8* %247, i64 6, !dbg !12420
  call void @writew(i16 zeroext %conv394, i8* %add.ptr395) #11, !dbg !12420
  %248 = load i8*, i8** %iop_base, align 8, !dbg !12420
  %add.ptr396 = getelementptr i8, i8* %248, i64 4, !dbg !12420
  call void @writew(i16 zeroext 358, i8* %add.ptr396) #11, !dbg !12420
  %249 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12420
  %irq_sp397 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %249, i32 0, i32 26, !dbg !12420
  %250 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp397, align 8, !dbg !12420
  %carr_pa398 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %250, i32 0, i32 1, !dbg !12420
  %251 = load i32, i32* %carr_pa398, align 4, !dbg !12420
  %shr399 = lshr i32 %251, 16, !dbg !12420
  %and400 = and i32 %shr399, 65535, !dbg !12420
  %conv401 = trunc i32 %and400 to i16, !dbg !12420
  %252 = load i8*, i8** %iop_base, align 8, !dbg !12420
  %add.ptr402 = getelementptr i8, i8* %252, i64 6, !dbg !12420
  call void @writew(i16 zeroext %conv401, i8* %add.ptr402) #11, !dbg !12420
  %253 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12421
  %carr_pending_cnt = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %253, i32 0, i32 27, !dbg !12422
  store i16 0, i16* %carr_pending_cnt, align 8, !dbg !12423
  %254 = load i8*, i8** %iop_base, align 8, !dbg !12424
  %add.ptr403 = getelementptr i8, i8* %254, i64 2, !dbg !12424
  call void @writeb(i8 zeroext -127, i8* %add.ptr403) #11, !dbg !12424
  br label %do.body404, !dbg !12425

do.body404:                                       ; preds = %if.end389
  %255 = load i8*, i8** %iop_base, align 8, !dbg !12426
  %add.ptr405 = getelementptr i8, i8* %255, i64 4, !dbg !12426
  call void @writew(i16 zeroext 40, i8* %add.ptr405) #11, !dbg !12426
  %256 = load i8*, i8** %iop_base, align 8, !dbg !12426
  %add.ptr406 = getelementptr i8, i8* %256, i64 6, !dbg !12426
  %call407 = call zeroext i16 @readw(i8* %add.ptr406) #11, !dbg !12426
  %conv408 = zext i16 %call407 to i64, !dbg !12426
  store i64 %conv408, i64* %word, align 8, !dbg !12426
  br label %do.end409, !dbg !12426

do.end409:                                        ; preds = %do.body404
  %257 = load i64, i64* %word, align 8, !dbg !12428
  %conv410 = trunc i64 %257 to i16, !dbg !12428
  %258 = load i8*, i8** %iop_base, align 8, !dbg !12428
  %add.ptr411 = getelementptr i8, i8* %258, i64 42, !dbg !12428
  call void @writew(i16 zeroext %conv410, i8* %add.ptr411) #11, !dbg !12428
  %259 = load i8*, i8** %iop_base, align 8, !dbg !12429
  %add.ptr412 = getelementptr i8, i8* %259, i64 10, !dbg !12429
  call void @writew(i16 zeroext 16384, i8* %add.ptr412) #11, !dbg !12429
  %260 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12430
  %bios_ctrl413 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %260, i32 0, i32 2, !dbg !12432
  %261 = load i16, i16* %bios_ctrl413, align 2, !dbg !12432
  %conv414 = zext i16 %261 to i32, !dbg !12430
  %and415 = and i32 %conv414, 512, !dbg !12433
  %tobool416 = icmp ne i32 %and415, 0, !dbg !12433
  br i1 %tobool416, label %if.then417, label %if.end453, !dbg !12434

if.then417:                                       ; preds = %do.end409
  %arrayidx418 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 12, !dbg !12435
  %262 = load i16, i16* %arrayidx418, align 8, !dbg !12435
  %conv419 = zext i16 %262 to i32, !dbg !12435
  %cmp420 = icmp eq i32 %conv419, 21930, !dbg !12438
  br i1 %cmp420, label %if.then422, label %if.else446, !dbg !12439

if.then422:                                       ; preds = %if.then417
  %263 = load i8*, i8** %iop_base, align 8, !dbg !12440
  %add.ptr423 = getelementptr i8, i8* %263, i64 4, !dbg !12440
  call void @writew(i16 zeroext 156, i8* %add.ptr423) #11, !dbg !12440
  %264 = load i16, i16* %wdtr_able, align 2, !dbg !12440
  %265 = load i8*, i8** %iop_base, align 8, !dbg !12440
  %add.ptr424 = getelementptr i8, i8* %265, i64 6, !dbg !12440
  call void @writew(i16 zeroext %264, i8* %add.ptr424) #11, !dbg !12440
  %266 = load i8*, i8** %iop_base, align 8, !dbg !12442
  %add.ptr425 = getelementptr i8, i8* %266, i64 4, !dbg !12442
  call void @writew(i16 zeroext 158, i8* %add.ptr425) #11, !dbg !12442
  %267 = load i16, i16* %sdtr_able, align 2, !dbg !12442
  %268 = load i8*, i8** %iop_base, align 8, !dbg !12442
  %add.ptr426 = getelementptr i8, i8* %268, i64 6, !dbg !12442
  call void @writew(i16 zeroext %267, i8* %add.ptr426) #11, !dbg !12442
  %269 = load i8*, i8** %iop_base, align 8, !dbg !12443
  %add.ptr427 = getelementptr i8, i8* %269, i64 4, !dbg !12443
  call void @writew(i16 zeroext 378, i8* %add.ptr427) #11, !dbg !12443
  %270 = load i16, i16* %ppr_able, align 2, !dbg !12443
  %271 = load i8*, i8** %iop_base, align 8, !dbg !12443
  %add.ptr428 = getelementptr i8, i8* %271, i64 6, !dbg !12443
  call void @writew(i16 zeroext %270, i8* %add.ptr428) #11, !dbg !12443
  %272 = load i8*, i8** %iop_base, align 8, !dbg !12444
  %add.ptr429 = getelementptr i8, i8* %272, i64 4, !dbg !12444
  call void @writew(i16 zeroext 160, i8* %add.ptr429) #11, !dbg !12444
  %273 = load i16, i16* %tagqng_able, align 2, !dbg !12444
  %274 = load i8*, i8** %iop_base, align 8, !dbg !12444
  %add.ptr430 = getelementptr i8, i8* %274, i64 6, !dbg !12444
  call void @writew(i16 zeroext %273, i8* %add.ptr430) #11, !dbg !12444
  store i8 0, i8* %tid, align 1, !dbg !12445
  br label %for.cond431, !dbg !12447

for.cond431:                                      ; preds = %for.inc443, %if.then422
  %275 = load i8, i8* %tid, align 1, !dbg !12448
  %conv432 = zext i8 %275 to i32, !dbg !12448
  %cmp433 = icmp sle i32 %conv432, 7, !dbg !12450
  br i1 %cmp433, label %for.body435, label %for.end445, !dbg !12451

for.body435:                                      ; preds = %for.cond431
  %276 = load i8, i8* %tid, align 1, !dbg !12452
  %conv436 = zext i8 %276 to i32, !dbg !12452
  %add437 = add i32 208, %conv436, !dbg !12452
  %conv438 = trunc i32 %add437 to i16, !dbg !12452
  %277 = load i8*, i8** %iop_base, align 8, !dbg !12452
  %add.ptr439 = getelementptr i8, i8* %277, i64 4, !dbg !12452
  call void @writew(i16 zeroext %conv438, i8* %add.ptr439) #11, !dbg !12452
  %278 = load i8, i8* %tid, align 1, !dbg !12452
  %idxprom440 = zext i8 %278 to i64, !dbg !12452
  %arrayidx441 = getelementptr [8 x i8], [8 x i8]* %max_cmd, i64 0, i64 %idxprom440, !dbg !12452
  %279 = load i8, i8* %arrayidx441, align 1, !dbg !12452
  %280 = load i8*, i8** %iop_base, align 8, !dbg !12452
  %add.ptr442 = getelementptr i8, i8* %280, i64 6, !dbg !12452
  call void @writeb(i8 zeroext %279, i8* %add.ptr442) #11, !dbg !12452
  br label %for.inc443, !dbg !12454

for.inc443:                                       ; preds = %for.body435
  %281 = load i8, i8* %tid, align 1, !dbg !12455
  %inc444 = add i8 %281, 1, !dbg !12455
  store i8 %inc444, i8* %tid, align 1, !dbg !12455
  br label %for.cond431, !dbg !12456, !llvm.loop !12457

for.end445:                                       ; preds = %for.cond431
  br label %if.end452, !dbg !12459

if.else446:                                       ; preds = %if.then417
  %282 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12460
  %call447 = call i32 @AdvResetSB(%struct.adv_dvc_var* %282) #11, !dbg !12463
  %cmp448 = icmp ne i32 %call447, 1, !dbg !12464
  br i1 %cmp448, label %if.then450, label %if.end451, !dbg !12465

if.then450:                                       ; preds = %if.else446
  store i16 1, i16* %warn_code, align 2, !dbg !12466
  br label %if.end451, !dbg !12468

if.end451:                                        ; preds = %if.then450, %if.else446
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %for.end445
  br label %if.end453, !dbg !12469

if.end453:                                        ; preds = %if.end452, %do.end409
  %283 = load i16, i16* %warn_code, align 2, !dbg !12470
  %conv454 = zext i16 %283 to i32, !dbg !12470
  store i32 %conv454, i32* %retval, align 4, !dbg !12471
  br label %return, !dbg !12471

return:                                           ; preds = %if.end453, %if.then384, %if.then361, %if.then294, %if.then285, %if.then149, %if.then117, %if.then110, %if.then104, %if.then80, %if.then65, %if.then5, %if.then
  %284 = load i32, i32* %retval, align 4, !dbg !12472
  ret i32 %284, !dbg !12472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitAsc38C0800Driver(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !12473 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %fw = alloca %struct.firmware*, align 8
  %fwname = alloca [21 x i8], align 16
  %iop_base = alloca i8*, align 8
  %warn_code = alloca i16, align 2
  %begin_addr = alloca i32, align 4
  %end_addr = alloca i32, align 4
  %code_sum = alloca i16, align 2
  %word = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %chksum = alloca i64, align 8
  %scsi_cfg1 = alloca i16, align 2
  %byte = alloca i8, align 1
  %tid = alloca i8, align 1
  %bios_mem = alloca [40 x i16], align 16
  %wdtr_able = alloca i16, align 2
  %sdtr_able = alloca i16, align 2
  %tagqng_able = alloca i16, align 2
  %max_cmd = alloca [16 x i8], align 16
  %__ms = alloca i64, align 8
  %__ms64 = alloca i64, align 8
  %__ms82 = alloca i64, align 8
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !12476, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.declare(metadata [21 x i8]* %fwname, metadata !12478, metadata !DIExpression()), !dbg !12479
  %0 = bitcast [21 x i8]* %fwname to i8*, !dbg !12479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([21 x i8], [21 x i8]* @__const.AdvInitAsc38C0800Driver.fwname, i32 0, i32 0), i64 21, i1 false), !dbg !12479
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !12480, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !12482, metadata !DIExpression()), !dbg !12483
  call void @llvm.dbg.declare(metadata i32* %begin_addr, metadata !12484, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.declare(metadata i32* %end_addr, metadata !12486, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.declare(metadata i16* %code_sum, metadata !12488, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.declare(metadata i32* %word, metadata !12490, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12492, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12494, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.declare(metadata i64* %chksum, metadata !12496, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.declare(metadata i16* %scsi_cfg1, metadata !12498, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !12500, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata i8* %tid, metadata !12502, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.declare(metadata [40 x i16]* %bios_mem, metadata !12504, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.declare(metadata i16* %wdtr_able, metadata !12506, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.declare(metadata i16* %sdtr_able, metadata !12508, metadata !DIExpression()), !dbg !12509
  call void @llvm.dbg.declare(metadata i16* %tagqng_able, metadata !12510, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.declare(metadata [16 x i8]* %max_cmd, metadata !12512, metadata !DIExpression()), !dbg !12513
  %1 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12514
  %err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %1, i32 0, i32 1, !dbg !12516
  %2 = load i16, i16* %err_code, align 8, !dbg !12516
  %conv = zext i16 %2 to i32, !dbg !12514
  %cmp = icmp ne i32 %conv, 0, !dbg !12517
  br i1 %cmp, label %if.then, label %if.end, !dbg !12518

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12519
  br label %return, !dbg !12519

if.end:                                           ; preds = %entry
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12520
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 20, !dbg !12522
  %4 = load i8, i8* %chip_type, align 1, !dbg !12522
  %conv2 = zext i8 %4 to i32, !dbg !12520
  %cmp3 = icmp ne i32 %conv2, 2, !dbg !12523
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !12524

if.then5:                                         ; preds = %if.end
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12525
  %err_code6 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 1, !dbg !12527
  store i16 8192, i16* %err_code6, align 8, !dbg !12528
  store i32 -1, i32* %retval, align 4, !dbg !12529
  br label %return, !dbg !12529

if.end7:                                          ; preds = %if.end
  store i16 0, i16* %warn_code, align 2, !dbg !12530
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12531
  %iop_base8 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 0, !dbg !12532
  %7 = load i8*, i8** %iop_base8, align 8, !dbg !12532
  store i8* %7, i8** %iop_base, align 8, !dbg !12533
  store i32 0, i32* %i, align 4, !dbg !12534
  br label %for.cond, !dbg !12536

for.cond:                                         ; preds = %for.inc, %if.end7
  %8 = load i32, i32* %i, align 4, !dbg !12537
  %cmp9 = icmp slt i32 %8, 40, !dbg !12539
  br i1 %cmp9, label %for.body, label %for.end, !dbg !12540

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !12541

do.body:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !12543
  %mul = mul i32 2, %9, !dbg !12543
  %add = add i32 64, %mul, !dbg !12543
  %conv11 = trunc i32 %add to i16, !dbg !12543
  %10 = load i8*, i8** %iop_base, align 8, !dbg !12543
  %add.ptr = getelementptr i8, i8* %10, i64 4, !dbg !12543
  call void @writew(i16 zeroext %conv11, i8* %add.ptr) #11, !dbg !12543
  %11 = load i8*, i8** %iop_base, align 8, !dbg !12543
  %add.ptr12 = getelementptr i8, i8* %11, i64 6, !dbg !12543
  %call = call zeroext i16 @readw(i8* %add.ptr12) #11, !dbg !12543
  %12 = load i32, i32* %i, align 4, !dbg !12543
  %idxprom = sext i32 %12 to i64, !dbg !12543
  %arrayidx = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 %idxprom, !dbg !12543
  store i16 %call, i16* %arrayidx, align 2, !dbg !12543
  br label %do.end, !dbg !12543

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !12545

for.inc:                                          ; preds = %do.end
  %13 = load i32, i32* %i, align 4, !dbg !12546
  %inc = add i32 %13, 1, !dbg !12546
  store i32 %inc, i32* %i, align 4, !dbg !12546
  br label %for.cond, !dbg !12547, !llvm.loop !12548

for.end:                                          ; preds = %for.cond
  br label %do.body13, !dbg !12550

do.body13:                                        ; preds = %for.end
  %14 = load i8*, i8** %iop_base, align 8, !dbg !12551
  %add.ptr14 = getelementptr i8, i8* %14, i64 4, !dbg !12551
  call void @writew(i16 zeroext 156, i8* %add.ptr14) #11, !dbg !12551
  %15 = load i8*, i8** %iop_base, align 8, !dbg !12551
  %add.ptr15 = getelementptr i8, i8* %15, i64 6, !dbg !12551
  %call16 = call zeroext i16 @readw(i8* %add.ptr15) #11, !dbg !12551
  store i16 %call16, i16* %wdtr_able, align 2, !dbg !12551
  br label %do.end17, !dbg !12551

do.end17:                                         ; preds = %do.body13
  br label %do.body18, !dbg !12553

do.body18:                                        ; preds = %do.end17
  %16 = load i8*, i8** %iop_base, align 8, !dbg !12554
  %add.ptr19 = getelementptr i8, i8* %16, i64 4, !dbg !12554
  call void @writew(i16 zeroext 158, i8* %add.ptr19) #11, !dbg !12554
  %17 = load i8*, i8** %iop_base, align 8, !dbg !12554
  %add.ptr20 = getelementptr i8, i8* %17, i64 6, !dbg !12554
  %call21 = call zeroext i16 @readw(i8* %add.ptr20) #11, !dbg !12554
  store i16 %call21, i16* %sdtr_able, align 2, !dbg !12554
  br label %do.end22, !dbg !12554

do.end22:                                         ; preds = %do.body18
  br label %do.body23, !dbg !12556

do.body23:                                        ; preds = %do.end22
  %18 = load i8*, i8** %iop_base, align 8, !dbg !12557
  %add.ptr24 = getelementptr i8, i8* %18, i64 4, !dbg !12557
  call void @writew(i16 zeroext 160, i8* %add.ptr24) #11, !dbg !12557
  %19 = load i8*, i8** %iop_base, align 8, !dbg !12557
  %add.ptr25 = getelementptr i8, i8* %19, i64 6, !dbg !12557
  %call26 = call zeroext i16 @readw(i8* %add.ptr25) #11, !dbg !12557
  store i16 %call26, i16* %tagqng_able, align 2, !dbg !12557
  br label %do.end27, !dbg !12557

do.end27:                                         ; preds = %do.body23
  store i8 0, i8* %tid, align 1, !dbg !12559
  br label %for.cond28, !dbg !12561

for.cond28:                                       ; preds = %for.inc43, %do.end27
  %20 = load i8, i8* %tid, align 1, !dbg !12562
  %conv29 = zext i8 %20 to i32, !dbg !12562
  %cmp30 = icmp sle i32 %conv29, 15, !dbg !12564
  br i1 %cmp30, label %for.body32, label %for.end45, !dbg !12565

for.body32:                                       ; preds = %for.cond28
  br label %do.body33, !dbg !12566

do.body33:                                        ; preds = %for.body32
  %21 = load i8, i8* %tid, align 1, !dbg !12568
  %conv34 = zext i8 %21 to i32, !dbg !12568
  %add35 = add i32 208, %conv34, !dbg !12568
  %conv36 = trunc i32 %add35 to i16, !dbg !12568
  %22 = load i8*, i8** %iop_base, align 8, !dbg !12568
  %add.ptr37 = getelementptr i8, i8* %22, i64 4, !dbg !12568
  call void @writew(i16 zeroext %conv36, i8* %add.ptr37) #11, !dbg !12568
  %23 = load i8*, i8** %iop_base, align 8, !dbg !12568
  %add.ptr38 = getelementptr i8, i8* %23, i64 6, !dbg !12568
  %call39 = call zeroext i8 @readb(i8* %add.ptr38) #11, !dbg !12568
  %24 = load i8, i8* %tid, align 1, !dbg !12568
  %idxprom40 = zext i8 %24 to i64, !dbg !12568
  %arrayidx41 = getelementptr [16 x i8], [16 x i8]* %max_cmd, i64 0, i64 %idxprom40, !dbg !12568
  store i8 %call39, i8* %arrayidx41, align 1, !dbg !12568
  br label %do.end42, !dbg !12568

do.end42:                                         ; preds = %do.body33
  br label %for.inc43, !dbg !12570

for.inc43:                                        ; preds = %do.end42
  %25 = load i8, i8* %tid, align 1, !dbg !12571
  %inc44 = add i8 %25, 1, !dbg !12571
  store i8 %inc44, i8* %tid, align 1, !dbg !12571
  br label %for.cond28, !dbg !12572, !llvm.loop !12573

for.end45:                                        ; preds = %for.cond28
  store i32 0, i32* %i, align 4, !dbg !12575
  br label %for.cond46, !dbg !12577

for.cond46:                                       ; preds = %for.inc78, %for.end45
  %26 = load i32, i32* %i, align 4, !dbg !12578
  %cmp47 = icmp slt i32 %26, 2, !dbg !12580
  br i1 %cmp47, label %for.body49, label %for.end80, !dbg !12581

for.body49:                                       ; preds = %for.cond46
  %27 = load i8*, i8** %iop_base, align 8, !dbg !12582
  %add.ptr50 = getelementptr i8, i8* %27, i64 56, !dbg !12582
  call void @writeb(i8 zeroext 64, i8* %add.ptr50) #11, !dbg !12582
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !12584, metadata !DIExpression()), !dbg !12586
  store i64 10, i64* %__ms, align 8, !dbg !12586
  br label %while.cond, !dbg !12586

while.cond:                                       ; preds = %while.body, %for.body49
  %28 = load i64, i64* %__ms, align 8, !dbg !12586
  %dec = add i64 %28, -1, !dbg !12586
  store i64 %dec, i64* %__ms, align 8, !dbg !12586
  %tobool = icmp ne i64 %28, 0, !dbg !12586
  br i1 %tobool, label %while.body, label %while.end, !dbg !12586

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !12587
  br label %while.cond, !dbg !12586, !llvm.loop !12592

while.end:                                        ; preds = %while.cond
  %29 = load i8*, i8** %iop_base, align 8, !dbg !12593
  %add.ptr51 = getelementptr i8, i8* %29, i64 56, !dbg !12593
  %call52 = call zeroext i8 @readb(i8* %add.ptr51) #11, !dbg !12593
  store i8 %call52, i8* %byte, align 1, !dbg !12594
  %30 = load i8, i8* %byte, align 1, !dbg !12595
  %conv53 = zext i8 %30 to i32, !dbg !12595
  %and = and i32 %conv53, 16, !dbg !12597
  %cmp54 = icmp eq i32 %and, 0, !dbg !12598
  br i1 %cmp54, label %if.then60, label %lor.lhs.false, !dbg !12599

lor.lhs.false:                                    ; preds = %while.end
  %31 = load i8, i8* %byte, align 1, !dbg !12600
  %conv56 = zext i8 %31 to i32, !dbg !12600
  %and57 = and i32 %conv56, 15, !dbg !12601
  %cmp58 = icmp ne i32 %and57, 5, !dbg !12602
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !12603

if.then60:                                        ; preds = %lor.lhs.false, %while.end
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12604
  %err_code61 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %32, i32 0, i32 1, !dbg !12606
  store i16 2048, i16* %err_code61, align 8, !dbg !12607
  store i32 -1, i32* %retval, align 4, !dbg !12608
  br label %return, !dbg !12608

if.end62:                                         ; preds = %lor.lhs.false
  %33 = load i8*, i8** %iop_base, align 8, !dbg !12609
  %add.ptr63 = getelementptr i8, i8* %33, i64 56, !dbg !12609
  call void @writeb(i8 zeroext 0, i8* %add.ptr63) #11, !dbg !12609
  call void @llvm.dbg.declare(metadata i64* %__ms64, metadata !12610, metadata !DIExpression()), !dbg !12612
  store i64 10, i64* %__ms64, align 8, !dbg !12612
  br label %while.cond65, !dbg !12612

while.cond65:                                     ; preds = %while.body68, %if.end62
  %34 = load i64, i64* %__ms64, align 8, !dbg !12612
  %dec66 = add i64 %34, -1, !dbg !12612
  store i64 %dec66, i64* %__ms64, align 8, !dbg !12612
  %tobool67 = icmp ne i64 %34, 0, !dbg !12612
  br i1 %tobool67, label %while.body68, label %while.end69, !dbg !12612

while.body68:                                     ; preds = %while.cond65
  call void @__const_udelay(i64 4295000) #11, !dbg !12613
  br label %while.cond65, !dbg !12612, !llvm.loop !12618

while.end69:                                      ; preds = %while.cond65
  %35 = load i8*, i8** %iop_base, align 8, !dbg !12619
  %add.ptr70 = getelementptr i8, i8* %35, i64 56, !dbg !12619
  %call71 = call zeroext i8 @readb(i8* %add.ptr70) #11, !dbg !12619
  %conv72 = zext i8 %call71 to i32, !dbg !12619
  %cmp73 = icmp ne i32 %conv72, 0, !dbg !12621
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !12622

if.then75:                                        ; preds = %while.end69
  %36 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12623
  %err_code76 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %36, i32 0, i32 1, !dbg !12625
  store i16 2048, i16* %err_code76, align 8, !dbg !12626
  store i32 -1, i32* %retval, align 4, !dbg !12627
  br label %return, !dbg !12627

if.end77:                                         ; preds = %while.end69
  br label %for.inc78, !dbg !12628

for.inc78:                                        ; preds = %if.end77
  %37 = load i32, i32* %i, align 4, !dbg !12629
  %inc79 = add i32 %37, 1, !dbg !12629
  store i32 %inc79, i32* %i, align 4, !dbg !12629
  br label %for.cond46, !dbg !12630, !llvm.loop !12631

for.end80:                                        ; preds = %for.cond46
  %38 = load i8*, i8** %iop_base, align 8, !dbg !12633
  %add.ptr81 = getelementptr i8, i8* %38, i64 56, !dbg !12633
  call void @writeb(i8 zeroext -128, i8* %add.ptr81) #11, !dbg !12633
  call void @llvm.dbg.declare(metadata i64* %__ms82, metadata !12634, metadata !DIExpression()), !dbg !12636
  store i64 10, i64* %__ms82, align 8, !dbg !12636
  br label %while.cond83, !dbg !12636

while.cond83:                                     ; preds = %while.body86, %for.end80
  %39 = load i64, i64* %__ms82, align 8, !dbg !12636
  %dec84 = add i64 %39, -1, !dbg !12636
  store i64 %dec84, i64* %__ms82, align 8, !dbg !12636
  %tobool85 = icmp ne i64 %39, 0, !dbg !12636
  br i1 %tobool85, label %while.body86, label %while.end87, !dbg !12636

while.body86:                                     ; preds = %while.cond83
  call void @__const_udelay(i64 4295000) #11, !dbg !12637
  br label %while.cond83, !dbg !12636, !llvm.loop !12642

while.end87:                                      ; preds = %while.cond83
  %40 = load i8*, i8** %iop_base, align 8, !dbg !12643
  %add.ptr88 = getelementptr i8, i8* %40, i64 56, !dbg !12643
  %call89 = call zeroext i8 @readb(i8* %add.ptr88) #11, !dbg !12643
  store i8 %call89, i8* %byte, align 1, !dbg !12644
  %41 = load i8, i8* %byte, align 1, !dbg !12645
  %conv90 = zext i8 %41 to i32, !dbg !12645
  %and91 = and i32 %conv90, 16, !dbg !12647
  %cmp92 = icmp eq i32 %and91, 0, !dbg !12648
  br i1 %cmp92, label %if.then99, label %lor.lhs.false94, !dbg !12649

lor.lhs.false94:                                  ; preds = %while.end87
  %42 = load i8, i8* %byte, align 1, !dbg !12650
  %conv95 = zext i8 %42 to i32, !dbg !12650
  %and96 = and i32 %conv95, 15, !dbg !12651
  %cmp97 = icmp ne i32 %and96, 0, !dbg !12652
  br i1 %cmp97, label %if.then99, label %if.end101, !dbg !12653

if.then99:                                        ; preds = %lor.lhs.false94, %while.end87
  %43 = load i8, i8* %byte, align 1, !dbg !12654
  %44 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12656
  %bist_err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %44, i32 0, i32 21, !dbg !12657
  store i8 %43, i8* %bist_err_code, align 2, !dbg !12658
  %45 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12659
  %err_code100 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %45, i32 0, i32 1, !dbg !12660
  store i16 4096, i16* %err_code100, align 8, !dbg !12661
  store i32 -1, i32* %retval, align 4, !dbg !12662
  br label %return, !dbg !12662

if.end101:                                        ; preds = %lor.lhs.false94
  %46 = load i8*, i8** %iop_base, align 8, !dbg !12663
  %add.ptr102 = getelementptr i8, i8* %46, i64 56, !dbg !12663
  call void @writeb(i8 zeroext 0, i8* %add.ptr102) #11, !dbg !12663
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %fwname, i64 0, i64 0, !dbg !12664
  %47 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12665
  %drv_ptr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %47, i32 0, i32 18, !dbg !12666
  %48 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !12666
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %48, i32 0, i32 0, !dbg !12667
  %49 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12667
  %call103 = call i32 @request_firmware(%struct.firmware** %fw, i8* %arraydecay, %struct.device* %49) #11, !dbg !12668
  store i32 %call103, i32* %err, align 4, !dbg !12669
  %50 = load i32, i32* %err, align 4, !dbg !12670
  %tobool104 = icmp ne i32 %50, 0, !dbg !12670
  br i1 %tobool104, label %if.then105, label %if.end109, !dbg !12672

if.then105:                                       ; preds = %if.end101
  %arraydecay106 = getelementptr inbounds [21 x i8], [21 x i8]* %fwname, i64 0, i64 0, !dbg !12673
  %51 = load i32, i32* %err, align 4, !dbg !12675
  %call107 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0), i8* %arraydecay106, i32 %51) #12, !dbg !12676
  %52 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12677
  %err_code108 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %52, i32 0, i32 1, !dbg !12678
  store i16 2, i16* %err_code108, align 8, !dbg !12679
  %53 = load i32, i32* %err, align 4, !dbg !12680
  store i32 %53, i32* %retval, align 4, !dbg !12681
  br label %return, !dbg !12681

if.end109:                                        ; preds = %if.end101
  %54 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12682
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %54, i32 0, i32 0, !dbg !12684
  %55 = load i64, i64* %size, align 8, !dbg !12684
  %cmp110 = icmp ult i64 %55, 4, !dbg !12685
  br i1 %cmp110, label %if.then112, label %if.end117, !dbg !12686

if.then112:                                       ; preds = %if.end109
  %56 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12687
  %size113 = getelementptr inbounds %struct.firmware, %struct.firmware* %56, i32 0, i32 0, !dbg !12689
  %57 = load i64, i64* %size113, align 8, !dbg !12689
  %arraydecay114 = getelementptr inbounds [21 x i8], [21 x i8]* %fwname, i64 0, i64 0, !dbg !12690
  %call115 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i64 %57, i8* %arraydecay114) #12, !dbg !12691
  %58 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12692
  call void @release_firmware(%struct.firmware* %58) #11, !dbg !12693
  %59 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12694
  %err_code116 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %59, i32 0, i32 1, !dbg !12695
  store i16 2, i16* %err_code116, align 8, !dbg !12696
  store i32 -22, i32* %retval, align 4, !dbg !12697
  br label %return, !dbg !12697

if.end117:                                        ; preds = %if.end109
  %60 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12698
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %60, i32 0, i32 1, !dbg !12699
  %61 = load i8*, i8** %data, align 8, !dbg !12699
  %arrayidx118 = getelementptr i8, i8* %61, i64 3, !dbg !12698
  %62 = load i8, i8* %arrayidx118, align 1, !dbg !12698
  %conv119 = zext i8 %62 to i32, !dbg !12698
  %shl = shl i32 %conv119, 24, !dbg !12700
  %63 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12701
  %data120 = getelementptr inbounds %struct.firmware, %struct.firmware* %63, i32 0, i32 1, !dbg !12702
  %64 = load i8*, i8** %data120, align 8, !dbg !12702
  %arrayidx121 = getelementptr i8, i8* %64, i64 2, !dbg !12701
  %65 = load i8, i8* %arrayidx121, align 1, !dbg !12701
  %conv122 = zext i8 %65 to i32, !dbg !12701
  %shl123 = shl i32 %conv122, 16, !dbg !12703
  %or = or i32 %shl, %shl123, !dbg !12704
  %66 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12705
  %data124 = getelementptr inbounds %struct.firmware, %struct.firmware* %66, i32 0, i32 1, !dbg !12706
  %67 = load i8*, i8** %data124, align 8, !dbg !12706
  %arrayidx125 = getelementptr i8, i8* %67, i64 1, !dbg !12705
  %68 = load i8, i8* %arrayidx125, align 1, !dbg !12705
  %conv126 = zext i8 %68 to i32, !dbg !12705
  %shl127 = shl i32 %conv126, 8, !dbg !12707
  %or128 = or i32 %or, %shl127, !dbg !12708
  %69 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12709
  %data129 = getelementptr inbounds %struct.firmware, %struct.firmware* %69, i32 0, i32 1, !dbg !12710
  %70 = load i8*, i8** %data129, align 8, !dbg !12710
  %arrayidx130 = getelementptr i8, i8* %70, i64 0, !dbg !12709
  %71 = load i8, i8* %arrayidx130, align 1, !dbg !12709
  %conv131 = zext i8 %71 to i32, !dbg !12709
  %or132 = or i32 %or128, %conv131, !dbg !12711
  %conv133 = sext i32 %or132 to i64, !dbg !12712
  store i64 %conv133, i64* %chksum, align 8, !dbg !12713
  %72 = load i8*, i8** %iop_base, align 8, !dbg !12714
  %73 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12715
  %data134 = getelementptr inbounds %struct.firmware, %struct.firmware* %73, i32 0, i32 1, !dbg !12716
  %74 = load i8*, i8** %data134, align 8, !dbg !12716
  %arrayidx135 = getelementptr i8, i8* %74, i64 4, !dbg !12715
  %75 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12717
  %size136 = getelementptr inbounds %struct.firmware, %struct.firmware* %75, i32 0, i32 0, !dbg !12718
  %76 = load i64, i64* %size136, align 8, !dbg !12718
  %sub = sub i64 %76, 4, !dbg !12719
  %conv137 = trunc i64 %sub to i32, !dbg !12717
  %77 = load i64, i64* %chksum, align 8, !dbg !12720
  %conv138 = trunc i64 %77 to i32, !dbg !12720
  %call139 = call i32 @AdvLoadMicrocode(i8* %72, i8* %arrayidx135, i32 %conv137, i32 16384, i32 %conv138) #11, !dbg !12721
  %conv140 = trunc i32 %call139 to i16, !dbg !12721
  %78 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12722
  %err_code141 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %78, i32 0, i32 1, !dbg !12723
  store i16 %conv140, i16* %err_code141, align 8, !dbg !12724
  %79 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !12725
  call void @release_firmware(%struct.firmware* %79) #11, !dbg !12726
  %80 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12727
  %err_code142 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %80, i32 0, i32 1, !dbg !12729
  %81 = load i16, i16* %err_code142, align 8, !dbg !12729
  %tobool143 = icmp ne i16 %81, 0, !dbg !12727
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !12730

if.then144:                                       ; preds = %if.end117
  store i32 -1, i32* %retval, align 4, !dbg !12731
  br label %return, !dbg !12731

if.end145:                                        ; preds = %if.end117
  store i32 0, i32* %i, align 4, !dbg !12732
  br label %for.cond146, !dbg !12734

for.cond146:                                      ; preds = %for.inc157, %if.end145
  %82 = load i32, i32* %i, align 4, !dbg !12735
  %cmp147 = icmp slt i32 %82, 40, !dbg !12737
  br i1 %cmp147, label %for.body149, label %for.end159, !dbg !12738

for.body149:                                      ; preds = %for.cond146
  %83 = load i32, i32* %i, align 4, !dbg !12739
  %mul150 = mul i32 2, %83, !dbg !12739
  %add151 = add i32 64, %mul150, !dbg !12739
  %conv152 = trunc i32 %add151 to i16, !dbg !12739
  %84 = load i8*, i8** %iop_base, align 8, !dbg !12739
  %add.ptr153 = getelementptr i8, i8* %84, i64 4, !dbg !12739
  call void @writew(i16 zeroext %conv152, i8* %add.ptr153) #11, !dbg !12739
  %85 = load i32, i32* %i, align 4, !dbg !12739
  %idxprom154 = sext i32 %85 to i64, !dbg !12739
  %arrayidx155 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 %idxprom154, !dbg !12739
  %86 = load i16, i16* %arrayidx155, align 2, !dbg !12739
  %87 = load i8*, i8** %iop_base, align 8, !dbg !12739
  %add.ptr156 = getelementptr i8, i8* %87, i64 6, !dbg !12739
  call void @writew(i16 zeroext %86, i8* %add.ptr156) #11, !dbg !12739
  br label %for.inc157, !dbg !12741

for.inc157:                                       ; preds = %for.body149
  %88 = load i32, i32* %i, align 4, !dbg !12742
  %inc158 = add i32 %88, 1, !dbg !12742
  store i32 %inc158, i32* %i, align 4, !dbg !12742
  br label %for.cond146, !dbg !12743, !llvm.loop !12744

for.end159:                                       ; preds = %for.cond146
  br label %do.body160, !dbg !12746

do.body160:                                       ; preds = %for.end159
  %89 = load i8*, i8** %iop_base, align 8, !dbg !12747
  %add.ptr161 = getelementptr i8, i8* %89, i64 4, !dbg !12747
  call void @writew(i16 zeroext 40, i8* %add.ptr161) #11, !dbg !12747
  %90 = load i8*, i8** %iop_base, align 8, !dbg !12747
  %add.ptr162 = getelementptr i8, i8* %90, i64 6, !dbg !12747
  %call163 = call zeroext i16 @readw(i8* %add.ptr162) #11, !dbg !12747
  %conv164 = zext i16 %call163 to i32, !dbg !12747
  store i32 %conv164, i32* %begin_addr, align 4, !dbg !12747
  br label %do.end165, !dbg !12747

do.end165:                                        ; preds = %do.body160
  br label %do.body166, !dbg !12749

do.body166:                                       ; preds = %do.end165
  %91 = load i8*, i8** %iop_base, align 8, !dbg !12750
  %add.ptr167 = getelementptr i8, i8* %91, i64 4, !dbg !12750
  call void @writew(i16 zeroext 42, i8* %add.ptr167) #11, !dbg !12750
  %92 = load i8*, i8** %iop_base, align 8, !dbg !12750
  %add.ptr168 = getelementptr i8, i8* %92, i64 6, !dbg !12750
  %call169 = call zeroext i16 @readw(i8* %add.ptr168) #11, !dbg !12750
  %conv170 = zext i16 %call169 to i32, !dbg !12750
  store i32 %conv170, i32* %end_addr, align 4, !dbg !12750
  br label %do.end171, !dbg !12750

do.end171:                                        ; preds = %do.body166
  store i16 0, i16* %code_sum, align 2, !dbg !12752
  %93 = load i32, i32* %begin_addr, align 4, !dbg !12753
  %conv172 = trunc i32 %93 to i16, !dbg !12753
  %94 = load i8*, i8** %iop_base, align 8, !dbg !12753
  %add.ptr173 = getelementptr i8, i8* %94, i64 4, !dbg !12753
  call void @writew(i16 zeroext %conv172, i8* %add.ptr173) #11, !dbg !12753
  %95 = load i32, i32* %begin_addr, align 4, !dbg !12754
  store i32 %95, i32* %word, align 4, !dbg !12756
  br label %for.cond174, !dbg !12757

for.cond174:                                      ; preds = %for.inc184, %do.end171
  %96 = load i32, i32* %word, align 4, !dbg !12758
  %97 = load i32, i32* %end_addr, align 4, !dbg !12760
  %cmp175 = icmp slt i32 %96, %97, !dbg !12761
  br i1 %cmp175, label %for.body177, label %for.end186, !dbg !12762

for.body177:                                      ; preds = %for.cond174
  %98 = load i8*, i8** %iop_base, align 8, !dbg !12763
  %add.ptr178 = getelementptr i8, i8* %98, i64 6, !dbg !12763
  %call179 = call zeroext i16 @readw(i8* %add.ptr178) #11, !dbg !12763
  %conv180 = zext i16 %call179 to i32, !dbg !12763
  %99 = load i16, i16* %code_sum, align 2, !dbg !12765
  %conv181 = zext i16 %99 to i32, !dbg !12765
  %add182 = add i32 %conv181, %conv180, !dbg !12765
  %conv183 = trunc i32 %add182 to i16, !dbg !12765
  store i16 %conv183, i16* %code_sum, align 2, !dbg !12765
  br label %for.inc184, !dbg !12766

for.inc184:                                       ; preds = %for.body177
  %100 = load i32, i32* %word, align 4, !dbg !12767
  %add185 = add i32 %100, 2, !dbg !12767
  store i32 %add185, i32* %word, align 4, !dbg !12767
  br label %for.cond174, !dbg !12768, !llvm.loop !12769

for.end186:                                       ; preds = %for.cond174
  %101 = load i8*, i8** %iop_base, align 8, !dbg !12771
  %add.ptr187 = getelementptr i8, i8* %101, i64 4, !dbg !12771
  call void @writew(i16 zeroext 44, i8* %add.ptr187) #11, !dbg !12771
  %102 = load i16, i16* %code_sum, align 2, !dbg !12771
  %103 = load i8*, i8** %iop_base, align 8, !dbg !12771
  %add.ptr188 = getelementptr i8, i8* %103, i64 6, !dbg !12771
  call void @writew(i16 zeroext %102, i8* %add.ptr188) #11, !dbg !12771
  br label %do.body189, !dbg !12772

do.body189:                                       ; preds = %for.end186
  %104 = load i8*, i8** %iop_base, align 8, !dbg !12773
  %add.ptr190 = getelementptr i8, i8* %104, i64 4, !dbg !12773
  call void @writew(i16 zeroext 56, i8* %add.ptr190) #11, !dbg !12773
  %105 = load i8*, i8** %iop_base, align 8, !dbg !12773
  %add.ptr191 = getelementptr i8, i8* %105, i64 6, !dbg !12773
  %call192 = call zeroext i16 @readw(i8* %add.ptr191) #11, !dbg !12773
  %106 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12773
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %106, i32 0, i32 28, !dbg !12773
  %107 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !12773
  %mcode_date = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %107, i32 0, i32 4, !dbg !12773
  store i16 %call192, i16* %mcode_date, align 2, !dbg !12773
  br label %do.end193, !dbg !12773

do.end193:                                        ; preds = %do.body189
  br label %do.body194, !dbg !12775

do.body194:                                       ; preds = %do.end193
  %108 = load i8*, i8** %iop_base, align 8, !dbg !12776
  %add.ptr195 = getelementptr i8, i8* %108, i64 4, !dbg !12776
  call void @writew(i16 zeroext 58, i8* %add.ptr195) #11, !dbg !12776
  %109 = load i8*, i8** %iop_base, align 8, !dbg !12776
  %add.ptr196 = getelementptr i8, i8* %109, i64 6, !dbg !12776
  %call197 = call zeroext i16 @readw(i8* %add.ptr196) #11, !dbg !12776
  %110 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12776
  %cfg198 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %110, i32 0, i32 28, !dbg !12776
  %111 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg198, align 8, !dbg !12776
  %mcode_version = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %111, i32 0, i32 5, !dbg !12776
  store i16 %call197, i16* %mcode_version, align 2, !dbg !12776
  br label %do.end199, !dbg !12776

do.end199:                                        ; preds = %do.body194
  %112 = load i8*, i8** %iop_base, align 8, !dbg !12778
  %add.ptr200 = getelementptr i8, i8* %112, i64 4, !dbg !12778
  call void @writew(i16 zeroext 154, i8* %add.ptr200) #11, !dbg !12778
  %113 = load i8*, i8** %iop_base, align 8, !dbg !12778
  %add.ptr201 = getelementptr i8, i8* %113, i64 6, !dbg !12778
  call void @writew(i16 zeroext 2, i8* %add.ptr201) #11, !dbg !12778
  %114 = load i8*, i8** %iop_base, align 8, !dbg !12779
  %add.ptr202 = getelementptr i8, i8* %114, i64 14, !dbg !12779
  %call203 = call zeroext i16 @readw(i8* %add.ptr202) #11, !dbg !12779
  store i16 %call203, i16* %scsi_cfg1, align 2, !dbg !12780
  %115 = load i16, i16* %scsi_cfg1, align 2, !dbg !12781
  %conv204 = zext i16 %115 to i32, !dbg !12781
  %or205 = or i32 %conv204, 16384, !dbg !12781
  %conv206 = trunc i32 %or205 to i16, !dbg !12781
  %116 = load i8*, i8** %iop_base, align 8, !dbg !12781
  %add.ptr207 = getelementptr i8, i8* %116, i64 14, !dbg !12781
  call void @writew(i16 zeroext %conv206, i8* %add.ptr207) #11, !dbg !12781
  %117 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12782
  %cfg208 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %117, i32 0, i32 28, !dbg !12784
  %118 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg208, align 8, !dbg !12784
  %control_flag = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %118, i32 0, i32 3, !dbg !12785
  %119 = load i16, i16* %control_flag, align 2, !dbg !12785
  %conv209 = zext i16 %119 to i32, !dbg !12782
  %and210 = and i32 %conv209, 1, !dbg !12786
  %tobool211 = icmp ne i32 %and210, 0, !dbg !12786
  br i1 %tobool211, label %if.then212, label %if.end223, !dbg !12787

if.then212:                                       ; preds = %do.end199
  br label %do.body213, !dbg !12788

do.body213:                                       ; preds = %if.then212
  %120 = load i8*, i8** %iop_base, align 8, !dbg !12790
  %add.ptr214 = getelementptr i8, i8* %120, i64 4, !dbg !12790
  call void @writew(i16 zeroext 290, i8* %add.ptr214) #11, !dbg !12790
  %121 = load i8*, i8** %iop_base, align 8, !dbg !12790
  %add.ptr215 = getelementptr i8, i8* %121, i64 6, !dbg !12790
  %call216 = call zeroext i16 @readw(i8* %add.ptr215) #11, !dbg !12790
  %conv217 = zext i16 %call216 to i32, !dbg !12790
  store i32 %conv217, i32* %word, align 4, !dbg !12790
  br label %do.end218, !dbg !12790

do.end218:                                        ; preds = %do.body213
  %122 = load i32, i32* %word, align 4, !dbg !12792
  %or219 = or i32 %122, 1, !dbg !12792
  store i32 %or219, i32* %word, align 4, !dbg !12792
  %123 = load i8*, i8** %iop_base, align 8, !dbg !12793
  %add.ptr220 = getelementptr i8, i8* %123, i64 4, !dbg !12793
  call void @writew(i16 zeroext 290, i8* %add.ptr220) #11, !dbg !12793
  %124 = load i32, i32* %word, align 4, !dbg !12793
  %conv221 = trunc i32 %124 to i16, !dbg !12793
  %125 = load i8*, i8** %iop_base, align 8, !dbg !12793
  %add.ptr222 = getelementptr i8, i8* %125, i64 6, !dbg !12793
  call void @writew(i16 zeroext %conv221, i8* %add.ptr222) #11, !dbg !12793
  br label %if.end223, !dbg !12794

if.end223:                                        ; preds = %do.end218, %do.end199
  %126 = load i8*, i8** %iop_base, align 8, !dbg !12795
  %add.ptr224 = getelementptr i8, i8* %126, i64 32, !dbg !12795
  call void @writeb(i8 zeroext -45, i8* %add.ptr224) #11, !dbg !12795
  %127 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12796
  %bios_ctrl = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %127, i32 0, i32 2, !dbg !12798
  %128 = load i16, i16* %bios_ctrl, align 2, !dbg !12798
  %conv225 = zext i16 %128 to i32, !dbg !12796
  %and226 = and i32 %conv225, 512, !dbg !12799
  %cmp227 = icmp eq i32 %and226, 0, !dbg !12800
  br i1 %cmp227, label %if.then229, label %if.end236, !dbg !12801

if.then229:                                       ; preds = %if.end223
  %129 = load i8*, i8** %iop_base, align 8, !dbg !12802
  %add.ptr230 = getelementptr i8, i8* %129, i64 4, !dbg !12802
  call void @writew(i16 zeroext 156, i8* %add.ptr230) #11, !dbg !12802
  %130 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12802
  %wdtr_able231 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %130, i32 0, i32 3, !dbg !12802
  %131 = load i16, i16* %wdtr_able231, align 4, !dbg !12802
  %132 = load i8*, i8** %iop_base, align 8, !dbg !12802
  %add.ptr232 = getelementptr i8, i8* %132, i64 6, !dbg !12802
  call void @writew(i16 zeroext %131, i8* %add.ptr232) #11, !dbg !12802
  %133 = load i8*, i8** %iop_base, align 8, !dbg !12804
  %add.ptr233 = getelementptr i8, i8* %133, i64 4, !dbg !12804
  call void @writew(i16 zeroext 158, i8* %add.ptr233) #11, !dbg !12804
  %134 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12804
  %sdtr_able234 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %134, i32 0, i32 4, !dbg !12804
  %135 = load i16, i16* %sdtr_able234, align 2, !dbg !12804
  %136 = load i8*, i8** %iop_base, align 8, !dbg !12804
  %add.ptr235 = getelementptr i8, i8* %136, i64 6, !dbg !12804
  call void @writew(i16 zeroext %135, i8* %add.ptr235) #11, !dbg !12804
  br label %if.end236, !dbg !12805

if.end236:                                        ; preds = %if.then229, %if.end223
  %137 = load i8*, i8** %iop_base, align 8, !dbg !12806
  %add.ptr237 = getelementptr i8, i8* %137, i64 4, !dbg !12806
  call void @writew(i16 zeroext 162, i8* %add.ptr237) #11, !dbg !12806
  %138 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12806
  %cfg238 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %138, i32 0, i32 28, !dbg !12806
  %139 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg238, align 8, !dbg !12806
  %disc_enable = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %139, i32 0, i32 0, !dbg !12806
  %140 = load i16, i16* %disc_enable, align 2, !dbg !12806
  %141 = load i8*, i8** %iop_base, align 8, !dbg !12806
  %add.ptr239 = getelementptr i8, i8* %141, i64 6, !dbg !12806
  call void @writew(i16 zeroext %140, i8* %add.ptr239) #11, !dbg !12806
  %142 = load i8*, i8** %iop_base, align 8, !dbg !12807
  %add.ptr240 = getelementptr i8, i8* %142, i64 4, !dbg !12807
  call void @writew(i16 zeroext 144, i8* %add.ptr240) #11, !dbg !12807
  %143 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12807
  %sdtr_speed1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %143, i32 0, i32 6, !dbg !12807
  %144 = load i16, i16* %sdtr_speed1, align 2, !dbg !12807
  %145 = load i8*, i8** %iop_base, align 8, !dbg !12807
  %add.ptr241 = getelementptr i8, i8* %145, i64 6, !dbg !12807
  call void @writew(i16 zeroext %144, i8* %add.ptr241) #11, !dbg !12807
  %146 = load i8*, i8** %iop_base, align 8, !dbg !12808
  %add.ptr242 = getelementptr i8, i8* %146, i64 4, !dbg !12808
  call void @writew(i16 zeroext 146, i8* %add.ptr242) #11, !dbg !12808
  %147 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12808
  %sdtr_speed2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %147, i32 0, i32 7, !dbg !12808
  %148 = load i16, i16* %sdtr_speed2, align 4, !dbg !12808
  %149 = load i8*, i8** %iop_base, align 8, !dbg !12808
  %add.ptr243 = getelementptr i8, i8* %149, i64 6, !dbg !12808
  call void @writew(i16 zeroext %148, i8* %add.ptr243) #11, !dbg !12808
  %150 = load i8*, i8** %iop_base, align 8, !dbg !12809
  %add.ptr244 = getelementptr i8, i8* %150, i64 4, !dbg !12809
  call void @writew(i16 zeroext 148, i8* %add.ptr244) #11, !dbg !12809
  %151 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12809
  %sdtr_speed3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %151, i32 0, i32 8, !dbg !12809
  %152 = load i16, i16* %sdtr_speed3, align 2, !dbg !12809
  %153 = load i8*, i8** %iop_base, align 8, !dbg !12809
  %add.ptr245 = getelementptr i8, i8* %153, i64 6, !dbg !12809
  call void @writew(i16 zeroext %152, i8* %add.ptr245) #11, !dbg !12809
  %154 = load i8*, i8** %iop_base, align 8, !dbg !12810
  %add.ptr246 = getelementptr i8, i8* %154, i64 4, !dbg !12810
  call void @writew(i16 zeroext 150, i8* %add.ptr246) #11, !dbg !12810
  %155 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12810
  %sdtr_speed4 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %155, i32 0, i32 9, !dbg !12810
  %156 = load i16, i16* %sdtr_speed4, align 8, !dbg !12810
  %157 = load i8*, i8** %iop_base, align 8, !dbg !12810
  %add.ptr247 = getelementptr i8, i8* %157, i64 6, !dbg !12810
  call void @writew(i16 zeroext %156, i8* %add.ptr247) #11, !dbg !12810
  %158 = load i8*, i8** %iop_base, align 8, !dbg !12811
  %add.ptr248 = getelementptr i8, i8* %158, i64 4, !dbg !12811
  call void @writew(i16 zeroext 172, i8* %add.ptr248) #11, !dbg !12811
  %159 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12811
  %chip_scsi_id = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %159, i32 0, i32 19, !dbg !12811
  %160 = load i8, i8* %chip_scsi_id, align 8, !dbg !12811
  %conv249 = zext i8 %160 to i32, !dbg !12811
  %or250 = or i32 9296, %conv249, !dbg !12811
  %conv251 = trunc i32 %or250 to i16, !dbg !12811
  %161 = load i8*, i8** %iop_base, align 8, !dbg !12811
  %add.ptr252 = getelementptr i8, i8* %161, i64 6, !dbg !12811
  call void @writew(i16 zeroext %conv251, i8* %add.ptr252) #11, !dbg !12811
  %162 = load i8*, i8** %iop_base, align 8, !dbg !12812
  %add.ptr253 = getelementptr i8, i8* %162, i64 14, !dbg !12812
  %call254 = call zeroext i16 @readw(i8* %add.ptr253) #11, !dbg !12812
  store i16 %call254, i16* %scsi_cfg1, align 2, !dbg !12813
  %163 = load i8*, i8** %iop_base, align 8, !dbg !12814
  %add.ptr255 = getelementptr i8, i8* %163, i64 52, !dbg !12814
  %call256 = call zeroext i16 @readw(i8* %add.ptr255) #11, !dbg !12814
  %conv257 = zext i16 %call256 to i32, !dbg !12814
  %and258 = and i32 %conv257, 16135, !dbg !12816
  %cmp259 = icmp eq i32 %and258, 16135, !dbg !12817
  br i1 %cmp259, label %if.then261, label %if.end266, !dbg !12818

if.then261:                                       ; preds = %if.end236
  %164 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12819
  %err_code262 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %164, i32 0, i32 1, !dbg !12821
  %165 = load i16, i16* %err_code262, align 8, !dbg !12822
  %conv263 = zext i16 %165 to i32, !dbg !12822
  %or264 = or i32 %conv263, 64, !dbg !12822
  %conv265 = trunc i32 %or264 to i16, !dbg !12822
  store i16 %conv265, i16* %err_code262, align 8, !dbg !12822
  store i32 -1, i32* %retval, align 4, !dbg !12823
  br label %return, !dbg !12823

if.end266:                                        ; preds = %if.end236
  %166 = load i16, i16* %scsi_cfg1, align 2, !dbg !12824
  %conv267 = zext i16 %166 to i32, !dbg !12824
  %and268 = and i32 %conv267, 4096, !dbg !12826
  %tobool269 = icmp ne i32 %and268, 0, !dbg !12826
  br i1 %tobool269, label %if.then270, label %if.end272, !dbg !12827

if.then270:                                       ; preds = %if.end266
  %167 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12828
  %err_code271 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %167, i32 0, i32 1, !dbg !12830
  store i16 256, i16* %err_code271, align 8, !dbg !12831
  store i32 -1, i32* %retval, align 4, !dbg !12832
  br label %return, !dbg !12832

if.end272:                                        ; preds = %if.end266
  %168 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12833
  %cfg273 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %168, i32 0, i32 28, !dbg !12835
  %169 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg273, align 8, !dbg !12835
  %termination = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %169, i32 0, i32 2, !dbg !12836
  %170 = load i8, i8* %termination, align 1, !dbg !12836
  %conv274 = zext i8 %170 to i32, !dbg !12833
  %and275 = and i32 %conv274, 48, !dbg !12837
  %cmp276 = icmp eq i32 %and275, 0, !dbg !12838
  br i1 %cmp276, label %if.then278, label %if.end292, !dbg !12839

if.then278:                                       ; preds = %if.end272
  %171 = load i16, i16* %scsi_cfg1, align 2, !dbg !12840
  %conv279 = zext i16 %171 to i32, !dbg !12840
  %and280 = and i32 %conv279, 3, !dbg !12842
  switch i32 %and280, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 0, label %sw.bb286
  ], !dbg !12843

sw.bb:                                            ; preds = %if.then278, %if.then278, %if.then278
  %172 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12844
  %cfg281 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %172, i32 0, i32 28, !dbg !12846
  %173 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg281, align 8, !dbg !12846
  %termination282 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %173, i32 0, i32 2, !dbg !12847
  %174 = load i8, i8* %termination282, align 1, !dbg !12848
  %conv283 = zext i8 %174 to i32, !dbg !12848
  %or284 = or i32 %conv283, 48, !dbg !12848
  %conv285 = trunc i32 %or284 to i8, !dbg !12848
  store i8 %conv285, i8* %termination282, align 1, !dbg !12848
  br label %sw.epilog, !dbg !12849

sw.bb286:                                         ; preds = %if.then278
  %175 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12850
  %cfg287 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %175, i32 0, i32 28, !dbg !12851
  %176 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg287, align 8, !dbg !12851
  %termination288 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %176, i32 0, i32 2, !dbg !12852
  %177 = load i8, i8* %termination288, align 1, !dbg !12853
  %conv289 = zext i8 %177 to i32, !dbg !12853
  %or290 = or i32 %conv289, 32, !dbg !12853
  %conv291 = trunc i32 %or290 to i8, !dbg !12853
  store i8 %conv291, i8* %termination288, align 1, !dbg !12853
  br label %sw.epilog, !dbg !12854

sw.epilog:                                        ; preds = %if.then278, %sw.bb286, %sw.bb
  br label %if.end292, !dbg !12855

if.end292:                                        ; preds = %sw.epilog, %if.end272
  %178 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12856
  %cfg293 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %178, i32 0, i32 28, !dbg !12858
  %179 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg293, align 8, !dbg !12858
  %termination294 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %179, i32 0, i32 2, !dbg !12859
  %180 = load i8, i8* %termination294, align 1, !dbg !12859
  %conv295 = zext i8 %180 to i32, !dbg !12856
  %and296 = and i32 %conv295, 192, !dbg !12860
  %cmp297 = icmp eq i32 %and296, 0, !dbg !12861
  br i1 %cmp297, label %if.then299, label %if.end310, !dbg !12862

if.then299:                                       ; preds = %if.end292
  %181 = load i16, i16* %scsi_cfg1, align 2, !dbg !12863
  %conv300 = zext i16 %181 to i32, !dbg !12863
  %and301 = and i32 %conv300, 12, !dbg !12865
  switch i32 %and301, label %sw.epilog309 [
    i32 4, label %sw.bb302
    i32 8, label %sw.bb302
    i32 12, label %sw.bb302
    i32 0, label %sw.bb308
  ], !dbg !12866

sw.bb302:                                         ; preds = %if.then299, %if.then299, %if.then299
  %182 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12867
  %cfg303 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %182, i32 0, i32 28, !dbg !12869
  %183 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg303, align 8, !dbg !12869
  %termination304 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %183, i32 0, i32 2, !dbg !12870
  %184 = load i8, i8* %termination304, align 1, !dbg !12871
  %conv305 = zext i8 %184 to i32, !dbg !12871
  %or306 = or i32 %conv305, 192, !dbg !12871
  %conv307 = trunc i32 %or306 to i8, !dbg !12871
  store i8 %conv307, i8* %termination304, align 1, !dbg !12871
  br label %sw.epilog309, !dbg !12872

sw.bb308:                                         ; preds = %if.then299
  br label %sw.epilog309, !dbg !12873

sw.epilog309:                                     ; preds = %if.then299, %sw.bb308, %sw.bb302
  br label %if.end310, !dbg !12874

if.end310:                                        ; preds = %sw.epilog309, %if.end292
  %185 = load i16, i16* %scsi_cfg1, align 2, !dbg !12875
  %conv311 = zext i16 %185 to i32, !dbg !12875
  %and312 = and i32 %conv311, -241, !dbg !12875
  %conv313 = trunc i32 %and312 to i16, !dbg !12875
  store i16 %conv313, i16* %scsi_cfg1, align 2, !dbg !12875
  %186 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12876
  %cfg314 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %186, i32 0, i32 28, !dbg !12877
  %187 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg314, align 8, !dbg !12877
  %termination315 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %187, i32 0, i32 2, !dbg !12878
  %188 = load i8, i8* %termination315, align 1, !dbg !12878
  %conv316 = zext i8 %188 to i32, !dbg !12876
  %neg = xor i32 %conv316, -1, !dbg !12879
  %and317 = and i32 %neg, 240, !dbg !12880
  %189 = load i16, i16* %scsi_cfg1, align 2, !dbg !12881
  %conv318 = zext i16 %189 to i32, !dbg !12881
  %or319 = or i32 %conv318, %and317, !dbg !12881
  %conv320 = trunc i32 %or319 to i16, !dbg !12881
  store i16 %conv320, i16* %scsi_cfg1, align 2, !dbg !12881
  %190 = load i16, i16* %scsi_cfg1, align 2, !dbg !12882
  %conv321 = zext i16 %190 to i32, !dbg !12882
  %and322 = and i32 %conv321, -64513, !dbg !12882
  %conv323 = trunc i32 %and322 to i16, !dbg !12882
  store i16 %conv323, i16* %scsi_cfg1, align 2, !dbg !12882
  %191 = load i8*, i8** %iop_base, align 8, !dbg !12883
  %add.ptr324 = getelementptr i8, i8* %191, i64 4, !dbg !12883
  call void @writew(i16 zeroext 174, i8* %add.ptr324) #11, !dbg !12883
  %192 = load i16, i16* %scsi_cfg1, align 2, !dbg !12883
  %193 = load i8*, i8** %iop_base, align 8, !dbg !12883
  %add.ptr325 = getelementptr i8, i8* %193, i64 6, !dbg !12883
  call void @writew(i16 zeroext %192, i8* %add.ptr325) #11, !dbg !12883
  %194 = load i8*, i8** %iop_base, align 8, !dbg !12884
  %add.ptr326 = getelementptr i8, i8* %194, i64 4, !dbg !12884
  call void @writew(i16 zeroext 176, i8* %add.ptr326) #11, !dbg !12884
  %195 = load i8*, i8** %iop_base, align 8, !dbg !12884
  %add.ptr327 = getelementptr i8, i8* %195, i64 6, !dbg !12884
  call void @writew(i16 zeroext 76, i8* %add.ptr327) #11, !dbg !12884
  %196 = load i8*, i8** %iop_base, align 8, !dbg !12885
  %add.ptr328 = getelementptr i8, i8* %196, i64 4, !dbg !12885
  call void @writew(i16 zeroext 178, i8* %add.ptr328) #11, !dbg !12885
  %197 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12885
  %chip_scsi_id329 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %197, i32 0, i32 19, !dbg !12885
  %198 = load i8, i8* %chip_scsi_id329, align 8, !dbg !12885
  %conv330 = zext i8 %198 to i32, !dbg !12885
  %and331 = and i32 %conv330, 15, !dbg !12885
  %shl332 = shl i32 1, %and331, !dbg !12885
  %conv333 = trunc i32 %shl332 to i16, !dbg !12885
  %199 = load i8*, i8** %iop_base, align 8, !dbg !12885
  %add.ptr334 = getelementptr i8, i8* %199, i64 6, !dbg !12885
  call void @writew(i16 zeroext %conv333, i8* %add.ptr334) #11, !dbg !12885
  %200 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12886
  call void @AdvBuildCarrierFreelist(%struct.adv_dvc_var* %200) #11, !dbg !12887
  %201 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12888
  %call335 = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %201) #11, !dbg !12889
  %202 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12890
  %icq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %202, i32 0, i32 25, !dbg !12891
  store %struct.adv_carr_t* %call335, %struct.adv_carr_t** %icq_sp, align 8, !dbg !12892
  %203 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12893
  %icq_sp336 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %203, i32 0, i32 25, !dbg !12895
  %204 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp336, align 8, !dbg !12895
  %tobool337 = icmp ne %struct.adv_carr_t* %204, null, !dbg !12893
  br i1 %tobool337, label %if.end343, label %if.then338, !dbg !12896

if.then338:                                       ; preds = %if.end310
  %205 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12897
  %err_code339 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %205, i32 0, i32 1, !dbg !12899
  %206 = load i16, i16* %err_code339, align 8, !dbg !12900
  %conv340 = zext i16 %206 to i32, !dbg !12900
  %or341 = or i32 %conv340, 1, !dbg !12900
  %conv342 = trunc i32 %or341 to i16, !dbg !12900
  store i16 %conv342, i16* %err_code339, align 8, !dbg !12900
  store i32 -1, i32* %retval, align 4, !dbg !12901
  br label %return, !dbg !12901

if.end343:                                        ; preds = %if.end310
  %207 = load i8*, i8** %iop_base, align 8, !dbg !12902
  %add.ptr344 = getelementptr i8, i8* %207, i64 4, !dbg !12902
  call void @writew(i16 zeroext 352, i8* %add.ptr344) #11, !dbg !12902
  %208 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12902
  %icq_sp345 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %208, i32 0, i32 25, !dbg !12902
  %209 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp345, align 8, !dbg !12902
  %carr_pa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %209, i32 0, i32 1, !dbg !12902
  %210 = load i32, i32* %carr_pa, align 4, !dbg !12902
  %and346 = and i32 %210, 65535, !dbg !12902
  %conv347 = trunc i32 %and346 to i16, !dbg !12902
  %211 = load i8*, i8** %iop_base, align 8, !dbg !12902
  %add.ptr348 = getelementptr i8, i8* %211, i64 6, !dbg !12902
  call void @writew(i16 zeroext %conv347, i8* %add.ptr348) #11, !dbg !12902
  %212 = load i8*, i8** %iop_base, align 8, !dbg !12902
  %add.ptr349 = getelementptr i8, i8* %212, i64 4, !dbg !12902
  call void @writew(i16 zeroext 354, i8* %add.ptr349) #11, !dbg !12902
  %213 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12902
  %icq_sp350 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %213, i32 0, i32 25, !dbg !12902
  %214 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp350, align 8, !dbg !12902
  %carr_pa351 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %214, i32 0, i32 1, !dbg !12902
  %215 = load i32, i32* %carr_pa351, align 4, !dbg !12902
  %shr = lshr i32 %215, 16, !dbg !12902
  %and352 = and i32 %shr, 65535, !dbg !12902
  %conv353 = trunc i32 %and352 to i16, !dbg !12902
  %216 = load i8*, i8** %iop_base, align 8, !dbg !12902
  %add.ptr354 = getelementptr i8, i8* %216, i64 6, !dbg !12902
  call void @writew(i16 zeroext %conv353, i8* %add.ptr354) #11, !dbg !12902
  %217 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12903
  %call355 = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %217) #11, !dbg !12904
  %218 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12905
  %irq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %218, i32 0, i32 26, !dbg !12906
  store %struct.adv_carr_t* %call355, %struct.adv_carr_t** %irq_sp, align 8, !dbg !12907
  %219 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12908
  %irq_sp356 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %219, i32 0, i32 26, !dbg !12910
  %220 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp356, align 8, !dbg !12910
  %tobool357 = icmp ne %struct.adv_carr_t* %220, null, !dbg !12908
  br i1 %tobool357, label %if.end363, label %if.then358, !dbg !12911

if.then358:                                       ; preds = %if.end343
  %221 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12912
  %err_code359 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %221, i32 0, i32 1, !dbg !12914
  %222 = load i16, i16* %err_code359, align 8, !dbg !12915
  %conv360 = zext i16 %222 to i32, !dbg !12915
  %or361 = or i32 %conv360, 1, !dbg !12915
  %conv362 = trunc i32 %or361 to i16, !dbg !12915
  store i16 %conv362, i16* %err_code359, align 8, !dbg !12915
  store i32 -1, i32* %retval, align 4, !dbg !12916
  br label %return, !dbg !12916

if.end363:                                        ; preds = %if.end343
  %223 = load i8*, i8** %iop_base, align 8, !dbg !12917
  %add.ptr364 = getelementptr i8, i8* %223, i64 4, !dbg !12917
  call void @writew(i16 zeroext 356, i8* %add.ptr364) #11, !dbg !12917
  %224 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12917
  %irq_sp365 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %224, i32 0, i32 26, !dbg !12917
  %225 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp365, align 8, !dbg !12917
  %carr_pa366 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %225, i32 0, i32 1, !dbg !12917
  %226 = load i32, i32* %carr_pa366, align 4, !dbg !12917
  %and367 = and i32 %226, 65535, !dbg !12917
  %conv368 = trunc i32 %and367 to i16, !dbg !12917
  %227 = load i8*, i8** %iop_base, align 8, !dbg !12917
  %add.ptr369 = getelementptr i8, i8* %227, i64 6, !dbg !12917
  call void @writew(i16 zeroext %conv368, i8* %add.ptr369) #11, !dbg !12917
  %228 = load i8*, i8** %iop_base, align 8, !dbg !12917
  %add.ptr370 = getelementptr i8, i8* %228, i64 4, !dbg !12917
  call void @writew(i16 zeroext 358, i8* %add.ptr370) #11, !dbg !12917
  %229 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12917
  %irq_sp371 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %229, i32 0, i32 26, !dbg !12917
  %230 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp371, align 8, !dbg !12917
  %carr_pa372 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %230, i32 0, i32 1, !dbg !12917
  %231 = load i32, i32* %carr_pa372, align 4, !dbg !12917
  %shr373 = lshr i32 %231, 16, !dbg !12917
  %and374 = and i32 %shr373, 65535, !dbg !12917
  %conv375 = trunc i32 %and374 to i16, !dbg !12917
  %232 = load i8*, i8** %iop_base, align 8, !dbg !12917
  %add.ptr376 = getelementptr i8, i8* %232, i64 6, !dbg !12917
  call void @writew(i16 zeroext %conv375, i8* %add.ptr376) #11, !dbg !12917
  %233 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12918
  %carr_pending_cnt = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %233, i32 0, i32 27, !dbg !12919
  store i16 0, i16* %carr_pending_cnt, align 8, !dbg !12920
  %234 = load i8*, i8** %iop_base, align 8, !dbg !12921
  %add.ptr377 = getelementptr i8, i8* %234, i64 2, !dbg !12921
  call void @writeb(i8 zeroext -127, i8* %add.ptr377) #11, !dbg !12921
  br label %do.body378, !dbg !12922

do.body378:                                       ; preds = %if.end363
  %235 = load i8*, i8** %iop_base, align 8, !dbg !12923
  %add.ptr379 = getelementptr i8, i8* %235, i64 4, !dbg !12923
  call void @writew(i16 zeroext 40, i8* %add.ptr379) #11, !dbg !12923
  %236 = load i8*, i8** %iop_base, align 8, !dbg !12923
  %add.ptr380 = getelementptr i8, i8* %236, i64 6, !dbg !12923
  %call381 = call zeroext i16 @readw(i8* %add.ptr380) #11, !dbg !12923
  %conv382 = zext i16 %call381 to i32, !dbg !12923
  store i32 %conv382, i32* %word, align 4, !dbg !12923
  br label %do.end383, !dbg !12923

do.end383:                                        ; preds = %do.body378
  %237 = load i32, i32* %word, align 4, !dbg !12925
  %conv384 = trunc i32 %237 to i16, !dbg !12925
  %238 = load i8*, i8** %iop_base, align 8, !dbg !12925
  %add.ptr385 = getelementptr i8, i8* %238, i64 42, !dbg !12925
  call void @writew(i16 zeroext %conv384, i8* %add.ptr385) #11, !dbg !12925
  %239 = load i8*, i8** %iop_base, align 8, !dbg !12926
  %add.ptr386 = getelementptr i8, i8* %239, i64 10, !dbg !12926
  call void @writew(i16 zeroext 16384, i8* %add.ptr386) #11, !dbg !12926
  %240 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12927
  %bios_ctrl387 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %240, i32 0, i32 2, !dbg !12929
  %241 = load i16, i16* %bios_ctrl387, align 2, !dbg !12929
  %conv388 = zext i16 %241 to i32, !dbg !12927
  %and389 = and i32 %conv388, 512, !dbg !12930
  %tobool390 = icmp ne i32 %and389, 0, !dbg !12930
  br i1 %tobool390, label %if.then391, label %if.end424, !dbg !12931

if.then391:                                       ; preds = %do.end383
  %arrayidx392 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 12, !dbg !12932
  %242 = load i16, i16* %arrayidx392, align 8, !dbg !12932
  %conv393 = zext i16 %242 to i32, !dbg !12932
  %cmp394 = icmp eq i32 %conv393, 21930, !dbg !12935
  br i1 %cmp394, label %if.then396, label %if.else, !dbg !12936

if.then396:                                       ; preds = %if.then391
  %243 = load i8*, i8** %iop_base, align 8, !dbg !12937
  %add.ptr397 = getelementptr i8, i8* %243, i64 4, !dbg !12937
  call void @writew(i16 zeroext 156, i8* %add.ptr397) #11, !dbg !12937
  %244 = load i16, i16* %wdtr_able, align 2, !dbg !12937
  %245 = load i8*, i8** %iop_base, align 8, !dbg !12937
  %add.ptr398 = getelementptr i8, i8* %245, i64 6, !dbg !12937
  call void @writew(i16 zeroext %244, i8* %add.ptr398) #11, !dbg !12937
  %246 = load i8*, i8** %iop_base, align 8, !dbg !12939
  %add.ptr399 = getelementptr i8, i8* %246, i64 4, !dbg !12939
  call void @writew(i16 zeroext 158, i8* %add.ptr399) #11, !dbg !12939
  %247 = load i16, i16* %sdtr_able, align 2, !dbg !12939
  %248 = load i8*, i8** %iop_base, align 8, !dbg !12939
  %add.ptr400 = getelementptr i8, i8* %248, i64 6, !dbg !12939
  call void @writew(i16 zeroext %247, i8* %add.ptr400) #11, !dbg !12939
  %249 = load i8*, i8** %iop_base, align 8, !dbg !12940
  %add.ptr401 = getelementptr i8, i8* %249, i64 4, !dbg !12940
  call void @writew(i16 zeroext 160, i8* %add.ptr401) #11, !dbg !12940
  %250 = load i16, i16* %tagqng_able, align 2, !dbg !12940
  %251 = load i8*, i8** %iop_base, align 8, !dbg !12940
  %add.ptr402 = getelementptr i8, i8* %251, i64 6, !dbg !12940
  call void @writew(i16 zeroext %250, i8* %add.ptr402) #11, !dbg !12940
  store i8 0, i8* %tid, align 1, !dbg !12941
  br label %for.cond403, !dbg !12943

for.cond403:                                      ; preds = %for.inc415, %if.then396
  %252 = load i8, i8* %tid, align 1, !dbg !12944
  %conv404 = zext i8 %252 to i32, !dbg !12944
  %cmp405 = icmp sle i32 %conv404, 15, !dbg !12946
  br i1 %cmp405, label %for.body407, label %for.end417, !dbg !12947

for.body407:                                      ; preds = %for.cond403
  %253 = load i8, i8* %tid, align 1, !dbg !12948
  %conv408 = zext i8 %253 to i32, !dbg !12948
  %add409 = add i32 208, %conv408, !dbg !12948
  %conv410 = trunc i32 %add409 to i16, !dbg !12948
  %254 = load i8*, i8** %iop_base, align 8, !dbg !12948
  %add.ptr411 = getelementptr i8, i8* %254, i64 4, !dbg !12948
  call void @writew(i16 zeroext %conv410, i8* %add.ptr411) #11, !dbg !12948
  %255 = load i8, i8* %tid, align 1, !dbg !12948
  %idxprom412 = zext i8 %255 to i64, !dbg !12948
  %arrayidx413 = getelementptr [16 x i8], [16 x i8]* %max_cmd, i64 0, i64 %idxprom412, !dbg !12948
  %256 = load i8, i8* %arrayidx413, align 1, !dbg !12948
  %257 = load i8*, i8** %iop_base, align 8, !dbg !12948
  %add.ptr414 = getelementptr i8, i8* %257, i64 6, !dbg !12948
  call void @writeb(i8 zeroext %256, i8* %add.ptr414) #11, !dbg !12948
  br label %for.inc415, !dbg !12950

for.inc415:                                       ; preds = %for.body407
  %258 = load i8, i8* %tid, align 1, !dbg !12951
  %inc416 = add i8 %258, 1, !dbg !12951
  store i8 %inc416, i8* %tid, align 1, !dbg !12951
  br label %for.cond403, !dbg !12952, !llvm.loop !12953

for.end417:                                       ; preds = %for.cond403
  br label %if.end423, !dbg !12955

if.else:                                          ; preds = %if.then391
  %259 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !12956
  %call418 = call i32 @AdvResetSB(%struct.adv_dvc_var* %259) #11, !dbg !12959
  %cmp419 = icmp ne i32 %call418, 1, !dbg !12960
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !12961

if.then421:                                       ; preds = %if.else
  store i16 1, i16* %warn_code, align 2, !dbg !12962
  br label %if.end422, !dbg !12964

if.end422:                                        ; preds = %if.then421, %if.else
  br label %if.end423

if.end423:                                        ; preds = %if.end422, %for.end417
  br label %if.end424, !dbg !12965

if.end424:                                        ; preds = %if.end423, %do.end383
  %260 = load i16, i16* %warn_code, align 2, !dbg !12966
  %conv425 = zext i16 %260 to i32, !dbg !12966
  store i32 %conv425, i32* %retval, align 4, !dbg !12967
  br label %return, !dbg !12967

return:                                           ; preds = %if.end424, %if.then358, %if.then338, %if.then270, %if.then261, %if.then144, %if.then112, %if.then105, %if.then99, %if.then75, %if.then60, %if.then5, %if.then
  %261 = load i32, i32* %retval, align 4, !dbg !12968
  ret i32 %261, !dbg !12968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitAsc3550Driver(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !12969 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %fw = alloca %struct.firmware*, align 8
  %fwname = alloca [18 x i8], align 16
  %iop_base = alloca i8*, align 8
  %warn_code = alloca i16, align 2
  %begin_addr = alloca i32, align 4
  %end_addr = alloca i32, align 4
  %code_sum = alloca i16, align 2
  %word = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %chksum = alloca i64, align 8
  %scsi_cfg1 = alloca i16, align 2
  %tid = alloca i8, align 1
  %bios_mem = alloca [40 x i16], align 16
  %wdtr_able = alloca i16, align 2
  %sdtr_able = alloca i16, align 2
  %tagqng_able = alloca i16, align 2
  %max_cmd = alloca [16 x i8], align 16
  %bios_version = alloca i16, align 2
  %major = alloca i16, align 2
  %minor = alloca i16, align 2
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !12970, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !12972, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.declare(metadata [18 x i8]* %fwname, metadata !12974, metadata !DIExpression()), !dbg !12978
  %0 = bitcast [18 x i8]* %fwname to i8*, !dbg !12978
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([18 x i8], [18 x i8]* @__const.AdvInitAsc3550Driver.fwname, i32 0, i32 0), i64 18, i1 false), !dbg !12978
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !12979, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !12981, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.declare(metadata i32* %begin_addr, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.declare(metadata i32* %end_addr, metadata !12985, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.declare(metadata i16* %code_sum, metadata !12987, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.declare(metadata i32* %word, metadata !12989, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12991, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12993, metadata !DIExpression()), !dbg !12994
  call void @llvm.dbg.declare(metadata i64* %chksum, metadata !12995, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.declare(metadata i16* %scsi_cfg1, metadata !12997, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.declare(metadata i8* %tid, metadata !12999, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.declare(metadata [40 x i16]* %bios_mem, metadata !13001, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.declare(metadata i16* %wdtr_able, metadata !13003, metadata !DIExpression()), !dbg !13004
  store i16 0, i16* %wdtr_able, align 2, !dbg !13004
  call void @llvm.dbg.declare(metadata i16* %sdtr_able, metadata !13005, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.declare(metadata i16* %tagqng_able, metadata !13007, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.declare(metadata [16 x i8]* %max_cmd, metadata !13009, metadata !DIExpression()), !dbg !13010
  %1 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13011
  %err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %1, i32 0, i32 1, !dbg !13013
  %2 = load i16, i16* %err_code, align 8, !dbg !13013
  %conv = zext i16 %2 to i32, !dbg !13011
  %cmp = icmp ne i32 %conv, 0, !dbg !13014
  br i1 %cmp, label %if.then, label %if.end, !dbg !13015

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13016
  br label %return, !dbg !13016

if.end:                                           ; preds = %entry
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13017
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 20, !dbg !13019
  %4 = load i8, i8* %chip_type, align 1, !dbg !13019
  %conv2 = zext i8 %4 to i32, !dbg !13017
  %cmp3 = icmp ne i32 %conv2, 1, !dbg !13020
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !13021

if.then5:                                         ; preds = %if.end
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13022
  %err_code6 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 1, !dbg !13024
  store i16 8192, i16* %err_code6, align 8, !dbg !13025
  store i32 -1, i32* %retval, align 4, !dbg !13026
  br label %return, !dbg !13026

if.end7:                                          ; preds = %if.end
  store i16 0, i16* %warn_code, align 2, !dbg !13027
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13028
  %iop_base8 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 0, !dbg !13029
  %7 = load i8*, i8** %iop_base8, align 8, !dbg !13029
  store i8* %7, i8** %iop_base, align 8, !dbg !13030
  store i32 0, i32* %i, align 4, !dbg !13031
  br label %for.cond, !dbg !13033

for.cond:                                         ; preds = %for.inc, %if.end7
  %8 = load i32, i32* %i, align 4, !dbg !13034
  %cmp9 = icmp slt i32 %8, 40, !dbg !13036
  br i1 %cmp9, label %for.body, label %for.end, !dbg !13037

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !13038

do.body:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !13040
  %mul = mul i32 2, %9, !dbg !13040
  %add = add i32 64, %mul, !dbg !13040
  %conv11 = trunc i32 %add to i16, !dbg !13040
  %10 = load i8*, i8** %iop_base, align 8, !dbg !13040
  %add.ptr = getelementptr i8, i8* %10, i64 4, !dbg !13040
  call void @writew(i16 zeroext %conv11, i8* %add.ptr) #11, !dbg !13040
  %11 = load i8*, i8** %iop_base, align 8, !dbg !13040
  %add.ptr12 = getelementptr i8, i8* %11, i64 6, !dbg !13040
  %call = call zeroext i16 @readw(i8* %add.ptr12) #11, !dbg !13040
  %12 = load i32, i32* %i, align 4, !dbg !13040
  %idxprom = sext i32 %12 to i64, !dbg !13040
  %arrayidx = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 %idxprom, !dbg !13040
  store i16 %call, i16* %arrayidx, align 2, !dbg !13040
  br label %do.end, !dbg !13040

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !13042

for.inc:                                          ; preds = %do.end
  %13 = load i32, i32* %i, align 4, !dbg !13043
  %inc = add i32 %13, 1, !dbg !13043
  store i32 %inc, i32* %i, align 4, !dbg !13043
  br label %for.cond, !dbg !13044, !llvm.loop !13045

for.end:                                          ; preds = %for.cond
  %arrayidx13 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 12, !dbg !13047
  %14 = load i16, i16* %arrayidx13, align 8, !dbg !13047
  %conv14 = zext i16 %14 to i32, !dbg !13047
  %cmp15 = icmp eq i32 %conv14, 21930, !dbg !13049
  br i1 %cmp15, label %if.then17, label %if.end46, !dbg !13050

if.then17:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i16* %bios_version, metadata !13051, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.declare(metadata i16* %major, metadata !13054, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.declare(metadata i16* %minor, metadata !13056, metadata !DIExpression()), !dbg !13057
  %arrayidx18 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 13, !dbg !13058
  %15 = load i16, i16* %arrayidx18, align 2, !dbg !13058
  store i16 %15, i16* %bios_version, align 2, !dbg !13059
  %16 = load i16, i16* %bios_version, align 2, !dbg !13060
  %conv19 = zext i16 %16 to i32, !dbg !13060
  %shr = ashr i32 %conv19, 12, !dbg !13061
  %and = and i32 %shr, 15, !dbg !13062
  %conv20 = trunc i32 %and to i16, !dbg !13063
  store i16 %conv20, i16* %major, align 2, !dbg !13064
  %17 = load i16, i16* %bios_version, align 2, !dbg !13065
  %conv21 = zext i16 %17 to i32, !dbg !13065
  %shr22 = ashr i32 %conv21, 8, !dbg !13066
  %and23 = and i32 %shr22, 15, !dbg !13067
  %conv24 = trunc i32 %and23 to i16, !dbg !13068
  store i16 %conv24, i16* %minor, align 2, !dbg !13069
  %18 = load i16, i16* %major, align 2, !dbg !13070
  %conv25 = zext i16 %18 to i32, !dbg !13070
  %cmp26 = icmp slt i32 %conv25, 3, !dbg !13072
  br i1 %cmp26, label %if.then34, label %lor.lhs.false, !dbg !13073

lor.lhs.false:                                    ; preds = %if.then17
  %19 = load i16, i16* %major, align 2, !dbg !13074
  %conv28 = zext i16 %19 to i32, !dbg !13074
  %cmp29 = icmp eq i32 %conv28, 3, !dbg !13075
  br i1 %cmp29, label %land.lhs.true, label %if.else, !dbg !13076

land.lhs.true:                                    ; preds = %lor.lhs.false
  %20 = load i16, i16* %minor, align 2, !dbg !13077
  %conv31 = zext i16 %20 to i32, !dbg !13077
  %cmp32 = icmp eq i32 %conv31, 1, !dbg !13078
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !13079

if.then34:                                        ; preds = %land.lhs.true, %if.then17
  br label %do.body35, !dbg !13080

do.body35:                                        ; preds = %if.then34
  %21 = load i8*, i8** %iop_base, align 8, !dbg !13082
  %add.ptr36 = getelementptr i8, i8* %21, i64 4, !dbg !13082
  call void @writew(i16 zeroext 288, i8* %add.ptr36) #11, !dbg !13082
  %22 = load i8*, i8** %iop_base, align 8, !dbg !13082
  %add.ptr37 = getelementptr i8, i8* %22, i64 6, !dbg !13082
  %call38 = call zeroext i16 @readw(i8* %add.ptr37) #11, !dbg !13082
  store i16 %call38, i16* %wdtr_able, align 2, !dbg !13082
  br label %do.end39, !dbg !13082

do.end39:                                         ; preds = %do.body35
  br label %if.end45, !dbg !13084

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %do.body40, !dbg !13085

do.body40:                                        ; preds = %if.else
  %23 = load i8*, i8** %iop_base, align 8, !dbg !13087
  %add.ptr41 = getelementptr i8, i8* %23, i64 4, !dbg !13087
  call void @writew(i16 zeroext 156, i8* %add.ptr41) #11, !dbg !13087
  %24 = load i8*, i8** %iop_base, align 8, !dbg !13087
  %add.ptr42 = getelementptr i8, i8* %24, i64 6, !dbg !13087
  %call43 = call zeroext i16 @readw(i8* %add.ptr42) #11, !dbg !13087
  store i16 %call43, i16* %wdtr_able, align 2, !dbg !13087
  br label %do.end44, !dbg !13087

do.end44:                                         ; preds = %do.body40
  br label %if.end45

if.end45:                                         ; preds = %do.end44, %do.end39
  br label %if.end46, !dbg !13089

if.end46:                                         ; preds = %if.end45, %for.end
  br label %do.body47, !dbg !13090

do.body47:                                        ; preds = %if.end46
  %25 = load i8*, i8** %iop_base, align 8, !dbg !13091
  %add.ptr48 = getelementptr i8, i8* %25, i64 4, !dbg !13091
  call void @writew(i16 zeroext 158, i8* %add.ptr48) #11, !dbg !13091
  %26 = load i8*, i8** %iop_base, align 8, !dbg !13091
  %add.ptr49 = getelementptr i8, i8* %26, i64 6, !dbg !13091
  %call50 = call zeroext i16 @readw(i8* %add.ptr49) #11, !dbg !13091
  store i16 %call50, i16* %sdtr_able, align 2, !dbg !13091
  br label %do.end51, !dbg !13091

do.end51:                                         ; preds = %do.body47
  br label %do.body52, !dbg !13093

do.body52:                                        ; preds = %do.end51
  %27 = load i8*, i8** %iop_base, align 8, !dbg !13094
  %add.ptr53 = getelementptr i8, i8* %27, i64 4, !dbg !13094
  call void @writew(i16 zeroext 160, i8* %add.ptr53) #11, !dbg !13094
  %28 = load i8*, i8** %iop_base, align 8, !dbg !13094
  %add.ptr54 = getelementptr i8, i8* %28, i64 6, !dbg !13094
  %call55 = call zeroext i16 @readw(i8* %add.ptr54) #11, !dbg !13094
  store i16 %call55, i16* %tagqng_able, align 2, !dbg !13094
  br label %do.end56, !dbg !13094

do.end56:                                         ; preds = %do.body52
  store i8 0, i8* %tid, align 1, !dbg !13096
  br label %for.cond57, !dbg !13098

for.cond57:                                       ; preds = %for.inc72, %do.end56
  %29 = load i8, i8* %tid, align 1, !dbg !13099
  %conv58 = zext i8 %29 to i32, !dbg !13099
  %cmp59 = icmp sle i32 %conv58, 15, !dbg !13101
  br i1 %cmp59, label %for.body61, label %for.end74, !dbg !13102

for.body61:                                       ; preds = %for.cond57
  br label %do.body62, !dbg !13103

do.body62:                                        ; preds = %for.body61
  %30 = load i8, i8* %tid, align 1, !dbg !13105
  %conv63 = zext i8 %30 to i32, !dbg !13105
  %add64 = add i32 208, %conv63, !dbg !13105
  %conv65 = trunc i32 %add64 to i16, !dbg !13105
  %31 = load i8*, i8** %iop_base, align 8, !dbg !13105
  %add.ptr66 = getelementptr i8, i8* %31, i64 4, !dbg !13105
  call void @writew(i16 zeroext %conv65, i8* %add.ptr66) #11, !dbg !13105
  %32 = load i8*, i8** %iop_base, align 8, !dbg !13105
  %add.ptr67 = getelementptr i8, i8* %32, i64 6, !dbg !13105
  %call68 = call zeroext i8 @readb(i8* %add.ptr67) #11, !dbg !13105
  %33 = load i8, i8* %tid, align 1, !dbg !13105
  %idxprom69 = zext i8 %33 to i64, !dbg !13105
  %arrayidx70 = getelementptr [16 x i8], [16 x i8]* %max_cmd, i64 0, i64 %idxprom69, !dbg !13105
  store i8 %call68, i8* %arrayidx70, align 1, !dbg !13105
  br label %do.end71, !dbg !13105

do.end71:                                         ; preds = %do.body62
  br label %for.inc72, !dbg !13107

for.inc72:                                        ; preds = %do.end71
  %34 = load i8, i8* %tid, align 1, !dbg !13108
  %inc73 = add i8 %34, 1, !dbg !13108
  store i8 %inc73, i8* %tid, align 1, !dbg !13108
  br label %for.cond57, !dbg !13109, !llvm.loop !13110

for.end74:                                        ; preds = %for.cond57
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %fwname, i64 0, i64 0, !dbg !13112
  %35 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13113
  %drv_ptr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %35, i32 0, i32 18, !dbg !13114
  %36 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !13114
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %36, i32 0, i32 0, !dbg !13115
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13115
  %call75 = call i32 @request_firmware(%struct.firmware** %fw, i8* %arraydecay, %struct.device* %37) #11, !dbg !13116
  store i32 %call75, i32* %err, align 4, !dbg !13117
  %38 = load i32, i32* %err, align 4, !dbg !13118
  %tobool = icmp ne i32 %38, 0, !dbg !13118
  br i1 %tobool, label %if.then76, label %if.end80, !dbg !13120

if.then76:                                        ; preds = %for.end74
  %arraydecay77 = getelementptr inbounds [18 x i8], [18 x i8]* %fwname, i64 0, i64 0, !dbg !13121
  %39 = load i32, i32* %err, align 4, !dbg !13123
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0), i8* %arraydecay77, i32 %39) #12, !dbg !13124
  %40 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13125
  %err_code79 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %40, i32 0, i32 1, !dbg !13126
  store i16 2, i16* %err_code79, align 8, !dbg !13127
  %41 = load i32, i32* %err, align 4, !dbg !13128
  store i32 %41, i32* %retval, align 4, !dbg !13129
  br label %return, !dbg !13129

if.end80:                                         ; preds = %for.end74
  %42 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13130
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %42, i32 0, i32 0, !dbg !13132
  %43 = load i64, i64* %size, align 8, !dbg !13132
  %cmp81 = icmp ult i64 %43, 4, !dbg !13133
  br i1 %cmp81, label %if.then83, label %if.end88, !dbg !13134

if.then83:                                        ; preds = %if.end80
  %44 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13135
  %size84 = getelementptr inbounds %struct.firmware, %struct.firmware* %44, i32 0, i32 0, !dbg !13137
  %45 = load i64, i64* %size84, align 8, !dbg !13137
  %arraydecay85 = getelementptr inbounds [18 x i8], [18 x i8]* %fwname, i64 0, i64 0, !dbg !13138
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i64 %45, i8* %arraydecay85) #12, !dbg !13139
  %46 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13140
  call void @release_firmware(%struct.firmware* %46) #11, !dbg !13141
  %47 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13142
  %err_code87 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %47, i32 0, i32 1, !dbg !13143
  store i16 2, i16* %err_code87, align 8, !dbg !13144
  store i32 -22, i32* %retval, align 4, !dbg !13145
  br label %return, !dbg !13145

if.end88:                                         ; preds = %if.end80
  %48 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13146
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %48, i32 0, i32 1, !dbg !13147
  %49 = load i8*, i8** %data, align 8, !dbg !13147
  %arrayidx89 = getelementptr i8, i8* %49, i64 3, !dbg !13146
  %50 = load i8, i8* %arrayidx89, align 1, !dbg !13146
  %conv90 = zext i8 %50 to i32, !dbg !13146
  %shl = shl i32 %conv90, 24, !dbg !13148
  %51 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13149
  %data91 = getelementptr inbounds %struct.firmware, %struct.firmware* %51, i32 0, i32 1, !dbg !13150
  %52 = load i8*, i8** %data91, align 8, !dbg !13150
  %arrayidx92 = getelementptr i8, i8* %52, i64 2, !dbg !13149
  %53 = load i8, i8* %arrayidx92, align 1, !dbg !13149
  %conv93 = zext i8 %53 to i32, !dbg !13149
  %shl94 = shl i32 %conv93, 16, !dbg !13151
  %or = or i32 %shl, %shl94, !dbg !13152
  %54 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13153
  %data95 = getelementptr inbounds %struct.firmware, %struct.firmware* %54, i32 0, i32 1, !dbg !13154
  %55 = load i8*, i8** %data95, align 8, !dbg !13154
  %arrayidx96 = getelementptr i8, i8* %55, i64 1, !dbg !13153
  %56 = load i8, i8* %arrayidx96, align 1, !dbg !13153
  %conv97 = zext i8 %56 to i32, !dbg !13153
  %shl98 = shl i32 %conv97, 8, !dbg !13155
  %or99 = or i32 %or, %shl98, !dbg !13156
  %57 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13157
  %data100 = getelementptr inbounds %struct.firmware, %struct.firmware* %57, i32 0, i32 1, !dbg !13158
  %58 = load i8*, i8** %data100, align 8, !dbg !13158
  %arrayidx101 = getelementptr i8, i8* %58, i64 0, !dbg !13157
  %59 = load i8, i8* %arrayidx101, align 1, !dbg !13157
  %conv102 = zext i8 %59 to i32, !dbg !13157
  %or103 = or i32 %or99, %conv102, !dbg !13159
  %conv104 = sext i32 %or103 to i64, !dbg !13160
  store i64 %conv104, i64* %chksum, align 8, !dbg !13161
  %60 = load i8*, i8** %iop_base, align 8, !dbg !13162
  %61 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13163
  %data105 = getelementptr inbounds %struct.firmware, %struct.firmware* %61, i32 0, i32 1, !dbg !13164
  %62 = load i8*, i8** %data105, align 8, !dbg !13164
  %arrayidx106 = getelementptr i8, i8* %62, i64 4, !dbg !13163
  %63 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13165
  %size107 = getelementptr inbounds %struct.firmware, %struct.firmware* %63, i32 0, i32 0, !dbg !13166
  %64 = load i64, i64* %size107, align 8, !dbg !13166
  %sub = sub i64 %64, 4, !dbg !13167
  %conv108 = trunc i64 %sub to i32, !dbg !13165
  %65 = load i64, i64* %chksum, align 8, !dbg !13168
  %conv109 = trunc i64 %65 to i32, !dbg !13168
  %call110 = call i32 @AdvLoadMicrocode(i8* %60, i8* %arrayidx106, i32 %conv108, i32 8192, i32 %conv109) #11, !dbg !13169
  %conv111 = trunc i32 %call110 to i16, !dbg !13169
  %66 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13170
  %err_code112 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %66, i32 0, i32 1, !dbg !13171
  store i16 %conv111, i16* %err_code112, align 8, !dbg !13172
  %67 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !13173
  call void @release_firmware(%struct.firmware* %67) #11, !dbg !13174
  %68 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13175
  %err_code113 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %68, i32 0, i32 1, !dbg !13177
  %69 = load i16, i16* %err_code113, align 8, !dbg !13177
  %tobool114 = icmp ne i16 %69, 0, !dbg !13175
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !13178

if.then115:                                       ; preds = %if.end88
  store i32 -1, i32* %retval, align 4, !dbg !13179
  br label %return, !dbg !13179

if.end116:                                        ; preds = %if.end88
  store i32 0, i32* %i, align 4, !dbg !13180
  br label %for.cond117, !dbg !13182

for.cond117:                                      ; preds = %for.inc128, %if.end116
  %70 = load i32, i32* %i, align 4, !dbg !13183
  %cmp118 = icmp slt i32 %70, 40, !dbg !13185
  br i1 %cmp118, label %for.body120, label %for.end130, !dbg !13186

for.body120:                                      ; preds = %for.cond117
  %71 = load i32, i32* %i, align 4, !dbg !13187
  %mul121 = mul i32 2, %71, !dbg !13187
  %add122 = add i32 64, %mul121, !dbg !13187
  %conv123 = trunc i32 %add122 to i16, !dbg !13187
  %72 = load i8*, i8** %iop_base, align 8, !dbg !13187
  %add.ptr124 = getelementptr i8, i8* %72, i64 4, !dbg !13187
  call void @writew(i16 zeroext %conv123, i8* %add.ptr124) #11, !dbg !13187
  %73 = load i32, i32* %i, align 4, !dbg !13187
  %idxprom125 = sext i32 %73 to i64, !dbg !13187
  %arrayidx126 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 %idxprom125, !dbg !13187
  %74 = load i16, i16* %arrayidx126, align 2, !dbg !13187
  %75 = load i8*, i8** %iop_base, align 8, !dbg !13187
  %add.ptr127 = getelementptr i8, i8* %75, i64 6, !dbg !13187
  call void @writew(i16 zeroext %74, i8* %add.ptr127) #11, !dbg !13187
  br label %for.inc128, !dbg !13189

for.inc128:                                       ; preds = %for.body120
  %76 = load i32, i32* %i, align 4, !dbg !13190
  %inc129 = add i32 %76, 1, !dbg !13190
  store i32 %inc129, i32* %i, align 4, !dbg !13190
  br label %for.cond117, !dbg !13191, !llvm.loop !13192

for.end130:                                       ; preds = %for.cond117
  br label %do.body131, !dbg !13194

do.body131:                                       ; preds = %for.end130
  %77 = load i8*, i8** %iop_base, align 8, !dbg !13195
  %add.ptr132 = getelementptr i8, i8* %77, i64 4, !dbg !13195
  call void @writew(i16 zeroext 40, i8* %add.ptr132) #11, !dbg !13195
  %78 = load i8*, i8** %iop_base, align 8, !dbg !13195
  %add.ptr133 = getelementptr i8, i8* %78, i64 6, !dbg !13195
  %call134 = call zeroext i16 @readw(i8* %add.ptr133) #11, !dbg !13195
  %conv135 = zext i16 %call134 to i32, !dbg !13195
  store i32 %conv135, i32* %begin_addr, align 4, !dbg !13195
  br label %do.end136, !dbg !13195

do.end136:                                        ; preds = %do.body131
  br label %do.body137, !dbg !13197

do.body137:                                       ; preds = %do.end136
  %79 = load i8*, i8** %iop_base, align 8, !dbg !13198
  %add.ptr138 = getelementptr i8, i8* %79, i64 4, !dbg !13198
  call void @writew(i16 zeroext 42, i8* %add.ptr138) #11, !dbg !13198
  %80 = load i8*, i8** %iop_base, align 8, !dbg !13198
  %add.ptr139 = getelementptr i8, i8* %80, i64 6, !dbg !13198
  %call140 = call zeroext i16 @readw(i8* %add.ptr139) #11, !dbg !13198
  %conv141 = zext i16 %call140 to i32, !dbg !13198
  store i32 %conv141, i32* %end_addr, align 4, !dbg !13198
  br label %do.end142, !dbg !13198

do.end142:                                        ; preds = %do.body137
  store i16 0, i16* %code_sum, align 2, !dbg !13200
  %81 = load i32, i32* %begin_addr, align 4, !dbg !13201
  %conv143 = trunc i32 %81 to i16, !dbg !13201
  %82 = load i8*, i8** %iop_base, align 8, !dbg !13201
  %add.ptr144 = getelementptr i8, i8* %82, i64 4, !dbg !13201
  call void @writew(i16 zeroext %conv143, i8* %add.ptr144) #11, !dbg !13201
  %83 = load i32, i32* %begin_addr, align 4, !dbg !13202
  store i32 %83, i32* %word, align 4, !dbg !13204
  br label %for.cond145, !dbg !13205

for.cond145:                                      ; preds = %for.inc155, %do.end142
  %84 = load i32, i32* %word, align 4, !dbg !13206
  %85 = load i32, i32* %end_addr, align 4, !dbg !13208
  %cmp146 = icmp slt i32 %84, %85, !dbg !13209
  br i1 %cmp146, label %for.body148, label %for.end157, !dbg !13210

for.body148:                                      ; preds = %for.cond145
  %86 = load i8*, i8** %iop_base, align 8, !dbg !13211
  %add.ptr149 = getelementptr i8, i8* %86, i64 6, !dbg !13211
  %call150 = call zeroext i16 @readw(i8* %add.ptr149) #11, !dbg !13211
  %conv151 = zext i16 %call150 to i32, !dbg !13211
  %87 = load i16, i16* %code_sum, align 2, !dbg !13213
  %conv152 = zext i16 %87 to i32, !dbg !13213
  %add153 = add i32 %conv152, %conv151, !dbg !13213
  %conv154 = trunc i32 %add153 to i16, !dbg !13213
  store i16 %conv154, i16* %code_sum, align 2, !dbg !13213
  br label %for.inc155, !dbg !13214

for.inc155:                                       ; preds = %for.body148
  %88 = load i32, i32* %word, align 4, !dbg !13215
  %add156 = add i32 %88, 2, !dbg !13215
  store i32 %add156, i32* %word, align 4, !dbg !13215
  br label %for.cond145, !dbg !13216, !llvm.loop !13217

for.end157:                                       ; preds = %for.cond145
  %89 = load i8*, i8** %iop_base, align 8, !dbg !13219
  %add.ptr158 = getelementptr i8, i8* %89, i64 4, !dbg !13219
  call void @writew(i16 zeroext 44, i8* %add.ptr158) #11, !dbg !13219
  %90 = load i16, i16* %code_sum, align 2, !dbg !13219
  %91 = load i8*, i8** %iop_base, align 8, !dbg !13219
  %add.ptr159 = getelementptr i8, i8* %91, i64 6, !dbg !13219
  call void @writew(i16 zeroext %90, i8* %add.ptr159) #11, !dbg !13219
  br label %do.body160, !dbg !13220

do.body160:                                       ; preds = %for.end157
  %92 = load i8*, i8** %iop_base, align 8, !dbg !13221
  %add.ptr161 = getelementptr i8, i8* %92, i64 4, !dbg !13221
  call void @writew(i16 zeroext 56, i8* %add.ptr161) #11, !dbg !13221
  %93 = load i8*, i8** %iop_base, align 8, !dbg !13221
  %add.ptr162 = getelementptr i8, i8* %93, i64 6, !dbg !13221
  %call163 = call zeroext i16 @readw(i8* %add.ptr162) #11, !dbg !13221
  %94 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13221
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %94, i32 0, i32 28, !dbg !13221
  %95 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !13221
  %mcode_date = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %95, i32 0, i32 4, !dbg !13221
  store i16 %call163, i16* %mcode_date, align 2, !dbg !13221
  br label %do.end164, !dbg !13221

do.end164:                                        ; preds = %do.body160
  br label %do.body165, !dbg !13223

do.body165:                                       ; preds = %do.end164
  %96 = load i8*, i8** %iop_base, align 8, !dbg !13224
  %add.ptr166 = getelementptr i8, i8* %96, i64 4, !dbg !13224
  call void @writew(i16 zeroext 58, i8* %add.ptr166) #11, !dbg !13224
  %97 = load i8*, i8** %iop_base, align 8, !dbg !13224
  %add.ptr167 = getelementptr i8, i8* %97, i64 6, !dbg !13224
  %call168 = call zeroext i16 @readw(i8* %add.ptr167) #11, !dbg !13224
  %98 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13224
  %cfg169 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %98, i32 0, i32 28, !dbg !13224
  %99 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg169, align 8, !dbg !13224
  %mcode_version = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %99, i32 0, i32 5, !dbg !13224
  store i16 %call168, i16* %mcode_version, align 2, !dbg !13224
  br label %do.end170, !dbg !13224

do.end170:                                        ; preds = %do.body165
  %100 = load i8*, i8** %iop_base, align 8, !dbg !13226
  %add.ptr171 = getelementptr i8, i8* %100, i64 4, !dbg !13226
  call void @writew(i16 zeroext 154, i8* %add.ptr171) #11, !dbg !13226
  %101 = load i8*, i8** %iop_base, align 8, !dbg !13226
  %add.ptr172 = getelementptr i8, i8* %101, i64 6, !dbg !13226
  call void @writew(i16 zeroext 1, i8* %add.ptr172) #11, !dbg !13226
  %102 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13227
  %cfg173 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %102, i32 0, i32 28, !dbg !13229
  %103 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg173, align 8, !dbg !13229
  %control_flag = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %103, i32 0, i32 3, !dbg !13230
  %104 = load i16, i16* %control_flag, align 2, !dbg !13230
  %conv174 = zext i16 %104 to i32, !dbg !13227
  %and175 = and i32 %conv174, 1, !dbg !13231
  %tobool176 = icmp ne i32 %and175, 0, !dbg !13231
  br i1 %tobool176, label %if.then177, label %if.end188, !dbg !13232

if.then177:                                       ; preds = %do.end170
  br label %do.body178, !dbg !13233

do.body178:                                       ; preds = %if.then177
  %105 = load i8*, i8** %iop_base, align 8, !dbg !13235
  %add.ptr179 = getelementptr i8, i8* %105, i64 4, !dbg !13235
  call void @writew(i16 zeroext 290, i8* %add.ptr179) #11, !dbg !13235
  %106 = load i8*, i8** %iop_base, align 8, !dbg !13235
  %add.ptr180 = getelementptr i8, i8* %106, i64 6, !dbg !13235
  %call181 = call zeroext i16 @readw(i8* %add.ptr180) #11, !dbg !13235
  %conv182 = zext i16 %call181 to i32, !dbg !13235
  store i32 %conv182, i32* %word, align 4, !dbg !13235
  br label %do.end183, !dbg !13235

do.end183:                                        ; preds = %do.body178
  %107 = load i32, i32* %word, align 4, !dbg !13237
  %or184 = or i32 %107, 1, !dbg !13237
  store i32 %or184, i32* %word, align 4, !dbg !13237
  %108 = load i8*, i8** %iop_base, align 8, !dbg !13238
  %add.ptr185 = getelementptr i8, i8* %108, i64 4, !dbg !13238
  call void @writew(i16 zeroext 290, i8* %add.ptr185) #11, !dbg !13238
  %109 = load i32, i32* %word, align 4, !dbg !13238
  %conv186 = trunc i32 %109 to i16, !dbg !13238
  %110 = load i8*, i8** %iop_base, align 8, !dbg !13238
  %add.ptr187 = getelementptr i8, i8* %110, i64 6, !dbg !13238
  call void @writew(i16 zeroext %conv186, i8* %add.ptr187) #11, !dbg !13238
  br label %if.end188, !dbg !13239

if.end188:                                        ; preds = %do.end183, %do.end170
  %111 = load i8*, i8** %iop_base, align 8, !dbg !13240
  %add.ptr189 = getelementptr i8, i8* %111, i64 32, !dbg !13240
  call void @writeb(i8 zeroext 15, i8* %add.ptr189) #11, !dbg !13240
  %112 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13241
  %bios_ctrl = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %112, i32 0, i32 2, !dbg !13243
  %113 = load i16, i16* %bios_ctrl, align 2, !dbg !13243
  %conv190 = zext i16 %113 to i32, !dbg !13241
  %and191 = and i32 %conv190, 512, !dbg !13244
  %cmp192 = icmp eq i32 %and191, 0, !dbg !13245
  br i1 %cmp192, label %if.then194, label %if.end201, !dbg !13246

if.then194:                                       ; preds = %if.end188
  %114 = load i8*, i8** %iop_base, align 8, !dbg !13247
  %add.ptr195 = getelementptr i8, i8* %114, i64 4, !dbg !13247
  call void @writew(i16 zeroext 156, i8* %add.ptr195) #11, !dbg !13247
  %115 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13247
  %wdtr_able196 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %115, i32 0, i32 3, !dbg !13247
  %116 = load i16, i16* %wdtr_able196, align 4, !dbg !13247
  %117 = load i8*, i8** %iop_base, align 8, !dbg !13247
  %add.ptr197 = getelementptr i8, i8* %117, i64 6, !dbg !13247
  call void @writew(i16 zeroext %116, i8* %add.ptr197) #11, !dbg !13247
  %118 = load i8*, i8** %iop_base, align 8, !dbg !13249
  %add.ptr198 = getelementptr i8, i8* %118, i64 4, !dbg !13249
  call void @writew(i16 zeroext 158, i8* %add.ptr198) #11, !dbg !13249
  %119 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13249
  %sdtr_able199 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %119, i32 0, i32 4, !dbg !13249
  %120 = load i16, i16* %sdtr_able199, align 2, !dbg !13249
  %121 = load i8*, i8** %iop_base, align 8, !dbg !13249
  %add.ptr200 = getelementptr i8, i8* %121, i64 6, !dbg !13249
  call void @writew(i16 zeroext %120, i8* %add.ptr200) #11, !dbg !13249
  br label %if.end201, !dbg !13250

if.end201:                                        ; preds = %if.then194, %if.end188
  store i32 0, i32* %word, align 4, !dbg !13251
  store i8 0, i8* %tid, align 1, !dbg !13252
  br label %for.cond202, !dbg !13254

for.cond202:                                      ; preds = %for.inc260, %if.end201
  %122 = load i8, i8* %tid, align 1, !dbg !13255
  %conv203 = zext i8 %122 to i32, !dbg !13255
  %cmp204 = icmp sle i32 %conv203, 15, !dbg !13257
  br i1 %cmp204, label %for.body206, label %for.end262, !dbg !13258

for.body206:                                      ; preds = %for.cond202
  %123 = load i8, i8* %tid, align 1, !dbg !13259
  %conv207 = zext i8 %123 to i32, !dbg !13259
  %and208 = and i32 %conv207, 15, !dbg !13259
  %shl209 = shl i32 1, %and208, !dbg !13259
  %124 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13262
  %ultra_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %124, i32 0, i32 5, !dbg !13263
  %125 = load i16, i16* %ultra_able, align 8, !dbg !13263
  %conv210 = zext i16 %125 to i32, !dbg !13262
  %and211 = and i32 %shl209, %conv210, !dbg !13264
  %tobool212 = icmp ne i32 %and211, 0, !dbg !13264
  br i1 %tobool212, label %if.then213, label %if.else218, !dbg !13265

if.then213:                                       ; preds = %for.body206
  %126 = load i8, i8* %tid, align 1, !dbg !13266
  %conv214 = zext i8 %126 to i32, !dbg !13266
  %rem = srem i32 %conv214, 4, !dbg !13268
  %mul215 = mul i32 4, %rem, !dbg !13269
  %shl216 = shl i32 3, %mul215, !dbg !13270
  %127 = load i32, i32* %word, align 4, !dbg !13271
  %or217 = or i32 %127, %shl216, !dbg !13271
  store i32 %or217, i32* %word, align 4, !dbg !13271
  br label %if.end224, !dbg !13272

if.else218:                                       ; preds = %for.body206
  %128 = load i8, i8* %tid, align 1, !dbg !13273
  %conv219 = zext i8 %128 to i32, !dbg !13273
  %rem220 = srem i32 %conv219, 4, !dbg !13275
  %mul221 = mul i32 4, %rem220, !dbg !13276
  %shl222 = shl i32 2, %mul221, !dbg !13277
  %129 = load i32, i32* %word, align 4, !dbg !13278
  %or223 = or i32 %129, %shl222, !dbg !13278
  store i32 %or223, i32* %word, align 4, !dbg !13278
  br label %if.end224

if.end224:                                        ; preds = %if.else218, %if.then213
  %130 = load i8, i8* %tid, align 1, !dbg !13279
  %conv225 = zext i8 %130 to i32, !dbg !13279
  %cmp226 = icmp eq i32 %conv225, 3, !dbg !13281
  br i1 %cmp226, label %if.then228, label %if.else232, !dbg !13282

if.then228:                                       ; preds = %if.end224
  %131 = load i8*, i8** %iop_base, align 8, !dbg !13283
  %add.ptr229 = getelementptr i8, i8* %131, i64 4, !dbg !13283
  call void @writew(i16 zeroext 144, i8* %add.ptr229) #11, !dbg !13283
  %132 = load i32, i32* %word, align 4, !dbg !13283
  %conv230 = trunc i32 %132 to i16, !dbg !13283
  %133 = load i8*, i8** %iop_base, align 8, !dbg !13283
  %add.ptr231 = getelementptr i8, i8* %133, i64 6, !dbg !13283
  call void @writew(i16 zeroext %conv230, i8* %add.ptr231) #11, !dbg !13283
  store i32 0, i32* %word, align 4, !dbg !13285
  br label %if.end259, !dbg !13286

if.else232:                                       ; preds = %if.end224
  %134 = load i8, i8* %tid, align 1, !dbg !13287
  %conv233 = zext i8 %134 to i32, !dbg !13287
  %cmp234 = icmp eq i32 %conv233, 7, !dbg !13289
  br i1 %cmp234, label %if.then236, label %if.else240, !dbg !13290

if.then236:                                       ; preds = %if.else232
  %135 = load i8*, i8** %iop_base, align 8, !dbg !13291
  %add.ptr237 = getelementptr i8, i8* %135, i64 4, !dbg !13291
  call void @writew(i16 zeroext 146, i8* %add.ptr237) #11, !dbg !13291
  %136 = load i32, i32* %word, align 4, !dbg !13291
  %conv238 = trunc i32 %136 to i16, !dbg !13291
  %137 = load i8*, i8** %iop_base, align 8, !dbg !13291
  %add.ptr239 = getelementptr i8, i8* %137, i64 6, !dbg !13291
  call void @writew(i16 zeroext %conv238, i8* %add.ptr239) #11, !dbg !13291
  store i32 0, i32* %word, align 4, !dbg !13293
  br label %if.end258, !dbg !13294

if.else240:                                       ; preds = %if.else232
  %138 = load i8, i8* %tid, align 1, !dbg !13295
  %conv241 = zext i8 %138 to i32, !dbg !13295
  %cmp242 = icmp eq i32 %conv241, 11, !dbg !13297
  br i1 %cmp242, label %if.then244, label %if.else248, !dbg !13298

if.then244:                                       ; preds = %if.else240
  %139 = load i8*, i8** %iop_base, align 8, !dbg !13299
  %add.ptr245 = getelementptr i8, i8* %139, i64 4, !dbg !13299
  call void @writew(i16 zeroext 148, i8* %add.ptr245) #11, !dbg !13299
  %140 = load i32, i32* %word, align 4, !dbg !13299
  %conv246 = trunc i32 %140 to i16, !dbg !13299
  %141 = load i8*, i8** %iop_base, align 8, !dbg !13299
  %add.ptr247 = getelementptr i8, i8* %141, i64 6, !dbg !13299
  call void @writew(i16 zeroext %conv246, i8* %add.ptr247) #11, !dbg !13299
  store i32 0, i32* %word, align 4, !dbg !13301
  br label %if.end257, !dbg !13302

if.else248:                                       ; preds = %if.else240
  %142 = load i8, i8* %tid, align 1, !dbg !13303
  %conv249 = zext i8 %142 to i32, !dbg !13303
  %cmp250 = icmp eq i32 %conv249, 15, !dbg !13305
  br i1 %cmp250, label %if.then252, label %if.end256, !dbg !13306

if.then252:                                       ; preds = %if.else248
  %143 = load i8*, i8** %iop_base, align 8, !dbg !13307
  %add.ptr253 = getelementptr i8, i8* %143, i64 4, !dbg !13307
  call void @writew(i16 zeroext 150, i8* %add.ptr253) #11, !dbg !13307
  %144 = load i32, i32* %word, align 4, !dbg !13307
  %conv254 = trunc i32 %144 to i16, !dbg !13307
  %145 = load i8*, i8** %iop_base, align 8, !dbg !13307
  %add.ptr255 = getelementptr i8, i8* %145, i64 6, !dbg !13307
  call void @writew(i16 zeroext %conv254, i8* %add.ptr255) #11, !dbg !13307
  br label %if.end256, !dbg !13309

if.end256:                                        ; preds = %if.then252, %if.else248
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then244
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.then236
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.then228
  br label %for.inc260, !dbg !13310

for.inc260:                                       ; preds = %if.end259
  %146 = load i8, i8* %tid, align 1, !dbg !13311
  %inc261 = add i8 %146, 1, !dbg !13311
  store i8 %inc261, i8* %tid, align 1, !dbg !13311
  br label %for.cond202, !dbg !13312, !llvm.loop !13313

for.end262:                                       ; preds = %for.cond202
  %147 = load i8*, i8** %iop_base, align 8, !dbg !13315
  %add.ptr263 = getelementptr i8, i8* %147, i64 4, !dbg !13315
  call void @writew(i16 zeroext 162, i8* %add.ptr263) #11, !dbg !13315
  %148 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13315
  %cfg264 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %148, i32 0, i32 28, !dbg !13315
  %149 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg264, align 8, !dbg !13315
  %disc_enable = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %149, i32 0, i32 0, !dbg !13315
  %150 = load i16, i16* %disc_enable, align 2, !dbg !13315
  %151 = load i8*, i8** %iop_base, align 8, !dbg !13315
  %add.ptr265 = getelementptr i8, i8* %151, i64 6, !dbg !13315
  call void @writew(i16 zeroext %150, i8* %add.ptr265) #11, !dbg !13315
  %152 = load i8*, i8** %iop_base, align 8, !dbg !13316
  %add.ptr266 = getelementptr i8, i8* %152, i64 4, !dbg !13316
  call void @writew(i16 zeroext 172, i8* %add.ptr266) #11, !dbg !13316
  %153 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13316
  %chip_scsi_id = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %153, i32 0, i32 19, !dbg !13316
  %154 = load i8, i8* %chip_scsi_id, align 8, !dbg !13316
  %conv267 = zext i8 %154 to i32, !dbg !13316
  %or268 = or i32 9296, %conv267, !dbg !13316
  %conv269 = trunc i32 %or268 to i16, !dbg !13316
  %155 = load i8*, i8** %iop_base, align 8, !dbg !13316
  %add.ptr270 = getelementptr i8, i8* %155, i64 6, !dbg !13316
  call void @writew(i16 zeroext %conv269, i8* %add.ptr270) #11, !dbg !13316
  %156 = load i8*, i8** %iop_base, align 8, !dbg !13317
  %add.ptr271 = getelementptr i8, i8* %156, i64 14, !dbg !13317
  %call272 = call zeroext i16 @readw(i8* %add.ptr271) #11, !dbg !13317
  store i16 %call272, i16* %scsi_cfg1, align 2, !dbg !13318
  %157 = load i16, i16* %scsi_cfg1, align 2, !dbg !13319
  %conv273 = zext i16 %157 to i32, !dbg !13319
  %and274 = and i32 %conv273, 7, !dbg !13321
  %cmp275 = icmp eq i32 %and274, 0, !dbg !13322
  br i1 %cmp275, label %if.then282, label %lor.lhs.false277, !dbg !13323

lor.lhs.false277:                                 ; preds = %for.end262
  %158 = load i16, i16* %scsi_cfg1, align 2, !dbg !13324
  %conv278 = zext i16 %158 to i32, !dbg !13324
  %and279 = and i32 %conv278, 11, !dbg !13325
  %cmp280 = icmp eq i32 %and279, 0, !dbg !13326
  br i1 %cmp280, label %if.then282, label %if.end287, !dbg !13327

if.then282:                                       ; preds = %lor.lhs.false277, %for.end262
  %159 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13328
  %err_code283 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %159, i32 0, i32 1, !dbg !13330
  %160 = load i16, i16* %err_code283, align 8, !dbg !13331
  %conv284 = zext i16 %160 to i32, !dbg !13331
  %or285 = or i32 %conv284, 16, !dbg !13331
  %conv286 = trunc i32 %or285 to i16, !dbg !13331
  store i16 %conv286, i16* %err_code283, align 8, !dbg !13331
  store i32 -1, i32* %retval, align 4, !dbg !13332
  br label %return, !dbg !13332

if.end287:                                        ; preds = %lor.lhs.false277
  %161 = load i8*, i8** %iop_base, align 8, !dbg !13333
  %add.ptr288 = getelementptr i8, i8* %161, i64 52, !dbg !13333
  %call289 = call zeroext i16 @readw(i8* %add.ptr288) #11, !dbg !13333
  %conv290 = zext i16 %call289 to i32, !dbg !13333
  %and291 = and i32 %conv290, 16135, !dbg !13335
  %cmp292 = icmp eq i32 %and291, 16135, !dbg !13336
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !13337

if.then294:                                       ; preds = %if.end287
  %162 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13338
  %err_code295 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %162, i32 0, i32 1, !dbg !13340
  %163 = load i16, i16* %err_code295, align 8, !dbg !13341
  %conv296 = zext i16 %163 to i32, !dbg !13341
  %or297 = or i32 %conv296, 64, !dbg !13341
  %conv298 = trunc i32 %or297 to i16, !dbg !13341
  store i16 %conv298, i16* %err_code295, align 8, !dbg !13341
  store i32 -1, i32* %retval, align 4, !dbg !13342
  br label %return, !dbg !13342

if.end299:                                        ; preds = %if.end287
  %164 = load i16, i16* %scsi_cfg1, align 2, !dbg !13343
  %conv300 = zext i16 %164 to i32, !dbg !13343
  %and301 = and i32 %conv300, 256, !dbg !13345
  %tobool302 = icmp ne i32 %and301, 0, !dbg !13345
  br i1 %tobool302, label %land.lhs.true303, label %if.end313, !dbg !13346

land.lhs.true303:                                 ; preds = %if.end299
  %165 = load i16, i16* %scsi_cfg1, align 2, !dbg !13347
  %conv304 = zext i16 %165 to i32, !dbg !13347
  %and305 = and i32 %conv304, 128, !dbg !13348
  %cmp306 = icmp eq i32 %and305, 0, !dbg !13349
  br i1 %cmp306, label %if.then308, label %if.end313, !dbg !13350

if.then308:                                       ; preds = %land.lhs.true303
  %166 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13351
  %err_code309 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %166, i32 0, i32 1, !dbg !13353
  %167 = load i16, i16* %err_code309, align 8, !dbg !13354
  %conv310 = zext i16 %167 to i32, !dbg !13354
  %or311 = or i32 %conv310, 32, !dbg !13354
  %conv312 = trunc i32 %or311 to i16, !dbg !13354
  store i16 %conv312, i16* %err_code309, align 8, !dbg !13354
  store i32 -1, i32* %retval, align 4, !dbg !13355
  br label %return, !dbg !13355

if.end313:                                        ; preds = %land.lhs.true303, %if.end299
  %168 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13356
  %cfg314 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %168, i32 0, i32 28, !dbg !13358
  %169 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg314, align 8, !dbg !13358
  %termination = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %169, i32 0, i32 2, !dbg !13359
  %170 = load i8, i8* %termination, align 1, !dbg !13359
  %conv315 = zext i8 %170 to i32, !dbg !13356
  %cmp316 = icmp eq i32 %conv315, 0, !dbg !13360
  br i1 %cmp316, label %if.then318, label %if.end338, !dbg !13361

if.then318:                                       ; preds = %if.end313
  %171 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13362
  %cfg319 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %171, i32 0, i32 28, !dbg !13364
  %172 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg319, align 8, !dbg !13364
  %termination320 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %172, i32 0, i32 2, !dbg !13365
  %173 = load i8, i8* %termination320, align 1, !dbg !13366
  %conv321 = zext i8 %173 to i32, !dbg !13366
  %or322 = or i32 %conv321, 64, !dbg !13366
  %conv323 = trunc i32 %or322 to i8, !dbg !13366
  store i8 %conv323, i8* %termination320, align 1, !dbg !13366
  %174 = load i16, i16* %scsi_cfg1, align 2, !dbg !13367
  %conv324 = zext i16 %174 to i32, !dbg !13367
  %and325 = and i32 %conv324, 15, !dbg !13368
  switch i32 %and325, label %sw.epilog [
    i32 3, label %sw.bb
    i32 7, label %sw.bb
    i32 11, label %sw.bb
    i32 13, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 1, label %sw.bb331
    i32 5, label %sw.bb331
    i32 9, label %sw.bb331
    i32 10, label %sw.bb331
    i32 12, label %sw.bb331
    i32 2, label %sw.bb337
    i32 6, label %sw.bb337
  ], !dbg !13369

sw.bb:                                            ; preds = %if.then318, %if.then318, %if.then318, %if.then318, %if.then318, %if.then318
  %175 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13370
  %cfg326 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %175, i32 0, i32 28, !dbg !13372
  %176 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg326, align 8, !dbg !13372
  %termination327 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %176, i32 0, i32 2, !dbg !13373
  %177 = load i8, i8* %termination327, align 1, !dbg !13374
  %conv328 = zext i8 %177 to i32, !dbg !13374
  %or329 = or i32 %conv328, 48, !dbg !13374
  %conv330 = trunc i32 %or329 to i8, !dbg !13374
  store i8 %conv330, i8* %termination327, align 1, !dbg !13374
  br label %sw.epilog, !dbg !13375

sw.bb331:                                         ; preds = %if.then318, %if.then318, %if.then318, %if.then318, %if.then318
  %178 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13376
  %cfg332 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %178, i32 0, i32 28, !dbg !13377
  %179 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg332, align 8, !dbg !13377
  %termination333 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %179, i32 0, i32 2, !dbg !13378
  %180 = load i8, i8* %termination333, align 1, !dbg !13379
  %conv334 = zext i8 %180 to i32, !dbg !13379
  %or335 = or i32 %conv334, 32, !dbg !13379
  %conv336 = trunc i32 %or335 to i8, !dbg !13379
  store i8 %conv336, i8* %termination333, align 1, !dbg !13379
  br label %sw.epilog, !dbg !13380

sw.bb337:                                         ; preds = %if.then318, %if.then318
  br label %sw.epilog, !dbg !13381

sw.epilog:                                        ; preds = %if.then318, %sw.bb337, %sw.bb331, %sw.bb
  br label %if.end338, !dbg !13382

if.end338:                                        ; preds = %sw.epilog, %if.end313
  %181 = load i16, i16* %scsi_cfg1, align 2, !dbg !13383
  %conv339 = zext i16 %181 to i32, !dbg !13383
  %and340 = and i32 %conv339, -49, !dbg !13383
  %conv341 = trunc i32 %and340 to i16, !dbg !13383
  store i16 %conv341, i16* %scsi_cfg1, align 2, !dbg !13383
  %182 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13384
  %cfg342 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %182, i32 0, i32 28, !dbg !13385
  %183 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg342, align 8, !dbg !13385
  %termination343 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %183, i32 0, i32 2, !dbg !13386
  %184 = load i8, i8* %termination343, align 1, !dbg !13386
  %conv344 = zext i8 %184 to i32, !dbg !13384
  %neg = xor i32 %conv344, -1, !dbg !13387
  %and345 = and i32 %neg, 48, !dbg !13388
  %or346 = or i32 64, %and345, !dbg !13389
  %185 = load i16, i16* %scsi_cfg1, align 2, !dbg !13390
  %conv347 = zext i16 %185 to i32, !dbg !13390
  %or348 = or i32 %conv347, %or346, !dbg !13390
  %conv349 = trunc i32 %or348 to i16, !dbg !13390
  store i16 %conv349, i16* %scsi_cfg1, align 2, !dbg !13390
  %186 = load i8*, i8** %iop_base, align 8, !dbg !13391
  %add.ptr350 = getelementptr i8, i8* %186, i64 4, !dbg !13391
  call void @writew(i16 zeroext 174, i8* %add.ptr350) #11, !dbg !13391
  %187 = load i16, i16* %scsi_cfg1, align 2, !dbg !13391
  %conv351 = zext i16 %187 to i32, !dbg !13391
  %or352 = or i32 0, %conv351, !dbg !13391
  %conv353 = trunc i32 %or352 to i16, !dbg !13391
  %188 = load i8*, i8** %iop_base, align 8, !dbg !13391
  %add.ptr354 = getelementptr i8, i8* %188, i64 6, !dbg !13391
  call void @writew(i16 zeroext %conv353, i8* %add.ptr354) #11, !dbg !13391
  %189 = load i8*, i8** %iop_base, align 8, !dbg !13392
  %add.ptr355 = getelementptr i8, i8* %189, i64 4, !dbg !13392
  call void @writew(i16 zeroext 176, i8* %add.ptr355) #11, !dbg !13392
  %190 = load i8*, i8** %iop_base, align 8, !dbg !13392
  %add.ptr356 = getelementptr i8, i8* %190, i64 6, !dbg !13392
  call void @writew(i16 zeroext 72, i8* %add.ptr356) #11, !dbg !13392
  %191 = load i8*, i8** %iop_base, align 8, !dbg !13393
  %add.ptr357 = getelementptr i8, i8* %191, i64 4, !dbg !13393
  call void @writew(i16 zeroext 178, i8* %add.ptr357) #11, !dbg !13393
  %192 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13393
  %chip_scsi_id358 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %192, i32 0, i32 19, !dbg !13393
  %193 = load i8, i8* %chip_scsi_id358, align 8, !dbg !13393
  %conv359 = zext i8 %193 to i32, !dbg !13393
  %and360 = and i32 %conv359, 15, !dbg !13393
  %shl361 = shl i32 1, %and360, !dbg !13393
  %conv362 = trunc i32 %shl361 to i16, !dbg !13393
  %194 = load i8*, i8** %iop_base, align 8, !dbg !13393
  %add.ptr363 = getelementptr i8, i8* %194, i64 6, !dbg !13393
  call void @writew(i16 zeroext %conv362, i8* %add.ptr363) #11, !dbg !13393
  %195 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13394
  call void @AdvBuildCarrierFreelist(%struct.adv_dvc_var* %195) #11, !dbg !13395
  %196 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13396
  %call364 = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %196) #11, !dbg !13397
  %197 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13398
  %icq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %197, i32 0, i32 25, !dbg !13399
  store %struct.adv_carr_t* %call364, %struct.adv_carr_t** %icq_sp, align 8, !dbg !13400
  %198 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13401
  %icq_sp365 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %198, i32 0, i32 25, !dbg !13403
  %199 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp365, align 8, !dbg !13403
  %tobool366 = icmp ne %struct.adv_carr_t* %199, null, !dbg !13401
  br i1 %tobool366, label %if.end372, label %if.then367, !dbg !13404

if.then367:                                       ; preds = %if.end338
  %200 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13405
  %err_code368 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %200, i32 0, i32 1, !dbg !13407
  %201 = load i16, i16* %err_code368, align 8, !dbg !13408
  %conv369 = zext i16 %201 to i32, !dbg !13408
  %or370 = or i32 %conv369, 1, !dbg !13408
  %conv371 = trunc i32 %or370 to i16, !dbg !13408
  store i16 %conv371, i16* %err_code368, align 8, !dbg !13408
  store i32 -1, i32* %retval, align 4, !dbg !13409
  br label %return, !dbg !13409

if.end372:                                        ; preds = %if.end338
  %202 = load i8*, i8** %iop_base, align 8, !dbg !13410
  %add.ptr373 = getelementptr i8, i8* %202, i64 4, !dbg !13410
  call void @writew(i16 zeroext 352, i8* %add.ptr373) #11, !dbg !13410
  %203 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13410
  %icq_sp374 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %203, i32 0, i32 25, !dbg !13410
  %204 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp374, align 8, !dbg !13410
  %carr_pa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %204, i32 0, i32 1, !dbg !13410
  %205 = load i32, i32* %carr_pa, align 4, !dbg !13410
  %and375 = and i32 %205, 65535, !dbg !13410
  %conv376 = trunc i32 %and375 to i16, !dbg !13410
  %206 = load i8*, i8** %iop_base, align 8, !dbg !13410
  %add.ptr377 = getelementptr i8, i8* %206, i64 6, !dbg !13410
  call void @writew(i16 zeroext %conv376, i8* %add.ptr377) #11, !dbg !13410
  %207 = load i8*, i8** %iop_base, align 8, !dbg !13410
  %add.ptr378 = getelementptr i8, i8* %207, i64 4, !dbg !13410
  call void @writew(i16 zeroext 354, i8* %add.ptr378) #11, !dbg !13410
  %208 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13410
  %icq_sp379 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %208, i32 0, i32 25, !dbg !13410
  %209 = load %struct.adv_carr_t*, %struct.adv_carr_t** %icq_sp379, align 8, !dbg !13410
  %carr_pa380 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %209, i32 0, i32 1, !dbg !13410
  %210 = load i32, i32* %carr_pa380, align 4, !dbg !13410
  %shr381 = lshr i32 %210, 16, !dbg !13410
  %and382 = and i32 %shr381, 65535, !dbg !13410
  %conv383 = trunc i32 %and382 to i16, !dbg !13410
  %211 = load i8*, i8** %iop_base, align 8, !dbg !13410
  %add.ptr384 = getelementptr i8, i8* %211, i64 6, !dbg !13410
  call void @writew(i16 zeroext %conv383, i8* %add.ptr384) #11, !dbg !13410
  %212 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13411
  %call385 = call %struct.adv_carr_t* @adv_get_next_carrier(%struct.adv_dvc_var* %212) #11, !dbg !13412
  %213 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13413
  %irq_sp = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %213, i32 0, i32 26, !dbg !13414
  store %struct.adv_carr_t* %call385, %struct.adv_carr_t** %irq_sp, align 8, !dbg !13415
  %214 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13416
  %irq_sp386 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %214, i32 0, i32 26, !dbg !13418
  %215 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp386, align 8, !dbg !13418
  %tobool387 = icmp ne %struct.adv_carr_t* %215, null, !dbg !13416
  br i1 %tobool387, label %if.end393, label %if.then388, !dbg !13419

if.then388:                                       ; preds = %if.end372
  %216 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13420
  %err_code389 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %216, i32 0, i32 1, !dbg !13422
  %217 = load i16, i16* %err_code389, align 8, !dbg !13423
  %conv390 = zext i16 %217 to i32, !dbg !13423
  %or391 = or i32 %conv390, 1, !dbg !13423
  %conv392 = trunc i32 %or391 to i16, !dbg !13423
  store i16 %conv392, i16* %err_code389, align 8, !dbg !13423
  store i32 -1, i32* %retval, align 4, !dbg !13424
  br label %return, !dbg !13424

if.end393:                                        ; preds = %if.end372
  %218 = load i8*, i8** %iop_base, align 8, !dbg !13425
  %add.ptr394 = getelementptr i8, i8* %218, i64 4, !dbg !13425
  call void @writew(i16 zeroext 356, i8* %add.ptr394) #11, !dbg !13425
  %219 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13425
  %irq_sp395 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %219, i32 0, i32 26, !dbg !13425
  %220 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp395, align 8, !dbg !13425
  %carr_pa396 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %220, i32 0, i32 1, !dbg !13425
  %221 = load i32, i32* %carr_pa396, align 4, !dbg !13425
  %and397 = and i32 %221, 65535, !dbg !13425
  %conv398 = trunc i32 %and397 to i16, !dbg !13425
  %222 = load i8*, i8** %iop_base, align 8, !dbg !13425
  %add.ptr399 = getelementptr i8, i8* %222, i64 6, !dbg !13425
  call void @writew(i16 zeroext %conv398, i8* %add.ptr399) #11, !dbg !13425
  %223 = load i8*, i8** %iop_base, align 8, !dbg !13425
  %add.ptr400 = getelementptr i8, i8* %223, i64 4, !dbg !13425
  call void @writew(i16 zeroext 358, i8* %add.ptr400) #11, !dbg !13425
  %224 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13425
  %irq_sp401 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %224, i32 0, i32 26, !dbg !13425
  %225 = load %struct.adv_carr_t*, %struct.adv_carr_t** %irq_sp401, align 8, !dbg !13425
  %carr_pa402 = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %225, i32 0, i32 1, !dbg !13425
  %226 = load i32, i32* %carr_pa402, align 4, !dbg !13425
  %shr403 = lshr i32 %226, 16, !dbg !13425
  %and404 = and i32 %shr403, 65535, !dbg !13425
  %conv405 = trunc i32 %and404 to i16, !dbg !13425
  %227 = load i8*, i8** %iop_base, align 8, !dbg !13425
  %add.ptr406 = getelementptr i8, i8* %227, i64 6, !dbg !13425
  call void @writew(i16 zeroext %conv405, i8* %add.ptr406) #11, !dbg !13425
  %228 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13426
  %carr_pending_cnt = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %228, i32 0, i32 27, !dbg !13427
  store i16 0, i16* %carr_pending_cnt, align 8, !dbg !13428
  %229 = load i8*, i8** %iop_base, align 8, !dbg !13429
  %add.ptr407 = getelementptr i8, i8* %229, i64 2, !dbg !13429
  call void @writeb(i8 zeroext -127, i8* %add.ptr407) #11, !dbg !13429
  br label %do.body408, !dbg !13430

do.body408:                                       ; preds = %if.end393
  %230 = load i8*, i8** %iop_base, align 8, !dbg !13431
  %add.ptr409 = getelementptr i8, i8* %230, i64 4, !dbg !13431
  call void @writew(i16 zeroext 40, i8* %add.ptr409) #11, !dbg !13431
  %231 = load i8*, i8** %iop_base, align 8, !dbg !13431
  %add.ptr410 = getelementptr i8, i8* %231, i64 6, !dbg !13431
  %call411 = call zeroext i16 @readw(i8* %add.ptr410) #11, !dbg !13431
  %conv412 = zext i16 %call411 to i32, !dbg !13431
  store i32 %conv412, i32* %word, align 4, !dbg !13431
  br label %do.end413, !dbg !13431

do.end413:                                        ; preds = %do.body408
  %232 = load i32, i32* %word, align 4, !dbg !13433
  %conv414 = trunc i32 %232 to i16, !dbg !13433
  %233 = load i8*, i8** %iop_base, align 8, !dbg !13433
  %add.ptr415 = getelementptr i8, i8* %233, i64 42, !dbg !13433
  call void @writew(i16 zeroext %conv414, i8* %add.ptr415) #11, !dbg !13433
  %234 = load i8*, i8** %iop_base, align 8, !dbg !13434
  %add.ptr416 = getelementptr i8, i8* %234, i64 10, !dbg !13434
  call void @writew(i16 zeroext 16384, i8* %add.ptr416) #11, !dbg !13434
  %235 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13435
  %bios_ctrl417 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %235, i32 0, i32 2, !dbg !13437
  %236 = load i16, i16* %bios_ctrl417, align 2, !dbg !13437
  %conv418 = zext i16 %236 to i32, !dbg !13435
  %and419 = and i32 %conv418, 512, !dbg !13438
  %tobool420 = icmp ne i32 %and419, 0, !dbg !13438
  br i1 %tobool420, label %if.then421, label %if.end455, !dbg !13439

if.then421:                                       ; preds = %do.end413
  %arrayidx422 = getelementptr [40 x i16], [40 x i16]* %bios_mem, i64 0, i64 12, !dbg !13440
  %237 = load i16, i16* %arrayidx422, align 8, !dbg !13440
  %conv423 = zext i16 %237 to i32, !dbg !13440
  %cmp424 = icmp eq i32 %conv423, 21930, !dbg !13443
  br i1 %cmp424, label %if.then426, label %if.else448, !dbg !13444

if.then426:                                       ; preds = %if.then421
  %238 = load i8*, i8** %iop_base, align 8, !dbg !13445
  %add.ptr427 = getelementptr i8, i8* %238, i64 4, !dbg !13445
  call void @writew(i16 zeroext 156, i8* %add.ptr427) #11, !dbg !13445
  %239 = load i16, i16* %wdtr_able, align 2, !dbg !13445
  %240 = load i8*, i8** %iop_base, align 8, !dbg !13445
  %add.ptr428 = getelementptr i8, i8* %240, i64 6, !dbg !13445
  call void @writew(i16 zeroext %239, i8* %add.ptr428) #11, !dbg !13445
  %241 = load i8*, i8** %iop_base, align 8, !dbg !13447
  %add.ptr429 = getelementptr i8, i8* %241, i64 4, !dbg !13447
  call void @writew(i16 zeroext 158, i8* %add.ptr429) #11, !dbg !13447
  %242 = load i16, i16* %sdtr_able, align 2, !dbg !13447
  %243 = load i8*, i8** %iop_base, align 8, !dbg !13447
  %add.ptr430 = getelementptr i8, i8* %243, i64 6, !dbg !13447
  call void @writew(i16 zeroext %242, i8* %add.ptr430) #11, !dbg !13447
  %244 = load i8*, i8** %iop_base, align 8, !dbg !13448
  %add.ptr431 = getelementptr i8, i8* %244, i64 4, !dbg !13448
  call void @writew(i16 zeroext 160, i8* %add.ptr431) #11, !dbg !13448
  %245 = load i16, i16* %tagqng_able, align 2, !dbg !13448
  %246 = load i8*, i8** %iop_base, align 8, !dbg !13448
  %add.ptr432 = getelementptr i8, i8* %246, i64 6, !dbg !13448
  call void @writew(i16 zeroext %245, i8* %add.ptr432) #11, !dbg !13448
  store i8 0, i8* %tid, align 1, !dbg !13449
  br label %for.cond433, !dbg !13451

for.cond433:                                      ; preds = %for.inc445, %if.then426
  %247 = load i8, i8* %tid, align 1, !dbg !13452
  %conv434 = zext i8 %247 to i32, !dbg !13452
  %cmp435 = icmp sle i32 %conv434, 15, !dbg !13454
  br i1 %cmp435, label %for.body437, label %for.end447, !dbg !13455

for.body437:                                      ; preds = %for.cond433
  %248 = load i8, i8* %tid, align 1, !dbg !13456
  %conv438 = zext i8 %248 to i32, !dbg !13456
  %add439 = add i32 208, %conv438, !dbg !13456
  %conv440 = trunc i32 %add439 to i16, !dbg !13456
  %249 = load i8*, i8** %iop_base, align 8, !dbg !13456
  %add.ptr441 = getelementptr i8, i8* %249, i64 4, !dbg !13456
  call void @writew(i16 zeroext %conv440, i8* %add.ptr441) #11, !dbg !13456
  %250 = load i8, i8* %tid, align 1, !dbg !13456
  %idxprom442 = zext i8 %250 to i64, !dbg !13456
  %arrayidx443 = getelementptr [16 x i8], [16 x i8]* %max_cmd, i64 0, i64 %idxprom442, !dbg !13456
  %251 = load i8, i8* %arrayidx443, align 1, !dbg !13456
  %252 = load i8*, i8** %iop_base, align 8, !dbg !13456
  %add.ptr444 = getelementptr i8, i8* %252, i64 6, !dbg !13456
  call void @writeb(i8 zeroext %251, i8* %add.ptr444) #11, !dbg !13456
  br label %for.inc445, !dbg !13458

for.inc445:                                       ; preds = %for.body437
  %253 = load i8, i8* %tid, align 1, !dbg !13459
  %inc446 = add i8 %253, 1, !dbg !13459
  store i8 %inc446, i8* %tid, align 1, !dbg !13459
  br label %for.cond433, !dbg !13460, !llvm.loop !13461

for.end447:                                       ; preds = %for.cond433
  br label %if.end454, !dbg !13463

if.else448:                                       ; preds = %if.then421
  %254 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13464
  %call449 = call i32 @AdvResetSB(%struct.adv_dvc_var* %254) #11, !dbg !13467
  %cmp450 = icmp ne i32 %call449, 1, !dbg !13468
  br i1 %cmp450, label %if.then452, label %if.end453, !dbg !13469

if.then452:                                       ; preds = %if.else448
  store i16 1, i16* %warn_code, align 2, !dbg !13470
  br label %if.end453, !dbg !13472

if.end453:                                        ; preds = %if.then452, %if.else448
  br label %if.end454

if.end454:                                        ; preds = %if.end453, %for.end447
  br label %if.end455, !dbg !13473

if.end455:                                        ; preds = %if.end454, %do.end413
  %255 = load i16, i16* %warn_code, align 2, !dbg !13474
  %conv456 = zext i16 %255 to i32, !dbg !13474
  store i32 %conv456, i32* %retval, align 4, !dbg !13475
  br label %return, !dbg !13475

return:                                           ; preds = %if.end455, %if.then388, %if.then367, %if.then308, %if.then294, %if.then282, %if.then115, %if.then83, %if.then76, %if.then5, %if.then
  %256 = load i32, i32* %retval, align 4, !dbg !13476
  ret i32 %256, !dbg !13476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvLoadMicrocode(i8* %iop_base, i8* %buf, i32 %size, i32 %memsize, i32 %chksum) #2 !dbg !13477 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %memsize.addr = alloca i32, align 4
  %chksum.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %end = alloca i32, align 4
  %len = alloca i32, align 4
  %sum = alloca i32, align 4
  %word = alloca i16, align 2
  %word28 = alloca i16, align 2
  %off = alloca i32, align 4
  %word47 = alloca i16, align 2
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13484, metadata !DIExpression()), !dbg !13485
  store i32 %memsize, i32* %memsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %memsize.addr, metadata !13486, metadata !DIExpression()), !dbg !13487
  store i32 %chksum, i32* %chksum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chksum.addr, metadata !13488, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13492, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.declare(metadata i32* %end, metadata !13494, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13496, metadata !DIExpression()), !dbg !13497
  store i32 0, i32* %len, align 4, !dbg !13497
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !13498, metadata !DIExpression()), !dbg !13499
  %0 = load i8*, i8** %iop_base.addr, align 8, !dbg !13500
  %add.ptr = getelementptr i8, i8* %0, i64 4, !dbg !13500
  call void @writew(i16 zeroext 0, i8* %add.ptr) #11, !dbg !13500
  store i32 506, i32* %i, align 4, !dbg !13501
  br label %for.cond, !dbg !13503

for.cond:                                         ; preds = %for.inc61, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13504
  %2 = load i32, i32* %size.addr, align 4, !dbg !13506
  %cmp = icmp slt i32 %1, %2, !dbg !13507
  br i1 %cmp, label %for.body, label %for.end63, !dbg !13508

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !13509
  %4 = load i32, i32* %i, align 4, !dbg !13512
  %idxprom = sext i32 %4 to i64, !dbg !13509
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !13509
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13509
  %conv = zext i8 %5 to i32, !dbg !13509
  %cmp1 = icmp eq i32 %conv, 255, !dbg !13513
  br i1 %cmp1, label %if.then, label %if.else, !dbg !13514

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i16* %word, metadata !13515, metadata !DIExpression()), !dbg !13517
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !13518
  %7 = load i32, i32* %i, align 4, !dbg !13519
  %add = add i32 %7, 3, !dbg !13520
  %idxprom3 = sext i32 %add to i64, !dbg !13518
  %arrayidx4 = getelementptr i8, i8* %6, i64 %idxprom3, !dbg !13518
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !13518
  %conv5 = zext i8 %8 to i32, !dbg !13518
  %shl = shl i32 %conv5, 8, !dbg !13521
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !13522
  %10 = load i32, i32* %i, align 4, !dbg !13523
  %add6 = add i32 %10, 2, !dbg !13524
  %idxprom7 = sext i32 %add6 to i64, !dbg !13522
  %arrayidx8 = getelementptr i8, i8* %9, i64 %idxprom7, !dbg !13522
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !13522
  %conv9 = zext i8 %11 to i32, !dbg !13522
  %or = or i32 %shl, %conv9, !dbg !13525
  %conv10 = trunc i32 %or to i16, !dbg !13526
  store i16 %conv10, i16* %word, align 2, !dbg !13517
  store i32 0, i32* %j, align 4, !dbg !13527
  br label %for.cond11, !dbg !13529

for.cond11:                                       ; preds = %for.inc, %if.then
  %12 = load i32, i32* %j, align 4, !dbg !13530
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !13532
  %14 = load i32, i32* %i, align 4, !dbg !13533
  %add12 = add i32 %14, 1, !dbg !13534
  %idxprom13 = sext i32 %add12 to i64, !dbg !13532
  %arrayidx14 = getelementptr i8, i8* %13, i64 %idxprom13, !dbg !13532
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !13532
  %conv15 = zext i8 %15 to i32, !dbg !13532
  %cmp16 = icmp slt i32 %12, %conv15, !dbg !13535
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !13536

for.body18:                                       ; preds = %for.cond11
  %16 = load i16, i16* %word, align 2, !dbg !13537
  %17 = load i8*, i8** %iop_base.addr, align 8, !dbg !13537
  %add.ptr19 = getelementptr i8, i8* %17, i64 6, !dbg !13537
  call void @writew(i16 zeroext %16, i8* %add.ptr19) #11, !dbg !13537
  %18 = load i32, i32* %len, align 4, !dbg !13539
  %add20 = add i32 %18, 2, !dbg !13539
  store i32 %add20, i32* %len, align 4, !dbg !13539
  br label %for.inc, !dbg !13540

for.inc:                                          ; preds = %for.body18
  %19 = load i32, i32* %j, align 4, !dbg !13541
  %inc = add i32 %19, 1, !dbg !13541
  store i32 %inc, i32* %j, align 4, !dbg !13541
  br label %for.cond11, !dbg !13542, !llvm.loop !13543

for.end:                                          ; preds = %for.cond11
  %20 = load i32, i32* %i, align 4, !dbg !13545
  %add21 = add i32 %20, 3, !dbg !13545
  store i32 %add21, i32* %i, align 4, !dbg !13545
  br label %if.end60, !dbg !13546

if.else:                                          ; preds = %for.body
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !13547
  %22 = load i32, i32* %i, align 4, !dbg !13549
  %idxprom22 = sext i32 %22 to i64, !dbg !13547
  %arrayidx23 = getelementptr i8, i8* %21, i64 %idxprom22, !dbg !13547
  %23 = load i8, i8* %arrayidx23, align 1, !dbg !13547
  %conv24 = zext i8 %23 to i32, !dbg !13547
  %cmp25 = icmp eq i32 %conv24, 254, !dbg !13550
  br i1 %cmp25, label %if.then27, label %if.else43, !dbg !13551

if.then27:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %word28, metadata !13552, metadata !DIExpression()), !dbg !13554
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !13555
  %25 = load i32, i32* %i, align 4, !dbg !13556
  %add29 = add i32 %25, 2, !dbg !13557
  %idxprom30 = sext i32 %add29 to i64, !dbg !13555
  %arrayidx31 = getelementptr i8, i8* %24, i64 %idxprom30, !dbg !13555
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !13555
  %conv32 = zext i8 %26 to i32, !dbg !13555
  %shl33 = shl i32 %conv32, 8, !dbg !13558
  %27 = load i8*, i8** %buf.addr, align 8, !dbg !13559
  %28 = load i32, i32* %i, align 4, !dbg !13560
  %add34 = add i32 %28, 1, !dbg !13561
  %idxprom35 = sext i32 %add34 to i64, !dbg !13559
  %arrayidx36 = getelementptr i8, i8* %27, i64 %idxprom35, !dbg !13559
  %29 = load i8, i8* %arrayidx36, align 1, !dbg !13559
  %conv37 = zext i8 %29 to i32, !dbg !13559
  %or38 = or i32 %shl33, %conv37, !dbg !13562
  %conv39 = trunc i32 %or38 to i16, !dbg !13563
  store i16 %conv39, i16* %word28, align 2, !dbg !13554
  %30 = load i16, i16* %word28, align 2, !dbg !13564
  %31 = load i8*, i8** %iop_base.addr, align 8, !dbg !13564
  %add.ptr40 = getelementptr i8, i8* %31, i64 6, !dbg !13564
  call void @writew(i16 zeroext %30, i8* %add.ptr40) #11, !dbg !13564
  %32 = load i32, i32* %i, align 4, !dbg !13565
  %add41 = add i32 %32, 2, !dbg !13565
  store i32 %add41, i32* %i, align 4, !dbg !13565
  %33 = load i32, i32* %len, align 4, !dbg !13566
  %add42 = add i32 %33, 2, !dbg !13566
  store i32 %add42, i32* %len, align 4, !dbg !13566
  br label %if.end, !dbg !13567

if.else43:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %off, metadata !13568, metadata !DIExpression()), !dbg !13570
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !13571
  %35 = load i32, i32* %i, align 4, !dbg !13572
  %idxprom44 = sext i32 %35 to i64, !dbg !13571
  %arrayidx45 = getelementptr i8, i8* %34, i64 %idxprom44, !dbg !13571
  %36 = load i8, i8* %arrayidx45, align 1, !dbg !13571
  %conv46 = zext i8 %36 to i32, !dbg !13571
  %mul = mul i32 %conv46, 2, !dbg !13573
  store i32 %mul, i32* %off, align 4, !dbg !13570
  call void @llvm.dbg.declare(metadata i16* %word47, metadata !13574, metadata !DIExpression()), !dbg !13575
  %37 = load i8*, i8** %buf.addr, align 8, !dbg !13576
  %38 = load i32, i32* %off, align 4, !dbg !13577
  %add48 = add i32 %38, 1, !dbg !13578
  %idxprom49 = zext i32 %add48 to i64, !dbg !13576
  %arrayidx50 = getelementptr i8, i8* %37, i64 %idxprom49, !dbg !13576
  %39 = load i8, i8* %arrayidx50, align 1, !dbg !13576
  %conv51 = zext i8 %39 to i32, !dbg !13576
  %shl52 = shl i32 %conv51, 8, !dbg !13579
  %40 = load i8*, i8** %buf.addr, align 8, !dbg !13580
  %41 = load i32, i32* %off, align 4, !dbg !13581
  %idxprom53 = zext i32 %41 to i64, !dbg !13580
  %arrayidx54 = getelementptr i8, i8* %40, i64 %idxprom53, !dbg !13580
  %42 = load i8, i8* %arrayidx54, align 1, !dbg !13580
  %conv55 = zext i8 %42 to i32, !dbg !13580
  %or56 = or i32 %shl52, %conv55, !dbg !13582
  %conv57 = trunc i32 %or56 to i16, !dbg !13583
  store i16 %conv57, i16* %word47, align 2, !dbg !13575
  %43 = load i16, i16* %word47, align 2, !dbg !13584
  %44 = load i8*, i8** %iop_base.addr, align 8, !dbg !13584
  %add.ptr58 = getelementptr i8, i8* %44, i64 6, !dbg !13584
  call void @writew(i16 zeroext %43, i8* %add.ptr58) #11, !dbg !13584
  %45 = load i32, i32* %len, align 4, !dbg !13585
  %add59 = add i32 %45, 2, !dbg !13585
  store i32 %add59, i32* %len, align 4, !dbg !13585
  br label %if.end

if.end:                                           ; preds = %if.else43, %if.then27
  br label %if.end60

if.end60:                                         ; preds = %if.end, %for.end
  br label %for.inc61, !dbg !13586

for.inc61:                                        ; preds = %if.end60
  %46 = load i32, i32* %i, align 4, !dbg !13587
  %inc62 = add i32 %46, 1, !dbg !13587
  store i32 %inc62, i32* %i, align 4, !dbg !13587
  br label %for.cond, !dbg !13588, !llvm.loop !13589

for.end63:                                        ; preds = %for.cond
  %47 = load i32, i32* %len, align 4, !dbg !13591
  store i32 %47, i32* %end, align 4, !dbg !13592
  br label %while.cond, !dbg !13593

while.cond:                                       ; preds = %while.body, %for.end63
  %48 = load i32, i32* %len, align 4, !dbg !13594
  %49 = load i32, i32* %memsize.addr, align 4, !dbg !13595
  %cmp64 = icmp slt i32 %48, %49, !dbg !13596
  br i1 %cmp64, label %while.body, label %while.end, !dbg !13593

while.body:                                       ; preds = %while.cond
  %50 = load i8*, i8** %iop_base.addr, align 8, !dbg !13597
  %add.ptr66 = getelementptr i8, i8* %50, i64 6, !dbg !13597
  call void @writew(i16 zeroext 0, i8* %add.ptr66) #11, !dbg !13597
  %51 = load i32, i32* %len, align 4, !dbg !13599
  %add67 = add i32 %51, 2, !dbg !13599
  store i32 %add67, i32* %len, align 4, !dbg !13599
  br label %while.cond, !dbg !13593, !llvm.loop !13600

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %sum, align 4, !dbg !13602
  %52 = load i8*, i8** %iop_base.addr, align 8, !dbg !13603
  %add.ptr68 = getelementptr i8, i8* %52, i64 4, !dbg !13603
  call void @writew(i16 zeroext 0, i8* %add.ptr68) #11, !dbg !13603
  store i32 0, i32* %len, align 4, !dbg !13604
  br label %for.cond69, !dbg !13606

for.cond69:                                       ; preds = %for.inc76, %while.end
  %53 = load i32, i32* %len, align 4, !dbg !13607
  %54 = load i32, i32* %end, align 4, !dbg !13609
  %cmp70 = icmp slt i32 %53, %54, !dbg !13610
  br i1 %cmp70, label %for.body72, label %for.end78, !dbg !13611

for.body72:                                       ; preds = %for.cond69
  %55 = load i8*, i8** %iop_base.addr, align 8, !dbg !13612
  %add.ptr73 = getelementptr i8, i8* %55, i64 6, !dbg !13612
  %call = call zeroext i16 @readw(i8* %add.ptr73) #11, !dbg !13612
  %conv74 = zext i16 %call to i32, !dbg !13612
  %56 = load i32, i32* %sum, align 4, !dbg !13614
  %add75 = add i32 %56, %conv74, !dbg !13614
  store i32 %add75, i32* %sum, align 4, !dbg !13614
  br label %for.inc76, !dbg !13615

for.inc76:                                        ; preds = %for.body72
  %57 = load i32, i32* %len, align 4, !dbg !13616
  %add77 = add i32 %57, 2, !dbg !13616
  store i32 %add77, i32* %len, align 4, !dbg !13616
  br label %for.cond69, !dbg !13617, !llvm.loop !13618

for.end78:                                        ; preds = %for.cond69
  %58 = load i32, i32* %sum, align 4, !dbg !13620
  %59 = load i32, i32* %chksum.addr, align 4, !dbg !13622
  %cmp79 = icmp ne i32 %58, %59, !dbg !13623
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !13624

if.then81:                                        ; preds = %for.end78
  store i32 2, i32* %retval, align 4, !dbg !13625
  br label %return, !dbg !13625

if.end82:                                         ; preds = %for.end78
  store i32 0, i32* %retval, align 4, !dbg !13626
  br label %return, !dbg !13626

return:                                           ; preds = %if.end82, %if.then81
  %60 = load i32, i32* %retval, align 4, !dbg !13627
  ret i32 %60, !dbg !13627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AdvBuildCarrierFreelist(%struct.adv_dvc_var* %adv_dvc) #2 !dbg !13628 {
entry:
  %adv_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %carr_offset = alloca i64, align 8
  %next_offset = alloca i64, align 8
  %carr_paddr = alloca i64, align 8
  %carr_num = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.adv_dvc_var* %adv_dvc, %struct.adv_dvc_var** %adv_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc.addr, metadata !13631, metadata !DIExpression()), !dbg !13632
  call void @llvm.dbg.declare(metadata i64* %carr_offset, metadata !13633, metadata !DIExpression()), !dbg !13636
  store i64 0, i64* %carr_offset, align 8, !dbg !13636
  call void @llvm.dbg.declare(metadata i64* %next_offset, metadata !13637, metadata !DIExpression()), !dbg !13638
  call void @llvm.dbg.declare(metadata i64* %carr_paddr, metadata !13639, metadata !DIExpression()), !dbg !13640
  call void @llvm.dbg.declare(metadata i32* %carr_num, metadata !13641, metadata !DIExpression()), !dbg !13642
  store i32 256, i32* %carr_num, align 4, !dbg !13642
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13643, metadata !DIExpression()), !dbg !13644
  store i32 0, i32* %i, align 4, !dbg !13645
  br label %for.cond, !dbg !13647

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13648
  %1 = load i32, i32* %carr_num, align 4, !dbg !13650
  %cmp = icmp slt i32 %0, %1, !dbg !13651
  br i1 %cmp, label %for.body, label %for.end, !dbg !13652

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !13653
  %conv = sext i32 %2 to i64, !dbg !13653
  %mul = mul i64 %conv, 16, !dbg !13655
  store i64 %mul, i64* %carr_offset, align 8, !dbg !13656
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13657
  %carrier_addr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 24, !dbg !13658
  %4 = load i64, i64* %carrier_addr, align 8, !dbg !13658
  %5 = load i64, i64* %carr_offset, align 8, !dbg !13659
  %add = add i64 %4, %5, !dbg !13660
  store i64 %add, i64* %carr_paddr, align 8, !dbg !13661
  %6 = load i64, i64* %carr_paddr, align 8, !dbg !13662
  %conv1 = trunc i64 %6 to i32, !dbg !13662
  %7 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13663
  %carrier = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %7, i32 0, i32 22, !dbg !13664
  %8 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier, align 8, !dbg !13664
  %9 = load i32, i32* %i, align 4, !dbg !13665
  %idxprom = sext i32 %9 to i64, !dbg !13663
  %arrayidx = getelementptr %struct.adv_carr_t, %struct.adv_carr_t* %8, i64 %idxprom, !dbg !13663
  %carr_pa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %arrayidx, i32 0, i32 1, !dbg !13666
  store i32 %conv1, i32* %carr_pa, align 4, !dbg !13667
  %10 = load i64, i64* %carr_offset, align 8, !dbg !13668
  %conv2 = trunc i64 %10 to i32, !dbg !13668
  %11 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13669
  %carrier3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %11, i32 0, i32 22, !dbg !13670
  %12 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier3, align 8, !dbg !13670
  %13 = load i32, i32* %i, align 4, !dbg !13671
  %idxprom4 = sext i32 %13 to i64, !dbg !13669
  %arrayidx5 = getelementptr %struct.adv_carr_t, %struct.adv_carr_t* %12, i64 %idxprom4, !dbg !13669
  %carr_va = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %arrayidx5, i32 0, i32 0, !dbg !13672
  store i32 %conv2, i32* %carr_va, align 4, !dbg !13673
  %14 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13674
  %carrier6 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %14, i32 0, i32 22, !dbg !13675
  %15 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier6, align 8, !dbg !13675
  %16 = load i32, i32* %i, align 4, !dbg !13676
  %idxprom7 = sext i32 %16 to i64, !dbg !13674
  %arrayidx8 = getelementptr %struct.adv_carr_t, %struct.adv_carr_t* %15, i64 %idxprom7, !dbg !13674
  %areq_vpa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %arrayidx8, i32 0, i32 2, !dbg !13677
  store i32 0, i32* %areq_vpa, align 4, !dbg !13678
  %17 = load i64, i64* %carr_offset, align 8, !dbg !13679
  %add9 = add i64 %17, 16, !dbg !13680
  store i64 %add9, i64* %next_offset, align 8, !dbg !13681
  %18 = load i32, i32* %i, align 4, !dbg !13682
  %19 = load i32, i32* %carr_num, align 4, !dbg !13684
  %cmp10 = icmp eq i32 %18, %19, !dbg !13685
  br i1 %cmp10, label %if.then, label %if.end, !dbg !13686

if.then:                                          ; preds = %for.body
  store i64 -1, i64* %next_offset, align 8, !dbg !13687
  br label %if.end, !dbg !13688

if.end:                                           ; preds = %if.then, %for.body
  %20 = load i64, i64* %next_offset, align 8, !dbg !13689
  %conv12 = trunc i64 %20 to i32, !dbg !13689
  %21 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13690
  %carrier13 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %21, i32 0, i32 22, !dbg !13691
  %22 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier13, align 8, !dbg !13691
  %23 = load i32, i32* %i, align 4, !dbg !13692
  %idxprom14 = sext i32 %23 to i64, !dbg !13690
  %arrayidx15 = getelementptr %struct.adv_carr_t, %struct.adv_carr_t* %22, i64 %idxprom14, !dbg !13690
  %next_vpa = getelementptr inbounds %struct.adv_carr_t, %struct.adv_carr_t* %arrayidx15, i32 0, i32 3, !dbg !13693
  store i32 %conv12, i32* %next_vpa, align 4, !dbg !13694
  br label %for.inc, !dbg !13695

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !13696
  %inc = add i32 %24, 1, !dbg !13696
  store i32 %inc, i32* %i, align 4, !dbg !13696
  br label %for.cond, !dbg !13697, !llvm.loop !13698

for.end:                                          ; preds = %for.cond
  %25 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13700
  %carrier16 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %25, i32 0, i32 22, !dbg !13701
  %26 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier16, align 8, !dbg !13701
  %arrayidx17 = getelementptr %struct.adv_carr_t, %struct.adv_carr_t* %26, i64 1, !dbg !13700
  %27 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13702
  %carr_freelist = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %27, i32 0, i32 23, !dbg !13703
  store %struct.adv_carr_t* %arrayidx17, %struct.adv_carr_t** %carr_freelist, align 8, !dbg !13704
  ret void, !dbg !13705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvResetSB(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !13706 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %status = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !13707, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13709, metadata !DIExpression()), !dbg !13710
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13711
  %call = call i32 @AdvSendIdleCmd(%struct.adv_dvc_var* %0, i16 zeroext 32, i32 0) #11, !dbg !13712
  store i32 %call, i32* %status, align 4, !dbg !13713
  %1 = load i32, i32* %status, align 4, !dbg !13714
  %cmp = icmp ne i32 %1, 1, !dbg !13716
  br i1 %cmp, label %if.then, label %if.end, !dbg !13717

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %status, align 4, !dbg !13718
  store i32 %2, i32* %retval, align 4, !dbg !13720
  br label %return, !dbg !13720

if.end:                                           ; preds = %entry
  call void @__const_udelay(i64 257700) #11, !dbg !13721
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13726
  %call1 = call i32 @AdvSendIdleCmd(%struct.adv_dvc_var* %3, i16 zeroext 64, i32 0) #11, !dbg !13727
  store i32 %call1, i32* %status, align 4, !dbg !13728
  %4 = load i32, i32* %status, align 4, !dbg !13729
  %cmp2 = icmp ne i32 %4, 1, !dbg !13731
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13732

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %status, align 4, !dbg !13733
  store i32 %5, i32* %retval, align 4, !dbg !13735
  br label %return, !dbg !13735

if.end4:                                          ; preds = %if.end
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13736
  %scsi_reset_wait = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 14, !dbg !13736
  %7 = load i8, i8* %scsi_reset_wait, align 2, !dbg !13736
  %conv = zext i8 %7 to i32, !dbg !13736
  %mul = mul i32 %conv, 1000, !dbg !13736
  %8 = call i1 @llvm.is.constant.i32(i32 %mul), !dbg !13736
  br i1 %8, label %land.lhs.true, label %cond.false, !dbg !13736

land.lhs.true:                                    ; preds = %if.end4
  %9 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13736
  %scsi_reset_wait5 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %9, i32 0, i32 14, !dbg !13736
  %10 = load i8, i8* %scsi_reset_wait5, align 2, !dbg !13736
  %conv6 = zext i8 %10 to i32, !dbg !13736
  %mul7 = mul i32 %conv6, 1000, !dbg !13736
  %cmp8 = icmp sle i32 %mul7, 5, !dbg !13736
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !13736

cond.true:                                        ; preds = %land.lhs.true
  %11 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13737
  %scsi_reset_wait10 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %11, i32 0, i32 14, !dbg !13737
  %12 = load i8, i8* %scsi_reset_wait10, align 2, !dbg !13737
  %conv11 = zext i8 %12 to i32, !dbg !13737
  %mul12 = mul i32 %conv11, 1000, !dbg !13737
  %mul13 = mul i32 %mul12, 1000, !dbg !13737
  %13 = call i1 @llvm.is.constant.i32(i32 %mul13), !dbg !13737
  br i1 %13, label %if.then14, label %if.else29, !dbg !13740

if.then14:                                        ; preds = %cond.true
  %14 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13741
  %scsi_reset_wait15 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %14, i32 0, i32 14, !dbg !13741
  %15 = load i8, i8* %scsi_reset_wait15, align 2, !dbg !13741
  %conv16 = zext i8 %15 to i32, !dbg !13741
  %mul17 = mul i32 %conv16, 1000, !dbg !13741
  %mul18 = mul i32 %mul17, 1000, !dbg !13741
  %div = sdiv i32 %mul18, 20000, !dbg !13741
  %cmp19 = icmp sge i32 %div, 1, !dbg !13741
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !13744

if.then21:                                        ; preds = %if.then14
  call void @__bad_udelay() #11, !dbg !13741
  br label %if.end28, !dbg !13741

if.else:                                          ; preds = %if.then14
  %16 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13741
  %scsi_reset_wait22 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %16, i32 0, i32 14, !dbg !13741
  %17 = load i8, i8* %scsi_reset_wait22, align 2, !dbg !13741
  %conv23 = zext i8 %17 to i32, !dbg !13741
  %mul24 = mul i32 %conv23, 1000, !dbg !13741
  %mul25 = mul i32 %mul24, 1000, !dbg !13741
  %conv26 = sext i32 %mul25 to i64, !dbg !13741
  %mul27 = mul i64 %conv26, 4295, !dbg !13741
  call void @__const_udelay(i64 %mul27) #11, !dbg !13741
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  br label %if.end35, !dbg !13744

if.else29:                                        ; preds = %cond.true
  %18 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13745
  %scsi_reset_wait30 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %18, i32 0, i32 14, !dbg !13745
  %19 = load i8, i8* %scsi_reset_wait30, align 2, !dbg !13745
  %conv31 = zext i8 %19 to i32, !dbg !13745
  %mul32 = mul i32 %conv31, 1000, !dbg !13745
  %mul33 = mul i32 %mul32, 1000, !dbg !13745
  %conv34 = sext i32 %mul33 to i64, !dbg !13745
  call void @__udelay(i64 %conv34) #11, !dbg !13745
  br label %if.end35

if.end35:                                         ; preds = %if.else29, %if.end28
  br label %cond.end, !dbg !13736

cond.false:                                       ; preds = %land.lhs.true, %if.end4
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !13747, metadata !DIExpression()), !dbg !13749
  %20 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13749
  %scsi_reset_wait36 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %20, i32 0, i32 14, !dbg !13749
  %21 = load i8, i8* %scsi_reset_wait36, align 2, !dbg !13749
  %conv37 = zext i8 %21 to i32, !dbg !13749
  %mul38 = mul i32 %conv37, 1000, !dbg !13749
  %conv39 = sext i32 %mul38 to i64, !dbg !13749
  store i64 %conv39, i64* %__ms, align 8, !dbg !13749
  br label %while.cond, !dbg !13749

while.cond:                                       ; preds = %while.body, %cond.false
  %22 = load i64, i64* %__ms, align 8, !dbg !13749
  %dec = add i64 %22, -1, !dbg !13749
  store i64 %dec, i64* %__ms, align 8, !dbg !13749
  %tobool = icmp ne i64 %22, 0, !dbg !13749
  br i1 %tobool, label %while.body, label %while.end, !dbg !13749

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !13750
  br label %while.cond, !dbg !13749, !llvm.loop !13755

while.end:                                        ; preds = %while.cond
  br label %cond.end, !dbg !13736

cond.end:                                         ; preds = %while.end, %if.end35
  %23 = load i32, i32* %status, align 4, !dbg !13756
  store i32 %23, i32* %retval, align 4, !dbg !13757
  br label %return, !dbg !13757

return:                                           ; preds = %cond.end, %if.then3, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !13758
  ret i32 %24, !dbg !13758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvSendIdleCmd(%struct.adv_dvc_var* %asc_dvc, i16 zeroext %idle_cmd, i32 %idle_cmd_parameter) #2 !dbg !13759 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %idle_cmd.addr = alloca i16, align 2
  %idle_cmd_parameter.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %iop_base = alloca i8*, align 8
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !13762, metadata !DIExpression()), !dbg !13763
  store i16 %idle_cmd, i16* %idle_cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idle_cmd.addr, metadata !13764, metadata !DIExpression()), !dbg !13765
  store i32 %idle_cmd_parameter, i32* %idle_cmd_parameter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idle_cmd_parameter.addr, metadata !13766, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.declare(metadata i32* %result, metadata !13768, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13770, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13772, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !13774, metadata !DIExpression()), !dbg !13775
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13776
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !13777
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !13777
  store i8* %1, i8** %iop_base, align 8, !dbg !13778
  %2 = load i8*, i8** %iop_base, align 8, !dbg !13779
  %add.ptr = getelementptr i8, i8* %2, i64 4, !dbg !13779
  call void @writew(i16 zeroext 164, i8* %add.ptr) #11, !dbg !13779
  %3 = load i8*, i8** %iop_base, align 8, !dbg !13779
  %add.ptr2 = getelementptr i8, i8* %3, i64 6, !dbg !13779
  call void @writew(i16 zeroext 0, i8* %add.ptr2) #11, !dbg !13779
  %4 = load i8*, i8** %iop_base, align 8, !dbg !13780
  %add.ptr3 = getelementptr i8, i8* %4, i64 4, !dbg !13780
  call void @writew(i16 zeroext 168, i8* %add.ptr3) #11, !dbg !13780
  %5 = load i32, i32* %idle_cmd_parameter.addr, align 4, !dbg !13780
  %and = and i32 %5, 65535, !dbg !13780
  %conv = trunc i32 %and to i16, !dbg !13780
  %6 = load i8*, i8** %iop_base, align 8, !dbg !13780
  %add.ptr4 = getelementptr i8, i8* %6, i64 6, !dbg !13780
  call void @writew(i16 zeroext %conv, i8* %add.ptr4) #11, !dbg !13780
  %7 = load i8*, i8** %iop_base, align 8, !dbg !13780
  %add.ptr5 = getelementptr i8, i8* %7, i64 4, !dbg !13780
  call void @writew(i16 zeroext 170, i8* %add.ptr5) #11, !dbg !13780
  %8 = load i32, i32* %idle_cmd_parameter.addr, align 4, !dbg !13780
  %shr = lshr i32 %8, 16, !dbg !13780
  %and6 = and i32 %shr, 65535, !dbg !13780
  %conv7 = trunc i32 %and6 to i16, !dbg !13780
  %9 = load i8*, i8** %iop_base, align 8, !dbg !13780
  %add.ptr8 = getelementptr i8, i8* %9, i64 6, !dbg !13780
  call void @writew(i16 zeroext %conv7, i8* %add.ptr8) #11, !dbg !13780
  %10 = load i8*, i8** %iop_base, align 8, !dbg !13781
  %add.ptr9 = getelementptr i8, i8* %10, i64 4, !dbg !13781
  call void @writew(i16 zeroext 166, i8* %add.ptr9) #11, !dbg !13781
  %11 = load i16, i16* %idle_cmd.addr, align 2, !dbg !13781
  %12 = load i8*, i8** %iop_base, align 8, !dbg !13781
  %add.ptr10 = getelementptr i8, i8* %12, i64 6, !dbg !13781
  call void @writew(i16 zeroext %11, i8* %add.ptr10) #11, !dbg !13781
  %13 = load i8*, i8** %iop_base, align 8, !dbg !13782
  %add.ptr11 = getelementptr i8, i8* %13, i64 34, !dbg !13782
  call void @writeb(i8 zeroext 2, i8* %add.ptr11) #11, !dbg !13782
  %14 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !13783
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %14, i32 0, i32 20, !dbg !13785
  %15 = load i8, i8* %chip_type, align 1, !dbg !13785
  %conv12 = zext i8 %15 to i32, !dbg !13783
  %cmp = icmp eq i32 %conv12, 1, !dbg !13786
  br i1 %cmp, label %if.then, label %if.end, !dbg !13787

if.then:                                          ; preds = %entry
  %16 = load i8*, i8** %iop_base, align 8, !dbg !13788
  %add.ptr14 = getelementptr i8, i8* %16, i64 34, !dbg !13788
  call void @writeb(i8 zeroext 0, i8* %add.ptr14) #11, !dbg !13788
  br label %if.end, !dbg !13790

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !13791
  br label %for.cond, !dbg !13793

for.cond:                                         ; preds = %for.inc29, %if.end
  %17 = load i32, i32* %i, align 4, !dbg !13794
  %conv15 = sext i32 %17 to i64, !dbg !13794
  %cmp16 = icmp ult i64 %conv15, 100, !dbg !13796
  br i1 %cmp16, label %for.body, label %for.end31, !dbg !13797

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13798
  br label %for.cond18, !dbg !13801

for.cond18:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %j, align 4, !dbg !13802
  %cmp19 = icmp slt i32 %18, 1000, !dbg !13804
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !13805

for.body21:                                       ; preds = %for.cond18
  br label %do.body, !dbg !13806

do.body:                                          ; preds = %for.body21
  %19 = load i8*, i8** %iop_base, align 8, !dbg !13808
  %add.ptr22 = getelementptr i8, i8* %19, i64 4, !dbg !13808
  call void @writew(i16 zeroext 164, i8* %add.ptr22) #11, !dbg !13808
  %20 = load i8*, i8** %iop_base, align 8, !dbg !13808
  %add.ptr23 = getelementptr i8, i8* %20, i64 6, !dbg !13808
  %call = call zeroext i16 @readw(i8* %add.ptr23) #11, !dbg !13808
  %conv24 = zext i16 %call to i32, !dbg !13808
  store i32 %conv24, i32* %result, align 4, !dbg !13808
  br label %do.end, !dbg !13808

do.end:                                           ; preds = %do.body
  %21 = load i32, i32* %result, align 4, !dbg !13810
  %cmp25 = icmp ne i32 %21, 0, !dbg !13812
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !13813

if.then27:                                        ; preds = %do.end
  %22 = load i32, i32* %result, align 4, !dbg !13814
  store i32 %22, i32* %retval, align 4, !dbg !13815
  br label %return, !dbg !13815

if.end28:                                         ; preds = %do.end
  call void @__const_udelay(i64 4295) #11, !dbg !13816
  br label %for.inc, !dbg !13821

for.inc:                                          ; preds = %if.end28
  %23 = load i32, i32* %j, align 4, !dbg !13822
  %inc = add i32 %23, 1, !dbg !13822
  store i32 %inc, i32* %j, align 4, !dbg !13822
  br label %for.cond18, !dbg !13823, !llvm.loop !13824

for.end:                                          ; preds = %for.cond18
  br label %for.inc29, !dbg !13826

for.inc29:                                        ; preds = %for.end
  %24 = load i32, i32* %i, align 4, !dbg !13827
  %inc30 = add i32 %24, 1, !dbg !13827
  store i32 %inc30, i32* %i, align 4, !dbg !13827
  br label %for.cond, !dbg !13828, !llvm.loop !13829

for.end31:                                        ; preds = %for.cond
  br label %do.body32, !dbg !13831

do.body32:                                        ; preds = %for.end31
  br label %do.body33, !dbg !13832

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !13834

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !13832

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 4341, i32 0, i64 12) #6, !dbg !13836, !srcloc !13838
  br label %do.end36, !dbg !13836

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !13832

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #6, !dbg !13839, !srcloc !13842
  unreachable, !dbg !13843

do.end38:                                         ; No predecessors!
  br label %do.end39, !dbg !13832

do.end39:                                         ; preds = %do.end38
  store i32 -1, i32* %retval, align 4, !dbg !13844
  br label %return, !dbg !13844

return:                                           ; preds = %do.end39, %if.then27
  %25 = load i32, i32* %retval, align 4, !dbg !13845
  ret i32 %25, !dbg !13845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adv_async_callback(%struct.adv_dvc_var* %adv_dvc_varp, i8 zeroext %code) #2 !dbg !13846 {
entry:
  %adv_dvc_varp.addr = alloca %struct.adv_dvc_var*, align 8
  %code.addr = alloca i8, align 1
  store %struct.adv_dvc_var* %adv_dvc_varp, %struct.adv_dvc_var** %adv_dvc_varp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc_varp.addr, metadata !13849, metadata !DIExpression()), !dbg !13850
  store i8 %code, i8* %code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %code.addr, metadata !13851, metadata !DIExpression()), !dbg !13852
  %0 = load i8, i8* %code.addr, align 1, !dbg !13853
  %conv = zext i8 %0 to i32, !dbg !13853
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 128, label %sw.bb2
  ], !dbg !13854

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !13855

sw.bb1:                                           ; preds = %entry
  %1 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp.addr, align 8, !dbg !13857
  %call = call i32 @AdvResetChipAndSB(%struct.adv_dvc_var* %1) #11, !dbg !13858
  br label %sw.epilog, !dbg !13859

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog, !dbg !13860

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !13861

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !13862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.adv_req* @adv_get_reqp(%struct.adv_dvc_var* %adv_dvc, i32 %offset) #2 !dbg !13863 {
entry:
  %adv_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %offset.addr = alloca i32, align 4
  %boardp = alloca %struct.asc_board*, align 8
  store %struct.adv_dvc_var* %adv_dvc, %struct.adv_dvc_var** %adv_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc.addr, metadata !13866, metadata !DIExpression()), !dbg !13867
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13868, metadata !DIExpression()), !dbg !13869
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !13870, metadata !DIExpression()), !dbg !13871
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13872
  %drv_ptr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 18, !dbg !13873
  %1 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !13873
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !13871
  br label %do.body, !dbg !13874

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %offset.addr, align 4, !dbg !13875
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !13875
  %max_host_qng = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 16, !dbg !13875
  %4 = load i8, i8* %max_host_qng, align 4, !dbg !13875
  %conv = zext i8 %4 to i32, !dbg !13875
  %cmp = icmp ugt i32 %2, %conv, !dbg !13875
  %lnot = xor i1 %cmp, true, !dbg !13875
  %lnot2 = xor i1 %lnot, true, !dbg !13875
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13875
  %conv3 = sext i32 %lnot.ext to i64, !dbg !13875
  %tobool = icmp ne i64 %conv3, 0, !dbg !13875
  br i1 %tobool, label %if.then, label %if.end, !dbg !13878

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !13875

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !13879

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !13881

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !13879

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 4272, i32 0, i64 12) #6, !dbg !13883, !srcloc !13885
  br label %do.end7, !dbg !13883

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !13879

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #6, !dbg !13886, !srcloc !13889
  unreachable, !dbg !13890

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !13879

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !13879

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !13878

do.end11:                                         ; preds = %if.end
  %5 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !13891
  %adv_reqp = getelementptr inbounds %struct.asc_board, %struct.asc_board* %5, i32 0, i32 16, !dbg !13892
  %6 = load %struct.adv_req*, %struct.adv_req** %adv_reqp, align 8, !dbg !13892
  %7 = load i32, i32* %offset.addr, align 4, !dbg !13893
  %idxprom = zext i32 %7 to i64, !dbg !13891
  %arrayidx = getelementptr %struct.adv_req, %struct.adv_req* %6, i64 %idxprom, !dbg !13891
  ret %struct.adv_req* %arrayidx, !dbg !13894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adv_isr_callback(%struct.adv_dvc_var* %adv_dvc_varp, %struct.adv_scsi_req_q* %scsiqp) #2 !dbg !13895 {
entry:
  %adv_dvc_varp.addr = alloca %struct.adv_dvc_var*, align 8
  %scsiqp.addr = alloca %struct.adv_scsi_req_q*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %reqp = alloca %struct.adv_req*, align 8
  %sgblkp = alloca %struct.adv_sgblk*, align 8
  %scp = alloca %struct.scsi_cmnd*, align 8
  %resid_cnt = alloca i32, align 4
  %sense_addr = alloca i64, align 8
  store %struct.adv_dvc_var* %adv_dvc_varp, %struct.adv_dvc_var** %adv_dvc_varp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc_varp.addr, metadata !13898, metadata !DIExpression()), !dbg !13899
  store %struct.adv_scsi_req_q* %scsiqp, %struct.adv_scsi_req_q** %scsiqp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_scsi_req_q** %scsiqp.addr, metadata !13900, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !13902, metadata !DIExpression()), !dbg !13903
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp.addr, align 8, !dbg !13904
  %drv_ptr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 18, !dbg !13905
  %1 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !13905
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !13903
  call void @llvm.dbg.declare(metadata %struct.adv_req** %reqp, metadata !13906, metadata !DIExpression()), !dbg !13907
  call void @llvm.dbg.declare(metadata %struct.adv_sgblk** %sgblkp, metadata !13908, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp, metadata !13910, metadata !DIExpression()), !dbg !13911
  call void @llvm.dbg.declare(metadata i32* %resid_cnt, metadata !13912, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.declare(metadata i64* %sense_addr, metadata !13914, metadata !DIExpression()), !dbg !13915
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !13916
  %shost = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 1, !dbg !13917
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13917
  %4 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13918
  %srb_tag = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %4, i32 0, i32 22, !dbg !13919
  %5 = load i32, i32* %srb_tag, align 4, !dbg !13919
  %call = call %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %3, i32 %5) #11, !dbg !13920
  store %struct.scsi_cmnd* %call, %struct.scsi_cmnd** %scp, align 8, !dbg !13921
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13922
  %cmp = icmp eq %struct.scsi_cmnd* %6, null, !dbg !13924
  br i1 %cmp, label %if.then, label %if.end, !dbg !13925

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !13926
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #12, !dbg !13926
  br label %while.end, !dbg !13929

if.end:                                           ; preds = %entry
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13930
  %host_scribble = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 23, !dbg !13931
  %8 = load i8*, i8** %host_scribble, align 8, !dbg !13931
  %9 = bitcast i8* %8 to %struct.adv_req*, !dbg !13932
  store %struct.adv_req* %9, %struct.adv_req** %reqp, align 8, !dbg !13933
  %10 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !13934
  %cmp3 = icmp eq %struct.adv_req* %10, null, !dbg !13936
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !13937

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !13938
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !13938
  br label %while.end, !dbg !13941

if.end7:                                          ; preds = %if.end
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13942
  %host_scribble8 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 23, !dbg !13943
  store i8* null, i8** %host_scribble8, align 8, !dbg !13944
  %12 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !13945
  %cmndp = getelementptr inbounds %struct.adv_req, %struct.adv_req* %12, i32 0, i32 2, !dbg !13946
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %cmndp, align 32, !dbg !13947
  %13 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !13948
  %shost9 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 1, !dbg !13948
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost9, align 8, !dbg !13948
  %call10 = call i8* @shost_priv(%struct.Scsi_Host* %14) #11, !dbg !13948
  %15 = bitcast i8* %call10 to %struct.asc_board*, !dbg !13948
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %15, i32 0, i32 12, !dbg !13948
  %callback = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 4, !dbg !13948
  %16 = load i32, i32* %callback, align 8, !dbg !13948
  %add = add i32 %16, 1, !dbg !13948
  store i32 %add, i32* %callback, align 8, !dbg !13948
  %17 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13949
  %sense_addr11 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %17, i32 0, i32 6, !dbg !13949
  %18 = load i32, i32* %sense_addr11, align 4, !dbg !13949
  %conv = zext i32 %18 to i64, !dbg !13949
  store i64 %conv, i64* %sense_addr, align 8, !dbg !13950
  %19 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !13951
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %19, i32 0, i32 0, !dbg !13951
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13951
  %21 = load i64, i64* %sense_addr, align 8, !dbg !13951
  call void @dma_unmap_single_attrs(%struct.device* %20, i64 %21, i64 96, i32 2, i64 0) #11, !dbg !13951
  %22 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13952
  %done_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %22, i32 0, i32 12, !dbg !13953
  %23 = load i8, i8* %done_status, align 8, !dbg !13953
  %conv12 = zext i8 %23 to i32, !dbg !13952
  switch i32 %conv12, label %sw.default44 [
    i32 1, label %sw.bb
    i32 4, label %sw.bb24
    i32 2, label %sw.bb39
  ], !dbg !13954

sw.bb:                                            ; preds = %if.end7
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13955
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 24, !dbg !13957
  store i32 0, i32* %result, align 8, !dbg !13958
  %25 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13959
  %data_cnt = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %25, i32 0, i32 5, !dbg !13959
  %26 = load i32, i32* %data_cnt, align 8, !dbg !13959
  store i32 %26, i32* %resid_cnt, align 4, !dbg !13960
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13961
  %call13 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %27) #11, !dbg !13963
  %cmp14 = icmp ne i32 %call13, 0, !dbg !13964
  br i1 %cmp14, label %land.lhs.true, label %if.end23, !dbg !13965

land.lhs.true:                                    ; preds = %sw.bb
  %28 = load i32, i32* %resid_cnt, align 4, !dbg !13966
  %cmp16 = icmp ne i32 %28, 0, !dbg !13967
  br i1 %cmp16, label %land.lhs.true18, label %if.end23, !dbg !13968

land.lhs.true18:                                  ; preds = %land.lhs.true
  %29 = load i32, i32* %resid_cnt, align 4, !dbg !13969
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13970
  %call19 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %30) #11, !dbg !13971
  %cmp20 = icmp ule i32 %29, %call19, !dbg !13972
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !13973

if.then22:                                        ; preds = %land.lhs.true18
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13974
  %32 = load i32, i32* %resid_cnt, align 4, !dbg !13976
  call void @scsi_set_resid(%struct.scsi_cmnd* %31, i32 %32) #11, !dbg !13977
  br label %if.end23, !dbg !13978

if.end23:                                         ; preds = %if.then22, %land.lhs.true18, %land.lhs.true, %sw.bb
  br label %sw.epilog49, !dbg !13979

sw.bb24:                                          ; preds = %if.end7
  %33 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13980
  %host_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %33, i32 0, i32 14, !dbg !13981
  %34 = load i8, i8* %host_status, align 2, !dbg !13981
  %conv25 = zext i8 %34 to i32, !dbg !13980
  switch i32 %conv25, label %sw.default [
    i32 0, label %sw.bb26
  ], !dbg !13982

sw.bb26:                                          ; preds = %sw.bb24
  %35 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13983
  %scsi_status = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %35, i32 0, i32 13, !dbg !13986
  %36 = load i8, i8* %scsi_status, align 1, !dbg !13986
  %conv27 = zext i8 %36 to i32, !dbg !13983
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !13987
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !13988

if.then30:                                        ; preds = %sw.bb26
  %37 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13989
  %scsi_status31 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %37, i32 0, i32 13, !dbg !13989
  %38 = load i8, i8* %scsi_status31, align 1, !dbg !13989
  %conv32 = zext i8 %38 to i32, !dbg !13989
  %or = or i32 134217728, %conv32, !dbg !13991
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13992
  %result33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 24, !dbg !13993
  store i32 %or, i32* %result33, align 8, !dbg !13994
  br label %if.end37, !dbg !13995

if.else:                                          ; preds = %sw.bb26
  %40 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !13996
  %scsi_status34 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %40, i32 0, i32 13, !dbg !13996
  %41 = load i8, i8* %scsi_status34, align 1, !dbg !13996
  %conv35 = zext i8 %41 to i32, !dbg !13996
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !13998
  %result36 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 24, !dbg !13999
  store i32 %conv35, i32* %result36, align 8, !dbg !14000
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then30
  br label %sw.epilog, !dbg !14001

sw.default:                                       ; preds = %sw.bb24
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !14002
  %result38 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 24, !dbg !14003
  store i32 262144, i32* %result38, align 8, !dbg !14004
  br label %sw.epilog, !dbg !14005

sw.epilog:                                        ; preds = %sw.default, %if.end37
  br label %sw.epilog49, !dbg !14006

sw.bb39:                                          ; preds = %if.end7
  %44 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !14007
  %scsi_status40 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %44, i32 0, i32 13, !dbg !14007
  %45 = load i8, i8* %scsi_status40, align 1, !dbg !14007
  %conv41 = zext i8 %45 to i32, !dbg !14007
  %or42 = or i32 327680, %conv41, !dbg !14008
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !14009
  %result43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 24, !dbg !14010
  store i32 %or42, i32* %result43, align 8, !dbg !14011
  br label %sw.epilog49, !dbg !14012

sw.default44:                                     ; preds = %if.end7
  %47 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !14013
  %scsi_status45 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %47, i32 0, i32 13, !dbg !14013
  %48 = load i8, i8* %scsi_status45, align 1, !dbg !14013
  %conv46 = zext i8 %48 to i32, !dbg !14013
  %or47 = or i32 458752, %conv46, !dbg !14014
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !14015
  %result48 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 24, !dbg !14016
  store i32 %or47, i32* %result48, align 8, !dbg !14017
  br label %sw.epilog49, !dbg !14018

sw.epilog49:                                      ; preds = %sw.default44, %sw.bb39, %sw.epilog, %if.end23
  %50 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14019
  %init_tidmask = getelementptr inbounds %struct.asc_board, %struct.asc_board* %50, i32 0, i32 7, !dbg !14021
  %51 = load i16, i16* %init_tidmask, align 4, !dbg !14021
  %conv50 = zext i16 %51 to i32, !dbg !14019
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !14022
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %52, i32 0, i32 1, !dbg !14022
  %53 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !14022
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %53, i32 0, i32 16, !dbg !14022
  %54 = load i32, i32* %id, align 8, !dbg !14022
  %and = and i32 %54, 15, !dbg !14022
  %shl = shl i32 1, %and, !dbg !14022
  %and51 = and i32 %conv50, %shl, !dbg !14023
  %cmp52 = icmp eq i32 %and51, 0, !dbg !14024
  br i1 %cmp52, label %land.lhs.true54, label %if.end73, !dbg !14025

land.lhs.true54:                                  ; preds = %sw.epilog49
  %55 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !14026
  %done_status55 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %55, i32 0, i32 12, !dbg !14027
  %56 = load i8, i8* %done_status55, align 8, !dbg !14027
  %conv56 = zext i8 %56 to i32, !dbg !14026
  %cmp57 = icmp eq i32 %conv56, 1, !dbg !14028
  br i1 %cmp57, label %land.lhs.true59, label %if.end73, !dbg !14029

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %57 = load %struct.adv_scsi_req_q*, %struct.adv_scsi_req_q** %scsiqp.addr, align 8, !dbg !14030
  %host_status60 = getelementptr inbounds %struct.adv_scsi_req_q, %struct.adv_scsi_req_q* %57, i32 0, i32 14, !dbg !14031
  %58 = load i8, i8* %host_status60, align 2, !dbg !14031
  %conv61 = zext i8 %58 to i32, !dbg !14030
  %cmp62 = icmp eq i32 %conv61, 0, !dbg !14032
  br i1 %cmp62, label %if.then64, label %if.end73, !dbg !14033

if.then64:                                        ; preds = %land.lhs.true59
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !14034
  %device65 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %59, i32 0, i32 1, !dbg !14034
  %60 = load %struct.scsi_device*, %struct.scsi_device** %device65, align 8, !dbg !14034
  %id66 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %60, i32 0, i32 16, !dbg !14034
  %61 = load i32, i32* %id66, align 8, !dbg !14034
  %and67 = and i32 %61, 15, !dbg !14034
  %shl68 = shl i32 1, %and67, !dbg !14034
  %62 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14036
  %init_tidmask69 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %62, i32 0, i32 7, !dbg !14037
  %63 = load i16, i16* %init_tidmask69, align 4, !dbg !14038
  %conv70 = zext i16 %63 to i32, !dbg !14038
  %or71 = or i32 %conv70, %shl68, !dbg !14038
  %conv72 = trunc i32 %or71 to i16, !dbg !14038
  store i16 %conv72, i16* %init_tidmask69, align 4, !dbg !14038
  br label %if.end73, !dbg !14039

if.end73:                                         ; preds = %if.then64, %land.lhs.true59, %land.lhs.true54, %sw.epilog49
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !14040
  call void @asc_scsi_done(%struct.scsi_cmnd* %64) #11, !dbg !14041
  br label %while.cond, !dbg !14042

while.cond:                                       ; preds = %while.body, %if.end73
  %65 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !14043
  %sgblkp74 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %65, i32 0, i32 4, !dbg !14044
  %66 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp74, align 16, !dbg !14044
  store %struct.adv_sgblk* %66, %struct.adv_sgblk** %sgblkp, align 8, !dbg !14045
  %cmp75 = icmp ne %struct.adv_sgblk* %66, null, !dbg !14046
  br i1 %cmp75, label %while.body, label %while.end, !dbg !14042

while.body:                                       ; preds = %while.cond
  %67 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !14047
  %next_sgblkp = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %67, i32 0, i32 2, !dbg !14049
  %68 = load %struct.adv_sgblk*, %struct.adv_sgblk** %next_sgblkp, align 8, !dbg !14049
  %69 = load %struct.adv_req*, %struct.adv_req** %reqp, align 8, !dbg !14050
  %sgblkp77 = getelementptr inbounds %struct.adv_req, %struct.adv_req* %69, i32 0, i32 4, !dbg !14051
  store %struct.adv_sgblk* %68, %struct.adv_sgblk** %sgblkp77, align 16, !dbg !14052
  %70 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14053
  %adv_sgblk_pool = getelementptr inbounds %struct.asc_board, %struct.asc_board* %70, i32 0, i32 19, !dbg !14054
  %71 = load %struct.dma_pool*, %struct.dma_pool** %adv_sgblk_pool, align 8, !dbg !14054
  %72 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !14055
  %73 = bitcast %struct.adv_sgblk* %72 to i8*, !dbg !14055
  %74 = load %struct.adv_sgblk*, %struct.adv_sgblk** %sgblkp, align 8, !dbg !14056
  %sg_addr = getelementptr inbounds %struct.adv_sgblk, %struct.adv_sgblk* %74, i32 0, i32 1, !dbg !14057
  %75 = load i64, i64* %sg_addr, align 8, !dbg !14057
  call void @dma_pool_free(%struct.dma_pool* %71, i8* %73, i64 %75) #11, !dbg !14058
  br label %while.cond, !dbg !14042, !llvm.loop !14059

while.end:                                        ; preds = %if.then, %if.then4, %while.cond
  ret void, !dbg !14061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %shost, i32 %tag) #2 !dbg !14062 {
entry:
  %retval = alloca %struct.scsi_cmnd*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %tag.addr = alloca i32, align 4
  %req = alloca %struct.request*, align 8
  %hwq = alloca i16, align 2
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !14066, metadata !DIExpression()), !dbg !14067
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !14070, metadata !DIExpression()), !dbg !14071
  store %struct.request* null, %struct.request** %req, align 8, !dbg !14071
  call void @llvm.dbg.declare(metadata i16* %hwq, metadata !14072, metadata !DIExpression()), !dbg !14073
  %0 = load i32, i32* %tag.addr, align 4, !dbg !14074
  %cmp = icmp eq i32 %0, -1, !dbg !14076
  br i1 %cmp, label %if.then, label %if.end, !dbg !14077

if.then:                                          ; preds = %entry
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !14078
  br label %return, !dbg !14078

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %tag.addr, align 4, !dbg !14079
  %call = call zeroext i16 @blk_mq_unique_tag_to_hwq(i32 %1) #11, !dbg !14080
  store i16 %call, i16* %hwq, align 2, !dbg !14081
  %2 = load i16, i16* %hwq, align 2, !dbg !14082
  %conv = zext i16 %2 to i32, !dbg !14082
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14084
  %tag_set = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 12, !dbg !14085
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tag_set, i32 0, i32 3, !dbg !14086
  %4 = load i32, i32* %nr_hw_queues, align 8, !dbg !14086
  %cmp1 = icmp ult i32 %conv, %4, !dbg !14087
  br i1 %cmp1, label %if.then3, label %if.end8, !dbg !14088

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14089
  %tag_set4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 12, !dbg !14091
  %tags = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tag_set4, i32 0, i32 14, !dbg !14092
  %6 = load %struct.blk_mq_tags**, %struct.blk_mq_tags*** %tags, align 8, !dbg !14092
  %7 = load i16, i16* %hwq, align 2, !dbg !14093
  %idxprom = zext i16 %7 to i64, !dbg !14089
  %arrayidx = getelementptr %struct.blk_mq_tags*, %struct.blk_mq_tags** %6, i64 %idxprom, !dbg !14089
  %8 = load %struct.blk_mq_tags*, %struct.blk_mq_tags** %arrayidx, align 8, !dbg !14089
  %9 = load i32, i32* %tag.addr, align 4, !dbg !14094
  %call5 = call zeroext i16 @blk_mq_unique_tag_to_tag(i32 %9) #11, !dbg !14095
  %conv6 = zext i16 %call5 to i32, !dbg !14095
  %call7 = call %struct.request* @blk_mq_tag_to_rq(%struct.blk_mq_tags* %8, i32 %conv6) #11, !dbg !14096
  store %struct.request* %call7, %struct.request** %req, align 8, !dbg !14097
  br label %if.end8, !dbg !14098

if.end8:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.request*, %struct.request** %req, align 8, !dbg !14099
  %tobool = icmp ne %struct.request* %10, null, !dbg !14099
  br i1 %tobool, label %lor.lhs.false, label %if.then11, !dbg !14101

lor.lhs.false:                                    ; preds = %if.end8
  %11 = load %struct.request*, %struct.request** %req, align 8, !dbg !14102
  %call9 = call i32 @blk_mq_request_started(%struct.request* %11) #11, !dbg !14103
  %tobool10 = icmp ne i32 %call9, 0, !dbg !14103
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !14104

if.then11:                                        ; preds = %lor.lhs.false, %if.end8
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !14105
  br label %return, !dbg !14105

if.end12:                                         ; preds = %lor.lhs.false
  %12 = load %struct.request*, %struct.request** %req, align 8, !dbg !14106
  %call13 = call i8* @blk_mq_rq_to_pdu(%struct.request* %12) #11, !dbg !14107
  %13 = bitcast i8* %call13 to %struct.scsi_cmnd*, !dbg !14107
  store %struct.scsi_cmnd* %13, %struct.scsi_cmnd** %retval, align 8, !dbg !14108
  br label %return, !dbg !14108

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %retval, align 8, !dbg !14109
  ret %struct.scsi_cmnd* %14, !dbg !14109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_set_resid(%struct.scsi_cmnd* %cmd, i32 %resid) #2 !dbg !14110 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %resid.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !14113, metadata !DIExpression()), !dbg !14114
  store i32 %resid, i32* %resid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resid.addr, metadata !14115, metadata !DIExpression()), !dbg !14116
  %0 = load i32, i32* %resid.addr, align 4, !dbg !14117
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14118
  %req = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 0, !dbg !14119
  %resid_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %req, i32 0, i32 5, !dbg !14120
  store i32 %0, i32* %resid_len, align 4, !dbg !14121
  ret void, !dbg !14122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @blk_mq_unique_tag_to_hwq(i32 %unique_tag) #2 !dbg !14123 {
entry:
  %unique_tag.addr = alloca i32, align 4
  store i32 %unique_tag, i32* %unique_tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unique_tag.addr, metadata !14126, metadata !DIExpression()), !dbg !14127
  %0 = load i32, i32* %unique_tag.addr, align 4, !dbg !14128
  %shr = lshr i32 %0, 16, !dbg !14129
  %conv = trunc i32 %shr to i16, !dbg !14128
  ret i16 %conv, !dbg !14130
}

; Function Attrs: noredzone
declare dso_local %struct.request* @blk_mq_tag_to_rq(%struct.blk_mq_tags*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @blk_mq_unique_tag_to_tag(i32 %unique_tag) #2 !dbg !14131 {
entry:
  %unique_tag.addr = alloca i32, align 4
  store i32 %unique_tag, i32* %unique_tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unique_tag.addr, metadata !14132, metadata !DIExpression()), !dbg !14133
  %0 = load i32, i32* %unique_tag.addr, align 4, !dbg !14134
  %and = and i32 %0, 65535, !dbg !14135
  %conv = trunc i32 %and to i16, !dbg !14134
  ret i16 %conv, !dbg !14136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_mq_request_started(%struct.request* %rq) #2 !dbg !14137 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14140, metadata !DIExpression()), !dbg !14141
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14142
  %call = call i32 @blk_mq_rq_state(%struct.request* %0) #11, !dbg !14143
  %cmp = icmp ne i32 %call, 0, !dbg !14144
  %conv = zext i1 %cmp to i32, !dbg !14144
  ret i32 %conv, !dbg !14145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #2 !dbg !14146 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14149, metadata !DIExpression()), !dbg !14150
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14151
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !14152
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !14151
  ret i8* %1, !dbg !14153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_mq_rq_state(%struct.request* %rq) #2 !dbg !14154 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  %tmp = alloca i32, align 4
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14157, metadata !DIExpression()), !dbg !14158
  br label %do.body, !dbg !14159

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14161

do.end:                                           ; preds = %do.body
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14159
  %state = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 24, !dbg !14159
  %1 = load volatile i32, i32* %state, align 4, !dbg !14159
  store i32 %1, i32* %tmp, align 4, !dbg !14161
  %2 = load i32, i32* %tmp, align 4, !dbg !14159
  ret i32 %2, !dbg !14163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_narrow_slave_configure(%struct.scsi_device* %sdev, %struct.asc_dvc_var* %asc_dvc) #2 !dbg !14164 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %tid_bit = alloca i8, align 1
  %orig_use_tagged_qng = alloca i8, align 1
  %orig_init_sdtr = alloca i8, align 1
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !14167, metadata !DIExpression()), !dbg !14168
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !14169, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.declare(metadata i8* %tid_bit, metadata !14171, metadata !DIExpression()), !dbg !14172
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14173
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 16, !dbg !14174
  %1 = load i32, i32* %id, align 8, !dbg !14174
  %shl = shl i32 1, %1, !dbg !14175
  %conv = trunc i32 %shl to i8, !dbg !14176
  store i8 %conv, i8* %tid_bit, align 1, !dbg !14172
  call void @llvm.dbg.declare(metadata i8* %orig_use_tagged_qng, metadata !14177, metadata !DIExpression()), !dbg !14178
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14179
  %use_tagged_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %2, i32 0, i32 7, !dbg !14180
  %3 = load i8, i8* %use_tagged_qng, align 2, !dbg !14180
  store i8 %3, i8* %orig_use_tagged_qng, align 1, !dbg !14178
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14181
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 18, !dbg !14183
  %5 = load i64, i64* %lun, align 8, !dbg !14183
  %cmp = icmp eq i64 %5, 0, !dbg !14184
  br i1 %cmp, label %if.then, label %if.end22, !dbg !14185

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %orig_init_sdtr, metadata !14186, metadata !DIExpression()), !dbg !14188
  %6 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14189
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %6, i32 0, i32 5, !dbg !14190
  %7 = load i8, i8* %init_sdtr, align 4, !dbg !14190
  store i8 %7, i8* %orig_init_sdtr, align 1, !dbg !14188
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14191
  %cfg = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %8, i32 0, i32 26, !dbg !14193
  %9 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg, align 8, !dbg !14193
  %sdtr_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %9, i32 0, i32 3, !dbg !14194
  %10 = load i8, i8* %sdtr_enable, align 1, !dbg !14194
  %conv2 = zext i8 %10 to i32, !dbg !14191
  %11 = load i8, i8* %tid_bit, align 1, !dbg !14195
  %conv3 = zext i8 %11 to i32, !dbg !14195
  %and = and i32 %conv2, %conv3, !dbg !14196
  %tobool = icmp ne i32 %and, 0, !dbg !14196
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !14197

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14198
  %sdtr = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 39, !dbg !14199
  %13 = bitcast [6 x i8]* %sdtr to i48*, !dbg !14199
  %bf.load = load i48, i48* %13, align 4, !dbg !14199
  %bf.lshr = lshr i48 %bf.load, 8, !dbg !14199
  %bf.clear = and i48 %bf.lshr, 1, !dbg !14199
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !14199
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !14198
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !14200

if.then5:                                         ; preds = %land.lhs.true
  %14 = load i8, i8* %tid_bit, align 1, !dbg !14201
  %conv6 = zext i8 %14 to i32, !dbg !14201
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14203
  %init_sdtr7 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %15, i32 0, i32 5, !dbg !14204
  %16 = load i8, i8* %init_sdtr7, align 4, !dbg !14205
  %conv8 = zext i8 %16 to i32, !dbg !14205
  %or = or i32 %conv8, %conv6, !dbg !14205
  %conv9 = trunc i32 %or to i8, !dbg !14205
  store i8 %conv9, i8* %init_sdtr7, align 4, !dbg !14205
  br label %if.end, !dbg !14206

if.else:                                          ; preds = %land.lhs.true, %if.then
  %17 = load i8, i8* %tid_bit, align 1, !dbg !14207
  %conv10 = zext i8 %17 to i32, !dbg !14207
  %neg = xor i32 %conv10, -1, !dbg !14209
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14210
  %init_sdtr11 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %18, i32 0, i32 5, !dbg !14211
  %19 = load i8, i8* %init_sdtr11, align 4, !dbg !14212
  %conv12 = zext i8 %19 to i32, !dbg !14212
  %and13 = and i32 %conv12, %neg, !dbg !14212
  %conv14 = trunc i32 %and13 to i8, !dbg !14212
  store i8 %conv14, i8* %init_sdtr11, align 4, !dbg !14212
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %20 = load i8, i8* %orig_init_sdtr, align 1, !dbg !14213
  %conv15 = zext i8 %20 to i32, !dbg !14213
  %21 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14215
  %init_sdtr16 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %21, i32 0, i32 5, !dbg !14216
  %22 = load i8, i8* %init_sdtr16, align 4, !dbg !14216
  %conv17 = zext i8 %22 to i32, !dbg !14215
  %cmp18 = icmp ne i32 %conv15, %conv17, !dbg !14217
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !14218

if.then20:                                        ; preds = %if.end
  %23 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14219
  %24 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14220
  call void @AscAsyncFix(%struct.asc_dvc_var* %23, %struct.scsi_device* %24) #11, !dbg !14221
  br label %if.end21, !dbg !14221

if.end21:                                         ; preds = %if.then20, %if.end
  br label %if.end22, !dbg !14222

if.end22:                                         ; preds = %if.end21, %entry
  %25 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14223
  %tagged_supported = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 39, !dbg !14225
  %26 = bitcast [6 x i8]* %tagged_supported to i48*, !dbg !14225
  %bf.load23 = load i48, i48* %26, align 4, !dbg !14225
  %bf.lshr24 = lshr i48 %bf.load23, 11, !dbg !14225
  %bf.clear25 = and i48 %bf.lshr24, 1, !dbg !14225
  %bf.cast26 = trunc i48 %bf.clear25 to i32, !dbg !14225
  %tobool27 = icmp ne i32 %bf.cast26, 0, !dbg !14223
  br i1 %tobool27, label %if.then28, label %if.else53, !dbg !14226

if.then28:                                        ; preds = %if.end22
  %27 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14227
  %cfg29 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %27, i32 0, i32 26, !dbg !14230
  %28 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg29, align 8, !dbg !14230
  %cmd_qng_enabled = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %28, i32 0, i32 1, !dbg !14231
  %29 = load i8, i8* %cmd_qng_enabled, align 1, !dbg !14231
  %conv30 = zext i8 %29 to i32, !dbg !14227
  %30 = load i8, i8* %tid_bit, align 1, !dbg !14232
  %conv31 = zext i8 %30 to i32, !dbg !14232
  %and32 = and i32 %conv30, %conv31, !dbg !14233
  %tobool33 = icmp ne i32 %and32, 0, !dbg !14233
  br i1 %tobool33, label %if.then34, label %if.end52, !dbg !14234

if.then34:                                        ; preds = %if.then28
  %31 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14235
  %lun35 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %31, i32 0, i32 18, !dbg !14238
  %32 = load i64, i64* %lun35, align 8, !dbg !14238
  %cmp36 = icmp eq i64 %32, 0, !dbg !14239
  br i1 %cmp36, label %if.then38, label %if.end49, !dbg !14240

if.then38:                                        ; preds = %if.then34
  %33 = load i8, i8* %tid_bit, align 1, !dbg !14241
  %conv39 = zext i8 %33 to i32, !dbg !14241
  %34 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14243
  %cfg40 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %34, i32 0, i32 26, !dbg !14244
  %35 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg40, align 8, !dbg !14244
  %can_tagged_qng = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %35, i32 0, i32 0, !dbg !14245
  %36 = load i8, i8* %can_tagged_qng, align 2, !dbg !14246
  %conv41 = zext i8 %36 to i32, !dbg !14246
  %or42 = or i32 %conv41, %conv39, !dbg !14246
  %conv43 = trunc i32 %or42 to i8, !dbg !14246
  store i8 %conv43, i8* %can_tagged_qng, align 2, !dbg !14246
  %37 = load i8, i8* %tid_bit, align 1, !dbg !14247
  %conv44 = zext i8 %37 to i32, !dbg !14247
  %38 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14248
  %use_tagged_qng45 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %38, i32 0, i32 7, !dbg !14249
  %39 = load i8, i8* %use_tagged_qng45, align 2, !dbg !14250
  %conv46 = zext i8 %39 to i32, !dbg !14250
  %or47 = or i32 %conv46, %conv44, !dbg !14250
  %conv48 = trunc i32 %or47 to i8, !dbg !14250
  store i8 %conv48, i8* %use_tagged_qng45, align 2, !dbg !14250
  br label %if.end49, !dbg !14251

if.end49:                                         ; preds = %if.then38, %if.then34
  %40 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14252
  %41 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14253
  %max_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %41, i32 0, i32 22, !dbg !14254
  %42 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14255
  %id50 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %42, i32 0, i32 16, !dbg !14256
  %43 = load i32, i32* %id50, align 8, !dbg !14256
  %idxprom = zext i32 %43 to i64, !dbg !14253
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng, i64 0, i64 %idxprom, !dbg !14253
  %44 = load i8, i8* %arrayidx, align 1, !dbg !14253
  %conv51 = zext i8 %44 to i32, !dbg !14253
  %call = call i32 @scsi_change_queue_depth(%struct.scsi_device* %40, i32 %conv51) #11, !dbg !14257
  br label %if.end52, !dbg !14258

if.end52:                                         ; preds = %if.end49, %if.then28
  br label %if.end72, !dbg !14259

if.else53:                                        ; preds = %if.end22
  %45 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14260
  %lun54 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %45, i32 0, i32 18, !dbg !14263
  %46 = load i64, i64* %lun54, align 8, !dbg !14263
  %cmp55 = icmp eq i64 %46, 0, !dbg !14264
  br i1 %cmp55, label %if.then57, label %if.end71, !dbg !14265

if.then57:                                        ; preds = %if.else53
  %47 = load i8, i8* %tid_bit, align 1, !dbg !14266
  %conv58 = zext i8 %47 to i32, !dbg !14266
  %neg59 = xor i32 %conv58, -1, !dbg !14268
  %48 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14269
  %cfg60 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %48, i32 0, i32 26, !dbg !14270
  %49 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg60, align 8, !dbg !14270
  %can_tagged_qng61 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %49, i32 0, i32 0, !dbg !14271
  %50 = load i8, i8* %can_tagged_qng61, align 2, !dbg !14272
  %conv62 = zext i8 %50 to i32, !dbg !14272
  %and63 = and i32 %conv62, %neg59, !dbg !14272
  %conv64 = trunc i32 %and63 to i8, !dbg !14272
  store i8 %conv64, i8* %can_tagged_qng61, align 2, !dbg !14272
  %51 = load i8, i8* %tid_bit, align 1, !dbg !14273
  %conv65 = zext i8 %51 to i32, !dbg !14273
  %neg66 = xor i32 %conv65, -1, !dbg !14274
  %52 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14275
  %use_tagged_qng67 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %52, i32 0, i32 7, !dbg !14276
  %53 = load i8, i8* %use_tagged_qng67, align 2, !dbg !14277
  %conv68 = zext i8 %53 to i32, !dbg !14277
  %and69 = and i32 %conv68, %neg66, !dbg !14277
  %conv70 = trunc i32 %and69 to i8, !dbg !14277
  store i8 %conv70, i8* %use_tagged_qng67, align 2, !dbg !14277
  br label %if.end71, !dbg !14278

if.end71:                                         ; preds = %if.then57, %if.else53
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end52
  %54 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14279
  %lun73 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %54, i32 0, i32 18, !dbg !14281
  %55 = load i64, i64* %lun73, align 8, !dbg !14281
  %cmp74 = icmp eq i64 %55, 0, !dbg !14282
  br i1 %cmp74, label %land.lhs.true76, label %if.end104, !dbg !14283

land.lhs.true76:                                  ; preds = %if.end72
  %56 = load i8, i8* %orig_use_tagged_qng, align 1, !dbg !14284
  %conv77 = zext i8 %56 to i32, !dbg !14284
  %57 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14285
  %use_tagged_qng78 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %57, i32 0, i32 7, !dbg !14286
  %58 = load i8, i8* %use_tagged_qng78, align 2, !dbg !14286
  %conv79 = zext i8 %58 to i32, !dbg !14285
  %cmp80 = icmp ne i32 %conv77, %conv79, !dbg !14287
  br i1 %cmp80, label %if.then82, label %if.end104, !dbg !14288

if.then82:                                        ; preds = %land.lhs.true76
  %59 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14289
  %iop_base = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %59, i32 0, i32 0, !dbg !14291
  %60 = load i32, i32* %iop_base, align 8, !dbg !14291
  %61 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14292
  %cfg83 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %61, i32 0, i32 26, !dbg !14293
  %62 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg83, align 8, !dbg !14293
  %disc_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %62, i32 0, i32 2, !dbg !14294
  %63 = load i8, i8* %disc_enable, align 2, !dbg !14294
  call void @AscWriteLramByte(i32 %60, i16 zeroext 82, i8 zeroext %63) #11, !dbg !14295
  %64 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14296
  %iop_base84 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %64, i32 0, i32 0, !dbg !14297
  %65 = load i32, i32* %iop_base84, align 8, !dbg !14297
  %66 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14298
  %use_tagged_qng85 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %66, i32 0, i32 7, !dbg !14299
  %67 = load i8, i8* %use_tagged_qng85, align 2, !dbg !14299
  call void @AscWriteLramByte(i32 %65, i16 zeroext 74, i8 zeroext %67) #11, !dbg !14300
  %68 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14301
  %iop_base86 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %68, i32 0, i32 0, !dbg !14302
  %69 = load i32, i32* %iop_base86, align 8, !dbg !14302
  %70 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14303
  %cfg87 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %70, i32 0, i32 26, !dbg !14304
  %71 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg87, align 8, !dbg !14304
  %can_tagged_qng88 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %71, i32 0, i32 0, !dbg !14305
  %72 = load i8, i8* %can_tagged_qng88, align 2, !dbg !14305
  call void @AscWriteLramByte(i32 %69, i16 zeroext 83, i8 zeroext %72) #11, !dbg !14306
  %73 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14307
  %cfg89 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %73, i32 0, i32 26, !dbg !14308
  %74 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg89, align 8, !dbg !14308
  %max_tag_qng = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %74, i32 0, i32 10, !dbg !14309
  %75 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14310
  %id90 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %75, i32 0, i32 16, !dbg !14311
  %76 = load i32, i32* %id90, align 8, !dbg !14311
  %idxprom91 = zext i32 %76 to i64, !dbg !14307
  %arrayidx92 = getelementptr [8 x i8], [8 x i8]* %max_tag_qng, i64 0, i64 %idxprom91, !dbg !14307
  %77 = load i8, i8* %arrayidx92, align 1, !dbg !14307
  %78 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14312
  %max_dvc_qng93 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %78, i32 0, i32 22, !dbg !14313
  %79 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14314
  %id94 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %79, i32 0, i32 16, !dbg !14315
  %80 = load i32, i32* %id94, align 8, !dbg !14315
  %idxprom95 = zext i32 %80 to i64, !dbg !14312
  %arrayidx96 = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng93, i64 0, i64 %idxprom95, !dbg !14312
  store i8 %77, i8* %arrayidx96, align 1, !dbg !14316
  %81 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14317
  %iop_base97 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %81, i32 0, i32 0, !dbg !14318
  %82 = load i32, i32* %iop_base97, align 8, !dbg !14318
  %83 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14319
  %id98 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %83, i32 0, i32 16, !dbg !14320
  %84 = load i32, i32* %id98, align 8, !dbg !14320
  %add = add i32 32, %84, !dbg !14321
  %conv99 = trunc i32 %add to i16, !dbg !14322
  %85 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14323
  %max_dvc_qng100 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %85, i32 0, i32 22, !dbg !14324
  %86 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14325
  %id101 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %86, i32 0, i32 16, !dbg !14326
  %87 = load i32, i32* %id101, align 8, !dbg !14326
  %idxprom102 = zext i32 %87 to i64, !dbg !14323
  %arrayidx103 = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng100, i64 0, i64 %idxprom102, !dbg !14323
  %88 = load i8, i8* %arrayidx103, align 1, !dbg !14323
  call void @AscWriteLramByte(i32 %82, i16 zeroext %conv99, i8 zeroext %88) #11, !dbg !14327
  br label %if.end104, !dbg !14328

if.end104:                                        ; preds = %if.then82, %land.lhs.true76, %if.end72
  ret void, !dbg !14329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_wide_slave_configure(%struct.scsi_device* %sdev, %struct.adv_dvc_var* %adv_dvc) #2 !dbg !14330 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %adv_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %iop_base = alloca i8*, align 8
  %tidmask = alloca i16, align 2
  %cfg_word = alloca i16, align 2
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !14333, metadata !DIExpression()), !dbg !14334
  store %struct.adv_dvc_var* %adv_dvc, %struct.adv_dvc_var** %adv_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc.addr, metadata !14335, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !14337, metadata !DIExpression()), !dbg !14338
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14339
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !14340
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !14340
  store i8* %1, i8** %iop_base, align 8, !dbg !14338
  call void @llvm.dbg.declare(metadata i16* %tidmask, metadata !14341, metadata !DIExpression()), !dbg !14342
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14343
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 16, !dbg !14344
  %3 = load i32, i32* %id, align 8, !dbg !14344
  %shl = shl i32 1, %3, !dbg !14345
  %conv = trunc i32 %shl to i16, !dbg !14346
  store i16 %conv, i16* %tidmask, align 2, !dbg !14342
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14347
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 18, !dbg !14349
  %5 = load i64, i64* %lun, align 8, !dbg !14349
  %cmp = icmp eq i64 %5, 0, !dbg !14350
  br i1 %cmp, label %if.then, label %if.end52, !dbg !14351

if.then:                                          ; preds = %entry
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14352
  %wdtr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 3, !dbg !14355
  %7 = load i16, i16* %wdtr_able, align 4, !dbg !14355
  %conv3 = zext i16 %7 to i32, !dbg !14352
  %8 = load i16, i16* %tidmask, align 2, !dbg !14356
  %conv4 = zext i16 %8 to i32, !dbg !14356
  %and = and i32 %conv3, %conv4, !dbg !14357
  %tobool = icmp ne i32 %and, 0, !dbg !14357
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14358

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14359
  %wdtr = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 39, !dbg !14360
  %10 = bitcast [6 x i8]* %wdtr to i48*, !dbg !14360
  %bf.load = load i48, i48* %10, align 4, !dbg !14360
  %bf.lshr = lshr i48 %bf.load, 9, !dbg !14360
  %bf.clear = and i48 %bf.lshr, 1, !dbg !14360
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !14360
  %tobool5 = icmp ne i32 %bf.cast, 0, !dbg !14359
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !14361

if.then6:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %iop_base, align 8, !dbg !14362
  %12 = load i16, i16* %tidmask, align 2, !dbg !14363
  call void @advansys_wide_enable_wdtr(i8* %11, i16 zeroext %12) #11, !dbg !14364
  br label %if.end, !dbg !14364

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  %13 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14365
  %sdtr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %13, i32 0, i32 4, !dbg !14367
  %14 = load i16, i16* %sdtr_able, align 2, !dbg !14367
  %conv7 = zext i16 %14 to i32, !dbg !14365
  %15 = load i16, i16* %tidmask, align 2, !dbg !14368
  %conv8 = zext i16 %15 to i32, !dbg !14368
  %and9 = and i32 %conv7, %conv8, !dbg !14369
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14369
  br i1 %tobool10, label %land.lhs.true11, label %if.end18, !dbg !14370

land.lhs.true11:                                  ; preds = %if.end
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14371
  %sdtr = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 39, !dbg !14372
  %17 = bitcast [6 x i8]* %sdtr to i48*, !dbg !14372
  %bf.load12 = load i48, i48* %17, align 4, !dbg !14372
  %bf.lshr13 = lshr i48 %bf.load12, 8, !dbg !14372
  %bf.clear14 = and i48 %bf.lshr13, 1, !dbg !14372
  %bf.cast15 = trunc i48 %bf.clear14 to i32, !dbg !14372
  %tobool16 = icmp ne i32 %bf.cast15, 0, !dbg !14371
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !14373

if.then17:                                        ; preds = %land.lhs.true11
  %18 = load i8*, i8** %iop_base, align 8, !dbg !14374
  %19 = load i16, i16* %tidmask, align 2, !dbg !14375
  call void @advansys_wide_enable_sdtr(i8* %18, i16 zeroext %19) #11, !dbg !14376
  br label %if.end18, !dbg !14376

if.end18:                                         ; preds = %if.then17, %land.lhs.true11, %if.end
  %20 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14377
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %20, i32 0, i32 20, !dbg !14379
  %21 = load i8, i8* %chip_type, align 1, !dbg !14379
  %conv19 = zext i8 %21 to i32, !dbg !14377
  %cmp20 = icmp eq i32 %conv19, 3, !dbg !14380
  br i1 %cmp20, label %land.lhs.true22, label %if.end29, !dbg !14381

land.lhs.true22:                                  ; preds = %if.end18
  %22 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14382
  %ppr = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %22, i32 0, i32 39, !dbg !14383
  %23 = bitcast [6 x i8]* %ppr to i48*, !dbg !14383
  %bf.load23 = load i48, i48* %23, align 4, !dbg !14383
  %bf.lshr24 = lshr i48 %bf.load23, 10, !dbg !14383
  %bf.clear25 = and i48 %bf.lshr24, 1, !dbg !14383
  %bf.cast26 = trunc i48 %bf.clear25 to i32, !dbg !14383
  %tobool27 = icmp ne i32 %bf.cast26, 0, !dbg !14382
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !14384

if.then28:                                        ; preds = %land.lhs.true22
  %24 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14385
  %25 = load i8*, i8** %iop_base, align 8, !dbg !14386
  %26 = load i16, i16* %tidmask, align 2, !dbg !14387
  call void @advansys_wide_enable_ppr(%struct.adv_dvc_var* %24, i8* %25, i16 zeroext %26) #11, !dbg !14388
  br label %if.end29, !dbg !14388

if.end29:                                         ; preds = %if.then28, %land.lhs.true22, %if.end18
  %27 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14389
  %tagqng_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %27, i32 0, i32 10, !dbg !14391
  %28 = load i16, i16* %tagqng_able, align 2, !dbg !14391
  %conv30 = zext i16 %28 to i32, !dbg !14389
  %29 = load i16, i16* %tidmask, align 2, !dbg !14392
  %conv31 = zext i16 %29 to i32, !dbg !14392
  %and32 = and i32 %conv30, %conv31, !dbg !14393
  %tobool33 = icmp ne i32 %and32, 0, !dbg !14393
  br i1 %tobool33, label %land.lhs.true34, label %if.end51, !dbg !14394

land.lhs.true34:                                  ; preds = %if.end29
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14395
  %tagged_supported = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %30, i32 0, i32 39, !dbg !14396
  %31 = bitcast [6 x i8]* %tagged_supported to i48*, !dbg !14396
  %bf.load35 = load i48, i48* %31, align 4, !dbg !14396
  %bf.lshr36 = lshr i48 %bf.load35, 11, !dbg !14396
  %bf.clear37 = and i48 %bf.lshr36, 1, !dbg !14396
  %bf.cast38 = trunc i48 %bf.clear37 to i32, !dbg !14396
  %tobool39 = icmp ne i32 %bf.cast38, 0, !dbg !14395
  br i1 %tobool39, label %if.then40, label %if.end51, !dbg !14397

if.then40:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata i16* %cfg_word, metadata !14398, metadata !DIExpression()), !dbg !14400
  br label %do.body, !dbg !14401

do.body:                                          ; preds = %if.then40
  %32 = load i8*, i8** %iop_base, align 8, !dbg !14402
  %add.ptr = getelementptr i8, i8* %32, i64 4, !dbg !14402
  call void @writew(i16 zeroext 160, i8* %add.ptr) #11, !dbg !14402
  %33 = load i8*, i8** %iop_base, align 8, !dbg !14402
  %add.ptr41 = getelementptr i8, i8* %33, i64 6, !dbg !14402
  %call = call zeroext i16 @readw(i8* %add.ptr41) #11, !dbg !14402
  store i16 %call, i16* %cfg_word, align 2, !dbg !14402
  br label %do.end, !dbg !14402

do.end:                                           ; preds = %do.body
  %34 = load i16, i16* %tidmask, align 2, !dbg !14404
  %conv42 = zext i16 %34 to i32, !dbg !14404
  %35 = load i16, i16* %cfg_word, align 2, !dbg !14405
  %conv43 = zext i16 %35 to i32, !dbg !14405
  %or = or i32 %conv43, %conv42, !dbg !14405
  %conv44 = trunc i32 %or to i16, !dbg !14405
  store i16 %conv44, i16* %cfg_word, align 2, !dbg !14405
  %36 = load i8*, i8** %iop_base, align 8, !dbg !14406
  %add.ptr45 = getelementptr i8, i8* %36, i64 4, !dbg !14406
  call void @writew(i16 zeroext 160, i8* %add.ptr45) #11, !dbg !14406
  %37 = load i16, i16* %cfg_word, align 2, !dbg !14406
  %38 = load i8*, i8** %iop_base, align 8, !dbg !14406
  %add.ptr46 = getelementptr i8, i8* %38, i64 6, !dbg !14406
  call void @writew(i16 zeroext %37, i8* %add.ptr46) #11, !dbg !14406
  %39 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14407
  %id47 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %39, i32 0, i32 16, !dbg !14407
  %40 = load i32, i32* %id47, align 8, !dbg !14407
  %add = add i32 208, %40, !dbg !14407
  %conv48 = trunc i32 %add to i16, !dbg !14407
  %41 = load i8*, i8** %iop_base, align 8, !dbg !14407
  %add.ptr49 = getelementptr i8, i8* %41, i64 4, !dbg !14407
  call void @writew(i16 zeroext %conv48, i8* %add.ptr49) #11, !dbg !14407
  %42 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14407
  %max_dvc_qng = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %42, i32 0, i32 12, !dbg !14407
  %43 = load i8, i8* %max_dvc_qng, align 2, !dbg !14407
  %44 = load i8*, i8** %iop_base, align 8, !dbg !14407
  %add.ptr50 = getelementptr i8, i8* %44, i64 6, !dbg !14407
  call void @writeb(i8 zeroext %43, i8* %add.ptr50) #11, !dbg !14407
  br label %if.end51, !dbg !14408

if.end51:                                         ; preds = %do.end, %land.lhs.true34, %if.end29
  br label %if.end52, !dbg !14409

if.end52:                                         ; preds = %if.end51, %entry
  %45 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14410
  %tagqng_able53 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %45, i32 0, i32 10, !dbg !14412
  %46 = load i16, i16* %tagqng_able53, align 2, !dbg !14412
  %conv54 = zext i16 %46 to i32, !dbg !14410
  %47 = load i16, i16* %tidmask, align 2, !dbg !14413
  %conv55 = zext i16 %47 to i32, !dbg !14413
  %and56 = and i32 %conv54, %conv55, !dbg !14414
  %tobool57 = icmp ne i32 %and56, 0, !dbg !14414
  br i1 %tobool57, label %land.lhs.true58, label %if.end69, !dbg !14415

land.lhs.true58:                                  ; preds = %if.end52
  %48 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14416
  %tagged_supported59 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %48, i32 0, i32 39, !dbg !14417
  %49 = bitcast [6 x i8]* %tagged_supported59 to i48*, !dbg !14417
  %bf.load60 = load i48, i48* %49, align 4, !dbg !14417
  %bf.lshr61 = lshr i48 %bf.load60, 11, !dbg !14417
  %bf.clear62 = and i48 %bf.lshr61, 1, !dbg !14417
  %bf.cast63 = trunc i48 %bf.clear62 to i32, !dbg !14417
  %tobool64 = icmp ne i32 %bf.cast63, 0, !dbg !14416
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !14418

if.then65:                                        ; preds = %land.lhs.true58
  %50 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14419
  %51 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14420
  %max_dvc_qng66 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %51, i32 0, i32 12, !dbg !14421
  %52 = load i8, i8* %max_dvc_qng66, align 2, !dbg !14421
  %conv67 = zext i8 %52 to i32, !dbg !14420
  %call68 = call i32 @scsi_change_queue_depth(%struct.scsi_device* %50, i32 %conv67) #11, !dbg !14422
  br label %if.end69, !dbg !14422

if.end69:                                         ; preds = %if.then65, %land.lhs.true58, %if.end52
  ret void, !dbg !14423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscAsyncFix(%struct.asc_dvc_var* %asc_dvc, %struct.scsi_device* %sdev) #2 !dbg !14424 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %type = alloca i8, align 1
  %tid_bits = alloca i8, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !14427, metadata !DIExpression()), !dbg !14428
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !14429, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.declare(metadata i8* %type, metadata !14431, metadata !DIExpression()), !dbg !14432
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14433
  %type1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 22, !dbg !14434
  %1 = load i8, i8* %type1, align 8, !dbg !14434
  store i8 %1, i8* %type, align 1, !dbg !14432
  call void @llvm.dbg.declare(metadata i8* %tid_bits, metadata !14435, metadata !DIExpression()), !dbg !14436
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14437
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 16, !dbg !14438
  %3 = load i32, i32* %id, align 8, !dbg !14438
  %shl = shl i32 1, %3, !dbg !14439
  %conv = trunc i32 %shl to i8, !dbg !14440
  store i8 %conv, i8* %tid_bits, align 1, !dbg !14436
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14441
  %bug_fix_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 3, !dbg !14443
  %5 = load i16, i16* %bug_fix_cntl, align 8, !dbg !14443
  %conv2 = zext i16 %5 to i32, !dbg !14441
  %and = and i32 %conv2, 2, !dbg !14444
  %tobool = icmp ne i32 %and, 0, !dbg !14444
  br i1 %tobool, label %if.end, label %if.then, !dbg !14445

if.then:                                          ; preds = %entry
  br label %if.end52, !dbg !14446

if.end:                                           ; preds = %entry
  %6 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14447
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %6, i32 0, i32 5, !dbg !14449
  %7 = load i8, i8* %init_sdtr, align 4, !dbg !14449
  %conv3 = zext i8 %7 to i32, !dbg !14447
  %8 = load i8, i8* %tid_bits, align 1, !dbg !14450
  %conv4 = zext i8 %8 to i32, !dbg !14450
  %and5 = and i32 %conv3, %conv4, !dbg !14451
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14451
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !14452

if.then7:                                         ; preds = %if.end
  br label %if.end52, !dbg !14453

if.end8:                                          ; preds = %if.end
  %9 = load i8, i8* %type, align 1, !dbg !14454
  %conv9 = sext i8 %9 to i32, !dbg !14454
  %cmp = icmp eq i32 %conv9, 5, !dbg !14456
  br i1 %cmp, label %land.lhs.true, label %if.end17, !dbg !14457

land.lhs.true:                                    ; preds = %if.end8
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14458
  %vendor = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 28, !dbg !14459
  %11 = load i8*, i8** %vendor, align 8, !dbg !14459
  %call = call i32 @strncmp(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i64 3) #11, !dbg !14460
  %cmp11 = icmp eq i32 %call, 0, !dbg !14461
  br i1 %cmp11, label %if.then13, label %if.end17, !dbg !14462

if.then13:                                        ; preds = %land.lhs.true
  %12 = load i8, i8* %tid_bits, align 1, !dbg !14463
  %conv14 = zext i8 %12 to i32, !dbg !14463
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14464
  %pci_fix_asyn_xfer_always = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 27, !dbg !14465
  %14 = load i8, i8* %pci_fix_asyn_xfer_always, align 8, !dbg !14466
  %conv15 = zext i8 %14 to i32, !dbg !14466
  %or = or i32 %conv15, %conv14, !dbg !14466
  %conv16 = trunc i32 %or to i8, !dbg !14466
  store i8 %conv16, i8* %pci_fix_asyn_xfer_always, align 8, !dbg !14466
  br label %if.end17, !dbg !14464

if.end17:                                         ; preds = %if.then13, %land.lhs.true, %if.end8
  %15 = load i8, i8* %tid_bits, align 1, !dbg !14467
  %conv18 = zext i8 %15 to i32, !dbg !14467
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14468
  %pci_fix_asyn_xfer = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %16, i32 0, i32 33, !dbg !14469
  %17 = load i8, i8* %pci_fix_asyn_xfer, align 1, !dbg !14470
  %conv19 = zext i8 %17 to i32, !dbg !14470
  %or20 = or i32 %conv19, %conv18, !dbg !14470
  %conv21 = trunc i32 %or20 to i8, !dbg !14470
  store i8 %conv21, i8* %pci_fix_asyn_xfer, align 1, !dbg !14470
  %18 = load i8, i8* %type, align 1, !dbg !14471
  %conv22 = sext i8 %18 to i32, !dbg !14471
  %cmp23 = icmp eq i32 %conv22, 3, !dbg !14473
  br i1 %cmp23, label %if.then36, label %lor.lhs.false, !dbg !14474

lor.lhs.false:                                    ; preds = %if.end17
  %19 = load i8, i8* %type, align 1, !dbg !14475
  %conv25 = sext i8 %19 to i32, !dbg !14475
  %cmp26 = icmp eq i32 %conv25, 6, !dbg !14476
  br i1 %cmp26, label %if.then36, label %lor.lhs.false28, !dbg !14477

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %20 = load i8, i8* %type, align 1, !dbg !14478
  %conv29 = sext i8 %20 to i32, !dbg !14478
  %cmp30 = icmp eq i32 %conv29, 5, !dbg !14479
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !14480

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %21 = load i8, i8* %type, align 1, !dbg !14481
  %conv33 = sext i8 %21 to i32, !dbg !14481
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !14482
  br i1 %cmp34, label %if.then36, label %if.end42, !dbg !14483

if.then36:                                        ; preds = %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false, %if.end17
  %22 = load i8, i8* %tid_bits, align 1, !dbg !14484
  %conv37 = zext i8 %22 to i32, !dbg !14484
  %neg = xor i32 %conv37, -1, !dbg !14485
  %23 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14486
  %pci_fix_asyn_xfer38 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %23, i32 0, i32 33, !dbg !14487
  %24 = load i8, i8* %pci_fix_asyn_xfer38, align 1, !dbg !14488
  %conv39 = zext i8 %24 to i32, !dbg !14488
  %and40 = and i32 %conv39, %neg, !dbg !14488
  %conv41 = trunc i32 %and40 to i8, !dbg !14488
  store i8 %conv41, i8* %pci_fix_asyn_xfer38, align 1, !dbg !14488
  br label %if.end42, !dbg !14486

if.end42:                                         ; preds = %if.then36, %lor.lhs.false32
  %25 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14489
  %pci_fix_asyn_xfer43 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %25, i32 0, i32 33, !dbg !14491
  %26 = load i8, i8* %pci_fix_asyn_xfer43, align 1, !dbg !14491
  %conv44 = zext i8 %26 to i32, !dbg !14489
  %27 = load i8, i8* %tid_bits, align 1, !dbg !14492
  %conv45 = zext i8 %27 to i32, !dbg !14492
  %and46 = and i32 %conv44, %conv45, !dbg !14493
  %tobool47 = icmp ne i32 %and46, 0, !dbg !14493
  br i1 %tobool47, label %if.then48, label %if.end52, !dbg !14494

if.then48:                                        ; preds = %if.end42
  %28 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !14495
  %iop_base = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %28, i32 0, i32 0, !dbg !14496
  %29 = load i32, i32* %iop_base, align 8, !dbg !14496
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !14497
  %id49 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %30, i32 0, i32 16, !dbg !14498
  %31 = load i32, i32* %id49, align 8, !dbg !14498
  %conv50 = trunc i32 %31 to i8, !dbg !14497
  %call51 = call zeroext i1 @AscSetRunChipSynRegAtID(i32 %29, i8 zeroext %conv50, i8 zeroext 65) #11, !dbg !14499
  br label %if.end52, !dbg !14499

if.end52:                                         ; preds = %if.then, %if.then7, %if.then48, %if.end42
  ret void, !dbg !14500
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_change_queue_depth(%struct.scsi_device*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @AscSetRunChipSynRegAtID(i32 %iop_base, i8 zeroext %tid_no, i8 zeroext %sdtr_data) #2 !dbg !14501 {
entry:
  %iop_base.addr = alloca i32, align 4
  %tid_no.addr = alloca i8, align 1
  %sdtr_data.addr = alloca i8, align 1
  %sta = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !14504, metadata !DIExpression()), !dbg !14505
  store i8 %tid_no, i8* %tid_no.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tid_no.addr, metadata !14506, metadata !DIExpression()), !dbg !14507
  store i8 %sdtr_data, i8* %sdtr_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sdtr_data.addr, metadata !14508, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.declare(metadata i8* %sta, metadata !14510, metadata !DIExpression()), !dbg !14511
  store i8 0, i8* %sta, align 1, !dbg !14511
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !14512
  %call = call zeroext i1 @AscHostReqRiscHalt(i32 %0) #11, !dbg !14514
  br i1 %call, label %if.then, label %if.end, !dbg !14515

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !14516
  %2 = load i8, i8* %tid_no.addr, align 1, !dbg !14518
  %3 = load i8, i8* %sdtr_data.addr, align 1, !dbg !14519
  %call1 = call zeroext i1 @AscSetChipSynRegAtID(i32 %1, i8 zeroext %2, i8 zeroext %3) #11, !dbg !14520
  %frombool = zext i1 %call1 to i8, !dbg !14521
  store i8 %frombool, i8* %sta, align 1, !dbg !14521
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !14522
  %call2 = call i32 @AscStartChip(i32 %4) #11, !dbg !14523
  br label %if.end, !dbg !14524

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* %sta, align 1, !dbg !14525
  %tobool = trunc i8 %5 to i1, !dbg !14525
  ret i1 %tobool, !dbg !14526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @AscHostReqRiscHalt(i32 %iop_base) #2 !dbg !14527 {
entry:
  %retval = alloca i1, align 1
  %iop_base.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %sta = alloca i8, align 1
  %saved_stop_code = alloca i8, align 1
  %__ms = alloca i64, align 8
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !14528, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14530, metadata !DIExpression()), !dbg !14531
  store i32 0, i32* %count, align 4, !dbg !14531
  call void @llvm.dbg.declare(metadata i8* %sta, metadata !14532, metadata !DIExpression()), !dbg !14533
  store i8 0, i8* %sta, align 1, !dbg !14533
  call void @llvm.dbg.declare(metadata i8* %saved_stop_code, metadata !14534, metadata !DIExpression()), !dbg !14535
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !14536
  %call = call zeroext i1 @AscIsChipHalted(i32 %0) #11, !dbg !14538
  br i1 %call, label %if.then, label %if.end, !dbg !14539

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !14540
  br label %return, !dbg !14540

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !14541
  %call1 = call zeroext i8 @AscReadLramByte(i32 %1, i16 zeroext 54) #11, !dbg !14542
  store i8 %call1, i8* %saved_stop_code, align 1, !dbg !14543
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !14544
  call void @AscWriteLramByte(i32 %2, i16 zeroext 54, i8 zeroext 65) #11, !dbg !14545
  br label %do.body, !dbg !14546

do.body:                                          ; preds = %do.cond, %if.end
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !14547
  %call2 = call zeroext i1 @AscIsChipHalted(i32 %3) #11, !dbg !14550
  br i1 %call2, label %if.then3, label %if.end4, !dbg !14551

if.then3:                                         ; preds = %do.body
  store i8 1, i8* %sta, align 1, !dbg !14552
  br label %do.end, !dbg !14554

if.end4:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !14555, metadata !DIExpression()), !dbg !14557
  store i64 100, i64* %__ms, align 8, !dbg !14557
  br label %while.cond, !dbg !14557

while.cond:                                       ; preds = %while.body, %if.end4
  %4 = load i64, i64* %__ms, align 8, !dbg !14557
  %dec = add i64 %4, -1, !dbg !14557
  store i64 %dec, i64* %__ms, align 8, !dbg !14557
  %tobool = icmp ne i64 %4, 0, !dbg !14557
  br i1 %tobool, label %while.body, label %while.end, !dbg !14557

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !14558
  br label %while.cond, !dbg !14557, !llvm.loop !14563

while.end:                                        ; preds = %while.cond
  br label %do.cond, !dbg !14564

do.cond:                                          ; preds = %while.end
  %5 = load i32, i32* %count, align 4, !dbg !14565
  %inc = add i32 %5, 1, !dbg !14565
  store i32 %inc, i32* %count, align 4, !dbg !14565
  %cmp = icmp slt i32 %5, 20, !dbg !14566
  br i1 %cmp, label %do.body, label %do.end, !dbg !14564, !llvm.loop !14567

do.end:                                           ; preds = %do.cond, %if.then3
  %6 = load i32, i32* %iop_base.addr, align 4, !dbg !14569
  %7 = load i8, i8* %saved_stop_code, align 1, !dbg !14570
  call void @AscWriteLramByte(i32 %6, i16 zeroext 54, i8 zeroext %7) #11, !dbg !14571
  %8 = load i8, i8* %sta, align 1, !dbg !14572
  %tobool5 = trunc i8 %8 to i1, !dbg !14572
  store i1 %tobool5, i1* %retval, align 1, !dbg !14573
  br label %return, !dbg !14573

return:                                           ; preds = %do.end, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !14574
  ret i1 %9, !dbg !14574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @AscSetChipSynRegAtID(i32 %iop_base, i8 zeroext %id, i8 zeroext %sdtr_data) #2 !dbg !14575 {
entry:
  %iop_base.addr = alloca i32, align 4
  %id.addr = alloca i8, align 1
  %sdtr_data.addr = alloca i8, align 1
  %org_id = alloca i8, align 1
  %i = alloca i32, align 4
  %sta = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  store i8 %id, i8* %id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %id.addr, metadata !14578, metadata !DIExpression()), !dbg !14579
  store i8 %sdtr_data, i8* %sdtr_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sdtr_data.addr, metadata !14580, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.declare(metadata i8* %org_id, metadata !14582, metadata !DIExpression()), !dbg !14583
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14584, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.declare(metadata i8* %sta, metadata !14586, metadata !DIExpression()), !dbg !14587
  store i8 1, i8* %sta, align 1, !dbg !14587
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !14588
  call void @AscSetBank(i32 %0, i8 zeroext 1) #11, !dbg !14589
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !14590
  %add = add i32 %1, 5, !dbg !14590
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !14590
  store i8 %call, i8* %org_id, align 1, !dbg !14591
  store i32 0, i32* %i, align 4, !dbg !14592
  br label %for.cond, !dbg !14594

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !14595
  %cmp = icmp sle i32 %2, 7, !dbg !14597
  br i1 %cmp, label %for.body, label %for.end, !dbg !14598

for.body:                                         ; preds = %for.cond
  %3 = load i8, i8* %org_id, align 1, !dbg !14599
  %conv = zext i8 %3 to i32, !dbg !14599
  %4 = load i32, i32* %i, align 4, !dbg !14602
  %shl = shl i32 1, %4, !dbg !14603
  %cmp1 = icmp eq i32 %conv, %shl, !dbg !14604
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14605

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14606

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14607

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !14608
  %inc = add i32 %5, 1, !dbg !14608
  store i32 %inc, i32* %i, align 4, !dbg !14608
  br label %for.cond, !dbg !14609, !llvm.loop !14610

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !14612
  %conv3 = trunc i32 %6 to i8, !dbg !14613
  store i8 %conv3, i8* %org_id, align 1, !dbg !14614
  %7 = load i8, i8* %id.addr, align 1, !dbg !14615
  %8 = load i32, i32* %iop_base.addr, align 4, !dbg !14615
  %add4 = add i32 %8, 5, !dbg !14615
  call void @outb(i8 zeroext %7, i32 %add4) #11, !dbg !14615
  %9 = load i32, i32* %iop_base.addr, align 4, !dbg !14616
  %add5 = add i32 %9, 5, !dbg !14616
  %call6 = call zeroext i8 @inb(i32 %add5) #11, !dbg !14616
  %conv7 = zext i8 %call6 to i32, !dbg !14616
  %10 = load i8, i8* %id.addr, align 1, !dbg !14618
  %conv8 = zext i8 %10 to i32, !dbg !14618
  %shl9 = shl i32 1, %conv8, !dbg !14619
  %cmp10 = icmp eq i32 %conv7, %shl9, !dbg !14620
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !14621

if.then12:                                        ; preds = %for.end
  %11 = load i32, i32* %iop_base.addr, align 4, !dbg !14622
  call void @AscSetBank(i32 %11, i8 zeroext 0) #11, !dbg !14624
  %12 = load i8, i8* %sdtr_data.addr, align 1, !dbg !14625
  %13 = load i32, i32* %iop_base.addr, align 4, !dbg !14625
  %add13 = add i32 %13, 11, !dbg !14625
  call void @outb(i8 zeroext %12, i32 %add13) #11, !dbg !14625
  %14 = load i32, i32* %iop_base.addr, align 4, !dbg !14626
  %add14 = add i32 %14, 11, !dbg !14626
  %call15 = call zeroext i8 @inb(i32 %add14) #11, !dbg !14626
  %conv16 = zext i8 %call15 to i32, !dbg !14626
  %15 = load i8, i8* %sdtr_data.addr, align 1, !dbg !14628
  %conv17 = zext i8 %15 to i32, !dbg !14628
  %cmp18 = icmp ne i32 %conv16, %conv17, !dbg !14629
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !14630

if.then20:                                        ; preds = %if.then12
  store i8 0, i8* %sta, align 1, !dbg !14631
  br label %if.end21, !dbg !14633

if.end21:                                         ; preds = %if.then20, %if.then12
  br label %if.end22, !dbg !14634

if.else:                                          ; preds = %for.end
  store i8 0, i8* %sta, align 1, !dbg !14635
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.end21
  %16 = load i32, i32* %iop_base.addr, align 4, !dbg !14637
  call void @AscSetBank(i32 %16, i8 zeroext 1) #11, !dbg !14638
  %17 = load i8, i8* %org_id, align 1, !dbg !14639
  %18 = load i32, i32* %iop_base.addr, align 4, !dbg !14639
  %add23 = add i32 %18, 5, !dbg !14639
  call void @outb(i8 zeroext %17, i32 %add23) #11, !dbg !14639
  %19 = load i32, i32* %iop_base.addr, align 4, !dbg !14640
  call void @AscSetBank(i32 %19, i8 zeroext 0) #11, !dbg !14641
  %20 = load i8, i8* %sta, align 1, !dbg !14642
  %tobool = trunc i8 %20 to i1, !dbg !14642
  ret i1 %tobool, !dbg !14643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_wide_enable_wdtr(i8* %iop_base, i16 zeroext %tidmask) #2 !dbg !14644 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %tidmask.addr = alloca i16, align 2
  %cfg_word = alloca i16, align 2
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !14647, metadata !DIExpression()), !dbg !14648
  store i16 %tidmask, i16* %tidmask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tidmask.addr, metadata !14649, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.declare(metadata i16* %cfg_word, metadata !14651, metadata !DIExpression()), !dbg !14652
  br label %do.body, !dbg !14653

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %iop_base.addr, align 8, !dbg !14654
  %add.ptr = getelementptr i8, i8* %0, i64 4, !dbg !14654
  call void @writew(i16 zeroext 156, i8* %add.ptr) #11, !dbg !14654
  %1 = load i8*, i8** %iop_base.addr, align 8, !dbg !14654
  %add.ptr1 = getelementptr i8, i8* %1, i64 6, !dbg !14654
  %call = call zeroext i16 @readw(i8* %add.ptr1) #11, !dbg !14654
  store i16 %call, i16* %cfg_word, align 2, !dbg !14654
  br label %do.end, !dbg !14654

do.end:                                           ; preds = %do.body
  %2 = load i16, i16* %cfg_word, align 2, !dbg !14656
  %conv = zext i16 %2 to i32, !dbg !14656
  %3 = load i16, i16* %tidmask.addr, align 2, !dbg !14658
  %conv2 = zext i16 %3 to i32, !dbg !14658
  %and = and i32 %conv, %conv2, !dbg !14659
  %cmp = icmp ne i32 %and, 0, !dbg !14660
  br i1 %cmp, label %if.then, label %if.end, !dbg !14661

if.then:                                          ; preds = %do.end
  br label %return, !dbg !14662

if.end:                                           ; preds = %do.end
  %4 = load i16, i16* %tidmask.addr, align 2, !dbg !14663
  %conv4 = zext i16 %4 to i32, !dbg !14663
  %5 = load i16, i16* %cfg_word, align 2, !dbg !14664
  %conv5 = zext i16 %5 to i32, !dbg !14664
  %or = or i32 %conv5, %conv4, !dbg !14664
  %conv6 = trunc i32 %or to i16, !dbg !14664
  store i16 %conv6, i16* %cfg_word, align 2, !dbg !14664
  %6 = load i8*, i8** %iop_base.addr, align 8, !dbg !14665
  %add.ptr7 = getelementptr i8, i8* %6, i64 4, !dbg !14665
  call void @writew(i16 zeroext 156, i8* %add.ptr7) #11, !dbg !14665
  %7 = load i16, i16* %cfg_word, align 2, !dbg !14665
  %8 = load i8*, i8** %iop_base.addr, align 8, !dbg !14665
  %add.ptr8 = getelementptr i8, i8* %8, i64 6, !dbg !14665
  call void @writew(i16 zeroext %7, i8* %add.ptr8) #11, !dbg !14665
  br label %do.body9, !dbg !14666

do.body9:                                         ; preds = %if.end
  %9 = load i8*, i8** %iop_base.addr, align 8, !dbg !14667
  %add.ptr10 = getelementptr i8, i8* %9, i64 4, !dbg !14667
  call void @writew(i16 zeroext 182, i8* %add.ptr10) #11, !dbg !14667
  %10 = load i8*, i8** %iop_base.addr, align 8, !dbg !14667
  %add.ptr11 = getelementptr i8, i8* %10, i64 6, !dbg !14667
  %call12 = call zeroext i16 @readw(i8* %add.ptr11) #11, !dbg !14667
  store i16 %call12, i16* %cfg_word, align 2, !dbg !14667
  br label %do.end13, !dbg !14667

do.end13:                                         ; preds = %do.body9
  %11 = load i16, i16* %tidmask.addr, align 2, !dbg !14669
  %conv14 = zext i16 %11 to i32, !dbg !14669
  %neg = xor i32 %conv14, -1, !dbg !14670
  %12 = load i16, i16* %cfg_word, align 2, !dbg !14671
  %conv15 = zext i16 %12 to i32, !dbg !14671
  %and16 = and i32 %conv15, %neg, !dbg !14671
  %conv17 = trunc i32 %and16 to i16, !dbg !14671
  store i16 %conv17, i16* %cfg_word, align 2, !dbg !14671
  %13 = load i8*, i8** %iop_base.addr, align 8, !dbg !14672
  %add.ptr18 = getelementptr i8, i8* %13, i64 4, !dbg !14672
  call void @writew(i16 zeroext 182, i8* %add.ptr18) #11, !dbg !14672
  %14 = load i16, i16* %cfg_word, align 2, !dbg !14672
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !14672
  %add.ptr19 = getelementptr i8, i8* %15, i64 6, !dbg !14672
  call void @writew(i16 zeroext %14, i8* %add.ptr19) #11, !dbg !14672
  br label %do.body20, !dbg !14673

do.body20:                                        ; preds = %do.end13
  %16 = load i8*, i8** %iop_base.addr, align 8, !dbg !14674
  %add.ptr21 = getelementptr i8, i8* %16, i64 4, !dbg !14674
  call void @writew(i16 zeroext 292, i8* %add.ptr21) #11, !dbg !14674
  %17 = load i8*, i8** %iop_base.addr, align 8, !dbg !14674
  %add.ptr22 = getelementptr i8, i8* %17, i64 6, !dbg !14674
  %call23 = call zeroext i16 @readw(i8* %add.ptr22) #11, !dbg !14674
  store i16 %call23, i16* %cfg_word, align 2, !dbg !14674
  br label %do.end24, !dbg !14674

do.end24:                                         ; preds = %do.body20
  %18 = load i16, i16* %tidmask.addr, align 2, !dbg !14676
  %conv25 = zext i16 %18 to i32, !dbg !14676
  %neg26 = xor i32 %conv25, -1, !dbg !14677
  %19 = load i16, i16* %cfg_word, align 2, !dbg !14678
  %conv27 = zext i16 %19 to i32, !dbg !14678
  %and28 = and i32 %conv27, %neg26, !dbg !14678
  %conv29 = trunc i32 %and28 to i16, !dbg !14678
  store i16 %conv29, i16* %cfg_word, align 2, !dbg !14678
  %20 = load i8*, i8** %iop_base.addr, align 8, !dbg !14679
  %add.ptr30 = getelementptr i8, i8* %20, i64 4, !dbg !14679
  call void @writew(i16 zeroext 292, i8* %add.ptr30) #11, !dbg !14679
  %21 = load i16, i16* %cfg_word, align 2, !dbg !14679
  %22 = load i8*, i8** %iop_base.addr, align 8, !dbg !14679
  %add.ptr31 = getelementptr i8, i8* %22, i64 6, !dbg !14679
  call void @writew(i16 zeroext %21, i8* %add.ptr31) #11, !dbg !14679
  br label %return, !dbg !14680

return:                                           ; preds = %do.end24, %if.then
  ret void, !dbg !14680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_wide_enable_sdtr(i8* %iop_base, i16 zeroext %tidmask) #2 !dbg !14681 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %tidmask.addr = alloca i16, align 2
  %cfg_word = alloca i16, align 2
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !14682, metadata !DIExpression()), !dbg !14683
  store i16 %tidmask, i16* %tidmask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tidmask.addr, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.declare(metadata i16* %cfg_word, metadata !14686, metadata !DIExpression()), !dbg !14687
  br label %do.body, !dbg !14688

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %iop_base.addr, align 8, !dbg !14689
  %add.ptr = getelementptr i8, i8* %0, i64 4, !dbg !14689
  call void @writew(i16 zeroext 158, i8* %add.ptr) #11, !dbg !14689
  %1 = load i8*, i8** %iop_base.addr, align 8, !dbg !14689
  %add.ptr1 = getelementptr i8, i8* %1, i64 6, !dbg !14689
  %call = call zeroext i16 @readw(i8* %add.ptr1) #11, !dbg !14689
  store i16 %call, i16* %cfg_word, align 2, !dbg !14689
  br label %do.end, !dbg !14689

do.end:                                           ; preds = %do.body
  %2 = load i16, i16* %cfg_word, align 2, !dbg !14691
  %conv = zext i16 %2 to i32, !dbg !14691
  %3 = load i16, i16* %tidmask.addr, align 2, !dbg !14693
  %conv2 = zext i16 %3 to i32, !dbg !14693
  %and = and i32 %conv, %conv2, !dbg !14694
  %cmp = icmp ne i32 %and, 0, !dbg !14695
  br i1 %cmp, label %if.then, label %if.end, !dbg !14696

if.then:                                          ; preds = %do.end
  br label %return, !dbg !14697

if.end:                                           ; preds = %do.end
  %4 = load i16, i16* %tidmask.addr, align 2, !dbg !14698
  %conv4 = zext i16 %4 to i32, !dbg !14698
  %5 = load i16, i16* %cfg_word, align 2, !dbg !14699
  %conv5 = zext i16 %5 to i32, !dbg !14699
  %or = or i32 %conv5, %conv4, !dbg !14699
  %conv6 = trunc i32 %or to i16, !dbg !14699
  store i16 %conv6, i16* %cfg_word, align 2, !dbg !14699
  %6 = load i8*, i8** %iop_base.addr, align 8, !dbg !14700
  %add.ptr7 = getelementptr i8, i8* %6, i64 4, !dbg !14700
  call void @writew(i16 zeroext 158, i8* %add.ptr7) #11, !dbg !14700
  %7 = load i16, i16* %cfg_word, align 2, !dbg !14700
  %8 = load i8*, i8** %iop_base.addr, align 8, !dbg !14700
  %add.ptr8 = getelementptr i8, i8* %8, i64 6, !dbg !14700
  call void @writew(i16 zeroext %7, i8* %add.ptr8) #11, !dbg !14700
  br label %do.body9, !dbg !14701

do.body9:                                         ; preds = %if.end
  %9 = load i8*, i8** %iop_base.addr, align 8, !dbg !14702
  %add.ptr10 = getelementptr i8, i8* %9, i64 4, !dbg !14702
  call void @writew(i16 zeroext 182, i8* %add.ptr10) #11, !dbg !14702
  %10 = load i8*, i8** %iop_base.addr, align 8, !dbg !14702
  %add.ptr11 = getelementptr i8, i8* %10, i64 6, !dbg !14702
  %call12 = call zeroext i16 @readw(i8* %add.ptr11) #11, !dbg !14702
  store i16 %call12, i16* %cfg_word, align 2, !dbg !14702
  br label %do.end13, !dbg !14702

do.end13:                                         ; preds = %do.body9
  %11 = load i16, i16* %tidmask.addr, align 2, !dbg !14704
  %conv14 = zext i16 %11 to i32, !dbg !14704
  %neg = xor i32 %conv14, -1, !dbg !14705
  %12 = load i16, i16* %cfg_word, align 2, !dbg !14706
  %conv15 = zext i16 %12 to i32, !dbg !14706
  %and16 = and i32 %conv15, %neg, !dbg !14706
  %conv17 = trunc i32 %and16 to i16, !dbg !14706
  store i16 %conv17, i16* %cfg_word, align 2, !dbg !14706
  %13 = load i8*, i8** %iop_base.addr, align 8, !dbg !14707
  %add.ptr18 = getelementptr i8, i8* %13, i64 4, !dbg !14707
  call void @writew(i16 zeroext 182, i8* %add.ptr18) #11, !dbg !14707
  %14 = load i16, i16* %cfg_word, align 2, !dbg !14707
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !14707
  %add.ptr19 = getelementptr i8, i8* %15, i64 6, !dbg !14707
  call void @writew(i16 zeroext %14, i8* %add.ptr19) #11, !dbg !14707
  br label %return, !dbg !14708

return:                                           ; preds = %do.end13, %if.then
  ret void, !dbg !14708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_wide_enable_ppr(%struct.adv_dvc_var* %adv_dvc, i8* %iop_base, i16 zeroext %tidmask) #2 !dbg !14709 {
entry:
  %adv_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %iop_base.addr = alloca i8*, align 8
  %tidmask.addr = alloca i16, align 2
  store %struct.adv_dvc_var* %adv_dvc, %struct.adv_dvc_var** %adv_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc.addr, metadata !14712, metadata !DIExpression()), !dbg !14713
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !14714, metadata !DIExpression()), !dbg !14715
  store i16 %tidmask, i16* %tidmask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tidmask.addr, metadata !14716, metadata !DIExpression()), !dbg !14717
  br label %do.body, !dbg !14718

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %iop_base.addr, align 8, !dbg !14719
  %add.ptr = getelementptr i8, i8* %0, i64 4, !dbg !14719
  call void @writew(i16 zeroext 378, i8* %add.ptr) #11, !dbg !14719
  %1 = load i8*, i8** %iop_base.addr, align 8, !dbg !14719
  %add.ptr1 = getelementptr i8, i8* %1, i64 6, !dbg !14719
  %call = call zeroext i16 @readw(i8* %add.ptr1) #11, !dbg !14719
  %2 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14719
  %ppr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %2, i32 0, i32 11, !dbg !14719
  store i16 %call, i16* %ppr_able, align 4, !dbg !14719
  br label %do.end, !dbg !14719

do.end:                                           ; preds = %do.body
  %3 = load i16, i16* %tidmask.addr, align 2, !dbg !14721
  %conv = zext i16 %3 to i32, !dbg !14721
  %4 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14722
  %ppr_able2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %4, i32 0, i32 11, !dbg !14723
  %5 = load i16, i16* %ppr_able2, align 4, !dbg !14724
  %conv3 = zext i16 %5 to i32, !dbg !14724
  %or = or i32 %conv3, %conv, !dbg !14724
  %conv4 = trunc i32 %or to i16, !dbg !14724
  store i16 %conv4, i16* %ppr_able2, align 4, !dbg !14724
  %6 = load i8*, i8** %iop_base.addr, align 8, !dbg !14725
  %add.ptr5 = getelementptr i8, i8* %6, i64 4, !dbg !14725
  call void @writew(i16 zeroext 378, i8* %add.ptr5) #11, !dbg !14725
  %7 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc.addr, align 8, !dbg !14725
  %ppr_able6 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %7, i32 0, i32 11, !dbg !14725
  %8 = load i16, i16* %ppr_able6, align 4, !dbg !14725
  %9 = load i8*, i8** %iop_base.addr, align 8, !dbg !14725
  %add.ptr7 = getelementptr i8, i8* %9, i64 6, !dbg !14725
  call void @writew(i16 zeroext %8, i8* %add.ptr7) #11, !dbg !14725
  ret void, !dbg !14726
}

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_adv_bios(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !14727 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %major = alloca i16, align 2
  %minor = alloca i16, align 2
  %letter = alloca i16, align 2
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !14732, metadata !DIExpression()), !dbg !14733
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !14734, metadata !DIExpression()), !dbg !14735
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14736
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !14737
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !14737
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata i16* %major, metadata !14738, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.declare(metadata i16* %minor, metadata !14740, metadata !DIExpression()), !dbg !14741
  call void @llvm.dbg.declare(metadata i16* %letter, metadata !14742, metadata !DIExpression()), !dbg !14743
  %2 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14744
  call void @seq_puts(%struct.seq_file* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0)) #11, !dbg !14745
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14746
  %bios_signature = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 20, !dbg !14748
  %4 = load i16, i16* %bios_signature, align 8, !dbg !14748
  %conv = zext i16 %4 to i32, !dbg !14746
  %cmp = icmp ne i32 %conv, 21930, !dbg !14749
  br i1 %cmp, label %if.then, label %if.else, !dbg !14750

if.then:                                          ; preds = %entry
  %5 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14751
  call void @seq_puts(%struct.seq_file* %5, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.39, i64 0, i64 0)) #11, !dbg !14753
  br label %if.end41, !dbg !14754

if.else:                                          ; preds = %entry
  %6 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14755
  %bios_version = getelementptr inbounds %struct.asc_board, %struct.asc_board* %6, i32 0, i32 21, !dbg !14757
  %7 = load i16, i16* %bios_version, align 2, !dbg !14757
  %conv2 = zext i16 %7 to i32, !dbg !14755
  %shr = ashr i32 %conv2, 12, !dbg !14758
  %and = and i32 %shr, 15, !dbg !14759
  %conv3 = trunc i32 %and to i16, !dbg !14760
  store i16 %conv3, i16* %major, align 2, !dbg !14761
  %8 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14762
  %bios_version4 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %8, i32 0, i32 21, !dbg !14763
  %9 = load i16, i16* %bios_version4, align 2, !dbg !14763
  %conv5 = zext i16 %9 to i32, !dbg !14762
  %shr6 = ashr i32 %conv5, 8, !dbg !14764
  %and7 = and i32 %shr6, 15, !dbg !14765
  %conv8 = trunc i32 %and7 to i16, !dbg !14766
  store i16 %conv8, i16* %minor, align 2, !dbg !14767
  %10 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14768
  %bios_version9 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %10, i32 0, i32 21, !dbg !14769
  %11 = load i16, i16* %bios_version9, align 2, !dbg !14769
  %conv10 = zext i16 %11 to i32, !dbg !14768
  %and11 = and i32 %conv10, 255, !dbg !14770
  %conv12 = trunc i32 %and11 to i16, !dbg !14771
  store i16 %conv12, i16* %letter, align 2, !dbg !14772
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14773
  %13 = load i16, i16* %major, align 2, !dbg !14774
  %conv13 = zext i16 %13 to i32, !dbg !14774
  %14 = load i16, i16* %minor, align 2, !dbg !14775
  %conv14 = zext i16 %14 to i32, !dbg !14775
  %15 = load i16, i16* %letter, align 2, !dbg !14776
  %conv15 = zext i16 %15 to i32, !dbg !14776
  %cmp16 = icmp sge i32 %conv15, 26, !dbg !14777
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !14776

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !14776

cond.false:                                       ; preds = %if.else
  %16 = load i16, i16* %letter, align 2, !dbg !14778
  %conv18 = zext i16 %16 to i32, !dbg !14778
  %add = add i32 %conv18, 65, !dbg !14779
  br label %cond.end, !dbg !14776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 63, %cond.true ], [ %add, %cond.false ], !dbg !14776
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i32 %conv13, i32 %conv14, i32 %cond) #11, !dbg !14780
  %17 = load i16, i16* %major, align 2, !dbg !14781
  %conv19 = zext i16 %17 to i32, !dbg !14781
  %cmp20 = icmp slt i32 %conv19, 3, !dbg !14783
  br i1 %cmp20, label %if.then40, label %lor.lhs.false, !dbg !14784

lor.lhs.false:                                    ; preds = %cond.end
  %18 = load i16, i16* %major, align 2, !dbg !14785
  %conv22 = zext i16 %18 to i32, !dbg !14785
  %cmp23 = icmp sle i32 %conv22, 3, !dbg !14786
  br i1 %cmp23, label %land.lhs.true, label %lor.lhs.false28, !dbg !14787

land.lhs.true:                                    ; preds = %lor.lhs.false
  %19 = load i16, i16* %minor, align 2, !dbg !14788
  %conv25 = zext i16 %19 to i32, !dbg !14788
  %cmp26 = icmp slt i32 %conv25, 1, !dbg !14789
  br i1 %cmp26, label %if.then40, label %lor.lhs.false28, !dbg !14790

lor.lhs.false28:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %20 = load i16, i16* %major, align 2, !dbg !14791
  %conv29 = zext i16 %20 to i32, !dbg !14791
  %cmp30 = icmp sle i32 %conv29, 3, !dbg !14792
  br i1 %cmp30, label %land.lhs.true32, label %if.end, !dbg !14793

land.lhs.true32:                                  ; preds = %lor.lhs.false28
  %21 = load i16, i16* %minor, align 2, !dbg !14794
  %conv33 = zext i16 %21 to i32, !dbg !14794
  %cmp34 = icmp sle i32 %conv33, 1, !dbg !14795
  br i1 %cmp34, label %land.lhs.true36, label %if.end, !dbg !14796

land.lhs.true36:                                  ; preds = %land.lhs.true32
  %22 = load i16, i16* %letter, align 2, !dbg !14797
  %conv37 = zext i16 %22 to i32, !dbg !14797
  %cmp38 = icmp slt i32 %conv37, 8, !dbg !14798
  br i1 %cmp38, label %if.then40, label %if.end, !dbg !14799

if.then40:                                        ; preds = %land.lhs.true36, %land.lhs.true, %cond.end
  %23 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14800
  call void @seq_puts(%struct.seq_file* %23, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.41, i64 0, i64 0)) #11, !dbg !14802
  br label %if.end, !dbg !14803

if.end:                                           ; preds = %if.then40, %land.lhs.true36, %land.lhs.true32, %lor.lhs.false28
  br label %if.end41

if.end41:                                         ; preds = %if.end, %if.then
  ret void, !dbg !14804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_board_devices(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !14805 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %chip_scsi_id = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !14806, metadata !DIExpression()), !dbg !14807
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !14810, metadata !DIExpression()), !dbg !14811
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14812
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !14813
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !14813
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !14811
  call void @llvm.dbg.declare(metadata i32* %chip_scsi_id, metadata !14814, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14816, metadata !DIExpression()), !dbg !14817
  %2 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14818
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14819
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 16, !dbg !14820
  %4 = load i32, i32* %host_no, align 4, !dbg !14820
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.42, i64 0, i64 0), i32 %4) #11, !dbg !14821
  %5 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14822
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %5, i32 0, i32 2, !dbg !14822
  %6 = load i32, i32* %flags, align 8, !dbg !14822
  %and = and i32 %6, 4, !dbg !14822
  %cmp = icmp eq i32 %and, 0, !dbg !14822
  br i1 %cmp, label %if.then, label %if.else, !dbg !14824

if.then:                                          ; preds = %entry
  %7 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14825
  %dvc_cfg = getelementptr inbounds %struct.asc_board, %struct.asc_board* %7, i32 0, i32 5, !dbg !14827
  %asc_dvc_cfg = bitcast %union.anon.78* %dvc_cfg to %struct.asc_dvc_cfg*, !dbg !14828
  %chip_scsi_id1 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %asc_dvc_cfg, i32 0, i32 4, !dbg !14829
  %8 = load i8, i8* %chip_scsi_id1, align 4, !dbg !14829
  %conv = zext i8 %8 to i32, !dbg !14825
  store i32 %conv, i32* %chip_scsi_id, align 4, !dbg !14830
  br label %if.end, !dbg !14831

if.else:                                          ; preds = %entry
  %9 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14832
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 4, !dbg !14834
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !14835
  %chip_scsi_id2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %adv_dvc_var, i32 0, i32 19, !dbg !14836
  %10 = load i8, i8* %chip_scsi_id2, align 8, !dbg !14836
  %conv3 = zext i8 %10 to i32, !dbg !14832
  store i32 %conv3, i32* %chip_scsi_id, align 4, !dbg !14837
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14838
  call void @seq_puts(%struct.seq_file* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #11, !dbg !14839
  store i32 0, i32* %i, align 4, !dbg !14840
  br label %for.cond, !dbg !14842

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !14843
  %cmp4 = icmp sle i32 %12, 15, !dbg !14845
  br i1 %cmp4, label %for.body, label %for.end, !dbg !14846

for.body:                                         ; preds = %for.cond
  %13 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14847
  %init_tidmask = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 7, !dbg !14850
  %14 = load i16, i16* %init_tidmask, align 4, !dbg !14850
  %conv6 = zext i16 %14 to i32, !dbg !14847
  %15 = load i32, i32* %i, align 4, !dbg !14851
  %and7 = and i32 %15, 15, !dbg !14851
  %shl = shl i32 1, %and7, !dbg !14851
  %and8 = and i32 %conv6, %shl, !dbg !14852
  %tobool = icmp ne i32 %and8, 0, !dbg !14852
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !14853

if.then9:                                         ; preds = %for.body
  %16 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14854
  %17 = load i32, i32* %i, align 4, !dbg !14855
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i32 %17) #11, !dbg !14856
  br label %if.end10, !dbg !14856

if.end10:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !14857

for.inc:                                          ; preds = %if.end10
  %18 = load i32, i32* %i, align 4, !dbg !14858
  %inc = add i32 %18, 1, !dbg !14858
  store i32 %inc, i32* %i, align 4, !dbg !14858
  br label %for.cond, !dbg !14859, !llvm.loop !14860

for.end:                                          ; preds = %for.cond
  %19 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14862
  %20 = load i32, i32* %chip_scsi_id, align 4, !dbg !14863
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i64 0, i64 0), i32 %20) #11, !dbg !14864
  ret void, !dbg !14865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_asc_board_eeprom(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !14866 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %asc_dvc_varp = alloca %struct.asc_dvc_var*, align 8
  %ep = alloca %struct.asceep_config*, align 8
  %i = alloca i32, align 4
  %serialstr = alloca [13 x i8], align 1
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !14867, metadata !DIExpression()), !dbg !14868
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !14869, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !14871, metadata !DIExpression()), !dbg !14872
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14873
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !14874
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !14874
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !14872
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc_varp, metadata !14875, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.declare(metadata %struct.asceep_config** %ep, metadata !14877, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14879, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.declare(metadata [13 x i8]* %serialstr, metadata !14881, metadata !DIExpression()), !dbg !14885
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14886
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !14887
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !14888
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc_varp, align 8, !dbg !14889
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !14890
  %eep_config = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 11, !dbg !14891
  %asc_eep = bitcast %union.anon.79* %eep_config to %struct.asceep_config*, !dbg !14892
  store %struct.asceep_config* %asc_eep, %struct.asceep_config** %ep, align 8, !dbg !14893
  %4 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14894
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !14895
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 16, !dbg !14896
  %6 = load i32, i32* %host_no, align 4, !dbg !14896
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.46, i64 0, i64 0), i32 %6) #11, !dbg !14897
  %7 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14898
  %adapter_info = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %7, i32 0, i32 13, !dbg !14900
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %adapter_info, i64 0, i64 0, !dbg !14898
  %8 = bitcast i8* %arrayidx to i16*, !dbg !14901
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %serialstr, i64 0, i64 0, !dbg !14902
  %call1 = call i32 @asc_get_eeprom_string(i16* %8, i8* %arraydecay) #11, !dbg !14903
  %cmp = icmp eq i32 %call1, 1, !dbg !14904
  br i1 %cmp, label %if.then, label %if.else, !dbg !14905

if.then:                                          ; preds = %entry
  %9 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14906
  %arraydecay2 = getelementptr inbounds [13 x i8], [13 x i8]* %serialstr, i64 0, i64 0, !dbg !14907
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay2) #11, !dbg !14908
  br label %if.end9, !dbg !14908

if.else:                                          ; preds = %entry
  %10 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14909
  %adapter_info3 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %10, i32 0, i32 13, !dbg !14911
  %arrayidx4 = getelementptr [6 x i8], [6 x i8]* %adapter_info3, i64 0, i64 5, !dbg !14909
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !14909
  %conv = zext i8 %11 to i32, !dbg !14909
  %cmp5 = icmp eq i32 %conv, 187, !dbg !14912
  br i1 %cmp5, label %if.then7, label %if.else8, !dbg !14913

if.then7:                                         ; preds = %if.else
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14914
  call void @seq_puts(%struct.seq_file* %12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.48, i64 0, i64 0)) #11, !dbg !14915
  br label %if.end, !dbg !14915

if.else8:                                         ; preds = %if.else
  %13 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14916
  call void @seq_puts(%struct.seq_file* %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i64 0, i64 0)) #11, !dbg !14917
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %14 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14918
  %15 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14919
  %id_speed = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %15, i32 0, i32 11, !dbg !14919
  %16 = load i8, i8* %id_speed, align 1, !dbg !14919
  %conv10 = zext i8 %16 to i32, !dbg !14919
  %and = and i32 %conv10, 15, !dbg !14919
  %17 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14920
  %max_total_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %17, i32 0, i32 6, !dbg !14921
  %18 = load i8, i8* %max_total_qng, align 2, !dbg !14921
  %conv11 = zext i8 %18 to i32, !dbg !14920
  %19 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14922
  %max_tag_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %19, i32 0, i32 7, !dbg !14923
  %20 = load i8, i8* %max_tag_qng, align 1, !dbg !14923
  %conv12 = zext i8 %20 to i32, !dbg !14922
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %14, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.50, i64 0, i64 0), i32 %and, i32 %conv11, i32 %conv12) #11, !dbg !14924
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14925
  %22 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14926
  %cntl = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %22, i32 0, i32 14, !dbg !14927
  %23 = load i16, i16* %cntl, align 2, !dbg !14927
  %conv13 = zext i16 %23 to i32, !dbg !14926
  %24 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14928
  %no_scam = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %24, i32 0, i32 10, !dbg !14929
  %25 = load i8, i8* %no_scam, align 2, !dbg !14929
  %conv14 = zext i8 %25 to i32, !dbg !14928
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51, i64 0, i64 0), i32 %conv13, i32 %conv14) #11, !dbg !14930
  %26 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14931
  call void @seq_puts(%struct.seq_file* %26, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !14932
  store i32 0, i32* %i, align 4, !dbg !14933
  br label %for.cond, !dbg !14935

for.cond:                                         ; preds = %for.inc, %if.end9
  %27 = load i32, i32* %i, align 4, !dbg !14936
  %cmp15 = icmp sle i32 %27, 7, !dbg !14938
  br i1 %cmp15, label %for.body, label %for.end, !dbg !14939

for.body:                                         ; preds = %for.cond
  %28 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14940
  %29 = load i32, i32* %i, align 4, !dbg !14941
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i32 %29) #11, !dbg !14942
  br label %for.inc, !dbg !14942

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !14943
  %inc = add i32 %30, 1, !dbg !14943
  store i32 %inc, i32* %i, align 4, !dbg !14943
  br label %for.cond, !dbg !14944, !llvm.loop !14945

for.end:                                          ; preds = %for.cond
  %31 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14947
  call void @seq_puts(%struct.seq_file* %31, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !14948
  store i32 0, i32* %i, align 4, !dbg !14949
  br label %for.cond17, !dbg !14951

for.cond17:                                       ; preds = %for.inc24, %for.end
  %32 = load i32, i32* %i, align 4, !dbg !14952
  %cmp18 = icmp sle i32 %32, 7, !dbg !14954
  br i1 %cmp18, label %for.body20, label %for.end26, !dbg !14955

for.body20:                                       ; preds = %for.cond17
  %33 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14956
  %34 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14957
  %disc_enable = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %34, i32 0, i32 3, !dbg !14958
  %35 = load i8, i8* %disc_enable, align 1, !dbg !14958
  %conv21 = zext i8 %35 to i32, !dbg !14957
  %36 = load i32, i32* %i, align 4, !dbg !14959
  %and22 = and i32 %36, 15, !dbg !14959
  %shl = shl i32 1, %and22, !dbg !14959
  %and23 = and i32 %conv21, %shl, !dbg !14960
  %tobool = icmp ne i32 %and23, 0, !dbg !14961
  %37 = zext i1 %tobool to i64, !dbg !14961
  %cond = select i1 %tobool, i32 89, i32 78, !dbg !14961
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond) #11, !dbg !14962
  br label %for.inc24, !dbg !14962

for.inc24:                                        ; preds = %for.body20
  %38 = load i32, i32* %i, align 4, !dbg !14963
  %inc25 = add i32 %38, 1, !dbg !14963
  store i32 %inc25, i32* %i, align 4, !dbg !14963
  br label %for.cond17, !dbg !14964, !llvm.loop !14965

for.end26:                                        ; preds = %for.cond17
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14967
  call void @seq_puts(%struct.seq_file* %39, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !14968
  store i32 0, i32* %i, align 4, !dbg !14969
  br label %for.cond27, !dbg !14971

for.cond27:                                       ; preds = %for.inc37, %for.end26
  %40 = load i32, i32* %i, align 4, !dbg !14972
  %cmp28 = icmp sle i32 %40, 7, !dbg !14974
  br i1 %cmp28, label %for.body30, label %for.end39, !dbg !14975

for.body30:                                       ; preds = %for.cond27
  %41 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14976
  %42 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14977
  %use_cmd_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %42, i32 0, i32 4, !dbg !14978
  %43 = load i8, i8* %use_cmd_qng, align 2, !dbg !14978
  %conv31 = zext i8 %43 to i32, !dbg !14977
  %44 = load i32, i32* %i, align 4, !dbg !14979
  %and32 = and i32 %44, 15, !dbg !14979
  %shl33 = shl i32 1, %and32, !dbg !14979
  %and34 = and i32 %conv31, %shl33, !dbg !14980
  %tobool35 = icmp ne i32 %and34, 0, !dbg !14981
  %45 = zext i1 %tobool35 to i64, !dbg !14981
  %cond36 = select i1 %tobool35, i32 89, i32 78, !dbg !14981
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond36) #11, !dbg !14982
  br label %for.inc37, !dbg !14982

for.inc37:                                        ; preds = %for.body30
  %46 = load i32, i32* %i, align 4, !dbg !14983
  %inc38 = add i32 %46, 1, !dbg !14983
  store i32 %inc38, i32* %i, align 4, !dbg !14983
  br label %for.cond27, !dbg !14984, !llvm.loop !14985

for.end39:                                        ; preds = %for.cond27
  %47 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14987
  call void @seq_puts(%struct.seq_file* %47, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !14988
  store i32 0, i32* %i, align 4, !dbg !14989
  br label %for.cond40, !dbg !14991

for.cond40:                                       ; preds = %for.inc50, %for.end39
  %48 = load i32, i32* %i, align 4, !dbg !14992
  %cmp41 = icmp sle i32 %48, 7, !dbg !14994
  br i1 %cmp41, label %for.body43, label %for.end52, !dbg !14995

for.body43:                                       ; preds = %for.cond40
  %49 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !14996
  %50 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !14997
  %start_motor = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %50, i32 0, i32 5, !dbg !14998
  %51 = load i8, i8* %start_motor, align 1, !dbg !14998
  %conv44 = zext i8 %51 to i32, !dbg !14997
  %52 = load i32, i32* %i, align 4, !dbg !14999
  %and45 = and i32 %52, 15, !dbg !14999
  %shl46 = shl i32 1, %and45, !dbg !14999
  %and47 = and i32 %conv44, %shl46, !dbg !15000
  %tobool48 = icmp ne i32 %and47, 0, !dbg !15001
  %53 = zext i1 %tobool48 to i64, !dbg !15001
  %cond49 = select i1 %tobool48, i32 89, i32 78, !dbg !15001
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond49) #11, !dbg !15002
  br label %for.inc50, !dbg !15002

for.inc50:                                        ; preds = %for.body43
  %54 = load i32, i32* %i, align 4, !dbg !15003
  %inc51 = add i32 %54, 1, !dbg !15003
  store i32 %inc51, i32* %i, align 4, !dbg !15003
  br label %for.cond40, !dbg !15004, !llvm.loop !15005

for.end52:                                        ; preds = %for.cond40
  %55 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15007
  call void @seq_puts(%struct.seq_file* %55, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !15008
  store i32 0, i32* %i, align 4, !dbg !15009
  br label %for.cond53, !dbg !15011

for.cond53:                                       ; preds = %for.inc63, %for.end52
  %56 = load i32, i32* %i, align 4, !dbg !15012
  %cmp54 = icmp sle i32 %56, 7, !dbg !15014
  br i1 %cmp54, label %for.body56, label %for.end65, !dbg !15015

for.body56:                                       ; preds = %for.cond53
  %57 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15016
  %58 = load %struct.asceep_config*, %struct.asceep_config** %ep, align 8, !dbg !15017
  %init_sdtr = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %58, i32 0, i32 2, !dbg !15018
  %59 = load i8, i8* %init_sdtr, align 2, !dbg !15018
  %conv57 = zext i8 %59 to i32, !dbg !15017
  %60 = load i32, i32* %i, align 4, !dbg !15019
  %and58 = and i32 %60, 15, !dbg !15019
  %shl59 = shl i32 1, %and58, !dbg !15019
  %and60 = and i32 %conv57, %shl59, !dbg !15020
  %tobool61 = icmp ne i32 %and60, 0, !dbg !15021
  %61 = zext i1 %tobool61 to i64, !dbg !15021
  %cond62 = select i1 %tobool61, i32 89, i32 78, !dbg !15021
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond62) #11, !dbg !15022
  br label %for.inc63, !dbg !15022

for.inc63:                                        ; preds = %for.body56
  %62 = load i32, i32* %i, align 4, !dbg !15023
  %inc64 = add i32 %62, 1, !dbg !15023
  store i32 %inc64, i32* %i, align 4, !dbg !15023
  br label %for.cond53, !dbg !15024, !llvm.loop !15025

for.end65:                                        ; preds = %for.cond53
  %63 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15027
  call void @seq_putc(%struct.seq_file* %63, i8 signext 10) #11, !dbg !15028
  ret void, !dbg !15029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_adv_board_eeprom(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !15030 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %adv_dvc_varp = alloca %struct.adv_dvc_var*, align 8
  %i = alloca i32, align 4
  %termstr = alloca i8*, align 8
  %serialstr = alloca [13 x i8], align 1
  %ep_3550 = alloca %struct.adveep_3550_config*, align 8
  %ep_38C0800 = alloca %struct.adveep_38C0800_config*, align 8
  %ep_38C1600 = alloca %struct.adveep_38C1600_config*, align 8
  %word = alloca i16, align 2
  %wordp = alloca i16*, align 8
  %sdtr_speed = alloca i16, align 2
  %speed_str = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !15031, metadata !DIExpression()), !dbg !15032
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !15033, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !15035, metadata !DIExpression()), !dbg !15036
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15037
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !15038
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !15038
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !15036
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc_varp, metadata !15039, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i8** %termstr, metadata !15043, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.declare(metadata [13 x i8]* %serialstr, metadata !15045, metadata !DIExpression()), !dbg !15046
  call void @llvm.dbg.declare(metadata %struct.adveep_3550_config** %ep_3550, metadata !15047, metadata !DIExpression()), !dbg !15048
  store %struct.adveep_3550_config* null, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15048
  call void @llvm.dbg.declare(metadata %struct.adveep_38C0800_config** %ep_38C0800, metadata !15049, metadata !DIExpression()), !dbg !15050
  store %struct.adveep_38C0800_config* null, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15050
  call void @llvm.dbg.declare(metadata %struct.adveep_38C1600_config** %ep_38C1600, metadata !15051, metadata !DIExpression()), !dbg !15052
  store %struct.adveep_38C1600_config* null, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15052
  call void @llvm.dbg.declare(metadata i16* %word, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.declare(metadata i16** %wordp, metadata !15055, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.declare(metadata i16* %sdtr_speed, metadata !15057, metadata !DIExpression()), !dbg !15058
  store i16 0, i16* %sdtr_speed, align 2, !dbg !15058
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15059
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !15060
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !15061
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15062
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15063
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 20, !dbg !15065
  %4 = load i8, i8* %chip_type, align 1, !dbg !15065
  %conv = zext i8 %4 to i32, !dbg !15063
  %cmp = icmp eq i32 %conv, 1, !dbg !15066
  br i1 %cmp, label %if.then, label %if.else, !dbg !15067

if.then:                                          ; preds = %entry
  %5 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15068
  %eep_config = getelementptr inbounds %struct.asc_board, %struct.asc_board* %5, i32 0, i32 11, !dbg !15070
  %adv_3550_eep = bitcast %union.anon.79* %eep_config to %struct.adveep_3550_config*, !dbg !15071
  store %struct.adveep_3550_config* %adv_3550_eep, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15072
  br label %if.end10, !dbg !15073

if.else:                                          ; preds = %entry
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15074
  %chip_type2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 20, !dbg !15076
  %7 = load i8, i8* %chip_type2, align 1, !dbg !15076
  %conv3 = zext i8 %7 to i32, !dbg !15074
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !15077
  br i1 %cmp4, label %if.then6, label %if.else8, !dbg !15078

if.then6:                                         ; preds = %if.else
  %8 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15079
  %eep_config7 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %8, i32 0, i32 11, !dbg !15081
  %adv_38C0800_eep = bitcast %union.anon.79* %eep_config7 to %struct.adveep_38C0800_config*, !dbg !15082
  store %struct.adveep_38C0800_config* %adv_38C0800_eep, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15083
  br label %if.end, !dbg !15084

if.else8:                                         ; preds = %if.else
  %9 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15085
  %eep_config9 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 11, !dbg !15087
  %adv_38C1600_eep = bitcast %union.anon.79* %eep_config9 to %struct.adveep_38C1600_config*, !dbg !15088
  store %struct.adveep_38C1600_config* %adv_38C1600_eep, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15089
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then6
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %10 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15090
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15091
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 16, !dbg !15092
  %12 = load i32, i32* %host_no, align 4, !dbg !15092
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.46, i64 0, i64 0), i32 %12) #11, !dbg !15093
  %13 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15094
  %chip_type11 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %13, i32 0, i32 20, !dbg !15096
  %14 = load i8, i8* %chip_type11, align 1, !dbg !15096
  %conv12 = zext i8 %14 to i32, !dbg !15094
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !15097
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !15098

if.then15:                                        ; preds = %if.end10
  %15 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15099
  %serial_number_word1 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %15, i32 0, i32 22, !dbg !15101
  store i16* %serial_number_word1, i16** %wordp, align 8, !dbg !15102
  br label %if.end26, !dbg !15103

if.else16:                                        ; preds = %if.end10
  %16 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15104
  %chip_type17 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %16, i32 0, i32 20, !dbg !15106
  %17 = load i8, i8* %chip_type17, align 1, !dbg !15106
  %conv18 = zext i8 %17 to i32, !dbg !15104
  %cmp19 = icmp eq i32 %conv18, 2, !dbg !15107
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !15108

if.then21:                                        ; preds = %if.else16
  %18 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15109
  %serial_number_word122 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %18, i32 0, i32 22, !dbg !15111
  store i16* %serial_number_word122, i16** %wordp, align 8, !dbg !15112
  br label %if.end25, !dbg !15113

if.else23:                                        ; preds = %if.else16
  %19 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15114
  %serial_number_word124 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %19, i32 0, i32 22, !dbg !15116
  store i16* %serial_number_word124, i16** %wordp, align 8, !dbg !15117
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then21
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then15
  %20 = load i16*, i16** %wordp, align 8, !dbg !15118
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %serialstr, i64 0, i64 0, !dbg !15120
  %call27 = call i32 @asc_get_eeprom_string(i16* %20, i8* %arraydecay) #11, !dbg !15121
  %cmp28 = icmp eq i32 %call27, 1, !dbg !15122
  br i1 %cmp28, label %if.then30, label %if.else32, !dbg !15123

if.then30:                                        ; preds = %if.end26
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15124
  %arraydecay31 = getelementptr inbounds [13 x i8], [13 x i8]* %serialstr, i64 0, i64 0, !dbg !15125
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay31) #11, !dbg !15126
  br label %if.end33, !dbg !15126

if.else32:                                        ; preds = %if.end26
  %22 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15127
  call void @seq_puts(%struct.seq_file* %22, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i64 0, i64 0)) #11, !dbg !15128
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then30
  %23 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15129
  %chip_type34 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %23, i32 0, i32 20, !dbg !15131
  %24 = load i8, i8* %chip_type34, align 1, !dbg !15131
  %conv35 = zext i8 %24 to i32, !dbg !15129
  %cmp36 = icmp eq i32 %conv35, 1, !dbg !15132
  br i1 %cmp36, label %if.then38, label %if.else42, !dbg !15133

if.then38:                                        ; preds = %if.end33
  %25 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15134
  %26 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15135
  %adapter_scsi_id = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %26, i32 0, i32 9, !dbg !15136
  %27 = load i8, i8* %adapter_scsi_id, align 2, !dbg !15136
  %conv39 = zext i8 %27 to i32, !dbg !15135
  %28 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15137
  %max_host_qng = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %28, i32 0, i32 18, !dbg !15138
  %29 = load i8, i8* %max_host_qng, align 2, !dbg !15138
  %conv40 = zext i8 %29 to i32, !dbg !15137
  %30 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15139
  %max_dvc_qng = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %30, i32 0, i32 19, !dbg !15140
  %31 = load i8, i8* %max_dvc_qng, align 1, !dbg !15140
  %conv41 = zext i8 %31 to i32, !dbg !15139
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %25, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.50, i64 0, i64 0), i32 %conv39, i32 %conv40, i32 %conv41) #11, !dbg !15141
  br label %if.end62, !dbg !15141

if.else42:                                        ; preds = %if.end33
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15142
  %chip_type43 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %32, i32 0, i32 20, !dbg !15144
  %33 = load i8, i8* %chip_type43, align 1, !dbg !15144
  %conv44 = zext i8 %33 to i32, !dbg !15142
  %cmp45 = icmp eq i32 %conv44, 2, !dbg !15145
  br i1 %cmp45, label %if.then47, label %if.else54, !dbg !15146

if.then47:                                        ; preds = %if.else42
  %34 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15147
  %35 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15148
  %adapter_scsi_id48 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %35, i32 0, i32 9, !dbg !15149
  %36 = load i8, i8* %adapter_scsi_id48, align 2, !dbg !15149
  %conv49 = zext i8 %36 to i32, !dbg !15148
  %37 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15150
  %max_host_qng50 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %37, i32 0, i32 18, !dbg !15151
  %38 = load i8, i8* %max_host_qng50, align 2, !dbg !15151
  %conv51 = zext i8 %38 to i32, !dbg !15150
  %39 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15152
  %max_dvc_qng52 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %39, i32 0, i32 19, !dbg !15153
  %40 = load i8, i8* %max_dvc_qng52, align 1, !dbg !15153
  %conv53 = zext i8 %40 to i32, !dbg !15152
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %34, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.50, i64 0, i64 0), i32 %conv49, i32 %conv51, i32 %conv53) #11, !dbg !15154
  br label %if.end61, !dbg !15154

if.else54:                                        ; preds = %if.else42
  %41 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15155
  %42 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15156
  %adapter_scsi_id55 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %42, i32 0, i32 9, !dbg !15157
  %43 = load i8, i8* %adapter_scsi_id55, align 2, !dbg !15157
  %conv56 = zext i8 %43 to i32, !dbg !15156
  %44 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15158
  %max_host_qng57 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %44, i32 0, i32 18, !dbg !15159
  %45 = load i8, i8* %max_host_qng57, align 2, !dbg !15159
  %conv58 = zext i8 %45 to i32, !dbg !15158
  %46 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15160
  %max_dvc_qng59 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %46, i32 0, i32 19, !dbg !15161
  %47 = load i8, i8* %max_dvc_qng59, align 1, !dbg !15161
  %conv60 = zext i8 %47 to i32, !dbg !15160
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %41, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.50, i64 0, i64 0), i32 %conv56, i32 %conv58, i32 %conv60) #11, !dbg !15162
  br label %if.end61

if.end61:                                         ; preds = %if.else54, %if.then47
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then38
  %48 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15163
  %chip_type63 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %48, i32 0, i32 20, !dbg !15165
  %49 = load i8, i8* %chip_type63, align 1, !dbg !15165
  %conv64 = zext i8 %49 to i32, !dbg !15163
  %cmp65 = icmp eq i32 %conv64, 1, !dbg !15166
  br i1 %cmp65, label %if.then67, label %if.else69, !dbg !15167

if.then67:                                        ; preds = %if.end62
  %50 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15168
  %termination = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %50, i32 0, i32 13, !dbg !15170
  %51 = load i8, i8* %termination, align 2, !dbg !15170
  %conv68 = zext i8 %51 to i16, !dbg !15168
  store i16 %conv68, i16* %word, align 2, !dbg !15171
  br label %if.end80, !dbg !15172

if.else69:                                        ; preds = %if.end62
  %52 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15173
  %chip_type70 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %52, i32 0, i32 20, !dbg !15175
  %53 = load i8, i8* %chip_type70, align 1, !dbg !15175
  %conv71 = zext i8 %53 to i32, !dbg !15173
  %cmp72 = icmp eq i32 %conv71, 2, !dbg !15176
  br i1 %cmp72, label %if.then74, label %if.else76, !dbg !15177

if.then74:                                        ; preds = %if.else69
  %54 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15178
  %termination_lvd = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %54, i32 0, i32 14, !dbg !15180
  %55 = load i8, i8* %termination_lvd, align 1, !dbg !15180
  %conv75 = zext i8 %55 to i16, !dbg !15178
  store i16 %conv75, i16* %word, align 2, !dbg !15181
  br label %if.end79, !dbg !15182

if.else76:                                        ; preds = %if.else69
  %56 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15183
  %termination_lvd77 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %56, i32 0, i32 14, !dbg !15185
  %57 = load i8, i8* %termination_lvd77, align 1, !dbg !15185
  %conv78 = zext i8 %57 to i16, !dbg !15183
  store i16 %conv78, i16* %word, align 2, !dbg !15186
  br label %if.end79

if.end79:                                         ; preds = %if.else76, %if.then74
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then67
  %58 = load i16, i16* %word, align 2, !dbg !15187
  %conv81 = zext i16 %58 to i32, !dbg !15187
  switch i32 %conv81, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb82
    i32 3, label %sw.bb83
    i32 0, label %sw.bb84
  ], !dbg !15188

sw.bb:                                            ; preds = %if.end80
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0), i8** %termstr, align 8, !dbg !15189
  br label %sw.epilog, !dbg !15191

sw.bb82:                                          ; preds = %if.end80
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i64 0, i64 0), i8** %termstr, align 8, !dbg !15192
  br label %sw.epilog, !dbg !15193

sw.bb83:                                          ; preds = %if.end80
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8** %termstr, align 8, !dbg !15194
  br label %sw.epilog, !dbg !15195

sw.default:                                       ; preds = %if.end80
  br label %sw.bb84, !dbg !15195

sw.bb84:                                          ; preds = %if.end80, %sw.default
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i8** %termstr, align 8, !dbg !15196
  br label %sw.epilog, !dbg !15197

sw.epilog:                                        ; preds = %sw.bb84, %sw.bb83, %sw.bb82, %sw.bb
  %59 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15198
  %chip_type85 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %59, i32 0, i32 20, !dbg !15200
  %60 = load i8, i8* %chip_type85, align 1, !dbg !15200
  %conv86 = zext i8 %60 to i32, !dbg !15198
  %cmp87 = icmp eq i32 %conv86, 1, !dbg !15201
  br i1 %cmp87, label %if.then89, label %if.else93, !dbg !15202

if.then89:                                        ; preds = %sw.epilog
  %61 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15203
  %62 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15204
  %termination90 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %62, i32 0, i32 13, !dbg !15205
  %63 = load i8, i8* %termination90, align 2, !dbg !15205
  %conv91 = zext i8 %63 to i32, !dbg !15204
  %64 = load i8*, i8** %termstr, align 8, !dbg !15206
  %65 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15207
  %bios_ctrl = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %65, i32 0, i32 15, !dbg !15208
  %66 = load i16, i16* %bios_ctrl, align 2, !dbg !15208
  %conv92 = zext i16 %66 to i32, !dbg !15207
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %61, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0), i32 %conv91, i8* %64, i32 %conv92) #11, !dbg !15209
  br label %if.end109, !dbg !15209

if.else93:                                        ; preds = %sw.epilog
  %67 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15210
  %chip_type94 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %67, i32 0, i32 20, !dbg !15212
  %68 = load i8, i8* %chip_type94, align 1, !dbg !15212
  %conv95 = zext i8 %68 to i32, !dbg !15210
  %cmp96 = icmp eq i32 %conv95, 2, !dbg !15213
  br i1 %cmp96, label %if.then98, label %if.else103, !dbg !15214

if.then98:                                        ; preds = %if.else93
  %69 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15215
  %70 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15216
  %termination_lvd99 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %70, i32 0, i32 14, !dbg !15217
  %71 = load i8, i8* %termination_lvd99, align 1, !dbg !15217
  %conv100 = zext i8 %71 to i32, !dbg !15216
  %72 = load i8*, i8** %termstr, align 8, !dbg !15218
  %73 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15219
  %bios_ctrl101 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %73, i32 0, i32 15, !dbg !15220
  %74 = load i16, i16* %bios_ctrl101, align 2, !dbg !15220
  %conv102 = zext i16 %74 to i32, !dbg !15219
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %69, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0), i32 %conv100, i8* %72, i32 %conv102) #11, !dbg !15221
  br label %if.end108, !dbg !15221

if.else103:                                       ; preds = %if.else93
  %75 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15222
  %76 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15223
  %termination_lvd104 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %76, i32 0, i32 14, !dbg !15224
  %77 = load i8, i8* %termination_lvd104, align 1, !dbg !15224
  %conv105 = zext i8 %77 to i32, !dbg !15223
  %78 = load i8*, i8** %termstr, align 8, !dbg !15225
  %79 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15226
  %bios_ctrl106 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %79, i32 0, i32 15, !dbg !15227
  %80 = load i16, i16* %bios_ctrl106, align 2, !dbg !15227
  %conv107 = zext i16 %80 to i32, !dbg !15226
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %75, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0), i32 %conv105, i8* %78, i32 %conv107) #11, !dbg !15228
  br label %if.end108

if.end108:                                        ; preds = %if.else103, %if.then98
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then89
  %81 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15229
  call void @seq_puts(%struct.seq_file* %81, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !15230
  store i32 0, i32* %i, align 4, !dbg !15231
  br label %for.cond, !dbg !15233

for.cond:                                         ; preds = %for.inc, %if.end109
  %82 = load i32, i32* %i, align 4, !dbg !15234
  %cmp110 = icmp sle i32 %82, 15, !dbg !15236
  br i1 %cmp110, label %for.body, label %for.end, !dbg !15237

for.body:                                         ; preds = %for.cond
  %83 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15238
  %84 = load i32, i32* %i, align 4, !dbg !15239
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %83, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i32 %84) #11, !dbg !15240
  br label %for.inc, !dbg !15240

for.inc:                                          ; preds = %for.body
  %85 = load i32, i32* %i, align 4, !dbg !15241
  %inc = add i32 %85, 1, !dbg !15241
  store i32 %inc, i32* %i, align 4, !dbg !15241
  br label %for.cond, !dbg !15242, !llvm.loop !15243

for.end:                                          ; preds = %for.cond
  %86 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15245
  call void @seq_putc(%struct.seq_file* %86, i8 signext 10) #11, !dbg !15246
  %87 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15247
  %chip_type112 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %87, i32 0, i32 20, !dbg !15249
  %88 = load i8, i8* %chip_type112, align 1, !dbg !15249
  %conv113 = zext i8 %88 to i32, !dbg !15247
  %cmp114 = icmp eq i32 %conv113, 1, !dbg !15250
  br i1 %cmp114, label %if.then116, label %if.else117, !dbg !15251

if.then116:                                       ; preds = %for.end
  %89 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15252
  %disc_enable = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %89, i32 0, i32 2, !dbg !15254
  %90 = load i16, i16* %disc_enable, align 2, !dbg !15254
  store i16 %90, i16* %word, align 2, !dbg !15255
  br label %if.end127, !dbg !15256

if.else117:                                       ; preds = %for.end
  %91 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15257
  %chip_type118 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %91, i32 0, i32 20, !dbg !15259
  %92 = load i8, i8* %chip_type118, align 1, !dbg !15259
  %conv119 = zext i8 %92 to i32, !dbg !15257
  %cmp120 = icmp eq i32 %conv119, 2, !dbg !15260
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !15261

if.then122:                                       ; preds = %if.else117
  %93 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15262
  %disc_enable123 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %93, i32 0, i32 2, !dbg !15264
  %94 = load i16, i16* %disc_enable123, align 2, !dbg !15264
  store i16 %94, i16* %word, align 2, !dbg !15265
  br label %if.end126, !dbg !15266

if.else124:                                       ; preds = %if.else117
  %95 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15267
  %disc_enable125 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %95, i32 0, i32 2, !dbg !15269
  %96 = load i16, i16* %disc_enable125, align 2, !dbg !15269
  store i16 %96, i16* %word, align 2, !dbg !15270
  br label %if.end126

if.end126:                                        ; preds = %if.else124, %if.then122
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then116
  %97 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15271
  call void @seq_puts(%struct.seq_file* %97, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0)) #11, !dbg !15272
  store i32 0, i32* %i, align 4, !dbg !15273
  br label %for.cond128, !dbg !15275

for.cond128:                                      ; preds = %for.inc134, %if.end127
  %98 = load i32, i32* %i, align 4, !dbg !15276
  %cmp129 = icmp sle i32 %98, 15, !dbg !15278
  br i1 %cmp129, label %for.body131, label %for.end136, !dbg !15279

for.body131:                                      ; preds = %for.cond128
  %99 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15280
  %100 = load i16, i16* %word, align 2, !dbg !15281
  %conv132 = zext i16 %100 to i32, !dbg !15281
  %101 = load i32, i32* %i, align 4, !dbg !15282
  %and = and i32 %101, 15, !dbg !15282
  %shl = shl i32 1, %and, !dbg !15282
  %and133 = and i32 %conv132, %shl, !dbg !15283
  %tobool = icmp ne i32 %and133, 0, !dbg !15284
  %102 = zext i1 %tobool to i64, !dbg !15284
  %cond = select i1 %tobool, i32 89, i32 78, !dbg !15284
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond) #11, !dbg !15285
  br label %for.inc134, !dbg !15285

for.inc134:                                       ; preds = %for.body131
  %103 = load i32, i32* %i, align 4, !dbg !15286
  %inc135 = add i32 %103, 1, !dbg !15286
  store i32 %inc135, i32* %i, align 4, !dbg !15286
  br label %for.cond128, !dbg !15287, !llvm.loop !15288

for.end136:                                       ; preds = %for.cond128
  %104 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15290
  call void @seq_putc(%struct.seq_file* %104, i8 signext 10) #11, !dbg !15291
  %105 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15292
  %chip_type137 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %105, i32 0, i32 20, !dbg !15294
  %106 = load i8, i8* %chip_type137, align 1, !dbg !15294
  %conv138 = zext i8 %106 to i32, !dbg !15292
  %cmp139 = icmp eq i32 %conv138, 1, !dbg !15295
  br i1 %cmp139, label %if.then141, label %if.else142, !dbg !15296

if.then141:                                       ; preds = %for.end136
  %107 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15297
  %tagqng_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %107, i32 0, i32 6, !dbg !15299
  %108 = load i16, i16* %tagqng_able, align 2, !dbg !15299
  store i16 %108, i16* %word, align 2, !dbg !15300
  br label %if.end152, !dbg !15301

if.else142:                                       ; preds = %for.end136
  %109 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15302
  %chip_type143 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %109, i32 0, i32 20, !dbg !15304
  %110 = load i8, i8* %chip_type143, align 1, !dbg !15304
  %conv144 = zext i8 %110 to i32, !dbg !15302
  %cmp145 = icmp eq i32 %conv144, 2, !dbg !15305
  br i1 %cmp145, label %if.then147, label %if.else149, !dbg !15306

if.then147:                                       ; preds = %if.else142
  %111 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15307
  %tagqng_able148 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %111, i32 0, i32 6, !dbg !15309
  %112 = load i16, i16* %tagqng_able148, align 2, !dbg !15309
  store i16 %112, i16* %word, align 2, !dbg !15310
  br label %if.end151, !dbg !15311

if.else149:                                       ; preds = %if.else142
  %113 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15312
  %tagqng_able150 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %113, i32 0, i32 6, !dbg !15314
  %114 = load i16, i16* %tagqng_able150, align 2, !dbg !15314
  store i16 %114, i16* %word, align 2, !dbg !15315
  br label %if.end151

if.end151:                                        ; preds = %if.else149, %if.then147
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then141
  %115 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15316
  call void @seq_puts(%struct.seq_file* %115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0)) #11, !dbg !15317
  store i32 0, i32* %i, align 4, !dbg !15318
  br label %for.cond153, !dbg !15320

for.cond153:                                      ; preds = %for.inc163, %if.end152
  %116 = load i32, i32* %i, align 4, !dbg !15321
  %cmp154 = icmp sle i32 %116, 15, !dbg !15323
  br i1 %cmp154, label %for.body156, label %for.end165, !dbg !15324

for.body156:                                      ; preds = %for.cond153
  %117 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15325
  %118 = load i16, i16* %word, align 2, !dbg !15326
  %conv157 = zext i16 %118 to i32, !dbg !15326
  %119 = load i32, i32* %i, align 4, !dbg !15327
  %and158 = and i32 %119, 15, !dbg !15327
  %shl159 = shl i32 1, %and158, !dbg !15327
  %and160 = and i32 %conv157, %shl159, !dbg !15328
  %tobool161 = icmp ne i32 %and160, 0, !dbg !15329
  %120 = zext i1 %tobool161 to i64, !dbg !15329
  %cond162 = select i1 %tobool161, i32 89, i32 78, !dbg !15329
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond162) #11, !dbg !15330
  br label %for.inc163, !dbg !15330

for.inc163:                                       ; preds = %for.body156
  %121 = load i32, i32* %i, align 4, !dbg !15331
  %inc164 = add i32 %121, 1, !dbg !15331
  store i32 %inc164, i32* %i, align 4, !dbg !15331
  br label %for.cond153, !dbg !15332, !llvm.loop !15333

for.end165:                                       ; preds = %for.cond153
  %122 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15335
  call void @seq_putc(%struct.seq_file* %122, i8 signext 10) #11, !dbg !15336
  %123 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15337
  %chip_type166 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %123, i32 0, i32 20, !dbg !15339
  %124 = load i8, i8* %chip_type166, align 1, !dbg !15339
  %conv167 = zext i8 %124 to i32, !dbg !15337
  %cmp168 = icmp eq i32 %conv167, 1, !dbg !15340
  br i1 %cmp168, label %if.then170, label %if.else171, !dbg !15341

if.then170:                                       ; preds = %for.end165
  %125 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15342
  %start_motor = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %125, i32 0, i32 5, !dbg !15344
  %126 = load i16, i16* %start_motor, align 2, !dbg !15344
  store i16 %126, i16* %word, align 2, !dbg !15345
  br label %if.end181, !dbg !15346

if.else171:                                       ; preds = %for.end165
  %127 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15347
  %chip_type172 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %127, i32 0, i32 20, !dbg !15349
  %128 = load i8, i8* %chip_type172, align 1, !dbg !15349
  %conv173 = zext i8 %128 to i32, !dbg !15347
  %cmp174 = icmp eq i32 %conv173, 2, !dbg !15350
  br i1 %cmp174, label %if.then176, label %if.else178, !dbg !15351

if.then176:                                       ; preds = %if.else171
  %129 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15352
  %start_motor177 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %129, i32 0, i32 5, !dbg !15354
  %130 = load i16, i16* %start_motor177, align 2, !dbg !15354
  store i16 %130, i16* %word, align 2, !dbg !15355
  br label %if.end180, !dbg !15356

if.else178:                                       ; preds = %if.else171
  %131 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15357
  %start_motor179 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %131, i32 0, i32 5, !dbg !15359
  %132 = load i16, i16* %start_motor179, align 2, !dbg !15359
  store i16 %132, i16* %word, align 2, !dbg !15360
  br label %if.end180

if.end180:                                        ; preds = %if.else178, %if.then176
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then170
  %133 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15361
  call void @seq_puts(%struct.seq_file* %133, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0)) #11, !dbg !15362
  store i32 0, i32* %i, align 4, !dbg !15363
  br label %for.cond182, !dbg !15365

for.cond182:                                      ; preds = %for.inc192, %if.end181
  %134 = load i32, i32* %i, align 4, !dbg !15366
  %cmp183 = icmp sle i32 %134, 15, !dbg !15368
  br i1 %cmp183, label %for.body185, label %for.end194, !dbg !15369

for.body185:                                      ; preds = %for.cond182
  %135 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15370
  %136 = load i16, i16* %word, align 2, !dbg !15371
  %conv186 = zext i16 %136 to i32, !dbg !15371
  %137 = load i32, i32* %i, align 4, !dbg !15372
  %and187 = and i32 %137, 15, !dbg !15372
  %shl188 = shl i32 1, %and187, !dbg !15372
  %and189 = and i32 %conv186, %shl188, !dbg !15373
  %tobool190 = icmp ne i32 %and189, 0, !dbg !15374
  %138 = zext i1 %tobool190 to i64, !dbg !15374
  %cond191 = select i1 %tobool190, i32 89, i32 78, !dbg !15374
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %135, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond191) #11, !dbg !15375
  br label %for.inc192, !dbg !15375

for.inc192:                                       ; preds = %for.body185
  %139 = load i32, i32* %i, align 4, !dbg !15376
  %inc193 = add i32 %139, 1, !dbg !15376
  store i32 %inc193, i32* %i, align 4, !dbg !15376
  br label %for.cond182, !dbg !15377, !llvm.loop !15378

for.end194:                                       ; preds = %for.cond182
  %140 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15380
  call void @seq_putc(%struct.seq_file* %140, i8 signext 10) #11, !dbg !15381
  %141 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15382
  %chip_type195 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %141, i32 0, i32 20, !dbg !15384
  %142 = load i8, i8* %chip_type195, align 1, !dbg !15384
  %conv196 = zext i8 %142 to i32, !dbg !15382
  %cmp197 = icmp eq i32 %conv196, 1, !dbg !15385
  br i1 %cmp197, label %if.then199, label %if.end213, !dbg !15386

if.then199:                                       ; preds = %for.end194
  %143 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15387
  call void @seq_puts(%struct.seq_file* %143, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0)) #11, !dbg !15389
  store i32 0, i32* %i, align 4, !dbg !15390
  br label %for.cond200, !dbg !15392

for.cond200:                                      ; preds = %for.inc210, %if.then199
  %144 = load i32, i32* %i, align 4, !dbg !15393
  %cmp201 = icmp sle i32 %144, 15, !dbg !15395
  br i1 %cmp201, label %for.body203, label %for.end212, !dbg !15396

for.body203:                                      ; preds = %for.cond200
  %145 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15397
  %146 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15398
  %sdtr_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %146, i32 0, i32 4, !dbg !15399
  %147 = load i16, i16* %sdtr_able, align 2, !dbg !15399
  %conv204 = zext i16 %147 to i32, !dbg !15398
  %148 = load i32, i32* %i, align 4, !dbg !15400
  %and205 = and i32 %148, 15, !dbg !15400
  %shl206 = shl i32 1, %and205, !dbg !15400
  %and207 = and i32 %conv204, %shl206, !dbg !15401
  %tobool208 = icmp ne i32 %and207, 0, !dbg !15402
  %149 = zext i1 %tobool208 to i64, !dbg !15402
  %cond209 = select i1 %tobool208, i32 89, i32 78, !dbg !15402
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %145, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond209) #11, !dbg !15403
  br label %for.inc210, !dbg !15403

for.inc210:                                       ; preds = %for.body203
  %150 = load i32, i32* %i, align 4, !dbg !15404
  %inc211 = add i32 %150, 1, !dbg !15404
  store i32 %inc211, i32* %i, align 4, !dbg !15404
  br label %for.cond200, !dbg !15405, !llvm.loop !15406

for.end212:                                       ; preds = %for.cond200
  %151 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15408
  call void @seq_putc(%struct.seq_file* %151, i8 signext 10) #11, !dbg !15409
  br label %if.end213, !dbg !15410

if.end213:                                        ; preds = %for.end212, %for.end194
  %152 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15411
  %chip_type214 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %152, i32 0, i32 20, !dbg !15413
  %153 = load i8, i8* %chip_type214, align 1, !dbg !15413
  %conv215 = zext i8 %153 to i32, !dbg !15411
  %cmp216 = icmp eq i32 %conv215, 1, !dbg !15414
  br i1 %cmp216, label %if.then218, label %if.end232, !dbg !15415

if.then218:                                       ; preds = %if.end213
  %154 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15416
  call void @seq_puts(%struct.seq_file* %154, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0)) #11, !dbg !15418
  store i32 0, i32* %i, align 4, !dbg !15419
  br label %for.cond219, !dbg !15421

for.cond219:                                      ; preds = %for.inc229, %if.then218
  %155 = load i32, i32* %i, align 4, !dbg !15422
  %cmp220 = icmp sle i32 %155, 15, !dbg !15424
  br i1 %cmp220, label %for.body222, label %for.end231, !dbg !15425

for.body222:                                      ; preds = %for.cond219
  %156 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15426
  %157 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15427
  %ultra_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %157, i32 0, i32 16, !dbg !15428
  %158 = load i16, i16* %ultra_able, align 2, !dbg !15428
  %conv223 = zext i16 %158 to i32, !dbg !15427
  %159 = load i32, i32* %i, align 4, !dbg !15429
  %and224 = and i32 %159, 15, !dbg !15429
  %shl225 = shl i32 1, %and224, !dbg !15429
  %and226 = and i32 %conv223, %shl225, !dbg !15430
  %tobool227 = icmp ne i32 %and226, 0, !dbg !15431
  %160 = zext i1 %tobool227 to i64, !dbg !15431
  %cond228 = select i1 %tobool227, i32 89, i32 78, !dbg !15431
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %156, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond228) #11, !dbg !15432
  br label %for.inc229, !dbg !15432

for.inc229:                                       ; preds = %for.body222
  %161 = load i32, i32* %i, align 4, !dbg !15433
  %inc230 = add i32 %161, 1, !dbg !15433
  store i32 %inc230, i32* %i, align 4, !dbg !15433
  br label %for.cond219, !dbg !15434, !llvm.loop !15435

for.end231:                                       ; preds = %for.cond219
  %162 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15437
  call void @seq_putc(%struct.seq_file* %162, i8 signext 10) #11, !dbg !15438
  br label %if.end232, !dbg !15439

if.end232:                                        ; preds = %for.end231, %if.end213
  %163 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15440
  %chip_type233 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %163, i32 0, i32 20, !dbg !15442
  %164 = load i8, i8* %chip_type233, align 1, !dbg !15442
  %conv234 = zext i8 %164 to i32, !dbg !15440
  %cmp235 = icmp eq i32 %conv234, 1, !dbg !15443
  br i1 %cmp235, label %if.then237, label %if.else238, !dbg !15444

if.then237:                                       ; preds = %if.end232
  %165 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %ep_3550, align 8, !dbg !15445
  %wdtr_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %165, i32 0, i32 3, !dbg !15447
  %166 = load i16, i16* %wdtr_able, align 2, !dbg !15447
  store i16 %166, i16* %word, align 2, !dbg !15448
  br label %if.end248, !dbg !15449

if.else238:                                       ; preds = %if.end232
  %167 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15450
  %chip_type239 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %167, i32 0, i32 20, !dbg !15452
  %168 = load i8, i8* %chip_type239, align 1, !dbg !15452
  %conv240 = zext i8 %168 to i32, !dbg !15450
  %cmp241 = icmp eq i32 %conv240, 2, !dbg !15453
  br i1 %cmp241, label %if.then243, label %if.else245, !dbg !15454

if.then243:                                       ; preds = %if.else238
  %169 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %ep_38C0800, align 8, !dbg !15455
  %wdtr_able244 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %169, i32 0, i32 3, !dbg !15457
  %170 = load i16, i16* %wdtr_able244, align 2, !dbg !15457
  store i16 %170, i16* %word, align 2, !dbg !15458
  br label %if.end247, !dbg !15459

if.else245:                                       ; preds = %if.else238
  %171 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %ep_38C1600, align 8, !dbg !15460
  %wdtr_able246 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %171, i32 0, i32 3, !dbg !15462
  %172 = load i16, i16* %wdtr_able246, align 2, !dbg !15462
  store i16 %172, i16* %word, align 2, !dbg !15463
  br label %if.end247

if.end247:                                        ; preds = %if.else245, %if.then243
  br label %if.end248

if.end248:                                        ; preds = %if.end247, %if.then237
  %173 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15464
  call void @seq_puts(%struct.seq_file* %173, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i64 0, i64 0)) #11, !dbg !15465
  store i32 0, i32* %i, align 4, !dbg !15466
  br label %for.cond249, !dbg !15468

for.cond249:                                      ; preds = %for.inc259, %if.end248
  %174 = load i32, i32* %i, align 4, !dbg !15469
  %cmp250 = icmp sle i32 %174, 15, !dbg !15471
  br i1 %cmp250, label %for.body252, label %for.end261, !dbg !15472

for.body252:                                      ; preds = %for.cond249
  %175 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15473
  %176 = load i16, i16* %word, align 2, !dbg !15474
  %conv253 = zext i16 %176 to i32, !dbg !15474
  %177 = load i32, i32* %i, align 4, !dbg !15475
  %and254 = and i32 %177, 15, !dbg !15475
  %shl255 = shl i32 1, %and254, !dbg !15475
  %and256 = and i32 %conv253, %shl255, !dbg !15476
  %tobool257 = icmp ne i32 %and256, 0, !dbg !15477
  %178 = zext i1 %tobool257 to i64, !dbg !15477
  %cond258 = select i1 %tobool257, i32 89, i32 78, !dbg !15477
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %175, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 %cond258) #11, !dbg !15478
  br label %for.inc259, !dbg !15478

for.inc259:                                       ; preds = %for.body252
  %179 = load i32, i32* %i, align 4, !dbg !15479
  %inc260 = add i32 %179, 1, !dbg !15479
  store i32 %inc260, i32* %i, align 4, !dbg !15479
  br label %for.cond249, !dbg !15480, !llvm.loop !15481

for.end261:                                       ; preds = %for.cond249
  %180 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15483
  call void @seq_putc(%struct.seq_file* %180, i8 signext 10) #11, !dbg !15484
  %181 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15485
  %chip_type262 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %181, i32 0, i32 20, !dbg !15487
  %182 = load i8, i8* %chip_type262, align 1, !dbg !15487
  %conv263 = zext i8 %182 to i32, !dbg !15485
  %cmp264 = icmp eq i32 %conv263, 2, !dbg !15488
  br i1 %cmp264, label %if.then270, label %lor.lhs.false, !dbg !15489

lor.lhs.false:                                    ; preds = %for.end261
  %183 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15490
  %chip_type266 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %183, i32 0, i32 20, !dbg !15491
  %184 = load i8, i8* %chip_type266, align 1, !dbg !15491
  %conv267 = zext i8 %184 to i32, !dbg !15490
  %cmp268 = icmp eq i32 %conv267, 3, !dbg !15492
  br i1 %cmp268, label %if.then270, label %if.end313, !dbg !15493

if.then270:                                       ; preds = %lor.lhs.false, %for.end261
  %185 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15494
  call void @seq_puts(%struct.seq_file* %185, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0)) #11, !dbg !15496
  store i32 0, i32* %i, align 4, !dbg !15497
  br label %for.cond271, !dbg !15499

for.cond271:                                      ; preds = %for.inc310, %if.then270
  %186 = load i32, i32* %i, align 4, !dbg !15500
  %cmp272 = icmp sle i32 %186, 15, !dbg !15502
  br i1 %cmp272, label %for.body274, label %for.end312, !dbg !15503

for.body274:                                      ; preds = %for.cond271
  call void @llvm.dbg.declare(metadata i8** %speed_str, metadata !15504, metadata !DIExpression()), !dbg !15506
  %187 = load i32, i32* %i, align 4, !dbg !15507
  %cmp275 = icmp eq i32 %187, 0, !dbg !15509
  br i1 %cmp275, label %if.then277, label %if.else278, !dbg !15510

if.then277:                                       ; preds = %for.body274
  %188 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15511
  %sdtr_speed1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %188, i32 0, i32 6, !dbg !15513
  %189 = load i16, i16* %sdtr_speed1, align 2, !dbg !15513
  store i16 %189, i16* %sdtr_speed, align 2, !dbg !15514
  br label %if.end293, !dbg !15515

if.else278:                                       ; preds = %for.body274
  %190 = load i32, i32* %i, align 4, !dbg !15516
  %cmp279 = icmp eq i32 %190, 4, !dbg !15518
  br i1 %cmp279, label %if.then281, label %if.else282, !dbg !15519

if.then281:                                       ; preds = %if.else278
  %191 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15520
  %sdtr_speed2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %191, i32 0, i32 7, !dbg !15522
  %192 = load i16, i16* %sdtr_speed2, align 4, !dbg !15522
  store i16 %192, i16* %sdtr_speed, align 2, !dbg !15523
  br label %if.end292, !dbg !15524

if.else282:                                       ; preds = %if.else278
  %193 = load i32, i32* %i, align 4, !dbg !15525
  %cmp283 = icmp eq i32 %193, 8, !dbg !15527
  br i1 %cmp283, label %if.then285, label %if.else286, !dbg !15528

if.then285:                                       ; preds = %if.else282
  %194 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15529
  %sdtr_speed3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %194, i32 0, i32 8, !dbg !15531
  %195 = load i16, i16* %sdtr_speed3, align 2, !dbg !15531
  store i16 %195, i16* %sdtr_speed, align 2, !dbg !15532
  br label %if.end291, !dbg !15533

if.else286:                                       ; preds = %if.else282
  %196 = load i32, i32* %i, align 4, !dbg !15534
  %cmp287 = icmp eq i32 %196, 12, !dbg !15536
  br i1 %cmp287, label %if.then289, label %if.end290, !dbg !15537

if.then289:                                       ; preds = %if.else286
  %197 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc_varp, align 8, !dbg !15538
  %sdtr_speed4 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %197, i32 0, i32 9, !dbg !15540
  %198 = load i16, i16* %sdtr_speed4, align 8, !dbg !15540
  store i16 %198, i16* %sdtr_speed, align 2, !dbg !15541
  br label %if.end290, !dbg !15542

if.end290:                                        ; preds = %if.then289, %if.else286
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then285
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then281
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %if.then277
  %199 = load i16, i16* %sdtr_speed, align 2, !dbg !15543
  %conv294 = zext i16 %199 to i32, !dbg !15543
  %and295 = and i32 %conv294, 15, !dbg !15544
  switch i32 %and295, label %sw.default302 [
    i32 0, label %sw.bb296
    i32 1, label %sw.bb297
    i32 2, label %sw.bb298
    i32 3, label %sw.bb299
    i32 4, label %sw.bb300
    i32 5, label %sw.bb301
  ], !dbg !15545

sw.bb296:                                         ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15546
  br label %sw.epilog303, !dbg !15548

sw.bb297:                                         ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15549
  br label %sw.epilog303, !dbg !15550

sw.bb298:                                         ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15551
  br label %sw.epilog303, !dbg !15552

sw.bb299:                                         ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15553
  br label %sw.epilog303, !dbg !15554

sw.bb300:                                         ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15555
  br label %sw.epilog303, !dbg !15556

sw.bb301:                                         ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15557
  br label %sw.epilog303, !dbg !15558

sw.default302:                                    ; preds = %if.end293
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i64 0, i64 0), i8** %speed_str, align 8, !dbg !15559
  br label %sw.epilog303, !dbg !15560

sw.epilog303:                                     ; preds = %sw.default302, %sw.bb301, %sw.bb300, %sw.bb299, %sw.bb298, %sw.bb297, %sw.bb296
  %200 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15561
  %201 = load i32, i32* %i, align 4, !dbg !15562
  %202 = load i8*, i8** %speed_str, align 8, !dbg !15563
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %200, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i64 0, i64 0), i32 %201, i8* %202) #11, !dbg !15564
  %203 = load i32, i32* %i, align 4, !dbg !15565
  %cmp304 = icmp eq i32 %203, 7, !dbg !15567
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !15568

if.then306:                                       ; preds = %sw.epilog303
  %204 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15569
  call void @seq_puts(%struct.seq_file* %204, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0)) #11, !dbg !15570
  br label %if.end307, !dbg !15570

if.end307:                                        ; preds = %if.then306, %sw.epilog303
  %205 = load i16, i16* %sdtr_speed, align 2, !dbg !15571
  %conv308 = zext i16 %205 to i32, !dbg !15571
  %shr = ashr i32 %conv308, 4, !dbg !15571
  %conv309 = trunc i32 %shr to i16, !dbg !15571
  store i16 %conv309, i16* %sdtr_speed, align 2, !dbg !15571
  br label %for.inc310, !dbg !15572

for.inc310:                                       ; preds = %if.end307
  %206 = load i32, i32* %i, align 4, !dbg !15573
  %inc311 = add i32 %206, 1, !dbg !15573
  store i32 %inc311, i32* %i, align 4, !dbg !15573
  br label %for.cond271, !dbg !15574, !llvm.loop !15575

for.end312:                                       ; preds = %for.cond271
  %207 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15577
  call void @seq_putc(%struct.seq_file* %207, i8 signext 10) #11, !dbg !15578
  br label %if.end313, !dbg !15579

if.end313:                                        ; preds = %for.end312, %lor.lhs.false
  ret void, !dbg !15580
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_driver_conf(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !15581 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %chip_scsi_id = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !15582, metadata !DIExpression()), !dbg !15583
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !15584, metadata !DIExpression()), !dbg !15585
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !15586, metadata !DIExpression()), !dbg !15587
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15588
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !15589
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !15589
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !15587
  call void @llvm.dbg.declare(metadata i32* %chip_scsi_id, metadata !15590, metadata !DIExpression()), !dbg !15591
  %2 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15592
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15593
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 16, !dbg !15594
  %4 = load i32, i32* %host_no, align 4, !dbg !15594
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %2, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.81, i64 0, i64 0), i32 %4) #11, !dbg !15595
  %5 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15596
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15597
  %call1 = call i32 @scsi_host_busy(%struct.Scsi_Host* %6) #11, !dbg !15598
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15599
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 20, !dbg !15600
  %8 = load i32, i32* %max_id, align 4, !dbg !15600
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15601
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 21, !dbg !15602
  %10 = load i64, i64* %max_lun, align 8, !dbg !15602
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15603
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 19, !dbg !15604
  %12 = load i32, i32* %max_channel, align 8, !dbg !15604
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %5, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.82, i64 0, i64 0), i32 %call1, i32 %8, i64 %10, i32 %12) #11, !dbg !15605
  %13 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15606
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15607
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 22, !dbg !15608
  %15 = load i32, i32* %unique_id, align 8, !dbg !15608
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15609
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 25, !dbg !15610
  %17 = load i32, i32* %can_queue, align 4, !dbg !15610
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15611
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 24, !dbg !15612
  %19 = load i32, i32* %this_id, align 8, !dbg !15612
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15613
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 27, !dbg !15614
  %21 = load i16, i16* %sg_tablesize, align 2, !dbg !15614
  %conv = zext i16 %21 to i32, !dbg !15613
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15615
  %cmd_per_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %22, i32 0, i32 26, !dbg !15616
  %23 = load i16, i16* %cmd_per_lun, align 8, !dbg !15616
  %conv2 = sext i16 %23 to i32, !dbg !15615
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %13, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.83, i64 0, i64 0), i32 %15, i32 %17, i32 %19, i32 %conv, i32 %conv2) #11, !dbg !15617
  %24 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15618
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15619
  %unchecked_isa_dma = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %25, i32 0, i32 34, !dbg !15620
  %bf.load = load i16, i16* %unchecked_isa_dma, align 4, !dbg !15620
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !15620
  %bf.clear = and i16 %bf.lshr, 1, !dbg !15620
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15620
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i64 0, i64 0), i32 %bf.cast) #11, !dbg !15621
  %26 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15622
  %27 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15623
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %27, i32 0, i32 2, !dbg !15624
  %28 = load i32, i32* %flags, align 8, !dbg !15624
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15625
  %last_reset = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 18, !dbg !15626
  %30 = load i64, i64* %last_reset, align 8, !dbg !15626
  %31 = load volatile i64, i64* @jiffies, align 8, !dbg !15627
  %32 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15628
  %asc_n_io_port = getelementptr inbounds %struct.asc_board, %struct.asc_board* %32, i32 0, i32 6, !dbg !15629
  %33 = load i16, i16* %asc_n_io_port, align 2, !dbg !15629
  %conv3 = zext i16 %33 to i32, !dbg !15628
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.85, i64 0, i64 0), i32 %28, i64 %30, i64 %31, i32 %conv3) #11, !dbg !15630
  %34 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15631
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15632
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 42, !dbg !15633
  %36 = load i64, i64* %io_port, align 8, !dbg !15633
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.86, i64 0, i64 0), i64 %36) #11, !dbg !15634
  %37 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15635
  %flags4 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %37, i32 0, i32 2, !dbg !15635
  %38 = load i32, i32* %flags4, align 8, !dbg !15635
  %and = and i32 %38, 4, !dbg !15635
  %cmp = icmp eq i32 %and, 0, !dbg !15635
  br i1 %cmp, label %if.then, label %if.else, !dbg !15637

if.then:                                          ; preds = %entry
  %39 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15638
  %dvc_cfg = getelementptr inbounds %struct.asc_board, %struct.asc_board* %39, i32 0, i32 5, !dbg !15640
  %asc_dvc_cfg = bitcast %union.anon.78* %dvc_cfg to %struct.asc_dvc_cfg*, !dbg !15641
  %chip_scsi_id6 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %asc_dvc_cfg, i32 0, i32 4, !dbg !15642
  %40 = load i8, i8* %chip_scsi_id6, align 4, !dbg !15642
  %conv7 = zext i8 %40 to i32, !dbg !15638
  store i32 %conv7, i32* %chip_scsi_id, align 4, !dbg !15643
  br label %if.end, !dbg !15644

if.else:                                          ; preds = %entry
  %41 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15645
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %41, i32 0, i32 4, !dbg !15647
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !15648
  %chip_scsi_id8 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %adv_dvc_var, i32 0, i32 19, !dbg !15649
  %42 = load i8, i8* %chip_scsi_id8, align 8, !dbg !15649
  %conv9 = zext i8 %42 to i32, !dbg !15645
  store i32 %conv9, i32* %chip_scsi_id, align 4, !dbg !15650
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_board_stats(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !15652 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %s = alloca %struct.asc_stats*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !15653, metadata !DIExpression()), !dbg !15654
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !15655, metadata !DIExpression()), !dbg !15656
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !15657, metadata !DIExpression()), !dbg !15658
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15659
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !15660
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !15660
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !15658
  call void @llvm.dbg.declare(metadata %struct.asc_stats** %s, metadata !15661, metadata !DIExpression()), !dbg !15663
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15664
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 12, !dbg !15665
  store %struct.asc_stats* %asc_stats, %struct.asc_stats** %s, align 8, !dbg !15663
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15666
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15667
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 16, !dbg !15668
  %5 = load i32, i32* %host_no, align 4, !dbg !15668
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.87, i64 0, i64 0), i32 %5) #11, !dbg !15669
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15670
  %7 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15671
  %queuecommand = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %7, i32 0, i32 0, !dbg !15672
  %8 = load i32, i32* %queuecommand, align 4, !dbg !15672
  %9 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15673
  %reset = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %9, i32 0, i32 1, !dbg !15674
  %10 = load i32, i32* %reset, align 4, !dbg !15674
  %11 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15675
  %biosparam = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %11, i32 0, i32 2, !dbg !15676
  %12 = load i32, i32* %biosparam, align 4, !dbg !15676
  %13 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15677
  %interrupt = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %13, i32 0, i32 3, !dbg !15678
  %14 = load i32, i32* %interrupt, align 4, !dbg !15678
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.88, i64 0, i64 0), i32 %8, i32 %10, i32 %12, i32 %14) #11, !dbg !15679
  %15 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15680
  %16 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15681
  %callback = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %16, i32 0, i32 4, !dbg !15682
  %17 = load i32, i32* %callback, align 4, !dbg !15682
  %18 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15683
  %done = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %18, i32 0, i32 5, !dbg !15684
  %19 = load i32, i32* %done, align 4, !dbg !15684
  %20 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15685
  %build_error = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %20, i32 0, i32 6, !dbg !15686
  %21 = load i32, i32* %build_error, align 4, !dbg !15686
  %22 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15687
  %adv_build_noreq = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %22, i32 0, i32 7, !dbg !15688
  %23 = load i32, i32* %adv_build_noreq, align 4, !dbg !15688
  %24 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15689
  %adv_build_nosg = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %24, i32 0, i32 8, !dbg !15690
  %25 = load i32, i32* %adv_build_nosg, align 4, !dbg !15690
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %15, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 %17, i32 %19, i32 %21, i32 %23, i32 %25) #11, !dbg !15691
  %26 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15692
  %27 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15693
  %exe_noerror = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %27, i32 0, i32 9, !dbg !15694
  %28 = load i32, i32* %exe_noerror, align 4, !dbg !15694
  %29 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15695
  %exe_busy = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %29, i32 0, i32 10, !dbg !15696
  %30 = load i32, i32* %exe_busy, align 4, !dbg !15696
  %31 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15697
  %exe_error = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %31, i32 0, i32 11, !dbg !15698
  %32 = load i32, i32* %exe_error, align 4, !dbg !15698
  %33 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15699
  %exe_unknown = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %33, i32 0, i32 12, !dbg !15700
  %34 = load i32, i32* %exe_unknown, align 4, !dbg !15700
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %26, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.90, i64 0, i64 0), i32 %28, i32 %30, i32 %32, i32 %34) #11, !dbg !15701
  %35 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15702
  %xfer_cnt = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %35, i32 0, i32 13, !dbg !15704
  %36 = load i32, i32* %xfer_cnt, align 4, !dbg !15704
  %cmp = icmp ugt i32 %36, 0, !dbg !15705
  br i1 %cmp, label %if.then, label %if.end, !dbg !15706

if.then:                                          ; preds = %entry
  %37 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15707
  %38 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15709
  %xfer_cnt1 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %38, i32 0, i32 13, !dbg !15710
  %39 = load i32, i32* %xfer_cnt1, align 4, !dbg !15710
  %40 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15711
  %xfer_elem = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %40, i32 0, i32 14, !dbg !15712
  %41 = load i32, i32* %xfer_elem, align 4, !dbg !15712
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %37, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i64 0, i64 0), i32 %39, i32 %41) #11, !dbg !15713
  %42 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15714
  %43 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15715
  %xfer_sect = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %43, i32 0, i32 15, !dbg !15716
  %44 = load i32, i32* %xfer_sect, align 4, !dbg !15716
  %div = udiv i32 %44, 2, !dbg !15717
  %45 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15718
  %xfer_sect2 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %45, i32 0, i32 15, !dbg !15718
  %46 = load i32, i32* %xfer_sect2, align 4, !dbg !15718
  %div3 = udiv i32 %46, 2, !dbg !15718
  %mul = mul i32 10, %div3, !dbg !15718
  %47 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15718
  %xfer_sect4 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %47, i32 0, i32 15, !dbg !15718
  %48 = load i32, i32* %xfer_sect4, align 4, !dbg !15718
  %mul5 = mul i32 %48, 10, !dbg !15718
  %div6 = udiv i32 %mul5, 2, !dbg !15718
  %cmp7 = icmp ugt i32 %mul, %div6, !dbg !15718
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15718

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !15718

cond.false:                                       ; preds = %if.then
  %49 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15718
  %xfer_sect8 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %49, i32 0, i32 15, !dbg !15718
  %50 = load i32, i32* %xfer_sect8, align 4, !dbg !15718
  %mul9 = mul i32 %50, 10, !dbg !15718
  %div10 = udiv i32 %mul9, 2, !dbg !15718
  %51 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15718
  %xfer_sect11 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %51, i32 0, i32 15, !dbg !15718
  %52 = load i32, i32* %xfer_sect11, align 4, !dbg !15718
  %div12 = udiv i32 %52, 2, !dbg !15718
  %mul13 = mul i32 10, %div12, !dbg !15718
  %sub = sub i32 %div10, %mul13, !dbg !15718
  br label %cond.end, !dbg !15718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !15718
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.92, i64 0, i64 0), i32 %div, i32 %cond) #11, !dbg !15719
  %53 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15720
  %54 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15721
  %xfer_elem14 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %54, i32 0, i32 14, !dbg !15722
  %55 = load i32, i32* %xfer_elem14, align 4, !dbg !15722
  %56 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15723
  %xfer_cnt15 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %56, i32 0, i32 13, !dbg !15724
  %57 = load i32, i32* %xfer_cnt15, align 4, !dbg !15724
  %div16 = udiv i32 %55, %57, !dbg !15725
  %58 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_elem17 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %58, i32 0, i32 14, !dbg !15726
  %59 = load i32, i32* %xfer_elem17, align 4, !dbg !15726
  %60 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_cnt18 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %60, i32 0, i32 13, !dbg !15726
  %61 = load i32, i32* %xfer_cnt18, align 4, !dbg !15726
  %div19 = udiv i32 %59, %61, !dbg !15726
  %mul20 = mul i32 10, %div19, !dbg !15726
  %62 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_elem21 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %62, i32 0, i32 14, !dbg !15726
  %63 = load i32, i32* %xfer_elem21, align 4, !dbg !15726
  %mul22 = mul i32 %63, 10, !dbg !15726
  %64 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_cnt23 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %64, i32 0, i32 13, !dbg !15726
  %65 = load i32, i32* %xfer_cnt23, align 4, !dbg !15726
  %div24 = udiv i32 %mul22, %65, !dbg !15726
  %cmp25 = icmp ugt i32 %mul20, %div24, !dbg !15726
  br i1 %cmp25, label %cond.true26, label %cond.false27, !dbg !15726

cond.true26:                                      ; preds = %cond.end
  br label %cond.end37, !dbg !15726

cond.false27:                                     ; preds = %cond.end
  %66 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_elem28 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %66, i32 0, i32 14, !dbg !15726
  %67 = load i32, i32* %xfer_elem28, align 4, !dbg !15726
  %mul29 = mul i32 %67, 10, !dbg !15726
  %68 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_cnt30 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %68, i32 0, i32 13, !dbg !15726
  %69 = load i32, i32* %xfer_cnt30, align 4, !dbg !15726
  %div31 = udiv i32 %mul29, %69, !dbg !15726
  %70 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_elem32 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %70, i32 0, i32 14, !dbg !15726
  %71 = load i32, i32* %xfer_elem32, align 4, !dbg !15726
  %72 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15726
  %xfer_cnt33 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %72, i32 0, i32 13, !dbg !15726
  %73 = load i32, i32* %xfer_cnt33, align 4, !dbg !15726
  %div34 = udiv i32 %71, %73, !dbg !15726
  %mul35 = mul i32 10, %div34, !dbg !15726
  %sub36 = sub i32 %div31, %mul35, !dbg !15726
  br label %cond.end37, !dbg !15726

cond.end37:                                       ; preds = %cond.false27, %cond.true26
  %cond38 = phi i32 [ 0, %cond.true26 ], [ %sub36, %cond.false27 ], !dbg !15726
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.93, i64 0, i64 0), i32 %div16, i32 %cond38) #11, !dbg !15727
  %74 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15728
  %75 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15729
  %xfer_sect39 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %75, i32 0, i32 15, !dbg !15730
  %76 = load i32, i32* %xfer_sect39, align 4, !dbg !15730
  %div40 = udiv i32 %76, 2, !dbg !15731
  %77 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15732
  %xfer_elem41 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %77, i32 0, i32 14, !dbg !15733
  %78 = load i32, i32* %xfer_elem41, align 4, !dbg !15733
  %div42 = udiv i32 %div40, %78, !dbg !15734
  %79 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_sect43 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %79, i32 0, i32 15, !dbg !15735
  %80 = load i32, i32* %xfer_sect43, align 4, !dbg !15735
  %div44 = udiv i32 %80, 2, !dbg !15735
  %81 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_elem45 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %81, i32 0, i32 14, !dbg !15735
  %82 = load i32, i32* %xfer_elem45, align 4, !dbg !15735
  %div46 = udiv i32 %div44, %82, !dbg !15735
  %mul47 = mul i32 10, %div46, !dbg !15735
  %83 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_sect48 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %83, i32 0, i32 15, !dbg !15735
  %84 = load i32, i32* %xfer_sect48, align 4, !dbg !15735
  %div49 = udiv i32 %84, 2, !dbg !15735
  %mul50 = mul i32 %div49, 10, !dbg !15735
  %85 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_elem51 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %85, i32 0, i32 14, !dbg !15735
  %86 = load i32, i32* %xfer_elem51, align 4, !dbg !15735
  %div52 = udiv i32 %mul50, %86, !dbg !15735
  %cmp53 = icmp ugt i32 %mul47, %div52, !dbg !15735
  br i1 %cmp53, label %cond.true54, label %cond.false55, !dbg !15735

cond.true54:                                      ; preds = %cond.end37
  br label %cond.end67, !dbg !15735

cond.false55:                                     ; preds = %cond.end37
  %87 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_sect56 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %87, i32 0, i32 15, !dbg !15735
  %88 = load i32, i32* %xfer_sect56, align 4, !dbg !15735
  %div57 = udiv i32 %88, 2, !dbg !15735
  %mul58 = mul i32 %div57, 10, !dbg !15735
  %89 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_elem59 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %89, i32 0, i32 14, !dbg !15735
  %90 = load i32, i32* %xfer_elem59, align 4, !dbg !15735
  %div60 = udiv i32 %mul58, %90, !dbg !15735
  %91 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_sect61 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %91, i32 0, i32 15, !dbg !15735
  %92 = load i32, i32* %xfer_sect61, align 4, !dbg !15735
  %div62 = udiv i32 %92, 2, !dbg !15735
  %93 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15735
  %xfer_elem63 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %93, i32 0, i32 14, !dbg !15735
  %94 = load i32, i32* %xfer_elem63, align 4, !dbg !15735
  %div64 = udiv i32 %div62, %94, !dbg !15735
  %mul65 = mul i32 10, %div64, !dbg !15735
  %sub66 = sub i32 %div60, %mul65, !dbg !15735
  br label %cond.end67, !dbg !15735

cond.end67:                                       ; preds = %cond.false55, %cond.true54
  %cond68 = phi i32 [ 0, %cond.true54 ], [ %sub66, %cond.false55 ], !dbg !15735
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %74, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0), i32 %div42, i32 %cond68) #11, !dbg !15736
  %95 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15737
  %96 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15738
  %xfer_sect69 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %96, i32 0, i32 15, !dbg !15739
  %97 = load i32, i32* %xfer_sect69, align 4, !dbg !15739
  %div70 = udiv i32 %97, 2, !dbg !15740
  %98 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15741
  %xfer_cnt71 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %98, i32 0, i32 13, !dbg !15742
  %99 = load i32, i32* %xfer_cnt71, align 4, !dbg !15742
  %div72 = udiv i32 %div70, %99, !dbg !15743
  %100 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_sect73 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %100, i32 0, i32 15, !dbg !15744
  %101 = load i32, i32* %xfer_sect73, align 4, !dbg !15744
  %div74 = udiv i32 %101, 2, !dbg !15744
  %102 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_cnt75 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %102, i32 0, i32 13, !dbg !15744
  %103 = load i32, i32* %xfer_cnt75, align 4, !dbg !15744
  %div76 = udiv i32 %div74, %103, !dbg !15744
  %mul77 = mul i32 10, %div76, !dbg !15744
  %104 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_sect78 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %104, i32 0, i32 15, !dbg !15744
  %105 = load i32, i32* %xfer_sect78, align 4, !dbg !15744
  %div79 = udiv i32 %105, 2, !dbg !15744
  %mul80 = mul i32 %div79, 10, !dbg !15744
  %106 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_cnt81 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %106, i32 0, i32 13, !dbg !15744
  %107 = load i32, i32* %xfer_cnt81, align 4, !dbg !15744
  %div82 = udiv i32 %mul80, %107, !dbg !15744
  %cmp83 = icmp ugt i32 %mul77, %div82, !dbg !15744
  br i1 %cmp83, label %cond.true84, label %cond.false85, !dbg !15744

cond.true84:                                      ; preds = %cond.end67
  br label %cond.end97, !dbg !15744

cond.false85:                                     ; preds = %cond.end67
  %108 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_sect86 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %108, i32 0, i32 15, !dbg !15744
  %109 = load i32, i32* %xfer_sect86, align 4, !dbg !15744
  %div87 = udiv i32 %109, 2, !dbg !15744
  %mul88 = mul i32 %div87, 10, !dbg !15744
  %110 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_cnt89 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %110, i32 0, i32 13, !dbg !15744
  %111 = load i32, i32* %xfer_cnt89, align 4, !dbg !15744
  %div90 = udiv i32 %mul88, %111, !dbg !15744
  %112 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_sect91 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %112, i32 0, i32 15, !dbg !15744
  %113 = load i32, i32* %xfer_sect91, align 4, !dbg !15744
  %div92 = udiv i32 %113, 2, !dbg !15744
  %114 = load %struct.asc_stats*, %struct.asc_stats** %s, align 8, !dbg !15744
  %xfer_cnt93 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %114, i32 0, i32 13, !dbg !15744
  %115 = load i32, i32* %xfer_cnt93, align 4, !dbg !15744
  %div94 = udiv i32 %div92, %115, !dbg !15744
  %mul95 = mul i32 10, %div94, !dbg !15744
  %sub96 = sub i32 %div90, %mul95, !dbg !15744
  br label %cond.end97, !dbg !15744

cond.end97:                                       ; preds = %cond.false85, %cond.true84
  %cond98 = phi i32 [ 0, %cond.true84 ], [ %sub96, %cond.false85 ], !dbg !15744
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %95, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i64 0, i64 0), i32 %div72, i32 %cond98) #11, !dbg !15745
  br label %if.end, !dbg !15746

if.end:                                           ; preds = %cond.end97, %entry
  ret void, !dbg !15747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_asc_board_info(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !15748 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %chip_scsi_id = alloca i32, align 4
  %v = alloca %struct.asc_dvc_var*, align 8
  %c = alloca %struct.asc_dvc_cfg*, align 8
  %i = alloca i32, align 4
  %renegotiate = alloca i32, align 4
  %syn_period_ix = alloca i8, align 1
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !15749, metadata !DIExpression()), !dbg !15750
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !15751, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !15753, metadata !DIExpression()), !dbg !15754
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15755
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !15756
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !15756
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !15754
  call void @llvm.dbg.declare(metadata i32* %chip_scsi_id, metadata !15757, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %v, metadata !15759, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_cfg** %c, metadata !15761, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15763, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.declare(metadata i32* %renegotiate, metadata !15765, metadata !DIExpression()), !dbg !15766
  store i32 0, i32* %renegotiate, align 4, !dbg !15766
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15767
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !15768
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !15769
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %v, align 8, !dbg !15770
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15771
  %dvc_cfg = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 5, !dbg !15772
  %asc_dvc_cfg = bitcast %union.anon.78* %dvc_cfg to %struct.asc_dvc_cfg*, !dbg !15773
  store %struct.asc_dvc_cfg* %asc_dvc_cfg, %struct.asc_dvc_cfg** %c, align 8, !dbg !15774
  %4 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %c, align 8, !dbg !15775
  %chip_scsi_id1 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %4, i32 0, i32 4, !dbg !15776
  %5 = load i8, i8* %chip_scsi_id1, align 2, !dbg !15776
  %conv = zext i8 %5 to i32, !dbg !15775
  store i32 %conv, i32* %chip_scsi_id, align 4, !dbg !15777
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15778
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !15779
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 16, !dbg !15780
  %8 = load i32, i32* %host_no, align 4, !dbg !15780
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.96, i64 0, i64 0), i32 %8) #11, !dbg !15781
  %9 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15782
  %10 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %c, align 8, !dbg !15783
  %chip_version = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %10, i32 0, i32 7, !dbg !15784
  %11 = load i8, i8* %chip_version, align 1, !dbg !15784
  %conv2 = zext i8 %11 to i32, !dbg !15783
  %12 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %c, align 8, !dbg !15785
  %mcode_date = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %12, i32 0, i32 8, !dbg !15786
  %13 = load i16, i16* %mcode_date, align 2, !dbg !15786
  %conv3 = zext i16 %13 to i32, !dbg !15785
  %14 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %c, align 8, !dbg !15787
  %mcode_version = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %14, i32 0, i32 9, !dbg !15788
  %15 = load i16, i16* %mcode_version, align 2, !dbg !15788
  %conv4 = zext i16 %15 to i32, !dbg !15787
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !15789
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %16, i32 0, i32 1, !dbg !15790
  %17 = load i16, i16* %err_code, align 4, !dbg !15790
  %conv5 = zext i16 %17 to i32, !dbg !15789
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %9, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.97, i64 0, i64 0), i32 %conv2, i32 %conv3, i32 %conv4, i32 %conv5) #11, !dbg !15791
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15792
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !15793
  %cur_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 17, !dbg !15794
  %20 = load i8, i8* %cur_total_qng, align 4, !dbg !15794
  %conv6 = zext i8 %20 to i32, !dbg !15793
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %18, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.98, i64 0, i64 0), i32 %conv6) #11, !dbg !15795
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15796
  call void @seq_puts(%struct.seq_file* %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i64 0, i64 0)) #11, !dbg !15797
  store i32 0, i32* %i, align 4, !dbg !15798
  br label %for.cond, !dbg !15800

for.cond:                                         ; preds = %for.inc, %entry
  %22 = load i32, i32* %i, align 4, !dbg !15801
  %cmp = icmp sle i32 %22, 7, !dbg !15803
  br i1 %cmp, label %for.body, label %for.end, !dbg !15804

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %chip_scsi_id, align 4, !dbg !15805
  %24 = load i32, i32* %i, align 4, !dbg !15808
  %cmp8 = icmp eq i32 %23, %24, !dbg !15809
  br i1 %cmp8, label %if.then, label %lor.lhs.false, !dbg !15810

lor.lhs.false:                                    ; preds = %for.body
  %25 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15811
  %init_tidmask = getelementptr inbounds %struct.asc_board, %struct.asc_board* %25, i32 0, i32 7, !dbg !15812
  %26 = load i16, i16* %init_tidmask, align 4, !dbg !15812
  %conv10 = zext i16 %26 to i32, !dbg !15811
  %27 = load i32, i32* %i, align 4, !dbg !15813
  %and = and i32 %27, 15, !dbg !15813
  %shl = shl i32 1, %and, !dbg !15813
  %and11 = and i32 %conv10, %shl, !dbg !15814
  %cmp12 = icmp eq i32 %and11, 0, !dbg !15815
  br i1 %cmp12, label %if.then, label %if.end, !dbg !15816

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15817

if.end:                                           ; preds = %lor.lhs.false
  %28 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15819
  %29 = load i32, i32* %i, align 4, !dbg !15820
  %30 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !15821
  %use_tagged_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %30, i32 0, i32 7, !dbg !15822
  %31 = load i8, i8* %use_tagged_qng, align 2, !dbg !15822
  %conv14 = zext i8 %31 to i32, !dbg !15821
  %32 = load i32, i32* %i, align 4, !dbg !15823
  %and15 = and i32 %32, 15, !dbg !15823
  %shl16 = shl i32 1, %and15, !dbg !15823
  %and17 = and i32 %conv14, %shl16, !dbg !15824
  %tobool = icmp ne i32 %and17, 0, !dbg !15825
  %33 = zext i1 %tobool to i64, !dbg !15825
  %cond = select i1 %tobool, i32 89, i32 78, !dbg !15825
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i32 %29, i32 %cond) #11, !dbg !15826
  br label %for.inc, !dbg !15827

for.inc:                                          ; preds = %if.end, %if.then
  %34 = load i32, i32* %i, align 4, !dbg !15828
  %inc = add i32 %34, 1, !dbg !15828
  store i32 %inc, i32* %i, align 4, !dbg !15828
  br label %for.cond, !dbg !15829, !llvm.loop !15830

for.end:                                          ; preds = %for.cond
  %35 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15832
  call void @seq_puts(%struct.seq_file* %35, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.101, i64 0, i64 0)) #11, !dbg !15833
  store i32 0, i32* %i, align 4, !dbg !15834
  br label %for.cond18, !dbg !15836

for.cond18:                                       ; preds = %for.inc35, %for.end
  %36 = load i32, i32* %i, align 4, !dbg !15837
  %cmp19 = icmp sle i32 %36, 7, !dbg !15839
  br i1 %cmp19, label %for.body21, label %for.end37, !dbg !15840

for.body21:                                       ; preds = %for.cond18
  %37 = load i32, i32* %chip_scsi_id, align 4, !dbg !15841
  %38 = load i32, i32* %i, align 4, !dbg !15844
  %cmp22 = icmp eq i32 %37, %38, !dbg !15845
  br i1 %cmp22, label %if.then32, label %lor.lhs.false24, !dbg !15846

lor.lhs.false24:                                  ; preds = %for.body21
  %39 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15847
  %init_tidmask25 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %39, i32 0, i32 7, !dbg !15848
  %40 = load i16, i16* %init_tidmask25, align 4, !dbg !15848
  %conv26 = zext i16 %40 to i32, !dbg !15847
  %41 = load i32, i32* %i, align 4, !dbg !15849
  %and27 = and i32 %41, 15, !dbg !15849
  %shl28 = shl i32 1, %and27, !dbg !15849
  %and29 = and i32 %conv26, %shl28, !dbg !15850
  %cmp30 = icmp eq i32 %and29, 0, !dbg !15851
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !15852

if.then32:                                        ; preds = %lor.lhs.false24, %for.body21
  br label %for.inc35, !dbg !15853

if.end33:                                         ; preds = %lor.lhs.false24
  %42 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15855
  %43 = load i32, i32* %i, align 4, !dbg !15856
  %44 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !15857
  %cur_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %44, i32 0, i32 21, !dbg !15858
  %45 = load i32, i32* %i, align 4, !dbg !15859
  %idxprom = sext i32 %45 to i64, !dbg !15857
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng, i64 0, i64 %idxprom, !dbg !15857
  %46 = load i8, i8* %arrayidx, align 1, !dbg !15857
  %conv34 = zext i8 %46 to i32, !dbg !15857
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0), i32 %43, i32 %conv34) #11, !dbg !15860
  br label %for.inc35, !dbg !15861

for.inc35:                                        ; preds = %if.end33, %if.then32
  %47 = load i32, i32* %i, align 4, !dbg !15862
  %inc36 = add i32 %47, 1, !dbg !15862
  store i32 %inc36, i32* %i, align 4, !dbg !15862
  br label %for.cond18, !dbg !15863, !llvm.loop !15864

for.end37:                                        ; preds = %for.cond18
  %48 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15866
  call void @seq_puts(%struct.seq_file* %48, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.103, i64 0, i64 0)) #11, !dbg !15867
  store i32 0, i32* %i, align 4, !dbg !15868
  br label %for.cond38, !dbg !15870

for.cond38:                                       ; preds = %for.inc57, %for.end37
  %49 = load i32, i32* %i, align 4, !dbg !15871
  %cmp39 = icmp sle i32 %49, 7, !dbg !15873
  br i1 %cmp39, label %for.body41, label %for.end59, !dbg !15874

for.body41:                                       ; preds = %for.cond38
  %50 = load i32, i32* %chip_scsi_id, align 4, !dbg !15875
  %51 = load i32, i32* %i, align 4, !dbg !15878
  %cmp42 = icmp eq i32 %50, %51, !dbg !15879
  br i1 %cmp42, label %if.then52, label %lor.lhs.false44, !dbg !15880

lor.lhs.false44:                                  ; preds = %for.body41
  %52 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15881
  %init_tidmask45 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %52, i32 0, i32 7, !dbg !15882
  %53 = load i16, i16* %init_tidmask45, align 4, !dbg !15882
  %conv46 = zext i16 %53 to i32, !dbg !15881
  %54 = load i32, i32* %i, align 4, !dbg !15883
  %and47 = and i32 %54, 15, !dbg !15883
  %shl48 = shl i32 1, %and47, !dbg !15883
  %and49 = and i32 %conv46, %shl48, !dbg !15884
  %cmp50 = icmp eq i32 %and49, 0, !dbg !15885
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !15886

if.then52:                                        ; preds = %lor.lhs.false44, %for.body41
  br label %for.inc57, !dbg !15887

if.end53:                                         ; preds = %lor.lhs.false44
  %55 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15889
  %56 = load i32, i32* %i, align 4, !dbg !15890
  %57 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !15891
  %max_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %57, i32 0, i32 22, !dbg !15892
  %58 = load i32, i32* %i, align 4, !dbg !15893
  %idxprom54 = sext i32 %58 to i64, !dbg !15891
  %arrayidx55 = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng, i64 0, i64 %idxprom54, !dbg !15891
  %59 = load i8, i8* %arrayidx55, align 1, !dbg !15891
  %conv56 = zext i8 %59 to i32, !dbg !15891
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %55, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0), i32 %56, i32 %conv56) #11, !dbg !15894
  br label %for.inc57, !dbg !15895

for.inc57:                                        ; preds = %if.end53, %if.then52
  %60 = load i32, i32* %i, align 4, !dbg !15896
  %inc58 = add i32 %60, 1, !dbg !15896
  store i32 %inc58, i32* %i, align 4, !dbg !15896
  br label %for.cond38, !dbg !15897, !llvm.loop !15898

for.end59:                                        ; preds = %for.cond38
  %61 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15900
  call void @seq_puts(%struct.seq_file* %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.104, i64 0, i64 0)) #11, !dbg !15901
  store i32 0, i32* %i, align 4, !dbg !15902
  br label %for.cond60, !dbg !15904

for.cond60:                                       ; preds = %for.inc86, %for.end59
  %62 = load i32, i32* %i, align 4, !dbg !15905
  %cmp61 = icmp sle i32 %62, 7, !dbg !15907
  br i1 %cmp61, label %for.body63, label %for.end88, !dbg !15908

for.body63:                                       ; preds = %for.cond60
  %63 = load i32, i32* %chip_scsi_id, align 4, !dbg !15909
  %64 = load i32, i32* %i, align 4, !dbg !15912
  %cmp64 = icmp eq i32 %63, %64, !dbg !15913
  br i1 %cmp64, label %if.then74, label %lor.lhs.false66, !dbg !15914

lor.lhs.false66:                                  ; preds = %for.body63
  %65 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15915
  %init_tidmask67 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %65, i32 0, i32 7, !dbg !15916
  %66 = load i16, i16* %init_tidmask67, align 4, !dbg !15916
  %conv68 = zext i16 %66 to i32, !dbg !15915
  %67 = load i32, i32* %i, align 4, !dbg !15917
  %and69 = and i32 %67, 15, !dbg !15917
  %shl70 = shl i32 1, %and69, !dbg !15917
  %and71 = and i32 %conv68, %shl70, !dbg !15918
  %cmp72 = icmp eq i32 %and71, 0, !dbg !15919
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !15920

if.then74:                                        ; preds = %lor.lhs.false66, %for.body63
  br label %for.inc86, !dbg !15921

if.end75:                                         ; preds = %lor.lhs.false66
  %68 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15923
  %queue_full = getelementptr inbounds %struct.asc_board, %struct.asc_board* %68, i32 0, i32 9, !dbg !15925
  %69 = load i16, i16* %queue_full, align 2, !dbg !15925
  %conv76 = zext i16 %69 to i32, !dbg !15923
  %70 = load i32, i32* %i, align 4, !dbg !15926
  %and77 = and i32 %70, 15, !dbg !15926
  %shl78 = shl i32 1, %and77, !dbg !15926
  %and79 = and i32 %conv76, %shl78, !dbg !15927
  %tobool80 = icmp ne i32 %and79, 0, !dbg !15927
  br i1 %tobool80, label %if.then81, label %if.else, !dbg !15928

if.then81:                                        ; preds = %if.end75
  %71 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15929
  %72 = load i32, i32* %i, align 4, !dbg !15930
  %73 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15931
  %queue_full_cnt = getelementptr inbounds %struct.asc_board, %struct.asc_board* %73, i32 0, i32 10, !dbg !15932
  %74 = load i32, i32* %i, align 4, !dbg !15933
  %idxprom82 = sext i32 %74 to i64, !dbg !15931
  %arrayidx83 = getelementptr [16 x i16], [16 x i16]* %queue_full_cnt, i64 0, i64 %idxprom82, !dbg !15931
  %75 = load i16, i16* %arrayidx83, align 2, !dbg !15931
  %conv84 = zext i16 %75 to i32, !dbg !15931
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %71, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i64 0, i64 0), i32 %72, i32 %conv84) #11, !dbg !15934
  br label %if.end85, !dbg !15934

if.else:                                          ; preds = %if.end75
  %76 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15935
  %77 = load i32, i32* %i, align 4, !dbg !15936
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0), i32 %77) #11, !dbg !15937
  br label %if.end85

if.end85:                                         ; preds = %if.else, %if.then81
  br label %for.inc86, !dbg !15938

for.inc86:                                        ; preds = %if.end85, %if.then74
  %78 = load i32, i32* %i, align 4, !dbg !15939
  %inc87 = add i32 %78, 1, !dbg !15939
  store i32 %inc87, i32* %i, align 4, !dbg !15939
  br label %for.cond60, !dbg !15940, !llvm.loop !15941

for.end88:                                        ; preds = %for.cond60
  %79 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15943
  call void @seq_puts(%struct.seq_file* %79, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !15944
  store i32 0, i32* %i, align 4, !dbg !15945
  br label %for.cond89, !dbg !15947

for.cond89:                                       ; preds = %for.inc111, %for.end88
  %80 = load i32, i32* %i, align 4, !dbg !15948
  %cmp90 = icmp sle i32 %80, 7, !dbg !15950
  br i1 %cmp90, label %for.body92, label %for.end113, !dbg !15951

for.body92:                                       ; preds = %for.cond89
  %81 = load i32, i32* %chip_scsi_id, align 4, !dbg !15952
  %82 = load i32, i32* %i, align 4, !dbg !15955
  %cmp93 = icmp eq i32 %81, %82, !dbg !15956
  br i1 %cmp93, label %if.then103, label %lor.lhs.false95, !dbg !15957

lor.lhs.false95:                                  ; preds = %for.body92
  %83 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15958
  %init_tidmask96 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %83, i32 0, i32 7, !dbg !15959
  %84 = load i16, i16* %init_tidmask96, align 4, !dbg !15959
  %conv97 = zext i16 %84 to i32, !dbg !15958
  %85 = load i32, i32* %i, align 4, !dbg !15960
  %and98 = and i32 %85, 15, !dbg !15960
  %shl99 = shl i32 1, %and98, !dbg !15960
  %and100 = and i32 %conv97, %shl99, !dbg !15961
  %cmp101 = icmp eq i32 %and100, 0, !dbg !15962
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !15963

if.then103:                                       ; preds = %lor.lhs.false95, %for.body92
  br label %for.inc111, !dbg !15964

if.end104:                                        ; preds = %lor.lhs.false95
  %86 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15966
  %87 = load i32, i32* %i, align 4, !dbg !15967
  %88 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !15968
  %sdtr_done = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %88, i32 0, i32 6, !dbg !15969
  %89 = load i8, i8* %sdtr_done, align 1, !dbg !15969
  %conv105 = zext i8 %89 to i32, !dbg !15968
  %90 = load i32, i32* %i, align 4, !dbg !15970
  %and106 = and i32 %90, 15, !dbg !15970
  %shl107 = shl i32 1, %and106, !dbg !15970
  %and108 = and i32 %conv105, %shl107, !dbg !15971
  %tobool109 = icmp ne i32 %and108, 0, !dbg !15972
  %91 = zext i1 %tobool109 to i64, !dbg !15972
  %cond110 = select i1 %tobool109, i32 89, i32 78, !dbg !15972
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %86, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i32 %87, i32 %cond110) #11, !dbg !15973
  br label %for.inc111, !dbg !15974

for.inc111:                                       ; preds = %if.end104, %if.then103
  %92 = load i32, i32* %i, align 4, !dbg !15975
  %inc112 = add i32 %92, 1, !dbg !15975
  store i32 %inc112, i32* %i, align 4, !dbg !15975
  br label %for.cond89, !dbg !15976, !llvm.loop !15977

for.end113:                                       ; preds = %for.cond89
  %93 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !15979
  call void @seq_putc(%struct.seq_file* %93, i8 signext 10) #11, !dbg !15980
  store i32 0, i32* %i, align 4, !dbg !15981
  br label %for.cond114, !dbg !15983

for.cond114:                                      ; preds = %for.inc200, %for.end113
  %94 = load i32, i32* %i, align 4, !dbg !15984
  %cmp115 = icmp sle i32 %94, 7, !dbg !15986
  br i1 %cmp115, label %for.body117, label %for.end202, !dbg !15987

for.body117:                                      ; preds = %for.cond114
  call void @llvm.dbg.declare(metadata i8* %syn_period_ix, metadata !15988, metadata !DIExpression()), !dbg !15990
  %95 = load i32, i32* %chip_scsi_id, align 4, !dbg !15991
  %96 = load i32, i32* %i, align 4, !dbg !15993
  %cmp118 = icmp eq i32 %95, %96, !dbg !15994
  br i1 %cmp118, label %if.then135, label %lor.lhs.false120, !dbg !15995

lor.lhs.false120:                                 ; preds = %for.body117
  %97 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !15996
  %init_tidmask121 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %97, i32 0, i32 7, !dbg !15997
  %98 = load i16, i16* %init_tidmask121, align 4, !dbg !15997
  %conv122 = zext i16 %98 to i32, !dbg !15996
  %99 = load i32, i32* %i, align 4, !dbg !15998
  %and123 = and i32 %99, 15, !dbg !15998
  %shl124 = shl i32 1, %and123, !dbg !15998
  %and125 = and i32 %conv122, %shl124, !dbg !15999
  %cmp126 = icmp eq i32 %and125, 0, !dbg !16000
  br i1 %cmp126, label %if.then135, label %lor.lhs.false128, !dbg !16001

lor.lhs.false128:                                 ; preds = %lor.lhs.false120
  %100 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16002
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %100, i32 0, i32 5, !dbg !16003
  %101 = load i8, i8* %init_sdtr, align 4, !dbg !16003
  %conv129 = zext i8 %101 to i32, !dbg !16002
  %102 = load i32, i32* %i, align 4, !dbg !16004
  %and130 = and i32 %102, 15, !dbg !16004
  %shl131 = shl i32 1, %and130, !dbg !16004
  %and132 = and i32 %conv129, %shl131, !dbg !16005
  %cmp133 = icmp eq i32 %and132, 0, !dbg !16006
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !16007

if.then135:                                       ; preds = %lor.lhs.false128, %lor.lhs.false120, %for.body117
  br label %for.inc200, !dbg !16008

if.end136:                                        ; preds = %lor.lhs.false128
  %103 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16010
  %104 = load i32, i32* %i, align 4, !dbg !16011
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %103, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i32 %104) #11, !dbg !16012
  %105 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16013
  %sdtr_data = getelementptr inbounds %struct.asc_board, %struct.asc_board* %105, i32 0, i32 13, !dbg !16015
  %106 = load i32, i32* %i, align 4, !dbg !16016
  %idxprom137 = sext i32 %106 to i64, !dbg !16013
  %arrayidx138 = getelementptr [8 x i8], [8 x i8]* %sdtr_data, i64 0, i64 %idxprom137, !dbg !16013
  %107 = load i8, i8* %arrayidx138, align 1, !dbg !16013
  %conv139 = zext i8 %107 to i32, !dbg !16013
  %and140 = and i32 %conv139, 15, !dbg !16017
  %cmp141 = icmp eq i32 %and140, 0, !dbg !16018
  br i1 %cmp141, label %if.then143, label %if.else144, !dbg !16019

if.then143:                                       ; preds = %if.end136
  %108 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16020
  call void @seq_puts(%struct.seq_file* %108, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i64 0, i64 0)) #11, !dbg !16022
  br label %if.end189, !dbg !16023

if.else144:                                       ; preds = %if.end136
  %109 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16024
  %sdtr_data145 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %109, i32 0, i32 13, !dbg !16026
  %110 = load i32, i32* %i, align 4, !dbg !16027
  %idxprom146 = sext i32 %110 to i64, !dbg !16024
  %arrayidx147 = getelementptr [8 x i8], [8 x i8]* %sdtr_data145, i64 0, i64 %idxprom146, !dbg !16024
  %111 = load i8, i8* %arrayidx147, align 1, !dbg !16024
  %conv148 = zext i8 %111 to i32, !dbg !16024
  %shr = ashr i32 %conv148, 4, !dbg !16028
  %112 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16029
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %112, i32 0, i32 35, !dbg !16030
  %113 = load i8, i8* %max_sdtr_index, align 1, !dbg !16030
  %conv149 = zext i8 %113 to i32, !dbg !16029
  %sub = sub i32 %conv149, 1, !dbg !16031
  %and150 = and i32 %shr, %sub, !dbg !16032
  %conv151 = trunc i32 %and150 to i8, !dbg !16033
  store i8 %conv151, i8* %syn_period_ix, align 1, !dbg !16034
  %114 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16035
  %115 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16036
  %sdtr_period_tbl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %115, i32 0, i32 25, !dbg !16037
  %116 = load i8*, i8** %sdtr_period_tbl, align 8, !dbg !16037
  %117 = load i8, i8* %syn_period_ix, align 1, !dbg !16038
  %idxprom152 = zext i8 %117 to i64, !dbg !16036
  %arrayidx153 = getelementptr i8, i8* %116, i64 %idxprom152, !dbg !16036
  %118 = load i8, i8* %arrayidx153, align 1, !dbg !16036
  %conv154 = zext i8 %118 to i32, !dbg !16036
  %119 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16039
  %sdtr_period_tbl155 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %119, i32 0, i32 25, !dbg !16040
  %120 = load i8*, i8** %sdtr_period_tbl155, align 8, !dbg !16040
  %121 = load i8, i8* %syn_period_ix, align 1, !dbg !16041
  %idxprom156 = zext i8 %121 to i64, !dbg !16039
  %arrayidx157 = getelementptr i8, i8* %120, i64 %idxprom156, !dbg !16039
  %122 = load i8, i8* %arrayidx157, align 1, !dbg !16039
  %conv158 = zext i8 %122 to i32, !dbg !16039
  %div = sdiv i32 250, %conv158, !dbg !16042
  %123 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16043
  %sdtr_period_tbl159 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %123, i32 0, i32 25, !dbg !16043
  %124 = load i8*, i8** %sdtr_period_tbl159, align 8, !dbg !16043
  %125 = load i8, i8* %syn_period_ix, align 1, !dbg !16043
  %idxprom160 = zext i8 %125 to i64, !dbg !16043
  %arrayidx161 = getelementptr i8, i8* %124, i64 %idxprom160, !dbg !16043
  %126 = load i8, i8* %arrayidx161, align 1, !dbg !16043
  %conv162 = zext i8 %126 to i32, !dbg !16043
  %div163 = sdiv i32 250, %conv162, !dbg !16043
  %mul = mul i32 10, %div163, !dbg !16043
  %127 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16043
  %sdtr_period_tbl164 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %127, i32 0, i32 25, !dbg !16043
  %128 = load i8*, i8** %sdtr_period_tbl164, align 8, !dbg !16043
  %129 = load i8, i8* %syn_period_ix, align 1, !dbg !16043
  %idxprom165 = zext i8 %129 to i64, !dbg !16043
  %arrayidx166 = getelementptr i8, i8* %128, i64 %idxprom165, !dbg !16043
  %130 = load i8, i8* %arrayidx166, align 1, !dbg !16043
  %conv167 = zext i8 %130 to i32, !dbg !16043
  %div168 = sdiv i32 2500, %conv167, !dbg !16043
  %cmp169 = icmp sgt i32 %mul, %div168, !dbg !16043
  br i1 %cmp169, label %cond.true, label %cond.false, !dbg !16043

cond.true:                                        ; preds = %if.else144
  br label %cond.end, !dbg !16043

cond.false:                                       ; preds = %if.else144
  %131 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16043
  %sdtr_period_tbl171 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %131, i32 0, i32 25, !dbg !16043
  %132 = load i8*, i8** %sdtr_period_tbl171, align 8, !dbg !16043
  %133 = load i8, i8* %syn_period_ix, align 1, !dbg !16043
  %idxprom172 = zext i8 %133 to i64, !dbg !16043
  %arrayidx173 = getelementptr i8, i8* %132, i64 %idxprom172, !dbg !16043
  %134 = load i8, i8* %arrayidx173, align 1, !dbg !16043
  %conv174 = zext i8 %134 to i32, !dbg !16043
  %div175 = sdiv i32 2500, %conv174, !dbg !16043
  %135 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16043
  %sdtr_period_tbl176 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %135, i32 0, i32 25, !dbg !16043
  %136 = load i8*, i8** %sdtr_period_tbl176, align 8, !dbg !16043
  %137 = load i8, i8* %syn_period_ix, align 1, !dbg !16043
  %idxprom177 = zext i8 %137 to i64, !dbg !16043
  %arrayidx178 = getelementptr i8, i8* %136, i64 %idxprom177, !dbg !16043
  %138 = load i8, i8* %arrayidx178, align 1, !dbg !16043
  %conv179 = zext i8 %138 to i32, !dbg !16043
  %div180 = sdiv i32 250, %conv179, !dbg !16043
  %mul181 = mul i32 10, %div180, !dbg !16043
  %sub182 = sub i32 %div175, %mul181, !dbg !16043
  br label %cond.end, !dbg !16043

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond183 = phi i32 [ 0, %cond.true ], [ %sub182, %cond.false ], !dbg !16043
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %114, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.109, i64 0, i64 0), i32 %conv154, i32 %div, i32 %cond183) #11, !dbg !16044
  %139 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16045
  %140 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16046
  %sdtr_data184 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %140, i32 0, i32 13, !dbg !16047
  %141 = load i32, i32* %i, align 4, !dbg !16048
  %idxprom185 = sext i32 %141 to i64, !dbg !16046
  %arrayidx186 = getelementptr [8 x i8], [8 x i8]* %sdtr_data184, i64 0, i64 %idxprom185, !dbg !16046
  %142 = load i8, i8* %arrayidx186, align 1, !dbg !16046
  %conv187 = zext i8 %142 to i32, !dbg !16046
  %and188 = and i32 %conv187, 15, !dbg !16049
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %139, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.110, i64 0, i64 0), i32 %and188) #11, !dbg !16050
  br label %if.end189

if.end189:                                        ; preds = %cond.end, %if.then143
  %143 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %v, align 8, !dbg !16051
  %sdtr_done190 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %143, i32 0, i32 6, !dbg !16053
  %144 = load i8, i8* %sdtr_done190, align 1, !dbg !16053
  %conv191 = zext i8 %144 to i32, !dbg !16051
  %145 = load i32, i32* %i, align 4, !dbg !16054
  %and192 = and i32 %145, 15, !dbg !16054
  %shl193 = shl i32 1, %and192, !dbg !16054
  %and194 = and i32 %conv191, %shl193, !dbg !16055
  %cmp195 = icmp eq i32 %and194, 0, !dbg !16056
  br i1 %cmp195, label %if.then197, label %if.else198, !dbg !16057

if.then197:                                       ; preds = %if.end189
  %146 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16058
  call void @seq_puts(%struct.seq_file* %146, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i64 0, i64 0)) #11, !dbg !16060
  store i32 1, i32* %renegotiate, align 4, !dbg !16061
  br label %if.end199, !dbg !16062

if.else198:                                       ; preds = %if.end189
  %147 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16063
  call void @seq_putc(%struct.seq_file* %147, i8 signext 10) #11, !dbg !16065
  br label %if.end199

if.end199:                                        ; preds = %if.else198, %if.then197
  br label %for.inc200, !dbg !16066

for.inc200:                                       ; preds = %if.end199, %if.then135
  %148 = load i32, i32* %i, align 4, !dbg !16067
  %inc201 = add i32 %148, 1, !dbg !16067
  store i32 %inc201, i32* %i, align 4, !dbg !16067
  br label %for.cond114, !dbg !16068, !llvm.loop !16069

for.end202:                                       ; preds = %for.cond114
  %149 = load i32, i32* %renegotiate, align 4, !dbg !16071
  %tobool203 = icmp ne i32 %149, 0, !dbg !16071
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !16073

if.then204:                                       ; preds = %for.end202
  %150 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16074
  call void @seq_puts(%struct.seq_file* %150, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0)) #11, !dbg !16076
  br label %if.end205, !dbg !16077

if.end205:                                        ; preds = %if.then204, %for.end202
  ret void, !dbg !16078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_prt_adv_board_info(%struct.seq_file* %m, %struct.Scsi_Host* %shost) #2 !dbg !16079 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %i = alloca i32, align 4
  %v = alloca %struct.adv_dvc_var*, align 8
  %c = alloca %struct.adv_dvc_cfg*, align 8
  %iop_base = alloca i8*, align 8
  %chip_scsi_id = alloca i16, align 2
  %lramword = alloca i16, align 2
  %lrambyte = alloca i8, align 1
  %tagqng_able = alloca i16, align 2
  %sdtr_able = alloca i16, align 2
  %wdtr_able = alloca i16, align 2
  %wdtr_done = alloca i16, align 2
  %sdtr_done = alloca i16, align 2
  %period = alloca i16, align 2
  %renegotiate = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !16080, metadata !DIExpression()), !dbg !16081
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !16082, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !16084, metadata !DIExpression()), !dbg !16085
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16086
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !16087
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !16087
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !16085
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16088, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %v, metadata !16090, metadata !DIExpression()), !dbg !16091
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_cfg** %c, metadata !16092, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !16094, metadata !DIExpression()), !dbg !16095
  call void @llvm.dbg.declare(metadata i16* %chip_scsi_id, metadata !16096, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.declare(metadata i16* %lramword, metadata !16098, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.declare(metadata i8* %lrambyte, metadata !16100, metadata !DIExpression()), !dbg !16101
  call void @llvm.dbg.declare(metadata i16* %tagqng_able, metadata !16102, metadata !DIExpression()), !dbg !16103
  call void @llvm.dbg.declare(metadata i16* %sdtr_able, metadata !16104, metadata !DIExpression()), !dbg !16105
  call void @llvm.dbg.declare(metadata i16* %wdtr_able, metadata !16106, metadata !DIExpression()), !dbg !16107
  call void @llvm.dbg.declare(metadata i16* %wdtr_done, metadata !16108, metadata !DIExpression()), !dbg !16109
  call void @llvm.dbg.declare(metadata i16* %sdtr_done, metadata !16110, metadata !DIExpression()), !dbg !16111
  call void @llvm.dbg.declare(metadata i16* %period, metadata !16112, metadata !DIExpression()), !dbg !16113
  store i16 0, i16* %period, align 2, !dbg !16113
  call void @llvm.dbg.declare(metadata i32* %renegotiate, metadata !16114, metadata !DIExpression()), !dbg !16115
  store i32 0, i32* %renegotiate, align 4, !dbg !16115
  %2 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16116
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !16117
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !16118
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %v, align 8, !dbg !16119
  %3 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16120
  %dvc_cfg = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 5, !dbg !16121
  %adv_dvc_cfg = bitcast %union.anon.78* %dvc_cfg to %struct.adv_dvc_cfg*, !dbg !16122
  store %struct.adv_dvc_cfg* %adv_dvc_cfg, %struct.adv_dvc_cfg** %c, align 8, !dbg !16123
  %4 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %v, align 8, !dbg !16124
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %4, i32 0, i32 0, !dbg !16125
  %5 = load i8*, i8** %iop_base1, align 8, !dbg !16125
  store i8* %5, i8** %iop_base, align 8, !dbg !16126
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %v, align 8, !dbg !16127
  %chip_scsi_id2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 19, !dbg !16128
  %7 = load i8, i8* %chip_scsi_id2, align 8, !dbg !16128
  %conv = zext i8 %7 to i16, !dbg !16127
  store i16 %conv, i16* %chip_scsi_id, align 2, !dbg !16129
  %8 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16130
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16131
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 16, !dbg !16132
  %10 = load i32, i32* %host_no, align 4, !dbg !16132
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.113, i64 0, i64 0), i32 %10) #11, !dbg !16133
  %11 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16134
  %12 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %v, align 8, !dbg !16135
  %iop_base3 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %12, i32 0, i32 0, !dbg !16136
  %13 = load i8*, i8** %iop_base3, align 8, !dbg !16136
  %14 = ptrtoint i8* %13 to i64, !dbg !16137
  %15 = load i8*, i8** %iop_base, align 8, !dbg !16138
  %add.ptr = getelementptr i8, i8* %15, i64 14, !dbg !16138
  %call4 = call zeroext i16 @readw(i8* %add.ptr) #11, !dbg !16138
  %conv5 = zext i16 %call4 to i32, !dbg !16138
  %and = and i32 %conv5, 15, !dbg !16139
  %16 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %v, align 8, !dbg !16140
  %err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %16, i32 0, i32 1, !dbg !16141
  %17 = load i16, i16* %err_code, align 8, !dbg !16141
  %conv6 = zext i16 %17 to i32, !dbg !16140
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.114, i64 0, i64 0), i64 %14, i32 %and, i32 %conv6) #11, !dbg !16142
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16143
  %19 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %c, align 8, !dbg !16144
  %chip_version = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %19, i32 0, i32 1, !dbg !16145
  %20 = load i8, i8* %chip_version, align 2, !dbg !16145
  %conv7 = zext i8 %20 to i32, !dbg !16144
  %21 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %c, align 8, !dbg !16146
  %mcode_date = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %21, i32 0, i32 4, !dbg !16147
  %22 = load i16, i16* %mcode_date, align 2, !dbg !16147
  %conv8 = zext i16 %22 to i32, !dbg !16146
  %23 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %c, align 8, !dbg !16148
  %mcode_version = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %23, i32 0, i32 5, !dbg !16149
  %24 = load i16, i16* %mcode_version, align 2, !dbg !16149
  %conv9 = zext i16 %24 to i32, !dbg !16148
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %18, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.115, i64 0, i64 0), i32 %conv7, i32 %conv8, i32 %conv9) #11, !dbg !16150
  br label %do.body, !dbg !16151

do.body:                                          ; preds = %entry
  %25 = load i8*, i8** %iop_base, align 8, !dbg !16152
  %add.ptr10 = getelementptr i8, i8* %25, i64 4, !dbg !16152
  call void @writew(i16 zeroext 160, i8* %add.ptr10) #11, !dbg !16152
  %26 = load i8*, i8** %iop_base, align 8, !dbg !16152
  %add.ptr11 = getelementptr i8, i8* %26, i64 6, !dbg !16152
  %call12 = call zeroext i16 @readw(i8* %add.ptr11) #11, !dbg !16152
  store i16 %call12, i16* %tagqng_able, align 2, !dbg !16152
  br label %do.end, !dbg !16152

do.end:                                           ; preds = %do.body
  %27 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16154
  call void @seq_puts(%struct.seq_file* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !16155
  store i32 0, i32* %i, align 4, !dbg !16156
  br label %for.cond, !dbg !16158

for.cond:                                         ; preds = %for.inc, %do.end
  %28 = load i32, i32* %i, align 4, !dbg !16159
  %cmp = icmp sle i32 %28, 15, !dbg !16161
  br i1 %cmp, label %for.body, label %for.end, !dbg !16162

for.body:                                         ; preds = %for.cond
  %29 = load i16, i16* %chip_scsi_id, align 2, !dbg !16163
  %conv14 = zext i16 %29 to i32, !dbg !16163
  %30 = load i32, i32* %i, align 4, !dbg !16166
  %cmp15 = icmp eq i32 %conv14, %30, !dbg !16167
  br i1 %cmp15, label %if.then, label %lor.lhs.false, !dbg !16168

lor.lhs.false:                                    ; preds = %for.body
  %31 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16169
  %init_tidmask = getelementptr inbounds %struct.asc_board, %struct.asc_board* %31, i32 0, i32 7, !dbg !16170
  %32 = load i16, i16* %init_tidmask, align 4, !dbg !16170
  %conv17 = zext i16 %32 to i32, !dbg !16169
  %33 = load i32, i32* %i, align 4, !dbg !16171
  %and18 = and i32 %33, 15, !dbg !16171
  %shl = shl i32 1, %and18, !dbg !16171
  %and19 = and i32 %conv17, %shl, !dbg !16172
  %cmp20 = icmp eq i32 %and19, 0, !dbg !16173
  br i1 %cmp20, label %if.then, label %if.end, !dbg !16174

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !16175

if.end:                                           ; preds = %lor.lhs.false
  %34 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16177
  %35 = load i32, i32* %i, align 4, !dbg !16178
  %36 = load i16, i16* %tagqng_able, align 2, !dbg !16179
  %conv22 = zext i16 %36 to i32, !dbg !16179
  %37 = load i32, i32* %i, align 4, !dbg !16180
  %and23 = and i32 %37, 15, !dbg !16180
  %shl24 = shl i32 1, %and23, !dbg !16180
  %and25 = and i32 %conv22, %shl24, !dbg !16181
  %tobool = icmp ne i32 %and25, 0, !dbg !16182
  %38 = zext i1 %tobool to i64, !dbg !16182
  %cond = select i1 %tobool, i32 89, i32 78, !dbg !16182
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i32 %35, i32 %cond) #11, !dbg !16183
  br label %for.inc, !dbg !16184

for.inc:                                          ; preds = %if.end, %if.then
  %39 = load i32, i32* %i, align 4, !dbg !16185
  %inc = add i32 %39, 1, !dbg !16185
  store i32 %inc, i32* %i, align 4, !dbg !16185
  br label %for.cond, !dbg !16186, !llvm.loop !16187

for.end:                                          ; preds = %for.cond
  %40 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16189
  call void @seq_puts(%struct.seq_file* %40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !16190
  store i32 0, i32* %i, align 4, !dbg !16191
  br label %for.cond26, !dbg !16193

for.cond26:                                       ; preds = %for.inc50, %for.end
  %41 = load i32, i32* %i, align 4, !dbg !16194
  %cmp27 = icmp sle i32 %41, 15, !dbg !16196
  br i1 %cmp27, label %for.body29, label %for.end52, !dbg !16197

for.body29:                                       ; preds = %for.cond26
  %42 = load i16, i16* %chip_scsi_id, align 2, !dbg !16198
  %conv30 = zext i16 %42 to i32, !dbg !16198
  %43 = load i32, i32* %i, align 4, !dbg !16201
  %cmp31 = icmp eq i32 %conv30, %43, !dbg !16202
  br i1 %cmp31, label %if.then41, label %lor.lhs.false33, !dbg !16203

lor.lhs.false33:                                  ; preds = %for.body29
  %44 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16204
  %init_tidmask34 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %44, i32 0, i32 7, !dbg !16205
  %45 = load i16, i16* %init_tidmask34, align 4, !dbg !16205
  %conv35 = zext i16 %45 to i32, !dbg !16204
  %46 = load i32, i32* %i, align 4, !dbg !16206
  %and36 = and i32 %46, 15, !dbg !16206
  %shl37 = shl i32 1, %and36, !dbg !16206
  %and38 = and i32 %conv35, %shl37, !dbg !16207
  %cmp39 = icmp eq i32 %and38, 0, !dbg !16208
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !16209

if.then41:                                        ; preds = %lor.lhs.false33, %for.body29
  br label %for.inc50, !dbg !16210

if.end42:                                         ; preds = %lor.lhs.false33
  br label %do.body43, !dbg !16212

do.body43:                                        ; preds = %if.end42
  %47 = load i32, i32* %i, align 4, !dbg !16213
  %add = add i32 208, %47, !dbg !16213
  %conv44 = trunc i32 %add to i16, !dbg !16213
  %48 = load i8*, i8** %iop_base, align 8, !dbg !16213
  %add.ptr45 = getelementptr i8, i8* %48, i64 4, !dbg !16213
  call void @writew(i16 zeroext %conv44, i8* %add.ptr45) #11, !dbg !16213
  %49 = load i8*, i8** %iop_base, align 8, !dbg !16213
  %add.ptr46 = getelementptr i8, i8* %49, i64 6, !dbg !16213
  %call47 = call zeroext i8 @readb(i8* %add.ptr46) #11, !dbg !16213
  store i8 %call47, i8* %lrambyte, align 1, !dbg !16213
  br label %do.end48, !dbg !16213

do.end48:                                         ; preds = %do.body43
  %50 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16215
  %51 = load i32, i32* %i, align 4, !dbg !16216
  %52 = load i8, i8* %lrambyte, align 1, !dbg !16217
  %conv49 = zext i8 %52 to i32, !dbg !16217
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %50, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), i32 %51, i32 %conv49) #11, !dbg !16218
  br label %for.inc50, !dbg !16219

for.inc50:                                        ; preds = %do.end48, %if.then41
  %53 = load i32, i32* %i, align 4, !dbg !16220
  %inc51 = add i32 %53, 1, !dbg !16220
  store i32 %inc51, i32* %i, align 4, !dbg !16220
  br label %for.cond26, !dbg !16221, !llvm.loop !16222

for.end52:                                        ; preds = %for.cond26
  %54 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16224
  call void @seq_puts(%struct.seq_file* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.119, i64 0, i64 0)) #11, !dbg !16225
  store i32 0, i32* %i, align 4, !dbg !16226
  br label %for.cond53, !dbg !16228

for.cond53:                                       ; preds = %for.inc78, %for.end52
  %55 = load i32, i32* %i, align 4, !dbg !16229
  %cmp54 = icmp sle i32 %55, 15, !dbg !16231
  br i1 %cmp54, label %for.body56, label %for.end80, !dbg !16232

for.body56:                                       ; preds = %for.cond53
  %56 = load i16, i16* %chip_scsi_id, align 2, !dbg !16233
  %conv57 = zext i16 %56 to i32, !dbg !16233
  %57 = load i32, i32* %i, align 4, !dbg !16236
  %cmp58 = icmp eq i32 %conv57, %57, !dbg !16237
  br i1 %cmp58, label %if.then68, label %lor.lhs.false60, !dbg !16238

lor.lhs.false60:                                  ; preds = %for.body56
  %58 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16239
  %init_tidmask61 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %58, i32 0, i32 7, !dbg !16240
  %59 = load i16, i16* %init_tidmask61, align 4, !dbg !16240
  %conv62 = zext i16 %59 to i32, !dbg !16239
  %60 = load i32, i32* %i, align 4, !dbg !16241
  %and63 = and i32 %60, 15, !dbg !16241
  %shl64 = shl i32 1, %and63, !dbg !16241
  %and65 = and i32 %conv62, %shl64, !dbg !16242
  %cmp66 = icmp eq i32 %and65, 0, !dbg !16243
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !16244

if.then68:                                        ; preds = %lor.lhs.false60, %for.body56
  br label %for.inc78, !dbg !16245

if.end69:                                         ; preds = %lor.lhs.false60
  br label %do.body70, !dbg !16247

do.body70:                                        ; preds = %if.end69
  %61 = load i32, i32* %i, align 4, !dbg !16248
  %add71 = add i32 192, %61, !dbg !16248
  %conv72 = trunc i32 %add71 to i16, !dbg !16248
  %62 = load i8*, i8** %iop_base, align 8, !dbg !16248
  %add.ptr73 = getelementptr i8, i8* %62, i64 4, !dbg !16248
  call void @writew(i16 zeroext %conv72, i8* %add.ptr73) #11, !dbg !16248
  %63 = load i8*, i8** %iop_base, align 8, !dbg !16248
  %add.ptr74 = getelementptr i8, i8* %63, i64 6, !dbg !16248
  %call75 = call zeroext i8 @readb(i8* %add.ptr74) #11, !dbg !16248
  store i8 %call75, i8* %lrambyte, align 1, !dbg !16248
  br label %do.end76, !dbg !16248

do.end76:                                         ; preds = %do.body70
  %64 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16250
  %65 = load i32, i32* %i, align 4, !dbg !16251
  %66 = load i8, i8* %lrambyte, align 1, !dbg !16252
  %conv77 = zext i8 %66 to i32, !dbg !16252
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), i32 %65, i32 %conv77) #11, !dbg !16253
  br label %for.inc78, !dbg !16254

for.inc78:                                        ; preds = %do.end76, %if.then68
  %67 = load i32, i32* %i, align 4, !dbg !16255
  %inc79 = add i32 %67, 1, !dbg !16255
  store i32 %inc79, i32* %i, align 4, !dbg !16255
  br label %for.cond53, !dbg !16256, !llvm.loop !16257

for.end80:                                        ; preds = %for.cond53
  %68 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16259
  call void @seq_putc(%struct.seq_file* %68, i8 signext 10) #11, !dbg !16260
  br label %do.body81, !dbg !16261

do.body81:                                        ; preds = %for.end80
  %69 = load i8*, i8** %iop_base, align 8, !dbg !16262
  %add.ptr82 = getelementptr i8, i8* %69, i64 4, !dbg !16262
  call void @writew(i16 zeroext 156, i8* %add.ptr82) #11, !dbg !16262
  %70 = load i8*, i8** %iop_base, align 8, !dbg !16262
  %add.ptr83 = getelementptr i8, i8* %70, i64 6, !dbg !16262
  %call84 = call zeroext i16 @readw(i8* %add.ptr83) #11, !dbg !16262
  store i16 %call84, i16* %wdtr_able, align 2, !dbg !16262
  br label %do.end85, !dbg !16262

do.end85:                                         ; preds = %do.body81
  %71 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16264
  call void @seq_puts(%struct.seq_file* %71, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0)) #11, !dbg !16265
  store i32 0, i32* %i, align 4, !dbg !16266
  br label %for.cond86, !dbg !16268

for.cond86:                                       ; preds = %for.inc109, %do.end85
  %72 = load i32, i32* %i, align 4, !dbg !16269
  %cmp87 = icmp sle i32 %72, 15, !dbg !16271
  br i1 %cmp87, label %for.body89, label %for.end111, !dbg !16272

for.body89:                                       ; preds = %for.cond86
  %73 = load i16, i16* %chip_scsi_id, align 2, !dbg !16273
  %conv90 = zext i16 %73 to i32, !dbg !16273
  %74 = load i32, i32* %i, align 4, !dbg !16276
  %cmp91 = icmp eq i32 %conv90, %74, !dbg !16277
  br i1 %cmp91, label %if.then101, label %lor.lhs.false93, !dbg !16278

lor.lhs.false93:                                  ; preds = %for.body89
  %75 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16279
  %init_tidmask94 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %75, i32 0, i32 7, !dbg !16280
  %76 = load i16, i16* %init_tidmask94, align 4, !dbg !16280
  %conv95 = zext i16 %76 to i32, !dbg !16279
  %77 = load i32, i32* %i, align 4, !dbg !16281
  %and96 = and i32 %77, 15, !dbg !16281
  %shl97 = shl i32 1, %and96, !dbg !16281
  %and98 = and i32 %conv95, %shl97, !dbg !16282
  %cmp99 = icmp eq i32 %and98, 0, !dbg !16283
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !16284

if.then101:                                       ; preds = %lor.lhs.false93, %for.body89
  br label %for.inc109, !dbg !16285

if.end102:                                        ; preds = %lor.lhs.false93
  %78 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16287
  %79 = load i32, i32* %i, align 4, !dbg !16288
  %80 = load i16, i16* %wdtr_able, align 2, !dbg !16289
  %conv103 = zext i16 %80 to i32, !dbg !16289
  %81 = load i32, i32* %i, align 4, !dbg !16290
  %and104 = and i32 %81, 15, !dbg !16290
  %shl105 = shl i32 1, %and104, !dbg !16290
  %and106 = and i32 %conv103, %shl105, !dbg !16291
  %tobool107 = icmp ne i32 %and106, 0, !dbg !16292
  %82 = zext i1 %tobool107 to i64, !dbg !16292
  %cond108 = select i1 %tobool107, i32 89, i32 78, !dbg !16292
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %78, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i32 %79, i32 %cond108) #11, !dbg !16293
  br label %for.inc109, !dbg !16294

for.inc109:                                       ; preds = %if.end102, %if.then101
  %83 = load i32, i32* %i, align 4, !dbg !16295
  %inc110 = add i32 %83, 1, !dbg !16295
  store i32 %inc110, i32* %i, align 4, !dbg !16295
  br label %for.cond86, !dbg !16296, !llvm.loop !16297

for.end111:                                       ; preds = %for.cond86
  %84 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16299
  call void @seq_putc(%struct.seq_file* %84, i8 signext 10) #11, !dbg !16300
  br label %do.body112, !dbg !16301

do.body112:                                       ; preds = %for.end111
  %85 = load i8*, i8** %iop_base, align 8, !dbg !16302
  %add.ptr113 = getelementptr i8, i8* %85, i64 4, !dbg !16302
  call void @writew(i16 zeroext 292, i8* %add.ptr113) #11, !dbg !16302
  %86 = load i8*, i8** %iop_base, align 8, !dbg !16302
  %add.ptr114 = getelementptr i8, i8* %86, i64 6, !dbg !16302
  %call115 = call zeroext i16 @readw(i8* %add.ptr114) #11, !dbg !16302
  store i16 %call115, i16* %wdtr_done, align 2, !dbg !16302
  br label %do.end116, !dbg !16302

do.end116:                                        ; preds = %do.body112
  %87 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16304
  call void @seq_puts(%struct.seq_file* %87, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.121, i64 0, i64 0)) #11, !dbg !16305
  store i32 0, i32* %i, align 4, !dbg !16306
  br label %for.cond117, !dbg !16308

for.cond117:                                      ; preds = %for.inc158, %do.end116
  %88 = load i32, i32* %i, align 4, !dbg !16309
  %cmp118 = icmp sle i32 %88, 15, !dbg !16311
  br i1 %cmp118, label %for.body120, label %for.end160, !dbg !16312

for.body120:                                      ; preds = %for.cond117
  %89 = load i16, i16* %chip_scsi_id, align 2, !dbg !16313
  %conv121 = zext i16 %89 to i32, !dbg !16313
  %90 = load i32, i32* %i, align 4, !dbg !16316
  %cmp122 = icmp eq i32 %conv121, %90, !dbg !16317
  br i1 %cmp122, label %if.then132, label %lor.lhs.false124, !dbg !16318

lor.lhs.false124:                                 ; preds = %for.body120
  %91 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16319
  %init_tidmask125 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %91, i32 0, i32 7, !dbg !16320
  %92 = load i16, i16* %init_tidmask125, align 4, !dbg !16320
  %conv126 = zext i16 %92 to i32, !dbg !16319
  %93 = load i32, i32* %i, align 4, !dbg !16321
  %and127 = and i32 %93, 15, !dbg !16321
  %shl128 = shl i32 1, %and127, !dbg !16321
  %and129 = and i32 %conv126, %shl128, !dbg !16322
  %cmp130 = icmp eq i32 %and129, 0, !dbg !16323
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !16324

if.then132:                                       ; preds = %lor.lhs.false124, %for.body120
  br label %for.inc158, !dbg !16325

if.end133:                                        ; preds = %lor.lhs.false124
  br label %do.body134, !dbg !16327

do.body134:                                       ; preds = %if.end133
  %94 = load i32, i32* %i, align 4, !dbg !16328
  %mul = mul i32 2, %94, !dbg !16328
  %add135 = add i32 256, %mul, !dbg !16328
  %conv136 = trunc i32 %add135 to i16, !dbg !16328
  %95 = load i8*, i8** %iop_base, align 8, !dbg !16328
  %add.ptr137 = getelementptr i8, i8* %95, i64 4, !dbg !16328
  call void @writew(i16 zeroext %conv136, i8* %add.ptr137) #11, !dbg !16328
  %96 = load i8*, i8** %iop_base, align 8, !dbg !16328
  %add.ptr138 = getelementptr i8, i8* %96, i64 6, !dbg !16328
  %call139 = call zeroext i16 @readw(i8* %add.ptr138) #11, !dbg !16328
  store i16 %call139, i16* %lramword, align 2, !dbg !16328
  br label %do.end140, !dbg !16328

do.end140:                                        ; preds = %do.body134
  %97 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16330
  %98 = load i32, i32* %i, align 4, !dbg !16331
  %99 = load i16, i16* %lramword, align 2, !dbg !16332
  %conv141 = zext i16 %99 to i32, !dbg !16332
  %and142 = and i32 %conv141, 32768, !dbg !16333
  %tobool143 = icmp ne i32 %and142, 0, !dbg !16334
  %100 = zext i1 %tobool143 to i64, !dbg !16334
  %cond144 = select i1 %tobool143, i32 16, i32 8, !dbg !16334
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %97, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), i32 %98, i32 %cond144) #11, !dbg !16335
  %101 = load i16, i16* %wdtr_able, align 2, !dbg !16336
  %conv145 = zext i16 %101 to i32, !dbg !16336
  %102 = load i32, i32* %i, align 4, !dbg !16338
  %and146 = and i32 %102, 15, !dbg !16338
  %shl147 = shl i32 1, %and146, !dbg !16338
  %and148 = and i32 %conv145, %shl147, !dbg !16339
  %tobool149 = icmp ne i32 %and148, 0, !dbg !16339
  br i1 %tobool149, label %land.lhs.true, label %if.end157, !dbg !16340

land.lhs.true:                                    ; preds = %do.end140
  %103 = load i16, i16* %wdtr_done, align 2, !dbg !16341
  %conv150 = zext i16 %103 to i32, !dbg !16341
  %104 = load i32, i32* %i, align 4, !dbg !16342
  %and151 = and i32 %104, 15, !dbg !16342
  %shl152 = shl i32 1, %and151, !dbg !16342
  %and153 = and i32 %conv150, %shl152, !dbg !16343
  %cmp154 = icmp eq i32 %and153, 0, !dbg !16344
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !16345

if.then156:                                       ; preds = %land.lhs.true
  %105 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16346
  call void @seq_putc(%struct.seq_file* %105, i8 signext 42) #11, !dbg !16348
  store i32 1, i32* %renegotiate, align 4, !dbg !16349
  br label %if.end157, !dbg !16350

if.end157:                                        ; preds = %if.then156, %land.lhs.true, %do.end140
  br label %for.inc158, !dbg !16351

for.inc158:                                       ; preds = %if.end157, %if.then132
  %106 = load i32, i32* %i, align 4, !dbg !16352
  %inc159 = add i32 %106, 1, !dbg !16352
  store i32 %inc159, i32* %i, align 4, !dbg !16352
  br label %for.cond117, !dbg !16353, !llvm.loop !16354

for.end160:                                       ; preds = %for.cond117
  %107 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16356
  call void @seq_putc(%struct.seq_file* %107, i8 signext 10) #11, !dbg !16357
  br label %do.body161, !dbg !16358

do.body161:                                       ; preds = %for.end160
  %108 = load i8*, i8** %iop_base, align 8, !dbg !16359
  %add.ptr162 = getelementptr i8, i8* %108, i64 4, !dbg !16359
  call void @writew(i16 zeroext 158, i8* %add.ptr162) #11, !dbg !16359
  %109 = load i8*, i8** %iop_base, align 8, !dbg !16359
  %add.ptr163 = getelementptr i8, i8* %109, i64 6, !dbg !16359
  %call164 = call zeroext i16 @readw(i8* %add.ptr163) #11, !dbg !16359
  store i16 %call164, i16* %sdtr_able, align 2, !dbg !16359
  br label %do.end165, !dbg !16359

do.end165:                                        ; preds = %do.body161
  %110 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16361
  call void @seq_puts(%struct.seq_file* %110, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.122, i64 0, i64 0)) #11, !dbg !16362
  store i32 0, i32* %i, align 4, !dbg !16363
  br label %for.cond166, !dbg !16365

for.cond166:                                      ; preds = %for.inc189, %do.end165
  %111 = load i32, i32* %i, align 4, !dbg !16366
  %cmp167 = icmp sle i32 %111, 15, !dbg !16368
  br i1 %cmp167, label %for.body169, label %for.end191, !dbg !16369

for.body169:                                      ; preds = %for.cond166
  %112 = load i16, i16* %chip_scsi_id, align 2, !dbg !16370
  %conv170 = zext i16 %112 to i32, !dbg !16370
  %113 = load i32, i32* %i, align 4, !dbg !16373
  %cmp171 = icmp eq i32 %conv170, %113, !dbg !16374
  br i1 %cmp171, label %if.then181, label %lor.lhs.false173, !dbg !16375

lor.lhs.false173:                                 ; preds = %for.body169
  %114 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16376
  %init_tidmask174 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %114, i32 0, i32 7, !dbg !16377
  %115 = load i16, i16* %init_tidmask174, align 4, !dbg !16377
  %conv175 = zext i16 %115 to i32, !dbg !16376
  %116 = load i32, i32* %i, align 4, !dbg !16378
  %and176 = and i32 %116, 15, !dbg !16378
  %shl177 = shl i32 1, %and176, !dbg !16378
  %and178 = and i32 %conv175, %shl177, !dbg !16379
  %cmp179 = icmp eq i32 %and178, 0, !dbg !16380
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !16381

if.then181:                                       ; preds = %lor.lhs.false173, %for.body169
  br label %for.inc189, !dbg !16382

if.end182:                                        ; preds = %lor.lhs.false173
  %117 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16384
  %118 = load i32, i32* %i, align 4, !dbg !16385
  %119 = load i16, i16* %sdtr_able, align 2, !dbg !16386
  %conv183 = zext i16 %119 to i32, !dbg !16386
  %120 = load i32, i32* %i, align 4, !dbg !16387
  %and184 = and i32 %120, 15, !dbg !16387
  %shl185 = shl i32 1, %and184, !dbg !16387
  %and186 = and i32 %conv183, %shl185, !dbg !16388
  %tobool187 = icmp ne i32 %and186, 0, !dbg !16389
  %121 = zext i1 %tobool187 to i64, !dbg !16389
  %cond188 = select i1 %tobool187, i32 89, i32 78, !dbg !16389
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %117, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i32 %118, i32 %cond188) #11, !dbg !16390
  br label %for.inc189, !dbg !16391

for.inc189:                                       ; preds = %if.end182, %if.then181
  %122 = load i32, i32* %i, align 4, !dbg !16392
  %inc190 = add i32 %122, 1, !dbg !16392
  store i32 %inc190, i32* %i, align 4, !dbg !16392
  br label %for.cond166, !dbg !16393, !llvm.loop !16394

for.end191:                                       ; preds = %for.cond166
  %123 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16396
  call void @seq_putc(%struct.seq_file* %123, i8 signext 10) #11, !dbg !16397
  br label %do.body192, !dbg !16398

do.body192:                                       ; preds = %for.end191
  %124 = load i8*, i8** %iop_base, align 8, !dbg !16399
  %add.ptr193 = getelementptr i8, i8* %124, i64 4, !dbg !16399
  call void @writew(i16 zeroext 182, i8* %add.ptr193) #11, !dbg !16399
  %125 = load i8*, i8** %iop_base, align 8, !dbg !16399
  %add.ptr194 = getelementptr i8, i8* %125, i64 6, !dbg !16399
  %call195 = call zeroext i16 @readw(i8* %add.ptr194) #11, !dbg !16399
  store i16 %call195, i16* %sdtr_done, align 2, !dbg !16399
  br label %do.end196, !dbg !16399

do.end196:                                        ; preds = %do.body192
  store i32 0, i32* %i, align 4, !dbg !16401
  br label %for.cond197, !dbg !16403

for.cond197:                                      ; preds = %for.inc290, %do.end196
  %126 = load i32, i32* %i, align 4, !dbg !16404
  %cmp198 = icmp sle i32 %126, 15, !dbg !16406
  br i1 %cmp198, label %for.body200, label %for.end292, !dbg !16407

for.body200:                                      ; preds = %for.cond197
  br label %do.body201, !dbg !16408

do.body201:                                       ; preds = %for.body200
  %127 = load i32, i32* %i, align 4, !dbg !16410
  %mul202 = mul i32 2, %127, !dbg !16410
  %add203 = add i32 256, %mul202, !dbg !16410
  %conv204 = trunc i32 %add203 to i16, !dbg !16410
  %128 = load i8*, i8** %iop_base, align 8, !dbg !16410
  %add.ptr205 = getelementptr i8, i8* %128, i64 4, !dbg !16410
  call void @writew(i16 zeroext %conv204, i8* %add.ptr205) #11, !dbg !16410
  %129 = load i8*, i8** %iop_base, align 8, !dbg !16410
  %add.ptr206 = getelementptr i8, i8* %129, i64 6, !dbg !16410
  %call207 = call zeroext i16 @readw(i8* %add.ptr206) #11, !dbg !16410
  store i16 %call207, i16* %lramword, align 2, !dbg !16410
  br label %do.end208, !dbg !16410

do.end208:                                        ; preds = %do.body201
  %130 = load i16, i16* %lramword, align 2, !dbg !16412
  %conv209 = zext i16 %130 to i32, !dbg !16412
  %and210 = and i32 %conv209, -32769, !dbg !16412
  %conv211 = trunc i32 %and210 to i16, !dbg !16412
  store i16 %conv211, i16* %lramword, align 2, !dbg !16412
  %131 = load i16, i16* %chip_scsi_id, align 2, !dbg !16413
  %conv212 = zext i16 %131 to i32, !dbg !16413
  %132 = load i32, i32* %i, align 4, !dbg !16415
  %cmp213 = icmp eq i32 %conv212, %132, !dbg !16416
  br i1 %cmp213, label %if.then230, label %lor.lhs.false215, !dbg !16417

lor.lhs.false215:                                 ; preds = %do.end208
  %133 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !16418
  %init_tidmask216 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %133, i32 0, i32 7, !dbg !16419
  %134 = load i16, i16* %init_tidmask216, align 4, !dbg !16419
  %conv217 = zext i16 %134 to i32, !dbg !16418
  %135 = load i32, i32* %i, align 4, !dbg !16420
  %and218 = and i32 %135, 15, !dbg !16420
  %shl219 = shl i32 1, %and218, !dbg !16420
  %and220 = and i32 %conv217, %shl219, !dbg !16421
  %cmp221 = icmp eq i32 %and220, 0, !dbg !16422
  br i1 %cmp221, label %if.then230, label %lor.lhs.false223, !dbg !16423

lor.lhs.false223:                                 ; preds = %lor.lhs.false215
  %136 = load i16, i16* %sdtr_able, align 2, !dbg !16424
  %conv224 = zext i16 %136 to i32, !dbg !16424
  %137 = load i32, i32* %i, align 4, !dbg !16425
  %and225 = and i32 %137, 15, !dbg !16425
  %shl226 = shl i32 1, %and225, !dbg !16425
  %and227 = and i32 %conv224, %shl226, !dbg !16426
  %cmp228 = icmp eq i32 %and227, 0, !dbg !16427
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !16428

if.then230:                                       ; preds = %lor.lhs.false223, %lor.lhs.false215, %do.end208
  br label %for.inc290, !dbg !16429

if.end231:                                        ; preds = %lor.lhs.false223
  %138 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16431
  %139 = load i32, i32* %i, align 4, !dbg !16432
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %138, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i32 %139) #11, !dbg !16433
  %140 = load i16, i16* %lramword, align 2, !dbg !16434
  %conv232 = zext i16 %140 to i32, !dbg !16434
  %and233 = and i32 %conv232, 31, !dbg !16436
  %cmp234 = icmp eq i32 %and233, 0, !dbg !16437
  br i1 %cmp234, label %if.then236, label %if.else, !dbg !16438

if.then236:                                       ; preds = %if.end231
  %141 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16439
  call void @seq_puts(%struct.seq_file* %141, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i64 0, i64 0)) #11, !dbg !16441
  br label %if.end280, !dbg !16442

if.else:                                          ; preds = %if.end231
  %142 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16443
  call void @seq_puts(%struct.seq_file* %142, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.123, i64 0, i64 0)) #11, !dbg !16445
  %143 = load i16, i16* %lramword, align 2, !dbg !16446
  %conv237 = zext i16 %143 to i32, !dbg !16446
  %and238 = and i32 %conv237, 7936, !dbg !16448
  %cmp239 = icmp eq i32 %and238, 4352, !dbg !16449
  br i1 %cmp239, label %if.then241, label %if.else242, !dbg !16450

if.then241:                                       ; preds = %if.else
  %144 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16451
  call void @seq_puts(%struct.seq_file* %144, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i64 0, i64 0)) #11, !dbg !16453
  br label %if.end277, !dbg !16454

if.else242:                                       ; preds = %if.else
  %145 = load i16, i16* %lramword, align 2, !dbg !16455
  %conv243 = zext i16 %145 to i32, !dbg !16455
  %and244 = and i32 %conv243, 7936, !dbg !16457
  %cmp245 = icmp eq i32 %and244, 4096, !dbg !16458
  br i1 %cmp245, label %if.then247, label %if.else248, !dbg !16459

if.then247:                                       ; preds = %if.else242
  %146 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16460
  call void @seq_puts(%struct.seq_file* %146, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.125, i64 0, i64 0)) #11, !dbg !16462
  br label %if.end276, !dbg !16463

if.else248:                                       ; preds = %if.else242
  %147 = load i16, i16* %lramword, align 2, !dbg !16464
  %conv249 = zext i16 %147 to i32, !dbg !16464
  %shr = ashr i32 %conv249, 8, !dbg !16466
  %mul250 = mul i32 %shr, 25, !dbg !16467
  %add251 = add i32 %mul250, 50, !dbg !16468
  %div = sdiv i32 %add251, 4, !dbg !16469
  %conv252 = trunc i32 %div to i16, !dbg !16470
  store i16 %conv252, i16* %period, align 2, !dbg !16471
  %148 = load i16, i16* %period, align 2, !dbg !16472
  %conv253 = zext i16 %148 to i32, !dbg !16472
  %cmp254 = icmp eq i32 %conv253, 0, !dbg !16474
  br i1 %cmp254, label %if.then256, label %if.else258, !dbg !16475

if.then256:                                       ; preds = %if.else248
  %149 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16476
  %150 = load i16, i16* %period, align 2, !dbg !16478
  %conv257 = zext i16 %150 to i32, !dbg !16478
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %149, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.126, i64 0, i64 0), i32 %conv257) #11, !dbg !16479
  br label %if.end275, !dbg !16480

if.else258:                                       ; preds = %if.else248
  %151 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16481
  %152 = load i16, i16* %period, align 2, !dbg !16483
  %conv259 = zext i16 %152 to i32, !dbg !16483
  %153 = load i16, i16* %period, align 2, !dbg !16484
  %conv260 = zext i16 %153 to i32, !dbg !16484
  %div261 = sdiv i32 250, %conv260, !dbg !16485
  %154 = load i16, i16* %period, align 2, !dbg !16486
  %conv262 = zext i16 %154 to i32, !dbg !16486
  %div263 = sdiv i32 250, %conv262, !dbg !16486
  %mul264 = mul i32 10, %div263, !dbg !16486
  %155 = load i16, i16* %period, align 2, !dbg !16486
  %conv265 = zext i16 %155 to i32, !dbg !16486
  %div266 = sdiv i32 2500, %conv265, !dbg !16486
  %cmp267 = icmp sgt i32 %mul264, %div266, !dbg !16486
  br i1 %cmp267, label %cond.true, label %cond.false, !dbg !16486

cond.true:                                        ; preds = %if.else258
  br label %cond.end, !dbg !16486

cond.false:                                       ; preds = %if.else258
  %156 = load i16, i16* %period, align 2, !dbg !16486
  %conv269 = zext i16 %156 to i32, !dbg !16486
  %div270 = sdiv i32 2500, %conv269, !dbg !16486
  %157 = load i16, i16* %period, align 2, !dbg !16486
  %conv271 = zext i16 %157 to i32, !dbg !16486
  %div272 = sdiv i32 250, %conv271, !dbg !16486
  %mul273 = mul i32 10, %div272, !dbg !16486
  %sub = sub i32 %div270, %mul273, !dbg !16486
  br label %cond.end, !dbg !16486

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond274 = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !16486
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %151, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.127, i64 0, i64 0), i32 %conv259, i32 %div261, i32 %cond274) #11, !dbg !16487
  br label %if.end275

if.end275:                                        ; preds = %cond.end, %if.then256
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.then247
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.then241
  %158 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16488
  %159 = load i16, i16* %lramword, align 2, !dbg !16489
  %conv278 = zext i16 %159 to i32, !dbg !16489
  %and279 = and i32 %conv278, 31, !dbg !16490
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %158, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.110, i64 0, i64 0), i32 %and279) #11, !dbg !16491
  br label %if.end280

if.end280:                                        ; preds = %if.end277, %if.then236
  %160 = load i16, i16* %sdtr_done, align 2, !dbg !16492
  %conv281 = zext i16 %160 to i32, !dbg !16492
  %161 = load i32, i32* %i, align 4, !dbg !16494
  %and282 = and i32 %161, 15, !dbg !16494
  %shl283 = shl i32 1, %and282, !dbg !16494
  %and284 = and i32 %conv281, %shl283, !dbg !16495
  %cmp285 = icmp eq i32 %and284, 0, !dbg !16496
  br i1 %cmp285, label %if.then287, label %if.else288, !dbg !16497

if.then287:                                       ; preds = %if.end280
  %162 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16498
  call void @seq_puts(%struct.seq_file* %162, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i64 0, i64 0)) #11, !dbg !16500
  store i32 1, i32* %renegotiate, align 4, !dbg !16501
  br label %if.end289, !dbg !16502

if.else288:                                       ; preds = %if.end280
  %163 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16503
  call void @seq_putc(%struct.seq_file* %163, i8 signext 10) #11, !dbg !16505
  br label %if.end289

if.end289:                                        ; preds = %if.else288, %if.then287
  br label %for.inc290, !dbg !16506

for.inc290:                                       ; preds = %if.end289, %if.then230
  %164 = load i32, i32* %i, align 4, !dbg !16507
  %inc291 = add i32 %164, 1, !dbg !16507
  store i32 %inc291, i32* %i, align 4, !dbg !16507
  br label %for.cond197, !dbg !16508, !llvm.loop !16509

for.end292:                                       ; preds = %for.cond197
  %165 = load i32, i32* %renegotiate, align 4, !dbg !16511
  %tobool293 = icmp ne i32 %165, 0, !dbg !16511
  br i1 %tobool293, label %if.then294, label %if.end295, !dbg !16513

if.then294:                                       ; preds = %for.end292
  %166 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !16514
  call void @seq_puts(%struct.seq_file* %166, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0)) #11, !dbg !16516
  br label %if.end295, !dbg !16517

if.end295:                                        ; preds = %if.then294, %for.end292
  ret void, !dbg !16518
}

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @asc_get_eeprom_string(i16* %serialnum, i8* %cp) #2 !dbg !16519 {
entry:
  %retval = alloca i32, align 4
  %serialnum.addr = alloca i16*, align 8
  %cp.addr = alloca i8*, align 8
  %w = alloca i16, align 2
  %num = alloca i16, align 2
  store i16* %serialnum, i16** %serialnum.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %serialnum.addr, metadata !16522, metadata !DIExpression()), !dbg !16523
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !16524, metadata !DIExpression()), !dbg !16525
  call void @llvm.dbg.declare(metadata i16* %w, metadata !16526, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.declare(metadata i16* %num, metadata !16528, metadata !DIExpression()), !dbg !16529
  %0 = load i16*, i16** %serialnum.addr, align 8, !dbg !16530
  %arrayidx = getelementptr i16, i16* %0, i64 1, !dbg !16530
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16530
  %conv = zext i16 %1 to i32, !dbg !16530
  %and = and i32 %conv, 65024, !dbg !16532
  %cmp = icmp ne i32 %and, 43520, !dbg !16533
  br i1 %cmp, label %if.then, label %if.else, !dbg !16534

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16535
  br label %return, !dbg !16535

if.else:                                          ; preds = %entry
  %2 = load i16*, i16** %serialnum.addr, align 8, !dbg !16537
  %arrayidx2 = getelementptr i16, i16* %2, i64 0, !dbg !16537
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !16537
  store i16 %3, i16* %w, align 2, !dbg !16539
  %4 = load i16, i16* %w, align 2, !dbg !16540
  %conv3 = zext i16 %4 to i32, !dbg !16540
  %and4 = and i32 %conv3, 57344, !dbg !16542
  %shr = ashr i32 %and4, 13, !dbg !16543
  %add = add i32 65, %shr, !dbg !16544
  %conv5 = trunc i32 %add to i8, !dbg !16545
  %5 = load i8*, i8** %cp.addr, align 8, !dbg !16546
  store i8 %conv5, i8* %5, align 1, !dbg !16547
  %conv6 = zext i8 %conv5 to i32, !dbg !16548
  %cmp7 = icmp eq i32 %conv6, 72, !dbg !16549
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !16550

if.then9:                                         ; preds = %if.else
  %6 = load i8*, i8** %cp.addr, align 8, !dbg !16551
  %7 = load i8, i8* %6, align 1, !dbg !16553
  %conv10 = zext i8 %7 to i32, !dbg !16553
  %add11 = add i32 %conv10, 8, !dbg !16553
  %conv12 = trunc i32 %add11 to i8, !dbg !16553
  store i8 %conv12, i8* %6, align 1, !dbg !16553
  br label %if.end, !dbg !16554

if.end:                                           ; preds = %if.then9, %if.else
  %8 = load i8*, i8** %cp.addr, align 8, !dbg !16555
  %incdec.ptr = getelementptr i8, i8* %8, i32 1, !dbg !16555
  store i8* %incdec.ptr, i8** %cp.addr, align 8, !dbg !16555
  %9 = load i16, i16* %w, align 2, !dbg !16556
  %conv13 = zext i16 %9 to i32, !dbg !16556
  %and14 = and i32 %conv13, 7168, !dbg !16557
  %shr15 = ashr i32 %and14, 10, !dbg !16558
  %add16 = add i32 65, %shr15, !dbg !16559
  %conv17 = trunc i32 %add16 to i8, !dbg !16560
  %10 = load i8*, i8** %cp.addr, align 8, !dbg !16561
  %incdec.ptr18 = getelementptr i8, i8* %10, i32 1, !dbg !16561
  store i8* %incdec.ptr18, i8** %cp.addr, align 8, !dbg !16561
  store i8 %conv17, i8* %10, align 1, !dbg !16562
  %11 = load i16, i16* %w, align 2, !dbg !16563
  %conv19 = zext i16 %11 to i32, !dbg !16563
  %and20 = and i32 %conv19, 1023, !dbg !16564
  %conv21 = trunc i32 %and20 to i16, !dbg !16563
  store i16 %conv21, i16* %num, align 2, !dbg !16565
  %12 = load i16, i16* %num, align 2, !dbg !16566
  %conv22 = zext i16 %12 to i32, !dbg !16566
  %div = sdiv i32 %conv22, 100, !dbg !16567
  %add23 = add i32 48, %div, !dbg !16568
  %conv24 = trunc i32 %add23 to i8, !dbg !16569
  %13 = load i8*, i8** %cp.addr, align 8, !dbg !16570
  %incdec.ptr25 = getelementptr i8, i8* %13, i32 1, !dbg !16570
  store i8* %incdec.ptr25, i8** %cp.addr, align 8, !dbg !16570
  store i8 %conv24, i8* %13, align 1, !dbg !16571
  %14 = load i16, i16* %num, align 2, !dbg !16572
  %conv26 = zext i16 %14 to i32, !dbg !16572
  %rem = srem i32 %conv26, 100, !dbg !16572
  %conv27 = trunc i32 %rem to i16, !dbg !16572
  store i16 %conv27, i16* %num, align 2, !dbg !16572
  %15 = load i16, i16* %num, align 2, !dbg !16573
  %conv28 = zext i16 %15 to i32, !dbg !16573
  %div29 = sdiv i32 %conv28, 10, !dbg !16574
  %add30 = add i32 48, %div29, !dbg !16575
  %conv31 = trunc i32 %add30 to i8, !dbg !16576
  %16 = load i8*, i8** %cp.addr, align 8, !dbg !16577
  %incdec.ptr32 = getelementptr i8, i8* %16, i32 1, !dbg !16577
  store i8* %incdec.ptr32, i8** %cp.addr, align 8, !dbg !16577
  store i8 %conv31, i8* %16, align 1, !dbg !16578
  %17 = load i16, i16* %num, align 2, !dbg !16579
  %conv33 = zext i16 %17 to i32, !dbg !16579
  %rem34 = srem i32 %conv33, 10, !dbg !16580
  %add35 = add i32 65, %rem34, !dbg !16581
  %conv36 = trunc i32 %add35 to i8, !dbg !16582
  %18 = load i8*, i8** %cp.addr, align 8, !dbg !16583
  %incdec.ptr37 = getelementptr i8, i8* %18, i32 1, !dbg !16583
  store i8* %incdec.ptr37, i8** %cp.addr, align 8, !dbg !16583
  store i8 %conv36, i8* %18, align 1, !dbg !16584
  %19 = load i16*, i16** %serialnum.addr, align 8, !dbg !16585
  %arrayidx38 = getelementptr i16, i16* %19, i64 1, !dbg !16585
  %20 = load i16, i16* %arrayidx38, align 2, !dbg !16585
  store i16 %20, i16* %w, align 2, !dbg !16586
  %21 = load i16*, i16** %serialnum.addr, align 8, !dbg !16587
  %arrayidx39 = getelementptr i16, i16* %21, i64 2, !dbg !16587
  %22 = load i16, i16* %arrayidx39, align 2, !dbg !16587
  %conv40 = zext i16 %22 to i32, !dbg !16587
  %and41 = and i32 %conv40, 32768, !dbg !16589
  %tobool = icmp ne i32 %and41, 0, !dbg !16589
  br i1 %tobool, label %if.then42, label %if.else49, !dbg !16590

if.then42:                                        ; preds = %if.end
  %23 = load i16, i16* %w, align 2, !dbg !16591
  %conv43 = zext i16 %23 to i32, !dbg !16591
  %and44 = and i32 %conv43, 448, !dbg !16593
  %shr45 = ashr i32 %and44, 6, !dbg !16594
  %add46 = add i32 56, %shr45, !dbg !16595
  %conv47 = trunc i32 %add46 to i8, !dbg !16596
  %24 = load i8*, i8** %cp.addr, align 8, !dbg !16597
  %incdec.ptr48 = getelementptr i8, i8* %24, i32 1, !dbg !16597
  store i8* %incdec.ptr48, i8** %cp.addr, align 8, !dbg !16597
  store i8 %conv47, i8* %24, align 1, !dbg !16598
  br label %if.end56, !dbg !16599

if.else49:                                        ; preds = %if.end
  %25 = load i16, i16* %w, align 2, !dbg !16600
  %conv50 = zext i16 %25 to i32, !dbg !16600
  %and51 = and i32 %conv50, 448, !dbg !16602
  %shr52 = ashr i32 %and51, 6, !dbg !16603
  %add53 = add i32 48, %shr52, !dbg !16604
  %conv54 = trunc i32 %add53 to i8, !dbg !16605
  %26 = load i8*, i8** %cp.addr, align 8, !dbg !16606
  %incdec.ptr55 = getelementptr i8, i8* %26, i32 1, !dbg !16606
  store i8* %incdec.ptr55, i8** %cp.addr, align 8, !dbg !16606
  store i8 %conv54, i8* %26, align 1, !dbg !16607
  br label %if.end56

if.end56:                                         ; preds = %if.else49, %if.then42
  %27 = load i16, i16* %w, align 2, !dbg !16608
  %conv57 = zext i16 %27 to i32, !dbg !16608
  %and58 = and i32 %conv57, 63, !dbg !16609
  %conv59 = trunc i32 %and58 to i16, !dbg !16608
  store i16 %conv59, i16* %num, align 2, !dbg !16610
  %28 = load i16, i16* %num, align 2, !dbg !16611
  %conv60 = zext i16 %28 to i32, !dbg !16611
  %div61 = sdiv i32 %conv60, 10, !dbg !16612
  %add62 = add i32 48, %div61, !dbg !16613
  %conv63 = trunc i32 %add62 to i8, !dbg !16614
  %29 = load i8*, i8** %cp.addr, align 8, !dbg !16615
  %incdec.ptr64 = getelementptr i8, i8* %29, i32 1, !dbg !16615
  store i8* %incdec.ptr64, i8** %cp.addr, align 8, !dbg !16615
  store i8 %conv63, i8* %29, align 1, !dbg !16616
  %30 = load i16, i16* %num, align 2, !dbg !16617
  %conv65 = zext i16 %30 to i32, !dbg !16617
  %rem66 = srem i32 %conv65, 10, !dbg !16617
  %conv67 = trunc i32 %rem66 to i16, !dbg !16617
  store i16 %conv67, i16* %num, align 2, !dbg !16617
  %31 = load i16, i16* %num, align 2, !dbg !16618
  %conv68 = zext i16 %31 to i32, !dbg !16618
  %add69 = add i32 48, %conv68, !dbg !16619
  %conv70 = trunc i32 %add69 to i8, !dbg !16620
  %32 = load i8*, i8** %cp.addr, align 8, !dbg !16621
  %incdec.ptr71 = getelementptr i8, i8* %32, i32 1, !dbg !16621
  store i8* %incdec.ptr71, i8** %cp.addr, align 8, !dbg !16621
  store i8 %conv70, i8* %32, align 1, !dbg !16622
  %33 = load i16*, i16** %serialnum.addr, align 8, !dbg !16623
  %arrayidx72 = getelementptr i16, i16* %33, i64 2, !dbg !16623
  %34 = load i16, i16* %arrayidx72, align 2, !dbg !16623
  %conv73 = zext i16 %34 to i32, !dbg !16623
  %and74 = and i32 %conv73, 32767, !dbg !16624
  %conv75 = trunc i32 %and74 to i16, !dbg !16623
  store i16 %conv75, i16* %w, align 2, !dbg !16625
  %35 = load i16, i16* %w, align 2, !dbg !16626
  %conv76 = zext i16 %35 to i32, !dbg !16626
  %div77 = sdiv i32 %conv76, 1000, !dbg !16627
  %add78 = add i32 65, %div77, !dbg !16628
  %conv79 = trunc i32 %add78 to i8, !dbg !16629
  %36 = load i8*, i8** %cp.addr, align 8, !dbg !16630
  %incdec.ptr80 = getelementptr i8, i8* %36, i32 1, !dbg !16630
  store i8* %incdec.ptr80, i8** %cp.addr, align 8, !dbg !16630
  store i8 %conv79, i8* %36, align 1, !dbg !16631
  %37 = load i16, i16* %w, align 2, !dbg !16632
  %conv81 = zext i16 %37 to i32, !dbg !16632
  %rem82 = srem i32 %conv81, 1000, !dbg !16633
  %conv83 = trunc i32 %rem82 to i16, !dbg !16632
  store i16 %conv83, i16* %num, align 2, !dbg !16634
  %38 = load i16, i16* %num, align 2, !dbg !16635
  %conv84 = zext i16 %38 to i32, !dbg !16635
  %div85 = sdiv i32 %conv84, 100, !dbg !16636
  %add86 = add i32 48, %div85, !dbg !16637
  %conv87 = trunc i32 %add86 to i8, !dbg !16638
  %39 = load i8*, i8** %cp.addr, align 8, !dbg !16639
  %incdec.ptr88 = getelementptr i8, i8* %39, i32 1, !dbg !16639
  store i8* %incdec.ptr88, i8** %cp.addr, align 8, !dbg !16639
  store i8 %conv87, i8* %39, align 1, !dbg !16640
  %40 = load i16, i16* %num, align 2, !dbg !16641
  %conv89 = zext i16 %40 to i32, !dbg !16641
  %rem90 = srem i32 %conv89, 100, !dbg !16641
  %conv91 = trunc i32 %rem90 to i16, !dbg !16641
  store i16 %conv91, i16* %num, align 2, !dbg !16641
  %41 = load i16, i16* %num, align 2, !dbg !16642
  %conv92 = zext i16 %41 to i32, !dbg !16642
  %div93 = sdiv i32 %conv92, 10, !dbg !16643
  %add94 = add i32 48, %div93, !dbg !16644
  %conv95 = trunc i32 %add94 to i8, !dbg !16645
  %42 = load i8*, i8** %cp.addr, align 8, !dbg !16646
  %incdec.ptr96 = getelementptr i8, i8* %42, i32 1, !dbg !16646
  store i8* %incdec.ptr96, i8** %cp.addr, align 8, !dbg !16646
  store i8 %conv95, i8* %42, align 1, !dbg !16647
  %43 = load i16, i16* %num, align 2, !dbg !16648
  %conv97 = zext i16 %43 to i32, !dbg !16648
  %rem98 = srem i32 %conv97, 10, !dbg !16648
  %conv99 = trunc i32 %rem98 to i16, !dbg !16648
  store i16 %conv99, i16* %num, align 2, !dbg !16648
  %44 = load i16, i16* %num, align 2, !dbg !16649
  %conv100 = zext i16 %44 to i32, !dbg !16649
  %add101 = add i32 48, %conv100, !dbg !16650
  %conv102 = trunc i32 %add101 to i8, !dbg !16651
  %45 = load i8*, i8** %cp.addr, align 8, !dbg !16652
  %incdec.ptr103 = getelementptr i8, i8* %45, i32 1, !dbg !16652
  store i8* %incdec.ptr103, i8** %cp.addr, align 8, !dbg !16652
  store i8 %conv102, i8* %45, align 1, !dbg !16653
  %46 = load i8*, i8** %cp.addr, align 8, !dbg !16654
  store i8 0, i8* %46, align 1, !dbg !16655
  store i32 1, i32* %retval, align 4, !dbg !16656
  br label %return, !dbg !16656

return:                                           ; preds = %if.end56, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !16657
  ret i32 %47, !dbg !16657
}

; Function Attrs: noredzone
declare dso_local void @seq_putc(%struct.seq_file*, i8 signext) #1

; Function Attrs: noredzone
declare dso_local i32 @scsi_host_busy(%struct.Scsi_Host*) #1

; Function Attrs: noredzone
declare dso_local i8* @pci_ioremap_bar(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscInitGetConfig(%struct.Scsi_Host* %shost) #2 !dbg !16658 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  %asc_dvc = alloca %struct.asc_dvc_var*, align 8
  %warn_code = alloca i16, align 2
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !16659, metadata !DIExpression()), !dbg !16660
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !16661, metadata !DIExpression()), !dbg !16662
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16663
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !16664
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !16664
  store %struct.asc_board* %1, %struct.asc_board** %board, align 8, !dbg !16662
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc, metadata !16665, metadata !DIExpression()), !dbg !16666
  %2 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !16667
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !16668
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !16669
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16666
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !16670, metadata !DIExpression()), !dbg !16671
  store i16 0, i16* %warn_code, align 2, !dbg !16671
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16672
  %init_state = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 20, !dbg !16673
  store i16 1, i16* %init_state, align 8, !dbg !16674
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16675
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 1, !dbg !16677
  %5 = load i16, i16* %err_code, align 4, !dbg !16677
  %conv = zext i16 %5 to i32, !dbg !16675
  %cmp = icmp ne i32 %conv, 0, !dbg !16678
  br i1 %cmp, label %if.then, label %if.end, !dbg !16679

if.then:                                          ; preds = %entry
  %6 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16680
  %err_code2 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %6, i32 0, i32 1, !dbg !16681
  %7 = load i16, i16* %err_code2, align 4, !dbg !16681
  %conv3 = zext i16 %7 to i32, !dbg !16680
  store i32 %conv3, i32* %retval, align 4, !dbg !16682
  br label %return, !dbg !16682

if.end:                                           ; preds = %entry
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16683
  %iop_base = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %8, i32 0, i32 0, !dbg !16685
  %9 = load i32, i32* %iop_base, align 8, !dbg !16685
  %call4 = call i32 @AscFindSignature(i32 %9) #11, !dbg !16686
  %tobool = icmp ne i32 %call4, 0, !dbg !16686
  br i1 %tobool, label %if.then5, label %if.else, !dbg !16687

if.then5:                                         ; preds = %if.end
  %10 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16688
  call void @AscInitAscDvcVar(%struct.asc_dvc_var* %10) #11, !dbg !16690
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16691
  %call6 = call i32 @AscInitFromEEP(%struct.asc_dvc_var* %11) #11, !dbg !16692
  %conv7 = trunc i32 %call6 to i16, !dbg !16692
  store i16 %conv7, i16* %warn_code, align 2, !dbg !16693
  %12 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16694
  %init_state8 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %12, i32 0, i32 20, !dbg !16695
  %13 = load i16, i16* %init_state8, align 8, !dbg !16696
  %conv9 = zext i16 %13 to i32, !dbg !16696
  %or = or i32 %conv9, 2, !dbg !16696
  %conv10 = trunc i32 %or to i16, !dbg !16696
  store i16 %conv10, i16* %init_state8, align 8, !dbg !16696
  %14 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16697
  %scsi_reset_wait = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %14, i32 0, i32 13, !dbg !16699
  %15 = load i8, i8* %scsi_reset_wait, align 8, !dbg !16699
  %conv11 = zext i8 %15 to i32, !dbg !16697
  %cmp12 = icmp sgt i32 %conv11, 30, !dbg !16700
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !16701

if.then14:                                        ; preds = %if.then5
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16702
  %scsi_reset_wait15 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %16, i32 0, i32 13, !dbg !16703
  store i8 30, i8* %scsi_reset_wait15, align 8, !dbg !16704
  br label %if.end16, !dbg !16702

if.end16:                                         ; preds = %if.then14, %if.then5
  br label %if.end18, !dbg !16705

if.else:                                          ; preds = %if.end
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16706
  %err_code17 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 1, !dbg !16708
  store i16 512, i16* %err_code17, align 4, !dbg !16709
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end16
  %18 = load i16, i16* %warn_code, align 2, !dbg !16710
  %conv19 = zext i16 %18 to i32, !dbg !16710
  switch i32 %conv19, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb20
    i32 8, label %sw.bb21
    i32 2, label %sw.bb23
    i32 4, label %sw.bb25
    i32 16, label %sw.bb27
  ], !dbg !16711

sw.bb:                                            ; preds = %if.end18
  br label %sw.epilog, !dbg !16712

sw.bb20:                                          ; preds = %if.end18
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16714
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %19, i32 0, i32 47, !dbg !16714
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.135, i64 0, i64 0)) #12, !dbg !16714
  br label %sw.epilog, !dbg !16715

sw.bb21:                                          ; preds = %if.end18
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16716
  %shost_gendev22 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 47, !dbg !16716
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev22, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.136, i64 0, i64 0)) #12, !dbg !16716
  br label %sw.epilog, !dbg !16717

sw.bb23:                                          ; preds = %if.end18
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16718
  %shost_gendev24 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 47, !dbg !16718
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.137, i64 0, i64 0)) #12, !dbg !16718
  br label %sw.epilog, !dbg !16719

sw.bb25:                                          ; preds = %if.end18
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16720
  %shost_gendev26 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %22, i32 0, i32 47, !dbg !16720
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0)) #12, !dbg !16720
  br label %sw.epilog, !dbg !16721

sw.bb27:                                          ; preds = %if.end18
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16722
  %shost_gendev28 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 47, !dbg !16722
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev28, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.139, i64 0, i64 0)) #12, !dbg !16722
  br label %sw.epilog, !dbg !16723

sw.default:                                       ; preds = %if.end18
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16724
  %shost_gendev29 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %24, i32 0, i32 47, !dbg !16724
  %25 = load i16, i16* %warn_code, align 2, !dbg !16724
  %conv30 = zext i16 %25 to i32, !dbg !16724
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.140, i64 0, i64 0), i32 %conv30) #12, !dbg !16724
  br label %sw.epilog, !dbg !16725

sw.epilog:                                        ; preds = %sw.default, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb20, %sw.bb
  %26 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16726
  %err_code31 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %26, i32 0, i32 1, !dbg !16728
  %27 = load i16, i16* %err_code31, align 4, !dbg !16728
  %conv32 = zext i16 %27 to i32, !dbg !16726
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !16729
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !16730

if.then35:                                        ; preds = %sw.epilog
  %28 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16731
  %shost_gendev36 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %28, i32 0, i32 47, !dbg !16731
  %29 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16731
  %err_code37 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %29, i32 0, i32 1, !dbg !16731
  %30 = load i16, i16* %err_code37, align 4, !dbg !16731
  %conv38 = zext i16 %30 to i32, !dbg !16731
  %31 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16731
  %init_state39 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %31, i32 0, i32 20, !dbg !16731
  %32 = load i16, i16* %init_state39, align 8, !dbg !16731
  %conv40 = zext i16 %32 to i32, !dbg !16731
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev36, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i64 0, i64 0), i32 %conv38, i32 %conv40) #12, !dbg !16731
  br label %if.end41, !dbg !16731

if.end41:                                         ; preds = %if.then35, %sw.epilog
  %33 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16732
  %err_code42 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %33, i32 0, i32 1, !dbg !16733
  %34 = load i16, i16* %err_code42, align 4, !dbg !16733
  %conv43 = zext i16 %34 to i32, !dbg !16732
  store i32 %conv43, i32* %retval, align 4, !dbg !16734
  br label %return, !dbg !16734

return:                                           ; preds = %if.end41, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !16735
  ret i32 %35, !dbg !16735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitGetConfig(%struct.pci_dev* %pdev, %struct.Scsi_Host* %shost) #2 !dbg !16736 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  %asc_dvc = alloca %struct.adv_dvc_var*, align 8
  %warn_code = alloca i16, align 2
  %iop_base = alloca i8*, align 8
  %cmd = alloca i16, align 2
  %status = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !16739, metadata !DIExpression()), !dbg !16740
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !16741, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !16743, metadata !DIExpression()), !dbg !16744
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16745
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !16746
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !16746
  store %struct.asc_board* %1, %struct.asc_board** %board, align 8, !dbg !16744
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc, metadata !16747, metadata !DIExpression()), !dbg !16748
  %2 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !16749
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !16750
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !16751
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16748
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !16752, metadata !DIExpression()), !dbg !16753
  store i16 0, i16* %warn_code, align 2, !dbg !16753
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !16754, metadata !DIExpression()), !dbg !16755
  %3 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16756
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %3, i32 0, i32 0, !dbg !16757
  %4 = load i8*, i8** %iop_base1, align 8, !dbg !16757
  store i8* %4, i8** %iop_base, align 8, !dbg !16755
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !16758, metadata !DIExpression()), !dbg !16759
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16760, metadata !DIExpression()), !dbg !16761
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16762
  %err_code = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 1, !dbg !16763
  store i16 0, i16* %err_code, align 8, !dbg !16764
  %6 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16765
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %6, i32 0, i32 28, !dbg !16766
  %7 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !16766
  %control_flag = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %7, i32 0, i32 3, !dbg !16767
  store i16 0, i16* %control_flag, align 2, !dbg !16768
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16769
  %call2 = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 4, i16* %cmd) #11, !dbg !16770
  %9 = load i16, i16* %cmd, align 2, !dbg !16771
  %conv = zext i16 %9 to i32, !dbg !16771
  %and = and i32 %conv, 64, !dbg !16773
  %cmp = icmp eq i32 %and, 0, !dbg !16774
  br i1 %cmp, label %if.then, label %if.end, !dbg !16775

if.then:                                          ; preds = %entry
  %10 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16776
  %cfg4 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %10, i32 0, i32 28, !dbg !16777
  %11 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg4, align 8, !dbg !16777
  %control_flag5 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %11, i32 0, i32 3, !dbg !16778
  %12 = load i16, i16* %control_flag5, align 2, !dbg !16779
  %conv6 = zext i16 %12 to i32, !dbg !16779
  %or = or i32 %conv6, 1, !dbg !16779
  %conv7 = trunc i32 %or to i16, !dbg !16779
  store i16 %conv7, i16* %control_flag5, align 2, !dbg !16779
  br label %if.end, !dbg !16776

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8*, i8** %iop_base, align 8, !dbg !16780
  %add.ptr = getelementptr i8, i8* %13, i64 3, !dbg !16780
  %call8 = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !16780
  %14 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16781
  %cfg9 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %14, i32 0, i32 28, !dbg !16782
  %15 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg9, align 8, !dbg !16782
  %chip_version = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %15, i32 0, i32 1, !dbg !16783
  store i8 %call8, i8* %chip_version, align 2, !dbg !16784
  %16 = load i8*, i8** %iop_base, align 8, !dbg !16785
  %add.ptr10 = getelementptr i8, i8* %16, i64 1, !dbg !16785
  %call11 = call zeroext i8 @readb(i8* %add.ptr10) #11, !dbg !16785
  %conv12 = zext i8 %call11 to i32, !dbg !16785
  %cmp13 = icmp eq i32 %conv12, 37, !dbg !16785
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !16785

land.rhs:                                         ; preds = %if.end
  %17 = load i8*, i8** %iop_base, align 8, !dbg !16785
  %add.ptr15 = getelementptr i8, i8* %17, i64 0, !dbg !16785
  %call16 = call zeroext i16 @readw(i8* %add.ptr15) #11, !dbg !16785
  %conv17 = zext i16 %call16 to i32, !dbg !16785
  %cmp18 = icmp eq i32 %conv17, 1217, !dbg !16785
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %18 = phi i1 [ false, %if.end ], [ %cmp18, %land.rhs ], !dbg !16787
  %19 = zext i1 %18 to i64, !dbg !16785
  %cond = select i1 %18, i32 1, i32 0, !dbg !16785
  %cmp20 = icmp eq i32 %cond, 0, !dbg !16788
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !16789

if.then22:                                        ; preds = %land.end
  %20 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16790
  %err_code23 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %20, i32 0, i32 1, !dbg !16792
  store i16 512, i16* %err_code23, align 8, !dbg !16793
  store i32 -1, i32* %retval, align 4, !dbg !16794
  br label %return, !dbg !16794

if.else:                                          ; preds = %land.end
  %21 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16795
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %21, i32 0, i32 20, !dbg !16798
  %22 = load i8, i8* %chip_type, align 1, !dbg !16798
  %conv24 = zext i8 %22 to i32, !dbg !16795
  %cmp25 = icmp ne i32 %conv24, 1, !dbg !16799
  br i1 %cmp25, label %land.lhs.true, label %if.end41, !dbg !16800

land.lhs.true:                                    ; preds = %if.else
  %23 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16801
  %chip_type27 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %23, i32 0, i32 20, !dbg !16802
  %24 = load i8, i8* %chip_type27, align 1, !dbg !16802
  %conv28 = zext i8 %24 to i32, !dbg !16801
  %cmp29 = icmp ne i32 %conv28, 2, !dbg !16803
  br i1 %cmp29, label %land.lhs.true31, label %if.end41, !dbg !16804

land.lhs.true31:                                  ; preds = %land.lhs.true
  %25 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16805
  %chip_type32 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %25, i32 0, i32 20, !dbg !16806
  %26 = load i8, i8* %chip_type32, align 1, !dbg !16806
  %conv33 = zext i8 %26 to i32, !dbg !16805
  %cmp34 = icmp ne i32 %conv33, 3, !dbg !16807
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !16808

if.then36:                                        ; preds = %land.lhs.true31
  %27 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16809
  %err_code37 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %27, i32 0, i32 1, !dbg !16811
  %28 = load i16, i16* %err_code37, align 8, !dbg !16812
  %conv38 = zext i16 %28 to i32, !dbg !16812
  %or39 = or i32 %conv38, 8192, !dbg !16812
  %conv40 = trunc i32 %or39 to i16, !dbg !16812
  store i16 %conv40, i16* %err_code37, align 8, !dbg !16812
  store i32 -1, i32* %retval, align 4, !dbg !16813
  br label %return, !dbg !16813

if.end41:                                         ; preds = %land.lhs.true31, %land.lhs.true, %if.else
  %29 = load i8*, i8** %iop_base, align 8, !dbg !16814
  %add.ptr42 = getelementptr i8, i8* %29, i64 2, !dbg !16814
  call void @writew(i16 zeroext 198, i8* %add.ptr42) #11, !dbg !16814
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !16815, metadata !DIExpression()), !dbg !16817
  store i64 100, i64* %__ms, align 8, !dbg !16817
  br label %while.cond, !dbg !16817

while.cond:                                       ; preds = %while.body, %if.end41
  %30 = load i64, i64* %__ms, align 8, !dbg !16817
  %dec = add i64 %30, -1, !dbg !16817
  store i64 %dec, i64* %__ms, align 8, !dbg !16817
  %tobool = icmp ne i64 %30, 0, !dbg !16817
  br i1 %tobool, label %while.body, label %while.end, !dbg !16817

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !16818
  br label %while.cond, !dbg !16817, !llvm.loop !16823

while.end:                                        ; preds = %while.cond
  %31 = load i8*, i8** %iop_base, align 8, !dbg !16824
  %add.ptr43 = getelementptr i8, i8* %31, i64 2, !dbg !16824
  call void @writew(i16 zeroext 197, i8* %add.ptr43) #11, !dbg !16824
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16825
  %chip_type44 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %32, i32 0, i32 20, !dbg !16827
  %33 = load i8, i8* %chip_type44, align 1, !dbg !16827
  %conv45 = zext i8 %33 to i32, !dbg !16825
  %cmp46 = icmp eq i32 %conv45, 3, !dbg !16828
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !16829

if.then48:                                        ; preds = %while.end
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16830
  %call49 = call i32 @AdvInitFrom38C1600EEP(%struct.adv_dvc_var* %34) #11, !dbg !16832
  store i32 %call49, i32* %status, align 4, !dbg !16833
  br label %if.end60, !dbg !16834

if.else50:                                        ; preds = %while.end
  %35 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16835
  %chip_type51 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %35, i32 0, i32 20, !dbg !16837
  %36 = load i8, i8* %chip_type51, align 1, !dbg !16837
  %conv52 = zext i8 %36 to i32, !dbg !16835
  %cmp53 = icmp eq i32 %conv52, 2, !dbg !16838
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !16839

if.then55:                                        ; preds = %if.else50
  %37 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16840
  %call56 = call i32 @AdvInitFrom38C0800EEP(%struct.adv_dvc_var* %37) #11, !dbg !16842
  store i32 %call56, i32* %status, align 4, !dbg !16843
  br label %if.end59, !dbg !16844

if.else57:                                        ; preds = %if.else50
  %38 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16845
  %call58 = call i32 @AdvInitFrom3550EEP(%struct.adv_dvc_var* %38) #11, !dbg !16847
  store i32 %call58, i32* %status, align 4, !dbg !16848
  br label %if.end59

if.end59:                                         ; preds = %if.else57, %if.then55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then48
  %39 = load i32, i32* %status, align 4, !dbg !16849
  %40 = load i16, i16* %warn_code, align 2, !dbg !16850
  %conv61 = zext i16 %40 to i32, !dbg !16850
  %or62 = or i32 %conv61, %39, !dbg !16850
  %conv63 = trunc i32 %or62 to i16, !dbg !16850
  store i16 %conv63, i16* %warn_code, align 2, !dbg !16850
  br label %if.end64

if.end64:                                         ; preds = %if.end60
  %41 = load i16, i16* %warn_code, align 2, !dbg !16851
  %conv65 = zext i16 %41 to i32, !dbg !16851
  %cmp66 = icmp ne i32 %conv65, 0, !dbg !16853
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !16854

if.then68:                                        ; preds = %if.end64
  %42 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16855
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %42, i32 0, i32 47, !dbg !16855
  %43 = load i16, i16* %warn_code, align 2, !dbg !16855
  %conv69 = zext i16 %43 to i32, !dbg !16855
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.145, i64 0, i64 0), i32 %conv69) #12, !dbg !16855
  br label %if.end70, !dbg !16855

if.end70:                                         ; preds = %if.then68, %if.end64
  %44 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16856
  %err_code71 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %44, i32 0, i32 1, !dbg !16858
  %45 = load i16, i16* %err_code71, align 8, !dbg !16858
  %tobool72 = icmp ne i16 %45, 0, !dbg !16856
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !16859

if.then73:                                        ; preds = %if.end70
  %46 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16860
  %shost_gendev74 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %46, i32 0, i32 47, !dbg !16860
  %47 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16860
  %err_code75 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %47, i32 0, i32 1, !dbg !16860
  %48 = load i16, i16* %err_code75, align 8, !dbg !16860
  %conv76 = zext i16 %48 to i32, !dbg !16860
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev74, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.146, i64 0, i64 0), i32 %conv76) #12, !dbg !16860
  br label %if.end77, !dbg !16860

if.end77:                                         ; preds = %if.then73, %if.end70
  %49 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc, align 8, !dbg !16861
  %err_code78 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %49, i32 0, i32 1, !dbg !16862
  %50 = load i16, i16* %err_code78, align 8, !dbg !16862
  %conv79 = zext i16 %50 to i32, !dbg !16861
  store i32 %conv79, i32* %retval, align 4, !dbg !16863
  br label %return, !dbg !16863

return:                                           ; preds = %if.end77, %if.then36, %if.then22
  %51 = load i32, i32* %retval, align 4, !dbg !16864
  ret i32 %51, !dbg !16864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscInitSetConfig(%struct.pci_dev* %pdev, %struct.Scsi_Host* %shost) #2 !dbg !16865 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  %asc_dvc = alloca %struct.asc_dvc_var*, align 8
  %iop_base = alloca i32, align 4
  %cfg_msw = alloca i16, align 2
  %warn_code = alloca i16, align 2
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !16866, metadata !DIExpression()), !dbg !16867
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !16868, metadata !DIExpression()), !dbg !16869
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !16870, metadata !DIExpression()), !dbg !16871
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !16872
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !16873
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !16873
  store %struct.asc_board* %1, %struct.asc_board** %board, align 8, !dbg !16871
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc, metadata !16874, metadata !DIExpression()), !dbg !16875
  %2 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !16876
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !16877
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !16878
  store %struct.asc_dvc_var* %asc_dvc_var, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16875
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !16879, metadata !DIExpression()), !dbg !16880
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16881
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 0, !dbg !16882
  %4 = load i32, i32* %iop_base1, align 8, !dbg !16882
  store i32 %4, i32* %iop_base, align 4, !dbg !16880
  call void @llvm.dbg.declare(metadata i16* %cfg_msw, metadata !16883, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !16885, metadata !DIExpression()), !dbg !16886
  store i16 0, i16* %warn_code, align 2, !dbg !16886
  %5 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16887
  %init_state = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %5, i32 0, i32 20, !dbg !16888
  %6 = load i16, i16* %init_state, align 8, !dbg !16889
  %conv = zext i16 %6 to i32, !dbg !16889
  %or = or i32 %conv, 4, !dbg !16889
  %conv2 = trunc i32 %or to i16, !dbg !16889
  store i16 %conv2, i16* %init_state, align 8, !dbg !16889
  %7 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16890
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %7, i32 0, i32 1, !dbg !16892
  %8 = load i16, i16* %err_code, align 4, !dbg !16892
  %conv3 = zext i16 %8 to i32, !dbg !16890
  %cmp = icmp ne i32 %conv3, 0, !dbg !16893
  br i1 %cmp, label %if.then, label %if.end, !dbg !16894

if.then:                                          ; preds = %entry
  %9 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16895
  %err_code5 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %9, i32 0, i32 1, !dbg !16896
  %10 = load i16, i16* %err_code5, align 4, !dbg !16896
  %conv6 = zext i16 %10 to i32, !dbg !16895
  store i32 %conv6, i32* %retval, align 4, !dbg !16897
  br label %return, !dbg !16897

if.end:                                           ; preds = %entry
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16898
  %iop_base7 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %11, i32 0, i32 0, !dbg !16900
  %12 = load i32, i32* %iop_base7, align 8, !dbg !16900
  %call8 = call i32 @AscFindSignature(i32 %12) #11, !dbg !16901
  %tobool = icmp ne i32 %call8, 0, !dbg !16901
  br i1 %tobool, label %if.end13, label %if.then9, !dbg !16902

if.then9:                                         ; preds = %if.end
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16903
  %err_code10 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 1, !dbg !16905
  store i16 512, i16* %err_code10, align 4, !dbg !16906
  %14 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16907
  %err_code11 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %14, i32 0, i32 1, !dbg !16908
  %15 = load i16, i16* %err_code11, align 4, !dbg !16908
  %conv12 = zext i16 %15 to i32, !dbg !16907
  store i32 %conv12, i32* %retval, align 4, !dbg !16909
  br label %return, !dbg !16909

if.end13:                                         ; preds = %if.end
  %16 = load i32, i32* %iop_base, align 4, !dbg !16910
  %add = add i32 %16, 4, !dbg !16910
  %call14 = call zeroext i16 @inw(i32 %add) #11, !dbg !16910
  store i16 %call14, i16* %cfg_msw, align 2, !dbg !16911
  %17 = load i16, i16* %cfg_msw, align 2, !dbg !16912
  %conv15 = zext i16 %17 to i32, !dbg !16912
  %and = and i32 %conv15, 12416, !dbg !16914
  %cmp16 = icmp ne i32 %and, 0, !dbg !16915
  br i1 %cmp16, label %if.then18, label %if.end26, !dbg !16916

if.then18:                                        ; preds = %if.end13
  %18 = load i16, i16* %cfg_msw, align 2, !dbg !16917
  %conv19 = zext i16 %18 to i32, !dbg !16917
  %and20 = and i32 %conv19, -12417, !dbg !16917
  %conv21 = trunc i32 %and20 to i16, !dbg !16917
  store i16 %conv21, i16* %cfg_msw, align 2, !dbg !16917
  %19 = load i16, i16* %warn_code, align 2, !dbg !16919
  %conv22 = zext i16 %19 to i32, !dbg !16919
  %or23 = or i32 %conv22, 64, !dbg !16919
  %conv24 = trunc i32 %or23 to i16, !dbg !16919
  store i16 %conv24, i16* %warn_code, align 2, !dbg !16919
  %20 = load i16, i16* %cfg_msw, align 2, !dbg !16920
  %21 = load i32, i32* %iop_base, align 4, !dbg !16920
  %add25 = add i32 %21, 4, !dbg !16920
  call void @outw(i16 zeroext %20, i32 %add25) #11, !dbg !16920
  br label %if.end26, !dbg !16921

if.end26:                                         ; preds = %if.then18, %if.end13
  %22 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16922
  %cfg = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %22, i32 0, i32 26, !dbg !16924
  %23 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg, align 8, !dbg !16924
  %cmd_qng_enabled = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %23, i32 0, i32 1, !dbg !16925
  %24 = load i8, i8* %cmd_qng_enabled, align 1, !dbg !16925
  %conv27 = zext i8 %24 to i32, !dbg !16922
  %25 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16926
  %cfg28 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %25, i32 0, i32 26, !dbg !16927
  %26 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg28, align 8, !dbg !16927
  %disc_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %26, i32 0, i32 2, !dbg !16928
  %27 = load i8, i8* %disc_enable, align 2, !dbg !16928
  %conv29 = zext i8 %27 to i32, !dbg !16926
  %and30 = and i32 %conv27, %conv29, !dbg !16929
  %28 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16930
  %cfg31 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %28, i32 0, i32 26, !dbg !16931
  %29 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg31, align 8, !dbg !16931
  %cmd_qng_enabled32 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %29, i32 0, i32 1, !dbg !16932
  %30 = load i8, i8* %cmd_qng_enabled32, align 1, !dbg !16932
  %conv33 = zext i8 %30 to i32, !dbg !16930
  %cmp34 = icmp ne i32 %and30, %conv33, !dbg !16933
  br i1 %cmp34, label %if.then36, label %if.end44, !dbg !16934

if.then36:                                        ; preds = %if.end26
  %31 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16935
  %cfg37 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %31, i32 0, i32 26, !dbg !16937
  %32 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg37, align 8, !dbg !16937
  %cmd_qng_enabled38 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %32, i32 0, i32 1, !dbg !16938
  %33 = load i8, i8* %cmd_qng_enabled38, align 1, !dbg !16938
  %34 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16939
  %cfg39 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %34, i32 0, i32 26, !dbg !16940
  %35 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg39, align 8, !dbg !16940
  %disc_enable40 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %35, i32 0, i32 2, !dbg !16941
  store i8 %33, i8* %disc_enable40, align 2, !dbg !16942
  %36 = load i16, i16* %warn_code, align 2, !dbg !16943
  %conv41 = zext i16 %36 to i32, !dbg !16943
  %or42 = or i32 %conv41, 16, !dbg !16943
  %conv43 = trunc i32 %or42 to i16, !dbg !16943
  store i16 %conv43, i16* %warn_code, align 2, !dbg !16943
  br label %if.end44, !dbg !16944

if.end44:                                         ; preds = %if.then36, %if.end26
  %37 = load i32, i32* %iop_base, align 4, !dbg !16945
  %add45 = add i32 %37, 14, !dbg !16945
  %call46 = call zeroext i16 @inw(i32 %add45) #11, !dbg !16945
  %conv47 = zext i16 %call46 to i32, !dbg !16945
  %and48 = and i32 %conv47, 16384, !dbg !16947
  %tobool49 = icmp ne i32 %and48, 0, !dbg !16947
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !16948

if.then50:                                        ; preds = %if.end44
  %38 = load i16, i16* %warn_code, align 2, !dbg !16949
  %conv51 = zext i16 %38 to i32, !dbg !16949
  %or52 = or i32 %conv51, 8, !dbg !16949
  %conv53 = trunc i32 %or52 to i16, !dbg !16949
  store i16 %conv53, i16* %warn_code, align 2, !dbg !16949
  br label %if.end54, !dbg !16951

if.end54:                                         ; preds = %if.then50, %if.end44
  %39 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16952
  %bus_type = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %39, i32 0, i32 4, !dbg !16954
  %40 = load i16, i16* %bus_type, align 2, !dbg !16954
  %conv55 = zext i16 %40 to i32, !dbg !16952
  %and56 = and i32 %conv55, 4, !dbg !16955
  %tobool57 = icmp ne i32 %and56, 0, !dbg !16955
  br i1 %tobool57, label %if.then58, label %if.else86, !dbg !16956

if.then58:                                        ; preds = %if.end54
  %41 = load i16, i16* %cfg_msw, align 2, !dbg !16957
  %conv59 = zext i16 %41 to i32, !dbg !16957
  %and60 = and i32 %conv59, 65472, !dbg !16957
  %conv61 = trunc i32 %and60 to i16, !dbg !16957
  store i16 %conv61, i16* %cfg_msw, align 2, !dbg !16957
  %42 = load i16, i16* %cfg_msw, align 2, !dbg !16959
  %43 = load i32, i32* %iop_base, align 4, !dbg !16959
  %add62 = add i32 %43, 4, !dbg !16959
  call void @outw(i16 zeroext %42, i32 %add62) #11, !dbg !16959
  %44 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16960
  %bus_type63 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %44, i32 0, i32 4, !dbg !16962
  %45 = load i16, i16* %bus_type63, align 2, !dbg !16962
  %conv64 = zext i16 %45 to i32, !dbg !16960
  %and65 = and i32 %conv64, 260, !dbg !16963
  %cmp66 = icmp eq i32 %and65, 260, !dbg !16964
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !16965

if.then68:                                        ; preds = %if.then58
  br label %if.end85, !dbg !16966

if.else:                                          ; preds = %if.then58
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16968
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 8, !dbg !16971
  %47 = load i16, i16* %device, align 2, !dbg !16971
  %conv69 = zext i16 %47 to i32, !dbg !16968
  %cmp70 = icmp eq i32 %conv69, 4352, !dbg !16972
  br i1 %cmp70, label %if.then76, label %lor.lhs.false, !dbg !16973

lor.lhs.false:                                    ; preds = %if.else
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16974
  %device72 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 8, !dbg !16975
  %49 = load i16, i16* %device72, align 2, !dbg !16975
  %conv73 = zext i16 %49 to i32, !dbg !16974
  %cmp74 = icmp eq i32 %conv73, 4608, !dbg !16976
  br i1 %cmp74, label %if.then76, label %if.end84, !dbg !16977

if.then76:                                        ; preds = %lor.lhs.false, %if.else
  %50 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16978
  %bug_fix_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %50, i32 0, i32 3, !dbg !16980
  %51 = load i16, i16* %bug_fix_cntl, align 8, !dbg !16981
  %conv77 = zext i16 %51 to i32, !dbg !16981
  %or78 = or i32 %conv77, 1, !dbg !16981
  %conv79 = trunc i32 %or78 to i16, !dbg !16981
  store i16 %conv79, i16* %bug_fix_cntl, align 8, !dbg !16981
  %52 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16982
  %bug_fix_cntl80 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %52, i32 0, i32 3, !dbg !16983
  %53 = load i16, i16* %bug_fix_cntl80, align 8, !dbg !16984
  %conv81 = zext i16 %53 to i32, !dbg !16984
  %or82 = or i32 %conv81, 2, !dbg !16984
  %conv83 = trunc i32 %or82 to i16, !dbg !16984
  store i16 %conv83, i16* %bug_fix_cntl80, align 8, !dbg !16984
  br label %if.end84, !dbg !16985

if.end84:                                         ; preds = %if.then76, %lor.lhs.false
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then68
  br label %if.end104, !dbg !16986

if.else86:                                        ; preds = %if.end54
  %54 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16987
  %bus_type87 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %54, i32 0, i32 4, !dbg !16989
  %55 = load i16, i16* %bus_type87, align 2, !dbg !16989
  %conv88 = zext i16 %55 to i32, !dbg !16987
  %cmp89 = icmp eq i32 %conv88, 129, !dbg !16990
  br i1 %cmp89, label %if.then91, label %if.end103, !dbg !16991

if.then91:                                        ; preds = %if.else86
  %56 = load i32, i32* %iop_base, align 4, !dbg !16992
  %57 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !16995
  %bus_type92 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %57, i32 0, i32 4, !dbg !16996
  %58 = load i16, i16* %bus_type92, align 2, !dbg !16996
  %call93 = call zeroext i8 @AscGetChipVersion(i32 %56, i16 zeroext %58) #11, !dbg !16997
  %conv94 = zext i8 %call93 to i32, !dbg !16997
  %cmp95 = icmp eq i32 %conv94, 33, !dbg !16998
  br i1 %cmp95, label %if.then97, label %if.end102, !dbg !16999

if.then97:                                        ; preds = %if.then91
  %59 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17000
  %bug_fix_cntl98 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %59, i32 0, i32 3, !dbg !17002
  %60 = load i16, i16* %bug_fix_cntl98, align 8, !dbg !17003
  %conv99 = zext i16 %60 to i32, !dbg !17003
  %or100 = or i32 %conv99, 2, !dbg !17003
  %conv101 = trunc i32 %or100 to i16, !dbg !17003
  store i16 %conv101, i16* %bug_fix_cntl98, align 8, !dbg !17003
  br label %if.end102, !dbg !17004

if.end102:                                        ; preds = %if.then97, %if.then91
  br label %if.end103, !dbg !17005

if.end103:                                        ; preds = %if.end102, %if.else86
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end85
  %61 = load i32, i32* %iop_base, align 4, !dbg !17006
  %62 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17008
  %cfg105 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %62, i32 0, i32 26, !dbg !17009
  %63 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg105, align 8, !dbg !17009
  %chip_scsi_id = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %63, i32 0, i32 4, !dbg !17010
  %64 = load i8, i8* %chip_scsi_id, align 2, !dbg !17010
  %call106 = call zeroext i8 @AscSetChipScsiID(i32 %61, i8 zeroext %64) #11, !dbg !17011
  %conv107 = zext i8 %call106 to i32, !dbg !17011
  %65 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17012
  %cfg108 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %65, i32 0, i32 26, !dbg !17013
  %66 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg108, align 8, !dbg !17013
  %chip_scsi_id109 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %66, i32 0, i32 4, !dbg !17014
  %67 = load i8, i8* %chip_scsi_id109, align 2, !dbg !17014
  %conv110 = zext i8 %67 to i32, !dbg !17012
  %cmp111 = icmp ne i32 %conv107, %conv110, !dbg !17015
  br i1 %cmp111, label %if.then113, label %if.end118, !dbg !17016

if.then113:                                       ; preds = %if.end104
  %68 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17017
  %err_code114 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %68, i32 0, i32 1, !dbg !17019
  %69 = load i16, i16* %err_code114, align 4, !dbg !17020
  %conv115 = zext i16 %69 to i32, !dbg !17020
  %or116 = or i32 %conv115, 128, !dbg !17020
  %conv117 = trunc i32 %or116 to i16, !dbg !17020
  store i16 %conv117, i16* %err_code114, align 4, !dbg !17020
  br label %if.end118, !dbg !17021

if.end118:                                        ; preds = %if.then113, %if.end104
  %70 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17022
  %init_state119 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %70, i32 0, i32 20, !dbg !17023
  %71 = load i16, i16* %init_state119, align 8, !dbg !17024
  %conv120 = zext i16 %71 to i32, !dbg !17024
  %or121 = or i32 %conv120, 8, !dbg !17024
  %conv122 = trunc i32 %or121 to i16, !dbg !17024
  store i16 %conv122, i16* %init_state119, align 8, !dbg !17024
  %72 = load i16, i16* %warn_code, align 2, !dbg !17025
  %conv123 = zext i16 %72 to i32, !dbg !17025
  switch i32 %conv123, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb124
    i32 8, label %sw.bb125
    i32 2, label %sw.bb127
    i32 4, label %sw.bb129
    i32 16, label %sw.bb131
  ], !dbg !17026

sw.bb:                                            ; preds = %if.end118
  br label %sw.epilog, !dbg !17027

sw.bb124:                                         ; preds = %if.end118
  %73 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17029
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %73, i32 0, i32 47, !dbg !17029
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.135, i64 0, i64 0)) #12, !dbg !17029
  br label %sw.epilog, !dbg !17030

sw.bb125:                                         ; preds = %if.end118
  %74 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17031
  %shost_gendev126 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %74, i32 0, i32 47, !dbg !17031
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev126, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.136, i64 0, i64 0)) #12, !dbg !17031
  br label %sw.epilog, !dbg !17032

sw.bb127:                                         ; preds = %if.end118
  %75 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17033
  %shost_gendev128 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %75, i32 0, i32 47, !dbg !17033
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev128, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.137, i64 0, i64 0)) #12, !dbg !17033
  br label %sw.epilog, !dbg !17034

sw.bb129:                                         ; preds = %if.end118
  %76 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17035
  %shost_gendev130 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %76, i32 0, i32 47, !dbg !17035
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev130, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0)) #12, !dbg !17035
  br label %sw.epilog, !dbg !17036

sw.bb131:                                         ; preds = %if.end118
  %77 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17037
  %shost_gendev132 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %77, i32 0, i32 47, !dbg !17037
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev132, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.147, i64 0, i64 0)) #12, !dbg !17037
  br label %sw.epilog, !dbg !17038

sw.default:                                       ; preds = %if.end118
  %78 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17039
  %shost_gendev133 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %78, i32 0, i32 47, !dbg !17039
  %79 = load i16, i16* %warn_code, align 2, !dbg !17039
  %conv134 = zext i16 %79 to i32, !dbg !17039
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev133, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.140, i64 0, i64 0), i32 %conv134) #12, !dbg !17039
  br label %sw.epilog, !dbg !17040

sw.epilog:                                        ; preds = %sw.default, %sw.bb131, %sw.bb129, %sw.bb127, %sw.bb125, %sw.bb124, %sw.bb
  %80 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17041
  %err_code135 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %80, i32 0, i32 1, !dbg !17043
  %81 = load i16, i16* %err_code135, align 4, !dbg !17043
  %conv136 = zext i16 %81 to i32, !dbg !17041
  %cmp137 = icmp ne i32 %conv136, 0, !dbg !17044
  br i1 %cmp137, label %if.then139, label %if.end145, !dbg !17045

if.then139:                                       ; preds = %sw.epilog
  %82 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17046
  %shost_gendev140 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %82, i32 0, i32 47, !dbg !17046
  %83 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17046
  %err_code141 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %83, i32 0, i32 1, !dbg !17046
  %84 = load i16, i16* %err_code141, align 4, !dbg !17046
  %conv142 = zext i16 %84 to i32, !dbg !17046
  %85 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17046
  %init_state143 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %85, i32 0, i32 20, !dbg !17046
  %86 = load i16, i16* %init_state143, align 8, !dbg !17046
  %conv144 = zext i16 %86 to i32, !dbg !17046
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev140, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i64 0, i64 0), i32 %conv142, i32 %conv144) #12, !dbg !17046
  br label %if.end145, !dbg !17046

if.end145:                                        ; preds = %if.then139, %sw.epilog
  %87 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc, align 8, !dbg !17047
  %err_code146 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %87, i32 0, i32 1, !dbg !17048
  %88 = load i16, i16* %err_code146, align 4, !dbg !17048
  %conv147 = zext i16 %88 to i32, !dbg !17047
  store i32 %conv147, i32* %retval, align 4, !dbg !17049
  br label %return, !dbg !17049

return:                                           ; preds = %if.end145, %if.then9, %if.then
  %89 = load i32, i32* %retval, align 4, !dbg !17050
  ret i32 %89, !dbg !17050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AscGetChipBiosAddress(i32 %iop_base, i16 zeroext %bus_type) #2 !dbg !17051 {
entry:
  %retval = alloca i16, align 2
  %iop_base.addr = alloca i32, align 4
  %bus_type.addr = alloca i16, align 2
  %cfg_lsw = alloca i16, align 2
  %bios_addr = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  store i16 %bus_type, i16* %bus_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_type.addr, metadata !17056, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.declare(metadata i16* %cfg_lsw, metadata !17058, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.declare(metadata i16* %bios_addr, metadata !17060, metadata !DIExpression()), !dbg !17061
  %0 = load i16, i16* %bus_type.addr, align 2, !dbg !17062
  %conv = zext i16 %0 to i32, !dbg !17062
  %and = and i32 %conv, 4, !dbg !17064
  %tobool = icmp ne i32 %and, 0, !dbg !17064
  br i1 %tobool, label %if.then, label %if.end, !dbg !17065

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !17066
  br label %return, !dbg !17066

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %bus_type.addr, align 2, !dbg !17067
  %conv1 = zext i16 %1 to i32, !dbg !17067
  %and2 = and i32 %conv1, 2, !dbg !17069
  %cmp = icmp ne i32 %and2, 0, !dbg !17070
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !17071

if.then4:                                         ; preds = %if.end
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !17072
  %call = call zeroext i16 @AscGetEisaChipCfg(i32 %2) #11, !dbg !17074
  store i16 %call, i16* %cfg_lsw, align 2, !dbg !17075
  %3 = load i16, i16* %cfg_lsw, align 2, !dbg !17076
  %conv5 = zext i16 %3 to i32, !dbg !17076
  %and6 = and i32 %conv5, 15, !dbg !17076
  %conv7 = trunc i32 %and6 to i16, !dbg !17076
  store i16 %conv7, i16* %cfg_lsw, align 2, !dbg !17076
  %4 = load i16, i16* %cfg_lsw, align 2, !dbg !17077
  %conv8 = zext i16 %4 to i32, !dbg !17077
  %mul = mul i32 %conv8, 1024, !dbg !17078
  %add = add i32 49152, %mul, !dbg !17079
  %conv9 = trunc i32 %add to i16, !dbg !17080
  store i16 %conv9, i16* %bios_addr, align 2, !dbg !17081
  %5 = load i16, i16* %bios_addr, align 2, !dbg !17082
  store i16 %5, i16* %retval, align 2, !dbg !17083
  br label %return, !dbg !17083

if.end10:                                         ; preds = %if.end
  %6 = load i32, i32* %iop_base.addr, align 4, !dbg !17084
  %add11 = add i32 %6, 2, !dbg !17084
  %call12 = call zeroext i16 @inw(i32 %add11) #11, !dbg !17084
  store i16 %call12, i16* %cfg_lsw, align 2, !dbg !17085
  %7 = load i16, i16* %bus_type.addr, align 2, !dbg !17086
  %conv13 = zext i16 %7 to i32, !dbg !17086
  %cmp14 = icmp eq i32 %conv13, 129, !dbg !17088
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !17089

if.then16:                                        ; preds = %if.end10
  %8 = load i16, i16* %cfg_lsw, align 2, !dbg !17090
  %conv17 = zext i16 %8 to i32, !dbg !17090
  %and18 = and i32 %conv17, 32767, !dbg !17090
  %conv19 = trunc i32 %and18 to i16, !dbg !17090
  store i16 %conv19, i16* %cfg_lsw, align 2, !dbg !17090
  br label %if.end20, !dbg !17091

if.end20:                                         ; preds = %if.then16, %if.end10
  %9 = load i16, i16* %cfg_lsw, align 2, !dbg !17092
  %conv21 = zext i16 %9 to i32, !dbg !17092
  %shr = ashr i32 %conv21, 12, !dbg !17093
  %mul22 = mul i32 %shr, 1024, !dbg !17094
  %add23 = add i32 49152, %mul22, !dbg !17095
  %conv24 = trunc i32 %add23 to i16, !dbg !17096
  store i16 %conv24, i16* %bios_addr, align 2, !dbg !17097
  %10 = load i16, i16* %bios_addr, align 2, !dbg !17098
  store i16 %10, i16* %retval, align 2, !dbg !17099
  br label %return, !dbg !17099

return:                                           ; preds = %if.end20, %if.then4, %if.then
  %11 = load i16, i16* %retval, align 2, !dbg !17100
  ret i16 %11, !dbg !17100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !17101 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !17109, metadata !DIExpression()), !dbg !17110
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !17111, metadata !DIExpression()), !dbg !17112
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !17113, metadata !DIExpression()), !dbg !17114
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !17115, metadata !DIExpression()), !dbg !17116
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !17117, metadata !DIExpression()), !dbg !17118
  %0 = load i32, i32* %irq.addr, align 4, !dbg !17119
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !17120
  %2 = load i64, i64* %flags.addr, align 8, !dbg !17121
  %3 = load i8*, i8** %name.addr, align 8, !dbg !17122
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !17123
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !17124
  ret i32 %call, !dbg !17125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !17126 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !7365, metadata !DIExpression()), !dbg !17127
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7372, metadata !DIExpression()), !dbg !17129
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7374, metadata !DIExpression()), !dbg !17130
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %result = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !17137, metadata !DIExpression()), !dbg !17138
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !17139, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !17141, metadata !DIExpression()), !dbg !17142
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !17143
  %1 = bitcast i8* %0 to %struct.Scsi_Host*, !dbg !17143
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %shost, align 8, !dbg !17142
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !17144, metadata !DIExpression()), !dbg !17145
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !17146
  %call = call i8* @shost_priv(%struct.Scsi_Host* %2) #11, !dbg !17147
  %3 = bitcast i8* %call to %struct.asc_board*, !dbg !17147
  store %struct.asc_board* %3, %struct.asc_board** %boardp, align 8, !dbg !17145
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17148, metadata !DIExpression()), !dbg !17149
  store i32 0, i32* %result, align 4, !dbg !17149
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17150, metadata !DIExpression()), !dbg !17151
  br label %do.body, !dbg !17152

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17153

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17154, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17157, metadata !DIExpression()), !dbg !17156
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !17156
  %conv = zext i1 %cmp to i32, !dbg !17156
  store i32 1, i32* %tmp, align 4, !dbg !17156
  %4 = load i32, i32* %tmp, align 4, !dbg !17156
  br label %do.body2, !dbg !17158

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !17159

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !17160

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !17162, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !17166, metadata !DIExpression()), !dbg !17165
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !17165
  %conv8 = zext i1 %cmp7 to i32, !dbg !17165
  store i32 1, i32* %tmp9, align 4, !dbg !17165
  %5 = load i32, i32* %tmp9, align 4, !dbg !17165
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !17167
  store i64 %call10, i64* %flags, align 8, !dbg !17167
  br label %do.end, !dbg !17167

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !17160

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !17159

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !17168, !srcloc !17169
  br label %do.body13, !dbg !17168

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !17170
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 4, !dbg !17170
  %7 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !17170
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17171
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !17172
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !17172
  br label %do.end15, !dbg !17170

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !17168

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !17159

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !17158

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !17153

do.end19:                                         ; preds = %do.end18
  %10 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !17173
  %flags20 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %10, i32 0, i32 2, !dbg !17173
  %11 = load i32, i32* %flags20, align 8, !dbg !17173
  %and = and i32 %11, 4, !dbg !17173
  %cmp21 = icmp eq i32 %and, 0, !dbg !17173
  br i1 %cmp21, label %if.then, label %if.else, !dbg !17175

if.then:                                          ; preds = %do.end19
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !17176
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 42, !dbg !17176
  %13 = load i64, i64* %io_port, align 8, !dbg !17176
  %add = add i64 %13, 14, !dbg !17176
  %conv23 = trunc i64 %add to i32, !dbg !17176
  %call24 = call zeroext i16 @inw(i32 %conv23) #11, !dbg !17176
  %conv25 = zext i16 %call24 to i32, !dbg !17176
  %and26 = and i32 %conv25, 3, !dbg !17176
  %tobool = icmp ne i32 %and26, 0, !dbg !17176
  br i1 %tobool, label %if.then27, label %if.end, !dbg !17179

if.then27:                                        ; preds = %if.then
  store i32 1, i32* %result, align 4, !dbg !17180
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !17182
  %call28 = call i8* @shost_priv(%struct.Scsi_Host* %14) #11, !dbg !17182
  %15 = bitcast i8* %call28 to %struct.asc_board*, !dbg !17182
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %15, i32 0, i32 12, !dbg !17182
  %interrupt = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 3, !dbg !17182
  %16 = load i32, i32* %interrupt, align 4, !dbg !17182
  %add29 = add i32 %16, 1, !dbg !17182
  store i32 %add29, i32* %interrupt, align 4, !dbg !17182
  %17 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !17183
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %17, i32 0, i32 4, !dbg !17184
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !17185
  %call30 = call i32 @AscISR(%struct.asc_dvc_var* %asc_dvc_var) #11, !dbg !17186
  br label %if.end, !dbg !17187

if.end:                                           ; preds = %if.then27, %if.then
  br label %if.end40, !dbg !17188

if.else:                                          ; preds = %do.end19
  %18 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !17189
  %dvc_var31 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %18, i32 0, i32 4, !dbg !17192
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var31 to %struct.adv_dvc_var*, !dbg !17193
  %call32 = call i32 @AdvISR(%struct.adv_dvc_var* %adv_dvc_var) #11, !dbg !17194
  %tobool33 = icmp ne i32 %call32, 0, !dbg !17194
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !17195

if.then34:                                        ; preds = %if.else
  store i32 1, i32* %result, align 4, !dbg !17196
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !17198
  %call35 = call i8* @shost_priv(%struct.Scsi_Host* %19) #11, !dbg !17198
  %20 = bitcast i8* %call35 to %struct.asc_board*, !dbg !17198
  %asc_stats36 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %20, i32 0, i32 12, !dbg !17198
  %interrupt37 = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats36, i32 0, i32 3, !dbg !17198
  %21 = load i32, i32* %interrupt37, align 4, !dbg !17198
  %add38 = add i32 %21, 1, !dbg !17198
  store i32 %add38, i32* %interrupt37, align 4, !dbg !17198
  br label %if.end39, !dbg !17199

if.end39:                                         ; preds = %if.then34, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !17200
  %host_lock41 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %22, i32 0, i32 4, !dbg !17201
  %23 = load %struct.spinlock*, %struct.spinlock** %host_lock41, align 8, !dbg !17201
  %24 = load i64, i64* %flags, align 8, !dbg !17202
  store %struct.spinlock* %23, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !233, metadata !7411, metadata !DIExpression()) #6, !dbg !17203
  call void @llvm.dbg.declare(metadata !233, metadata !7415, metadata !DIExpression()) #6, !dbg !17203
  store i32 1, i32* %tmp.i, align 4, !dbg !17203
  %25 = load i32, i32* %tmp.i, align 4, !dbg !17203
  call void @llvm.dbg.declare(metadata !233, metadata !7416, metadata !DIExpression()) #6, !dbg !17204
  call void @llvm.dbg.declare(metadata !233, metadata !7422, metadata !DIExpression()) #6, !dbg !17204
  store i32 1, i32* %tmp8.i, align 4, !dbg !17204
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !17204
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !17205
  call void @arch_local_irq_restore(i64 %27) #13, !dbg !17205
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !17206, !srcloc !7426
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !17207
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !17207
  %rlock.i43 = bitcast %union.anon.1* %29 to %struct.raw_spinlock*, !dbg !17207
  %30 = load i32, i32* %result, align 4, !dbg !17208
  ret i32 %30, !dbg !17209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_wide_init_chip(%struct.Scsi_Host* %shost) #2 !dbg !17210 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  %adv_dvc = alloca %struct.adv_dvc_var*, align 8
  %sgblk_pool_size = alloca i64, align 8
  %warn_code = alloca i32, align 4
  %err_code = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !17213, metadata !DIExpression()), !dbg !17214
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17215
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !17216
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !17216
  store %struct.asc_board* %1, %struct.asc_board** %board, align 8, !dbg !17214
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc, metadata !17217, metadata !DIExpression()), !dbg !17218
  %2 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17219
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %2, i32 0, i32 4, !dbg !17220
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !17221
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17218
  call void @llvm.dbg.declare(metadata i64* %sgblk_pool_size, metadata !17222, metadata !DIExpression()), !dbg !17223
  call void @llvm.dbg.declare(metadata i32* %warn_code, metadata !17224, metadata !DIExpression()), !dbg !17225
  call void @llvm.dbg.declare(metadata i32* %err_code, metadata !17226, metadata !DIExpression()), !dbg !17227
  %3 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17228
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 0, !dbg !17229
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17229
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17230
  %carrier_addr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 24, !dbg !17231
  %call1 = call i8* @dma_alloc_coherent(%struct.device* %4, i64 4096, i64* %carrier_addr, i32 3264) #11, !dbg !17232
  %6 = bitcast i8* %call1 to %struct.adv_carr_t*, !dbg !17232
  %7 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17233
  %carrier = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %7, i32 0, i32 22, !dbg !17234
  store %struct.adv_carr_t* %6, %struct.adv_carr_t** %carrier, align 8, !dbg !17235
  %8 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17236
  %carrier2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %8, i32 0, i32 22, !dbg !17238
  %9 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier2, align 8, !dbg !17238
  %tobool = icmp ne %struct.adv_carr_t* %9, null, !dbg !17236
  br i1 %tobool, label %if.end, label %if.then, !dbg !17239

if.then:                                          ; preds = %entry
  br label %kmalloc_failed, !dbg !17240

if.end:                                           ; preds = %entry
  %10 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17241
  %max_host_qng = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %10, i32 0, i32 16, !dbg !17242
  %11 = load i8, i8* %max_host_qng, align 4, !dbg !17242
  %conv = zext i8 %11 to i64, !dbg !17241
  %mul = mul i64 %conv, 120, !dbg !17243
  %12 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17244
  %adv_reqp_size = getelementptr inbounds %struct.asc_board, %struct.asc_board* %12, i32 0, i32 18, !dbg !17245
  store i64 %mul, i64* %adv_reqp_size, align 8, !dbg !17246
  %13 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17247
  %adv_reqp_size3 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 18, !dbg !17249
  %14 = load i64, i64* %adv_reqp_size3, align 8, !dbg !17249
  %and = and i64 %14, 31, !dbg !17250
  %tobool4 = icmp ne i64 %and, 0, !dbg !17250
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !17251

if.then5:                                         ; preds = %if.end
  %15 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17252
  %adv_reqp_size6 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %15, i32 0, i32 18, !dbg !17252
  %16 = load i64, i64* %adv_reqp_size6, align 8, !dbg !17252
  %add = add i64 %16, 31, !dbg !17252
  %and7 = and i64 %add, -32, !dbg !17252
  %17 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17254
  %adv_reqp_size8 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %17, i32 0, i32 18, !dbg !17255
  store i64 %and7, i64* %adv_reqp_size8, align 8, !dbg !17256
  br label %if.end9, !dbg !17257

if.end9:                                          ; preds = %if.then5, %if.end
  %18 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17258
  %dev10 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %18, i32 0, i32 0, !dbg !17259
  %19 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !17259
  %20 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17260
  %adv_reqp_size11 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %20, i32 0, i32 18, !dbg !17261
  %21 = load i64, i64* %adv_reqp_size11, align 8, !dbg !17261
  %22 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17262
  %adv_reqp_addr = getelementptr inbounds %struct.asc_board, %struct.asc_board* %22, i32 0, i32 17, !dbg !17263
  %call12 = call i8* @dma_alloc_coherent(%struct.device* %19, i64 %21, i64* %adv_reqp_addr, i32 3264) #11, !dbg !17264
  %23 = bitcast i8* %call12 to %struct.adv_req*, !dbg !17264
  %24 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17265
  %adv_reqp = getelementptr inbounds %struct.asc_board, %struct.asc_board* %24, i32 0, i32 16, !dbg !17266
  store %struct.adv_req* %23, %struct.adv_req** %adv_reqp, align 8, !dbg !17267
  %25 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17268
  %adv_reqp13 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %25, i32 0, i32 16, !dbg !17270
  %26 = load %struct.adv_req*, %struct.adv_req** %adv_reqp13, align 8, !dbg !17270
  %tobool14 = icmp ne %struct.adv_req* %26, null, !dbg !17268
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !17271

if.then15:                                        ; preds = %if.end9
  br label %kmalloc_failed, !dbg !17272

if.end16:                                         ; preds = %if.end9
  store i64 36432, i64* %sgblk_pool_size, align 8, !dbg !17273
  %27 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17274
  %dev17 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %27, i32 0, i32 0, !dbg !17275
  %28 = load %struct.device*, %struct.device** %dev17, align 8, !dbg !17275
  %29 = load i64, i64* %sgblk_pool_size, align 8, !dbg !17276
  %call18 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i64 0, i64 0), %struct.device* %28, i64 %29, i64 32, i64 0) #11, !dbg !17277
  %30 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17278
  %adv_sgblk_pool = getelementptr inbounds %struct.asc_board, %struct.asc_board* %30, i32 0, i32 19, !dbg !17279
  store %struct.dma_pool* %call18, %struct.dma_pool** %adv_sgblk_pool, align 8, !dbg !17280
  %31 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !17281
  %adv_sgblk_pool19 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %31, i32 0, i32 19, !dbg !17283
  %32 = load %struct.dma_pool*, %struct.dma_pool** %adv_sgblk_pool19, align 8, !dbg !17283
  %tobool20 = icmp ne %struct.dma_pool* %32, null, !dbg !17281
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !17284

if.then21:                                        ; preds = %if.end16
  br label %kmalloc_failed, !dbg !17285

if.end22:                                         ; preds = %if.end16
  %33 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17286
  %chip_type = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %33, i32 0, i32 20, !dbg !17288
  %34 = load i8, i8* %chip_type, align 1, !dbg !17288
  %conv23 = zext i8 %34 to i32, !dbg !17286
  %cmp = icmp eq i32 %conv23, 1, !dbg !17289
  br i1 %cmp, label %if.then25, label %if.else, !dbg !17290

if.then25:                                        ; preds = %if.end22
  %35 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17291
  %call26 = call i32 @AdvInitAsc3550Driver(%struct.adv_dvc_var* %35) #11, !dbg !17293
  store i32 %call26, i32* %warn_code, align 4, !dbg !17294
  br label %if.end36, !dbg !17295

if.else:                                          ; preds = %if.end22
  %36 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17296
  %chip_type27 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %36, i32 0, i32 20, !dbg !17298
  %37 = load i8, i8* %chip_type27, align 1, !dbg !17298
  %conv28 = zext i8 %37 to i32, !dbg !17296
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !17299
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !17300

if.then31:                                        ; preds = %if.else
  %38 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17301
  %call32 = call i32 @AdvInitAsc38C0800Driver(%struct.adv_dvc_var* %38) #11, !dbg !17303
  store i32 %call32, i32* %warn_code, align 4, !dbg !17304
  br label %if.end35, !dbg !17305

if.else33:                                        ; preds = %if.else
  %39 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17306
  %call34 = call i32 @AdvInitAsc38C1600Driver(%struct.adv_dvc_var* %39) #11, !dbg !17308
  store i32 %call34, i32* %warn_code, align 4, !dbg !17309
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then31
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then25
  %40 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17310
  %err_code37 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %40, i32 0, i32 1, !dbg !17311
  %41 = load i16, i16* %err_code37, align 8, !dbg !17311
  %conv38 = zext i16 %41 to i32, !dbg !17310
  store i32 %conv38, i32* %err_code, align 4, !dbg !17312
  %42 = load i32, i32* %warn_code, align 4, !dbg !17313
  %tobool39 = icmp ne i32 %42, 0, !dbg !17313
  br i1 %tobool39, label %if.then41, label %lor.lhs.false, !dbg !17315

lor.lhs.false:                                    ; preds = %if.end36
  %43 = load i32, i32* %err_code, align 4, !dbg !17316
  %tobool40 = icmp ne i32 %43, 0, !dbg !17316
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !17317

if.then41:                                        ; preds = %lor.lhs.false, %if.end36
  %44 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17318
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %44, i32 0, i32 47, !dbg !17318
  %45 = load i32, i32* %warn_code, align 4, !dbg !17318
  %46 = load i32, i32* %err_code, align 4, !dbg !17318
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.149, i64 0, i64 0), i32 %45, i32 %46) #12, !dbg !17318
  br label %if.end42, !dbg !17320

if.end42:                                         ; preds = %if.then41, %lor.lhs.false
  br label %exit, !dbg !17321

kmalloc_failed:                                   ; preds = %if.then21, %if.then15, %if.then
  call void @llvm.dbg.label(metadata !17322), !dbg !17323
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !17324
  %shost_gendev43 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 47, !dbg !17324
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %struct.device* %shost_gendev43, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i64 0, i64 0)) #12, !dbg !17324
  store i32 -1, i32* %err_code, align 4, !dbg !17325
  br label %exit, !dbg !17326

exit:                                             ; preds = %kmalloc_failed, %if.end42
  call void @llvm.dbg.label(metadata !17327), !dbg !17328
  %48 = load i32, i32* %err_code, align 4, !dbg !17329
  ret i32 %48, !dbg !17330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_add_host(%struct.Scsi_Host* %host, %struct.device* %dev) #2 !dbg !17331 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !17334, metadata !DIExpression()), !dbg !17335
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17336, metadata !DIExpression()), !dbg !17337
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !17338
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17339
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17340
  %call = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %0, %struct.device* %1, %struct.device* %2) #11, !dbg !17341
  ret i32 %call, !dbg !17342
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_host(%struct.Scsi_Host*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advansys_wide_free_mem(%struct.asc_board* %board) #2 !dbg !17343 {
entry:
  %board.addr = alloca %struct.asc_board*, align 8
  %adv_dvc = alloca %struct.adv_dvc_var*, align 8
  store %struct.asc_board* %board, %struct.asc_board** %board.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board.addr, metadata !17346, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %adv_dvc, metadata !17348, metadata !DIExpression()), !dbg !17349
  %0 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17350
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %0, i32 0, i32 4, !dbg !17351
  %adv_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.adv_dvc_var*, !dbg !17352
  store %struct.adv_dvc_var* %adv_dvc_var, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17349
  %1 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17353
  %carrier = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %1, i32 0, i32 22, !dbg !17355
  %2 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier, align 8, !dbg !17355
  %tobool = icmp ne %struct.adv_carr_t* %2, null, !dbg !17353
  br i1 %tobool, label %if.then, label %if.end, !dbg !17356

if.then:                                          ; preds = %entry
  %3 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17357
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 0, !dbg !17359
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17359
  %5 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17360
  %carrier1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %5, i32 0, i32 22, !dbg !17361
  %6 = load %struct.adv_carr_t*, %struct.adv_carr_t** %carrier1, align 8, !dbg !17361
  %7 = bitcast %struct.adv_carr_t* %6 to i8*, !dbg !17360
  %8 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17362
  %carrier_addr = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %8, i32 0, i32 24, !dbg !17363
  %9 = load i64, i64* %carrier_addr, align 8, !dbg !17363
  call void @dma_free_coherent(%struct.device* %4, i64 4096, i8* %7, i64 %9) #11, !dbg !17364
  %10 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %adv_dvc, align 8, !dbg !17365
  %carrier2 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %10, i32 0, i32 22, !dbg !17366
  store %struct.adv_carr_t* null, %struct.adv_carr_t** %carrier2, align 8, !dbg !17367
  br label %if.end, !dbg !17368

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17369
  %adv_reqp = getelementptr inbounds %struct.asc_board, %struct.asc_board* %11, i32 0, i32 16, !dbg !17371
  %12 = load %struct.adv_req*, %struct.adv_req** %adv_reqp, align 8, !dbg !17371
  %tobool3 = icmp ne %struct.adv_req* %12, null, !dbg !17369
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !17372

if.then4:                                         ; preds = %if.end
  %13 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17373
  %dev5 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 0, !dbg !17375
  %14 = load %struct.device*, %struct.device** %dev5, align 8, !dbg !17375
  %15 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17376
  %adv_reqp_size = getelementptr inbounds %struct.asc_board, %struct.asc_board* %15, i32 0, i32 18, !dbg !17377
  %16 = load i64, i64* %adv_reqp_size, align 8, !dbg !17377
  %17 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17378
  %adv_reqp6 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %17, i32 0, i32 16, !dbg !17379
  %18 = load %struct.adv_req*, %struct.adv_req** %adv_reqp6, align 8, !dbg !17379
  %19 = bitcast %struct.adv_req* %18 to i8*, !dbg !17378
  %20 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17380
  %adv_reqp_addr = getelementptr inbounds %struct.asc_board, %struct.asc_board* %20, i32 0, i32 17, !dbg !17381
  %21 = load i64, i64* %adv_reqp_addr, align 8, !dbg !17381
  call void @dma_free_coherent(%struct.device* %14, i64 %16, i8* %19, i64 %21) #11, !dbg !17382
  %22 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17383
  %adv_reqp7 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %22, i32 0, i32 16, !dbg !17384
  store %struct.adv_req* null, %struct.adv_req** %adv_reqp7, align 8, !dbg !17385
  br label %if.end8, !dbg !17386

if.end8:                                          ; preds = %if.then4, %if.end
  %23 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17387
  %adv_sgblk_pool = getelementptr inbounds %struct.asc_board, %struct.asc_board* %23, i32 0, i32 19, !dbg !17389
  %24 = load %struct.dma_pool*, %struct.dma_pool** %adv_sgblk_pool, align 8, !dbg !17389
  %tobool9 = icmp ne %struct.dma_pool* %24, null, !dbg !17387
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !17390

if.then10:                                        ; preds = %if.end8
  %25 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17391
  %adv_sgblk_pool11 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %25, i32 0, i32 19, !dbg !17393
  %26 = load %struct.dma_pool*, %struct.dma_pool** %adv_sgblk_pool11, align 8, !dbg !17393
  call void @dma_pool_destroy(%struct.dma_pool* %26) #11, !dbg !17394
  %27 = load %struct.asc_board*, %struct.asc_board** %board.addr, align 8, !dbg !17395
  %adv_sgblk_pool12 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %27, i32 0, i32 19, !dbg !17396
  store %struct.dma_pool* null, %struct.dma_pool** %adv_sgblk_pool12, align 8, !dbg !17397
  br label %if.end13, !dbg !17398

if.end13:                                         ; preds = %if.then10, %if.end8
  ret void, !dbg !17399
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscInitAscDvcVar(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !17400 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %i = alloca i32, align 4
  %iop_base = alloca i32, align 4
  %chip_version = alloca i8, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !17401, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17403, metadata !DIExpression()), !dbg !17404
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !17405, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.declare(metadata i8* %chip_version, metadata !17407, metadata !DIExpression()), !dbg !17408
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17409
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !17410
  %1 = load i32, i32* %iop_base1, align 8, !dbg !17410
  store i32 %1, i32* %iop_base, align 4, !dbg !17411
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17412
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %2, i32 0, i32 1, !dbg !17413
  store i16 0, i16* %err_code, align 4, !dbg !17414
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17415
  %bus_type = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 4, !dbg !17417
  %4 = load i16, i16* %bus_type, align 2, !dbg !17417
  %conv = zext i16 %4 to i32, !dbg !17415
  %and = and i32 %conv, 71, !dbg !17418
  %cmp = icmp eq i32 %and, 0, !dbg !17419
  br i1 %cmp, label %if.then, label %if.end, !dbg !17420

if.then:                                          ; preds = %entry
  %5 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17421
  %err_code3 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %5, i32 0, i32 1, !dbg !17423
  %6 = load i16, i16* %err_code3, align 4, !dbg !17424
  %conv4 = zext i16 %6 to i32, !dbg !17424
  %or = or i32 %conv4, 1024, !dbg !17424
  %conv5 = trunc i32 %or to i16, !dbg !17424
  store i16 %conv5, i16* %err_code3, align 4, !dbg !17424
  br label %if.end, !dbg !17425

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %iop_base, align 4, !dbg !17426
  %add = add i32 %7, 15, !dbg !17426
  call void @outb(i8 zeroext 32, i32 %add) #11, !dbg !17426
  %8 = load i32, i32* %iop_base, align 4, !dbg !17427
  %add6 = add i32 %8, 14, !dbg !17427
  call void @outw(i16 zeroext 0, i32 %add6) #11, !dbg !17427
  %9 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17428
  %bug_fix_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %9, i32 0, i32 3, !dbg !17429
  store i16 0, i16* %bug_fix_cntl, align 8, !dbg !17430
  %10 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17431
  %pci_fix_asyn_xfer = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %10, i32 0, i32 33, !dbg !17432
  store i8 0, i8* %pci_fix_asyn_xfer, align 1, !dbg !17433
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17434
  %pci_fix_asyn_xfer_always = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %11, i32 0, i32 27, !dbg !17435
  store i8 0, i8* %pci_fix_asyn_xfer_always, align 8, !dbg !17436
  %12 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17437
  %sdtr_done = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %12, i32 0, i32 6, !dbg !17438
  store i8 0, i8* %sdtr_done, align 1, !dbg !17439
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17440
  %cur_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 17, !dbg !17441
  store i8 0, i8* %cur_total_qng, align 4, !dbg !17442
  %14 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17443
  %is_in_int = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %14, i32 0, i32 15, !dbg !17444
  store i8 0, i8* %is_in_int, align 2, !dbg !17445
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17446
  %in_critical_cnt = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %15, i32 0, i32 18, !dbg !17447
  store i8 0, i8* %in_critical_cnt, align 1, !dbg !17448
  %16 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17449
  %last_q_shortage = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %16, i32 0, i32 19, !dbg !17450
  store i8 0, i8* %last_q_shortage, align 2, !dbg !17451
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17452
  %use_tagged_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 7, !dbg !17453
  store i8 0, i8* %use_tagged_qng, align 2, !dbg !17454
  %18 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17455
  %no_scam = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %18, i32 0, i32 32, !dbg !17456
  store i8 0, i8* %no_scam, align 8, !dbg !17457
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17458
  %unit_not_ready = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 8, !dbg !17459
  store i8 0, i8* %unit_not_ready, align 1, !dbg !17460
  %20 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17461
  %queue_full_or_busy = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %20, i32 0, i32 9, !dbg !17462
  store i8 0, i8* %queue_full_or_busy, align 8, !dbg !17463
  %21 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17464
  %redo_scam = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %21, i32 0, i32 28, !dbg !17465
  store i8 0, i8* %redo_scam, align 1, !dbg !17466
  %22 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17467
  %res2 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %22, i32 0, i32 29, !dbg !17468
  store i16 0, i16* %res2, align 2, !dbg !17469
  %23 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17470
  %min_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %23, i32 0, i32 34, !dbg !17471
  store i8 0, i8* %min_sdtr_index, align 2, !dbg !17472
  %24 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17473
  %cfg = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %24, i32 0, i32 26, !dbg !17474
  %25 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg, align 8, !dbg !17474
  %can_tagged_qng = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %25, i32 0, i32 0, !dbg !17475
  store i8 0, i8* %can_tagged_qng, align 2, !dbg !17476
  %26 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17477
  %cfg7 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %26, i32 0, i32 26, !dbg !17478
  %27 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg7, align 8, !dbg !17478
  %cmd_qng_enabled = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %27, i32 0, i32 1, !dbg !17479
  store i8 0, i8* %cmd_qng_enabled, align 1, !dbg !17480
  %28 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17481
  %dvc_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %28, i32 0, i32 2, !dbg !17482
  store i16 -1, i16* %dvc_cntl, align 2, !dbg !17483
  %29 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17484
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %29, i32 0, i32 5, !dbg !17485
  store i8 0, i8* %init_sdtr, align 4, !dbg !17486
  %30 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17487
  %max_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %30, i32 0, i32 16, !dbg !17488
  store i8 -16, i8* %max_total_qng, align 1, !dbg !17489
  %31 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17490
  %scsi_reset_wait = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %31, i32 0, i32 13, !dbg !17491
  store i8 3, i8* %scsi_reset_wait, align 8, !dbg !17492
  %32 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17493
  %start_motor = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %32, i32 0, i32 10, !dbg !17494
  store i8 -1, i8* %start_motor, align 1, !dbg !17495
  %33 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17496
  %bus_type8 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %33, i32 0, i32 4, !dbg !17497
  %34 = load i16, i16* %bus_type8, align 2, !dbg !17497
  %call = call i32 @AscGetMaxDmaCount(i16 zeroext %34) #11, !dbg !17498
  %35 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17499
  %max_dma_count = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %35, i32 0, i32 31, !dbg !17500
  store i32 %call, i32* %max_dma_count, align 4, !dbg !17501
  %36 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17502
  %cfg9 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %36, i32 0, i32 26, !dbg !17503
  %37 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg9, align 8, !dbg !17503
  %sdtr_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %37, i32 0, i32 3, !dbg !17504
  store i8 -1, i8* %sdtr_enable, align 1, !dbg !17505
  %38 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17506
  %cfg10 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %38, i32 0, i32 26, !dbg !17507
  %39 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg10, align 8, !dbg !17507
  %disc_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %39, i32 0, i32 2, !dbg !17508
  store i8 -1, i8* %disc_enable, align 2, !dbg !17509
  %40 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17510
  %cfg11 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %40, i32 0, i32 26, !dbg !17511
  %41 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg11, align 8, !dbg !17511
  %chip_scsi_id = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %41, i32 0, i32 4, !dbg !17512
  store i8 7, i8* %chip_scsi_id, align 2, !dbg !17513
  %42 = load i32, i32* %iop_base, align 4, !dbg !17514
  %43 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17515
  %bus_type12 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %43, i32 0, i32 4, !dbg !17516
  %44 = load i16, i16* %bus_type12, align 2, !dbg !17516
  %call13 = call zeroext i8 @AscGetChipVersion(i32 %42, i16 zeroext %44) #11, !dbg !17517
  store i8 %call13, i8* %chip_version, align 1, !dbg !17518
  %45 = load i8, i8* %chip_version, align 1, !dbg !17519
  %46 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17520
  %cfg14 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %46, i32 0, i32 26, !dbg !17521
  %47 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg14, align 8, !dbg !17521
  %chip_version15 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %47, i32 0, i32 7, !dbg !17522
  store i8 %45, i8* %chip_version15, align 1, !dbg !17523
  %48 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17524
  %sdtr_period_tbl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %48, i32 0, i32 25, !dbg !17525
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @asc_syn_xfer_period, i64 0, i64 0), i8** %sdtr_period_tbl, align 8, !dbg !17526
  %49 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17527
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %49, i32 0, i32 35, !dbg !17528
  store i8 7, i8* %max_sdtr_index, align 1, !dbg !17529
  %50 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17530
  %bus_type16 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %50, i32 0, i32 4, !dbg !17532
  %51 = load i16, i16* %bus_type16, align 2, !dbg !17532
  %conv17 = zext i16 %51 to i32, !dbg !17530
  %and18 = and i32 %conv17, 4, !dbg !17533
  %tobool = icmp ne i32 %and18, 0, !dbg !17533
  br i1 %tobool, label %land.lhs.true, label %if.end38, !dbg !17534

land.lhs.true:                                    ; preds = %if.end
  %52 = load i8, i8* %chip_version, align 1, !dbg !17535
  %conv19 = zext i8 %52 to i32, !dbg !17535
  %cmp20 = icmp sge i32 %conv19, 10, !dbg !17536
  br i1 %cmp20, label %if.then22, label %if.end38, !dbg !17537

if.then22:                                        ; preds = %land.lhs.true
  %53 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17538
  %bus_type23 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %53, i32 0, i32 4, !dbg !17540
  store i16 260, i16* %bus_type23, align 2, !dbg !17541
  %54 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17542
  %sdtr_period_tbl24 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %54, i32 0, i32 25, !dbg !17543
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @asc_syn_ultra_xfer_period, i64 0, i64 0), i8** %sdtr_period_tbl24, align 8, !dbg !17544
  %55 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17545
  %max_sdtr_index25 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %55, i32 0, i32 35, !dbg !17546
  store i8 15, i8* %max_sdtr_index25, align 1, !dbg !17547
  %56 = load i8, i8* %chip_version, align 1, !dbg !17548
  %conv26 = zext i8 %56 to i32, !dbg !17548
  %cmp27 = icmp eq i32 %conv26, 10, !dbg !17550
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !17551

if.then29:                                        ; preds = %if.then22
  %57 = load i32, i32* %iop_base, align 4, !dbg !17552
  %add30 = add i32 %57, 13, !dbg !17552
  call void @outb(i8 zeroext 96, i32 %add30) #11, !dbg !17552
  br label %if.end37, !dbg !17554

if.else:                                          ; preds = %if.then22
  %58 = load i8, i8* %chip_version, align 1, !dbg !17555
  %conv31 = zext i8 %58 to i32, !dbg !17555
  %cmp32 = icmp sge i32 %conv31, 11, !dbg !17557
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !17558

if.then34:                                        ; preds = %if.else
  %59 = load i32, i32* %iop_base, align 4, !dbg !17559
  %add35 = add i32 %59, 13, !dbg !17559
  call void @outb(i8 zeroext 80, i32 %add35) #11, !dbg !17559
  br label %if.end36, !dbg !17561

if.end36:                                         ; preds = %if.then34, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then29
  br label %if.end38, !dbg !17562

if.end38:                                         ; preds = %if.end37, %land.lhs.true, %if.end
  %60 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17563
  %bus_type39 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %60, i32 0, i32 4, !dbg !17565
  %61 = load i16, i16* %bus_type39, align 2, !dbg !17565
  %conv40 = zext i16 %61 to i32, !dbg !17563
  %cmp41 = icmp eq i32 %conv40, 4, !dbg !17566
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !17567

if.then43:                                        ; preds = %if.end38
  %62 = load i32, i32* %iop_base, align 4, !dbg !17568
  %add44 = add i32 %62, 13, !dbg !17568
  call void @outb(i8 zeroext 96, i32 %add44) #11, !dbg !17568
  br label %if.end45, !dbg !17570

if.end45:                                         ; preds = %if.then43, %if.end38
  %63 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17571
  %cfg46 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %63, i32 0, i32 26, !dbg !17572
  %64 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg46, align 8, !dbg !17572
  %isa_dma_speed = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %64, i32 0, i32 5, !dbg !17573
  store i8 4, i8* %isa_dma_speed, align 1, !dbg !17574
  store i32 0, i32* %i, align 4, !dbg !17575
  br label %for.cond, !dbg !17577

for.cond:                                         ; preds = %for.inc, %if.end45
  %65 = load i32, i32* %i, align 4, !dbg !17578
  %cmp47 = icmp sle i32 %65, 7, !dbg !17580
  br i1 %cmp47, label %for.body, label %for.end, !dbg !17581

for.body:                                         ; preds = %for.cond
  %66 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17582
  %cur_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %66, i32 0, i32 21, !dbg !17584
  %67 = load i32, i32* %i, align 4, !dbg !17585
  %idxprom = sext i32 %67 to i64, !dbg !17582
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng, i64 0, i64 %idxprom, !dbg !17582
  store i8 0, i8* %arrayidx, align 1, !dbg !17586
  %68 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17587
  %max_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %68, i32 0, i32 22, !dbg !17588
  %69 = load i32, i32* %i, align 4, !dbg !17589
  %idxprom49 = sext i32 %69 to i64, !dbg !17587
  %arrayidx50 = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng, i64 0, i64 %idxprom49, !dbg !17587
  store i8 4, i8* %arrayidx50, align 1, !dbg !17590
  %70 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17591
  %scsiq_busy_head = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %70, i32 0, i32 23, !dbg !17592
  %71 = load i32, i32* %i, align 4, !dbg !17593
  %idxprom51 = sext i32 %71 to i64, !dbg !17591
  %arrayidx52 = getelementptr [8 x %struct.asc_scsi_q*], [8 x %struct.asc_scsi_q*]* %scsiq_busy_head, i64 0, i64 %idxprom51, !dbg !17591
  store %struct.asc_scsi_q* null, %struct.asc_scsi_q** %arrayidx52, align 8, !dbg !17594
  %72 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17595
  %scsiq_busy_tail = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %72, i32 0, i32 24, !dbg !17596
  %73 = load i32, i32* %i, align 4, !dbg !17597
  %idxprom53 = sext i32 %73 to i64, !dbg !17595
  %arrayidx54 = getelementptr [8 x %struct.asc_scsi_q*], [8 x %struct.asc_scsi_q*]* %scsiq_busy_tail, i64 0, i64 %idxprom53, !dbg !17595
  store %struct.asc_scsi_q* null, %struct.asc_scsi_q** %arrayidx54, align 8, !dbg !17598
  %74 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17599
  %cfg55 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %74, i32 0, i32 26, !dbg !17600
  %75 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg55, align 8, !dbg !17600
  %max_tag_qng = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %75, i32 0, i32 10, !dbg !17601
  %76 = load i32, i32* %i, align 4, !dbg !17602
  %idxprom56 = sext i32 %76 to i64, !dbg !17599
  %arrayidx57 = getelementptr [8 x i8], [8 x i8]* %max_tag_qng, i64 0, i64 %idxprom56, !dbg !17599
  store i8 16, i8* %arrayidx57, align 1, !dbg !17603
  br label %for.inc, !dbg !17604

for.inc:                                          ; preds = %for.body
  %77 = load i32, i32* %i, align 4, !dbg !17605
  %inc = add i32 %77, 1, !dbg !17605
  store i32 %inc, i32* %i, align 4, !dbg !17605
  br label %for.cond, !dbg !17606, !llvm.loop !17607

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscInitFromEEP(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !17610 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %eep_config_buf = alloca %struct.asceep_config, align 2
  %eep_config = alloca %struct.asceep_config*, align 8
  %iop_base = alloca i32, align 4
  %chksum = alloca i16, align 2
  %warn_code = alloca i16, align 2
  %cfg_msw = alloca i16, align 2
  %cfg_lsw = alloca i16, align 2
  %i = alloca i32, align 4
  %write_eep = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !17611, metadata !DIExpression()), !dbg !17612
  call void @llvm.dbg.declare(metadata %struct.asceep_config* %eep_config_buf, metadata !17613, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.declare(metadata %struct.asceep_config** %eep_config, metadata !17615, metadata !DIExpression()), !dbg !17616
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !17617, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !17619, metadata !DIExpression()), !dbg !17620
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !17621, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.declare(metadata i16* %cfg_msw, metadata !17623, metadata !DIExpression()), !dbg !17624
  call void @llvm.dbg.declare(metadata i16* %cfg_lsw, metadata !17625, metadata !DIExpression()), !dbg !17626
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17627, metadata !DIExpression()), !dbg !17628
  call void @llvm.dbg.declare(metadata i32* %write_eep, metadata !17629, metadata !DIExpression()), !dbg !17630
  store i32 0, i32* %write_eep, align 4, !dbg !17630
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17631
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !17632
  %1 = load i32, i32* %iop_base1, align 8, !dbg !17632
  store i32 %1, i32* %iop_base, align 4, !dbg !17633
  store i16 0, i16* %warn_code, align 2, !dbg !17634
  %2 = load i32, i32* %iop_base, align 4, !dbg !17635
  call void @AscWriteLramWord(i32 %2, i16 zeroext 64, i16 zeroext 254) #11, !dbg !17636
  %3 = load i32, i32* %iop_base, align 4, !dbg !17637
  %call = call i32 @AscStopQueueExe(i32 %3) #11, !dbg !17638
  %4 = load i32, i32* %iop_base, align 4, !dbg !17639
  %call2 = call zeroext i1 @AscStopChip(i32 %4) #11, !dbg !17641
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !17642

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %iop_base, align 4, !dbg !17643
  %call3 = call zeroext i8 @AscGetChipScsiCtrl(i32 %5) #11, !dbg !17644
  %conv = zext i8 %call3 to i32, !dbg !17644
  %cmp = icmp ne i32 %conv, 0, !dbg !17645
  br i1 %cmp, label %if.then, label %if.end43, !dbg !17646

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17647
  %init_state = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %6, i32 0, i32 20, !dbg !17649
  %7 = load i16, i16* %init_state, align 8, !dbg !17650
  %conv5 = zext i16 %7 to i32, !dbg !17650
  %or = or i32 %conv5, 256, !dbg !17650
  %conv6 = trunc i32 %or to i16, !dbg !17650
  store i16 %conv6, i16* %init_state, align 8, !dbg !17650
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17651
  %call7 = call zeroext i1 @AscResetChipAndScsiBus(%struct.asc_dvc_var* %8) #11, !dbg !17652
  %9 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17653
  %scsi_reset_wait = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %9, i32 0, i32 13, !dbg !17653
  %10 = load i8, i8* %scsi_reset_wait, align 8, !dbg !17653
  %conv8 = zext i8 %10 to i32, !dbg !17653
  %mul = mul i32 %conv8, 1000, !dbg !17653
  %11 = call i1 @llvm.is.constant.i32(i32 %mul), !dbg !17653
  br i1 %11, label %land.lhs.true, label %cond.false, !dbg !17653

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17653
  %scsi_reset_wait9 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %12, i32 0, i32 13, !dbg !17653
  %13 = load i8, i8* %scsi_reset_wait9, align 8, !dbg !17653
  %conv10 = zext i8 %13 to i32, !dbg !17653
  %mul11 = mul i32 %conv10, 1000, !dbg !17653
  %cmp12 = icmp sle i32 %mul11, 5, !dbg !17653
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !17653

cond.true:                                        ; preds = %land.lhs.true
  %14 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17654
  %scsi_reset_wait14 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %14, i32 0, i32 13, !dbg !17654
  %15 = load i8, i8* %scsi_reset_wait14, align 8, !dbg !17654
  %conv15 = zext i8 %15 to i32, !dbg !17654
  %mul16 = mul i32 %conv15, 1000, !dbg !17654
  %mul17 = mul i32 %mul16, 1000, !dbg !17654
  %16 = call i1 @llvm.is.constant.i32(i32 %mul17), !dbg !17654
  br i1 %16, label %if.then18, label %if.else32, !dbg !17657

if.then18:                                        ; preds = %cond.true
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17658
  %scsi_reset_wait19 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 13, !dbg !17658
  %18 = load i8, i8* %scsi_reset_wait19, align 8, !dbg !17658
  %conv20 = zext i8 %18 to i32, !dbg !17658
  %mul21 = mul i32 %conv20, 1000, !dbg !17658
  %mul22 = mul i32 %mul21, 1000, !dbg !17658
  %div = sdiv i32 %mul22, 20000, !dbg !17658
  %cmp23 = icmp sge i32 %div, 1, !dbg !17658
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !17661

if.then25:                                        ; preds = %if.then18
  call void @__bad_udelay() #11, !dbg !17658
  br label %if.end, !dbg !17658

if.else:                                          ; preds = %if.then18
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17658
  %scsi_reset_wait26 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 13, !dbg !17658
  %20 = load i8, i8* %scsi_reset_wait26, align 8, !dbg !17658
  %conv27 = zext i8 %20 to i32, !dbg !17658
  %mul28 = mul i32 %conv27, 1000, !dbg !17658
  %mul29 = mul i32 %mul28, 1000, !dbg !17658
  %conv30 = sext i32 %mul29 to i64, !dbg !17658
  %mul31 = mul i64 %conv30, 4295, !dbg !17658
  call void @__const_udelay(i64 %mul31) #11, !dbg !17658
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then25
  br label %if.end38, !dbg !17661

if.else32:                                        ; preds = %cond.true
  %21 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17662
  %scsi_reset_wait33 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %21, i32 0, i32 13, !dbg !17662
  %22 = load i8, i8* %scsi_reset_wait33, align 8, !dbg !17662
  %conv34 = zext i8 %22 to i32, !dbg !17662
  %mul35 = mul i32 %conv34, 1000, !dbg !17662
  %mul36 = mul i32 %mul35, 1000, !dbg !17662
  %conv37 = sext i32 %mul36 to i64, !dbg !17662
  call void @__udelay(i64 %conv37) #11, !dbg !17662
  br label %if.end38

if.end38:                                         ; preds = %if.else32, %if.end
  br label %cond.end, !dbg !17653

cond.false:                                       ; preds = %land.lhs.true, %if.then
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !17664, metadata !DIExpression()), !dbg !17666
  %23 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17666
  %scsi_reset_wait39 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %23, i32 0, i32 13, !dbg !17666
  %24 = load i8, i8* %scsi_reset_wait39, align 8, !dbg !17666
  %conv40 = zext i8 %24 to i32, !dbg !17666
  %mul41 = mul i32 %conv40, 1000, !dbg !17666
  %conv42 = sext i32 %mul41 to i64, !dbg !17666
  store i64 %conv42, i64* %__ms, align 8, !dbg !17666
  br label %while.cond, !dbg !17666

while.cond:                                       ; preds = %while.body, %cond.false
  %25 = load i64, i64* %__ms, align 8, !dbg !17666
  %dec = add i64 %25, -1, !dbg !17666
  store i64 %dec, i64* %__ms, align 8, !dbg !17666
  %tobool = icmp ne i64 %25, 0, !dbg !17666
  br i1 %tobool, label %while.body, label %while.end, !dbg !17666

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !17667
  br label %while.cond, !dbg !17666, !llvm.loop !17672

while.end:                                        ; preds = %while.cond
  br label %cond.end, !dbg !17653

cond.end:                                         ; preds = %while.end, %if.end38
  br label %if.end43, !dbg !17673

if.end43:                                         ; preds = %cond.end, %lor.lhs.false
  %26 = load i32, i32* %iop_base, align 4, !dbg !17674
  %call44 = call zeroext i1 @AscIsChipHalted(i32 %26) #11, !dbg !17676
  br i1 %call44, label %if.end50, label %if.then45, !dbg !17677

if.then45:                                        ; preds = %if.end43
  %27 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17678
  %err_code = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %27, i32 0, i32 1, !dbg !17680
  %28 = load i16, i16* %err_code, align 4, !dbg !17681
  %conv46 = zext i16 %28 to i32, !dbg !17681
  %or47 = or i32 %conv46, 8, !dbg !17681
  %conv48 = trunc i32 %or47 to i16, !dbg !17681
  store i16 %conv48, i16* %err_code, align 4, !dbg !17681
  %29 = load i16, i16* %warn_code, align 2, !dbg !17682
  %conv49 = zext i16 %29 to i32, !dbg !17683
  store i32 %conv49, i32* %retval, align 4, !dbg !17684
  br label %return, !dbg !17684

if.end50:                                         ; preds = %if.end43
  %30 = load i32, i32* %iop_base, align 4, !dbg !17685
  %add = add i32 %30, 12, !dbg !17685
  call void @outw(i16 zeroext 128, i32 %add) #11, !dbg !17685
  %31 = load i32, i32* %iop_base, align 4, !dbg !17686
  %add51 = add i32 %31, 12, !dbg !17686
  %call52 = call zeroext i16 @inw(i32 %add51) #11, !dbg !17686
  %conv53 = zext i16 %call52 to i32, !dbg !17686
  %cmp54 = icmp ne i32 %conv53, 128, !dbg !17688
  br i1 %cmp54, label %if.then56, label %if.end62, !dbg !17689

if.then56:                                        ; preds = %if.end50
  %32 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17690
  %err_code57 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %32, i32 0, i32 1, !dbg !17692
  %33 = load i16, i16* %err_code57, align 4, !dbg !17693
  %conv58 = zext i16 %33 to i32, !dbg !17693
  %or59 = or i32 %conv58, 4, !dbg !17693
  %conv60 = trunc i32 %or59 to i16, !dbg !17693
  store i16 %conv60, i16* %err_code57, align 4, !dbg !17693
  %34 = load i16, i16* %warn_code, align 2, !dbg !17694
  %conv61 = zext i16 %34 to i32, !dbg !17695
  store i32 %conv61, i32* %retval, align 4, !dbg !17696
  br label %return, !dbg !17696

if.end62:                                         ; preds = %if.end50
  store %struct.asceep_config* %eep_config_buf, %struct.asceep_config** %eep_config, align 8, !dbg !17697
  %35 = load i32, i32* %iop_base, align 4, !dbg !17698
  %add63 = add i32 %35, 4, !dbg !17698
  %call64 = call zeroext i16 @inw(i32 %add63) #11, !dbg !17698
  store i16 %call64, i16* %cfg_msw, align 2, !dbg !17699
  %36 = load i32, i32* %iop_base, align 4, !dbg !17700
  %add65 = add i32 %36, 2, !dbg !17700
  %call66 = call zeroext i16 @inw(i32 %add65) #11, !dbg !17700
  store i16 %call66, i16* %cfg_lsw, align 2, !dbg !17701
  %37 = load i16, i16* %cfg_msw, align 2, !dbg !17702
  %conv67 = zext i16 %37 to i32, !dbg !17702
  %and = and i32 %conv67, 12416, !dbg !17704
  %cmp68 = icmp ne i32 %and, 0, !dbg !17705
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !17706

if.then70:                                        ; preds = %if.end62
  %38 = load i16, i16* %cfg_msw, align 2, !dbg !17707
  %conv71 = zext i16 %38 to i32, !dbg !17707
  %and72 = and i32 %conv71, -12417, !dbg !17707
  %conv73 = trunc i32 %and72 to i16, !dbg !17707
  store i16 %conv73, i16* %cfg_msw, align 2, !dbg !17707
  %39 = load i16, i16* %warn_code, align 2, !dbg !17709
  %conv74 = zext i16 %39 to i32, !dbg !17709
  %or75 = or i32 %conv74, 64, !dbg !17709
  %conv76 = trunc i32 %or75 to i16, !dbg !17709
  store i16 %conv76, i16* %warn_code, align 2, !dbg !17709
  %40 = load i16, i16* %cfg_msw, align 2, !dbg !17710
  %41 = load i32, i32* %iop_base, align 4, !dbg !17710
  %add77 = add i32 %41, 4, !dbg !17710
  call void @outw(i16 zeroext %40, i32 %add77) #11, !dbg !17710
  br label %if.end78, !dbg !17711

if.end78:                                         ; preds = %if.then70, %if.end62
  %42 = load i32, i32* %iop_base, align 4, !dbg !17712
  %43 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17713
  %44 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17714
  %bus_type = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %44, i32 0, i32 4, !dbg !17715
  %45 = load i16, i16* %bus_type, align 2, !dbg !17715
  %call79 = call zeroext i16 @AscGetEEPConfig(i32 %42, %struct.asceep_config* %43, i16 zeroext %45) #11, !dbg !17716
  store i16 %call79, i16* %chksum, align 2, !dbg !17717
  %46 = load i16, i16* %chksum, align 2, !dbg !17718
  %conv80 = zext i16 %46 to i32, !dbg !17718
  %cmp81 = icmp eq i32 %conv80, 0, !dbg !17720
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !17721

if.then83:                                        ; preds = %if.end78
  store i16 -21931, i16* %chksum, align 2, !dbg !17722
  br label %if.end84, !dbg !17724

if.end84:                                         ; preds = %if.then83, %if.end78
  %47 = load i32, i32* %iop_base, align 4, !dbg !17725
  %add85 = add i32 %47, 14, !dbg !17725
  %call86 = call zeroext i16 @inw(i32 %add85) #11, !dbg !17725
  %conv87 = zext i16 %call86 to i32, !dbg !17725
  %and88 = and i32 %conv87, 16384, !dbg !17727
  %tobool89 = icmp ne i32 %and88, 0, !dbg !17727
  br i1 %tobool89, label %if.then90, label %if.end125, !dbg !17728

if.then90:                                        ; preds = %if.end84
  %48 = load i16, i16* %warn_code, align 2, !dbg !17729
  %conv91 = zext i16 %48 to i32, !dbg !17729
  %or92 = or i32 %conv91, 8, !dbg !17729
  %conv93 = trunc i32 %or92 to i16, !dbg !17729
  store i16 %conv93, i16* %warn_code, align 2, !dbg !17729
  %49 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17731
  %cfg = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %49, i32 0, i32 26, !dbg !17733
  %50 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg, align 8, !dbg !17733
  %chip_version = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %50, i32 0, i32 7, !dbg !17734
  %51 = load i8, i8* %chip_version, align 1, !dbg !17734
  %conv94 = zext i8 %51 to i32, !dbg !17731
  %cmp95 = icmp eq i32 %conv94, 3, !dbg !17735
  br i1 %cmp95, label %if.then97, label %if.end124, !dbg !17736

if.then97:                                        ; preds = %if.then90
  %52 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17737
  %cfg_lsw98 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %52, i32 0, i32 0, !dbg !17740
  %53 = load i16, i16* %cfg_lsw98, align 2, !dbg !17740
  %conv99 = zext i16 %53 to i32, !dbg !17737
  %54 = load i16, i16* %cfg_lsw, align 2, !dbg !17741
  %conv100 = zext i16 %54 to i32, !dbg !17741
  %cmp101 = icmp ne i32 %conv99, %conv100, !dbg !17742
  br i1 %cmp101, label %if.then103, label %if.end110, !dbg !17743

if.then103:                                       ; preds = %if.then97
  %55 = load i16, i16* %warn_code, align 2, !dbg !17744
  %conv104 = zext i16 %55 to i32, !dbg !17744
  %or105 = or i32 %conv104, 32, !dbg !17744
  %conv106 = trunc i32 %or105 to i16, !dbg !17744
  store i16 %conv106, i16* %warn_code, align 2, !dbg !17744
  %56 = load i32, i32* %iop_base, align 4, !dbg !17746
  %add107 = add i32 %56, 2, !dbg !17746
  %call108 = call zeroext i16 @inw(i32 %add107) #11, !dbg !17746
  %57 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17747
  %cfg_lsw109 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %57, i32 0, i32 0, !dbg !17748
  store i16 %call108, i16* %cfg_lsw109, align 2, !dbg !17749
  br label %if.end110, !dbg !17750

if.end110:                                        ; preds = %if.then103, %if.then97
  %58 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17751
  %cfg_msw111 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %58, i32 0, i32 1, !dbg !17753
  %59 = load i16, i16* %cfg_msw111, align 2, !dbg !17753
  %conv112 = zext i16 %59 to i32, !dbg !17751
  %60 = load i16, i16* %cfg_msw, align 2, !dbg !17754
  %conv113 = zext i16 %60 to i32, !dbg !17754
  %cmp114 = icmp ne i32 %conv112, %conv113, !dbg !17755
  br i1 %cmp114, label %if.then116, label %if.end123, !dbg !17756

if.then116:                                       ; preds = %if.end110
  %61 = load i16, i16* %warn_code, align 2, !dbg !17757
  %conv117 = zext i16 %61 to i32, !dbg !17757
  %or118 = or i32 %conv117, 32, !dbg !17757
  %conv119 = trunc i32 %or118 to i16, !dbg !17757
  store i16 %conv119, i16* %warn_code, align 2, !dbg !17757
  %62 = load i32, i32* %iop_base, align 4, !dbg !17759
  %add120 = add i32 %62, 4, !dbg !17759
  %call121 = call zeroext i16 @inw(i32 %add120) #11, !dbg !17759
  %63 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17760
  %cfg_msw122 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %63, i32 0, i32 1, !dbg !17761
  store i16 %call121, i16* %cfg_msw122, align 2, !dbg !17762
  br label %if.end123, !dbg !17763

if.end123:                                        ; preds = %if.then116, %if.end110
  br label %if.end124, !dbg !17764

if.end124:                                        ; preds = %if.end123, %if.then90
  br label %if.end125, !dbg !17765

if.end125:                                        ; preds = %if.end124, %if.end84
  %64 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17766
  %cfg_msw126 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %64, i32 0, i32 1, !dbg !17767
  %65 = load i16, i16* %cfg_msw126, align 2, !dbg !17768
  %conv127 = zext i16 %65 to i32, !dbg !17768
  %and128 = and i32 %conv127, -12417, !dbg !17768
  %conv129 = trunc i32 %and128 to i16, !dbg !17768
  store i16 %conv129, i16* %cfg_msw126, align 2, !dbg !17768
  %66 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17769
  %cfg_lsw130 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %66, i32 0, i32 0, !dbg !17770
  %67 = load i16, i16* %cfg_lsw130, align 2, !dbg !17771
  %conv131 = zext i16 %67 to i32, !dbg !17771
  %or132 = or i32 %conv131, 32, !dbg !17771
  %conv133 = trunc i32 %or132 to i16, !dbg !17771
  store i16 %conv133, i16* %cfg_lsw130, align 2, !dbg !17771
  %68 = load i16, i16* %chksum, align 2, !dbg !17772
  %conv134 = zext i16 %68 to i32, !dbg !17772
  %69 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17774
  %chksum135 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %69, i32 0, i32 15, !dbg !17775
  %70 = load i16, i16* %chksum135, align 2, !dbg !17775
  %conv136 = zext i16 %70 to i32, !dbg !17774
  %cmp137 = icmp ne i32 %conv134, %conv136, !dbg !17776
  br i1 %cmp137, label %if.then139, label %if.end168, !dbg !17777

if.then139:                                       ; preds = %if.end125
  %71 = load i32, i32* %iop_base, align 4, !dbg !17778
  %72 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17781
  %bus_type140 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %72, i32 0, i32 4, !dbg !17782
  %73 = load i16, i16* %bus_type140, align 2, !dbg !17782
  %call141 = call zeroext i8 @AscGetChipVersion(i32 %71, i16 zeroext %73) #11, !dbg !17783
  %conv142 = zext i8 %call141 to i32, !dbg !17783
  %cmp143 = icmp eq i32 %conv142, 11, !dbg !17784
  br i1 %cmp143, label %if.then145, label %if.else161, !dbg !17785

if.then145:                                       ; preds = %if.then139
  %74 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17786
  %init_sdtr = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %74, i32 0, i32 2, !dbg !17788
  store i8 -1, i8* %init_sdtr, align 2, !dbg !17789
  %75 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17790
  %disc_enable = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %75, i32 0, i32 3, !dbg !17791
  store i8 -1, i8* %disc_enable, align 1, !dbg !17792
  %76 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17793
  %start_motor = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %76, i32 0, i32 5, !dbg !17794
  store i8 -1, i8* %start_motor, align 1, !dbg !17795
  %77 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17796
  %use_cmd_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %77, i32 0, i32 4, !dbg !17797
  store i8 0, i8* %use_cmd_qng, align 2, !dbg !17798
  %78 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17799
  %max_total_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %78, i32 0, i32 6, !dbg !17800
  store i8 -16, i8* %max_total_qng, align 2, !dbg !17801
  %79 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17802
  %max_tag_qng = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %79, i32 0, i32 7, !dbg !17803
  store i8 32, i8* %max_tag_qng, align 1, !dbg !17804
  %80 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17805
  %cntl = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %80, i32 0, i32 14, !dbg !17806
  store i16 -16385, i16* %cntl, align 2, !dbg !17807
  %81 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17808
  %id_speed = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %81, i32 0, i32 11, !dbg !17808
  %82 = load i8, i8* %id_speed, align 1, !dbg !17808
  %conv146 = zext i8 %82 to i32, !dbg !17808
  %and147 = and i32 %conv146, 240, !dbg !17808
  %or148 = or i32 %and147, 7, !dbg !17808
  %conv149 = trunc i32 %or148 to i8, !dbg !17808
  %83 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17808
  %id_speed150 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %83, i32 0, i32 11, !dbg !17808
  store i8 %conv149, i8* %id_speed150, align 1, !dbg !17808
  %84 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17809
  %no_scam = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %84, i32 0, i32 10, !dbg !17810
  store i8 0, i8* %no_scam, align 2, !dbg !17811
  %85 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17812
  %adapter_info = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %85, i32 0, i32 13, !dbg !17813
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %adapter_info, i64 0, i64 0, !dbg !17812
  store i8 0, i8* %arrayidx, align 2, !dbg !17814
  %86 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17815
  %adapter_info151 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %86, i32 0, i32 13, !dbg !17816
  %arrayidx152 = getelementptr [6 x i8], [6 x i8]* %adapter_info151, i64 0, i64 1, !dbg !17815
  store i8 0, i8* %arrayidx152, align 1, !dbg !17817
  %87 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17818
  %adapter_info153 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %87, i32 0, i32 13, !dbg !17819
  %arrayidx154 = getelementptr [6 x i8], [6 x i8]* %adapter_info153, i64 0, i64 2, !dbg !17818
  store i8 0, i8* %arrayidx154, align 2, !dbg !17820
  %88 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17821
  %adapter_info155 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %88, i32 0, i32 13, !dbg !17822
  %arrayidx156 = getelementptr [6 x i8], [6 x i8]* %adapter_info155, i64 0, i64 3, !dbg !17821
  store i8 0, i8* %arrayidx156, align 1, !dbg !17823
  %89 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17824
  %adapter_info157 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %89, i32 0, i32 13, !dbg !17825
  %arrayidx158 = getelementptr [6 x i8], [6 x i8]* %adapter_info157, i64 0, i64 4, !dbg !17824
  store i8 0, i8* %arrayidx158, align 2, !dbg !17826
  %90 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17827
  %adapter_info159 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %90, i32 0, i32 13, !dbg !17828
  %arrayidx160 = getelementptr [6 x i8], [6 x i8]* %adapter_info159, i64 0, i64 5, !dbg !17827
  store i8 -69, i8* %arrayidx160, align 1, !dbg !17829
  br label %if.end167, !dbg !17830

if.else161:                                       ; preds = %if.then139
  %call162 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !17831
  %call163 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !17831
  store i32 1, i32* %write_eep, align 4, !dbg !17834
  %91 = load i16, i16* %warn_code, align 2, !dbg !17835
  %conv164 = zext i16 %91 to i32, !dbg !17835
  %or165 = or i32 %conv164, 2, !dbg !17835
  %conv166 = trunc i32 %or165 to i16, !dbg !17835
  store i16 %conv166, i16* %warn_code, align 2, !dbg !17835
  br label %if.end167

if.end167:                                        ; preds = %if.else161, %if.then145
  br label %if.end168, !dbg !17836

if.end168:                                        ; preds = %if.end167, %if.end125
  %92 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17837
  %init_sdtr169 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %92, i32 0, i32 2, !dbg !17838
  %93 = load i8, i8* %init_sdtr169, align 2, !dbg !17838
  %94 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17839
  %cfg170 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %94, i32 0, i32 26, !dbg !17840
  %95 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg170, align 8, !dbg !17840
  %sdtr_enable = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %95, i32 0, i32 3, !dbg !17841
  store i8 %93, i8* %sdtr_enable, align 1, !dbg !17842
  %96 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17843
  %disc_enable171 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %96, i32 0, i32 3, !dbg !17844
  %97 = load i8, i8* %disc_enable171, align 1, !dbg !17844
  %98 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17845
  %cfg172 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %98, i32 0, i32 26, !dbg !17846
  %99 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg172, align 8, !dbg !17846
  %disc_enable173 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %99, i32 0, i32 2, !dbg !17847
  store i8 %97, i8* %disc_enable173, align 2, !dbg !17848
  %100 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17849
  %use_cmd_qng174 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %100, i32 0, i32 4, !dbg !17850
  %101 = load i8, i8* %use_cmd_qng174, align 2, !dbg !17850
  %102 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17851
  %cfg175 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %102, i32 0, i32 26, !dbg !17852
  %103 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg175, align 8, !dbg !17852
  %cmd_qng_enabled = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %103, i32 0, i32 1, !dbg !17853
  store i8 %101, i8* %cmd_qng_enabled, align 1, !dbg !17854
  %104 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17855
  %id_speed176 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %104, i32 0, i32 11, !dbg !17855
  %105 = load i8, i8* %id_speed176, align 1, !dbg !17855
  %conv177 = zext i8 %105 to i32, !dbg !17855
  %and178 = and i32 %conv177, 240, !dbg !17855
  %shr = ashr i32 %and178, 4, !dbg !17855
  %conv179 = trunc i32 %shr to i8, !dbg !17855
  %106 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17856
  %cfg180 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %106, i32 0, i32 26, !dbg !17857
  %107 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg180, align 8, !dbg !17857
  %isa_dma_speed = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %107, i32 0, i32 5, !dbg !17858
  store i8 %conv179, i8* %isa_dma_speed, align 1, !dbg !17859
  %108 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17860
  %start_motor181 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %108, i32 0, i32 5, !dbg !17861
  %109 = load i8, i8* %start_motor181, align 1, !dbg !17861
  %110 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17862
  %start_motor182 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %110, i32 0, i32 10, !dbg !17863
  store i8 %109, i8* %start_motor182, align 1, !dbg !17864
  %111 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17865
  %cntl183 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %111, i32 0, i32 14, !dbg !17866
  %112 = load i16, i16* %cntl183, align 2, !dbg !17866
  %113 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17867
  %dvc_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %113, i32 0, i32 2, !dbg !17868
  store i16 %112, i16* %dvc_cntl, align 2, !dbg !17869
  %114 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17870
  %no_scam184 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %114, i32 0, i32 10, !dbg !17871
  %115 = load i8, i8* %no_scam184, align 2, !dbg !17871
  %116 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17872
  %no_scam185 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %116, i32 0, i32 32, !dbg !17873
  store i8 %115, i8* %no_scam185, align 8, !dbg !17874
  %117 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17875
  %adapter_info186 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %117, i32 0, i32 13, !dbg !17876
  %arrayidx187 = getelementptr [6 x i8], [6 x i8]* %adapter_info186, i64 0, i64 0, !dbg !17875
  %118 = load i8, i8* %arrayidx187, align 2, !dbg !17875
  %119 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17877
  %cfg188 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %119, i32 0, i32 26, !dbg !17878
  %120 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg188, align 8, !dbg !17878
  %adapter_info189 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %120, i32 0, i32 12, !dbg !17879
  %arrayidx190 = getelementptr [6 x i8], [6 x i8]* %adapter_info189, i64 0, i64 0, !dbg !17877
  store i8 %118, i8* %arrayidx190, align 2, !dbg !17880
  %121 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17881
  %adapter_info191 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %121, i32 0, i32 13, !dbg !17882
  %arrayidx192 = getelementptr [6 x i8], [6 x i8]* %adapter_info191, i64 0, i64 1, !dbg !17881
  %122 = load i8, i8* %arrayidx192, align 1, !dbg !17881
  %123 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17883
  %cfg193 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %123, i32 0, i32 26, !dbg !17884
  %124 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg193, align 8, !dbg !17884
  %adapter_info194 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %124, i32 0, i32 12, !dbg !17885
  %arrayidx195 = getelementptr [6 x i8], [6 x i8]* %adapter_info194, i64 0, i64 1, !dbg !17883
  store i8 %122, i8* %arrayidx195, align 1, !dbg !17886
  %125 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17887
  %adapter_info196 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %125, i32 0, i32 13, !dbg !17888
  %arrayidx197 = getelementptr [6 x i8], [6 x i8]* %adapter_info196, i64 0, i64 2, !dbg !17887
  %126 = load i8, i8* %arrayidx197, align 2, !dbg !17887
  %127 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17889
  %cfg198 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %127, i32 0, i32 26, !dbg !17890
  %128 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg198, align 8, !dbg !17890
  %adapter_info199 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %128, i32 0, i32 12, !dbg !17891
  %arrayidx200 = getelementptr [6 x i8], [6 x i8]* %adapter_info199, i64 0, i64 2, !dbg !17889
  store i8 %126, i8* %arrayidx200, align 2, !dbg !17892
  %129 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17893
  %adapter_info201 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %129, i32 0, i32 13, !dbg !17894
  %arrayidx202 = getelementptr [6 x i8], [6 x i8]* %adapter_info201, i64 0, i64 3, !dbg !17893
  %130 = load i8, i8* %arrayidx202, align 1, !dbg !17893
  %131 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17895
  %cfg203 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %131, i32 0, i32 26, !dbg !17896
  %132 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg203, align 8, !dbg !17896
  %adapter_info204 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %132, i32 0, i32 12, !dbg !17897
  %arrayidx205 = getelementptr [6 x i8], [6 x i8]* %adapter_info204, i64 0, i64 3, !dbg !17895
  store i8 %130, i8* %arrayidx205, align 1, !dbg !17898
  %133 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17899
  %adapter_info206 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %133, i32 0, i32 13, !dbg !17900
  %arrayidx207 = getelementptr [6 x i8], [6 x i8]* %adapter_info206, i64 0, i64 4, !dbg !17899
  %134 = load i8, i8* %arrayidx207, align 2, !dbg !17899
  %135 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17901
  %cfg208 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %135, i32 0, i32 26, !dbg !17902
  %136 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg208, align 8, !dbg !17902
  %adapter_info209 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %136, i32 0, i32 12, !dbg !17903
  %arrayidx210 = getelementptr [6 x i8], [6 x i8]* %adapter_info209, i64 0, i64 4, !dbg !17901
  store i8 %134, i8* %arrayidx210, align 2, !dbg !17904
  %137 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17905
  %adapter_info211 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %137, i32 0, i32 13, !dbg !17906
  %arrayidx212 = getelementptr [6 x i8], [6 x i8]* %adapter_info211, i64 0, i64 5, !dbg !17905
  %138 = load i8, i8* %arrayidx212, align 1, !dbg !17905
  %139 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17907
  %cfg213 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %139, i32 0, i32 26, !dbg !17908
  %140 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg213, align 8, !dbg !17908
  %adapter_info214 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %140, i32 0, i32 12, !dbg !17909
  %arrayidx215 = getelementptr [6 x i8], [6 x i8]* %adapter_info214, i64 0, i64 5, !dbg !17907
  store i8 %138, i8* %arrayidx215, align 1, !dbg !17910
  %141 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17911
  %call216 = call i32 @AscTestExternalLram(%struct.asc_dvc_var* %141) #11, !dbg !17913
  %tobool217 = icmp ne i32 %call216, 0, !dbg !17913
  br i1 %tobool217, label %if.else239, label %if.then218, !dbg !17914

if.then218:                                       ; preds = %if.end168
  %142 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17915
  %bus_type219 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %142, i32 0, i32 4, !dbg !17918
  %143 = load i16, i16* %bus_type219, align 2, !dbg !17918
  %conv220 = zext i16 %143 to i32, !dbg !17915
  %and221 = and i32 %conv220, 260, !dbg !17919
  %cmp222 = icmp eq i32 %and221, 260, !dbg !17920
  br i1 %cmp222, label %if.then224, label %if.else227, !dbg !17921

if.then224:                                       ; preds = %if.then218
  %144 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17922
  %max_total_qng225 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %144, i32 0, i32 6, !dbg !17924
  store i8 16, i8* %max_total_qng225, align 2, !dbg !17925
  %145 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17926
  %max_tag_qng226 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %145, i32 0, i32 7, !dbg !17927
  store i8 8, i8* %max_tag_qng226, align 1, !dbg !17928
  br label %if.end238, !dbg !17929

if.else227:                                       ; preds = %if.then218
  %146 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17930
  %cfg_msw228 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %146, i32 0, i32 1, !dbg !17932
  %147 = load i16, i16* %cfg_msw228, align 2, !dbg !17933
  %conv229 = zext i16 %147 to i32, !dbg !17933
  %or230 = or i32 %conv229, 2048, !dbg !17933
  %conv231 = trunc i32 %or230 to i16, !dbg !17933
  store i16 %conv231, i16* %cfg_msw228, align 2, !dbg !17933
  %148 = load i16, i16* %cfg_msw, align 2, !dbg !17934
  %conv232 = zext i16 %148 to i32, !dbg !17934
  %or233 = or i32 %conv232, 2048, !dbg !17934
  %conv234 = trunc i32 %or233 to i16, !dbg !17934
  store i16 %conv234, i16* %cfg_msw, align 2, !dbg !17934
  %149 = load i16, i16* %cfg_msw, align 2, !dbg !17935
  %150 = load i32, i32* %iop_base, align 4, !dbg !17935
  %add235 = add i32 %150, 4, !dbg !17935
  call void @outw(i16 zeroext %149, i32 %add235) #11, !dbg !17935
  %151 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17936
  %max_total_qng236 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %151, i32 0, i32 6, !dbg !17937
  store i8 20, i8* %max_total_qng236, align 2, !dbg !17938
  %152 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17939
  %max_tag_qng237 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %152, i32 0, i32 7, !dbg !17940
  store i8 16, i8* %max_tag_qng237, align 1, !dbg !17941
  br label %if.end238

if.end238:                                        ; preds = %if.else227, %if.then224
  br label %if.end240, !dbg !17942

if.else239:                                       ; preds = %if.end168
  br label %if.end240

if.end240:                                        ; preds = %if.else239, %if.end238
  %153 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17943
  %max_total_qng241 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %153, i32 0, i32 6, !dbg !17945
  %154 = load i8, i8* %max_total_qng241, align 2, !dbg !17945
  %conv242 = zext i8 %154 to i32, !dbg !17943
  %cmp243 = icmp slt i32 %conv242, 9, !dbg !17946
  br i1 %cmp243, label %if.then245, label %if.end247, !dbg !17947

if.then245:                                       ; preds = %if.end240
  %155 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17948
  %max_total_qng246 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %155, i32 0, i32 6, !dbg !17950
  store i8 9, i8* %max_total_qng246, align 2, !dbg !17951
  br label %if.end247, !dbg !17952

if.end247:                                        ; preds = %if.then245, %if.end240
  %156 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17953
  %max_total_qng248 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %156, i32 0, i32 6, !dbg !17955
  %157 = load i8, i8* %max_total_qng248, align 2, !dbg !17955
  %conv249 = zext i8 %157 to i32, !dbg !17953
  %cmp250 = icmp sgt i32 %conv249, 240, !dbg !17956
  br i1 %cmp250, label %if.then252, label %if.end254, !dbg !17957

if.then252:                                       ; preds = %if.end247
  %158 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17958
  %max_total_qng253 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %158, i32 0, i32 6, !dbg !17960
  store i8 -16, i8* %max_total_qng253, align 2, !dbg !17961
  br label %if.end254, !dbg !17962

if.end254:                                        ; preds = %if.then252, %if.end247
  %159 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17963
  %max_tag_qng255 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %159, i32 0, i32 7, !dbg !17965
  %160 = load i8, i8* %max_tag_qng255, align 1, !dbg !17965
  %conv256 = zext i8 %160 to i32, !dbg !17963
  %161 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17966
  %max_total_qng257 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %161, i32 0, i32 6, !dbg !17967
  %162 = load i8, i8* %max_total_qng257, align 2, !dbg !17967
  %conv258 = zext i8 %162 to i32, !dbg !17966
  %cmp259 = icmp sgt i32 %conv256, %conv258, !dbg !17968
  br i1 %cmp259, label %if.then261, label %if.end264, !dbg !17969

if.then261:                                       ; preds = %if.end254
  %163 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17970
  %max_total_qng262 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %163, i32 0, i32 6, !dbg !17972
  %164 = load i8, i8* %max_total_qng262, align 2, !dbg !17972
  %165 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17973
  %max_tag_qng263 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %165, i32 0, i32 7, !dbg !17974
  store i8 %164, i8* %max_tag_qng263, align 1, !dbg !17975
  br label %if.end264, !dbg !17976

if.end264:                                        ; preds = %if.then261, %if.end254
  %166 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17977
  %max_tag_qng265 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %166, i32 0, i32 7, !dbg !17979
  %167 = load i8, i8* %max_tag_qng265, align 1, !dbg !17979
  %conv266 = zext i8 %167 to i32, !dbg !17977
  %cmp267 = icmp slt i32 %conv266, 4, !dbg !17980
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !17981

if.then269:                                       ; preds = %if.end264
  %168 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17982
  %max_tag_qng270 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %168, i32 0, i32 7, !dbg !17984
  store i8 4, i8* %max_tag_qng270, align 1, !dbg !17985
  br label %if.end271, !dbg !17986

if.end271:                                        ; preds = %if.then269, %if.end264
  %169 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17987
  %max_total_qng272 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %169, i32 0, i32 6, !dbg !17988
  %170 = load i8, i8* %max_total_qng272, align 2, !dbg !17988
  %171 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !17989
  %max_total_qng273 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %171, i32 0, i32 16, !dbg !17990
  store i8 %170, i8* %max_total_qng273, align 1, !dbg !17991
  %172 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17992
  %use_cmd_qng274 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %172, i32 0, i32 4, !dbg !17994
  %173 = load i8, i8* %use_cmd_qng274, align 2, !dbg !17994
  %conv275 = zext i8 %173 to i32, !dbg !17992
  %174 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17995
  %disc_enable276 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %174, i32 0, i32 3, !dbg !17996
  %175 = load i8, i8* %disc_enable276, align 1, !dbg !17996
  %conv277 = zext i8 %175 to i32, !dbg !17995
  %and278 = and i32 %conv275, %conv277, !dbg !17997
  %176 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !17998
  %use_cmd_qng279 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %176, i32 0, i32 4, !dbg !17999
  %177 = load i8, i8* %use_cmd_qng279, align 2, !dbg !17999
  %conv280 = zext i8 %177 to i32, !dbg !17998
  %cmp281 = icmp ne i32 %and278, %conv280, !dbg !18000
  br i1 %cmp281, label %if.then283, label %if.end289, !dbg !18001

if.then283:                                       ; preds = %if.end271
  %178 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18002
  %use_cmd_qng284 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %178, i32 0, i32 4, !dbg !18004
  %179 = load i8, i8* %use_cmd_qng284, align 2, !dbg !18004
  %180 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18005
  %disc_enable285 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %180, i32 0, i32 3, !dbg !18006
  store i8 %179, i8* %disc_enable285, align 1, !dbg !18007
  %181 = load i16, i16* %warn_code, align 2, !dbg !18008
  %conv286 = zext i16 %181 to i32, !dbg !18008
  %or287 = or i32 %conv286, 16, !dbg !18008
  %conv288 = trunc i32 %or287 to i16, !dbg !18008
  store i16 %conv288, i16* %warn_code, align 2, !dbg !18008
  br label %if.end289, !dbg !18009

if.end289:                                        ; preds = %if.then283, %if.end271
  %182 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18010
  %id_speed290 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %182, i32 0, i32 11, !dbg !18010
  %183 = load i8, i8* %id_speed290, align 1, !dbg !18010
  %conv291 = zext i8 %183 to i32, !dbg !18010
  %and292 = and i32 %conv291, 240, !dbg !18010
  %184 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18010
  %id_speed293 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %184, i32 0, i32 11, !dbg !18010
  %185 = load i8, i8* %id_speed293, align 1, !dbg !18010
  %conv294 = zext i8 %185 to i32, !dbg !18010
  %and295 = and i32 %conv294, 15, !dbg !18010
  %and296 = and i32 %and295, 7, !dbg !18010
  %and297 = and i32 %and296, 7, !dbg !18010
  %or298 = or i32 %and292, %and297, !dbg !18010
  %conv299 = trunc i32 %or298 to i8, !dbg !18010
  %186 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18010
  %id_speed300 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %186, i32 0, i32 11, !dbg !18010
  store i8 %conv299, i8* %id_speed300, align 1, !dbg !18010
  %187 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18011
  %id_speed301 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %187, i32 0, i32 11, !dbg !18011
  %188 = load i8, i8* %id_speed301, align 1, !dbg !18011
  %conv302 = zext i8 %188 to i32, !dbg !18011
  %and303 = and i32 %conv302, 15, !dbg !18011
  %conv304 = trunc i32 %and303 to i8, !dbg !18011
  %189 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18012
  %cfg305 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %189, i32 0, i32 26, !dbg !18013
  %190 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg305, align 8, !dbg !18013
  %chip_scsi_id = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %190, i32 0, i32 4, !dbg !18014
  store i8 %conv304, i8* %chip_scsi_id, align 2, !dbg !18015
  %191 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18016
  %bus_type306 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %191, i32 0, i32 4, !dbg !18018
  %192 = load i16, i16* %bus_type306, align 2, !dbg !18018
  %conv307 = zext i16 %192 to i32, !dbg !18016
  %and308 = and i32 %conv307, 260, !dbg !18019
  %cmp309 = icmp eq i32 %and308, 260, !dbg !18020
  br i1 %cmp309, label %land.lhs.true311, label %if.end317, !dbg !18021

land.lhs.true311:                                 ; preds = %if.end289
  %193 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18022
  %dvc_cntl312 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %193, i32 0, i32 2, !dbg !18023
  %194 = load i16, i16* %dvc_cntl312, align 2, !dbg !18023
  %conv313 = zext i16 %194 to i32, !dbg !18022
  %and314 = and i32 %conv313, 16384, !dbg !18024
  %tobool315 = icmp ne i32 %and314, 0, !dbg !18024
  br i1 %tobool315, label %if.end317, label %if.then316, !dbg !18025

if.then316:                                       ; preds = %land.lhs.true311
  %195 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18026
  %min_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %195, i32 0, i32 34, !dbg !18028
  store i8 2, i8* %min_sdtr_index, align 2, !dbg !18029
  br label %if.end317, !dbg !18030

if.end317:                                        ; preds = %if.then316, %land.lhs.true311, %if.end289
  store i32 0, i32* %i, align 4, !dbg !18031
  br label %for.cond, !dbg !18033

for.cond:                                         ; preds = %for.inc, %if.end317
  %196 = load i32, i32* %i, align 4, !dbg !18034
  %cmp318 = icmp sle i32 %196, 7, !dbg !18036
  br i1 %cmp318, label %for.body, label %for.end, !dbg !18037

for.body:                                         ; preds = %for.cond
  %197 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18038
  %dos_int13_table = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %197, i32 0, i32 12, !dbg !18040
  %198 = load i32, i32* %i, align 4, !dbg !18041
  %idxprom = sext i32 %198 to i64, !dbg !18038
  %arrayidx320 = getelementptr [8 x i8], [8 x i8]* %dos_int13_table, i64 0, i64 %idxprom, !dbg !18038
  %199 = load i8, i8* %arrayidx320, align 1, !dbg !18038
  %200 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18042
  %dos_int13_table321 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %200, i32 0, i32 30, !dbg !18043
  %201 = load i32, i32* %i, align 4, !dbg !18044
  %idxprom322 = sext i32 %201 to i64, !dbg !18042
  %arrayidx323 = getelementptr [8 x i8], [8 x i8]* %dos_int13_table321, i64 0, i64 %idxprom322, !dbg !18042
  store i8 %199, i8* %arrayidx323, align 1, !dbg !18045
  %202 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18046
  %max_tag_qng324 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %202, i32 0, i32 7, !dbg !18047
  %203 = load i8, i8* %max_tag_qng324, align 1, !dbg !18047
  %204 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18048
  %cfg325 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %204, i32 0, i32 26, !dbg !18049
  %205 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg325, align 8, !dbg !18049
  %max_tag_qng326 = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %205, i32 0, i32 10, !dbg !18050
  %206 = load i32, i32* %i, align 4, !dbg !18051
  %idxprom327 = sext i32 %206 to i64, !dbg !18048
  %arrayidx328 = getelementptr [8 x i8], [8 x i8]* %max_tag_qng326, i64 0, i64 %idxprom327, !dbg !18048
  store i8 %203, i8* %arrayidx328, align 1, !dbg !18052
  %207 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18053
  %min_sdtr_index329 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %207, i32 0, i32 34, !dbg !18054
  %208 = load i8, i8* %min_sdtr_index329, align 2, !dbg !18054
  %conv330 = zext i8 %208 to i32, !dbg !18053
  %shl = shl i32 %conv330, 4, !dbg !18055
  %or331 = or i32 15, %shl, !dbg !18056
  %conv332 = trunc i32 %or331 to i8, !dbg !18057
  %209 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18058
  %cfg333 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %209, i32 0, i32 26, !dbg !18059
  %210 = load %struct.asc_dvc_cfg*, %struct.asc_dvc_cfg** %cfg333, align 8, !dbg !18059
  %sdtr_period_offset = getelementptr inbounds %struct.asc_dvc_cfg, %struct.asc_dvc_cfg* %210, i32 0, i32 11, !dbg !18060
  %211 = load i32, i32* %i, align 4, !dbg !18061
  %idxprom334 = sext i32 %211 to i64, !dbg !18058
  %arrayidx335 = getelementptr [8 x i8], [8 x i8]* %sdtr_period_offset, i64 0, i64 %idxprom334, !dbg !18058
  store i8 %conv332, i8* %arrayidx335, align 1, !dbg !18062
  br label %for.inc, !dbg !18063

for.inc:                                          ; preds = %for.body
  %212 = load i32, i32* %i, align 4, !dbg !18064
  %inc = add i32 %212, 1, !dbg !18064
  store i32 %inc, i32* %i, align 4, !dbg !18064
  br label %for.cond, !dbg !18065, !llvm.loop !18066

for.end:                                          ; preds = %for.cond
  %213 = load i32, i32* %iop_base, align 4, !dbg !18068
  %add336 = add i32 %213, 4, !dbg !18068
  %call337 = call zeroext i16 @inw(i32 %add336) #11, !dbg !18068
  %214 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18069
  %cfg_msw338 = getelementptr inbounds %struct.asceep_config, %struct.asceep_config* %214, i32 0, i32 1, !dbg !18070
  store i16 %call337, i16* %cfg_msw338, align 2, !dbg !18071
  %215 = load i32, i32* %write_eep, align 4, !dbg !18072
  %tobool339 = icmp ne i32 %215, 0, !dbg !18072
  br i1 %tobool339, label %if.then340, label %if.end352, !dbg !18074

if.then340:                                       ; preds = %for.end
  %216 = load i32, i32* %iop_base, align 4, !dbg !18075
  %217 = load %struct.asceep_config*, %struct.asceep_config** %eep_config, align 8, !dbg !18078
  %218 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18079
  %bus_type341 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %218, i32 0, i32 4, !dbg !18080
  %219 = load i16, i16* %bus_type341, align 2, !dbg !18080
  %call342 = call i32 @AscSetEEPConfig(i32 %216, %struct.asceep_config* %217, i16 zeroext %219) #11, !dbg !18081
  store i32 %call342, i32* %i, align 4, !dbg !18082
  %cmp343 = icmp ne i32 %call342, 0, !dbg !18083
  br i1 %cmp343, label %if.then345, label %if.else348, !dbg !18084

if.then345:                                       ; preds = %if.then340
  %call346 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !18085
  %220 = load i32, i32* %i, align 4, !dbg !18085
  %call347 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.143, i64 0, i64 0), i32 %220) #12, !dbg !18085
  br label %if.end351, !dbg !18088

if.else348:                                       ; preds = %if.then340
  %call349 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !18089
  %call350 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.144, i64 0, i64 0)) #12, !dbg !18089
  br label %if.end351

if.end351:                                        ; preds = %if.else348, %if.then345
  br label %if.end352, !dbg !18092

if.end352:                                        ; preds = %if.end351, %for.end
  %221 = load i16, i16* %warn_code, align 2, !dbg !18093
  %conv353 = zext i16 %221 to i32, !dbg !18094
  store i32 %conv353, i32* %retval, align 4, !dbg !18095
  br label %return, !dbg !18095

return:                                           ; preds = %if.end352, %if.then56, %if.then45
  %222 = load i32, i32* %retval, align 4, !dbg !18096
  ret i32 %222, !dbg !18096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscGetMaxDmaCount(i16 zeroext %bus_type) #2 !dbg !18097 {
entry:
  %retval = alloca i32, align 4
  %bus_type.addr = alloca i16, align 2
  store i16 %bus_type, i16* %bus_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_type.addr, metadata !18100, metadata !DIExpression()), !dbg !18101
  %0 = load i16, i16* %bus_type.addr, align 2, !dbg !18102
  %conv = zext i16 %0 to i32, !dbg !18102
  %and = and i32 %conv, 1, !dbg !18104
  %tobool = icmp ne i32 %and, 0, !dbg !18104
  br i1 %tobool, label %if.then, label %if.else, !dbg !18105

if.then:                                          ; preds = %entry
  store i32 16777215, i32* %retval, align 4, !dbg !18106
  br label %return, !dbg !18106

if.else:                                          ; preds = %entry
  %1 = load i16, i16* %bus_type.addr, align 2, !dbg !18107
  %conv1 = zext i16 %1 to i32, !dbg !18107
  %and2 = and i32 %conv1, 66, !dbg !18109
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18109
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !18110

if.then4:                                         ; preds = %if.else
  store i32 134217727, i32* %retval, align 4, !dbg !18111
  br label %return, !dbg !18111

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !18112
  br label %return, !dbg !18112

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !18113
  ret i32 %2, !dbg !18113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscGetChipVersion(i32 %iop_base, i16 zeroext %bus_type) #2 !dbg !18114 {
entry:
  %retval = alloca i8, align 1
  %iop_base.addr = alloca i32, align 4
  %bus_type.addr = alloca i16, align 2
  %eisa_iop = alloca i32, align 4
  %revision = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18117, metadata !DIExpression()), !dbg !18118
  store i16 %bus_type, i16* %bus_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_type.addr, metadata !18119, metadata !DIExpression()), !dbg !18120
  %0 = load i16, i16* %bus_type.addr, align 2, !dbg !18121
  %conv = zext i16 %0 to i32, !dbg !18121
  %and = and i32 %conv, 2, !dbg !18123
  %tobool = icmp ne i32 %and, 0, !dbg !18123
  br i1 %tobool, label %if.then, label %if.end, !dbg !18124

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %eisa_iop, metadata !18125, metadata !DIExpression()), !dbg !18127
  call void @llvm.dbg.declare(metadata i8* %revision, metadata !18128, metadata !DIExpression()), !dbg !18129
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !18130
  %and1 = and i32 %1, 61440, !dbg !18130
  %or = or i32 %and1, 3203, !dbg !18131
  store i32 %or, i32* %eisa_iop, align 4, !dbg !18132
  %2 = load i32, i32* %eisa_iop, align 4, !dbg !18133
  %call = call zeroext i8 @inb(i32 %2) #11, !dbg !18133
  store i8 %call, i8* %revision, align 1, !dbg !18134
  %3 = load i8, i8* %revision, align 1, !dbg !18135
  %conv2 = zext i8 %3 to i32, !dbg !18135
  %add = add i32 64, %conv2, !dbg !18136
  %conv3 = trunc i32 %add to i8, !dbg !18137
  store i8 %conv3, i8* %retval, align 1, !dbg !18138
  br label %return, !dbg !18138

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !18139
  %add4 = add i32 %4, 3, !dbg !18139
  %call5 = call zeroext i8 @inb(i32 %add4) #11, !dbg !18139
  store i8 %call5, i8* %retval, align 1, !dbg !18140
  br label %return, !dbg !18140

return:                                           ; preds = %if.end, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !18141
  ret i8 %5, !dbg !18141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscStopQueueExe(i32 %iop_base) #2 !dbg !18142 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %__ms = alloca i64, align 8
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18143, metadata !DIExpression()), !dbg !18144
  call void @llvm.dbg.declare(metadata i32* %count, metadata !18145, metadata !DIExpression()), !dbg !18146
  store i32 0, i32* %count, align 4, !dbg !18146
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !18147
  %call = call zeroext i8 @AscReadLramByte(i32 %0, i16 zeroext 54) #11, !dbg !18149
  %conv = zext i8 %call to i32, !dbg !18149
  %cmp = icmp eq i32 %conv, 0, !dbg !18150
  br i1 %cmp, label %if.then, label %if.end8, !dbg !18151

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !18152
  call void @AscWriteLramByte(i32 %1, i16 zeroext 54, i8 zeroext 1) #11, !dbg !18154
  br label %do.body, !dbg !18155

do.body:                                          ; preds = %do.cond, %if.then
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !18156
  %call2 = call zeroext i8 @AscReadLramByte(i32 %2, i16 zeroext 54) #11, !dbg !18159
  %conv3 = zext i8 %call2 to i32, !dbg !18159
  %and = and i32 %conv3, 3, !dbg !18160
  %tobool = icmp ne i32 %and, 0, !dbg !18160
  br i1 %tobool, label %if.then4, label %if.end, !dbg !18161

if.then4:                                         ; preds = %do.body
  store i32 1, i32* %retval, align 4, !dbg !18162
  br label %return, !dbg !18162

if.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !18164, metadata !DIExpression()), !dbg !18166
  store i64 100, i64* %__ms, align 8, !dbg !18166
  br label %while.cond, !dbg !18166

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i64, i64* %__ms, align 8, !dbg !18166
  %dec = add i64 %3, -1, !dbg !18166
  store i64 %dec, i64* %__ms, align 8, !dbg !18166
  %tobool5 = icmp ne i64 %3, 0, !dbg !18166
  br i1 %tobool5, label %while.body, label %while.end, !dbg !18166

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !18167
  br label %while.cond, !dbg !18166, !llvm.loop !18172

while.end:                                        ; preds = %while.cond
  br label %do.cond, !dbg !18173

do.cond:                                          ; preds = %while.end
  %4 = load i32, i32* %count, align 4, !dbg !18174
  %inc = add i32 %4, 1, !dbg !18174
  store i32 %inc, i32* %count, align 4, !dbg !18174
  %cmp6 = icmp slt i32 %4, 20, !dbg !18175
  br i1 %cmp6, label %do.body, label %do.end, !dbg !18173, !llvm.loop !18176

do.end:                                           ; preds = %do.cond
  br label %if.end8, !dbg !18178

if.end8:                                          ; preds = %do.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !18179
  br label %return, !dbg !18179

return:                                           ; preds = %if.end8, %if.then4
  %5 = load i32, i32* %retval, align 4, !dbg !18180
  ret i32 %5, !dbg !18180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscGetChipScsiCtrl(i32 %iop_base) #2 !dbg !18181 {
entry:
  %iop_base.addr = alloca i32, align 4
  %sc = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  call void @llvm.dbg.declare(metadata i8* %sc, metadata !18186, metadata !DIExpression()), !dbg !18187
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !18188
  call void @AscSetBank(i32 %0, i8 zeroext 1) #11, !dbg !18189
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !18190
  %add = add i32 %1, 9, !dbg !18190
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !18190
  store i8 %call, i8* %sc, align 1, !dbg !18191
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !18192
  call void @AscSetBank(i32 %2, i8 zeroext 0) #11, !dbg !18193
  %3 = load i8, i8* %sc, align 1, !dbg !18194
  ret i8 %3, !dbg !18195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AscGetEEPConfig(i32 %iop_base, %struct.asceep_config* %cfg_buf, i16 zeroext %bus_type) #2 !dbg !18196 {
entry:
  %iop_base.addr = alloca i32, align 4
  %cfg_buf.addr = alloca %struct.asceep_config*, align 8
  %bus_type.addr = alloca i16, align 2
  %wval = alloca i16, align 2
  %sum = alloca i16, align 2
  %wbuf = alloca i16*, align 8
  %cfg_beg = alloca i32, align 4
  %cfg_end = alloca i32, align 4
  %uchar_end_in_config = alloca i32, align 4
  %s_addr = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18199, metadata !DIExpression()), !dbg !18200
  store %struct.asceep_config* %cfg_buf, %struct.asceep_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asceep_config** %cfg_buf.addr, metadata !18201, metadata !DIExpression()), !dbg !18202
  store i16 %bus_type, i16* %bus_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_type.addr, metadata !18203, metadata !DIExpression()), !dbg !18204
  call void @llvm.dbg.declare(metadata i16* %wval, metadata !18205, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.declare(metadata i16* %sum, metadata !18207, metadata !DIExpression()), !dbg !18208
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !18209, metadata !DIExpression()), !dbg !18210
  call void @llvm.dbg.declare(metadata i32* %cfg_beg, metadata !18211, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.declare(metadata i32* %cfg_end, metadata !18213, metadata !DIExpression()), !dbg !18214
  call void @llvm.dbg.declare(metadata i32* %uchar_end_in_config, metadata !18215, metadata !DIExpression()), !dbg !18216
  store i32 43, i32* %uchar_end_in_config, align 4, !dbg !18216
  call void @llvm.dbg.declare(metadata i32* %s_addr, metadata !18217, metadata !DIExpression()), !dbg !18218
  %0 = load %struct.asceep_config*, %struct.asceep_config** %cfg_buf.addr, align 8, !dbg !18219
  %1 = bitcast %struct.asceep_config* %0 to i16*, !dbg !18220
  store i16* %1, i16** %wbuf, align 8, !dbg !18221
  store i16 0, i16* %sum, align 2, !dbg !18222
  store i32 0, i32* %s_addr, align 4, !dbg !18223
  br label %for.cond, !dbg !18225

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %s_addr, align 4, !dbg !18226
  %cmp = icmp slt i32 %2, 2, !dbg !18228
  br i1 %cmp, label %for.body, label %for.end, !dbg !18229

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !18230
  %4 = load i32, i32* %s_addr, align 4, !dbg !18232
  %conv = trunc i32 %4 to i8, !dbg !18233
  %call = call zeroext i16 @AscReadEEPWord(i32 %3, i8 zeroext %conv) #11, !dbg !18234
  %5 = load i16*, i16** %wbuf, align 8, !dbg !18235
  store i16 %call, i16* %5, align 2, !dbg !18236
  %6 = load i16*, i16** %wbuf, align 8, !dbg !18237
  %7 = load i16, i16* %6, align 2, !dbg !18238
  %conv1 = zext i16 %7 to i32, !dbg !18238
  %8 = load i16, i16* %sum, align 2, !dbg !18239
  %conv2 = zext i16 %8 to i32, !dbg !18239
  %add = add i32 %conv2, %conv1, !dbg !18239
  %conv3 = trunc i32 %add to i16, !dbg !18239
  store i16 %conv3, i16* %sum, align 2, !dbg !18239
  br label %for.inc, !dbg !18240

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %s_addr, align 4, !dbg !18241
  %inc = add i32 %9, 1, !dbg !18241
  store i32 %inc, i32* %s_addr, align 4, !dbg !18241
  %10 = load i16*, i16** %wbuf, align 8, !dbg !18242
  %incdec.ptr = getelementptr i16, i16* %10, i32 1, !dbg !18242
  store i16* %incdec.ptr, i16** %wbuf, align 8, !dbg !18242
  br label %for.cond, !dbg !18243, !llvm.loop !18244

for.end:                                          ; preds = %for.cond
  %11 = load i16, i16* %bus_type.addr, align 2, !dbg !18246
  %conv4 = zext i16 %11 to i32, !dbg !18246
  %and = and i32 %conv4, 64, !dbg !18248
  %tobool = icmp ne i32 %and, 0, !dbg !18248
  br i1 %tobool, label %if.then, label %if.else, !dbg !18249

if.then:                                          ; preds = %for.end
  store i32 2, i32* %cfg_beg, align 4, !dbg !18250
  store i32 15, i32* %cfg_end, align 4, !dbg !18252
  br label %if.end, !dbg !18253

if.else:                                          ; preds = %for.end
  store i32 32, i32* %cfg_beg, align 4, !dbg !18254
  store i32 45, i32* %cfg_end, align 4, !dbg !18256
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %cfg_beg, align 4, !dbg !18257
  store i32 %12, i32* %s_addr, align 4, !dbg !18259
  br label %for.cond5, !dbg !18260

for.cond5:                                        ; preds = %for.inc20, %if.end
  %13 = load i32, i32* %s_addr, align 4, !dbg !18261
  %14 = load i32, i32* %cfg_end, align 4, !dbg !18263
  %sub = sub i32 %14, 1, !dbg !18264
  %cmp6 = icmp sle i32 %13, %sub, !dbg !18265
  br i1 %cmp6, label %for.body8, label %for.end23, !dbg !18266

for.body8:                                        ; preds = %for.cond5
  %15 = load i32, i32* %iop_base.addr, align 4, !dbg !18267
  %16 = load i32, i32* %s_addr, align 4, !dbg !18269
  %conv9 = trunc i32 %16 to i8, !dbg !18270
  %call10 = call zeroext i16 @AscReadEEPWord(i32 %15, i8 zeroext %conv9) #11, !dbg !18271
  store i16 %call10, i16* %wval, align 2, !dbg !18272
  %17 = load i32, i32* %s_addr, align 4, !dbg !18273
  %18 = load i32, i32* %uchar_end_in_config, align 4, !dbg !18275
  %cmp11 = icmp sle i32 %17, %18, !dbg !18276
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !18277

if.then13:                                        ; preds = %for.body8
  %19 = load i16, i16* %wval, align 2, !dbg !18278
  %20 = load i16*, i16** %wbuf, align 8, !dbg !18280
  store i16 %19, i16* %20, align 2, !dbg !18281
  br label %if.end15, !dbg !18282

if.else14:                                        ; preds = %for.body8
  %21 = load i16, i16* %wval, align 2, !dbg !18283
  %22 = load i16*, i16** %wbuf, align 8, !dbg !18285
  store i16 %21, i16* %22, align 2, !dbg !18286
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then13
  %23 = load i16, i16* %wval, align 2, !dbg !18287
  %conv16 = zext i16 %23 to i32, !dbg !18287
  %24 = load i16, i16* %sum, align 2, !dbg !18288
  %conv17 = zext i16 %24 to i32, !dbg !18288
  %add18 = add i32 %conv17, %conv16, !dbg !18288
  %conv19 = trunc i32 %add18 to i16, !dbg !18288
  store i16 %conv19, i16* %sum, align 2, !dbg !18288
  br label %for.inc20, !dbg !18289

for.inc20:                                        ; preds = %if.end15
  %25 = load i32, i32* %s_addr, align 4, !dbg !18290
  %inc21 = add i32 %25, 1, !dbg !18290
  store i32 %inc21, i32* %s_addr, align 4, !dbg !18290
  %26 = load i16*, i16** %wbuf, align 8, !dbg !18291
  %incdec.ptr22 = getelementptr i16, i16* %26, i32 1, !dbg !18291
  store i16* %incdec.ptr22, i16** %wbuf, align 8, !dbg !18291
  br label %for.cond5, !dbg !18292, !llvm.loop !18293

for.end23:                                        ; preds = %for.cond5
  %27 = load i32, i32* %iop_base.addr, align 4, !dbg !18295
  %28 = load i32, i32* %s_addr, align 4, !dbg !18296
  %conv24 = trunc i32 %28 to i8, !dbg !18297
  %call25 = call zeroext i16 @AscReadEEPWord(i32 %27, i8 zeroext %conv24) #11, !dbg !18298
  %29 = load i16*, i16** %wbuf, align 8, !dbg !18299
  store i16 %call25, i16* %29, align 2, !dbg !18300
  %30 = load i16, i16* %sum, align 2, !dbg !18301
  ret i16 %30, !dbg !18302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscTestExternalLram(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !18303 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %iop_base = alloca i32, align 4
  %q_addr = alloca i16, align 2
  %saved_word = alloca i16, align 2
  %sta = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !18304, metadata !DIExpression()), !dbg !18305
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !18306, metadata !DIExpression()), !dbg !18307
  call void @llvm.dbg.declare(metadata i16* %q_addr, metadata !18308, metadata !DIExpression()), !dbg !18309
  call void @llvm.dbg.declare(metadata i16* %saved_word, metadata !18310, metadata !DIExpression()), !dbg !18311
  call void @llvm.dbg.declare(metadata i32* %sta, metadata !18312, metadata !DIExpression()), !dbg !18313
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !18314
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !18315
  %1 = load i32, i32* %iop_base1, align 8, !dbg !18315
  store i32 %1, i32* %iop_base, align 4, !dbg !18316
  store i32 0, i32* %sta, align 4, !dbg !18317
  store i16 31808, i16* %q_addr, align 2, !dbg !18318
  %2 = load i32, i32* %iop_base, align 4, !dbg !18319
  %3 = load i16, i16* %q_addr, align 2, !dbg !18320
  %call = call zeroext i16 @AscReadLramWord(i32 %2, i16 zeroext %3) #11, !dbg !18321
  store i16 %call, i16* %saved_word, align 2, !dbg !18322
  %4 = load i16, i16* %q_addr, align 2, !dbg !18323
  %5 = load i32, i32* %iop_base, align 4, !dbg !18323
  %add = add i32 %5, 10, !dbg !18323
  call void @outw(i16 zeroext %4, i32 %add) #11, !dbg !18323
  %6 = load i32, i32* %iop_base, align 4, !dbg !18324
  %add2 = add i32 %6, 8, !dbg !18324
  call void @outw(i16 zeroext 21930, i32 %add2) #11, !dbg !18324
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !18325, metadata !DIExpression()), !dbg !18327
  store i64 10, i64* %__ms, align 8, !dbg !18327
  br label %while.cond, !dbg !18327

while.cond:                                       ; preds = %while.body, %entry
  %7 = load i64, i64* %__ms, align 8, !dbg !18327
  %dec = add i64 %7, -1, !dbg !18327
  store i64 %dec, i64* %__ms, align 8, !dbg !18327
  %tobool = icmp ne i64 %7, 0, !dbg !18327
  br i1 %tobool, label %while.body, label %while.end, !dbg !18327

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !18328
  br label %while.cond, !dbg !18327, !llvm.loop !18333

while.end:                                        ; preds = %while.cond
  %8 = load i16, i16* %q_addr, align 2, !dbg !18334
  %9 = load i32, i32* %iop_base, align 4, !dbg !18334
  %add3 = add i32 %9, 10, !dbg !18334
  call void @outw(i16 zeroext %8, i32 %add3) #11, !dbg !18334
  %10 = load i32, i32* %iop_base, align 4, !dbg !18335
  %add4 = add i32 %10, 8, !dbg !18335
  %call5 = call zeroext i16 @inw(i32 %add4) #11, !dbg !18335
  %conv = zext i16 %call5 to i32, !dbg !18335
  %cmp = icmp eq i32 %conv, 21930, !dbg !18337
  br i1 %cmp, label %if.then, label %if.end, !dbg !18338

if.then:                                          ; preds = %while.end
  store i32 1, i32* %sta, align 4, !dbg !18339
  %11 = load i32, i32* %iop_base, align 4, !dbg !18341
  %12 = load i16, i16* %q_addr, align 2, !dbg !18342
  %13 = load i16, i16* %saved_word, align 2, !dbg !18343
  call void @AscWriteLramWord(i32 %11, i16 zeroext %12, i16 zeroext %13) #11, !dbg !18344
  br label %if.end, !dbg !18345

if.end:                                           ; preds = %if.then, %while.end
  %14 = load i32, i32* %sta, align 4, !dbg !18346
  ret i32 %14, !dbg !18347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscSetEEPConfig(i32 %iop_base, %struct.asceep_config* %cfg_buf, i16 zeroext %bus_type) #2 !dbg !18348 {
entry:
  %iop_base.addr = alloca i32, align 4
  %cfg_buf.addr = alloca %struct.asceep_config*, align 8
  %bus_type.addr = alloca i16, align 2
  %retry = alloca i32, align 4
  %n_error = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18351, metadata !DIExpression()), !dbg !18352
  store %struct.asceep_config* %cfg_buf, %struct.asceep_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asceep_config** %cfg_buf.addr, metadata !18353, metadata !DIExpression()), !dbg !18354
  store i16 %bus_type, i16* %bus_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_type.addr, metadata !18355, metadata !DIExpression()), !dbg !18356
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !18357, metadata !DIExpression()), !dbg !18358
  call void @llvm.dbg.declare(metadata i32* %n_error, metadata !18359, metadata !DIExpression()), !dbg !18360
  store i32 0, i32* %retry, align 4, !dbg !18361
  br label %while.body, !dbg !18362

while.body:                                       ; preds = %entry, %if.end3
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !18363
  %1 = load %struct.asceep_config*, %struct.asceep_config** %cfg_buf.addr, align 8, !dbg !18366
  %2 = load i16, i16* %bus_type.addr, align 2, !dbg !18367
  %call = call i32 @AscSetEEPConfigOnce(i32 %0, %struct.asceep_config* %1, i16 zeroext %2) #11, !dbg !18368
  store i32 %call, i32* %n_error, align 4, !dbg !18369
  %cmp = icmp eq i32 %call, 0, !dbg !18370
  br i1 %cmp, label %if.then, label %if.end, !dbg !18371

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !18372

if.end:                                           ; preds = %while.body
  %3 = load i32, i32* %retry, align 4, !dbg !18374
  %inc = add i32 %3, 1, !dbg !18374
  store i32 %inc, i32* %retry, align 4, !dbg !18374
  %cmp1 = icmp sgt i32 %inc, 20, !dbg !18376
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !18377

if.then2:                                         ; preds = %if.end
  br label %while.end, !dbg !18378

if.end3:                                          ; preds = %if.end
  br label %while.body, !dbg !18362, !llvm.loop !18380

while.end:                                        ; preds = %if.then2, %if.then
  %4 = load i32, i32* %n_error, align 4, !dbg !18382
  ret i32 %4, !dbg !18383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AscReadEEPWord(i32 %iop_base, i8 zeroext %addr) #2 !dbg !18384 {
entry:
  %iop_base.addr = alloca i32, align 4
  %addr.addr = alloca i8, align 1
  %read_wval = alloca i16, align 2
  %cmd_reg = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18387, metadata !DIExpression()), !dbg !18388
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !18389, metadata !DIExpression()), !dbg !18390
  call void @llvm.dbg.declare(metadata i16* %read_wval, metadata !18391, metadata !DIExpression()), !dbg !18392
  call void @llvm.dbg.declare(metadata i8* %cmd_reg, metadata !18393, metadata !DIExpression()), !dbg !18394
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !18395
  %call = call i32 @AscWriteEEPCmdReg(i32 %0, i8 zeroext 0) #11, !dbg !18396
  call void @AscWaitEEPRead() #11, !dbg !18397
  %1 = load i8, i8* %addr.addr, align 1, !dbg !18398
  %conv = zext i8 %1 to i32, !dbg !18398
  %or = or i32 %conv, 128, !dbg !18399
  %conv1 = trunc i32 %or to i8, !dbg !18398
  store i8 %conv1, i8* %cmd_reg, align 1, !dbg !18400
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !18401
  %3 = load i8, i8* %cmd_reg, align 1, !dbg !18402
  %call2 = call i32 @AscWriteEEPCmdReg(i32 %2, i8 zeroext %3) #11, !dbg !18403
  call void @AscWaitEEPRead() #11, !dbg !18404
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !18405
  %add = add i32 %4, 6, !dbg !18405
  %call3 = call zeroext i16 @inw(i32 %add) #11, !dbg !18405
  store i16 %call3, i16* %read_wval, align 2, !dbg !18406
  call void @AscWaitEEPRead() #11, !dbg !18407
  %5 = load i16, i16* %read_wval, align 2, !dbg !18408
  ret i16 %5, !dbg !18409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscWriteEEPCmdReg(i32 %iop_base, i8 zeroext %cmd_reg) #2 !dbg !18410 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i32, align 4
  %cmd_reg.addr = alloca i8, align 1
  %retry = alloca i32, align 4
  %read_back = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18413, metadata !DIExpression()), !dbg !18414
  store i8 %cmd_reg, i8* %cmd_reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd_reg.addr, metadata !18415, metadata !DIExpression()), !dbg !18416
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !18417, metadata !DIExpression()), !dbg !18418
  store i32 0, i32* %retry, align 4, !dbg !18419
  br label %for.cond, !dbg !18421

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %retry, align 4, !dbg !18422
  %cmp = icmp slt i32 %0, 20, !dbg !18424
  br i1 %cmp, label %for.body, label %for.end, !dbg !18425

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %read_back, metadata !18426, metadata !DIExpression()), !dbg !18428
  %1 = load i8, i8* %cmd_reg.addr, align 1, !dbg !18429
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !18429
  %add = add i32 %2, 7, !dbg !18429
  call void @outb(i8 zeroext %1, i32 %add) #11, !dbg !18429
  call void @__const_udelay(i64 4295000) #11, !dbg !18430
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !18435
  %add1 = add i32 %3, 7, !dbg !18435
  %call = call zeroext i8 @inb(i32 %add1) #11, !dbg !18435
  store i8 %call, i8* %read_back, align 1, !dbg !18436
  %4 = load i8, i8* %read_back, align 1, !dbg !18437
  %conv = zext i8 %4 to i32, !dbg !18437
  %5 = load i8, i8* %cmd_reg.addr, align 1, !dbg !18439
  %conv2 = zext i8 %5 to i32, !dbg !18439
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !18440
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18441

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !18442
  br label %return, !dbg !18442

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !18443

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %retry, align 4, !dbg !18444
  %inc = add i32 %6, 1, !dbg !18444
  store i32 %inc, i32* %retry, align 4, !dbg !18444
  br label %for.cond, !dbg !18445, !llvm.loop !18446

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !18448
  br label %return, !dbg !18448

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18449
  ret i32 %7, !dbg !18449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscWaitEEPRead() #2 !dbg !18450 {
entry:
  call void @__const_udelay(i64 4295000) #11, !dbg !18451
  ret void, !dbg !18456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscSetEEPConfigOnce(i32 %iop_base, %struct.asceep_config* %cfg_buf, i16 zeroext %bus_type) #2 !dbg !18457 {
entry:
  %iop_base.addr = alloca i32, align 4
  %cfg_buf.addr = alloca %struct.asceep_config*, align 8
  %bus_type.addr = alloca i16, align 2
  %n_error = alloca i32, align 4
  %wbuf = alloca i16*, align 8
  %word = alloca i16, align 2
  %sum = alloca i16, align 2
  %s_addr = alloca i32, align 4
  %cfg_beg = alloca i32, align 4
  %cfg_end = alloca i32, align 4
  %uchar_end_in_config = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18458, metadata !DIExpression()), !dbg !18459
  store %struct.asceep_config* %cfg_buf, %struct.asceep_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asceep_config** %cfg_buf.addr, metadata !18460, metadata !DIExpression()), !dbg !18461
  store i16 %bus_type, i16* %bus_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_type.addr, metadata !18462, metadata !DIExpression()), !dbg !18463
  call void @llvm.dbg.declare(metadata i32* %n_error, metadata !18464, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !18466, metadata !DIExpression()), !dbg !18467
  call void @llvm.dbg.declare(metadata i16* %word, metadata !18468, metadata !DIExpression()), !dbg !18469
  call void @llvm.dbg.declare(metadata i16* %sum, metadata !18470, metadata !DIExpression()), !dbg !18471
  call void @llvm.dbg.declare(metadata i32* %s_addr, metadata !18472, metadata !DIExpression()), !dbg !18473
  call void @llvm.dbg.declare(metadata i32* %cfg_beg, metadata !18474, metadata !DIExpression()), !dbg !18475
  call void @llvm.dbg.declare(metadata i32* %cfg_end, metadata !18476, metadata !DIExpression()), !dbg !18477
  call void @llvm.dbg.declare(metadata i32* %uchar_end_in_config, metadata !18478, metadata !DIExpression()), !dbg !18479
  store i32 43, i32* %uchar_end_in_config, align 4, !dbg !18479
  %0 = load %struct.asceep_config*, %struct.asceep_config** %cfg_buf.addr, align 8, !dbg !18480
  %1 = bitcast %struct.asceep_config* %0 to i16*, !dbg !18481
  store i16* %1, i16** %wbuf, align 8, !dbg !18482
  store i32 0, i32* %n_error, align 4, !dbg !18483
  store i16 0, i16* %sum, align 2, !dbg !18484
  store i32 0, i32* %s_addr, align 4, !dbg !18485
  br label %for.cond, !dbg !18487

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %s_addr, align 4, !dbg !18488
  %cmp = icmp slt i32 %2, 2, !dbg !18490
  br i1 %cmp, label %for.body, label %for.end, !dbg !18491

for.body:                                         ; preds = %for.cond
  %3 = load i16*, i16** %wbuf, align 8, !dbg !18492
  %4 = load i16, i16* %3, align 2, !dbg !18494
  %conv = zext i16 %4 to i32, !dbg !18494
  %5 = load i16, i16* %sum, align 2, !dbg !18495
  %conv1 = zext i16 %5 to i32, !dbg !18495
  %add = add i32 %conv1, %conv, !dbg !18495
  %conv2 = trunc i32 %add to i16, !dbg !18495
  store i16 %conv2, i16* %sum, align 2, !dbg !18495
  %6 = load i16*, i16** %wbuf, align 8, !dbg !18496
  %7 = load i16, i16* %6, align 2, !dbg !18498
  %conv3 = zext i16 %7 to i32, !dbg !18498
  %8 = load i32, i32* %iop_base.addr, align 4, !dbg !18499
  %9 = load i32, i32* %s_addr, align 4, !dbg !18500
  %conv4 = trunc i32 %9 to i8, !dbg !18501
  %10 = load i16*, i16** %wbuf, align 8, !dbg !18502
  %11 = load i16, i16* %10, align 2, !dbg !18503
  %call = call zeroext i16 @AscWriteEEPWord(i32 %8, i8 zeroext %conv4, i16 zeroext %11) #11, !dbg !18504
  %conv5 = zext i16 %call to i32, !dbg !18504
  %cmp6 = icmp ne i32 %conv3, %conv5, !dbg !18505
  br i1 %cmp6, label %if.then, label %if.end, !dbg !18506

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %n_error, align 4, !dbg !18507
  %inc = add i32 %12, 1, !dbg !18507
  store i32 %inc, i32* %n_error, align 4, !dbg !18507
  br label %if.end, !dbg !18509

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18510

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %s_addr, align 4, !dbg !18511
  %inc8 = add i32 %13, 1, !dbg !18511
  store i32 %inc8, i32* %s_addr, align 4, !dbg !18511
  %14 = load i16*, i16** %wbuf, align 8, !dbg !18512
  %incdec.ptr = getelementptr i16, i16* %14, i32 1, !dbg !18512
  store i16* %incdec.ptr, i16** %wbuf, align 8, !dbg !18512
  br label %for.cond, !dbg !18513, !llvm.loop !18514

for.end:                                          ; preds = %for.cond
  %15 = load i16, i16* %bus_type.addr, align 2, !dbg !18516
  %conv9 = zext i16 %15 to i32, !dbg !18516
  %and = and i32 %conv9, 64, !dbg !18518
  %tobool = icmp ne i32 %and, 0, !dbg !18518
  br i1 %tobool, label %if.then10, label %if.else, !dbg !18519

if.then10:                                        ; preds = %for.end
  store i32 2, i32* %cfg_beg, align 4, !dbg !18520
  store i32 15, i32* %cfg_end, align 4, !dbg !18522
  br label %if.end11, !dbg !18523

if.else:                                          ; preds = %for.end
  store i32 32, i32* %cfg_beg, align 4, !dbg !18524
  store i32 45, i32* %cfg_end, align 4, !dbg !18526
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  %16 = load i32, i32* %cfg_beg, align 4, !dbg !18527
  store i32 %16, i32* %s_addr, align 4, !dbg !18529
  br label %for.cond12, !dbg !18530

for.cond12:                                       ; preds = %for.inc43, %if.end11
  %17 = load i32, i32* %s_addr, align 4, !dbg !18531
  %18 = load i32, i32* %cfg_end, align 4, !dbg !18533
  %sub = sub i32 %18, 1, !dbg !18534
  %cmp13 = icmp sle i32 %17, %sub, !dbg !18535
  br i1 %cmp13, label %for.body15, label %for.end46, !dbg !18536

for.body15:                                       ; preds = %for.cond12
  %19 = load i32, i32* %s_addr, align 4, !dbg !18537
  %20 = load i32, i32* %uchar_end_in_config, align 4, !dbg !18540
  %cmp16 = icmp sle i32 %19, %20, !dbg !18541
  br i1 %cmp16, label %if.then18, label %if.else28, !dbg !18542

if.then18:                                        ; preds = %for.body15
  %21 = load i16*, i16** %wbuf, align 8, !dbg !18543
  %22 = load i16, i16* %21, align 2, !dbg !18543
  store i16 %22, i16* %word, align 2, !dbg !18545
  %23 = load i16, i16* %word, align 2, !dbg !18546
  %conv19 = zext i16 %23 to i32, !dbg !18546
  %24 = load i32, i32* %iop_base.addr, align 4, !dbg !18548
  %25 = load i32, i32* %s_addr, align 4, !dbg !18549
  %conv20 = trunc i32 %25 to i8, !dbg !18550
  %26 = load i16, i16* %word, align 2, !dbg !18551
  %call21 = call zeroext i16 @AscWriteEEPWord(i32 %24, i8 zeroext %conv20, i16 zeroext %26) #11, !dbg !18552
  %conv22 = zext i16 %call21 to i32, !dbg !18552
  %cmp23 = icmp ne i32 %conv19, %conv22, !dbg !18553
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !18554

if.then25:                                        ; preds = %if.then18
  %27 = load i32, i32* %n_error, align 4, !dbg !18555
  %inc26 = add i32 %27, 1, !dbg !18555
  store i32 %inc26, i32* %n_error, align 4, !dbg !18555
  br label %if.end27, !dbg !18557

if.end27:                                         ; preds = %if.then25, %if.then18
  br label %if.end38, !dbg !18558

if.else28:                                        ; preds = %for.body15
  %28 = load i16*, i16** %wbuf, align 8, !dbg !18559
  %29 = load i16, i16* %28, align 2, !dbg !18562
  %conv29 = zext i16 %29 to i32, !dbg !18562
  %30 = load i32, i32* %iop_base.addr, align 4, !dbg !18563
  %31 = load i32, i32* %s_addr, align 4, !dbg !18564
  %conv30 = trunc i32 %31 to i8, !dbg !18565
  %32 = load i16*, i16** %wbuf, align 8, !dbg !18566
  %33 = load i16, i16* %32, align 2, !dbg !18567
  %call31 = call zeroext i16 @AscWriteEEPWord(i32 %30, i8 zeroext %conv30, i16 zeroext %33) #11, !dbg !18568
  %conv32 = zext i16 %call31 to i32, !dbg !18568
  %cmp33 = icmp ne i32 %conv29, %conv32, !dbg !18569
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !18570

if.then35:                                        ; preds = %if.else28
  %34 = load i32, i32* %n_error, align 4, !dbg !18571
  %inc36 = add i32 %34, 1, !dbg !18571
  store i32 %inc36, i32* %n_error, align 4, !dbg !18571
  br label %if.end37, !dbg !18573

if.end37:                                         ; preds = %if.then35, %if.else28
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end27
  %35 = load i16*, i16** %wbuf, align 8, !dbg !18574
  %36 = load i16, i16* %35, align 2, !dbg !18575
  %conv39 = zext i16 %36 to i32, !dbg !18575
  %37 = load i16, i16* %sum, align 2, !dbg !18576
  %conv40 = zext i16 %37 to i32, !dbg !18576
  %add41 = add i32 %conv40, %conv39, !dbg !18576
  %conv42 = trunc i32 %add41 to i16, !dbg !18576
  store i16 %conv42, i16* %sum, align 2, !dbg !18576
  br label %for.inc43, !dbg !18577

for.inc43:                                        ; preds = %if.end38
  %38 = load i32, i32* %s_addr, align 4, !dbg !18578
  %inc44 = add i32 %38, 1, !dbg !18578
  store i32 %inc44, i32* %s_addr, align 4, !dbg !18578
  %39 = load i16*, i16** %wbuf, align 8, !dbg !18579
  %incdec.ptr45 = getelementptr i16, i16* %39, i32 1, !dbg !18579
  store i16* %incdec.ptr45, i16** %wbuf, align 8, !dbg !18579
  br label %for.cond12, !dbg !18580, !llvm.loop !18581

for.end46:                                        ; preds = %for.cond12
  %40 = load i16, i16* %sum, align 2, !dbg !18583
  %41 = load i16*, i16** %wbuf, align 8, !dbg !18584
  store i16 %40, i16* %41, align 2, !dbg !18585
  %42 = load i16, i16* %sum, align 2, !dbg !18586
  %conv47 = zext i16 %42 to i32, !dbg !18586
  %43 = load i32, i32* %iop_base.addr, align 4, !dbg !18588
  %44 = load i32, i32* %s_addr, align 4, !dbg !18589
  %conv48 = trunc i32 %44 to i8, !dbg !18590
  %45 = load i16, i16* %sum, align 2, !dbg !18591
  %call49 = call zeroext i16 @AscWriteEEPWord(i32 %43, i8 zeroext %conv48, i16 zeroext %45) #11, !dbg !18592
  %conv50 = zext i16 %call49 to i32, !dbg !18592
  %cmp51 = icmp ne i32 %conv47, %conv50, !dbg !18593
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !18594

if.then53:                                        ; preds = %for.end46
  %46 = load i32, i32* %n_error, align 4, !dbg !18595
  %inc54 = add i32 %46, 1, !dbg !18595
  store i32 %inc54, i32* %n_error, align 4, !dbg !18595
  br label %if.end55, !dbg !18597

if.end55:                                         ; preds = %if.then53, %for.end46
  %47 = load %struct.asceep_config*, %struct.asceep_config** %cfg_buf.addr, align 8, !dbg !18598
  %48 = bitcast %struct.asceep_config* %47 to i16*, !dbg !18599
  store i16* %48, i16** %wbuf, align 8, !dbg !18600
  store i32 0, i32* %s_addr, align 4, !dbg !18601
  br label %for.cond56, !dbg !18603

for.cond56:                                       ; preds = %for.inc69, %if.end55
  %49 = load i32, i32* %s_addr, align 4, !dbg !18604
  %cmp57 = icmp slt i32 %49, 2, !dbg !18606
  br i1 %cmp57, label %for.body59, label %for.end72, !dbg !18607

for.body59:                                       ; preds = %for.cond56
  %50 = load i16*, i16** %wbuf, align 8, !dbg !18608
  %51 = load i16, i16* %50, align 2, !dbg !18611
  %conv60 = zext i16 %51 to i32, !dbg !18611
  %52 = load i32, i32* %iop_base.addr, align 4, !dbg !18612
  %53 = load i32, i32* %s_addr, align 4, !dbg !18613
  %conv61 = trunc i32 %53 to i8, !dbg !18614
  %call62 = call zeroext i16 @AscReadEEPWord(i32 %52, i8 zeroext %conv61) #11, !dbg !18615
  %conv63 = zext i16 %call62 to i32, !dbg !18615
  %cmp64 = icmp ne i32 %conv60, %conv63, !dbg !18616
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !18617

if.then66:                                        ; preds = %for.body59
  %54 = load i32, i32* %n_error, align 4, !dbg !18618
  %inc67 = add i32 %54, 1, !dbg !18618
  store i32 %inc67, i32* %n_error, align 4, !dbg !18618
  br label %if.end68, !dbg !18620

if.end68:                                         ; preds = %if.then66, %for.body59
  br label %for.inc69, !dbg !18621

for.inc69:                                        ; preds = %if.end68
  %55 = load i32, i32* %s_addr, align 4, !dbg !18622
  %inc70 = add i32 %55, 1, !dbg !18622
  store i32 %inc70, i32* %s_addr, align 4, !dbg !18622
  %56 = load i16*, i16** %wbuf, align 8, !dbg !18623
  %incdec.ptr71 = getelementptr i16, i16* %56, i32 1, !dbg !18623
  store i16* %incdec.ptr71, i16** %wbuf, align 8, !dbg !18623
  br label %for.cond56, !dbg !18624, !llvm.loop !18625

for.end72:                                        ; preds = %for.cond56
  %57 = load i16, i16* %bus_type.addr, align 2, !dbg !18627
  %conv73 = zext i16 %57 to i32, !dbg !18627
  %and74 = and i32 %conv73, 64, !dbg !18629
  %tobool75 = icmp ne i32 %and74, 0, !dbg !18629
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !18630

if.then76:                                        ; preds = %for.end72
  store i32 2, i32* %cfg_beg, align 4, !dbg !18631
  store i32 15, i32* %cfg_end, align 4, !dbg !18633
  br label %if.end78, !dbg !18634

if.else77:                                        ; preds = %for.end72
  store i32 32, i32* %cfg_beg, align 4, !dbg !18635
  store i32 45, i32* %cfg_end, align 4, !dbg !18637
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  %58 = load i32, i32* %cfg_beg, align 4, !dbg !18638
  store i32 %58, i32* %s_addr, align 4, !dbg !18640
  br label %for.cond79, !dbg !18641

for.cond79:                                       ; preds = %for.inc100, %if.end78
  %59 = load i32, i32* %s_addr, align 4, !dbg !18642
  %60 = load i32, i32* %cfg_end, align 4, !dbg !18644
  %sub80 = sub i32 %60, 1, !dbg !18645
  %cmp81 = icmp sle i32 %59, %sub80, !dbg !18646
  br i1 %cmp81, label %for.body83, label %for.end103, !dbg !18647

for.body83:                                       ; preds = %for.cond79
  %61 = load i32, i32* %s_addr, align 4, !dbg !18648
  %62 = load i32, i32* %uchar_end_in_config, align 4, !dbg !18651
  %cmp84 = icmp sle i32 %61, %62, !dbg !18652
  br i1 %cmp84, label %if.then86, label %if.else89, !dbg !18653

if.then86:                                        ; preds = %for.body83
  %63 = load i32, i32* %iop_base.addr, align 4, !dbg !18654
  %64 = load i32, i32* %s_addr, align 4, !dbg !18654
  %conv87 = trunc i32 %64 to i8, !dbg !18654
  %call88 = call zeroext i16 @AscReadEEPWord(i32 %63, i8 zeroext %conv87) #11, !dbg !18654
  store i16 %call88, i16* %word, align 2, !dbg !18656
  br label %if.end92, !dbg !18657

if.else89:                                        ; preds = %for.body83
  %65 = load i32, i32* %iop_base.addr, align 4, !dbg !18658
  %66 = load i32, i32* %s_addr, align 4, !dbg !18660
  %conv90 = trunc i32 %66 to i8, !dbg !18661
  %call91 = call zeroext i16 @AscReadEEPWord(i32 %65, i8 zeroext %conv90) #11, !dbg !18662
  store i16 %call91, i16* %word, align 2, !dbg !18663
  br label %if.end92

if.end92:                                         ; preds = %if.else89, %if.then86
  %67 = load i16*, i16** %wbuf, align 8, !dbg !18664
  %68 = load i16, i16* %67, align 2, !dbg !18666
  %conv93 = zext i16 %68 to i32, !dbg !18666
  %69 = load i16, i16* %word, align 2, !dbg !18667
  %conv94 = zext i16 %69 to i32, !dbg !18667
  %cmp95 = icmp ne i32 %conv93, %conv94, !dbg !18668
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !18669

if.then97:                                        ; preds = %if.end92
  %70 = load i32, i32* %n_error, align 4, !dbg !18670
  %inc98 = add i32 %70, 1, !dbg !18670
  store i32 %inc98, i32* %n_error, align 4, !dbg !18670
  br label %if.end99, !dbg !18672

if.end99:                                         ; preds = %if.then97, %if.end92
  br label %for.inc100, !dbg !18673

for.inc100:                                       ; preds = %if.end99
  %71 = load i32, i32* %s_addr, align 4, !dbg !18674
  %inc101 = add i32 %71, 1, !dbg !18674
  store i32 %inc101, i32* %s_addr, align 4, !dbg !18674
  %72 = load i16*, i16** %wbuf, align 8, !dbg !18675
  %incdec.ptr102 = getelementptr i16, i16* %72, i32 1, !dbg !18675
  store i16* %incdec.ptr102, i16** %wbuf, align 8, !dbg !18675
  br label %for.cond79, !dbg !18676, !llvm.loop !18677

for.end103:                                       ; preds = %for.cond79
  %73 = load i32, i32* %iop_base.addr, align 4, !dbg !18679
  %74 = load i32, i32* %s_addr, align 4, !dbg !18681
  %conv104 = trunc i32 %74 to i8, !dbg !18682
  %call105 = call zeroext i16 @AscReadEEPWord(i32 %73, i8 zeroext %conv104) #11, !dbg !18683
  %conv106 = zext i16 %call105 to i32, !dbg !18683
  %75 = load i16, i16* %sum, align 2, !dbg !18684
  %conv107 = zext i16 %75 to i32, !dbg !18684
  %cmp108 = icmp ne i32 %conv106, %conv107, !dbg !18685
  br i1 %cmp108, label %if.then110, label %if.end112, !dbg !18686

if.then110:                                       ; preds = %for.end103
  %76 = load i32, i32* %n_error, align 4, !dbg !18687
  %inc111 = add i32 %76, 1, !dbg !18687
  store i32 %inc111, i32* %n_error, align 4, !dbg !18687
  br label %if.end112, !dbg !18689

if.end112:                                        ; preds = %if.then110, %for.end103
  %77 = load i32, i32* %n_error, align 4, !dbg !18690
  ret i32 %77, !dbg !18691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AscWriteEEPWord(i32 %iop_base, i8 zeroext %addr, i16 zeroext %word_val) #2 !dbg !18692 {
entry:
  %retval = alloca i16, align 2
  %iop_base.addr = alloca i32, align 4
  %addr.addr = alloca i8, align 1
  %word_val.addr = alloca i16, align 2
  %read_wval = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18695, metadata !DIExpression()), !dbg !18696
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !18697, metadata !DIExpression()), !dbg !18698
  store i16 %word_val, i16* %word_val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %word_val.addr, metadata !18699, metadata !DIExpression()), !dbg !18700
  call void @llvm.dbg.declare(metadata i16* %read_wval, metadata !18701, metadata !DIExpression()), !dbg !18702
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !18703
  %1 = load i8, i8* %addr.addr, align 1, !dbg !18704
  %call = call zeroext i16 @AscReadEEPWord(i32 %0, i8 zeroext %1) #11, !dbg !18705
  store i16 %call, i16* %read_wval, align 2, !dbg !18706
  %2 = load i16, i16* %read_wval, align 2, !dbg !18707
  %conv = zext i16 %2 to i32, !dbg !18707
  %3 = load i16, i16* %word_val.addr, align 2, !dbg !18709
  %conv1 = zext i16 %3 to i32, !dbg !18709
  %cmp = icmp ne i32 %conv, %conv1, !dbg !18710
  br i1 %cmp, label %if.then, label %if.end, !dbg !18711

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !18712
  %call3 = call i32 @AscWriteEEPCmdReg(i32 %4, i8 zeroext 48) #11, !dbg !18714
  call void @AscWaitEEPRead() #11, !dbg !18715
  %5 = load i32, i32* %iop_base.addr, align 4, !dbg !18716
  %6 = load i16, i16* %word_val.addr, align 2, !dbg !18717
  %call4 = call i32 @AscWriteEEPDataReg(i32 %5, i16 zeroext %6) #11, !dbg !18718
  call void @AscWaitEEPRead() #11, !dbg !18719
  %7 = load i32, i32* %iop_base.addr, align 4, !dbg !18720
  %8 = load i8, i8* %addr.addr, align 1, !dbg !18721
  %conv5 = zext i8 %8 to i32, !dbg !18721
  %or = or i32 64, %conv5, !dbg !18722
  %conv6 = trunc i32 %or to i8, !dbg !18723
  %call7 = call i32 @AscWriteEEPCmdReg(i32 %7, i8 zeroext %conv6) #11, !dbg !18724
  call void @AscWaitEEPWrite() #11, !dbg !18725
  %9 = load i32, i32* %iop_base.addr, align 4, !dbg !18726
  %call8 = call i32 @AscWriteEEPCmdReg(i32 %9, i8 zeroext 0) #11, !dbg !18727
  call void @AscWaitEEPRead() #11, !dbg !18728
  %10 = load i32, i32* %iop_base.addr, align 4, !dbg !18729
  %11 = load i8, i8* %addr.addr, align 1, !dbg !18730
  %call9 = call zeroext i16 @AscReadEEPWord(i32 %10, i8 zeroext %11) #11, !dbg !18731
  store i16 %call9, i16* %retval, align 2, !dbg !18732
  br label %return, !dbg !18732

if.end:                                           ; preds = %entry
  %12 = load i16, i16* %read_wval, align 2, !dbg !18733
  store i16 %12, i16* %retval, align 2, !dbg !18734
  br label %return, !dbg !18734

return:                                           ; preds = %if.end, %if.then
  %13 = load i16, i16* %retval, align 2, !dbg !18735
  ret i16 %13, !dbg !18735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscWriteEEPDataReg(i32 %iop_base, i16 zeroext %data_reg) #2 !dbg !18736 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i32, align 4
  %data_reg.addr = alloca i16, align 2
  %read_back = alloca i16, align 2
  %retry = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !18739, metadata !DIExpression()), !dbg !18740
  store i16 %data_reg, i16* %data_reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data_reg.addr, metadata !18741, metadata !DIExpression()), !dbg !18742
  call void @llvm.dbg.declare(metadata i16* %read_back, metadata !18743, metadata !DIExpression()), !dbg !18744
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !18745, metadata !DIExpression()), !dbg !18746
  store i32 0, i32* %retry, align 4, !dbg !18747
  br label %while.body, !dbg !18748

while.body:                                       ; preds = %entry, %if.end7
  %0 = load i16, i16* %data_reg.addr, align 2, !dbg !18749
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !18749
  %add = add i32 %1, 6, !dbg !18749
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !18749
  call void @__const_udelay(i64 4295000) #11, !dbg !18751
  %2 = load i32, i32* %iop_base.addr, align 4, !dbg !18756
  %add1 = add i32 %2, 6, !dbg !18756
  %call = call zeroext i16 @inw(i32 %add1) #11, !dbg !18756
  store i16 %call, i16* %read_back, align 2, !dbg !18757
  %3 = load i16, i16* %read_back, align 2, !dbg !18758
  %conv = zext i16 %3 to i32, !dbg !18758
  %4 = load i16, i16* %data_reg.addr, align 2, !dbg !18760
  %conv2 = zext i16 %4 to i32, !dbg !18760
  %cmp = icmp eq i32 %conv, %conv2, !dbg !18761
  br i1 %cmp, label %if.then, label %if.end, !dbg !18762

if.then:                                          ; preds = %while.body
  store i32 1, i32* %retval, align 4, !dbg !18763
  br label %return, !dbg !18763

if.end:                                           ; preds = %while.body
  %5 = load i32, i32* %retry, align 4, !dbg !18765
  %inc = add i32 %5, 1, !dbg !18765
  store i32 %inc, i32* %retry, align 4, !dbg !18765
  %cmp4 = icmp sgt i32 %5, 20, !dbg !18767
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !18768

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18769
  br label %return, !dbg !18769

if.end7:                                          ; preds = %if.end
  br label %while.body, !dbg !18748, !llvm.loop !18771

return:                                           ; preds = %if.then6, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !18773
  ret i32 %6, !dbg !18773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscWaitEEPWrite() #2 !dbg !18774 {
entry:
  %__ms = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !18775, metadata !DIExpression()), !dbg !18777
  store i64 20, i64* %__ms, align 8, !dbg !18777
  br label %while.cond, !dbg !18777

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %__ms, align 8, !dbg !18777
  %dec = add i64 %0, -1, !dbg !18777
  store i64 %dec, i64* %__ms, align 8, !dbg !18777
  %tobool = icmp ne i64 %0, 0, !dbg !18777
  br i1 %tobool, label %while.body, label %while.end, !dbg !18777

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !18778
  br label %while.cond, !dbg !18777, !llvm.loop !18783

while.end:                                        ; preds = %while.cond
  ret void, !dbg !18784
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitFrom38C1600EEP(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !18785 {
entry:
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %iop_base = alloca i8*, align 8
  %warn_code = alloca i16, align 2
  %eep_config = alloca %struct.adveep_38C1600_config, align 2
  %tid = alloca i8, align 1
  %termination = alloca i8, align 1
  %sdtr_speed = alloca i16, align 2
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp = alloca %struct.asc_board*, align 8
  %tmp7 = alloca %struct.pci_dev*, align 8
  %ints = alloca i8, align 1
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !18786, metadata !DIExpression()), !dbg !18787
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !18788, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !18790, metadata !DIExpression()), !dbg !18791
  call void @llvm.dbg.declare(metadata %struct.adveep_38C1600_config* %eep_config, metadata !18792, metadata !DIExpression()), !dbg !18793
  call void @llvm.dbg.declare(metadata i8* %tid, metadata !18794, metadata !DIExpression()), !dbg !18795
  call void @llvm.dbg.declare(metadata i8* %termination, metadata !18796, metadata !DIExpression()), !dbg !18797
  call void @llvm.dbg.declare(metadata i16* %sdtr_speed, metadata !18798, metadata !DIExpression()), !dbg !18799
  store i16 0, i16* %sdtr_speed, align 2, !dbg !18799
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18800
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !18801
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !18801
  store i8* %1, i8** %iop_base, align 8, !dbg !18802
  store i16 0, i16* %warn_code, align 2, !dbg !18803
  %2 = load i8*, i8** %iop_base, align 8, !dbg !18804
  %call = call zeroext i16 @AdvGet38C1600EEPConfig(i8* %2, %struct.adveep_38C1600_config* %eep_config) #11, !dbg !18806
  %conv = zext i16 %call to i32, !dbg !18806
  %check_sum = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 25, !dbg !18807
  %3 = load i16, i16* %check_sum, align 2, !dbg !18807
  %conv2 = zext i16 %3 to i32, !dbg !18808
  %cmp = icmp ne i32 %conv, %conv2, !dbg !18809
  br i1 %cmp, label %if.then, label %if.end33, !dbg !18810

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !18811, metadata !DIExpression()), !dbg !18813
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18814, metadata !DIExpression()), !dbg !18816
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !18817, metadata !DIExpression()), !dbg !18819
  %4 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18819
  %5 = bitcast %struct.adv_dvc_var* %4 to i8*, !dbg !18819
  store i8* %5, i8** %__mptr4, align 8, !dbg !18819
  br label %do.body, !dbg !18819

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !18820

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr4, align 8, !dbg !18819
  %add.ptr = getelementptr i8, i8* %6, i64 -24, !dbg !18819
  %7 = bitcast i8* %add.ptr to %struct.asc_board*, !dbg !18819
  store %struct.asc_board* %7, %struct.asc_board** %tmp, align 8, !dbg !18820
  %8 = load %struct.asc_board*, %struct.asc_board** %tmp, align 8, !dbg !18819
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %8, i32 0, i32 0, !dbg !18816
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !18816
  %10 = bitcast %struct.device* %9 to i8*, !dbg !18816
  store i8* %10, i8** %__mptr, align 8, !dbg !18816
  br label %do.body5, !dbg !18816

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !18822

do.end6:                                          ; preds = %do.body5
  %11 = load i8*, i8** %__mptr, align 8, !dbg !18816
  %add.ptr8 = getelementptr i8, i8* %11, i64 -176, !dbg !18816
  %12 = bitcast i8* %add.ptr8 to %struct.pci_dev*, !dbg !18816
  store %struct.pci_dev* %12, %struct.pci_dev** %tmp7, align 8, !dbg !18822
  %13 = load %struct.pci_dev*, %struct.pci_dev** %tmp7, align 8, !dbg !18816
  store %struct.pci_dev* %13, %struct.pci_dev** %pdev, align 8, !dbg !18813
  %14 = load i16, i16* %warn_code, align 2, !dbg !18824
  %conv9 = zext i16 %14 to i32, !dbg !18824
  %or = or i32 %conv9, 2, !dbg !18824
  %conv10 = trunc i32 %or to i16, !dbg !18824
  store i16 %conv10, i16* %warn_code, align 2, !dbg !18824
  %15 = bitcast %struct.adveep_38C1600_config* %eep_config to i8*, !dbg !18825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %15, i8* align 2 bitcast (%struct.adveep_38C1600_config* @Default_38C1600_EEPROM_Config to i8*), i64 128, i1 false), !dbg !18825
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18826
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 6, !dbg !18826
  %17 = load i32, i32* %devfn, align 8, !dbg !18826
  %and = and i32 %17, 7, !dbg !18826
  %cmp11 = icmp ne i32 %and, 0, !dbg !18828
  br i1 %cmp11, label %if.then13, label %if.end29, !dbg !18829

if.then13:                                        ; preds = %do.end6
  call void @llvm.dbg.declare(metadata i8* %ints, metadata !18830, metadata !DIExpression()), !dbg !18832
  %cfg_lsw = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 0, !dbg !18833
  %18 = load i16, i16* %cfg_lsw, align 2, !dbg !18834
  %conv14 = zext i16 %18 to i32, !dbg !18834
  %and15 = and i32 %conv14, -16385, !dbg !18834
  %conv16 = trunc i32 %and15 to i16, !dbg !18834
  store i16 %conv16, i16* %cfg_lsw, align 2, !dbg !18834
  %19 = load i8*, i8** %iop_base, align 8, !dbg !18835
  %add.ptr17 = getelementptr i8, i8* %19, i64 22, !dbg !18835
  call void @writeb(i8 zeroext 0, i8* %add.ptr17) #11, !dbg !18835
  %20 = load i8*, i8** %iop_base, align 8, !dbg !18836
  %add.ptr18 = getelementptr i8, i8* %20, i64 18, !dbg !18836
  %call19 = call zeroext i8 @readb(i8* %add.ptr18) #11, !dbg !18836
  store i8 %call19, i8* %ints, align 1, !dbg !18837
  %21 = load i8, i8* %ints, align 1, !dbg !18838
  %conv20 = zext i8 %21 to i32, !dbg !18838
  %and21 = and i32 %conv20, 1, !dbg !18840
  %cmp22 = icmp eq i32 %and21, 0, !dbg !18841
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !18842

if.then24:                                        ; preds = %if.then13
  %cfg_lsw25 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 0, !dbg !18843
  %22 = load i16, i16* %cfg_lsw25, align 2, !dbg !18844
  %conv26 = zext i16 %22 to i32, !dbg !18844
  %and27 = and i32 %conv26, -2049, !dbg !18844
  %conv28 = trunc i32 %and27 to i16, !dbg !18844
  store i16 %conv28, i16* %cfg_lsw25, align 2, !dbg !18844
  br label %if.end, !dbg !18845

if.end:                                           ; preds = %if.then24, %if.then13
  br label %if.end29, !dbg !18846

if.end29:                                         ; preds = %if.end, %do.end6
  %23 = load i8*, i8** %iop_base, align 8, !dbg !18847
  %call30 = call zeroext i16 @AdvReadEEPWord(i8* %23, i32 20) #11, !dbg !18848
  %serial_number_word3 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 24, !dbg !18849
  store i16 %call30, i16* %serial_number_word3, align 2, !dbg !18850
  %24 = load i8*, i8** %iop_base, align 8, !dbg !18851
  %call31 = call zeroext i16 @AdvReadEEPWord(i8* %24, i32 19) #11, !dbg !18852
  %serial_number_word2 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 23, !dbg !18853
  store i16 %call31, i16* %serial_number_word2, align 2, !dbg !18854
  %25 = load i8*, i8** %iop_base, align 8, !dbg !18855
  %call32 = call zeroext i16 @AdvReadEEPWord(i8* %25, i32 18) #11, !dbg !18856
  %serial_number_word1 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 22, !dbg !18857
  store i16 %call32, i16* %serial_number_word1, align 2, !dbg !18858
  %26 = load i8*, i8** %iop_base, align 8, !dbg !18859
  call void @AdvSet38C1600EEPConfig(i8* %26, %struct.adveep_38C1600_config* %eep_config) #11, !dbg !18860
  br label %if.end33, !dbg !18861

if.end33:                                         ; preds = %if.end29, %entry
  %wdtr_able = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 3, !dbg !18862
  %27 = load i16, i16* %wdtr_able, align 2, !dbg !18862
  %28 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18863
  %wdtr_able34 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %28, i32 0, i32 3, !dbg !18864
  store i16 %27, i16* %wdtr_able34, align 4, !dbg !18865
  %sdtr_speed1 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 4, !dbg !18866
  %29 = load i16, i16* %sdtr_speed1, align 2, !dbg !18866
  %30 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18867
  %sdtr_speed135 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %30, i32 0, i32 6, !dbg !18868
  store i16 %29, i16* %sdtr_speed135, align 2, !dbg !18869
  %sdtr_speed2 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 16, !dbg !18870
  %31 = load i16, i16* %sdtr_speed2, align 2, !dbg !18870
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18871
  %sdtr_speed236 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %32, i32 0, i32 7, !dbg !18872
  store i16 %31, i16* %sdtr_speed236, align 4, !dbg !18873
  %sdtr_speed3 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 17, !dbg !18874
  %33 = load i16, i16* %sdtr_speed3, align 2, !dbg !18874
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18875
  %sdtr_speed337 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %34, i32 0, i32 8, !dbg !18876
  store i16 %33, i16* %sdtr_speed337, align 2, !dbg !18877
  %sdtr_speed4 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 21, !dbg !18878
  %35 = load i16, i16* %sdtr_speed4, align 2, !dbg !18878
  %36 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18879
  %sdtr_speed438 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %36, i32 0, i32 9, !dbg !18880
  store i16 %35, i16* %sdtr_speed438, align 8, !dbg !18881
  %37 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18882
  %ppr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %37, i32 0, i32 11, !dbg !18883
  store i16 0, i16* %ppr_able, align 4, !dbg !18884
  %tagqng_able = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 6, !dbg !18885
  %38 = load i16, i16* %tagqng_able, align 2, !dbg !18885
  %39 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18886
  %tagqng_able39 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %39, i32 0, i32 10, !dbg !18887
  store i16 %38, i16* %tagqng_able39, align 2, !dbg !18888
  %disc_enable = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 2, !dbg !18889
  %40 = load i16, i16* %disc_enable, align 2, !dbg !18889
  %41 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18890
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %41, i32 0, i32 28, !dbg !18891
  %42 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !18891
  %disc_enable40 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %42, i32 0, i32 0, !dbg !18892
  store i16 %40, i16* %disc_enable40, align 2, !dbg !18893
  %max_host_qng = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !18894
  %43 = load i8, i8* %max_host_qng, align 2, !dbg !18894
  %44 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18895
  %max_host_qng41 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %44, i32 0, i32 16, !dbg !18896
  store i8 %43, i8* %max_host_qng41, align 4, !dbg !18897
  %max_dvc_qng = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !18898
  %45 = load i8, i8* %max_dvc_qng, align 1, !dbg !18898
  %46 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18899
  %max_dvc_qng42 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %46, i32 0, i32 12, !dbg !18900
  store i8 %45, i8* %max_dvc_qng42, align 2, !dbg !18901
  %adapter_scsi_id = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 9, !dbg !18902
  %47 = load i8, i8* %adapter_scsi_id, align 2, !dbg !18902
  %conv43 = zext i8 %47 to i32, !dbg !18903
  %and44 = and i32 %conv43, 7, !dbg !18904
  %conv45 = trunc i32 %and44 to i8, !dbg !18905
  %48 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18906
  %chip_scsi_id = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %48, i32 0, i32 19, !dbg !18907
  store i8 %conv45, i8* %chip_scsi_id, align 8, !dbg !18908
  %start_motor = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 5, !dbg !18909
  %49 = load i16, i16* %start_motor, align 2, !dbg !18909
  %50 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18910
  %start_motor46 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %50, i32 0, i32 13, !dbg !18911
  store i16 %49, i16* %start_motor46, align 8, !dbg !18912
  %scsi_reset_delay = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 11, !dbg !18913
  %51 = load i8, i8* %scsi_reset_delay, align 2, !dbg !18913
  %52 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18914
  %scsi_reset_wait = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %52, i32 0, i32 14, !dbg !18915
  store i8 %51, i8* %scsi_reset_wait, align 2, !dbg !18916
  %bios_ctrl = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 15, !dbg !18917
  %53 = load i16, i16* %bios_ctrl, align 2, !dbg !18917
  %54 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18918
  %bios_ctrl47 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %54, i32 0, i32 2, !dbg !18919
  store i16 %53, i16* %bios_ctrl47, align 2, !dbg !18920
  %scam_tolerant = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 8, !dbg !18921
  %55 = load i16, i16* %scam_tolerant, align 2, !dbg !18921
  %56 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18922
  %no_scam = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %56, i32 0, i32 17, !dbg !18923
  store i16 %55, i16* %no_scam, align 2, !dbg !18924
  %57 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18925
  %sdtr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %57, i32 0, i32 4, !dbg !18926
  store i16 0, i16* %sdtr_able, align 2, !dbg !18927
  store i8 0, i8* %tid, align 1, !dbg !18928
  br label %for.cond, !dbg !18930

for.cond:                                         ; preds = %for.inc, %if.end33
  %58 = load i8, i8* %tid, align 1, !dbg !18931
  %conv48 = zext i8 %58 to i32, !dbg !18931
  %cmp49 = icmp sle i32 %conv48, 7, !dbg !18933
  br i1 %cmp49, label %for.body, label %for.end, !dbg !18934

for.body:                                         ; preds = %for.cond
  %59 = load i8, i8* %tid, align 1, !dbg !18935
  %conv51 = zext i8 %59 to i32, !dbg !18935
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !18938
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !18939

if.then54:                                        ; preds = %for.body
  %60 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18940
  %sdtr_speed155 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %60, i32 0, i32 6, !dbg !18942
  %61 = load i16, i16* %sdtr_speed155, align 2, !dbg !18942
  store i16 %61, i16* %sdtr_speed, align 2, !dbg !18943
  br label %if.end76, !dbg !18944

if.else:                                          ; preds = %for.body
  %62 = load i8, i8* %tid, align 1, !dbg !18945
  %conv56 = zext i8 %62 to i32, !dbg !18945
  %cmp57 = icmp eq i32 %conv56, 4, !dbg !18947
  br i1 %cmp57, label %if.then59, label %if.else61, !dbg !18948

if.then59:                                        ; preds = %if.else
  %63 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18949
  %sdtr_speed260 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %63, i32 0, i32 7, !dbg !18951
  %64 = load i16, i16* %sdtr_speed260, align 4, !dbg !18951
  store i16 %64, i16* %sdtr_speed, align 2, !dbg !18952
  br label %if.end75, !dbg !18953

if.else61:                                        ; preds = %if.else
  %65 = load i8, i8* %tid, align 1, !dbg !18954
  %conv62 = zext i8 %65 to i32, !dbg !18954
  %cmp63 = icmp eq i32 %conv62, 8, !dbg !18956
  br i1 %cmp63, label %if.then65, label %if.else67, !dbg !18957

if.then65:                                        ; preds = %if.else61
  %66 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18958
  %sdtr_speed366 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %66, i32 0, i32 8, !dbg !18960
  %67 = load i16, i16* %sdtr_speed366, align 2, !dbg !18960
  store i16 %67, i16* %sdtr_speed, align 2, !dbg !18961
  br label %if.end74, !dbg !18962

if.else67:                                        ; preds = %if.else61
  %68 = load i8, i8* %tid, align 1, !dbg !18963
  %conv68 = zext i8 %68 to i32, !dbg !18963
  %cmp69 = icmp eq i32 %conv68, 12, !dbg !18965
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !18966

if.then71:                                        ; preds = %if.else67
  %69 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18967
  %sdtr_speed472 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %69, i32 0, i32 9, !dbg !18969
  %70 = load i16, i16* %sdtr_speed472, align 8, !dbg !18969
  store i16 %70, i16* %sdtr_speed, align 2, !dbg !18970
  br label %if.end73, !dbg !18971

if.end73:                                         ; preds = %if.then71, %if.else67
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then65
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then59
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then54
  %71 = load i16, i16* %sdtr_speed, align 2, !dbg !18972
  %conv77 = zext i16 %71 to i32, !dbg !18972
  %and78 = and i32 %conv77, 7, !dbg !18974
  %tobool = icmp ne i32 %and78, 0, !dbg !18974
  br i1 %tobool, label %if.then79, label %if.end85, !dbg !18975

if.then79:                                        ; preds = %if.end76
  %72 = load i8, i8* %tid, align 1, !dbg !18976
  %conv80 = zext i8 %72 to i32, !dbg !18976
  %shl = shl i32 1, %conv80, !dbg !18978
  %73 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !18979
  %sdtr_able81 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %73, i32 0, i32 4, !dbg !18980
  %74 = load i16, i16* %sdtr_able81, align 2, !dbg !18981
  %conv82 = zext i16 %74 to i32, !dbg !18981
  %or83 = or i32 %conv82, %shl, !dbg !18981
  %conv84 = trunc i32 %or83 to i16, !dbg !18981
  store i16 %conv84, i16* %sdtr_able81, align 2, !dbg !18981
  br label %if.end85, !dbg !18982

if.end85:                                         ; preds = %if.then79, %if.end76
  %75 = load i16, i16* %sdtr_speed, align 2, !dbg !18983
  %conv86 = zext i16 %75 to i32, !dbg !18983
  %shr = ashr i32 %conv86, 4, !dbg !18983
  %conv87 = trunc i32 %shr to i16, !dbg !18983
  store i16 %conv87, i16* %sdtr_speed, align 2, !dbg !18983
  br label %for.inc, !dbg !18984

for.inc:                                          ; preds = %if.end85
  %76 = load i8, i8* %tid, align 1, !dbg !18985
  %inc = add i8 %76, 1, !dbg !18985
  store i8 %inc, i8* %tid, align 1, !dbg !18985
  br label %for.cond, !dbg !18986, !llvm.loop !18987

for.end:                                          ; preds = %for.cond
  %max_host_qng88 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !18989
  %77 = load i8, i8* %max_host_qng88, align 2, !dbg !18989
  %conv89 = zext i8 %77 to i32, !dbg !18991
  %cmp90 = icmp sgt i32 %conv89, 253, !dbg !18992
  br i1 %cmp90, label %if.then92, label %if.else94, !dbg !18993

if.then92:                                        ; preds = %for.end
  %max_host_qng93 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !18994
  store i8 -3, i8* %max_host_qng93, align 2, !dbg !18996
  br label %if.end110, !dbg !18997

if.else94:                                        ; preds = %for.end
  %max_host_qng95 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !18998
  %78 = load i8, i8* %max_host_qng95, align 2, !dbg !18998
  %conv96 = zext i8 %78 to i32, !dbg !19000
  %cmp97 = icmp slt i32 %conv96, 16, !dbg !19001
  br i1 %cmp97, label %if.then99, label %if.end109, !dbg !19002

if.then99:                                        ; preds = %if.else94
  %max_host_qng100 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !19003
  %79 = load i8, i8* %max_host_qng100, align 2, !dbg !19003
  %conv101 = zext i8 %79 to i32, !dbg !19006
  %cmp102 = icmp eq i32 %conv101, 0, !dbg !19007
  br i1 %cmp102, label %if.then104, label %if.else106, !dbg !19008

if.then104:                                       ; preds = %if.then99
  %max_host_qng105 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !19009
  store i8 -3, i8* %max_host_qng105, align 2, !dbg !19011
  br label %if.end108, !dbg !19012

if.else106:                                       ; preds = %if.then99
  %max_host_qng107 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !19013
  store i8 16, i8* %max_host_qng107, align 2, !dbg !19015
  br label %if.end108

if.end108:                                        ; preds = %if.else106, %if.then104
  br label %if.end109, !dbg !19016

if.end109:                                        ; preds = %if.end108, %if.else94
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then92
  %max_dvc_qng111 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19017
  %80 = load i8, i8* %max_dvc_qng111, align 1, !dbg !19017
  %conv112 = zext i8 %80 to i32, !dbg !19019
  %cmp113 = icmp sgt i32 %conv112, 63, !dbg !19020
  br i1 %cmp113, label %if.then115, label %if.else117, !dbg !19021

if.then115:                                       ; preds = %if.end110
  %max_dvc_qng116 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19022
  store i8 63, i8* %max_dvc_qng116, align 1, !dbg !19024
  br label %if.end133, !dbg !19025

if.else117:                                       ; preds = %if.end110
  %max_dvc_qng118 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19026
  %81 = load i8, i8* %max_dvc_qng118, align 1, !dbg !19026
  %conv119 = zext i8 %81 to i32, !dbg !19028
  %cmp120 = icmp slt i32 %conv119, 4, !dbg !19029
  br i1 %cmp120, label %if.then122, label %if.end132, !dbg !19030

if.then122:                                       ; preds = %if.else117
  %max_dvc_qng123 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19031
  %82 = load i8, i8* %max_dvc_qng123, align 1, !dbg !19031
  %conv124 = zext i8 %82 to i32, !dbg !19034
  %cmp125 = icmp eq i32 %conv124, 0, !dbg !19035
  br i1 %cmp125, label %if.then127, label %if.else129, !dbg !19036

if.then127:                                       ; preds = %if.then122
  %max_dvc_qng128 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19037
  store i8 63, i8* %max_dvc_qng128, align 1, !dbg !19039
  br label %if.end131, !dbg !19040

if.else129:                                       ; preds = %if.then122
  %max_dvc_qng130 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19041
  store i8 4, i8* %max_dvc_qng130, align 1, !dbg !19043
  br label %if.end131

if.end131:                                        ; preds = %if.else129, %if.then127
  br label %if.end132, !dbg !19044

if.end132:                                        ; preds = %if.end131, %if.else117
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then115
  %max_dvc_qng134 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19045
  %83 = load i8, i8* %max_dvc_qng134, align 1, !dbg !19045
  %conv135 = zext i8 %83 to i32, !dbg !19047
  %max_host_qng136 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !19048
  %84 = load i8, i8* %max_host_qng136, align 2, !dbg !19048
  %conv137 = zext i8 %84 to i32, !dbg !19049
  %cmp138 = icmp sgt i32 %conv135, %conv137, !dbg !19050
  br i1 %cmp138, label %if.then140, label %if.end143, !dbg !19051

if.then140:                                       ; preds = %if.end133
  %max_host_qng141 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !19052
  %85 = load i8, i8* %max_host_qng141, align 2, !dbg !19052
  %max_dvc_qng142 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19054
  store i8 %85, i8* %max_dvc_qng142, align 1, !dbg !19055
  br label %if.end143, !dbg !19056

if.end143:                                        ; preds = %if.then140, %if.end133
  %max_host_qng144 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 18, !dbg !19057
  %86 = load i8, i8* %max_host_qng144, align 2, !dbg !19057
  %87 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19058
  %max_host_qng145 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %87, i32 0, i32 16, !dbg !19059
  store i8 %86, i8* %max_host_qng145, align 4, !dbg !19060
  %max_dvc_qng146 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 19, !dbg !19061
  %88 = load i8, i8* %max_dvc_qng146, align 1, !dbg !19061
  %89 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19062
  %max_dvc_qng147 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %89, i32 0, i32 12, !dbg !19063
  store i8 %88, i8* %max_dvc_qng147, align 2, !dbg !19064
  %termination_se = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 13, !dbg !19065
  %90 = load i8, i8* %termination_se, align 2, !dbg !19065
  %conv148 = zext i8 %90 to i32, !dbg !19067
  %cmp149 = icmp eq i32 %conv148, 0, !dbg !19068
  br i1 %cmp149, label %if.then151, label %if.else152, !dbg !19069

if.then151:                                       ; preds = %if.end143
  store i8 0, i8* %termination, align 1, !dbg !19070
  br label %if.end177, !dbg !19072

if.else152:                                       ; preds = %if.end143
  %termination_se153 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 13, !dbg !19073
  %91 = load i8, i8* %termination_se153, align 2, !dbg !19073
  %conv154 = zext i8 %91 to i32, !dbg !19076
  %cmp155 = icmp eq i32 %conv154, 1, !dbg !19077
  br i1 %cmp155, label %if.then157, label %if.else158, !dbg !19078

if.then157:                                       ; preds = %if.else152
  store i8 0, i8* %termination, align 1, !dbg !19079
  br label %if.end176, !dbg !19081

if.else158:                                       ; preds = %if.else152
  %termination_se159 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 13, !dbg !19082
  %92 = load i8, i8* %termination_se159, align 2, !dbg !19082
  %conv160 = zext i8 %92 to i32, !dbg !19084
  %cmp161 = icmp eq i32 %conv160, 2, !dbg !19085
  br i1 %cmp161, label %if.then163, label %if.else164, !dbg !19086

if.then163:                                       ; preds = %if.else158
  store i8 32, i8* %termination, align 1, !dbg !19087
  br label %if.end175, !dbg !19089

if.else164:                                       ; preds = %if.else158
  %termination_se165 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 13, !dbg !19090
  %93 = load i8, i8* %termination_se165, align 2, !dbg !19090
  %conv166 = zext i8 %93 to i32, !dbg !19092
  %cmp167 = icmp eq i32 %conv166, 3, !dbg !19093
  br i1 %cmp167, label %if.then169, label %if.else170, !dbg !19094

if.then169:                                       ; preds = %if.else164
  store i8 48, i8* %termination, align 1, !dbg !19095
  br label %if.end174, !dbg !19097

if.else170:                                       ; preds = %if.else164
  store i8 0, i8* %termination, align 1, !dbg !19098
  %94 = load i16, i16* %warn_code, align 2, !dbg !19100
  %conv171 = zext i16 %94 to i32, !dbg !19100
  %or172 = or i32 %conv171, 4, !dbg !19100
  %conv173 = trunc i32 %or172 to i16, !dbg !19100
  store i16 %conv173, i16* %warn_code, align 2, !dbg !19100
  br label %if.end174

if.end174:                                        ; preds = %if.else170, %if.then169
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then163
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then157
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then151
  %termination_lvd = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 14, !dbg !19101
  %95 = load i8, i8* %termination_lvd, align 1, !dbg !19101
  %conv178 = zext i8 %95 to i32, !dbg !19103
  %cmp179 = icmp eq i32 %conv178, 0, !dbg !19104
  br i1 %cmp179, label %if.then181, label %if.else184, !dbg !19105

if.then181:                                       ; preds = %if.end177
  %96 = load i8, i8* %termination, align 1, !dbg !19106
  %97 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19108
  %cfg182 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %97, i32 0, i32 28, !dbg !19109
  %98 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg182, align 8, !dbg !19109
  %termination183 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %98, i32 0, i32 2, !dbg !19110
  store i8 %96, i8* %termination183, align 1, !dbg !19111
  br label %if.end223, !dbg !19112

if.else184:                                       ; preds = %if.end177
  %termination_lvd185 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 14, !dbg !19113
  %99 = load i8, i8* %termination_lvd185, align 1, !dbg !19113
  %conv186 = zext i8 %99 to i32, !dbg !19116
  %cmp187 = icmp eq i32 %conv186, 1, !dbg !19117
  br i1 %cmp187, label %if.then189, label %if.else192, !dbg !19118

if.then189:                                       ; preds = %if.else184
  %100 = load i8, i8* %termination, align 1, !dbg !19119
  %101 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19121
  %cfg190 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %101, i32 0, i32 28, !dbg !19122
  %102 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg190, align 8, !dbg !19122
  %termination191 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %102, i32 0, i32 2, !dbg !19123
  store i8 %100, i8* %termination191, align 1, !dbg !19124
  br label %if.end222, !dbg !19125

if.else192:                                       ; preds = %if.else184
  %termination_lvd193 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 14, !dbg !19126
  %103 = load i8, i8* %termination_lvd193, align 1, !dbg !19126
  %conv194 = zext i8 %103 to i32, !dbg !19128
  %cmp195 = icmp eq i32 %conv194, 2, !dbg !19129
  br i1 %cmp195, label %if.then197, label %if.else203, !dbg !19130

if.then197:                                       ; preds = %if.else192
  %104 = load i8, i8* %termination, align 1, !dbg !19131
  %conv198 = zext i8 %104 to i32, !dbg !19131
  %or199 = or i32 %conv198, 128, !dbg !19133
  %conv200 = trunc i32 %or199 to i8, !dbg !19131
  %105 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19134
  %cfg201 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %105, i32 0, i32 28, !dbg !19135
  %106 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg201, align 8, !dbg !19135
  %termination202 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %106, i32 0, i32 2, !dbg !19136
  store i8 %conv200, i8* %termination202, align 1, !dbg !19137
  br label %if.end221, !dbg !19138

if.else203:                                       ; preds = %if.else192
  %termination_lvd204 = getelementptr inbounds %struct.adveep_38C1600_config, %struct.adveep_38C1600_config* %eep_config, i32 0, i32 14, !dbg !19139
  %107 = load i8, i8* %termination_lvd204, align 1, !dbg !19139
  %conv205 = zext i8 %107 to i32, !dbg !19141
  %cmp206 = icmp eq i32 %conv205, 3, !dbg !19142
  br i1 %cmp206, label %if.then208, label %if.else214, !dbg !19143

if.then208:                                       ; preds = %if.else203
  %108 = load i8, i8* %termination, align 1, !dbg !19144
  %conv209 = zext i8 %108 to i32, !dbg !19144
  %or210 = or i32 %conv209, 192, !dbg !19146
  %conv211 = trunc i32 %or210 to i8, !dbg !19144
  %109 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19147
  %cfg212 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %109, i32 0, i32 28, !dbg !19148
  %110 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg212, align 8, !dbg !19148
  %termination213 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %110, i32 0, i32 2, !dbg !19149
  store i8 %conv211, i8* %termination213, align 1, !dbg !19150
  br label %if.end220, !dbg !19151

if.else214:                                       ; preds = %if.else203
  %111 = load i8, i8* %termination, align 1, !dbg !19152
  %112 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19154
  %cfg215 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %112, i32 0, i32 28, !dbg !19155
  %113 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg215, align 8, !dbg !19155
  %termination216 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %113, i32 0, i32 2, !dbg !19156
  store i8 %111, i8* %termination216, align 1, !dbg !19157
  %114 = load i16, i16* %warn_code, align 2, !dbg !19158
  %conv217 = zext i16 %114 to i32, !dbg !19158
  %or218 = or i32 %conv217, 4, !dbg !19158
  %conv219 = trunc i32 %or218 to i16, !dbg !19158
  store i16 %conv219, i16* %warn_code, align 2, !dbg !19158
  br label %if.end220

if.end220:                                        ; preds = %if.else214, %if.then208
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %if.then197
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.then189
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.then181
  %115 = load i16, i16* %warn_code, align 2, !dbg !19159
  %conv224 = zext i16 %115 to i32, !dbg !19159
  ret i32 %conv224, !dbg !19160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitFrom38C0800EEP(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !19161 {
entry:
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %iop_base = alloca i8*, align 8
  %warn_code = alloca i16, align 2
  %eep_config = alloca %struct.adveep_38C0800_config, align 2
  %tid = alloca i8, align 1
  %termination = alloca i8, align 1
  %sdtr_speed = alloca i16, align 2
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !19162, metadata !DIExpression()), !dbg !19163
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !19164, metadata !DIExpression()), !dbg !19165
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !19166, metadata !DIExpression()), !dbg !19167
  call void @llvm.dbg.declare(metadata %struct.adveep_38C0800_config* %eep_config, metadata !19168, metadata !DIExpression()), !dbg !19169
  call void @llvm.dbg.declare(metadata i8* %tid, metadata !19170, metadata !DIExpression()), !dbg !19171
  call void @llvm.dbg.declare(metadata i8* %termination, metadata !19172, metadata !DIExpression()), !dbg !19173
  call void @llvm.dbg.declare(metadata i16* %sdtr_speed, metadata !19174, metadata !DIExpression()), !dbg !19175
  store i16 0, i16* %sdtr_speed, align 2, !dbg !19175
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19176
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !19177
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !19177
  store i8* %1, i8** %iop_base, align 8, !dbg !19178
  store i16 0, i16* %warn_code, align 2, !dbg !19179
  %2 = load i8*, i8** %iop_base, align 8, !dbg !19180
  %call = call zeroext i16 @AdvGet38C0800EEPConfig(i8* %2, %struct.adveep_38C0800_config* %eep_config) #11, !dbg !19182
  %conv = zext i16 %call to i32, !dbg !19182
  %check_sum = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 25, !dbg !19183
  %3 = load i16, i16* %check_sum, align 2, !dbg !19183
  %conv2 = zext i16 %3 to i32, !dbg !19184
  %cmp = icmp ne i32 %conv, %conv2, !dbg !19185
  br i1 %cmp, label %if.then, label %if.end, !dbg !19186

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %warn_code, align 2, !dbg !19187
  %conv4 = zext i16 %4 to i32, !dbg !19187
  %or = or i32 %conv4, 2, !dbg !19187
  %conv5 = trunc i32 %or to i16, !dbg !19187
  store i16 %conv5, i16* %warn_code, align 2, !dbg !19187
  %5 = bitcast %struct.adveep_38C0800_config* %eep_config to i8*, !dbg !19189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 2 bitcast (%struct.adveep_38C0800_config* @Default_38C0800_EEPROM_Config to i8*), i64 128, i1 false), !dbg !19189
  %6 = load i8*, i8** %iop_base, align 8, !dbg !19190
  %call6 = call zeroext i16 @AdvReadEEPWord(i8* %6, i32 20) #11, !dbg !19191
  %serial_number_word3 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 24, !dbg !19192
  store i16 %call6, i16* %serial_number_word3, align 2, !dbg !19193
  %7 = load i8*, i8** %iop_base, align 8, !dbg !19194
  %call7 = call zeroext i16 @AdvReadEEPWord(i8* %7, i32 19) #11, !dbg !19195
  %serial_number_word2 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 23, !dbg !19196
  store i16 %call7, i16* %serial_number_word2, align 2, !dbg !19197
  %8 = load i8*, i8** %iop_base, align 8, !dbg !19198
  %call8 = call zeroext i16 @AdvReadEEPWord(i8* %8, i32 18) #11, !dbg !19199
  %serial_number_word1 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 22, !dbg !19200
  store i16 %call8, i16* %serial_number_word1, align 2, !dbg !19201
  %9 = load i8*, i8** %iop_base, align 8, !dbg !19202
  call void @AdvSet38C0800EEPConfig(i8* %9, %struct.adveep_38C0800_config* %eep_config) #11, !dbg !19203
  br label %if.end, !dbg !19204

if.end:                                           ; preds = %if.then, %entry
  %wdtr_able = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 3, !dbg !19205
  %10 = load i16, i16* %wdtr_able, align 2, !dbg !19205
  %11 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19206
  %wdtr_able9 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %11, i32 0, i32 3, !dbg !19207
  store i16 %10, i16* %wdtr_able9, align 4, !dbg !19208
  %sdtr_speed1 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 4, !dbg !19209
  %12 = load i16, i16* %sdtr_speed1, align 2, !dbg !19209
  %13 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19210
  %sdtr_speed110 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %13, i32 0, i32 6, !dbg !19211
  store i16 %12, i16* %sdtr_speed110, align 2, !dbg !19212
  %sdtr_speed2 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 16, !dbg !19213
  %14 = load i16, i16* %sdtr_speed2, align 2, !dbg !19213
  %15 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19214
  %sdtr_speed211 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %15, i32 0, i32 7, !dbg !19215
  store i16 %14, i16* %sdtr_speed211, align 4, !dbg !19216
  %sdtr_speed3 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 17, !dbg !19217
  %16 = load i16, i16* %sdtr_speed3, align 2, !dbg !19217
  %17 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19218
  %sdtr_speed312 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %17, i32 0, i32 8, !dbg !19219
  store i16 %16, i16* %sdtr_speed312, align 2, !dbg !19220
  %sdtr_speed4 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 21, !dbg !19221
  %18 = load i16, i16* %sdtr_speed4, align 2, !dbg !19221
  %19 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19222
  %sdtr_speed413 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %19, i32 0, i32 9, !dbg !19223
  store i16 %18, i16* %sdtr_speed413, align 8, !dbg !19224
  %tagqng_able = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 6, !dbg !19225
  %20 = load i16, i16* %tagqng_able, align 2, !dbg !19225
  %21 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19226
  %tagqng_able14 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %21, i32 0, i32 10, !dbg !19227
  store i16 %20, i16* %tagqng_able14, align 2, !dbg !19228
  %disc_enable = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 2, !dbg !19229
  %22 = load i16, i16* %disc_enable, align 2, !dbg !19229
  %23 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19230
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %23, i32 0, i32 28, !dbg !19231
  %24 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !19231
  %disc_enable15 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %24, i32 0, i32 0, !dbg !19232
  store i16 %22, i16* %disc_enable15, align 2, !dbg !19233
  %max_host_qng = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19234
  %25 = load i8, i8* %max_host_qng, align 2, !dbg !19234
  %26 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19235
  %max_host_qng16 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %26, i32 0, i32 16, !dbg !19236
  store i8 %25, i8* %max_host_qng16, align 4, !dbg !19237
  %max_dvc_qng = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19238
  %27 = load i8, i8* %max_dvc_qng, align 1, !dbg !19238
  %28 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19239
  %max_dvc_qng17 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %28, i32 0, i32 12, !dbg !19240
  store i8 %27, i8* %max_dvc_qng17, align 2, !dbg !19241
  %adapter_scsi_id = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 9, !dbg !19242
  %29 = load i8, i8* %adapter_scsi_id, align 2, !dbg !19242
  %conv18 = zext i8 %29 to i32, !dbg !19243
  %and = and i32 %conv18, 15, !dbg !19244
  %conv19 = trunc i32 %and to i8, !dbg !19245
  %30 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19246
  %chip_scsi_id = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %30, i32 0, i32 19, !dbg !19247
  store i8 %conv19, i8* %chip_scsi_id, align 8, !dbg !19248
  %start_motor = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 5, !dbg !19249
  %31 = load i16, i16* %start_motor, align 2, !dbg !19249
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19250
  %start_motor20 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %32, i32 0, i32 13, !dbg !19251
  store i16 %31, i16* %start_motor20, align 8, !dbg !19252
  %scsi_reset_delay = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 11, !dbg !19253
  %33 = load i8, i8* %scsi_reset_delay, align 2, !dbg !19253
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19254
  %scsi_reset_wait = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %34, i32 0, i32 14, !dbg !19255
  store i8 %33, i8* %scsi_reset_wait, align 2, !dbg !19256
  %bios_ctrl = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 15, !dbg !19257
  %35 = load i16, i16* %bios_ctrl, align 2, !dbg !19257
  %36 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19258
  %bios_ctrl21 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %36, i32 0, i32 2, !dbg !19259
  store i16 %35, i16* %bios_ctrl21, align 2, !dbg !19260
  %scam_tolerant = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 8, !dbg !19261
  %37 = load i16, i16* %scam_tolerant, align 2, !dbg !19261
  %38 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19262
  %no_scam = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %38, i32 0, i32 17, !dbg !19263
  store i16 %37, i16* %no_scam, align 2, !dbg !19264
  %serial_number_word122 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 22, !dbg !19265
  %39 = load i16, i16* %serial_number_word122, align 2, !dbg !19265
  %40 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19266
  %cfg23 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %40, i32 0, i32 28, !dbg !19267
  %41 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg23, align 8, !dbg !19267
  %serial1 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %41, i32 0, i32 6, !dbg !19268
  store i16 %39, i16* %serial1, align 2, !dbg !19269
  %serial_number_word224 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 23, !dbg !19270
  %42 = load i16, i16* %serial_number_word224, align 2, !dbg !19270
  %43 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19271
  %cfg25 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %43, i32 0, i32 28, !dbg !19272
  %44 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg25, align 8, !dbg !19272
  %serial2 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %44, i32 0, i32 7, !dbg !19273
  store i16 %42, i16* %serial2, align 2, !dbg !19274
  %serial_number_word326 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 24, !dbg !19275
  %45 = load i16, i16* %serial_number_word326, align 2, !dbg !19275
  %46 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19276
  %cfg27 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %46, i32 0, i32 28, !dbg !19277
  %47 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg27, align 8, !dbg !19277
  %serial3 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %47, i32 0, i32 8, !dbg !19278
  store i16 %45, i16* %serial3, align 2, !dbg !19279
  %48 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19280
  %sdtr_able = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %48, i32 0, i32 4, !dbg !19281
  store i16 0, i16* %sdtr_able, align 2, !dbg !19282
  store i8 0, i8* %tid, align 1, !dbg !19283
  br label %for.cond, !dbg !19285

for.cond:                                         ; preds = %for.inc, %if.end
  %49 = load i8, i8* %tid, align 1, !dbg !19286
  %conv28 = zext i8 %49 to i32, !dbg !19286
  %cmp29 = icmp sle i32 %conv28, 15, !dbg !19288
  br i1 %cmp29, label %for.body, label %for.end, !dbg !19289

for.body:                                         ; preds = %for.cond
  %50 = load i8, i8* %tid, align 1, !dbg !19290
  %conv31 = zext i8 %50 to i32, !dbg !19290
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !19293
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !19294

if.then34:                                        ; preds = %for.body
  %51 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19295
  %sdtr_speed135 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %51, i32 0, i32 6, !dbg !19297
  %52 = load i16, i16* %sdtr_speed135, align 2, !dbg !19297
  store i16 %52, i16* %sdtr_speed, align 2, !dbg !19298
  br label %if.end56, !dbg !19299

if.else:                                          ; preds = %for.body
  %53 = load i8, i8* %tid, align 1, !dbg !19300
  %conv36 = zext i8 %53 to i32, !dbg !19300
  %cmp37 = icmp eq i32 %conv36, 4, !dbg !19302
  br i1 %cmp37, label %if.then39, label %if.else41, !dbg !19303

if.then39:                                        ; preds = %if.else
  %54 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19304
  %sdtr_speed240 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %54, i32 0, i32 7, !dbg !19306
  %55 = load i16, i16* %sdtr_speed240, align 4, !dbg !19306
  store i16 %55, i16* %sdtr_speed, align 2, !dbg !19307
  br label %if.end55, !dbg !19308

if.else41:                                        ; preds = %if.else
  %56 = load i8, i8* %tid, align 1, !dbg !19309
  %conv42 = zext i8 %56 to i32, !dbg !19309
  %cmp43 = icmp eq i32 %conv42, 8, !dbg !19311
  br i1 %cmp43, label %if.then45, label %if.else47, !dbg !19312

if.then45:                                        ; preds = %if.else41
  %57 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19313
  %sdtr_speed346 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %57, i32 0, i32 8, !dbg !19315
  %58 = load i16, i16* %sdtr_speed346, align 2, !dbg !19315
  store i16 %58, i16* %sdtr_speed, align 2, !dbg !19316
  br label %if.end54, !dbg !19317

if.else47:                                        ; preds = %if.else41
  %59 = load i8, i8* %tid, align 1, !dbg !19318
  %conv48 = zext i8 %59 to i32, !dbg !19318
  %cmp49 = icmp eq i32 %conv48, 12, !dbg !19320
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !19321

if.then51:                                        ; preds = %if.else47
  %60 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19322
  %sdtr_speed452 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %60, i32 0, i32 9, !dbg !19324
  %61 = load i16, i16* %sdtr_speed452, align 8, !dbg !19324
  store i16 %61, i16* %sdtr_speed, align 2, !dbg !19325
  br label %if.end53, !dbg !19326

if.end53:                                         ; preds = %if.then51, %if.else47
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then45
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then39
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then34
  %62 = load i16, i16* %sdtr_speed, align 2, !dbg !19327
  %conv57 = zext i16 %62 to i32, !dbg !19327
  %and58 = and i32 %conv57, 15, !dbg !19329
  %tobool = icmp ne i32 %and58, 0, !dbg !19329
  br i1 %tobool, label %if.then59, label %if.end65, !dbg !19330

if.then59:                                        ; preds = %if.end56
  %63 = load i8, i8* %tid, align 1, !dbg !19331
  %conv60 = zext i8 %63 to i32, !dbg !19331
  %shl = shl i32 1, %conv60, !dbg !19333
  %64 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19334
  %sdtr_able61 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %64, i32 0, i32 4, !dbg !19335
  %65 = load i16, i16* %sdtr_able61, align 2, !dbg !19336
  %conv62 = zext i16 %65 to i32, !dbg !19336
  %or63 = or i32 %conv62, %shl, !dbg !19336
  %conv64 = trunc i32 %or63 to i16, !dbg !19336
  store i16 %conv64, i16* %sdtr_able61, align 2, !dbg !19336
  br label %if.end65, !dbg !19337

if.end65:                                         ; preds = %if.then59, %if.end56
  %66 = load i16, i16* %sdtr_speed, align 2, !dbg !19338
  %conv66 = zext i16 %66 to i32, !dbg !19338
  %shr = ashr i32 %conv66, 4, !dbg !19338
  %conv67 = trunc i32 %shr to i16, !dbg !19338
  store i16 %conv67, i16* %sdtr_speed, align 2, !dbg !19338
  br label %for.inc, !dbg !19339

for.inc:                                          ; preds = %if.end65
  %67 = load i8, i8* %tid, align 1, !dbg !19340
  %inc = add i8 %67, 1, !dbg !19340
  store i8 %inc, i8* %tid, align 1, !dbg !19340
  br label %for.cond, !dbg !19341, !llvm.loop !19342

for.end:                                          ; preds = %for.cond
  %max_host_qng68 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19344
  %68 = load i8, i8* %max_host_qng68, align 2, !dbg !19344
  %conv69 = zext i8 %68 to i32, !dbg !19346
  %cmp70 = icmp sgt i32 %conv69, 253, !dbg !19347
  br i1 %cmp70, label %if.then72, label %if.else74, !dbg !19348

if.then72:                                        ; preds = %for.end
  %max_host_qng73 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19349
  store i8 -3, i8* %max_host_qng73, align 2, !dbg !19351
  br label %if.end90, !dbg !19352

if.else74:                                        ; preds = %for.end
  %max_host_qng75 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19353
  %69 = load i8, i8* %max_host_qng75, align 2, !dbg !19353
  %conv76 = zext i8 %69 to i32, !dbg !19355
  %cmp77 = icmp slt i32 %conv76, 16, !dbg !19356
  br i1 %cmp77, label %if.then79, label %if.end89, !dbg !19357

if.then79:                                        ; preds = %if.else74
  %max_host_qng80 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19358
  %70 = load i8, i8* %max_host_qng80, align 2, !dbg !19358
  %conv81 = zext i8 %70 to i32, !dbg !19361
  %cmp82 = icmp eq i32 %conv81, 0, !dbg !19362
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !19363

if.then84:                                        ; preds = %if.then79
  %max_host_qng85 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19364
  store i8 -3, i8* %max_host_qng85, align 2, !dbg !19366
  br label %if.end88, !dbg !19367

if.else86:                                        ; preds = %if.then79
  %max_host_qng87 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19368
  store i8 16, i8* %max_host_qng87, align 2, !dbg !19370
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.then84
  br label %if.end89, !dbg !19371

if.end89:                                         ; preds = %if.end88, %if.else74
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then72
  %max_dvc_qng91 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19372
  %71 = load i8, i8* %max_dvc_qng91, align 1, !dbg !19372
  %conv92 = zext i8 %71 to i32, !dbg !19374
  %cmp93 = icmp sgt i32 %conv92, 63, !dbg !19375
  br i1 %cmp93, label %if.then95, label %if.else97, !dbg !19376

if.then95:                                        ; preds = %if.end90
  %max_dvc_qng96 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19377
  store i8 63, i8* %max_dvc_qng96, align 1, !dbg !19379
  br label %if.end113, !dbg !19380

if.else97:                                        ; preds = %if.end90
  %max_dvc_qng98 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19381
  %72 = load i8, i8* %max_dvc_qng98, align 1, !dbg !19381
  %conv99 = zext i8 %72 to i32, !dbg !19383
  %cmp100 = icmp slt i32 %conv99, 4, !dbg !19384
  br i1 %cmp100, label %if.then102, label %if.end112, !dbg !19385

if.then102:                                       ; preds = %if.else97
  %max_dvc_qng103 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19386
  %73 = load i8, i8* %max_dvc_qng103, align 1, !dbg !19386
  %conv104 = zext i8 %73 to i32, !dbg !19389
  %cmp105 = icmp eq i32 %conv104, 0, !dbg !19390
  br i1 %cmp105, label %if.then107, label %if.else109, !dbg !19391

if.then107:                                       ; preds = %if.then102
  %max_dvc_qng108 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19392
  store i8 63, i8* %max_dvc_qng108, align 1, !dbg !19394
  br label %if.end111, !dbg !19395

if.else109:                                       ; preds = %if.then102
  %max_dvc_qng110 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19396
  store i8 4, i8* %max_dvc_qng110, align 1, !dbg !19398
  br label %if.end111

if.end111:                                        ; preds = %if.else109, %if.then107
  br label %if.end112, !dbg !19399

if.end112:                                        ; preds = %if.end111, %if.else97
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then95
  %max_dvc_qng114 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19400
  %74 = load i8, i8* %max_dvc_qng114, align 1, !dbg !19400
  %conv115 = zext i8 %74 to i32, !dbg !19402
  %max_host_qng116 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19403
  %75 = load i8, i8* %max_host_qng116, align 2, !dbg !19403
  %conv117 = zext i8 %75 to i32, !dbg !19404
  %cmp118 = icmp sgt i32 %conv115, %conv117, !dbg !19405
  br i1 %cmp118, label %if.then120, label %if.end123, !dbg !19406

if.then120:                                       ; preds = %if.end113
  %max_host_qng121 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19407
  %76 = load i8, i8* %max_host_qng121, align 2, !dbg !19407
  %max_dvc_qng122 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19409
  store i8 %76, i8* %max_dvc_qng122, align 1, !dbg !19410
  br label %if.end123, !dbg !19411

if.end123:                                        ; preds = %if.then120, %if.end113
  %max_host_qng124 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 18, !dbg !19412
  %77 = load i8, i8* %max_host_qng124, align 2, !dbg !19412
  %78 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19413
  %max_host_qng125 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %78, i32 0, i32 16, !dbg !19414
  store i8 %77, i8* %max_host_qng125, align 4, !dbg !19415
  %max_dvc_qng126 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 19, !dbg !19416
  %79 = load i8, i8* %max_dvc_qng126, align 1, !dbg !19416
  %80 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19417
  %max_dvc_qng127 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %80, i32 0, i32 12, !dbg !19418
  store i8 %79, i8* %max_dvc_qng127, align 2, !dbg !19419
  %termination_se = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 13, !dbg !19420
  %81 = load i8, i8* %termination_se, align 2, !dbg !19420
  %conv128 = zext i8 %81 to i32, !dbg !19422
  %cmp129 = icmp eq i32 %conv128, 0, !dbg !19423
  br i1 %cmp129, label %if.then131, label %if.else132, !dbg !19424

if.then131:                                       ; preds = %if.end123
  store i8 0, i8* %termination, align 1, !dbg !19425
  br label %if.end157, !dbg !19427

if.else132:                                       ; preds = %if.end123
  %termination_se133 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 13, !dbg !19428
  %82 = load i8, i8* %termination_se133, align 2, !dbg !19428
  %conv134 = zext i8 %82 to i32, !dbg !19431
  %cmp135 = icmp eq i32 %conv134, 1, !dbg !19432
  br i1 %cmp135, label %if.then137, label %if.else138, !dbg !19433

if.then137:                                       ; preds = %if.else132
  store i8 0, i8* %termination, align 1, !dbg !19434
  br label %if.end156, !dbg !19436

if.else138:                                       ; preds = %if.else132
  %termination_se139 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 13, !dbg !19437
  %83 = load i8, i8* %termination_se139, align 2, !dbg !19437
  %conv140 = zext i8 %83 to i32, !dbg !19439
  %cmp141 = icmp eq i32 %conv140, 2, !dbg !19440
  br i1 %cmp141, label %if.then143, label %if.else144, !dbg !19441

if.then143:                                       ; preds = %if.else138
  store i8 32, i8* %termination, align 1, !dbg !19442
  br label %if.end155, !dbg !19444

if.else144:                                       ; preds = %if.else138
  %termination_se145 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 13, !dbg !19445
  %84 = load i8, i8* %termination_se145, align 2, !dbg !19445
  %conv146 = zext i8 %84 to i32, !dbg !19447
  %cmp147 = icmp eq i32 %conv146, 3, !dbg !19448
  br i1 %cmp147, label %if.then149, label %if.else150, !dbg !19449

if.then149:                                       ; preds = %if.else144
  store i8 48, i8* %termination, align 1, !dbg !19450
  br label %if.end154, !dbg !19452

if.else150:                                       ; preds = %if.else144
  store i8 0, i8* %termination, align 1, !dbg !19453
  %85 = load i16, i16* %warn_code, align 2, !dbg !19455
  %conv151 = zext i16 %85 to i32, !dbg !19455
  %or152 = or i32 %conv151, 4, !dbg !19455
  %conv153 = trunc i32 %or152 to i16, !dbg !19455
  store i16 %conv153, i16* %warn_code, align 2, !dbg !19455
  br label %if.end154

if.end154:                                        ; preds = %if.else150, %if.then149
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then143
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then137
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then131
  %termination_lvd = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 14, !dbg !19456
  %86 = load i8, i8* %termination_lvd, align 1, !dbg !19456
  %conv158 = zext i8 %86 to i32, !dbg !19458
  %cmp159 = icmp eq i32 %conv158, 0, !dbg !19459
  br i1 %cmp159, label %if.then161, label %if.else164, !dbg !19460

if.then161:                                       ; preds = %if.end157
  %87 = load i8, i8* %termination, align 1, !dbg !19461
  %88 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19463
  %cfg162 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %88, i32 0, i32 28, !dbg !19464
  %89 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg162, align 8, !dbg !19464
  %termination163 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %89, i32 0, i32 2, !dbg !19465
  store i8 %87, i8* %termination163, align 1, !dbg !19466
  br label %if.end203, !dbg !19467

if.else164:                                       ; preds = %if.end157
  %termination_lvd165 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 14, !dbg !19468
  %90 = load i8, i8* %termination_lvd165, align 1, !dbg !19468
  %conv166 = zext i8 %90 to i32, !dbg !19471
  %cmp167 = icmp eq i32 %conv166, 1, !dbg !19472
  br i1 %cmp167, label %if.then169, label %if.else172, !dbg !19473

if.then169:                                       ; preds = %if.else164
  %91 = load i8, i8* %termination, align 1, !dbg !19474
  %92 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19476
  %cfg170 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %92, i32 0, i32 28, !dbg !19477
  %93 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg170, align 8, !dbg !19477
  %termination171 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %93, i32 0, i32 2, !dbg !19478
  store i8 %91, i8* %termination171, align 1, !dbg !19479
  br label %if.end202, !dbg !19480

if.else172:                                       ; preds = %if.else164
  %termination_lvd173 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 14, !dbg !19481
  %94 = load i8, i8* %termination_lvd173, align 1, !dbg !19481
  %conv174 = zext i8 %94 to i32, !dbg !19483
  %cmp175 = icmp eq i32 %conv174, 2, !dbg !19484
  br i1 %cmp175, label %if.then177, label %if.else183, !dbg !19485

if.then177:                                       ; preds = %if.else172
  %95 = load i8, i8* %termination, align 1, !dbg !19486
  %conv178 = zext i8 %95 to i32, !dbg !19486
  %or179 = or i32 %conv178, 128, !dbg !19488
  %conv180 = trunc i32 %or179 to i8, !dbg !19486
  %96 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19489
  %cfg181 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %96, i32 0, i32 28, !dbg !19490
  %97 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg181, align 8, !dbg !19490
  %termination182 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %97, i32 0, i32 2, !dbg !19491
  store i8 %conv180, i8* %termination182, align 1, !dbg !19492
  br label %if.end201, !dbg !19493

if.else183:                                       ; preds = %if.else172
  %termination_lvd184 = getelementptr inbounds %struct.adveep_38C0800_config, %struct.adveep_38C0800_config* %eep_config, i32 0, i32 14, !dbg !19494
  %98 = load i8, i8* %termination_lvd184, align 1, !dbg !19494
  %conv185 = zext i8 %98 to i32, !dbg !19496
  %cmp186 = icmp eq i32 %conv185, 3, !dbg !19497
  br i1 %cmp186, label %if.then188, label %if.else194, !dbg !19498

if.then188:                                       ; preds = %if.else183
  %99 = load i8, i8* %termination, align 1, !dbg !19499
  %conv189 = zext i8 %99 to i32, !dbg !19499
  %or190 = or i32 %conv189, 192, !dbg !19501
  %conv191 = trunc i32 %or190 to i8, !dbg !19499
  %100 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19502
  %cfg192 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %100, i32 0, i32 28, !dbg !19503
  %101 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg192, align 8, !dbg !19503
  %termination193 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %101, i32 0, i32 2, !dbg !19504
  store i8 %conv191, i8* %termination193, align 1, !dbg !19505
  br label %if.end200, !dbg !19506

if.else194:                                       ; preds = %if.else183
  %102 = load i8, i8* %termination, align 1, !dbg !19507
  %103 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19509
  %cfg195 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %103, i32 0, i32 28, !dbg !19510
  %104 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg195, align 8, !dbg !19510
  %termination196 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %104, i32 0, i32 2, !dbg !19511
  store i8 %102, i8* %termination196, align 1, !dbg !19512
  %105 = load i16, i16* %warn_code, align 2, !dbg !19513
  %conv197 = zext i16 %105 to i32, !dbg !19513
  %or198 = or i32 %conv197, 4, !dbg !19513
  %conv199 = trunc i32 %or198 to i16, !dbg !19513
  store i16 %conv199, i16* %warn_code, align 2, !dbg !19513
  br label %if.end200

if.end200:                                        ; preds = %if.else194, %if.then188
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.then177
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then169
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.then161
  %106 = load i16, i16* %warn_code, align 2, !dbg !19514
  %conv204 = zext i16 %106 to i32, !dbg !19514
  ret i32 %conv204, !dbg !19515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AdvInitFrom3550EEP(%struct.adv_dvc_var* %asc_dvc) #2 !dbg !19516 {
entry:
  %asc_dvc.addr = alloca %struct.adv_dvc_var*, align 8
  %iop_base = alloca i8*, align 8
  %warn_code = alloca i16, align 2
  %eep_config = alloca %struct.adveep_3550_config, align 2
  store %struct.adv_dvc_var* %asc_dvc, %struct.adv_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adv_dvc_var** %asc_dvc.addr, metadata !19517, metadata !DIExpression()), !dbg !19518
  call void @llvm.dbg.declare(metadata i8** %iop_base, metadata !19519, metadata !DIExpression()), !dbg !19520
  call void @llvm.dbg.declare(metadata i16* %warn_code, metadata !19521, metadata !DIExpression()), !dbg !19522
  call void @llvm.dbg.declare(metadata %struct.adveep_3550_config* %eep_config, metadata !19523, metadata !DIExpression()), !dbg !19524
  %0 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19525
  %iop_base1 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %0, i32 0, i32 0, !dbg !19526
  %1 = load i8*, i8** %iop_base1, align 8, !dbg !19526
  store i8* %1, i8** %iop_base, align 8, !dbg !19527
  store i16 0, i16* %warn_code, align 2, !dbg !19528
  %2 = load i8*, i8** %iop_base, align 8, !dbg !19529
  %call = call zeroext i16 @AdvGet3550EEPConfig(i8* %2, %struct.adveep_3550_config* %eep_config) #11, !dbg !19531
  %conv = zext i16 %call to i32, !dbg !19531
  %check_sum = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 25, !dbg !19532
  %3 = load i16, i16* %check_sum, align 2, !dbg !19532
  %conv2 = zext i16 %3 to i32, !dbg !19533
  %cmp = icmp ne i32 %conv, %conv2, !dbg !19534
  br i1 %cmp, label %if.then, label %if.end, !dbg !19535

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %warn_code, align 2, !dbg !19536
  %conv4 = zext i16 %4 to i32, !dbg !19536
  %or = or i32 %conv4, 2, !dbg !19536
  %conv5 = trunc i32 %or to i16, !dbg !19536
  store i16 %conv5, i16* %warn_code, align 2, !dbg !19536
  %5 = bitcast %struct.adveep_3550_config* %eep_config to i8*, !dbg !19538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 2 bitcast (%struct.adveep_3550_config* @Default_3550_EEPROM_Config to i8*), i64 74, i1 false), !dbg !19538
  %6 = load i8*, i8** %iop_base, align 8, !dbg !19539
  %call6 = call zeroext i16 @AdvReadEEPWord(i8* %6, i32 20) #11, !dbg !19540
  %serial_number_word3 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 24, !dbg !19541
  store i16 %call6, i16* %serial_number_word3, align 2, !dbg !19542
  %7 = load i8*, i8** %iop_base, align 8, !dbg !19543
  %call7 = call zeroext i16 @AdvReadEEPWord(i8* %7, i32 19) #11, !dbg !19544
  %serial_number_word2 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 23, !dbg !19545
  store i16 %call7, i16* %serial_number_word2, align 2, !dbg !19546
  %8 = load i8*, i8** %iop_base, align 8, !dbg !19547
  %call8 = call zeroext i16 @AdvReadEEPWord(i8* %8, i32 18) #11, !dbg !19548
  %serial_number_word1 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 22, !dbg !19549
  store i16 %call8, i16* %serial_number_word1, align 2, !dbg !19550
  %9 = load i8*, i8** %iop_base, align 8, !dbg !19551
  call void @AdvSet3550EEPConfig(i8* %9, %struct.adveep_3550_config* %eep_config) #11, !dbg !19552
  br label %if.end, !dbg !19553

if.end:                                           ; preds = %if.then, %entry
  %wdtr_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 3, !dbg !19554
  %10 = load i16, i16* %wdtr_able, align 2, !dbg !19554
  %11 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19555
  %wdtr_able9 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %11, i32 0, i32 3, !dbg !19556
  store i16 %10, i16* %wdtr_able9, align 4, !dbg !19557
  %sdtr_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 4, !dbg !19558
  %12 = load i16, i16* %sdtr_able, align 2, !dbg !19558
  %13 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19559
  %sdtr_able10 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %13, i32 0, i32 4, !dbg !19560
  store i16 %12, i16* %sdtr_able10, align 2, !dbg !19561
  %ultra_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 16, !dbg !19562
  %14 = load i16, i16* %ultra_able, align 2, !dbg !19562
  %15 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19563
  %ultra_able11 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %15, i32 0, i32 5, !dbg !19564
  store i16 %14, i16* %ultra_able11, align 8, !dbg !19565
  %tagqng_able = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 6, !dbg !19566
  %16 = load i16, i16* %tagqng_able, align 2, !dbg !19566
  %17 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19567
  %tagqng_able12 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %17, i32 0, i32 10, !dbg !19568
  store i16 %16, i16* %tagqng_able12, align 2, !dbg !19569
  %disc_enable = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 2, !dbg !19570
  %18 = load i16, i16* %disc_enable, align 2, !dbg !19570
  %19 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19571
  %cfg = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %19, i32 0, i32 28, !dbg !19572
  %20 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg, align 8, !dbg !19572
  %disc_enable13 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %20, i32 0, i32 0, !dbg !19573
  store i16 %18, i16* %disc_enable13, align 2, !dbg !19574
  %max_host_qng = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19575
  %21 = load i8, i8* %max_host_qng, align 2, !dbg !19575
  %22 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19576
  %max_host_qng14 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %22, i32 0, i32 16, !dbg !19577
  store i8 %21, i8* %max_host_qng14, align 4, !dbg !19578
  %max_dvc_qng = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19579
  %23 = load i8, i8* %max_dvc_qng, align 1, !dbg !19579
  %24 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19580
  %max_dvc_qng15 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %24, i32 0, i32 12, !dbg !19581
  store i8 %23, i8* %max_dvc_qng15, align 2, !dbg !19582
  %adapter_scsi_id = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 9, !dbg !19583
  %25 = load i8, i8* %adapter_scsi_id, align 2, !dbg !19583
  %conv16 = zext i8 %25 to i32, !dbg !19584
  %and = and i32 %conv16, 15, !dbg !19585
  %conv17 = trunc i32 %and to i8, !dbg !19586
  %26 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19587
  %chip_scsi_id = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %26, i32 0, i32 19, !dbg !19588
  store i8 %conv17, i8* %chip_scsi_id, align 8, !dbg !19589
  %start_motor = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 5, !dbg !19590
  %27 = load i16, i16* %start_motor, align 2, !dbg !19590
  %28 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19591
  %start_motor18 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %28, i32 0, i32 13, !dbg !19592
  store i16 %27, i16* %start_motor18, align 8, !dbg !19593
  %scsi_reset_delay = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 11, !dbg !19594
  %29 = load i8, i8* %scsi_reset_delay, align 2, !dbg !19594
  %30 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19595
  %scsi_reset_wait = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %30, i32 0, i32 14, !dbg !19596
  store i8 %29, i8* %scsi_reset_wait, align 2, !dbg !19597
  %bios_ctrl = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 15, !dbg !19598
  %31 = load i16, i16* %bios_ctrl, align 2, !dbg !19598
  %32 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19599
  %bios_ctrl19 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %32, i32 0, i32 2, !dbg !19600
  store i16 %31, i16* %bios_ctrl19, align 2, !dbg !19601
  %scam_tolerant = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 8, !dbg !19602
  %33 = load i16, i16* %scam_tolerant, align 2, !dbg !19602
  %34 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19603
  %no_scam = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %34, i32 0, i32 17, !dbg !19604
  store i16 %33, i16* %no_scam, align 2, !dbg !19605
  %serial_number_word120 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 22, !dbg !19606
  %35 = load i16, i16* %serial_number_word120, align 2, !dbg !19606
  %36 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19607
  %cfg21 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %36, i32 0, i32 28, !dbg !19608
  %37 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg21, align 8, !dbg !19608
  %serial1 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %37, i32 0, i32 6, !dbg !19609
  store i16 %35, i16* %serial1, align 2, !dbg !19610
  %serial_number_word222 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 23, !dbg !19611
  %38 = load i16, i16* %serial_number_word222, align 2, !dbg !19611
  %39 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19612
  %cfg23 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %39, i32 0, i32 28, !dbg !19613
  %40 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg23, align 8, !dbg !19613
  %serial2 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %40, i32 0, i32 7, !dbg !19614
  store i16 %38, i16* %serial2, align 2, !dbg !19615
  %serial_number_word324 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 24, !dbg !19616
  %41 = load i16, i16* %serial_number_word324, align 2, !dbg !19616
  %42 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19617
  %cfg25 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %42, i32 0, i32 28, !dbg !19618
  %43 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg25, align 8, !dbg !19618
  %serial3 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %43, i32 0, i32 8, !dbg !19619
  store i16 %41, i16* %serial3, align 2, !dbg !19620
  %max_host_qng26 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19621
  %44 = load i8, i8* %max_host_qng26, align 2, !dbg !19621
  %conv27 = zext i8 %44 to i32, !dbg !19623
  %cmp28 = icmp sgt i32 %conv27, 253, !dbg !19624
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !19625

if.then30:                                        ; preds = %if.end
  %max_host_qng31 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19626
  store i8 -3, i8* %max_host_qng31, align 2, !dbg !19628
  br label %if.end47, !dbg !19629

if.else:                                          ; preds = %if.end
  %max_host_qng32 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19630
  %45 = load i8, i8* %max_host_qng32, align 2, !dbg !19630
  %conv33 = zext i8 %45 to i32, !dbg !19632
  %cmp34 = icmp slt i32 %conv33, 16, !dbg !19633
  br i1 %cmp34, label %if.then36, label %if.end46, !dbg !19634

if.then36:                                        ; preds = %if.else
  %max_host_qng37 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19635
  %46 = load i8, i8* %max_host_qng37, align 2, !dbg !19635
  %conv38 = zext i8 %46 to i32, !dbg !19638
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !19639
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !19640

if.then41:                                        ; preds = %if.then36
  %max_host_qng42 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19641
  store i8 -3, i8* %max_host_qng42, align 2, !dbg !19643
  br label %if.end45, !dbg !19644

if.else43:                                        ; preds = %if.then36
  %max_host_qng44 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19645
  store i8 16, i8* %max_host_qng44, align 2, !dbg !19647
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then41
  br label %if.end46, !dbg !19648

if.end46:                                         ; preds = %if.end45, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then30
  %max_dvc_qng48 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19649
  %47 = load i8, i8* %max_dvc_qng48, align 1, !dbg !19649
  %conv49 = zext i8 %47 to i32, !dbg !19651
  %cmp50 = icmp sgt i32 %conv49, 63, !dbg !19652
  br i1 %cmp50, label %if.then52, label %if.else54, !dbg !19653

if.then52:                                        ; preds = %if.end47
  %max_dvc_qng53 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19654
  store i8 63, i8* %max_dvc_qng53, align 1, !dbg !19656
  br label %if.end70, !dbg !19657

if.else54:                                        ; preds = %if.end47
  %max_dvc_qng55 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19658
  %48 = load i8, i8* %max_dvc_qng55, align 1, !dbg !19658
  %conv56 = zext i8 %48 to i32, !dbg !19660
  %cmp57 = icmp slt i32 %conv56, 4, !dbg !19661
  br i1 %cmp57, label %if.then59, label %if.end69, !dbg !19662

if.then59:                                        ; preds = %if.else54
  %max_dvc_qng60 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19663
  %49 = load i8, i8* %max_dvc_qng60, align 1, !dbg !19663
  %conv61 = zext i8 %49 to i32, !dbg !19666
  %cmp62 = icmp eq i32 %conv61, 0, !dbg !19667
  br i1 %cmp62, label %if.then64, label %if.else66, !dbg !19668

if.then64:                                        ; preds = %if.then59
  %max_dvc_qng65 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19669
  store i8 63, i8* %max_dvc_qng65, align 1, !dbg !19671
  br label %if.end68, !dbg !19672

if.else66:                                        ; preds = %if.then59
  %max_dvc_qng67 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19673
  store i8 4, i8* %max_dvc_qng67, align 1, !dbg !19675
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.then64
  br label %if.end69, !dbg !19676

if.end69:                                         ; preds = %if.end68, %if.else54
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then52
  %max_dvc_qng71 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19677
  %50 = load i8, i8* %max_dvc_qng71, align 1, !dbg !19677
  %conv72 = zext i8 %50 to i32, !dbg !19679
  %max_host_qng73 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19680
  %51 = load i8, i8* %max_host_qng73, align 2, !dbg !19680
  %conv74 = zext i8 %51 to i32, !dbg !19681
  %cmp75 = icmp sgt i32 %conv72, %conv74, !dbg !19682
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !19683

if.then77:                                        ; preds = %if.end70
  %max_host_qng78 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19684
  %52 = load i8, i8* %max_host_qng78, align 2, !dbg !19684
  %max_dvc_qng79 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19686
  store i8 %52, i8* %max_dvc_qng79, align 1, !dbg !19687
  br label %if.end80, !dbg !19688

if.end80:                                         ; preds = %if.then77, %if.end70
  %max_host_qng81 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 18, !dbg !19689
  %53 = load i8, i8* %max_host_qng81, align 2, !dbg !19689
  %54 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19690
  %max_host_qng82 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %54, i32 0, i32 16, !dbg !19691
  store i8 %53, i8* %max_host_qng82, align 4, !dbg !19692
  %max_dvc_qng83 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 19, !dbg !19693
  %55 = load i8, i8* %max_dvc_qng83, align 1, !dbg !19693
  %56 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19694
  %max_dvc_qng84 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %56, i32 0, i32 12, !dbg !19695
  store i8 %55, i8* %max_dvc_qng84, align 2, !dbg !19696
  %termination = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 13, !dbg !19697
  %57 = load i8, i8* %termination, align 2, !dbg !19697
  %conv85 = zext i8 %57 to i32, !dbg !19699
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !19700
  br i1 %cmp86, label %if.then88, label %if.else91, !dbg !19701

if.then88:                                        ; preds = %if.end80
  %58 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19702
  %cfg89 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %58, i32 0, i32 28, !dbg !19704
  %59 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg89, align 8, !dbg !19704
  %termination90 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %59, i32 0, i32 2, !dbg !19705
  store i8 0, i8* %termination90, align 1, !dbg !19706
  br label %if.end124, !dbg !19707

if.else91:                                        ; preds = %if.end80
  %termination92 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 13, !dbg !19708
  %60 = load i8, i8* %termination92, align 2, !dbg !19708
  %conv93 = zext i8 %60 to i32, !dbg !19711
  %cmp94 = icmp eq i32 %conv93, 1, !dbg !19712
  br i1 %cmp94, label %if.then96, label %if.else99, !dbg !19713

if.then96:                                        ; preds = %if.else91
  %61 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19714
  %cfg97 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %61, i32 0, i32 28, !dbg !19716
  %62 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg97, align 8, !dbg !19716
  %termination98 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %62, i32 0, i32 2, !dbg !19717
  store i8 64, i8* %termination98, align 1, !dbg !19718
  br label %if.end123, !dbg !19719

if.else99:                                        ; preds = %if.else91
  %termination100 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 13, !dbg !19720
  %63 = load i8, i8* %termination100, align 2, !dbg !19720
  %conv101 = zext i8 %63 to i32, !dbg !19722
  %cmp102 = icmp eq i32 %conv101, 2, !dbg !19723
  br i1 %cmp102, label %if.then104, label %if.else107, !dbg !19724

if.then104:                                       ; preds = %if.else99
  %64 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19725
  %cfg105 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %64, i32 0, i32 28, !dbg !19727
  %65 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg105, align 8, !dbg !19727
  %termination106 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %65, i32 0, i32 2, !dbg !19728
  store i8 96, i8* %termination106, align 1, !dbg !19729
  br label %if.end122, !dbg !19730

if.else107:                                       ; preds = %if.else99
  %termination108 = getelementptr inbounds %struct.adveep_3550_config, %struct.adveep_3550_config* %eep_config, i32 0, i32 13, !dbg !19731
  %66 = load i8, i8* %termination108, align 2, !dbg !19731
  %conv109 = zext i8 %66 to i32, !dbg !19733
  %cmp110 = icmp eq i32 %conv109, 3, !dbg !19734
  br i1 %cmp110, label %if.then112, label %if.else115, !dbg !19735

if.then112:                                       ; preds = %if.else107
  %67 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19736
  %cfg113 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %67, i32 0, i32 28, !dbg !19738
  %68 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg113, align 8, !dbg !19738
  %termination114 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %68, i32 0, i32 2, !dbg !19739
  store i8 112, i8* %termination114, align 1, !dbg !19740
  br label %if.end121, !dbg !19741

if.else115:                                       ; preds = %if.else107
  %69 = load %struct.adv_dvc_var*, %struct.adv_dvc_var** %asc_dvc.addr, align 8, !dbg !19742
  %cfg116 = getelementptr inbounds %struct.adv_dvc_var, %struct.adv_dvc_var* %69, i32 0, i32 28, !dbg !19744
  %70 = load %struct.adv_dvc_cfg*, %struct.adv_dvc_cfg** %cfg116, align 8, !dbg !19744
  %termination117 = getelementptr inbounds %struct.adv_dvc_cfg, %struct.adv_dvc_cfg* %70, i32 0, i32 2, !dbg !19745
  store i8 0, i8* %termination117, align 1, !dbg !19746
  %71 = load i16, i16* %warn_code, align 2, !dbg !19747
  %conv118 = zext i16 %71 to i32, !dbg !19747
  %or119 = or i32 %conv118, 4, !dbg !19747
  %conv120 = trunc i32 %or119 to i16, !dbg !19747
  store i16 %conv120, i16* %warn_code, align 2, !dbg !19747
  br label %if.end121

if.end121:                                        ; preds = %if.else115, %if.then112
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then104
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then96
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then88
  %72 = load i16, i16* %warn_code, align 2, !dbg !19748
  %conv125 = zext i16 %72 to i32, !dbg !19748
  ret i32 %conv125, !dbg !19749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AdvGet38C1600EEPConfig(i8* %iop_base, %struct.adveep_38C1600_config* %cfg_buf) #2 !dbg !19750 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %cfg_buf.addr = alloca %struct.adveep_38C1600_config*, align 8
  %wval = alloca i16, align 2
  %chksum = alloca i16, align 2
  %wbuf = alloca i16*, align 8
  %eep_addr = alloca i32, align 4
  %charfields = alloca i16*, align 8
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !19753, metadata !DIExpression()), !dbg !19754
  store %struct.adveep_38C1600_config* %cfg_buf, %struct.adveep_38C1600_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adveep_38C1600_config** %cfg_buf.addr, metadata !19755, metadata !DIExpression()), !dbg !19756
  call void @llvm.dbg.declare(metadata i16* %wval, metadata !19757, metadata !DIExpression()), !dbg !19758
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !19759, metadata !DIExpression()), !dbg !19760
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !19761, metadata !DIExpression()), !dbg !19762
  call void @llvm.dbg.declare(metadata i32* %eep_addr, metadata !19763, metadata !DIExpression()), !dbg !19764
  call void @llvm.dbg.declare(metadata i16** %charfields, metadata !19765, metadata !DIExpression()), !dbg !19766
  store i16* getelementptr inbounds (%struct.adveep_38C1600_config, %struct.adveep_38C1600_config* @ADVEEP_38C1600_Config_Field_IsChar, i32 0, i32 0), i16** %charfields, align 8, !dbg !19767
  %0 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %cfg_buf.addr, align 8, !dbg !19768
  %1 = bitcast %struct.adveep_38C1600_config* %0 to i16*, !dbg !19769
  store i16* %1, i16** %wbuf, align 8, !dbg !19770
  store i16 0, i16* %chksum, align 2, !dbg !19771
  store i32 0, i32* %eep_addr, align 4, !dbg !19772
  br label %for.cond, !dbg !19774

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %eep_addr, align 4, !dbg !19775
  %cmp = icmp slt i32 %2, 21, !dbg !19777
  br i1 %cmp, label %for.body, label %for.end, !dbg !19778

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !19779
  %4 = load i32, i32* %eep_addr, align 4, !dbg !19781
  %call = call zeroext i16 @AdvReadEEPWord(i8* %3, i32 %4) #11, !dbg !19782
  store i16 %call, i16* %wval, align 2, !dbg !19783
  %5 = load i16, i16* %wval, align 2, !dbg !19784
  %conv = zext i16 %5 to i32, !dbg !19784
  %6 = load i16, i16* %chksum, align 2, !dbg !19785
  %conv1 = zext i16 %6 to i32, !dbg !19785
  %add = add i32 %conv1, %conv, !dbg !19785
  %conv2 = trunc i32 %add to i16, !dbg !19785
  store i16 %conv2, i16* %chksum, align 2, !dbg !19785
  %7 = load i16*, i16** %charfields, align 8, !dbg !19786
  %incdec.ptr = getelementptr i16, i16* %7, i32 1, !dbg !19786
  store i16* %incdec.ptr, i16** %charfields, align 8, !dbg !19786
  %8 = load i16, i16* %7, align 2, !dbg !19788
  %tobool = icmp ne i16 %8, 0, !dbg !19788
  br i1 %tobool, label %if.then, label %if.else, !dbg !19789

if.then:                                          ; preds = %for.body
  %9 = load i16, i16* %wval, align 2, !dbg !19790
  %10 = load i16*, i16** %wbuf, align 8, !dbg !19792
  store i16 %9, i16* %10, align 2, !dbg !19793
  br label %if.end, !dbg !19794

if.else:                                          ; preds = %for.body
  %11 = load i16, i16* %wval, align 2, !dbg !19795
  %12 = load i16*, i16** %wbuf, align 8, !dbg !19797
  store i16 %11, i16* %12, align 2, !dbg !19798
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !19799

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %eep_addr, align 4, !dbg !19800
  %inc = add i32 %13, 1, !dbg !19800
  store i32 %inc, i32* %eep_addr, align 4, !dbg !19800
  %14 = load i16*, i16** %wbuf, align 8, !dbg !19801
  %incdec.ptr3 = getelementptr i16, i16* %14, i32 1, !dbg !19801
  store i16* %incdec.ptr3, i16** %wbuf, align 8, !dbg !19801
  br label %for.cond, !dbg !19802, !llvm.loop !19803

for.end:                                          ; preds = %for.cond
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !19805
  %16 = load i32, i32* %eep_addr, align 4, !dbg !19806
  %call4 = call zeroext i16 @AdvReadEEPWord(i8* %15, i32 %16) #11, !dbg !19807
  %17 = load i16*, i16** %wbuf, align 8, !dbg !19808
  store i16 %call4, i16* %17, align 2, !dbg !19809
  %18 = load i16*, i16** %wbuf, align 8, !dbg !19810
  %incdec.ptr5 = getelementptr i16, i16* %18, i32 1, !dbg !19810
  store i16* %incdec.ptr5, i16** %wbuf, align 8, !dbg !19810
  %19 = load i16*, i16** %charfields, align 8, !dbg !19811
  %incdec.ptr6 = getelementptr i16, i16* %19, i32 1, !dbg !19811
  store i16* %incdec.ptr6, i16** %charfields, align 8, !dbg !19811
  store i32 22, i32* %eep_addr, align 4, !dbg !19812
  br label %for.cond7, !dbg !19814

for.cond7:                                        ; preds = %for.inc16, %for.end
  %20 = load i32, i32* %eep_addr, align 4, !dbg !19815
  %cmp8 = icmp slt i32 %20, 30, !dbg !19817
  br i1 %cmp8, label %for.body10, label %for.end19, !dbg !19818

for.body10:                                       ; preds = %for.cond7
  %21 = load i8*, i8** %iop_base.addr, align 8, !dbg !19819
  %22 = load i32, i32* %eep_addr, align 4, !dbg !19821
  %call11 = call zeroext i16 @AdvReadEEPWord(i8* %21, i32 %22) #11, !dbg !19822
  %23 = load i16*, i16** %wbuf, align 8, !dbg !19823
  store i16 %call11, i16* %23, align 2, !dbg !19824
  %24 = load i16*, i16** %charfields, align 8, !dbg !19825
  %incdec.ptr12 = getelementptr i16, i16* %24, i32 1, !dbg !19825
  store i16* %incdec.ptr12, i16** %charfields, align 8, !dbg !19825
  %25 = load i16, i16* %24, align 2, !dbg !19827
  %tobool13 = icmp ne i16 %25, 0, !dbg !19827
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !19828

if.then14:                                        ; preds = %for.body10
  %26 = load i16*, i16** %wbuf, align 8, !dbg !19829
  %27 = load i16, i16* %26, align 2, !dbg !19829
  %28 = load i16*, i16** %wbuf, align 8, !dbg !19831
  store i16 %27, i16* %28, align 2, !dbg !19832
  br label %if.end15, !dbg !19833

if.end15:                                         ; preds = %if.then14, %for.body10
  br label %for.inc16, !dbg !19834

for.inc16:                                        ; preds = %if.end15
  %29 = load i32, i32* %eep_addr, align 4, !dbg !19835
  %inc17 = add i32 %29, 1, !dbg !19835
  store i32 %inc17, i32* %eep_addr, align 4, !dbg !19835
  %30 = load i16*, i16** %wbuf, align 8, !dbg !19836
  %incdec.ptr18 = getelementptr i16, i16* %30, i32 1, !dbg !19836
  store i16* %incdec.ptr18, i16** %wbuf, align 8, !dbg !19836
  br label %for.cond7, !dbg !19837, !llvm.loop !19838

for.end19:                                        ; preds = %for.cond7
  %31 = load i16, i16* %chksum, align 2, !dbg !19840
  ret i16 %31, !dbg !19841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AdvReadEEPWord(i8* %iop_base, i32 %eep_word_addr) #2 !dbg !19842 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %eep_word_addr.addr = alloca i32, align 4
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !19845, metadata !DIExpression()), !dbg !19846
  store i32 %eep_word_addr, i32* %eep_word_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eep_word_addr.addr, metadata !19847, metadata !DIExpression()), !dbg !19848
  %0 = load i32, i32* %eep_word_addr.addr, align 4, !dbg !19849
  %or = or i32 128, %0, !dbg !19849
  %conv = trunc i32 %or to i16, !dbg !19849
  %1 = load i8*, i8** %iop_base.addr, align 8, !dbg !19849
  %add.ptr = getelementptr i8, i8* %1, i64 26, !dbg !19849
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #11, !dbg !19849
  %2 = load i8*, i8** %iop_base.addr, align 8, !dbg !19850
  call void @AdvWaitEEPCmd(i8* %2) #11, !dbg !19851
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !19852
  %add.ptr1 = getelementptr i8, i8* %3, i64 28, !dbg !19852
  %call = call zeroext i16 @readw(i8* %add.ptr1) #11, !dbg !19852
  ret i16 %call, !dbg !19853
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AdvSet38C1600EEPConfig(i8* %iop_base, %struct.adveep_38C1600_config* %cfg_buf) #2 !dbg !19854 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %cfg_buf.addr = alloca %struct.adveep_38C1600_config*, align 8
  %wbuf = alloca i16*, align 8
  %charfields = alloca i16*, align 8
  %addr = alloca i16, align 2
  %chksum = alloca i16, align 2
  %word = alloca i16, align 2
  %__ms = alloca i64, align 8
  %word23 = alloca i16, align 2
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !19857, metadata !DIExpression()), !dbg !19858
  store %struct.adveep_38C1600_config* %cfg_buf, %struct.adveep_38C1600_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adveep_38C1600_config** %cfg_buf.addr, metadata !19859, metadata !DIExpression()), !dbg !19860
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !19861, metadata !DIExpression()), !dbg !19862
  call void @llvm.dbg.declare(metadata i16** %charfields, metadata !19863, metadata !DIExpression()), !dbg !19864
  call void @llvm.dbg.declare(metadata i16* %addr, metadata !19865, metadata !DIExpression()), !dbg !19866
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !19867, metadata !DIExpression()), !dbg !19868
  %0 = load %struct.adveep_38C1600_config*, %struct.adveep_38C1600_config** %cfg_buf.addr, align 8, !dbg !19869
  %1 = bitcast %struct.adveep_38C1600_config* %0 to i16*, !dbg !19870
  store i16* %1, i16** %wbuf, align 8, !dbg !19871
  store i16* getelementptr inbounds (%struct.adveep_38C1600_config, %struct.adveep_38C1600_config* @ADVEEP_38C1600_Config_Field_IsChar, i32 0, i32 0), i16** %charfields, align 8, !dbg !19872
  store i16 0, i16* %chksum, align 2, !dbg !19873
  %2 = load i8*, i8** %iop_base.addr, align 8, !dbg !19874
  %add.ptr = getelementptr i8, i8* %2, i64 26, !dbg !19874
  call void @writew(i16 zeroext 48, i8* %add.ptr) #11, !dbg !19874
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !19875
  call void @AdvWaitEEPCmd(i8* %3) #11, !dbg !19876
  store i16 0, i16* %addr, align 2, !dbg !19877
  br label %for.cond, !dbg !19879

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %addr, align 2, !dbg !19880
  %conv = zext i16 %4 to i32, !dbg !19880
  %cmp = icmp slt i32 %conv, 21, !dbg !19882
  br i1 %cmp, label %for.body, label %for.end, !dbg !19883

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %word, metadata !19884, metadata !DIExpression()), !dbg !19886
  %5 = load i16*, i16** %charfields, align 8, !dbg !19887
  %incdec.ptr = getelementptr i16, i16* %5, i32 1, !dbg !19887
  store i16* %incdec.ptr, i16** %charfields, align 8, !dbg !19887
  %6 = load i16, i16* %5, align 2, !dbg !19889
  %tobool = icmp ne i16 %6, 0, !dbg !19889
  br i1 %tobool, label %if.then, label %if.else, !dbg !19890

if.then:                                          ; preds = %for.body
  %7 = load i16*, i16** %wbuf, align 8, !dbg !19891
  %8 = load i16, i16* %7, align 2, !dbg !19891
  store i16 %8, i16* %word, align 2, !dbg !19893
  br label %if.end, !dbg !19894

if.else:                                          ; preds = %for.body
  %9 = load i16*, i16** %wbuf, align 8, !dbg !19895
  %10 = load i16, i16* %9, align 2, !dbg !19897
  store i16 %10, i16* %word, align 2, !dbg !19898
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i16*, i16** %wbuf, align 8, !dbg !19899
  %12 = load i16, i16* %11, align 2, !dbg !19900
  %conv2 = zext i16 %12 to i32, !dbg !19900
  %13 = load i16, i16* %chksum, align 2, !dbg !19901
  %conv3 = zext i16 %13 to i32, !dbg !19901
  %add = add i32 %conv3, %conv2, !dbg !19901
  %conv4 = trunc i32 %add to i16, !dbg !19901
  store i16 %conv4, i16* %chksum, align 2, !dbg !19901
  %14 = load i16, i16* %word, align 2, !dbg !19902
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !19902
  %add.ptr5 = getelementptr i8, i8* %15, i64 28, !dbg !19902
  call void @writew(i16 zeroext %14, i8* %add.ptr5) #11, !dbg !19902
  %16 = load i16, i16* %addr, align 2, !dbg !19903
  %conv6 = zext i16 %16 to i32, !dbg !19903
  %or = or i32 64, %conv6, !dbg !19903
  %conv7 = trunc i32 %or to i16, !dbg !19903
  %17 = load i8*, i8** %iop_base.addr, align 8, !dbg !19903
  %add.ptr8 = getelementptr i8, i8* %17, i64 26, !dbg !19903
  call void @writew(i16 zeroext %conv7, i8* %add.ptr8) #11, !dbg !19903
  %18 = load i8*, i8** %iop_base.addr, align 8, !dbg !19904
  call void @AdvWaitEEPCmd(i8* %18) #11, !dbg !19905
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !19906, metadata !DIExpression()), !dbg !19908
  store i64 100, i64* %__ms, align 8, !dbg !19908
  br label %while.cond, !dbg !19908

while.cond:                                       ; preds = %while.body, %if.end
  %19 = load i64, i64* %__ms, align 8, !dbg !19908
  %dec = add i64 %19, -1, !dbg !19908
  store i64 %dec, i64* %__ms, align 8, !dbg !19908
  %tobool9 = icmp ne i64 %19, 0, !dbg !19908
  br i1 %tobool9, label %while.body, label %while.end, !dbg !19908

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !19909
  br label %while.cond, !dbg !19908, !llvm.loop !19914

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !19915

for.inc:                                          ; preds = %while.end
  %20 = load i16, i16* %addr, align 2, !dbg !19916
  %inc = add i16 %20, 1, !dbg !19916
  store i16 %inc, i16* %addr, align 2, !dbg !19916
  %21 = load i16*, i16** %wbuf, align 8, !dbg !19917
  %incdec.ptr10 = getelementptr i16, i16* %21, i32 1, !dbg !19917
  store i16* %incdec.ptr10, i16** %wbuf, align 8, !dbg !19917
  br label %for.cond, !dbg !19918, !llvm.loop !19919

for.end:                                          ; preds = %for.cond
  %22 = load i16, i16* %chksum, align 2, !dbg !19921
  %23 = load i8*, i8** %iop_base.addr, align 8, !dbg !19921
  %add.ptr11 = getelementptr i8, i8* %23, i64 28, !dbg !19921
  call void @writew(i16 zeroext %22, i8* %add.ptr11) #11, !dbg !19921
  %24 = load i16, i16* %addr, align 2, !dbg !19922
  %conv12 = zext i16 %24 to i32, !dbg !19922
  %or13 = or i32 64, %conv12, !dbg !19922
  %conv14 = trunc i32 %or13 to i16, !dbg !19922
  %25 = load i8*, i8** %iop_base.addr, align 8, !dbg !19922
  %add.ptr15 = getelementptr i8, i8* %25, i64 26, !dbg !19922
  call void @writew(i16 zeroext %conv14, i8* %add.ptr15) #11, !dbg !19922
  %26 = load i8*, i8** %iop_base.addr, align 8, !dbg !19923
  call void @AdvWaitEEPCmd(i8* %26) #11, !dbg !19924
  %27 = load i16*, i16** %wbuf, align 8, !dbg !19925
  %incdec.ptr16 = getelementptr i16, i16* %27, i32 1, !dbg !19925
  store i16* %incdec.ptr16, i16** %wbuf, align 8, !dbg !19925
  %28 = load i16*, i16** %charfields, align 8, !dbg !19926
  %incdec.ptr17 = getelementptr i16, i16* %28, i32 1, !dbg !19926
  store i16* %incdec.ptr17, i16** %charfields, align 8, !dbg !19926
  store i16 22, i16* %addr, align 2, !dbg !19927
  br label %for.cond18, !dbg !19929

for.cond18:                                       ; preds = %for.inc34, %for.end
  %29 = load i16, i16* %addr, align 2, !dbg !19930
  %conv19 = zext i16 %29 to i32, !dbg !19930
  %cmp20 = icmp slt i32 %conv19, 30, !dbg !19932
  br i1 %cmp20, label %for.body22, label %for.end37, !dbg !19933

for.body22:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata i16* %word23, metadata !19934, metadata !DIExpression()), !dbg !19936
  %30 = load i16*, i16** %charfields, align 8, !dbg !19937
  %incdec.ptr24 = getelementptr i16, i16* %30, i32 1, !dbg !19937
  store i16* %incdec.ptr24, i16** %charfields, align 8, !dbg !19937
  %31 = load i16, i16* %30, align 2, !dbg !19939
  %tobool25 = icmp ne i16 %31, 0, !dbg !19939
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !19940

if.then26:                                        ; preds = %for.body22
  %32 = load i16*, i16** %wbuf, align 8, !dbg !19941
  %33 = load i16, i16* %32, align 2, !dbg !19941
  store i16 %33, i16* %word23, align 2, !dbg !19943
  br label %if.end28, !dbg !19944

if.else27:                                        ; preds = %for.body22
  %34 = load i16*, i16** %wbuf, align 8, !dbg !19945
  %35 = load i16, i16* %34, align 2, !dbg !19947
  store i16 %35, i16* %word23, align 2, !dbg !19948
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  %36 = load i16, i16* %word23, align 2, !dbg !19949
  %37 = load i8*, i8** %iop_base.addr, align 8, !dbg !19949
  %add.ptr29 = getelementptr i8, i8* %37, i64 28, !dbg !19949
  call void @writew(i16 zeroext %36, i8* %add.ptr29) #11, !dbg !19949
  %38 = load i16, i16* %addr, align 2, !dbg !19950
  %conv30 = zext i16 %38 to i32, !dbg !19950
  %or31 = or i32 64, %conv30, !dbg !19950
  %conv32 = trunc i32 %or31 to i16, !dbg !19950
  %39 = load i8*, i8** %iop_base.addr, align 8, !dbg !19950
  %add.ptr33 = getelementptr i8, i8* %39, i64 26, !dbg !19950
  call void @writew(i16 zeroext %conv32, i8* %add.ptr33) #11, !dbg !19950
  %40 = load i8*, i8** %iop_base.addr, align 8, !dbg !19951
  call void @AdvWaitEEPCmd(i8* %40) #11, !dbg !19952
  br label %for.inc34, !dbg !19953

for.inc34:                                        ; preds = %if.end28
  %41 = load i16, i16* %addr, align 2, !dbg !19954
  %inc35 = add i16 %41, 1, !dbg !19954
  store i16 %inc35, i16* %addr, align 2, !dbg !19954
  %42 = load i16*, i16** %wbuf, align 8, !dbg !19955
  %incdec.ptr36 = getelementptr i16, i16* %42, i32 1, !dbg !19955
  store i16* %incdec.ptr36, i16** %wbuf, align 8, !dbg !19955
  br label %for.cond18, !dbg !19956, !llvm.loop !19957

for.end37:                                        ; preds = %for.cond18
  %43 = load i8*, i8** %iop_base.addr, align 8, !dbg !19959
  %add.ptr38 = getelementptr i8, i8* %43, i64 26, !dbg !19959
  call void @writew(i16 zeroext 0, i8* %add.ptr38) #11, !dbg !19959
  %44 = load i8*, i8** %iop_base.addr, align 8, !dbg !19960
  call void @AdvWaitEEPCmd(i8* %44) #11, !dbg !19961
  ret void, !dbg !19962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AdvWaitEEPCmd(i8* %iop_base) #2 !dbg !19963 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %eep_delay_ms = alloca i32, align 4
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !19964, metadata !DIExpression()), !dbg !19965
  call void @llvm.dbg.declare(metadata i32* %eep_delay_ms, metadata !19966, metadata !DIExpression()), !dbg !19967
  store i32 0, i32* %eep_delay_ms, align 4, !dbg !19968
  br label %for.cond, !dbg !19970

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %eep_delay_ms, align 4, !dbg !19971
  %cmp = icmp slt i32 %0, 100, !dbg !19973
  br i1 %cmp, label %for.body, label %for.end, !dbg !19974

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %iop_base.addr, align 8, !dbg !19975
  %add.ptr = getelementptr i8, i8* %1, i64 26, !dbg !19975
  %call = call zeroext i16 @readw(i8* %add.ptr) #11, !dbg !19975
  %conv = zext i16 %call to i32, !dbg !19975
  %and = and i32 %conv, 512, !dbg !19978
  %tobool = icmp ne i32 %and, 0, !dbg !19978
  br i1 %tobool, label %if.then, label %if.end, !dbg !19979

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !19980

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295000) #11, !dbg !19982
  br label %for.inc, !dbg !19987

for.inc:                                          ; preds = %if.end
  %2 = load i32, i32* %eep_delay_ms, align 4, !dbg !19988
  %inc = add i32 %2, 1, !dbg !19988
  store i32 %inc, i32* %eep_delay_ms, align 4, !dbg !19988
  br label %for.cond, !dbg !19989, !llvm.loop !19990

for.end:                                          ; preds = %if.then, %for.cond
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !19992
  %add.ptr1 = getelementptr i8, i8* %3, i64 26, !dbg !19992
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #11, !dbg !19992
  %conv3 = zext i16 %call2 to i32, !dbg !19992
  %and4 = and i32 %conv3, 512, !dbg !19994
  %cmp5 = icmp eq i32 %and4, 0, !dbg !19995
  br i1 %cmp5, label %if.then7, label %if.end14, !dbg !19996

if.then7:                                         ; preds = %for.end
  br label %do.body, !dbg !19997

do.body:                                          ; preds = %if.then7
  br label %do.body8, !dbg !19998

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !20000

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !19998

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 9785, i32 0, i64 12) #6, !dbg !20002, !srcloc !20004
  br label %do.end10, !dbg !20002

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !19998

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 305) #6, !dbg !20005, !srcloc !20008
  unreachable, !dbg !20009

do.end12:                                         ; No predecessors!
  br label %do.end13, !dbg !19998

do.end13:                                         ; preds = %do.end12
  br label %if.end14, !dbg !19998

if.end14:                                         ; preds = %do.end13, %for.end
  ret void, !dbg !20010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AdvGet38C0800EEPConfig(i8* %iop_base, %struct.adveep_38C0800_config* %cfg_buf) #2 !dbg !20011 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %cfg_buf.addr = alloca %struct.adveep_38C0800_config*, align 8
  %wval = alloca i16, align 2
  %chksum = alloca i16, align 2
  %wbuf = alloca i16*, align 8
  %eep_addr = alloca i32, align 4
  %charfields = alloca i16*, align 8
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !20014, metadata !DIExpression()), !dbg !20015
  store %struct.adveep_38C0800_config* %cfg_buf, %struct.adveep_38C0800_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adveep_38C0800_config** %cfg_buf.addr, metadata !20016, metadata !DIExpression()), !dbg !20017
  call void @llvm.dbg.declare(metadata i16* %wval, metadata !20018, metadata !DIExpression()), !dbg !20019
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !20020, metadata !DIExpression()), !dbg !20021
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !20022, metadata !DIExpression()), !dbg !20023
  call void @llvm.dbg.declare(metadata i32* %eep_addr, metadata !20024, metadata !DIExpression()), !dbg !20025
  call void @llvm.dbg.declare(metadata i16** %charfields, metadata !20026, metadata !DIExpression()), !dbg !20027
  store i16* getelementptr inbounds (%struct.adveep_38C0800_config, %struct.adveep_38C0800_config* @ADVEEP_38C0800_Config_Field_IsChar, i32 0, i32 0), i16** %charfields, align 8, !dbg !20028
  %0 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %cfg_buf.addr, align 8, !dbg !20029
  %1 = bitcast %struct.adveep_38C0800_config* %0 to i16*, !dbg !20030
  store i16* %1, i16** %wbuf, align 8, !dbg !20031
  store i16 0, i16* %chksum, align 2, !dbg !20032
  store i32 0, i32* %eep_addr, align 4, !dbg !20033
  br label %for.cond, !dbg !20035

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %eep_addr, align 4, !dbg !20036
  %cmp = icmp slt i32 %2, 21, !dbg !20038
  br i1 %cmp, label %for.body, label %for.end, !dbg !20039

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !20040
  %4 = load i32, i32* %eep_addr, align 4, !dbg !20042
  %call = call zeroext i16 @AdvReadEEPWord(i8* %3, i32 %4) #11, !dbg !20043
  store i16 %call, i16* %wval, align 2, !dbg !20044
  %5 = load i16, i16* %wval, align 2, !dbg !20045
  %conv = zext i16 %5 to i32, !dbg !20045
  %6 = load i16, i16* %chksum, align 2, !dbg !20046
  %conv1 = zext i16 %6 to i32, !dbg !20046
  %add = add i32 %conv1, %conv, !dbg !20046
  %conv2 = trunc i32 %add to i16, !dbg !20046
  store i16 %conv2, i16* %chksum, align 2, !dbg !20046
  %7 = load i16*, i16** %charfields, align 8, !dbg !20047
  %incdec.ptr = getelementptr i16, i16* %7, i32 1, !dbg !20047
  store i16* %incdec.ptr, i16** %charfields, align 8, !dbg !20047
  %8 = load i16, i16* %7, align 2, !dbg !20049
  %tobool = icmp ne i16 %8, 0, !dbg !20049
  br i1 %tobool, label %if.then, label %if.else, !dbg !20050

if.then:                                          ; preds = %for.body
  %9 = load i16, i16* %wval, align 2, !dbg !20051
  %10 = load i16*, i16** %wbuf, align 8, !dbg !20053
  store i16 %9, i16* %10, align 2, !dbg !20054
  br label %if.end, !dbg !20055

if.else:                                          ; preds = %for.body
  %11 = load i16, i16* %wval, align 2, !dbg !20056
  %12 = load i16*, i16** %wbuf, align 8, !dbg !20058
  store i16 %11, i16* %12, align 2, !dbg !20059
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !20060

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %eep_addr, align 4, !dbg !20061
  %inc = add i32 %13, 1, !dbg !20061
  store i32 %inc, i32* %eep_addr, align 4, !dbg !20061
  %14 = load i16*, i16** %wbuf, align 8, !dbg !20062
  %incdec.ptr3 = getelementptr i16, i16* %14, i32 1, !dbg !20062
  store i16* %incdec.ptr3, i16** %wbuf, align 8, !dbg !20062
  br label %for.cond, !dbg !20063, !llvm.loop !20064

for.end:                                          ; preds = %for.cond
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !20066
  %16 = load i32, i32* %eep_addr, align 4, !dbg !20067
  %call4 = call zeroext i16 @AdvReadEEPWord(i8* %15, i32 %16) #11, !dbg !20068
  %17 = load i16*, i16** %wbuf, align 8, !dbg !20069
  store i16 %call4, i16* %17, align 2, !dbg !20070
  %18 = load i16*, i16** %wbuf, align 8, !dbg !20071
  %incdec.ptr5 = getelementptr i16, i16* %18, i32 1, !dbg !20071
  store i16* %incdec.ptr5, i16** %wbuf, align 8, !dbg !20071
  %19 = load i16*, i16** %charfields, align 8, !dbg !20072
  %incdec.ptr6 = getelementptr i16, i16* %19, i32 1, !dbg !20072
  store i16* %incdec.ptr6, i16** %charfields, align 8, !dbg !20072
  store i32 22, i32* %eep_addr, align 4, !dbg !20073
  br label %for.cond7, !dbg !20075

for.cond7:                                        ; preds = %for.inc16, %for.end
  %20 = load i32, i32* %eep_addr, align 4, !dbg !20076
  %cmp8 = icmp slt i32 %20, 30, !dbg !20078
  br i1 %cmp8, label %for.body10, label %for.end19, !dbg !20079

for.body10:                                       ; preds = %for.cond7
  %21 = load i8*, i8** %iop_base.addr, align 8, !dbg !20080
  %22 = load i32, i32* %eep_addr, align 4, !dbg !20082
  %call11 = call zeroext i16 @AdvReadEEPWord(i8* %21, i32 %22) #11, !dbg !20083
  %23 = load i16*, i16** %wbuf, align 8, !dbg !20084
  store i16 %call11, i16* %23, align 2, !dbg !20085
  %24 = load i16*, i16** %charfields, align 8, !dbg !20086
  %incdec.ptr12 = getelementptr i16, i16* %24, i32 1, !dbg !20086
  store i16* %incdec.ptr12, i16** %charfields, align 8, !dbg !20086
  %25 = load i16, i16* %24, align 2, !dbg !20088
  %tobool13 = icmp ne i16 %25, 0, !dbg !20088
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !20089

if.then14:                                        ; preds = %for.body10
  %26 = load i16*, i16** %wbuf, align 8, !dbg !20090
  %27 = load i16, i16* %26, align 2, !dbg !20090
  %28 = load i16*, i16** %wbuf, align 8, !dbg !20092
  store i16 %27, i16* %28, align 2, !dbg !20093
  br label %if.end15, !dbg !20094

if.end15:                                         ; preds = %if.then14, %for.body10
  br label %for.inc16, !dbg !20095

for.inc16:                                        ; preds = %if.end15
  %29 = load i32, i32* %eep_addr, align 4, !dbg !20096
  %inc17 = add i32 %29, 1, !dbg !20096
  store i32 %inc17, i32* %eep_addr, align 4, !dbg !20096
  %30 = load i16*, i16** %wbuf, align 8, !dbg !20097
  %incdec.ptr18 = getelementptr i16, i16* %30, i32 1, !dbg !20097
  store i16* %incdec.ptr18, i16** %wbuf, align 8, !dbg !20097
  br label %for.cond7, !dbg !20098, !llvm.loop !20099

for.end19:                                        ; preds = %for.cond7
  %31 = load i16, i16* %chksum, align 2, !dbg !20101
  ret i16 %31, !dbg !20102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AdvSet38C0800EEPConfig(i8* %iop_base, %struct.adveep_38C0800_config* %cfg_buf) #2 !dbg !20103 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %cfg_buf.addr = alloca %struct.adveep_38C0800_config*, align 8
  %wbuf = alloca i16*, align 8
  %charfields = alloca i16*, align 8
  %addr = alloca i16, align 2
  %chksum = alloca i16, align 2
  %word = alloca i16, align 2
  %__ms = alloca i64, align 8
  %word23 = alloca i16, align 2
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !20106, metadata !DIExpression()), !dbg !20107
  store %struct.adveep_38C0800_config* %cfg_buf, %struct.adveep_38C0800_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adveep_38C0800_config** %cfg_buf.addr, metadata !20108, metadata !DIExpression()), !dbg !20109
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !20110, metadata !DIExpression()), !dbg !20111
  call void @llvm.dbg.declare(metadata i16** %charfields, metadata !20112, metadata !DIExpression()), !dbg !20113
  call void @llvm.dbg.declare(metadata i16* %addr, metadata !20114, metadata !DIExpression()), !dbg !20115
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !20116, metadata !DIExpression()), !dbg !20117
  %0 = load %struct.adveep_38C0800_config*, %struct.adveep_38C0800_config** %cfg_buf.addr, align 8, !dbg !20118
  %1 = bitcast %struct.adveep_38C0800_config* %0 to i16*, !dbg !20119
  store i16* %1, i16** %wbuf, align 8, !dbg !20120
  store i16* getelementptr inbounds (%struct.adveep_38C0800_config, %struct.adveep_38C0800_config* @ADVEEP_38C0800_Config_Field_IsChar, i32 0, i32 0), i16** %charfields, align 8, !dbg !20121
  store i16 0, i16* %chksum, align 2, !dbg !20122
  %2 = load i8*, i8** %iop_base.addr, align 8, !dbg !20123
  %add.ptr = getelementptr i8, i8* %2, i64 26, !dbg !20123
  call void @writew(i16 zeroext 48, i8* %add.ptr) #11, !dbg !20123
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !20124
  call void @AdvWaitEEPCmd(i8* %3) #11, !dbg !20125
  store i16 0, i16* %addr, align 2, !dbg !20126
  br label %for.cond, !dbg !20128

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %addr, align 2, !dbg !20129
  %conv = zext i16 %4 to i32, !dbg !20129
  %cmp = icmp slt i32 %conv, 21, !dbg !20131
  br i1 %cmp, label %for.body, label %for.end, !dbg !20132

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %word, metadata !20133, metadata !DIExpression()), !dbg !20135
  %5 = load i16*, i16** %charfields, align 8, !dbg !20136
  %incdec.ptr = getelementptr i16, i16* %5, i32 1, !dbg !20136
  store i16* %incdec.ptr, i16** %charfields, align 8, !dbg !20136
  %6 = load i16, i16* %5, align 2, !dbg !20138
  %tobool = icmp ne i16 %6, 0, !dbg !20138
  br i1 %tobool, label %if.then, label %if.else, !dbg !20139

if.then:                                          ; preds = %for.body
  %7 = load i16*, i16** %wbuf, align 8, !dbg !20140
  %8 = load i16, i16* %7, align 2, !dbg !20140
  store i16 %8, i16* %word, align 2, !dbg !20142
  br label %if.end, !dbg !20143

if.else:                                          ; preds = %for.body
  %9 = load i16*, i16** %wbuf, align 8, !dbg !20144
  %10 = load i16, i16* %9, align 2, !dbg !20146
  store i16 %10, i16* %word, align 2, !dbg !20147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i16*, i16** %wbuf, align 8, !dbg !20148
  %12 = load i16, i16* %11, align 2, !dbg !20149
  %conv2 = zext i16 %12 to i32, !dbg !20149
  %13 = load i16, i16* %chksum, align 2, !dbg !20150
  %conv3 = zext i16 %13 to i32, !dbg !20150
  %add = add i32 %conv3, %conv2, !dbg !20150
  %conv4 = trunc i32 %add to i16, !dbg !20150
  store i16 %conv4, i16* %chksum, align 2, !dbg !20150
  %14 = load i16, i16* %word, align 2, !dbg !20151
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !20151
  %add.ptr5 = getelementptr i8, i8* %15, i64 28, !dbg !20151
  call void @writew(i16 zeroext %14, i8* %add.ptr5) #11, !dbg !20151
  %16 = load i16, i16* %addr, align 2, !dbg !20152
  %conv6 = zext i16 %16 to i32, !dbg !20152
  %or = or i32 64, %conv6, !dbg !20152
  %conv7 = trunc i32 %or to i16, !dbg !20152
  %17 = load i8*, i8** %iop_base.addr, align 8, !dbg !20152
  %add.ptr8 = getelementptr i8, i8* %17, i64 26, !dbg !20152
  call void @writew(i16 zeroext %conv7, i8* %add.ptr8) #11, !dbg !20152
  %18 = load i8*, i8** %iop_base.addr, align 8, !dbg !20153
  call void @AdvWaitEEPCmd(i8* %18) #11, !dbg !20154
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !20155, metadata !DIExpression()), !dbg !20157
  store i64 100, i64* %__ms, align 8, !dbg !20157
  br label %while.cond, !dbg !20157

while.cond:                                       ; preds = %while.body, %if.end
  %19 = load i64, i64* %__ms, align 8, !dbg !20157
  %dec = add i64 %19, -1, !dbg !20157
  store i64 %dec, i64* %__ms, align 8, !dbg !20157
  %tobool9 = icmp ne i64 %19, 0, !dbg !20157
  br i1 %tobool9, label %while.body, label %while.end, !dbg !20157

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !20158
  br label %while.cond, !dbg !20157, !llvm.loop !20163

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !20164

for.inc:                                          ; preds = %while.end
  %20 = load i16, i16* %addr, align 2, !dbg !20165
  %inc = add i16 %20, 1, !dbg !20165
  store i16 %inc, i16* %addr, align 2, !dbg !20165
  %21 = load i16*, i16** %wbuf, align 8, !dbg !20166
  %incdec.ptr10 = getelementptr i16, i16* %21, i32 1, !dbg !20166
  store i16* %incdec.ptr10, i16** %wbuf, align 8, !dbg !20166
  br label %for.cond, !dbg !20167, !llvm.loop !20168

for.end:                                          ; preds = %for.cond
  %22 = load i16, i16* %chksum, align 2, !dbg !20170
  %23 = load i8*, i8** %iop_base.addr, align 8, !dbg !20170
  %add.ptr11 = getelementptr i8, i8* %23, i64 28, !dbg !20170
  call void @writew(i16 zeroext %22, i8* %add.ptr11) #11, !dbg !20170
  %24 = load i16, i16* %addr, align 2, !dbg !20171
  %conv12 = zext i16 %24 to i32, !dbg !20171
  %or13 = or i32 64, %conv12, !dbg !20171
  %conv14 = trunc i32 %or13 to i16, !dbg !20171
  %25 = load i8*, i8** %iop_base.addr, align 8, !dbg !20171
  %add.ptr15 = getelementptr i8, i8* %25, i64 26, !dbg !20171
  call void @writew(i16 zeroext %conv14, i8* %add.ptr15) #11, !dbg !20171
  %26 = load i8*, i8** %iop_base.addr, align 8, !dbg !20172
  call void @AdvWaitEEPCmd(i8* %26) #11, !dbg !20173
  %27 = load i16*, i16** %wbuf, align 8, !dbg !20174
  %incdec.ptr16 = getelementptr i16, i16* %27, i32 1, !dbg !20174
  store i16* %incdec.ptr16, i16** %wbuf, align 8, !dbg !20174
  %28 = load i16*, i16** %charfields, align 8, !dbg !20175
  %incdec.ptr17 = getelementptr i16, i16* %28, i32 1, !dbg !20175
  store i16* %incdec.ptr17, i16** %charfields, align 8, !dbg !20175
  store i16 22, i16* %addr, align 2, !dbg !20176
  br label %for.cond18, !dbg !20178

for.cond18:                                       ; preds = %for.inc34, %for.end
  %29 = load i16, i16* %addr, align 2, !dbg !20179
  %conv19 = zext i16 %29 to i32, !dbg !20179
  %cmp20 = icmp slt i32 %conv19, 30, !dbg !20181
  br i1 %cmp20, label %for.body22, label %for.end37, !dbg !20182

for.body22:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata i16* %word23, metadata !20183, metadata !DIExpression()), !dbg !20185
  %30 = load i16*, i16** %charfields, align 8, !dbg !20186
  %incdec.ptr24 = getelementptr i16, i16* %30, i32 1, !dbg !20186
  store i16* %incdec.ptr24, i16** %charfields, align 8, !dbg !20186
  %31 = load i16, i16* %30, align 2, !dbg !20188
  %tobool25 = icmp ne i16 %31, 0, !dbg !20188
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !20189

if.then26:                                        ; preds = %for.body22
  %32 = load i16*, i16** %wbuf, align 8, !dbg !20190
  %33 = load i16, i16* %32, align 2, !dbg !20190
  store i16 %33, i16* %word23, align 2, !dbg !20192
  br label %if.end28, !dbg !20193

if.else27:                                        ; preds = %for.body22
  %34 = load i16*, i16** %wbuf, align 8, !dbg !20194
  %35 = load i16, i16* %34, align 2, !dbg !20196
  store i16 %35, i16* %word23, align 2, !dbg !20197
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  %36 = load i16, i16* %word23, align 2, !dbg !20198
  %37 = load i8*, i8** %iop_base.addr, align 8, !dbg !20198
  %add.ptr29 = getelementptr i8, i8* %37, i64 28, !dbg !20198
  call void @writew(i16 zeroext %36, i8* %add.ptr29) #11, !dbg !20198
  %38 = load i16, i16* %addr, align 2, !dbg !20199
  %conv30 = zext i16 %38 to i32, !dbg !20199
  %or31 = or i32 64, %conv30, !dbg !20199
  %conv32 = trunc i32 %or31 to i16, !dbg !20199
  %39 = load i8*, i8** %iop_base.addr, align 8, !dbg !20199
  %add.ptr33 = getelementptr i8, i8* %39, i64 26, !dbg !20199
  call void @writew(i16 zeroext %conv32, i8* %add.ptr33) #11, !dbg !20199
  %40 = load i8*, i8** %iop_base.addr, align 8, !dbg !20200
  call void @AdvWaitEEPCmd(i8* %40) #11, !dbg !20201
  br label %for.inc34, !dbg !20202

for.inc34:                                        ; preds = %if.end28
  %41 = load i16, i16* %addr, align 2, !dbg !20203
  %inc35 = add i16 %41, 1, !dbg !20203
  store i16 %inc35, i16* %addr, align 2, !dbg !20203
  %42 = load i16*, i16** %wbuf, align 8, !dbg !20204
  %incdec.ptr36 = getelementptr i16, i16* %42, i32 1, !dbg !20204
  store i16* %incdec.ptr36, i16** %wbuf, align 8, !dbg !20204
  br label %for.cond18, !dbg !20205, !llvm.loop !20206

for.end37:                                        ; preds = %for.cond18
  %43 = load i8*, i8** %iop_base.addr, align 8, !dbg !20208
  %add.ptr38 = getelementptr i8, i8* %43, i64 26, !dbg !20208
  call void @writew(i16 zeroext 0, i8* %add.ptr38) #11, !dbg !20208
  %44 = load i8*, i8** %iop_base.addr, align 8, !dbg !20209
  call void @AdvWaitEEPCmd(i8* %44) #11, !dbg !20210
  ret void, !dbg !20211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AdvGet3550EEPConfig(i8* %iop_base, %struct.adveep_3550_config* %cfg_buf) #2 !dbg !20212 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %cfg_buf.addr = alloca %struct.adveep_3550_config*, align 8
  %wval = alloca i16, align 2
  %chksum = alloca i16, align 2
  %wbuf = alloca i16*, align 8
  %eep_addr = alloca i32, align 4
  %charfields = alloca i16*, align 8
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !20215, metadata !DIExpression()), !dbg !20216
  store %struct.adveep_3550_config* %cfg_buf, %struct.adveep_3550_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adveep_3550_config** %cfg_buf.addr, metadata !20217, metadata !DIExpression()), !dbg !20218
  call void @llvm.dbg.declare(metadata i16* %wval, metadata !20219, metadata !DIExpression()), !dbg !20220
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !20221, metadata !DIExpression()), !dbg !20222
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !20223, metadata !DIExpression()), !dbg !20224
  call void @llvm.dbg.declare(metadata i32* %eep_addr, metadata !20225, metadata !DIExpression()), !dbg !20226
  call void @llvm.dbg.declare(metadata i16** %charfields, metadata !20227, metadata !DIExpression()), !dbg !20228
  store i16* getelementptr inbounds (%struct.adveep_3550_config, %struct.adveep_3550_config* @ADVEEP_3550_Config_Field_IsChar, i32 0, i32 0), i16** %charfields, align 8, !dbg !20229
  %0 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %cfg_buf.addr, align 8, !dbg !20230
  %1 = bitcast %struct.adveep_3550_config* %0 to i16*, !dbg !20231
  store i16* %1, i16** %wbuf, align 8, !dbg !20232
  store i16 0, i16* %chksum, align 2, !dbg !20233
  store i32 0, i32* %eep_addr, align 4, !dbg !20234
  br label %for.cond, !dbg !20236

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %eep_addr, align 4, !dbg !20237
  %cmp = icmp slt i32 %2, 21, !dbg !20239
  br i1 %cmp, label %for.body, label %for.end, !dbg !20240

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !20241
  %4 = load i32, i32* %eep_addr, align 4, !dbg !20243
  %call = call zeroext i16 @AdvReadEEPWord(i8* %3, i32 %4) #11, !dbg !20244
  store i16 %call, i16* %wval, align 2, !dbg !20245
  %5 = load i16, i16* %wval, align 2, !dbg !20246
  %conv = zext i16 %5 to i32, !dbg !20246
  %6 = load i16, i16* %chksum, align 2, !dbg !20247
  %conv1 = zext i16 %6 to i32, !dbg !20247
  %add = add i32 %conv1, %conv, !dbg !20247
  %conv2 = trunc i32 %add to i16, !dbg !20247
  store i16 %conv2, i16* %chksum, align 2, !dbg !20247
  %7 = load i16*, i16** %charfields, align 8, !dbg !20248
  %incdec.ptr = getelementptr i16, i16* %7, i32 1, !dbg !20248
  store i16* %incdec.ptr, i16** %charfields, align 8, !dbg !20248
  %8 = load i16, i16* %7, align 2, !dbg !20250
  %tobool = icmp ne i16 %8, 0, !dbg !20250
  br i1 %tobool, label %if.then, label %if.else, !dbg !20251

if.then:                                          ; preds = %for.body
  %9 = load i16, i16* %wval, align 2, !dbg !20252
  %10 = load i16*, i16** %wbuf, align 8, !dbg !20254
  store i16 %9, i16* %10, align 2, !dbg !20255
  br label %if.end, !dbg !20256

if.else:                                          ; preds = %for.body
  %11 = load i16, i16* %wval, align 2, !dbg !20257
  %12 = load i16*, i16** %wbuf, align 8, !dbg !20259
  store i16 %11, i16* %12, align 2, !dbg !20260
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !20261

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %eep_addr, align 4, !dbg !20262
  %inc = add i32 %13, 1, !dbg !20262
  store i32 %inc, i32* %eep_addr, align 4, !dbg !20262
  %14 = load i16*, i16** %wbuf, align 8, !dbg !20263
  %incdec.ptr3 = getelementptr i16, i16* %14, i32 1, !dbg !20263
  store i16* %incdec.ptr3, i16** %wbuf, align 8, !dbg !20263
  br label %for.cond, !dbg !20264, !llvm.loop !20265

for.end:                                          ; preds = %for.cond
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !20267
  %16 = load i32, i32* %eep_addr, align 4, !dbg !20268
  %call4 = call zeroext i16 @AdvReadEEPWord(i8* %15, i32 %16) #11, !dbg !20269
  %17 = load i16*, i16** %wbuf, align 8, !dbg !20270
  store i16 %call4, i16* %17, align 2, !dbg !20271
  %18 = load i16*, i16** %wbuf, align 8, !dbg !20272
  %incdec.ptr5 = getelementptr i16, i16* %18, i32 1, !dbg !20272
  store i16* %incdec.ptr5, i16** %wbuf, align 8, !dbg !20272
  %19 = load i16*, i16** %charfields, align 8, !dbg !20273
  %incdec.ptr6 = getelementptr i16, i16* %19, i32 1, !dbg !20273
  store i16* %incdec.ptr6, i16** %charfields, align 8, !dbg !20273
  store i32 22, i32* %eep_addr, align 4, !dbg !20274
  br label %for.cond7, !dbg !20276

for.cond7:                                        ; preds = %for.inc16, %for.end
  %20 = load i32, i32* %eep_addr, align 4, !dbg !20277
  %cmp8 = icmp slt i32 %20, 30, !dbg !20279
  br i1 %cmp8, label %for.body10, label %for.end19, !dbg !20280

for.body10:                                       ; preds = %for.cond7
  %21 = load i8*, i8** %iop_base.addr, align 8, !dbg !20281
  %22 = load i32, i32* %eep_addr, align 4, !dbg !20283
  %call11 = call zeroext i16 @AdvReadEEPWord(i8* %21, i32 %22) #11, !dbg !20284
  %23 = load i16*, i16** %wbuf, align 8, !dbg !20285
  store i16 %call11, i16* %23, align 2, !dbg !20286
  %24 = load i16*, i16** %charfields, align 8, !dbg !20287
  %incdec.ptr12 = getelementptr i16, i16* %24, i32 1, !dbg !20287
  store i16* %incdec.ptr12, i16** %charfields, align 8, !dbg !20287
  %25 = load i16, i16* %24, align 2, !dbg !20289
  %tobool13 = icmp ne i16 %25, 0, !dbg !20289
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !20290

if.then14:                                        ; preds = %for.body10
  %26 = load i16*, i16** %wbuf, align 8, !dbg !20291
  %27 = load i16, i16* %26, align 2, !dbg !20291
  %28 = load i16*, i16** %wbuf, align 8, !dbg !20293
  store i16 %27, i16* %28, align 2, !dbg !20294
  br label %if.end15, !dbg !20295

if.end15:                                         ; preds = %if.then14, %for.body10
  br label %for.inc16, !dbg !20296

for.inc16:                                        ; preds = %if.end15
  %29 = load i32, i32* %eep_addr, align 4, !dbg !20297
  %inc17 = add i32 %29, 1, !dbg !20297
  store i32 %inc17, i32* %eep_addr, align 4, !dbg !20297
  %30 = load i16*, i16** %wbuf, align 8, !dbg !20298
  %incdec.ptr18 = getelementptr i16, i16* %30, i32 1, !dbg !20298
  store i16* %incdec.ptr18, i16** %wbuf, align 8, !dbg !20298
  br label %for.cond7, !dbg !20299, !llvm.loop !20300

for.end19:                                        ; preds = %for.cond7
  %31 = load i16, i16* %chksum, align 2, !dbg !20302
  ret i16 %31, !dbg !20303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AdvSet3550EEPConfig(i8* %iop_base, %struct.adveep_3550_config* %cfg_buf) #2 !dbg !20304 {
entry:
  %iop_base.addr = alloca i8*, align 8
  %cfg_buf.addr = alloca %struct.adveep_3550_config*, align 8
  %wbuf = alloca i16*, align 8
  %addr = alloca i16, align 2
  %chksum = alloca i16, align 2
  %charfields = alloca i16*, align 8
  %word = alloca i16, align 2
  %__ms = alloca i64, align 8
  %word23 = alloca i16, align 2
  store i8* %iop_base, i8** %iop_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iop_base.addr, metadata !20307, metadata !DIExpression()), !dbg !20308
  store %struct.adveep_3550_config* %cfg_buf, %struct.adveep_3550_config** %cfg_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adveep_3550_config** %cfg_buf.addr, metadata !20309, metadata !DIExpression()), !dbg !20310
  call void @llvm.dbg.declare(metadata i16** %wbuf, metadata !20311, metadata !DIExpression()), !dbg !20312
  call void @llvm.dbg.declare(metadata i16* %addr, metadata !20313, metadata !DIExpression()), !dbg !20314
  call void @llvm.dbg.declare(metadata i16* %chksum, metadata !20315, metadata !DIExpression()), !dbg !20316
  call void @llvm.dbg.declare(metadata i16** %charfields, metadata !20317, metadata !DIExpression()), !dbg !20318
  %0 = load %struct.adveep_3550_config*, %struct.adveep_3550_config** %cfg_buf.addr, align 8, !dbg !20319
  %1 = bitcast %struct.adveep_3550_config* %0 to i16*, !dbg !20320
  store i16* %1, i16** %wbuf, align 8, !dbg !20321
  store i16* getelementptr inbounds (%struct.adveep_3550_config, %struct.adveep_3550_config* @ADVEEP_3550_Config_Field_IsChar, i32 0, i32 0), i16** %charfields, align 8, !dbg !20322
  store i16 0, i16* %chksum, align 2, !dbg !20323
  %2 = load i8*, i8** %iop_base.addr, align 8, !dbg !20324
  %add.ptr = getelementptr i8, i8* %2, i64 26, !dbg !20324
  call void @writew(i16 zeroext 48, i8* %add.ptr) #11, !dbg !20324
  %3 = load i8*, i8** %iop_base.addr, align 8, !dbg !20325
  call void @AdvWaitEEPCmd(i8* %3) #11, !dbg !20326
  store i16 0, i16* %addr, align 2, !dbg !20327
  br label %for.cond, !dbg !20329

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %addr, align 2, !dbg !20330
  %conv = zext i16 %4 to i32, !dbg !20330
  %cmp = icmp slt i32 %conv, 21, !dbg !20332
  br i1 %cmp, label %for.body, label %for.end, !dbg !20333

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %word, metadata !20334, metadata !DIExpression()), !dbg !20336
  %5 = load i16*, i16** %charfields, align 8, !dbg !20337
  %incdec.ptr = getelementptr i16, i16* %5, i32 1, !dbg !20337
  store i16* %incdec.ptr, i16** %charfields, align 8, !dbg !20337
  %6 = load i16, i16* %5, align 2, !dbg !20339
  %tobool = icmp ne i16 %6, 0, !dbg !20339
  br i1 %tobool, label %if.then, label %if.else, !dbg !20340

if.then:                                          ; preds = %for.body
  %7 = load i16*, i16** %wbuf, align 8, !dbg !20341
  %8 = load i16, i16* %7, align 2, !dbg !20341
  store i16 %8, i16* %word, align 2, !dbg !20343
  br label %if.end, !dbg !20344

if.else:                                          ; preds = %for.body
  %9 = load i16*, i16** %wbuf, align 8, !dbg !20345
  %10 = load i16, i16* %9, align 2, !dbg !20347
  store i16 %10, i16* %word, align 2, !dbg !20348
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i16*, i16** %wbuf, align 8, !dbg !20349
  %12 = load i16, i16* %11, align 2, !dbg !20350
  %conv2 = zext i16 %12 to i32, !dbg !20350
  %13 = load i16, i16* %chksum, align 2, !dbg !20351
  %conv3 = zext i16 %13 to i32, !dbg !20351
  %add = add i32 %conv3, %conv2, !dbg !20351
  %conv4 = trunc i32 %add to i16, !dbg !20351
  store i16 %conv4, i16* %chksum, align 2, !dbg !20351
  %14 = load i16, i16* %word, align 2, !dbg !20352
  %15 = load i8*, i8** %iop_base.addr, align 8, !dbg !20352
  %add.ptr5 = getelementptr i8, i8* %15, i64 28, !dbg !20352
  call void @writew(i16 zeroext %14, i8* %add.ptr5) #11, !dbg !20352
  %16 = load i16, i16* %addr, align 2, !dbg !20353
  %conv6 = zext i16 %16 to i32, !dbg !20353
  %or = or i32 64, %conv6, !dbg !20353
  %conv7 = trunc i32 %or to i16, !dbg !20353
  %17 = load i8*, i8** %iop_base.addr, align 8, !dbg !20353
  %add.ptr8 = getelementptr i8, i8* %17, i64 26, !dbg !20353
  call void @writew(i16 zeroext %conv7, i8* %add.ptr8) #11, !dbg !20353
  %18 = load i8*, i8** %iop_base.addr, align 8, !dbg !20354
  call void @AdvWaitEEPCmd(i8* %18) #11, !dbg !20355
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !20356, metadata !DIExpression()), !dbg !20358
  store i64 100, i64* %__ms, align 8, !dbg !20358
  br label %while.cond, !dbg !20358

while.cond:                                       ; preds = %while.body, %if.end
  %19 = load i64, i64* %__ms, align 8, !dbg !20358
  %dec = add i64 %19, -1, !dbg !20358
  store i64 %dec, i64* %__ms, align 8, !dbg !20358
  %tobool9 = icmp ne i64 %19, 0, !dbg !20358
  br i1 %tobool9, label %while.body, label %while.end, !dbg !20358

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !20359
  br label %while.cond, !dbg !20358, !llvm.loop !20364

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !20365

for.inc:                                          ; preds = %while.end
  %20 = load i16, i16* %addr, align 2, !dbg !20366
  %inc = add i16 %20, 1, !dbg !20366
  store i16 %inc, i16* %addr, align 2, !dbg !20366
  %21 = load i16*, i16** %wbuf, align 8, !dbg !20367
  %incdec.ptr10 = getelementptr i16, i16* %21, i32 1, !dbg !20367
  store i16* %incdec.ptr10, i16** %wbuf, align 8, !dbg !20367
  br label %for.cond, !dbg !20368, !llvm.loop !20369

for.end:                                          ; preds = %for.cond
  %22 = load i16, i16* %chksum, align 2, !dbg !20371
  %23 = load i8*, i8** %iop_base.addr, align 8, !dbg !20371
  %add.ptr11 = getelementptr i8, i8* %23, i64 28, !dbg !20371
  call void @writew(i16 zeroext %22, i8* %add.ptr11) #11, !dbg !20371
  %24 = load i16, i16* %addr, align 2, !dbg !20372
  %conv12 = zext i16 %24 to i32, !dbg !20372
  %or13 = or i32 64, %conv12, !dbg !20372
  %conv14 = trunc i32 %or13 to i16, !dbg !20372
  %25 = load i8*, i8** %iop_base.addr, align 8, !dbg !20372
  %add.ptr15 = getelementptr i8, i8* %25, i64 26, !dbg !20372
  call void @writew(i16 zeroext %conv14, i8* %add.ptr15) #11, !dbg !20372
  %26 = load i8*, i8** %iop_base.addr, align 8, !dbg !20373
  call void @AdvWaitEEPCmd(i8* %26) #11, !dbg !20374
  %27 = load i16*, i16** %wbuf, align 8, !dbg !20375
  %incdec.ptr16 = getelementptr i16, i16* %27, i32 1, !dbg !20375
  store i16* %incdec.ptr16, i16** %wbuf, align 8, !dbg !20375
  %28 = load i16*, i16** %charfields, align 8, !dbg !20376
  %incdec.ptr17 = getelementptr i16, i16* %28, i32 1, !dbg !20376
  store i16* %incdec.ptr17, i16** %charfields, align 8, !dbg !20376
  store i16 22, i16* %addr, align 2, !dbg !20377
  br label %for.cond18, !dbg !20379

for.cond18:                                       ; preds = %for.inc34, %for.end
  %29 = load i16, i16* %addr, align 2, !dbg !20380
  %conv19 = zext i16 %29 to i32, !dbg !20380
  %cmp20 = icmp slt i32 %conv19, 30, !dbg !20382
  br i1 %cmp20, label %for.body22, label %for.end37, !dbg !20383

for.body22:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata i16* %word23, metadata !20384, metadata !DIExpression()), !dbg !20386
  %30 = load i16*, i16** %charfields, align 8, !dbg !20387
  %incdec.ptr24 = getelementptr i16, i16* %30, i32 1, !dbg !20387
  store i16* %incdec.ptr24, i16** %charfields, align 8, !dbg !20387
  %31 = load i16, i16* %30, align 2, !dbg !20389
  %tobool25 = icmp ne i16 %31, 0, !dbg !20389
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !20390

if.then26:                                        ; preds = %for.body22
  %32 = load i16*, i16** %wbuf, align 8, !dbg !20391
  %33 = load i16, i16* %32, align 2, !dbg !20391
  store i16 %33, i16* %word23, align 2, !dbg !20393
  br label %if.end28, !dbg !20394

if.else27:                                        ; preds = %for.body22
  %34 = load i16*, i16** %wbuf, align 8, !dbg !20395
  %35 = load i16, i16* %34, align 2, !dbg !20397
  store i16 %35, i16* %word23, align 2, !dbg !20398
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  %36 = load i16, i16* %word23, align 2, !dbg !20399
  %37 = load i8*, i8** %iop_base.addr, align 8, !dbg !20399
  %add.ptr29 = getelementptr i8, i8* %37, i64 28, !dbg !20399
  call void @writew(i16 zeroext %36, i8* %add.ptr29) #11, !dbg !20399
  %38 = load i16, i16* %addr, align 2, !dbg !20400
  %conv30 = zext i16 %38 to i32, !dbg !20400
  %or31 = or i32 64, %conv30, !dbg !20400
  %conv32 = trunc i32 %or31 to i16, !dbg !20400
  %39 = load i8*, i8** %iop_base.addr, align 8, !dbg !20400
  %add.ptr33 = getelementptr i8, i8* %39, i64 26, !dbg !20400
  call void @writew(i16 zeroext %conv32, i8* %add.ptr33) #11, !dbg !20400
  %40 = load i8*, i8** %iop_base.addr, align 8, !dbg !20401
  call void @AdvWaitEEPCmd(i8* %40) #11, !dbg !20402
  br label %for.inc34, !dbg !20403

for.inc34:                                        ; preds = %if.end28
  %41 = load i16, i16* %addr, align 2, !dbg !20404
  %inc35 = add i16 %41, 1, !dbg !20404
  store i16 %inc35, i16* %addr, align 2, !dbg !20404
  %42 = load i16*, i16** %wbuf, align 8, !dbg !20405
  %incdec.ptr36 = getelementptr i16, i16* %42, i32 1, !dbg !20405
  store i16* %incdec.ptr36, i16** %wbuf, align 8, !dbg !20405
  br label %for.cond18, !dbg !20406, !llvm.loop !20407

for.end37:                                        ; preds = %for.cond18
  %43 = load i8*, i8** %iop_base.addr, align 8, !dbg !20409
  %add.ptr38 = getelementptr i8, i8* %43, i64 26, !dbg !20409
  call void @writew(i16 zeroext 0, i8* %add.ptr38) #11, !dbg !20409
  %44 = load i8*, i8** %iop_base.addr, align 8, !dbg !20410
  call void @AdvWaitEEPCmd(i8* %44) #11, !dbg !20411
  ret void, !dbg !20412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscSetChipScsiID(i32 %iop_base, i8 zeroext %new_host_id) #2 !dbg !20413 {
entry:
  %retval = alloca i8, align 1
  %iop_base.addr = alloca i32, align 4
  %new_host_id.addr = alloca i8, align 1
  %cfg_lsw = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !20414, metadata !DIExpression()), !dbg !20415
  store i8 %new_host_id, i8* %new_host_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_host_id.addr, metadata !20416, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.declare(metadata i16* %cfg_lsw, metadata !20418, metadata !DIExpression()), !dbg !20419
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !20420
  %add = add i32 %0, 2, !dbg !20420
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !20420
  %conv = zext i16 %call to i32, !dbg !20420
  %shr = ashr i32 %conv, 8, !dbg !20420
  %and = and i32 %shr, 7, !dbg !20420
  %1 = load i8, i8* %new_host_id.addr, align 1, !dbg !20422
  %conv1 = zext i8 %1 to i32, !dbg !20422
  %cmp = icmp eq i32 %and, %conv1, !dbg !20423
  br i1 %cmp, label %if.then, label %if.end, !dbg !20424

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %new_host_id.addr, align 1, !dbg !20425
  store i8 %2, i8* %retval, align 1, !dbg !20427
  br label %return, !dbg !20427

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !20428
  %add3 = add i32 %3, 2, !dbg !20428
  %call4 = call zeroext i16 @inw(i32 %add3) #11, !dbg !20428
  store i16 %call4, i16* %cfg_lsw, align 2, !dbg !20429
  %4 = load i16, i16* %cfg_lsw, align 2, !dbg !20430
  %conv5 = zext i16 %4 to i32, !dbg !20430
  %and6 = and i32 %conv5, 63743, !dbg !20430
  %conv7 = trunc i32 %and6 to i16, !dbg !20430
  store i16 %conv7, i16* %cfg_lsw, align 2, !dbg !20430
  %5 = load i8, i8* %new_host_id.addr, align 1, !dbg !20431
  %conv8 = zext i8 %5 to i32, !dbg !20431
  %and9 = and i32 %conv8, 7, !dbg !20432
  %shl = shl i32 %and9, 8, !dbg !20433
  %conv10 = trunc i32 %shl to i16, !dbg !20434
  %conv11 = zext i16 %conv10 to i32, !dbg !20434
  %6 = load i16, i16* %cfg_lsw, align 2, !dbg !20435
  %conv12 = zext i16 %6 to i32, !dbg !20435
  %or = or i32 %conv12, %conv11, !dbg !20435
  %conv13 = trunc i32 %or to i16, !dbg !20435
  store i16 %conv13, i16* %cfg_lsw, align 2, !dbg !20435
  %7 = load i16, i16* %cfg_lsw, align 2, !dbg !20436
  %8 = load i32, i32* %iop_base.addr, align 4, !dbg !20436
  %add14 = add i32 %8, 2, !dbg !20436
  call void @outw(i16 zeroext %7, i32 %add14) #11, !dbg !20436
  %9 = load i32, i32* %iop_base.addr, align 4, !dbg !20437
  %add15 = add i32 %9, 2, !dbg !20437
  %call16 = call zeroext i16 @inw(i32 %add15) #11, !dbg !20437
  %conv17 = zext i16 %call16 to i32, !dbg !20437
  %shr18 = ashr i32 %conv17, 8, !dbg !20437
  %and19 = and i32 %shr18, 7, !dbg !20437
  %conv20 = trunc i32 %and19 to i8, !dbg !20438
  store i8 %conv20, i8* %retval, align 1, !dbg !20439
  br label %return, !dbg !20439

return:                                           ; preds = %if.end, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !20440
  ret i8 %10, !dbg !20440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @AscGetEisaChipCfg(i32 %iop_base) #2 !dbg !20441 {
entry:
  %iop_base.addr = alloca i32, align 4
  %eisa_cfg_iop = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !20444, metadata !DIExpression()), !dbg !20445
  call void @llvm.dbg.declare(metadata i32* %eisa_cfg_iop, metadata !20446, metadata !DIExpression()), !dbg !20447
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !20448
  %and = and i32 %0, 61440, !dbg !20448
  %or = or i32 %and, 3206, !dbg !20449
  store i32 %or, i32* %eisa_cfg_iop, align 4, !dbg !20447
  %1 = load i32, i32* %eisa_cfg_iop, align 4, !dbg !20450
  %call = call zeroext i16 @inw(i32 %1) #11, !dbg !20450
  ret i16 %call, !dbg !20451
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscISR(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !20452 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %chipstat = alloca i16, align 2
  %iop_base = alloca i32, align 4
  %saved_ram_addr = alloca i16, align 2
  %ctrl_reg = alloca i8, align 1
  %saved_ctrl_reg = alloca i8, align 1
  %int_pending = alloca i32, align 4
  %status = alloca i32, align 4
  %host_flag = alloca i8, align 1
  %i = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !20453, metadata !DIExpression()), !dbg !20454
  call void @llvm.dbg.declare(metadata i16* %chipstat, metadata !20455, metadata !DIExpression()), !dbg !20456
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !20457, metadata !DIExpression()), !dbg !20458
  call void @llvm.dbg.declare(metadata i16* %saved_ram_addr, metadata !20459, metadata !DIExpression()), !dbg !20460
  call void @llvm.dbg.declare(metadata i8* %ctrl_reg, metadata !20461, metadata !DIExpression()), !dbg !20462
  call void @llvm.dbg.declare(metadata i8* %saved_ctrl_reg, metadata !20463, metadata !DIExpression()), !dbg !20464
  call void @llvm.dbg.declare(metadata i32* %int_pending, metadata !20465, metadata !DIExpression()), !dbg !20466
  call void @llvm.dbg.declare(metadata i32* %status, metadata !20467, metadata !DIExpression()), !dbg !20468
  call void @llvm.dbg.declare(metadata i8* %host_flag, metadata !20469, metadata !DIExpression()), !dbg !20470
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20471
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !20472
  %1 = load i32, i32* %iop_base1, align 8, !dbg !20472
  store i32 %1, i32* %iop_base, align 4, !dbg !20473
  store i32 0, i32* %int_pending, align 4, !dbg !20474
  %2 = load i32, i32* %iop_base, align 4, !dbg !20475
  %add = add i32 %2, 14, !dbg !20475
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !20475
  %conv = zext i16 %call to i32, !dbg !20475
  %and = and i32 %conv, 3, !dbg !20475
  %cmp = icmp eq i32 %and, 0, !dbg !20477
  br i1 %cmp, label %if.then, label %if.end, !dbg !20478

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %int_pending, align 4, !dbg !20479
  store i32 %3, i32* %retval, align 4, !dbg !20480
  br label %return, !dbg !20480

if.end:                                           ; preds = %entry
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20481
  %init_state = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 20, !dbg !20483
  %5 = load i16, i16* %init_state, align 8, !dbg !20483
  %conv3 = zext i16 %5 to i32, !dbg !20481
  %and4 = and i32 %conv3, 32, !dbg !20484
  %cmp5 = icmp eq i32 %and4, 0, !dbg !20485
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !20486

if.then7:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !20487
  br label %return, !dbg !20487

if.end8:                                          ; preds = %if.end
  %6 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20489
  %in_critical_cnt = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %6, i32 0, i32 18, !dbg !20491
  %7 = load i8, i8* %in_critical_cnt, align 1, !dbg !20491
  %conv9 = zext i8 %7 to i32, !dbg !20489
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !20492
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !20493

if.then12:                                        ; preds = %if.end8
  %8 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20494
  %call13 = call i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %8, i16 zeroext 28) #11, !dbg !20496
  store i32 -1, i32* %retval, align 4, !dbg !20497
  br label %return, !dbg !20497

if.end14:                                         ; preds = %if.end8
  %9 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20498
  %is_in_int = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %9, i32 0, i32 15, !dbg !20500
  %10 = load i8, i8* %is_in_int, align 2, !dbg !20500
  %tobool = trunc i8 %10 to i1, !dbg !20500
  br i1 %tobool, label %if.then15, label %if.end17, !dbg !20501

if.then15:                                        ; preds = %if.end14
  %11 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20502
  %call16 = call i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %11, i16 zeroext 26) #11, !dbg !20504
  store i32 -1, i32* %retval, align 4, !dbg !20505
  br label %return, !dbg !20505

if.end17:                                         ; preds = %if.end14
  %12 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20506
  %is_in_int18 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %12, i32 0, i32 15, !dbg !20507
  store i8 1, i8* %is_in_int18, align 2, !dbg !20508
  %13 = load i32, i32* %iop_base, align 4, !dbg !20509
  %add19 = add i32 %13, 15, !dbg !20509
  %call20 = call zeroext i8 @inb(i32 %add19) #11, !dbg !20509
  store i8 %call20, i8* %ctrl_reg, align 1, !dbg !20510
  %14 = load i8, i8* %ctrl_reg, align 1, !dbg !20511
  %conv21 = zext i8 %14 to i32, !dbg !20511
  %and22 = and i32 %conv21, -214, !dbg !20512
  %conv23 = trunc i32 %and22 to i8, !dbg !20511
  store i8 %conv23, i8* %saved_ctrl_reg, align 1, !dbg !20513
  %15 = load i32, i32* %iop_base, align 4, !dbg !20514
  %add24 = add i32 %15, 14, !dbg !20514
  %call25 = call zeroext i16 @inw(i32 %add24) #11, !dbg !20514
  store i16 %call25, i16* %chipstat, align 2, !dbg !20515
  %16 = load i16, i16* %chipstat, align 2, !dbg !20516
  %conv26 = zext i16 %16 to i32, !dbg !20516
  %and27 = and i32 %conv26, 2, !dbg !20518
  %tobool28 = icmp ne i32 %and27, 0, !dbg !20518
  br i1 %tobool28, label %if.then29, label %if.end56, !dbg !20519

if.then29:                                        ; preds = %if.end17
  %17 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20520
  %bus_type = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %17, i32 0, i32 4, !dbg !20523
  %18 = load i16, i16* %bus_type, align 2, !dbg !20523
  %conv30 = zext i16 %18 to i32, !dbg !20520
  %and31 = and i32 %conv30, 66, !dbg !20524
  %tobool32 = icmp ne i32 %and31, 0, !dbg !20524
  br i1 %tobool32, label %if.end55, label %if.then33, !dbg !20525

if.then33:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20526, metadata !DIExpression()), !dbg !20528
  store i32 10, i32* %i, align 4, !dbg !20528
  store i32 1, i32* %int_pending, align 4, !dbg !20529
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20530
  %sdtr_done = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 6, !dbg !20531
  store i8 0, i8* %sdtr_done, align 1, !dbg !20532
  %20 = load i8, i8* %saved_ctrl_reg, align 1, !dbg !20533
  %conv34 = zext i8 %20 to i32, !dbg !20533
  %and35 = and i32 %conv34, 223, !dbg !20533
  %conv36 = trunc i32 %and35 to i8, !dbg !20533
  store i8 %conv36, i8* %saved_ctrl_reg, align 1, !dbg !20533
  br label %while.cond, !dbg !20534

while.cond:                                       ; preds = %while.end, %if.then33
  %21 = load i32, i32* %iop_base, align 4, !dbg !20535
  %add37 = add i32 %21, 14, !dbg !20535
  %call38 = call zeroext i16 @inw(i32 %add37) #11, !dbg !20535
  %conv39 = zext i16 %call38 to i32, !dbg !20535
  %and40 = and i32 %conv39, 8, !dbg !20536
  %tobool41 = icmp ne i32 %and40, 0, !dbg !20536
  br i1 %tobool41, label %land.rhs, label %land.end, !dbg !20537

land.rhs:                                         ; preds = %while.cond
  %22 = load i32, i32* %i, align 4, !dbg !20538
  %dec = add i32 %22, -1, !dbg !20538
  store i32 %dec, i32* %i, align 4, !dbg !20538
  %cmp42 = icmp sgt i32 %22, 0, !dbg !20539
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %23 = phi i1 [ false, %while.cond ], [ %cmp42, %land.rhs ], !dbg !20540
  br i1 %23, label %while.body, label %while.end48, !dbg !20534

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !20541, metadata !DIExpression()), !dbg !20544
  store i64 100, i64* %__ms, align 8, !dbg !20544
  br label %while.cond44, !dbg !20544

while.cond44:                                     ; preds = %while.body47, %while.body
  %24 = load i64, i64* %__ms, align 8, !dbg !20544
  %dec45 = add i64 %24, -1, !dbg !20544
  store i64 %dec45, i64* %__ms, align 8, !dbg !20544
  %tobool46 = icmp ne i64 %24, 0, !dbg !20544
  br i1 %tobool46, label %while.body47, label %while.end, !dbg !20544

while.body47:                                     ; preds = %while.cond44
  call void @__const_udelay(i64 4295000) #11, !dbg !20545
  br label %while.cond44, !dbg !20544, !llvm.loop !20550

while.end:                                        ; preds = %while.cond44
  br label %while.cond, !dbg !20534, !llvm.loop !20551

while.end48:                                      ; preds = %land.end
  %25 = load i32, i32* %iop_base, align 4, !dbg !20553
  %add49 = add i32 %25, 15, !dbg !20553
  call void @outb(i8 zeroext -96, i32 %add49) #11, !dbg !20553
  %26 = load i32, i32* %iop_base, align 4, !dbg !20554
  %add50 = add i32 %26, 15, !dbg !20554
  call void @outb(i8 zeroext 32, i32 %add50) #11, !dbg !20554
  %27 = load i32, i32* %iop_base, align 4, !dbg !20555
  %add51 = add i32 %27, 14, !dbg !20555
  call void @outw(i16 zeroext 4096, i32 %add51) #11, !dbg !20555
  %28 = load i32, i32* %iop_base, align 4, !dbg !20556
  %add52 = add i32 %28, 14, !dbg !20556
  call void @outw(i16 zeroext 0, i32 %add52) #11, !dbg !20556
  %29 = load i32, i32* %iop_base, align 4, !dbg !20557
  %add53 = add i32 %29, 14, !dbg !20557
  %call54 = call zeroext i16 @inw(i32 %add53) #11, !dbg !20557
  store i16 %call54, i16* %chipstat, align 2, !dbg !20558
  br label %if.end55, !dbg !20559

if.end55:                                         ; preds = %while.end48, %if.then29
  br label %if.end56, !dbg !20560

if.end56:                                         ; preds = %if.end55, %if.end17
  %30 = load i32, i32* %iop_base, align 4, !dbg !20561
  %add57 = add i32 %30, 10, !dbg !20561
  %call58 = call zeroext i16 @inw(i32 %add57) #11, !dbg !20561
  store i16 %call58, i16* %saved_ram_addr, align 2, !dbg !20562
  %31 = load i32, i32* %iop_base, align 4, !dbg !20563
  %call59 = call zeroext i8 @AscReadLramByte(i32 %31, i16 zeroext 93) #11, !dbg !20564
  %conv60 = zext i8 %call59 to i32, !dbg !20564
  %and61 = and i32 %conv60, 254, !dbg !20565
  %conv62 = trunc i32 %and61 to i8, !dbg !20564
  store i8 %conv62, i8* %host_flag, align 1, !dbg !20566
  %32 = load i32, i32* %iop_base, align 4, !dbg !20567
  %33 = load i8, i8* %host_flag, align 1, !dbg !20568
  %conv63 = zext i8 %33 to i32, !dbg !20568
  %or = or i32 %conv63, 1, !dbg !20569
  %conv64 = trunc i32 %or to i8, !dbg !20570
  call void @AscWriteLramByte(i32 %32, i16 zeroext 93, i8 zeroext %conv64) #11, !dbg !20571
  %34 = load i16, i16* %chipstat, align 2, !dbg !20572
  %conv65 = zext i16 %34 to i32, !dbg !20572
  %and66 = and i32 %conv65, 1, !dbg !20574
  %tobool67 = icmp ne i32 %and66, 0, !dbg !20574
  br i1 %tobool67, label %if.then69, label %lor.lhs.false, !dbg !20575

lor.lhs.false:                                    ; preds = %if.end56
  %35 = load i32, i32* %int_pending, align 4, !dbg !20576
  %tobool68 = icmp ne i32 %35, 0, !dbg !20577
  br i1 %tobool68, label %if.then69, label %if.end107, !dbg !20578

if.then69:                                        ; preds = %lor.lhs.false, %if.end56
  %36 = load i32, i32* %iop_base, align 4, !dbg !20579
  call void @AscAckInterrupt(i32 %36) #11, !dbg !20581
  store i32 1, i32* %int_pending, align 4, !dbg !20582
  %37 = load i16, i16* %chipstat, align 2, !dbg !20583
  %conv70 = zext i16 %37 to i32, !dbg !20583
  %and71 = and i32 %conv70, 16, !dbg !20585
  %tobool72 = icmp ne i32 %and71, 0, !dbg !20585
  br i1 %tobool72, label %land.lhs.true, label %if.else, !dbg !20586

land.lhs.true:                                    ; preds = %if.then69
  %38 = load i8, i8* %ctrl_reg, align 1, !dbg !20587
  %conv73 = zext i8 %38 to i32, !dbg !20587
  %and74 = and i32 %conv73, 16, !dbg !20588
  %tobool75 = icmp ne i32 %and74, 0, !dbg !20588
  br i1 %tobool75, label %if.then76, label %if.else, !dbg !20589

if.then76:                                        ; preds = %land.lhs.true
  %39 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20590
  call void @AscIsrChipHalted(%struct.asc_dvc_var* %39) #11, !dbg !20592
  %40 = load i8, i8* %saved_ctrl_reg, align 1, !dbg !20593
  %conv77 = zext i8 %40 to i32, !dbg !20593
  %and78 = and i32 %conv77, 223, !dbg !20593
  %conv79 = trunc i32 %and78 to i8, !dbg !20593
  store i8 %conv79, i8* %saved_ctrl_reg, align 1, !dbg !20593
  br label %if.end106, !dbg !20594

if.else:                                          ; preds = %land.lhs.true, %if.then69
  %41 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20595
  %dvc_cntl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %41, i32 0, i32 2, !dbg !20598
  %42 = load i16, i16* %dvc_cntl, align 2, !dbg !20598
  %conv80 = zext i16 %42 to i32, !dbg !20595
  %and81 = and i32 %conv80, 128, !dbg !20599
  %cmp82 = icmp ne i32 %and81, 0, !dbg !20600
  br i1 %cmp82, label %if.then84, label %if.else92, !dbg !20601

if.then84:                                        ; preds = %if.else
  br label %while.cond85, !dbg !20602

while.cond85:                                     ; preds = %while.body90, %if.then84
  %43 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20604
  %call86 = call i32 @AscIsrQDone(%struct.asc_dvc_var* %43) #11, !dbg !20605
  store i32 %call86, i32* %status, align 4, !dbg !20606
  %and87 = and i32 %call86, 1, !dbg !20607
  %cmp88 = icmp ne i32 %and87, 0, !dbg !20608
  br i1 %cmp88, label %while.body90, label %while.end91, !dbg !20602

while.body90:                                     ; preds = %while.cond85
  br label %while.cond85, !dbg !20602, !llvm.loop !20609

while.end91:                                      ; preds = %while.cond85
  br label %if.end100, !dbg !20611

if.else92:                                        ; preds = %if.else
  br label %do.body, !dbg !20612

do.body:                                          ; preds = %do.cond, %if.else92
  %44 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20614
  %call93 = call i32 @AscIsrQDone(%struct.asc_dvc_var* %44) #11, !dbg !20617
  store i32 %call93, i32* %status, align 4, !dbg !20618
  %cmp94 = icmp eq i32 %call93, 1, !dbg !20619
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !20620

if.then96:                                        ; preds = %do.body
  br label %do.end, !dbg !20621

if.end97:                                         ; preds = %do.body
  br label %do.cond, !dbg !20623

do.cond:                                          ; preds = %if.end97
  %45 = load i32, i32* %status, align 4, !dbg !20624
  %cmp98 = icmp eq i32 %45, 17, !dbg !20625
  br i1 %cmp98, label %do.body, label %do.end, !dbg !20623, !llvm.loop !20626

do.end:                                           ; preds = %do.cond, %if.then96
  br label %if.end100

if.end100:                                        ; preds = %do.end, %while.end91
  %46 = load i32, i32* %status, align 4, !dbg !20628
  %and101 = and i32 %46, 128, !dbg !20630
  %cmp102 = icmp ne i32 %and101, 0, !dbg !20631
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !20632

if.then104:                                       ; preds = %if.end100
  store i32 -1, i32* %int_pending, align 4, !dbg !20633
  br label %if.end105, !dbg !20634

if.end105:                                        ; preds = %if.then104, %if.end100
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then76
  br label %if.end107, !dbg !20635

if.end107:                                        ; preds = %if.end106, %lor.lhs.false
  %47 = load i32, i32* %iop_base, align 4, !dbg !20636
  %48 = load i8, i8* %host_flag, align 1, !dbg !20637
  call void @AscWriteLramByte(i32 %47, i16 zeroext 93, i8 zeroext %48) #11, !dbg !20638
  %49 = load i16, i16* %saved_ram_addr, align 2, !dbg !20639
  %50 = load i32, i32* %iop_base, align 4, !dbg !20639
  %add108 = add i32 %50, 10, !dbg !20639
  call void @outw(i16 zeroext %49, i32 %add108) #11, !dbg !20639
  %51 = load i8, i8* %saved_ctrl_reg, align 1, !dbg !20640
  %52 = load i32, i32* %iop_base, align 4, !dbg !20640
  %add109 = add i32 %52, 15, !dbg !20640
  call void @outb(i8 zeroext %51, i32 %add109) #11, !dbg !20640
  %53 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20641
  %is_in_int110 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %53, i32 0, i32 15, !dbg !20642
  store i8 0, i8* %is_in_int110, align 2, !dbg !20643
  %54 = load i32, i32* %int_pending, align 4, !dbg !20644
  store i32 %54, i32* %retval, align 4, !dbg !20645
  br label %return, !dbg !20645

return:                                           ; preds = %if.end107, %if.then15, %if.then12, %if.then7, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !20646
  ret i32 %55, !dbg !20646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscAckInterrupt(i32 %iop_base) #2 !dbg !20647 {
entry:
  %iop_base.addr = alloca i32, align 4
  %host_flag = alloca i8, align 1
  %risc_flag = alloca i8, align 1
  %loop = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !20648, metadata !DIExpression()), !dbg !20649
  call void @llvm.dbg.declare(metadata i8* %host_flag, metadata !20650, metadata !DIExpression()), !dbg !20651
  call void @llvm.dbg.declare(metadata i8* %risc_flag, metadata !20652, metadata !DIExpression()), !dbg !20653
  call void @llvm.dbg.declare(metadata i16* %loop, metadata !20654, metadata !DIExpression()), !dbg !20655
  store i16 0, i16* %loop, align 2, !dbg !20656
  br label %do.body, !dbg !20657

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !20658
  %call = call zeroext i8 @AscReadLramByte(i32 %0, i16 zeroext 106) #11, !dbg !20660
  store i8 %call, i8* %risc_flag, align 1, !dbg !20661
  %1 = load i16, i16* %loop, align 2, !dbg !20662
  %inc = add i16 %1, 1, !dbg !20662
  store i16 %inc, i16* %loop, align 2, !dbg !20662
  %conv = zext i16 %1 to i32, !dbg !20664
  %cmp = icmp sgt i32 %conv, 32767, !dbg !20665
  br i1 %cmp, label %if.then, label %if.end, !dbg !20666

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !20667

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !20669

do.cond:                                          ; preds = %if.end
  %2 = load i8, i8* %risc_flag, align 1, !dbg !20670
  %conv2 = zext i8 %2 to i32, !dbg !20670
  %and = and i32 %conv2, 1, !dbg !20671
  %cmp3 = icmp ne i32 %and, 0, !dbg !20672
  br i1 %cmp3, label %do.body, label %do.end, !dbg !20669, !llvm.loop !20673

do.end:                                           ; preds = %do.cond, %if.then
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !20675
  %call5 = call zeroext i8 @AscReadLramByte(i32 %3, i16 zeroext 93) #11, !dbg !20676
  %conv6 = zext i8 %call5 to i32, !dbg !20676
  %and7 = and i32 %conv6, -3, !dbg !20677
  %conv8 = trunc i32 %and7 to i8, !dbg !20676
  store i8 %conv8, i8* %host_flag, align 1, !dbg !20678
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !20679
  %5 = load i8, i8* %host_flag, align 1, !dbg !20680
  %conv9 = zext i8 %5 to i32, !dbg !20680
  %or = or i32 %conv9, 2, !dbg !20681
  %conv10 = trunc i32 %or to i8, !dbg !20682
  call void @AscWriteLramByte(i32 %4, i16 zeroext 93, i8 zeroext %conv10) #11, !dbg !20683
  %6 = load i32, i32* %iop_base.addr, align 4, !dbg !20684
  %add = add i32 %6, 14, !dbg !20684
  call void @outw(i16 zeroext 256, i32 %add) #11, !dbg !20684
  store i16 0, i16* %loop, align 2, !dbg !20685
  br label %while.cond, !dbg !20686

while.cond:                                       ; preds = %if.end21, %do.end
  %7 = load i32, i32* %iop_base.addr, align 4, !dbg !20687
  %add11 = add i32 %7, 14, !dbg !20687
  %call12 = call zeroext i16 @inw(i32 %add11) #11, !dbg !20687
  %conv13 = zext i16 %call12 to i32, !dbg !20687
  %and14 = and i32 %conv13, 1, !dbg !20688
  %tobool = icmp ne i32 %and14, 0, !dbg !20686
  br i1 %tobool, label %while.body, label %while.end, !dbg !20686

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %iop_base.addr, align 4, !dbg !20689
  %add15 = add i32 %8, 14, !dbg !20689
  call void @outw(i16 zeroext 256, i32 %add15) #11, !dbg !20689
  %9 = load i16, i16* %loop, align 2, !dbg !20691
  %inc16 = add i16 %9, 1, !dbg !20691
  store i16 %inc16, i16* %loop, align 2, !dbg !20691
  %conv17 = zext i16 %9 to i32, !dbg !20693
  %cmp18 = icmp sgt i32 %conv17, 3, !dbg !20694
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !20695

if.then20:                                        ; preds = %while.body
  br label %while.end, !dbg !20696

if.end21:                                         ; preds = %while.body
  br label %while.cond, !dbg !20686, !llvm.loop !20698

while.end:                                        ; preds = %if.then20, %while.cond
  %10 = load i32, i32* %iop_base.addr, align 4, !dbg !20700
  %11 = load i8, i8* %host_flag, align 1, !dbg !20701
  call void @AscWriteLramByte(i32 %10, i16 zeroext 93, i8 zeroext %11) #11, !dbg !20702
  ret void, !dbg !20703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscIsrChipHalted(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !20704 {
entry:
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %ext_msg = alloca %struct.ext_msg, align 1
  %out_msg = alloca %struct.ext_msg, align 1
  %halt_q_addr = alloca i16, align 2
  %sdtr_accept = alloca i8, align 1
  %int_halt_code = alloca i16, align 2
  %scsi_busy = alloca i8, align 1
  %target_id = alloca i8, align 1
  %iop_base = alloca i32, align 4
  %tag_code = alloca i8, align 1
  %q_status = alloca i8, align 1
  %halt_qp = alloca i8, align 1
  %sdtr_data = alloca i8, align 1
  %target_ix = alloca i8, align 1
  %q_cntl = alloca i8, align 1
  %tid_no = alloca i8, align 1
  %cur_dvc_qng = alloca i8, align 1
  %asyn_sdtr = alloca i8, align 1
  %scsi_status = alloca i8, align 1
  %boardp = alloca %struct.asc_board*, align 8
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !20705, metadata !DIExpression()), !dbg !20706
  call void @llvm.dbg.declare(metadata %struct.ext_msg* %ext_msg, metadata !20707, metadata !DIExpression()), !dbg !20708
  call void @llvm.dbg.declare(metadata %struct.ext_msg* %out_msg, metadata !20709, metadata !DIExpression()), !dbg !20710
  call void @llvm.dbg.declare(metadata i16* %halt_q_addr, metadata !20711, metadata !DIExpression()), !dbg !20712
  call void @llvm.dbg.declare(metadata i8* %sdtr_accept, metadata !20713, metadata !DIExpression()), !dbg !20714
  call void @llvm.dbg.declare(metadata i16* %int_halt_code, metadata !20715, metadata !DIExpression()), !dbg !20716
  call void @llvm.dbg.declare(metadata i8* %scsi_busy, metadata !20717, metadata !DIExpression()), !dbg !20718
  call void @llvm.dbg.declare(metadata i8* %target_id, metadata !20719, metadata !DIExpression()), !dbg !20720
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !20721, metadata !DIExpression()), !dbg !20722
  call void @llvm.dbg.declare(metadata i8* %tag_code, metadata !20723, metadata !DIExpression()), !dbg !20724
  call void @llvm.dbg.declare(metadata i8* %q_status, metadata !20725, metadata !DIExpression()), !dbg !20726
  call void @llvm.dbg.declare(metadata i8* %halt_qp, metadata !20727, metadata !DIExpression()), !dbg !20728
  call void @llvm.dbg.declare(metadata i8* %sdtr_data, metadata !20729, metadata !DIExpression()), !dbg !20730
  call void @llvm.dbg.declare(metadata i8* %target_ix, metadata !20731, metadata !DIExpression()), !dbg !20732
  call void @llvm.dbg.declare(metadata i8* %q_cntl, metadata !20733, metadata !DIExpression()), !dbg !20734
  call void @llvm.dbg.declare(metadata i8* %tid_no, metadata !20735, metadata !DIExpression()), !dbg !20736
  call void @llvm.dbg.declare(metadata i8* %cur_dvc_qng, metadata !20737, metadata !DIExpression()), !dbg !20738
  call void @llvm.dbg.declare(metadata i8* %asyn_sdtr, metadata !20739, metadata !DIExpression()), !dbg !20740
  call void @llvm.dbg.declare(metadata i8* %scsi_status, metadata !20741, metadata !DIExpression()), !dbg !20742
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !20743, metadata !DIExpression()), !dbg !20744
  br label %do.body, !dbg !20745

do.body:                                          ; preds = %entry
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20746
  %drv_ptr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 36, !dbg !20746
  %1 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !20746
  %tobool = icmp ne %struct.asc_board* %1, null, !dbg !20746
  %lnot = xor i1 %tobool, true, !dbg !20746
  %lnot1 = xor i1 %lnot, true, !dbg !20746
  %lnot2 = xor i1 %lnot1, true, !dbg !20746
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !20746
  %conv = sext i32 %lnot.ext to i64, !dbg !20746
  %tobool3 = icmp ne i64 %conv, 0, !dbg !20746
  br i1 %tobool3, label %if.then, label %if.end, !dbg !20749

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !20746

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !20750

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !20752

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !20750

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 6382, i32 0, i64 12) #6, !dbg !20754, !srcloc !20756
  br label %do.end7, !dbg !20754

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !20750

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #6, !dbg !20757, !srcloc !20760
  unreachable, !dbg !20761

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !20750

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !20750

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !20749

do.end11:                                         ; preds = %if.end
  %2 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20762
  %drv_ptr12 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %2, i32 0, i32 36, !dbg !20763
  %3 = load %struct.asc_board*, %struct.asc_board** %drv_ptr12, align 8, !dbg !20763
  store %struct.asc_board* %3, %struct.asc_board** %boardp, align 8, !dbg !20764
  %4 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20765
  %iop_base13 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %4, i32 0, i32 0, !dbg !20766
  %5 = load i32, i32* %iop_base13, align 8, !dbg !20766
  store i32 %5, i32* %iop_base, align 4, !dbg !20767
  %6 = load i32, i32* %iop_base, align 4, !dbg !20768
  %call = call zeroext i16 @AscReadLramWord(i32 %6, i16 zeroext 64) #11, !dbg !20769
  store i16 %call, i16* %int_halt_code, align 2, !dbg !20770
  %7 = load i32, i32* %iop_base, align 4, !dbg !20771
  %call14 = call zeroext i8 @AscReadLramByte(i32 %7, i16 zeroext 77) #11, !dbg !20772
  store i8 %call14, i8* %halt_qp, align 1, !dbg !20773
  %8 = load i8, i8* %halt_qp, align 1, !dbg !20774
  %conv15 = zext i8 %8 to i32, !dbg !20774
  %shl = shl i32 %conv15, 6, !dbg !20774
  %add = add i32 16384, %shl, !dbg !20774
  %conv16 = trunc i32 %add to i16, !dbg !20774
  store i16 %conv16, i16* %halt_q_addr, align 2, !dbg !20775
  %9 = load i32, i32* %iop_base, align 4, !dbg !20776
  %10 = load i16, i16* %halt_q_addr, align 2, !dbg !20777
  %conv17 = zext i16 %10 to i32, !dbg !20777
  %add18 = add i32 %conv17, 26, !dbg !20778
  %conv19 = trunc i32 %add18 to i16, !dbg !20779
  %call20 = call zeroext i8 @AscReadLramByte(i32 %9, i16 zeroext %conv19) #11, !dbg !20780
  store i8 %call20, i8* %target_ix, align 1, !dbg !20781
  %11 = load i32, i32* %iop_base, align 4, !dbg !20782
  %12 = load i16, i16* %halt_q_addr, align 2, !dbg !20783
  %conv21 = zext i16 %12 to i32, !dbg !20783
  %add22 = add i32 %conv21, 4, !dbg !20784
  %conv23 = trunc i32 %add22 to i16, !dbg !20785
  %call24 = call zeroext i8 @AscReadLramByte(i32 %11, i16 zeroext %conv23) #11, !dbg !20786
  store i8 %call24, i8* %q_cntl, align 1, !dbg !20787
  %13 = load i8, i8* %target_ix, align 1, !dbg !20788
  %conv25 = zext i8 %13 to i32, !dbg !20788
  %and = and i32 %conv25, 7, !dbg !20788
  %conv26 = trunc i32 %and to i8, !dbg !20788
  store i8 %conv26, i8* %tid_no, align 1, !dbg !20789
  %14 = load i8, i8* %tid_no, align 1, !dbg !20790
  %conv27 = zext i8 %14 to i32, !dbg !20790
  %shl28 = shl i32 1, %conv27, !dbg !20790
  %conv29 = trunc i32 %shl28 to i8, !dbg !20790
  store i8 %conv29, i8* %target_id, align 1, !dbg !20791
  %15 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20792
  %pci_fix_asyn_xfer = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %15, i32 0, i32 33, !dbg !20794
  %16 = load i8, i8* %pci_fix_asyn_xfer, align 1, !dbg !20794
  %conv30 = zext i8 %16 to i32, !dbg !20792
  %17 = load i8, i8* %target_id, align 1, !dbg !20795
  %conv31 = zext i8 %17 to i32, !dbg !20795
  %and32 = and i32 %conv30, %conv31, !dbg !20796
  %tobool33 = icmp ne i32 %and32, 0, !dbg !20796
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !20797

if.then34:                                        ; preds = %do.end11
  store i8 65, i8* %asyn_sdtr, align 1, !dbg !20798
  br label %if.end35, !dbg !20800

if.else:                                          ; preds = %do.end11
  store i8 0, i8* %asyn_sdtr, align 1, !dbg !20801
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then34
  %18 = load i16, i16* %int_halt_code, align 2, !dbg !20803
  %conv36 = zext i16 %18 to i32, !dbg !20803
  %cmp = icmp eq i32 %conv36, 33536, !dbg !20805
  br i1 %cmp, label %if.then38, label %if.else47, !dbg !20806

if.then38:                                        ; preds = %if.end35
  %19 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20807
  %pci_fix_asyn_xfer39 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %19, i32 0, i32 33, !dbg !20810
  %20 = load i8, i8* %pci_fix_asyn_xfer39, align 1, !dbg !20810
  %conv40 = zext i8 %20 to i32, !dbg !20807
  %21 = load i8, i8* %target_id, align 1, !dbg !20811
  %conv41 = zext i8 %21 to i32, !dbg !20811
  %and42 = and i32 %conv40, %conv41, !dbg !20812
  %tobool43 = icmp ne i32 %and42, 0, !dbg !20812
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !20813

if.then44:                                        ; preds = %if.then38
  %22 = load i32, i32* %iop_base, align 4, !dbg !20814
  %23 = load i8, i8* %tid_no, align 1, !dbg !20816
  call void @AscSetChipSDTR(i32 %22, i8 zeroext 0, i8 zeroext %23) #11, !dbg !20817
  %24 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !20818
  %sdtr_data45 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %24, i32 0, i32 13, !dbg !20819
  %25 = load i8, i8* %tid_no, align 1, !dbg !20820
  %idxprom = zext i8 %25 to i64, !dbg !20818
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %sdtr_data45, i64 0, i64 %idxprom, !dbg !20818
  store i8 0, i8* %arrayidx, align 1, !dbg !20821
  br label %if.end46, !dbg !20822

if.end46:                                         ; preds = %if.then44, %if.then38
  %26 = load i32, i32* %iop_base, align 4, !dbg !20823
  call void @AscWriteLramWord(i32 %26, i16 zeroext 64, i16 zeroext 0) #11, !dbg !20824
  br label %return, !dbg !20825

if.else47:                                        ; preds = %if.end35
  %27 = load i16, i16* %int_halt_code, align 2, !dbg !20826
  %conv48 = zext i16 %27 to i32, !dbg !20826
  %cmp49 = icmp eq i32 %conv48, 33792, !dbg !20828
  br i1 %cmp49, label %if.then51, label %if.else62, !dbg !20829

if.then51:                                        ; preds = %if.else47
  %28 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20830
  %pci_fix_asyn_xfer52 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %28, i32 0, i32 33, !dbg !20833
  %29 = load i8, i8* %pci_fix_asyn_xfer52, align 1, !dbg !20833
  %conv53 = zext i8 %29 to i32, !dbg !20830
  %30 = load i8, i8* %target_id, align 1, !dbg !20834
  %conv54 = zext i8 %30 to i32, !dbg !20834
  %and55 = and i32 %conv53, %conv54, !dbg !20835
  %tobool56 = icmp ne i32 %and55, 0, !dbg !20835
  br i1 %tobool56, label %if.then57, label %if.end61, !dbg !20836

if.then57:                                        ; preds = %if.then51
  %31 = load i32, i32* %iop_base, align 4, !dbg !20837
  %32 = load i8, i8* %asyn_sdtr, align 1, !dbg !20839
  %33 = load i8, i8* %tid_no, align 1, !dbg !20840
  call void @AscSetChipSDTR(i32 %31, i8 zeroext %32, i8 zeroext %33) #11, !dbg !20841
  %34 = load i8, i8* %asyn_sdtr, align 1, !dbg !20842
  %35 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !20843
  %sdtr_data58 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %35, i32 0, i32 13, !dbg !20844
  %36 = load i8, i8* %tid_no, align 1, !dbg !20845
  %idxprom59 = zext i8 %36 to i64, !dbg !20843
  %arrayidx60 = getelementptr [8 x i8], [8 x i8]* %sdtr_data58, i64 0, i64 %idxprom59, !dbg !20843
  store i8 %34, i8* %arrayidx60, align 1, !dbg !20846
  br label %if.end61, !dbg !20847

if.end61:                                         ; preds = %if.then57, %if.then51
  %37 = load i32, i32* %iop_base, align 4, !dbg !20848
  call void @AscWriteLramWord(i32 %37, i16 zeroext 64, i16 zeroext 0) #11, !dbg !20849
  br label %return, !dbg !20850

if.else62:                                        ; preds = %if.else47
  %38 = load i16, i16* %int_halt_code, align 2, !dbg !20851
  %conv63 = zext i16 %38 to i32, !dbg !20851
  %cmp64 = icmp eq i32 %conv63, 32768, !dbg !20853
  br i1 %cmp64, label %if.then66, label %if.else274, !dbg !20854

if.then66:                                        ; preds = %if.else62
  %39 = load i32, i32* %iop_base, align 4, !dbg !20855
  %40 = bitcast %struct.ext_msg* %ext_msg to i8*, !dbg !20857
  call void @AscMemWordCopyPtrFromLram(i32 %39, i16 zeroext 8, i8* %40, i32 4) #11, !dbg !20858
  %msg_type = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 0, !dbg !20859
  %41 = load i8, i8* %msg_type, align 1, !dbg !20859
  %conv67 = zext i8 %41 to i32, !dbg !20861
  %cmp68 = icmp eq i32 %conv67, 1, !dbg !20862
  br i1 %cmp68, label %land.lhs.true, label %if.else243, !dbg !20863

land.lhs.true:                                    ; preds = %if.then66
  %msg_req = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 2, !dbg !20864
  %42 = load i8, i8* %msg_req, align 1, !dbg !20864
  %conv70 = zext i8 %42 to i32, !dbg !20865
  %cmp71 = icmp eq i32 %conv70, 1, !dbg !20866
  br i1 %cmp71, label %land.lhs.true73, label %if.else243, !dbg !20867

land.lhs.true73:                                  ; preds = %land.lhs.true
  %msg_len = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 1, !dbg !20868
  %43 = load i8, i8* %msg_len, align 1, !dbg !20868
  %conv74 = zext i8 %43 to i32, !dbg !20869
  %cmp75 = icmp eq i32 %conv74, 3, !dbg !20870
  br i1 %cmp75, label %if.then77, label %if.else243, !dbg !20871

if.then77:                                        ; preds = %land.lhs.true73
  store i8 1, i8* %sdtr_accept, align 1, !dbg !20872
  %u_ext_msg = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20874
  %sdtr = bitcast %union.anon.81* %u_ext_msg to %struct.anon.82*, !dbg !20874
  %sdtr_req_ack_offset = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr, i32 0, i32 1, !dbg !20874
  %44 = load i8, i8* %sdtr_req_ack_offset, align 1, !dbg !20874
  %conv78 = zext i8 %44 to i32, !dbg !20876
  %cmp79 = icmp sgt i32 %conv78, 15, !dbg !20877
  br i1 %cmp79, label %if.then81, label %if.end85, !dbg !20878

if.then81:                                        ; preds = %if.then77
  store i8 0, i8* %sdtr_accept, align 1, !dbg !20879
  %u_ext_msg82 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20881
  %sdtr83 = bitcast %union.anon.81* %u_ext_msg82 to %struct.anon.82*, !dbg !20881
  %sdtr_req_ack_offset84 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr83, i32 0, i32 1, !dbg !20881
  store i8 15, i8* %sdtr_req_ack_offset84, align 1, !dbg !20882
  br label %if.end85, !dbg !20883

if.end85:                                         ; preds = %if.then81, %if.then77
  %u_ext_msg86 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20884
  %sdtr87 = bitcast %union.anon.81* %u_ext_msg86 to %struct.anon.82*, !dbg !20884
  %sdtr_xfer_period = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr87, i32 0, i32 0, !dbg !20884
  %45 = load i8, i8* %sdtr_xfer_period, align 1, !dbg !20884
  %conv88 = zext i8 %45 to i32, !dbg !20886
  %46 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20887
  %sdtr_period_tbl = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %46, i32 0, i32 25, !dbg !20888
  %47 = load i8*, i8** %sdtr_period_tbl, align 8, !dbg !20888
  %48 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20889
  %min_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %48, i32 0, i32 34, !dbg !20890
  %49 = load i8, i8* %min_sdtr_index, align 2, !dbg !20890
  %idxprom89 = zext i8 %49 to i64, !dbg !20887
  %arrayidx90 = getelementptr i8, i8* %47, i64 %idxprom89, !dbg !20887
  %50 = load i8, i8* %arrayidx90, align 1, !dbg !20887
  %conv91 = zext i8 %50 to i32, !dbg !20887
  %cmp92 = icmp slt i32 %conv88, %conv91, !dbg !20891
  br i1 %cmp92, label %if.then104, label %lor.lhs.false, !dbg !20892

lor.lhs.false:                                    ; preds = %if.end85
  %u_ext_msg94 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20893
  %sdtr95 = bitcast %union.anon.81* %u_ext_msg94 to %struct.anon.82*, !dbg !20893
  %sdtr_xfer_period96 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr95, i32 0, i32 0, !dbg !20893
  %51 = load i8, i8* %sdtr_xfer_period96, align 1, !dbg !20893
  %conv97 = zext i8 %51 to i32, !dbg !20894
  %52 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20895
  %sdtr_period_tbl98 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %52, i32 0, i32 25, !dbg !20896
  %53 = load i8*, i8** %sdtr_period_tbl98, align 8, !dbg !20896
  %54 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20897
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %54, i32 0, i32 35, !dbg !20898
  %55 = load i8, i8* %max_sdtr_index, align 1, !dbg !20898
  %idxprom99 = zext i8 %55 to i64, !dbg !20895
  %arrayidx100 = getelementptr i8, i8* %53, i64 %idxprom99, !dbg !20895
  %56 = load i8, i8* %arrayidx100, align 1, !dbg !20895
  %conv101 = zext i8 %56 to i32, !dbg !20895
  %cmp102 = icmp sgt i32 %conv97, %conv101, !dbg !20899
  br i1 %cmp102, label %if.then104, label %if.end112, !dbg !20900

if.then104:                                       ; preds = %lor.lhs.false, %if.end85
  store i8 0, i8* %sdtr_accept, align 1, !dbg !20901
  %57 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20903
  %sdtr_period_tbl105 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %57, i32 0, i32 25, !dbg !20904
  %58 = load i8*, i8** %sdtr_period_tbl105, align 8, !dbg !20904
  %59 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20905
  %min_sdtr_index106 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %59, i32 0, i32 34, !dbg !20906
  %60 = load i8, i8* %min_sdtr_index106, align 2, !dbg !20906
  %idxprom107 = zext i8 %60 to i64, !dbg !20903
  %arrayidx108 = getelementptr i8, i8* %58, i64 %idxprom107, !dbg !20903
  %61 = load i8, i8* %arrayidx108, align 1, !dbg !20903
  %u_ext_msg109 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20907
  %sdtr110 = bitcast %union.anon.81* %u_ext_msg109 to %struct.anon.82*, !dbg !20907
  %sdtr_xfer_period111 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr110, i32 0, i32 0, !dbg !20907
  store i8 %61, i8* %sdtr_xfer_period111, align 1, !dbg !20908
  br label %if.end112, !dbg !20909

if.end112:                                        ; preds = %if.then104, %lor.lhs.false
  %62 = load i8, i8* %sdtr_accept, align 1, !dbg !20910
  %tobool113 = trunc i8 %62 to i1, !dbg !20910
  br i1 %tobool113, label %if.then114, label %if.end141, !dbg !20912

if.then114:                                       ; preds = %if.end112
  %63 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20913
  %u_ext_msg115 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20915
  %sdtr116 = bitcast %union.anon.81* %u_ext_msg115 to %struct.anon.82*, !dbg !20915
  %sdtr_xfer_period117 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr116, i32 0, i32 0, !dbg !20915
  %64 = load i8, i8* %sdtr_xfer_period117, align 1, !dbg !20915
  %u_ext_msg118 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20916
  %sdtr119 = bitcast %union.anon.81* %u_ext_msg118 to %struct.anon.82*, !dbg !20916
  %sdtr_req_ack_offset120 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr119, i32 0, i32 1, !dbg !20916
  %65 = load i8, i8* %sdtr_req_ack_offset120, align 1, !dbg !20916
  %call121 = call zeroext i8 @AscCalSDTRData(%struct.asc_dvc_var* %63, i8 zeroext %64, i8 zeroext %65) #11, !dbg !20917
  store i8 %call121, i8* %sdtr_data, align 1, !dbg !20918
  %66 = load i8, i8* %sdtr_data, align 1, !dbg !20919
  %conv122 = zext i8 %66 to i32, !dbg !20919
  %cmp123 = icmp eq i32 %conv122, 255, !dbg !20921
  br i1 %cmp123, label %if.then125, label %if.end140, !dbg !20922

if.then125:                                       ; preds = %if.then114
  %67 = load i8, i8* %q_cntl, align 1, !dbg !20923
  %conv126 = zext i8 %67 to i32, !dbg !20923
  %or = or i32 %conv126, 64, !dbg !20923
  %conv127 = trunc i32 %or to i8, !dbg !20923
  store i8 %conv127, i8* %q_cntl, align 1, !dbg !20923
  %68 = load i8, i8* %target_id, align 1, !dbg !20925
  %conv128 = zext i8 %68 to i32, !dbg !20925
  %neg = xor i32 %conv128, -1, !dbg !20926
  %69 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20927
  %init_sdtr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %69, i32 0, i32 5, !dbg !20928
  %70 = load i8, i8* %init_sdtr, align 4, !dbg !20929
  %conv129 = zext i8 %70 to i32, !dbg !20929
  %and130 = and i32 %conv129, %neg, !dbg !20929
  %conv131 = trunc i32 %and130 to i8, !dbg !20929
  store i8 %conv131, i8* %init_sdtr, align 4, !dbg !20929
  %71 = load i8, i8* %target_id, align 1, !dbg !20930
  %conv132 = zext i8 %71 to i32, !dbg !20930
  %neg133 = xor i32 %conv132, -1, !dbg !20931
  %72 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20932
  %sdtr_done = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %72, i32 0, i32 6, !dbg !20933
  %73 = load i8, i8* %sdtr_done, align 1, !dbg !20934
  %conv134 = zext i8 %73 to i32, !dbg !20934
  %and135 = and i32 %conv134, %neg133, !dbg !20934
  %conv136 = trunc i32 %and135 to i8, !dbg !20934
  store i8 %conv136, i8* %sdtr_done, align 1, !dbg !20934
  %74 = load i32, i32* %iop_base, align 4, !dbg !20935
  %75 = load i8, i8* %asyn_sdtr, align 1, !dbg !20936
  %76 = load i8, i8* %tid_no, align 1, !dbg !20937
  call void @AscSetChipSDTR(i32 %74, i8 zeroext %75, i8 zeroext %76) #11, !dbg !20938
  %77 = load i8, i8* %asyn_sdtr, align 1, !dbg !20939
  %78 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !20940
  %sdtr_data137 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %78, i32 0, i32 13, !dbg !20941
  %79 = load i8, i8* %tid_no, align 1, !dbg !20942
  %idxprom138 = zext i8 %79 to i64, !dbg !20940
  %arrayidx139 = getelementptr [8 x i8], [8 x i8]* %sdtr_data137, i64 0, i64 %idxprom138, !dbg !20940
  store i8 %77, i8* %arrayidx139, align 1, !dbg !20943
  br label %if.end140, !dbg !20944

if.end140:                                        ; preds = %if.then125, %if.then114
  br label %if.end141, !dbg !20945

if.end141:                                        ; preds = %if.end140, %if.end112
  %u_ext_msg142 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20946
  %sdtr143 = bitcast %union.anon.81* %u_ext_msg142 to %struct.anon.82*, !dbg !20946
  %sdtr_req_ack_offset144 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr143, i32 0, i32 1, !dbg !20946
  %80 = load i8, i8* %sdtr_req_ack_offset144, align 1, !dbg !20946
  %conv145 = zext i8 %80 to i32, !dbg !20948
  %cmp146 = icmp eq i32 %conv145, 0, !dbg !20949
  br i1 %cmp146, label %if.then148, label %if.else164, !dbg !20950

if.then148:                                       ; preds = %if.end141
  %81 = load i8, i8* %q_cntl, align 1, !dbg !20951
  %conv149 = zext i8 %81 to i32, !dbg !20951
  %and150 = and i32 %conv149, -65, !dbg !20951
  %conv151 = trunc i32 %and150 to i8, !dbg !20951
  store i8 %conv151, i8* %q_cntl, align 1, !dbg !20951
  %82 = load i8, i8* %target_id, align 1, !dbg !20953
  %conv152 = zext i8 %82 to i32, !dbg !20953
  %neg153 = xor i32 %conv152, -1, !dbg !20954
  %83 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20955
  %init_sdtr154 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %83, i32 0, i32 5, !dbg !20956
  %84 = load i8, i8* %init_sdtr154, align 4, !dbg !20957
  %conv155 = zext i8 %84 to i32, !dbg !20957
  %and156 = and i32 %conv155, %neg153, !dbg !20957
  %conv157 = trunc i32 %and156 to i8, !dbg !20957
  store i8 %conv157, i8* %init_sdtr154, align 4, !dbg !20957
  %85 = load i8, i8* %target_id, align 1, !dbg !20958
  %conv158 = zext i8 %85 to i32, !dbg !20958
  %neg159 = xor i32 %conv158, -1, !dbg !20959
  %86 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20960
  %sdtr_done160 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %86, i32 0, i32 6, !dbg !20961
  %87 = load i8, i8* %sdtr_done160, align 1, !dbg !20962
  %conv161 = zext i8 %87 to i32, !dbg !20962
  %and162 = and i32 %conv161, %neg159, !dbg !20962
  %conv163 = trunc i32 %and162 to i8, !dbg !20962
  store i8 %conv163, i8* %sdtr_done160, align 1, !dbg !20962
  %88 = load i32, i32* %iop_base, align 4, !dbg !20963
  %89 = load i8, i8* %asyn_sdtr, align 1, !dbg !20964
  %90 = load i8, i8* %tid_no, align 1, !dbg !20965
  call void @AscSetChipSDTR(i32 %88, i8 zeroext %89, i8 zeroext %90) #11, !dbg !20966
  br label %if.end239, !dbg !20967

if.else164:                                       ; preds = %if.end141
  %91 = load i8, i8* %sdtr_accept, align 1, !dbg !20968
  %tobool165 = trunc i8 %91 to i1, !dbg !20968
  br i1 %tobool165, label %land.lhs.true167, label %if.else201, !dbg !20971

land.lhs.true167:                                 ; preds = %if.else164
  %92 = load i8, i8* %q_cntl, align 1, !dbg !20972
  %conv168 = zext i8 %92 to i32, !dbg !20972
  %and169 = and i32 %conv168, 64, !dbg !20973
  %tobool170 = icmp ne i32 %and169, 0, !dbg !20973
  br i1 %tobool170, label %if.then171, label %if.else201, !dbg !20974

if.then171:                                       ; preds = %land.lhs.true167
  %93 = load i8, i8* %q_cntl, align 1, !dbg !20975
  %conv172 = zext i8 %93 to i32, !dbg !20975
  %and173 = and i32 %conv172, -65, !dbg !20975
  %conv174 = trunc i32 %and173 to i8, !dbg !20975
  store i8 %conv174, i8* %q_cntl, align 1, !dbg !20975
  %94 = load i8, i8* %target_id, align 1, !dbg !20977
  %conv175 = zext i8 %94 to i32, !dbg !20977
  %95 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20978
  %sdtr_done176 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %95, i32 0, i32 6, !dbg !20979
  %96 = load i8, i8* %sdtr_done176, align 1, !dbg !20980
  %conv177 = zext i8 %96 to i32, !dbg !20980
  %or178 = or i32 %conv177, %conv175, !dbg !20980
  %conv179 = trunc i32 %or178 to i8, !dbg !20980
  store i8 %conv179, i8* %sdtr_done176, align 1, !dbg !20980
  %97 = load i8, i8* %target_id, align 1, !dbg !20981
  %conv180 = zext i8 %97 to i32, !dbg !20981
  %98 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20982
  %init_sdtr181 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %98, i32 0, i32 5, !dbg !20983
  %99 = load i8, i8* %init_sdtr181, align 4, !dbg !20984
  %conv182 = zext i8 %99 to i32, !dbg !20984
  %or183 = or i32 %conv182, %conv180, !dbg !20984
  %conv184 = trunc i32 %or183 to i8, !dbg !20984
  store i8 %conv184, i8* %init_sdtr181, align 4, !dbg !20984
  %100 = load i8, i8* %target_id, align 1, !dbg !20985
  %conv185 = zext i8 %100 to i32, !dbg !20985
  %neg186 = xor i32 %conv185, -1, !dbg !20986
  %101 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20987
  %pci_fix_asyn_xfer187 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %101, i32 0, i32 33, !dbg !20988
  %102 = load i8, i8* %pci_fix_asyn_xfer187, align 1, !dbg !20989
  %conv188 = zext i8 %102 to i32, !dbg !20989
  %and189 = and i32 %conv188, %neg186, !dbg !20989
  %conv190 = trunc i32 %and189 to i8, !dbg !20989
  store i8 %conv190, i8* %pci_fix_asyn_xfer187, align 1, !dbg !20989
  %103 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !20990
  %u_ext_msg191 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20991
  %sdtr192 = bitcast %union.anon.81* %u_ext_msg191 to %struct.anon.82*, !dbg !20991
  %sdtr_xfer_period193 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr192, i32 0, i32 0, !dbg !20991
  %104 = load i8, i8* %sdtr_xfer_period193, align 1, !dbg !20991
  %u_ext_msg194 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !20992
  %sdtr195 = bitcast %union.anon.81* %u_ext_msg194 to %struct.anon.82*, !dbg !20992
  %sdtr_req_ack_offset196 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr195, i32 0, i32 1, !dbg !20992
  %105 = load i8, i8* %sdtr_req_ack_offset196, align 1, !dbg !20992
  %call197 = call zeroext i8 @AscCalSDTRData(%struct.asc_dvc_var* %103, i8 zeroext %104, i8 zeroext %105) #11, !dbg !20993
  store i8 %call197, i8* %sdtr_data, align 1, !dbg !20994
  %106 = load i32, i32* %iop_base, align 4, !dbg !20995
  %107 = load i8, i8* %sdtr_data, align 1, !dbg !20996
  %108 = load i8, i8* %tid_no, align 1, !dbg !20997
  call void @AscSetChipSDTR(i32 %106, i8 zeroext %107, i8 zeroext %108) #11, !dbg !20998
  %109 = load i8, i8* %sdtr_data, align 1, !dbg !20999
  %110 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21000
  %sdtr_data198 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %110, i32 0, i32 13, !dbg !21001
  %111 = load i8, i8* %tid_no, align 1, !dbg !21002
  %idxprom199 = zext i8 %111 to i64, !dbg !21000
  %arrayidx200 = getelementptr [8 x i8], [8 x i8]* %sdtr_data198, i64 0, i64 %idxprom199, !dbg !21000
  store i8 %109, i8* %arrayidx200, align 1, !dbg !21003
  br label %if.end238, !dbg !21004

if.else201:                                       ; preds = %land.lhs.true167, %if.else164
  %112 = load i8, i8* %q_cntl, align 1, !dbg !21005
  %conv202 = zext i8 %112 to i32, !dbg !21005
  %or203 = or i32 %conv202, 64, !dbg !21005
  %conv204 = trunc i32 %or203 to i8, !dbg !21005
  store i8 %conv204, i8* %q_cntl, align 1, !dbg !21005
  %113 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21007
  %u_ext_msg205 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !21008
  %sdtr206 = bitcast %union.anon.81* %u_ext_msg205 to %struct.anon.82*, !dbg !21008
  %sdtr_xfer_period207 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr206, i32 0, i32 0, !dbg !21008
  %114 = load i8, i8* %sdtr_xfer_period207, align 1, !dbg !21008
  %u_ext_msg208 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !21009
  %sdtr209 = bitcast %union.anon.81* %u_ext_msg208 to %struct.anon.82*, !dbg !21009
  %sdtr_req_ack_offset210 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr209, i32 0, i32 1, !dbg !21009
  %115 = load i8, i8* %sdtr_req_ack_offset210, align 1, !dbg !21009
  %call211 = call zeroext i8 @AscMsgOutSDTR(%struct.asc_dvc_var* %113, i8 zeroext %114, i8 zeroext %115) #11, !dbg !21010
  %116 = load i8, i8* %target_id, align 1, !dbg !21011
  %conv212 = zext i8 %116 to i32, !dbg !21011
  %neg213 = xor i32 %conv212, -1, !dbg !21012
  %117 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21013
  %pci_fix_asyn_xfer214 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %117, i32 0, i32 33, !dbg !21014
  %118 = load i8, i8* %pci_fix_asyn_xfer214, align 1, !dbg !21015
  %conv215 = zext i8 %118 to i32, !dbg !21015
  %and216 = and i32 %conv215, %neg213, !dbg !21015
  %conv217 = trunc i32 %and216 to i8, !dbg !21015
  store i8 %conv217, i8* %pci_fix_asyn_xfer214, align 1, !dbg !21015
  %119 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21016
  %u_ext_msg218 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !21017
  %sdtr219 = bitcast %union.anon.81* %u_ext_msg218 to %struct.anon.82*, !dbg !21017
  %sdtr_xfer_period220 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr219, i32 0, i32 0, !dbg !21017
  %120 = load i8, i8* %sdtr_xfer_period220, align 1, !dbg !21017
  %u_ext_msg221 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !21018
  %sdtr222 = bitcast %union.anon.81* %u_ext_msg221 to %struct.anon.82*, !dbg !21018
  %sdtr_req_ack_offset223 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %sdtr222, i32 0, i32 1, !dbg !21018
  %121 = load i8, i8* %sdtr_req_ack_offset223, align 1, !dbg !21018
  %call224 = call zeroext i8 @AscCalSDTRData(%struct.asc_dvc_var* %119, i8 zeroext %120, i8 zeroext %121) #11, !dbg !21019
  store i8 %call224, i8* %sdtr_data, align 1, !dbg !21020
  %122 = load i32, i32* %iop_base, align 4, !dbg !21021
  %123 = load i8, i8* %sdtr_data, align 1, !dbg !21022
  %124 = load i8, i8* %tid_no, align 1, !dbg !21023
  call void @AscSetChipSDTR(i32 %122, i8 zeroext %123, i8 zeroext %124) #11, !dbg !21024
  %125 = load i8, i8* %sdtr_data, align 1, !dbg !21025
  %126 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21026
  %sdtr_data225 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %126, i32 0, i32 13, !dbg !21027
  %127 = load i8, i8* %tid_no, align 1, !dbg !21028
  %idxprom226 = zext i8 %127 to i64, !dbg !21026
  %arrayidx227 = getelementptr [8 x i8], [8 x i8]* %sdtr_data225, i64 0, i64 %idxprom226, !dbg !21026
  store i8 %125, i8* %arrayidx227, align 1, !dbg !21029
  %128 = load i8, i8* %target_id, align 1, !dbg !21030
  %conv228 = zext i8 %128 to i32, !dbg !21030
  %129 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21031
  %sdtr_done229 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %129, i32 0, i32 6, !dbg !21032
  %130 = load i8, i8* %sdtr_done229, align 1, !dbg !21033
  %conv230 = zext i8 %130 to i32, !dbg !21033
  %or231 = or i32 %conv230, %conv228, !dbg !21033
  %conv232 = trunc i32 %or231 to i8, !dbg !21033
  store i8 %conv232, i8* %sdtr_done229, align 1, !dbg !21033
  %131 = load i8, i8* %target_id, align 1, !dbg !21034
  %conv233 = zext i8 %131 to i32, !dbg !21034
  %132 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21035
  %init_sdtr234 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %132, i32 0, i32 5, !dbg !21036
  %133 = load i8, i8* %init_sdtr234, align 4, !dbg !21037
  %conv235 = zext i8 %133 to i32, !dbg !21037
  %or236 = or i32 %conv235, %conv233, !dbg !21037
  %conv237 = trunc i32 %or236 to i8, !dbg !21037
  store i8 %conv237, i8* %init_sdtr234, align 4, !dbg !21037
  br label %if.end238

if.end238:                                        ; preds = %if.else201, %if.then171
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %if.then148
  %134 = load i32, i32* %iop_base, align 4, !dbg !21038
  %135 = load i16, i16* %halt_q_addr, align 2, !dbg !21039
  %conv240 = zext i16 %135 to i32, !dbg !21039
  %add241 = add i32 %conv240, 4, !dbg !21040
  %conv242 = trunc i32 %add241 to i16, !dbg !21041
  %136 = load i8, i8* %q_cntl, align 1, !dbg !21042
  call void @AscWriteLramByte(i32 %134, i16 zeroext %conv242, i8 zeroext %136) #11, !dbg !21043
  %137 = load i32, i32* %iop_base, align 4, !dbg !21044
  call void @AscWriteLramWord(i32 %137, i16 zeroext 64, i16 zeroext 0) #11, !dbg !21045
  br label %return, !dbg !21046

if.else243:                                       ; preds = %land.lhs.true73, %land.lhs.true, %if.then66
  %msg_type244 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 0, !dbg !21047
  %138 = load i8, i8* %msg_type244, align 1, !dbg !21047
  %conv245 = zext i8 %138 to i32, !dbg !21049
  %cmp246 = icmp eq i32 %conv245, 1, !dbg !21050
  br i1 %cmp246, label %land.lhs.true248, label %if.else266, !dbg !21051

land.lhs.true248:                                 ; preds = %if.else243
  %msg_req249 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 2, !dbg !21052
  %139 = load i8, i8* %msg_req249, align 1, !dbg !21052
  %conv250 = zext i8 %139 to i32, !dbg !21053
  %cmp251 = icmp eq i32 %conv250, 3, !dbg !21054
  br i1 %cmp251, label %land.lhs.true253, label %if.else266, !dbg !21055

land.lhs.true253:                                 ; preds = %land.lhs.true248
  %msg_len254 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 1, !dbg !21056
  %140 = load i8, i8* %msg_len254, align 1, !dbg !21056
  %conv255 = zext i8 %140 to i32, !dbg !21057
  %cmp256 = icmp eq i32 %conv255, 2, !dbg !21058
  br i1 %cmp256, label %if.then258, label %if.else266, !dbg !21059

if.then258:                                       ; preds = %land.lhs.true253
  %u_ext_msg259 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 3, !dbg !21060
  %wdtr = bitcast %union.anon.81* %u_ext_msg259 to %struct.anon.83*, !dbg !21060
  %wdtr_width = getelementptr inbounds %struct.anon.83, %struct.anon.83* %wdtr, i32 0, i32 0, !dbg !21060
  store i8 0, i8* %wdtr_width, align 1, !dbg !21062
  %141 = load i32, i32* %iop_base, align 4, !dbg !21063
  %142 = bitcast %struct.ext_msg* %ext_msg to i8*, !dbg !21064
  call void @AscMemWordCopyPtrToLram(i32 %141, i16 zeroext 0, i8* %142, i32 4) #11, !dbg !21065
  %143 = load i8, i8* %q_cntl, align 1, !dbg !21066
  %conv260 = zext i8 %143 to i32, !dbg !21066
  %or261 = or i32 %conv260, 64, !dbg !21066
  %conv262 = trunc i32 %or261 to i8, !dbg !21066
  store i8 %conv262, i8* %q_cntl, align 1, !dbg !21066
  %144 = load i32, i32* %iop_base, align 4, !dbg !21067
  %145 = load i16, i16* %halt_q_addr, align 2, !dbg !21068
  %conv263 = zext i16 %145 to i32, !dbg !21068
  %add264 = add i32 %conv263, 4, !dbg !21069
  %conv265 = trunc i32 %add264 to i16, !dbg !21070
  %146 = load i8, i8* %q_cntl, align 1, !dbg !21071
  call void @AscWriteLramByte(i32 %144, i16 zeroext %conv265, i8 zeroext %146) #11, !dbg !21072
  %147 = load i32, i32* %iop_base, align 4, !dbg !21073
  call void @AscWriteLramWord(i32 %147, i16 zeroext 64, i16 zeroext 0) #11, !dbg !21074
  br label %return, !dbg !21075

if.else266:                                       ; preds = %land.lhs.true253, %land.lhs.true248, %if.else243
  %msg_type267 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %ext_msg, i32 0, i32 0, !dbg !21076
  store i8 7, i8* %msg_type267, align 1, !dbg !21078
  %148 = load i32, i32* %iop_base, align 4, !dbg !21079
  %149 = bitcast %struct.ext_msg* %ext_msg to i8*, !dbg !21080
  call void @AscMemWordCopyPtrToLram(i32 %148, i16 zeroext 0, i8* %149, i32 4) #11, !dbg !21081
  %150 = load i8, i8* %q_cntl, align 1, !dbg !21082
  %conv268 = zext i8 %150 to i32, !dbg !21082
  %or269 = or i32 %conv268, 64, !dbg !21082
  %conv270 = trunc i32 %or269 to i8, !dbg !21082
  store i8 %conv270, i8* %q_cntl, align 1, !dbg !21082
  %151 = load i32, i32* %iop_base, align 4, !dbg !21083
  %152 = load i16, i16* %halt_q_addr, align 2, !dbg !21084
  %conv271 = zext i16 %152 to i32, !dbg !21084
  %add272 = add i32 %conv271, 4, !dbg !21085
  %conv273 = trunc i32 %add272 to i16, !dbg !21086
  %153 = load i8, i8* %q_cntl, align 1, !dbg !21087
  call void @AscWriteLramByte(i32 %151, i16 zeroext %conv273, i8 zeroext %153) #11, !dbg !21088
  %154 = load i32, i32* %iop_base, align 4, !dbg !21089
  call void @AscWriteLramWord(i32 %154, i16 zeroext 64, i16 zeroext 0) #11, !dbg !21090
  br label %return, !dbg !21091

if.else274:                                       ; preds = %if.else62
  %155 = load i16, i16* %int_halt_code, align 2, !dbg !21092
  %conv275 = zext i16 %155 to i32, !dbg !21092
  %cmp276 = icmp eq i32 %conv275, 33024, !dbg !21094
  br i1 %cmp276, label %if.then278, label %if.else361, !dbg !21095

if.then278:                                       ; preds = %if.else274
  %156 = load i8, i8* %q_cntl, align 1, !dbg !21096
  %conv279 = zext i8 %156 to i32, !dbg !21096
  %or280 = or i32 %conv279, 128, !dbg !21096
  %conv281 = trunc i32 %or280 to i8, !dbg !21096
  store i8 %conv281, i8* %q_cntl, align 1, !dbg !21096
  %157 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21098
  %init_sdtr282 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %157, i32 0, i32 5, !dbg !21100
  %158 = load i8, i8* %init_sdtr282, align 4, !dbg !21100
  %conv283 = zext i8 %158 to i32, !dbg !21098
  %159 = load i8, i8* %target_id, align 1, !dbg !21101
  %conv284 = zext i8 %159 to i32, !dbg !21101
  %and285 = and i32 %conv283, %conv284, !dbg !21102
  %cmp286 = icmp ne i32 %and285, 0, !dbg !21103
  br i1 %cmp286, label %if.then288, label %if.end316, !dbg !21104

if.then288:                                       ; preds = %if.then278
  %160 = load i8, i8* %target_id, align 1, !dbg !21105
  %conv289 = zext i8 %160 to i32, !dbg !21105
  %neg290 = xor i32 %conv289, -1, !dbg !21107
  %161 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21108
  %sdtr_done291 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %161, i32 0, i32 6, !dbg !21109
  %162 = load i8, i8* %sdtr_done291, align 1, !dbg !21110
  %conv292 = zext i8 %162 to i32, !dbg !21110
  %and293 = and i32 %conv292, %neg290, !dbg !21110
  %conv294 = trunc i32 %and293 to i8, !dbg !21110
  store i8 %conv294, i8* %sdtr_done291, align 1, !dbg !21110
  %163 = load i32, i32* %iop_base, align 4, !dbg !21111
  %164 = load i8, i8* %tid_no, align 1, !dbg !21111
  %conv295 = zext i8 %164 to i16, !dbg !21111
  %conv296 = zext i16 %conv295 to i32, !dbg !21111
  %add297 = add i32 16, %conv296, !dbg !21111
  %conv298 = trunc i32 %add297 to i16, !dbg !21111
  %call299 = call zeroext i8 @AscReadLramByte(i32 %163, i16 zeroext %conv298) #11, !dbg !21111
  store i8 %call299, i8* %sdtr_data, align 1, !dbg !21112
  %165 = load i8, i8* %q_cntl, align 1, !dbg !21113
  %conv300 = zext i8 %165 to i32, !dbg !21113
  %or301 = or i32 %conv300, 64, !dbg !21113
  %conv302 = trunc i32 %or301 to i8, !dbg !21113
  store i8 %conv302, i8* %q_cntl, align 1, !dbg !21113
  %166 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21114
  %167 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21115
  %sdtr_period_tbl303 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %167, i32 0, i32 25, !dbg !21116
  %168 = load i8*, i8** %sdtr_period_tbl303, align 8, !dbg !21116
  %169 = load i8, i8* %sdtr_data, align 1, !dbg !21117
  %conv304 = zext i8 %169 to i32, !dbg !21117
  %shr = ashr i32 %conv304, 4, !dbg !21118
  %170 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21119
  %max_sdtr_index305 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %170, i32 0, i32 35, !dbg !21120
  %171 = load i8, i8* %max_sdtr_index305, align 1, !dbg !21120
  %conv306 = zext i8 %171 to i32, !dbg !21119
  %sub = sub i32 %conv306, 1, !dbg !21121
  %conv307 = trunc i32 %sub to i8, !dbg !21122
  %conv308 = zext i8 %conv307 to i32, !dbg !21122
  %and309 = and i32 %shr, %conv308, !dbg !21123
  %idxprom310 = sext i32 %and309 to i64, !dbg !21115
  %arrayidx311 = getelementptr i8, i8* %168, i64 %idxprom310, !dbg !21115
  %172 = load i8, i8* %arrayidx311, align 1, !dbg !21115
  %173 = load i8, i8* %sdtr_data, align 1, !dbg !21124
  %conv312 = zext i8 %173 to i32, !dbg !21124
  %and313 = and i32 %conv312, 15, !dbg !21125
  %conv314 = trunc i32 %and313 to i8, !dbg !21126
  %call315 = call zeroext i8 @AscMsgOutSDTR(%struct.asc_dvc_var* %166, i8 zeroext %172, i8 zeroext %conv314) #11, !dbg !21127
  br label %if.end316, !dbg !21128

if.end316:                                        ; preds = %if.then288, %if.then278
  %174 = load i32, i32* %iop_base, align 4, !dbg !21129
  %175 = load i16, i16* %halt_q_addr, align 2, !dbg !21130
  %conv317 = zext i16 %175 to i32, !dbg !21130
  %add318 = add i32 %conv317, 4, !dbg !21131
  %conv319 = trunc i32 %add318 to i16, !dbg !21132
  %176 = load i8, i8* %q_cntl, align 1, !dbg !21133
  call void @AscWriteLramByte(i32 %174, i16 zeroext %conv319, i8 zeroext %176) #11, !dbg !21134
  %177 = load i32, i32* %iop_base, align 4, !dbg !21135
  %178 = load i16, i16* %halt_q_addr, align 2, !dbg !21136
  %conv320 = zext i16 %178 to i32, !dbg !21136
  %add321 = add i32 %conv320, 29, !dbg !21137
  %conv322 = trunc i32 %add321 to i16, !dbg !21138
  %call323 = call zeroext i8 @AscReadLramByte(i32 %177, i16 zeroext %conv322) #11, !dbg !21139
  store i8 %call323, i8* %tag_code, align 1, !dbg !21140
  %179 = load i8, i8* %tag_code, align 1, !dbg !21141
  %conv324 = zext i8 %179 to i32, !dbg !21141
  %and325 = and i32 %conv324, 220, !dbg !21141
  %conv326 = trunc i32 %and325 to i8, !dbg !21141
  store i8 %conv326, i8* %tag_code, align 1, !dbg !21141
  %180 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21142
  %pci_fix_asyn_xfer327 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %180, i32 0, i32 33, !dbg !21144
  %181 = load i8, i8* %pci_fix_asyn_xfer327, align 1, !dbg !21144
  %conv328 = zext i8 %181 to i32, !dbg !21142
  %182 = load i8, i8* %target_id, align 1, !dbg !21145
  %conv329 = zext i8 %182 to i32, !dbg !21145
  %and330 = and i32 %conv328, %conv329, !dbg !21146
  %tobool331 = icmp ne i32 %and330, 0, !dbg !21146
  br i1 %tobool331, label %land.lhs.true332, label %if.end341, !dbg !21147

land.lhs.true332:                                 ; preds = %if.end316
  %183 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21148
  %pci_fix_asyn_xfer_always = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %183, i32 0, i32 27, !dbg !21149
  %184 = load i8, i8* %pci_fix_asyn_xfer_always, align 8, !dbg !21149
  %conv333 = zext i8 %184 to i32, !dbg !21148
  %185 = load i8, i8* %target_id, align 1, !dbg !21150
  %conv334 = zext i8 %185 to i32, !dbg !21150
  %and335 = and i32 %conv333, %conv334, !dbg !21151
  %tobool336 = icmp ne i32 %and335, 0, !dbg !21151
  br i1 %tobool336, label %if.end341, label %if.then337, !dbg !21152

if.then337:                                       ; preds = %land.lhs.true332
  %186 = load i8, i8* %tag_code, align 1, !dbg !21153
  %conv338 = zext i8 %186 to i32, !dbg !21153
  %or339 = or i32 %conv338, 12, !dbg !21153
  %conv340 = trunc i32 %or339 to i8, !dbg !21153
  store i8 %conv340, i8* %tag_code, align 1, !dbg !21153
  br label %if.end341, !dbg !21155

if.end341:                                        ; preds = %if.then337, %land.lhs.true332, %if.end316
  %187 = load i32, i32* %iop_base, align 4, !dbg !21156
  %188 = load i16, i16* %halt_q_addr, align 2, !dbg !21157
  %conv342 = zext i16 %188 to i32, !dbg !21157
  %add343 = add i32 %conv342, 29, !dbg !21158
  %conv344 = trunc i32 %add343 to i16, !dbg !21159
  %189 = load i8, i8* %tag_code, align 1, !dbg !21160
  call void @AscWriteLramByte(i32 %187, i16 zeroext %conv344, i8 zeroext %189) #11, !dbg !21161
  %190 = load i32, i32* %iop_base, align 4, !dbg !21162
  %191 = load i16, i16* %halt_q_addr, align 2, !dbg !21163
  %conv345 = zext i16 %191 to i32, !dbg !21163
  %add346 = add i32 %conv345, 2, !dbg !21164
  %conv347 = trunc i32 %add346 to i16, !dbg !21165
  %call348 = call zeroext i8 @AscReadLramByte(i32 %190, i16 zeroext %conv347) #11, !dbg !21166
  store i8 %call348, i8* %q_status, align 1, !dbg !21167
  %192 = load i8, i8* %q_status, align 1, !dbg !21168
  %conv349 = zext i8 %192 to i32, !dbg !21168
  %or350 = or i32 %conv349, 9, !dbg !21168
  %conv351 = trunc i32 %or350 to i8, !dbg !21168
  store i8 %conv351, i8* %q_status, align 1, !dbg !21168
  %193 = load i32, i32* %iop_base, align 4, !dbg !21169
  %194 = load i16, i16* %halt_q_addr, align 2, !dbg !21170
  %conv352 = zext i16 %194 to i32, !dbg !21170
  %add353 = add i32 %conv352, 2, !dbg !21171
  %conv354 = trunc i32 %add353 to i16, !dbg !21172
  %195 = load i8, i8* %q_status, align 1, !dbg !21173
  call void @AscWriteLramByte(i32 %193, i16 zeroext %conv354, i8 zeroext %195) #11, !dbg !21174
  %196 = load i32, i32* %iop_base, align 4, !dbg !21175
  %call355 = call zeroext i8 @AscReadLramByte(i32 %196, i16 zeroext 75) #11, !dbg !21176
  store i8 %call355, i8* %scsi_busy, align 1, !dbg !21177
  %197 = load i8, i8* %target_id, align 1, !dbg !21178
  %conv356 = zext i8 %197 to i32, !dbg !21178
  %neg357 = xor i32 %conv356, -1, !dbg !21179
  %198 = load i8, i8* %scsi_busy, align 1, !dbg !21180
  %conv358 = zext i8 %198 to i32, !dbg !21180
  %and359 = and i32 %conv358, %neg357, !dbg !21180
  %conv360 = trunc i32 %and359 to i8, !dbg !21180
  store i8 %conv360, i8* %scsi_busy, align 1, !dbg !21180
  %199 = load i32, i32* %iop_base, align 4, !dbg !21181
  %200 = load i8, i8* %scsi_busy, align 1, !dbg !21182
  call void @AscWriteLramByte(i32 %199, i16 zeroext 75, i8 zeroext %200) #11, !dbg !21183
  %201 = load i32, i32* %iop_base, align 4, !dbg !21184
  call void @AscWriteLramWord(i32 %201, i16 zeroext 64, i16 zeroext 0) #11, !dbg !21185
  br label %return, !dbg !21186

if.else361:                                       ; preds = %if.else274
  %202 = load i16, i16* %int_halt_code, align 2, !dbg !21187
  %conv362 = zext i16 %202 to i32, !dbg !21187
  %cmp363 = icmp eq i32 %conv362, 16384, !dbg !21189
  br i1 %cmp363, label %if.then365, label %if.else403, !dbg !21190

if.then365:                                       ; preds = %if.else361
  %203 = load i32, i32* %iop_base, align 4, !dbg !21191
  %204 = bitcast %struct.ext_msg* %out_msg to i8*, !dbg !21193
  call void @AscMemWordCopyPtrFromLram(i32 %203, i16 zeroext 0, i8* %204, i32 4) #11, !dbg !21194
  %msg_type366 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %out_msg, i32 0, i32 0, !dbg !21195
  %205 = load i8, i8* %msg_type366, align 1, !dbg !21195
  %conv367 = zext i8 %205 to i32, !dbg !21197
  %cmp368 = icmp eq i32 %conv367, 1, !dbg !21198
  br i1 %cmp368, label %land.lhs.true370, label %if.end396, !dbg !21199

land.lhs.true370:                                 ; preds = %if.then365
  %msg_len371 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %out_msg, i32 0, i32 1, !dbg !21200
  %206 = load i8, i8* %msg_len371, align 1, !dbg !21200
  %conv372 = zext i8 %206 to i32, !dbg !21201
  %cmp373 = icmp eq i32 %conv372, 3, !dbg !21202
  br i1 %cmp373, label %land.lhs.true375, label %if.end396, !dbg !21203

land.lhs.true375:                                 ; preds = %land.lhs.true370
  %msg_req376 = getelementptr inbounds %struct.ext_msg, %struct.ext_msg* %out_msg, i32 0, i32 2, !dbg !21204
  %207 = load i8, i8* %msg_req376, align 1, !dbg !21204
  %conv377 = zext i8 %207 to i32, !dbg !21205
  %cmp378 = icmp eq i32 %conv377, 1, !dbg !21206
  br i1 %cmp378, label %if.then380, label %if.end396, !dbg !21207

if.then380:                                       ; preds = %land.lhs.true375
  %208 = load i8, i8* %target_id, align 1, !dbg !21208
  %conv381 = zext i8 %208 to i32, !dbg !21208
  %neg382 = xor i32 %conv381, -1, !dbg !21210
  %209 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21211
  %init_sdtr383 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %209, i32 0, i32 5, !dbg !21212
  %210 = load i8, i8* %init_sdtr383, align 4, !dbg !21213
  %conv384 = zext i8 %210 to i32, !dbg !21213
  %and385 = and i32 %conv384, %neg382, !dbg !21213
  %conv386 = trunc i32 %and385 to i8, !dbg !21213
  store i8 %conv386, i8* %init_sdtr383, align 4, !dbg !21213
  %211 = load i8, i8* %target_id, align 1, !dbg !21214
  %conv387 = zext i8 %211 to i32, !dbg !21214
  %neg388 = xor i32 %conv387, -1, !dbg !21215
  %212 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21216
  %sdtr_done389 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %212, i32 0, i32 6, !dbg !21217
  %213 = load i8, i8* %sdtr_done389, align 1, !dbg !21218
  %conv390 = zext i8 %213 to i32, !dbg !21218
  %and391 = and i32 %conv390, %neg388, !dbg !21218
  %conv392 = trunc i32 %and391 to i8, !dbg !21218
  store i8 %conv392, i8* %sdtr_done389, align 1, !dbg !21218
  %214 = load i32, i32* %iop_base, align 4, !dbg !21219
  %215 = load i8, i8* %asyn_sdtr, align 1, !dbg !21220
  %216 = load i8, i8* %tid_no, align 1, !dbg !21221
  call void @AscSetChipSDTR(i32 %214, i8 zeroext %215, i8 zeroext %216) #11, !dbg !21222
  %217 = load i8, i8* %asyn_sdtr, align 1, !dbg !21223
  %218 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21224
  %sdtr_data393 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %218, i32 0, i32 13, !dbg !21225
  %219 = load i8, i8* %tid_no, align 1, !dbg !21226
  %idxprom394 = zext i8 %219 to i64, !dbg !21224
  %arrayidx395 = getelementptr [8 x i8], [8 x i8]* %sdtr_data393, i64 0, i64 %idxprom394, !dbg !21224
  store i8 %217, i8* %arrayidx395, align 1, !dbg !21227
  br label %if.end396, !dbg !21228

if.end396:                                        ; preds = %if.then380, %land.lhs.true375, %land.lhs.true370, %if.then365
  %220 = load i8, i8* %q_cntl, align 1, !dbg !21229
  %conv397 = zext i8 %220 to i32, !dbg !21229
  %and398 = and i32 %conv397, -65, !dbg !21229
  %conv399 = trunc i32 %and398 to i8, !dbg !21229
  store i8 %conv399, i8* %q_cntl, align 1, !dbg !21229
  %221 = load i32, i32* %iop_base, align 4, !dbg !21230
  %222 = load i16, i16* %halt_q_addr, align 2, !dbg !21231
  %conv400 = zext i16 %222 to i32, !dbg !21231
  %add401 = add i32 %conv400, 4, !dbg !21232
  %conv402 = trunc i32 %add401 to i16, !dbg !21233
  %223 = load i8, i8* %q_cntl, align 1, !dbg !21234
  call void @AscWriteLramByte(i32 %221, i16 zeroext %conv402, i8 zeroext %223) #11, !dbg !21235
  %224 = load i32, i32* %iop_base, align 4, !dbg !21236
  call void @AscWriteLramWord(i32 %224, i16 zeroext 64, i16 zeroext 0) #11, !dbg !21237
  br label %return, !dbg !21238

if.else403:                                       ; preds = %if.else361
  %225 = load i16, i16* %int_halt_code, align 2, !dbg !21239
  %conv404 = zext i16 %225 to i32, !dbg !21239
  %cmp405 = icmp eq i32 %conv404, 33280, !dbg !21241
  br i1 %cmp405, label %if.then407, label %if.end464, !dbg !21242

if.then407:                                       ; preds = %if.else403
  %226 = load i32, i32* %iop_base, align 4, !dbg !21243
  %227 = load i16, i16* %halt_q_addr, align 2, !dbg !21245
  %conv408 = zext i16 %227 to i32, !dbg !21246
  %add409 = add i32 %conv408, 34, !dbg !21247
  %conv410 = trunc i32 %add409 to i16, !dbg !21248
  %call411 = call zeroext i8 @AscReadLramByte(i32 %226, i16 zeroext %conv410) #11, !dbg !21249
  store i8 %call411, i8* %scsi_status, align 1, !dbg !21250
  %228 = load i32, i32* %iop_base, align 4, !dbg !21251
  %229 = load i8, i8* %target_ix, align 1, !dbg !21252
  %conv412 = zext i8 %229 to i16, !dbg !21253
  %conv413 = zext i16 %conv412 to i32, !dbg !21253
  %add414 = add i32 16384, %conv413, !dbg !21254
  %conv415 = trunc i32 %add414 to i16, !dbg !21255
  %call416 = call zeroext i8 @AscReadLramByte(i32 %228, i16 zeroext %conv415) #11, !dbg !21256
  store i8 %call416, i8* %cur_dvc_qng, align 1, !dbg !21257
  %230 = load i8, i8* %cur_dvc_qng, align 1, !dbg !21258
  %conv417 = zext i8 %230 to i32, !dbg !21258
  %cmp418 = icmp sgt i32 %conv417, 0, !dbg !21260
  br i1 %cmp418, label %land.lhs.true420, label %if.end463, !dbg !21261

land.lhs.true420:                                 ; preds = %if.then407
  %231 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21262
  %cur_dvc_qng421 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %231, i32 0, i32 21, !dbg !21263
  %232 = load i8, i8* %tid_no, align 1, !dbg !21264
  %idxprom422 = zext i8 %232 to i64, !dbg !21262
  %arrayidx423 = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng421, i64 0, i64 %idxprom422, !dbg !21262
  %233 = load i8, i8* %arrayidx423, align 1, !dbg !21262
  %conv424 = zext i8 %233 to i32, !dbg !21262
  %cmp425 = icmp sgt i32 %conv424, 0, !dbg !21265
  br i1 %cmp425, label %if.then427, label %if.end463, !dbg !21266

if.then427:                                       ; preds = %land.lhs.true420
  %234 = load i32, i32* %iop_base, align 4, !dbg !21267
  %call428 = call zeroext i8 @AscReadLramByte(i32 %234, i16 zeroext 75) #11, !dbg !21269
  store i8 %call428, i8* %scsi_busy, align 1, !dbg !21270
  %235 = load i8, i8* %target_id, align 1, !dbg !21271
  %conv429 = zext i8 %235 to i32, !dbg !21271
  %236 = load i8, i8* %scsi_busy, align 1, !dbg !21272
  %conv430 = zext i8 %236 to i32, !dbg !21272
  %or431 = or i32 %conv430, %conv429, !dbg !21272
  %conv432 = trunc i32 %or431 to i8, !dbg !21272
  store i8 %conv432, i8* %scsi_busy, align 1, !dbg !21272
  %237 = load i32, i32* %iop_base, align 4, !dbg !21273
  %238 = load i8, i8* %scsi_busy, align 1, !dbg !21274
  call void @AscWriteLramByte(i32 %237, i16 zeroext 75, i8 zeroext %238) #11, !dbg !21275
  %239 = load i8, i8* %target_id, align 1, !dbg !21276
  %conv433 = zext i8 %239 to i32, !dbg !21276
  %240 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21277
  %queue_full_or_busy = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %240, i32 0, i32 9, !dbg !21278
  %241 = load i8, i8* %queue_full_or_busy, align 8, !dbg !21279
  %conv434 = zext i8 %241 to i32, !dbg !21279
  %or435 = or i32 %conv434, %conv433, !dbg !21279
  %conv436 = trunc i32 %or435 to i8, !dbg !21279
  store i8 %conv436, i8* %queue_full_or_busy, align 8, !dbg !21279
  %242 = load i8, i8* %scsi_status, align 1, !dbg !21280
  %conv437 = zext i8 %242 to i32, !dbg !21280
  %cmp438 = icmp eq i32 %conv437, 40, !dbg !21282
  br i1 %cmp438, label %if.then440, label %if.end462, !dbg !21283

if.then440:                                       ; preds = %if.then427
  %243 = load i8, i8* %cur_dvc_qng, align 1, !dbg !21284
  %conv441 = zext i8 %243 to i32, !dbg !21284
  %cmp442 = icmp sgt i32 %conv441, 7, !dbg !21287
  br i1 %cmp442, label %if.then444, label %if.end461, !dbg !21288

if.then444:                                       ; preds = %if.then440
  %244 = load i8, i8* %cur_dvc_qng, align 1, !dbg !21289
  %conv445 = zext i8 %244 to i32, !dbg !21289
  %sub446 = sub i32 %conv445, 1, !dbg !21289
  %conv447 = trunc i32 %sub446 to i8, !dbg !21289
  store i8 %conv447, i8* %cur_dvc_qng, align 1, !dbg !21289
  %245 = load i8, i8* %cur_dvc_qng, align 1, !dbg !21291
  %246 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21292
  %max_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %246, i32 0, i32 22, !dbg !21293
  %247 = load i8, i8* %tid_no, align 1, !dbg !21294
  %idxprom448 = zext i8 %247 to i64, !dbg !21292
  %arrayidx449 = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng, i64 0, i64 %idxprom448, !dbg !21292
  store i8 %245, i8* %arrayidx449, align 1, !dbg !21295
  %248 = load i32, i32* %iop_base, align 4, !dbg !21296
  %249 = load i8, i8* %tid_no, align 1, !dbg !21297
  %conv450 = zext i8 %249 to i16, !dbg !21298
  %conv451 = zext i16 %conv450 to i32, !dbg !21298
  %add452 = add i32 32, %conv451, !dbg !21299
  %conv453 = trunc i32 %add452 to i16, !dbg !21300
  %250 = load i8, i8* %cur_dvc_qng, align 1, !dbg !21301
  call void @AscWriteLramByte(i32 %248, i16 zeroext %conv453, i8 zeroext %250) #11, !dbg !21302
  %251 = load i8, i8* %target_id, align 1, !dbg !21303
  %conv454 = zext i8 %251 to i32, !dbg !21303
  %252 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21304
  %queue_full = getelementptr inbounds %struct.asc_board, %struct.asc_board* %252, i32 0, i32 9, !dbg !21305
  %253 = load i16, i16* %queue_full, align 2, !dbg !21306
  %conv455 = zext i16 %253 to i32, !dbg !21306
  %or456 = or i32 %conv455, %conv454, !dbg !21306
  %conv457 = trunc i32 %or456 to i16, !dbg !21306
  store i16 %conv457, i16* %queue_full, align 2, !dbg !21306
  %254 = load i8, i8* %cur_dvc_qng, align 1, !dbg !21307
  %conv458 = zext i8 %254 to i16, !dbg !21307
  %255 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21308
  %queue_full_cnt = getelementptr inbounds %struct.asc_board, %struct.asc_board* %255, i32 0, i32 10, !dbg !21309
  %256 = load i8, i8* %tid_no, align 1, !dbg !21310
  %idxprom459 = zext i8 %256 to i64, !dbg !21308
  %arrayidx460 = getelementptr [16 x i16], [16 x i16]* %queue_full_cnt, i64 0, i64 %idxprom459, !dbg !21308
  store i16 %conv458, i16* %arrayidx460, align 2, !dbg !21311
  br label %if.end461, !dbg !21312

if.end461:                                        ; preds = %if.then444, %if.then440
  br label %if.end462, !dbg !21313

if.end462:                                        ; preds = %if.end461, %if.then427
  br label %if.end463, !dbg !21314

if.end463:                                        ; preds = %if.end462, %land.lhs.true420, %if.then407
  %257 = load i32, i32* %iop_base, align 4, !dbg !21315
  call void @AscWriteLramWord(i32 %257, i16 zeroext 64, i16 zeroext 0) #11, !dbg !21316
  br label %return, !dbg !21317

if.end464:                                        ; preds = %if.else403
  br label %if.end465

if.end465:                                        ; preds = %if.end464
  br label %if.end466

if.end466:                                        ; preds = %if.end465
  br label %if.end467

if.end467:                                        ; preds = %if.end466
  br label %if.end468

if.end468:                                        ; preds = %if.end467
  br label %if.end469

if.end469:                                        ; preds = %if.end468
  br label %return, !dbg !21318

return:                                           ; preds = %if.end469, %if.end463, %if.end396, %if.end341, %if.else266, %if.then258, %if.end239, %if.end61, %if.end46
  ret void, !dbg !21319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @AscIsrQDone(%struct.asc_dvc_var* %asc_dvc) #2 !dbg !21320 {
entry:
  %retval = alloca i32, align 4
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %next_qp = alloca i8, align 1
  %n_q_used = alloca i8, align 1
  %sg_list_qp = alloca i8, align 1
  %sg_queue_cnt = alloca i8, align 1
  %q_cnt = alloca i8, align 1
  %done_q_tail = alloca i8, align 1
  %tid_no = alloca i8, align 1
  %scsi_busy = alloca i8, align 1
  %target_id = alloca i8, align 1
  %iop_base = alloca i32, align 4
  %q_addr = alloca i16, align 2
  %sg_q_addr = alloca i16, align 2
  %cur_target_qng = alloca i8, align 1
  %scsiq_buf = alloca %struct.asc_q_done_info, align 4
  %scsiq = alloca %struct.asc_q_done_info*, align 8
  %false_overrun = alloca i8, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !21321, metadata !DIExpression()), !dbg !21322
  call void @llvm.dbg.declare(metadata i8* %next_qp, metadata !21323, metadata !DIExpression()), !dbg !21324
  call void @llvm.dbg.declare(metadata i8* %n_q_used, metadata !21325, metadata !DIExpression()), !dbg !21326
  call void @llvm.dbg.declare(metadata i8* %sg_list_qp, metadata !21327, metadata !DIExpression()), !dbg !21328
  call void @llvm.dbg.declare(metadata i8* %sg_queue_cnt, metadata !21329, metadata !DIExpression()), !dbg !21330
  call void @llvm.dbg.declare(metadata i8* %q_cnt, metadata !21331, metadata !DIExpression()), !dbg !21332
  call void @llvm.dbg.declare(metadata i8* %done_q_tail, metadata !21333, metadata !DIExpression()), !dbg !21334
  call void @llvm.dbg.declare(metadata i8* %tid_no, metadata !21335, metadata !DIExpression()), !dbg !21336
  call void @llvm.dbg.declare(metadata i8* %scsi_busy, metadata !21337, metadata !DIExpression()), !dbg !21338
  call void @llvm.dbg.declare(metadata i8* %target_id, metadata !21339, metadata !DIExpression()), !dbg !21340
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !21341, metadata !DIExpression()), !dbg !21342
  call void @llvm.dbg.declare(metadata i16* %q_addr, metadata !21343, metadata !DIExpression()), !dbg !21344
  call void @llvm.dbg.declare(metadata i16* %sg_q_addr, metadata !21345, metadata !DIExpression()), !dbg !21346
  call void @llvm.dbg.declare(metadata i8* %cur_target_qng, metadata !21347, metadata !DIExpression()), !dbg !21348
  call void @llvm.dbg.declare(metadata %struct.asc_q_done_info* %scsiq_buf, metadata !21349, metadata !DIExpression()), !dbg !21350
  call void @llvm.dbg.declare(metadata %struct.asc_q_done_info** %scsiq, metadata !21351, metadata !DIExpression()), !dbg !21352
  call void @llvm.dbg.declare(metadata i8* %false_overrun, metadata !21353, metadata !DIExpression()), !dbg !21354
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21355
  %iop_base1 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 0, !dbg !21356
  %1 = load i32, i32* %iop_base1, align 8, !dbg !21356
  store i32 %1, i32* %iop_base, align 4, !dbg !21357
  store i8 1, i8* %n_q_used, align 1, !dbg !21358
  store %struct.asc_q_done_info* %scsiq_buf, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21359
  %2 = load i32, i32* %iop_base, align 4, !dbg !21360
  %call = call zeroext i16 @AscReadLramWord(i32 %2, i16 zeroext 90) #11, !dbg !21360
  %conv = trunc i16 %call to i8, !dbg !21361
  store i8 %conv, i8* %done_q_tail, align 1, !dbg !21362
  %3 = load i8, i8* %done_q_tail, align 1, !dbg !21363
  %conv2 = zext i8 %3 to i32, !dbg !21363
  %shl = shl i32 %conv2, 6, !dbg !21363
  %add = add i32 16384, %shl, !dbg !21363
  %conv3 = trunc i32 %add to i16, !dbg !21363
  store i16 %conv3, i16* %q_addr, align 2, !dbg !21364
  %4 = load i32, i32* %iop_base, align 4, !dbg !21365
  %5 = load i16, i16* %q_addr, align 2, !dbg !21366
  %conv4 = zext i16 %5 to i32, !dbg !21366
  %add5 = add i32 %conv4, 0, !dbg !21367
  %conv6 = trunc i32 %add5 to i16, !dbg !21368
  %call7 = call zeroext i8 @AscReadLramByte(i32 %4, i16 zeroext %conv6) #11, !dbg !21369
  store i8 %call7, i8* %next_qp, align 1, !dbg !21370
  %6 = load i8, i8* %next_qp, align 1, !dbg !21371
  %conv8 = zext i8 %6 to i32, !dbg !21371
  %cmp = icmp ne i32 %conv8, 255, !dbg !21373
  br i1 %cmp, label %if.then, label %if.end227, !dbg !21374

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %iop_base, align 4, !dbg !21375
  %8 = load i8, i8* %next_qp, align 1, !dbg !21375
  %conv10 = zext i8 %8 to i16, !dbg !21375
  call void @AscWriteLramWord(i32 %7, i16 zeroext 90, i16 zeroext %conv10) #11, !dbg !21375
  %9 = load i8, i8* %next_qp, align 1, !dbg !21377
  %conv11 = zext i8 %9 to i32, !dbg !21377
  %shl12 = shl i32 %conv11, 6, !dbg !21377
  %add13 = add i32 16384, %shl12, !dbg !21377
  %conv14 = trunc i32 %add13 to i16, !dbg !21377
  store i16 %conv14, i16* %q_addr, align 2, !dbg !21378
  %10 = load i32, i32* %iop_base, align 4, !dbg !21379
  %11 = load i16, i16* %q_addr, align 2, !dbg !21380
  %12 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21381
  %13 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21382
  %max_dma_count = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %13, i32 0, i32 31, !dbg !21383
  %14 = load i32, i32* %max_dma_count, align 4, !dbg !21383
  %call15 = call zeroext i8 @_AscCopyLramScsiDoneQ(i32 %10, i16 zeroext %11, %struct.asc_q_done_info* %12, i32 %14) #11, !dbg !21384
  store i8 %call15, i8* %sg_queue_cnt, align 1, !dbg !21385
  %15 = load i32, i32* %iop_base, align 4, !dbg !21386
  %16 = load i16, i16* %q_addr, align 2, !dbg !21387
  %conv16 = zext i16 %16 to i32, !dbg !21387
  %add17 = add i32 %conv16, 2, !dbg !21388
  %conv18 = trunc i32 %add17 to i16, !dbg !21389
  %17 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21390
  %q_status = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %17, i32 0, i32 2, !dbg !21391
  %18 = load i8, i8* %q_status, align 4, !dbg !21391
  %conv19 = zext i8 %18 to i32, !dbg !21390
  %and = and i32 %conv19, 190, !dbg !21392
  %conv20 = trunc i32 %and to i8, !dbg !21393
  call void @AscWriteLramByte(i32 %15, i16 zeroext %conv18, i8 zeroext %conv20) #11, !dbg !21394
  %19 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21395
  %d2 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %19, i32 0, i32 0, !dbg !21395
  %target_ix = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %d2, i32 0, i32 1, !dbg !21395
  %20 = load i8, i8* %target_ix, align 4, !dbg !21395
  %conv21 = zext i8 %20 to i32, !dbg !21395
  %and22 = and i32 %conv21, 7, !dbg !21395
  %conv23 = trunc i32 %and22 to i8, !dbg !21395
  store i8 %conv23, i8* %tid_no, align 1, !dbg !21396
  %21 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21397
  %d224 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %21, i32 0, i32 0, !dbg !21397
  %target_ix25 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %d224, i32 0, i32 1, !dbg !21397
  %22 = load i8, i8* %target_ix25, align 4, !dbg !21397
  %conv26 = zext i8 %22 to i32, !dbg !21397
  %and27 = and i32 %conv26, 7, !dbg !21397
  %shl28 = shl i32 1, %and27, !dbg !21397
  %conv29 = trunc i32 %shl28 to i8, !dbg !21397
  store i8 %conv29, i8* %target_id, align 1, !dbg !21398
  %23 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21399
  %cntl = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %23, i32 0, i32 4, !dbg !21401
  %24 = load i8, i8* %cntl, align 2, !dbg !21401
  %conv30 = zext i8 %24 to i32, !dbg !21399
  %and31 = and i32 %conv30, 4, !dbg !21402
  %cmp32 = icmp ne i32 %and31, 0, !dbg !21403
  br i1 %cmp32, label %if.then34, label %if.end60, !dbg !21404

if.then34:                                        ; preds = %if.then
  %25 = load i16, i16* %q_addr, align 2, !dbg !21405
  store i16 %25, i16* %sg_q_addr, align 2, !dbg !21407
  %26 = load i8, i8* %next_qp, align 1, !dbg !21408
  store i8 %26, i8* %sg_list_qp, align 1, !dbg !21409
  store i8 0, i8* %q_cnt, align 1, !dbg !21410
  br label %for.cond, !dbg !21412

for.cond:                                         ; preds = %for.inc, %if.then34
  %27 = load i8, i8* %q_cnt, align 1, !dbg !21413
  %conv35 = zext i8 %27 to i32, !dbg !21413
  %28 = load i8, i8* %sg_queue_cnt, align 1, !dbg !21415
  %conv36 = zext i8 %28 to i32, !dbg !21415
  %cmp37 = icmp slt i32 %conv35, %conv36, !dbg !21416
  br i1 %cmp37, label %for.body, label %for.end, !dbg !21417

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %iop_base, align 4, !dbg !21418
  %30 = load i16, i16* %sg_q_addr, align 2, !dbg !21420
  %conv39 = zext i16 %30 to i32, !dbg !21420
  %add40 = add i32 %conv39, 0, !dbg !21421
  %conv41 = trunc i32 %add40 to i16, !dbg !21422
  %call42 = call zeroext i8 @AscReadLramByte(i32 %29, i16 zeroext %conv41) #11, !dbg !21423
  store i8 %call42, i8* %sg_list_qp, align 1, !dbg !21424
  %31 = load i8, i8* %sg_list_qp, align 1, !dbg !21425
  %conv43 = zext i8 %31 to i32, !dbg !21425
  %shl44 = shl i32 %conv43, 6, !dbg !21425
  %add45 = add i32 16384, %shl44, !dbg !21425
  %conv46 = trunc i32 %add45 to i16, !dbg !21425
  store i16 %conv46, i16* %sg_q_addr, align 2, !dbg !21426
  %32 = load i8, i8* %sg_list_qp, align 1, !dbg !21427
  %conv47 = zext i8 %32 to i32, !dbg !21427
  %cmp48 = icmp eq i32 %conv47, 255, !dbg !21429
  br i1 %cmp48, label %if.then50, label %if.end, !dbg !21430

if.then50:                                        ; preds = %for.body
  %33 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21431
  %call51 = call i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %33, i16 zeroext 24) #11, !dbg !21433
  %34 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21434
  %d3 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %34, i32 0, i32 1, !dbg !21435
  %done_stat = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3, i32 0, i32 0, !dbg !21436
  store i8 4, i8* %done_stat, align 4, !dbg !21437
  %35 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21438
  %d352 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %35, i32 0, i32 1, !dbg !21439
  %host_stat = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d352, i32 0, i32 1, !dbg !21440
  store i8 33, i8* %host_stat, align 1, !dbg !21441
  br label %FATAL_ERR_QDONE, !dbg !21442

if.end:                                           ; preds = %for.body
  %36 = load i32, i32* %iop_base, align 4, !dbg !21443
  %37 = load i16, i16* %sg_q_addr, align 2, !dbg !21444
  %conv53 = zext i16 %37 to i32, !dbg !21444
  %add54 = add i32 %conv53, 2, !dbg !21445
  %conv55 = trunc i32 %add54 to i16, !dbg !21446
  call void @AscWriteLramByte(i32 %36, i16 zeroext %conv55, i8 zeroext 0) #11, !dbg !21447
  br label %for.inc, !dbg !21448

for.inc:                                          ; preds = %if.end
  %38 = load i8, i8* %q_cnt, align 1, !dbg !21449
  %inc = add i8 %38, 1, !dbg !21449
  store i8 %inc, i8* %q_cnt, align 1, !dbg !21449
  br label %for.cond, !dbg !21450, !llvm.loop !21451

for.end:                                          ; preds = %for.cond
  %39 = load i8, i8* %sg_queue_cnt, align 1, !dbg !21453
  %conv56 = zext i8 %39 to i32, !dbg !21453
  %add57 = add i32 %conv56, 1, !dbg !21454
  %conv58 = trunc i32 %add57 to i8, !dbg !21453
  store i8 %conv58, i8* %n_q_used, align 1, !dbg !21455
  %40 = load i32, i32* %iop_base, align 4, !dbg !21456
  %41 = load i8, i8* %sg_list_qp, align 1, !dbg !21456
  %conv59 = zext i8 %41 to i16, !dbg !21456
  call void @AscWriteLramWord(i32 %40, i16 zeroext 90, i16 zeroext %conv59) #11, !dbg !21456
  br label %if.end60, !dbg !21457

if.end60:                                         ; preds = %for.end, %if.then
  %42 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21458
  %queue_full_or_busy = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %42, i32 0, i32 9, !dbg !21460
  %43 = load i8, i8* %queue_full_or_busy, align 8, !dbg !21460
  %conv61 = zext i8 %43 to i32, !dbg !21458
  %44 = load i8, i8* %target_id, align 1, !dbg !21461
  %conv62 = zext i8 %44 to i32, !dbg !21461
  %and63 = and i32 %conv61, %conv62, !dbg !21462
  %tobool = icmp ne i32 %and63, 0, !dbg !21462
  br i1 %tobool, label %if.then64, label %if.end89, !dbg !21463

if.then64:                                        ; preds = %if.end60
  %45 = load i32, i32* %iop_base, align 4, !dbg !21464
  %46 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21466
  %d265 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %46, i32 0, i32 0, !dbg !21467
  %target_ix66 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %d265, i32 0, i32 1, !dbg !21468
  %47 = load i8, i8* %target_ix66, align 4, !dbg !21468
  %conv67 = zext i8 %47 to i16, !dbg !21469
  %conv68 = zext i16 %conv67 to i32, !dbg !21469
  %add69 = add i32 16384, %conv68, !dbg !21470
  %conv70 = trunc i32 %add69 to i16, !dbg !21471
  %call71 = call zeroext i8 @AscReadLramByte(i32 %45, i16 zeroext %conv70) #11, !dbg !21472
  store i8 %call71, i8* %cur_target_qng, align 1, !dbg !21473
  %48 = load i8, i8* %cur_target_qng, align 1, !dbg !21474
  %conv72 = zext i8 %48 to i32, !dbg !21474
  %49 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21476
  %max_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %49, i32 0, i32 22, !dbg !21477
  %50 = load i8, i8* %tid_no, align 1, !dbg !21478
  %idxprom = zext i8 %50 to i64, !dbg !21476
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %max_dvc_qng, i64 0, i64 %idxprom, !dbg !21476
  %51 = load i8, i8* %arrayidx, align 1, !dbg !21476
  %conv73 = zext i8 %51 to i32, !dbg !21476
  %cmp74 = icmp slt i32 %conv72, %conv73, !dbg !21479
  br i1 %cmp74, label %if.then76, label %if.end88, !dbg !21480

if.then76:                                        ; preds = %if.then64
  %52 = load i32, i32* %iop_base, align 4, !dbg !21481
  %call77 = call zeroext i8 @AscReadLramByte(i32 %52, i16 zeroext 75) #11, !dbg !21483
  store i8 %call77, i8* %scsi_busy, align 1, !dbg !21484
  %53 = load i8, i8* %target_id, align 1, !dbg !21485
  %conv78 = zext i8 %53 to i32, !dbg !21485
  %neg = xor i32 %conv78, -1, !dbg !21486
  %54 = load i8, i8* %scsi_busy, align 1, !dbg !21487
  %conv79 = zext i8 %54 to i32, !dbg !21487
  %and80 = and i32 %conv79, %neg, !dbg !21487
  %conv81 = trunc i32 %and80 to i8, !dbg !21487
  store i8 %conv81, i8* %scsi_busy, align 1, !dbg !21487
  %55 = load i32, i32* %iop_base, align 4, !dbg !21488
  %56 = load i8, i8* %scsi_busy, align 1, !dbg !21489
  call void @AscWriteLramByte(i32 %55, i16 zeroext 75, i8 zeroext %56) #11, !dbg !21490
  %57 = load i8, i8* %target_id, align 1, !dbg !21491
  %conv82 = zext i8 %57 to i32, !dbg !21491
  %neg83 = xor i32 %conv82, -1, !dbg !21492
  %58 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21493
  %queue_full_or_busy84 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %58, i32 0, i32 9, !dbg !21494
  %59 = load i8, i8* %queue_full_or_busy84, align 8, !dbg !21495
  %conv85 = zext i8 %59 to i32, !dbg !21495
  %and86 = and i32 %conv85, %neg83, !dbg !21495
  %conv87 = trunc i32 %and86 to i8, !dbg !21495
  store i8 %conv87, i8* %queue_full_or_busy84, align 8, !dbg !21495
  br label %if.end88, !dbg !21496

if.end88:                                         ; preds = %if.then76, %if.then64
  br label %if.end89, !dbg !21497

if.end89:                                         ; preds = %if.end88, %if.end60
  %60 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21498
  %cur_total_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %60, i32 0, i32 17, !dbg !21500
  %61 = load i8, i8* %cur_total_qng, align 4, !dbg !21500
  %conv90 = zext i8 %61 to i32, !dbg !21498
  %62 = load i8, i8* %n_q_used, align 1, !dbg !21501
  %conv91 = zext i8 %62 to i32, !dbg !21501
  %cmp92 = icmp sge i32 %conv90, %conv91, !dbg !21502
  br i1 %cmp92, label %if.then94, label %if.else, !dbg !21503

if.then94:                                        ; preds = %if.end89
  %63 = load i8, i8* %n_q_used, align 1, !dbg !21504
  %conv95 = zext i8 %63 to i32, !dbg !21504
  %64 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21506
  %cur_total_qng96 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %64, i32 0, i32 17, !dbg !21507
  %65 = load i8, i8* %cur_total_qng96, align 4, !dbg !21508
  %conv97 = zext i8 %65 to i32, !dbg !21508
  %sub = sub i32 %conv97, %conv95, !dbg !21508
  %conv98 = trunc i32 %sub to i8, !dbg !21508
  store i8 %conv98, i8* %cur_total_qng96, align 4, !dbg !21508
  %66 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21509
  %cur_dvc_qng = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %66, i32 0, i32 21, !dbg !21511
  %67 = load i8, i8* %tid_no, align 1, !dbg !21512
  %idxprom99 = zext i8 %67 to i64, !dbg !21509
  %arrayidx100 = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng, i64 0, i64 %idxprom99, !dbg !21509
  %68 = load i8, i8* %arrayidx100, align 1, !dbg !21509
  %conv101 = zext i8 %68 to i32, !dbg !21509
  %cmp102 = icmp ne i32 %conv101, 0, !dbg !21513
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !21514

if.then104:                                       ; preds = %if.then94
  %69 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21515
  %cur_dvc_qng105 = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %69, i32 0, i32 21, !dbg !21517
  %70 = load i8, i8* %tid_no, align 1, !dbg !21518
  %idxprom106 = zext i8 %70 to i64, !dbg !21515
  %arrayidx107 = getelementptr [8 x i8], [8 x i8]* %cur_dvc_qng105, i64 0, i64 %idxprom106, !dbg !21515
  %71 = load i8, i8* %arrayidx107, align 1, !dbg !21519
  %dec = add i8 %71, -1, !dbg !21519
  store i8 %dec, i8* %arrayidx107, align 1, !dbg !21519
  br label %if.end108, !dbg !21520

if.end108:                                        ; preds = %if.then104, %if.then94
  br label %if.end112, !dbg !21521

if.else:                                          ; preds = %if.end89
  %72 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21522
  %call109 = call i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %72, i16 zeroext 23) #11, !dbg !21524
  %73 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21525
  %d3110 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %73, i32 0, i32 1, !dbg !21526
  %done_stat111 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3110, i32 0, i32 0, !dbg !21527
  store i8 4, i8* %done_stat111, align 4, !dbg !21528
  br label %FATAL_ERR_QDONE, !dbg !21529

if.end112:                                        ; preds = %if.end108
  %74 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21530
  %d2113 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %74, i32 0, i32 0, !dbg !21532
  %srb_tag = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %d2113, i32 0, i32 0, !dbg !21533
  %75 = load i32, i32* %srb_tag, align 4, !dbg !21533
  %conv114 = zext i32 %75 to i64, !dbg !21530
  %cmp115 = icmp eq i64 %conv114, 0, !dbg !21534
  br i1 %cmp115, label %if.then122, label %lor.lhs.false, !dbg !21535

lor.lhs.false:                                    ; preds = %if.end112
  %76 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21536
  %q_status117 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %76, i32 0, i32 2, !dbg !21537
  %77 = load i8, i8* %q_status117, align 4, !dbg !21537
  %conv118 = zext i8 %77 to i32, !dbg !21536
  %and119 = and i32 %conv118, 64, !dbg !21538
  %cmp120 = icmp ne i32 %and119, 0, !dbg !21539
  br i1 %cmp120, label %if.then122, label %if.else123, !dbg !21540

if.then122:                                       ; preds = %lor.lhs.false, %if.end112
  store i32 17, i32* %retval, align 4, !dbg !21541
  br label %return, !dbg !21541

if.else123:                                       ; preds = %lor.lhs.false
  %78 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21543
  %q_status124 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %78, i32 0, i32 2, !dbg !21545
  %79 = load i8, i8* %q_status124, align 4, !dbg !21545
  %conv125 = zext i8 %79 to i32, !dbg !21543
  %cmp126 = icmp eq i32 %conv125, 128, !dbg !21546
  br i1 %cmp126, label %if.then128, label %if.else218, !dbg !21547

if.then128:                                       ; preds = %if.else123
  store i8 0, i8* %false_overrun, align 1, !dbg !21548
  %80 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21550
  %extra_bytes = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %80, i32 0, i32 6, !dbg !21552
  %81 = load i8, i8* %extra_bytes, align 4, !dbg !21552
  %conv129 = zext i8 %81 to i32, !dbg !21550
  %cmp130 = icmp ne i32 %conv129, 0, !dbg !21553
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !21554

if.then132:                                       ; preds = %if.then128
  %82 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21555
  %extra_bytes133 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %82, i32 0, i32 6, !dbg !21557
  %83 = load i8, i8* %extra_bytes133, align 4, !dbg !21557
  %conv134 = zext i8 %83 to i32, !dbg !21555
  %84 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21558
  %remain_bytes = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %84, i32 0, i32 8, !dbg !21559
  %85 = load i32, i32* %remain_bytes, align 4, !dbg !21560
  %add135 = add i32 %85, %conv134, !dbg !21560
  store i32 %add135, i32* %remain_bytes, align 4, !dbg !21560
  br label %if.end136, !dbg !21561

if.end136:                                        ; preds = %if.then132, %if.then128
  %86 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21562
  %d3137 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %86, i32 0, i32 1, !dbg !21564
  %done_stat138 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3137, i32 0, i32 0, !dbg !21565
  %87 = load i8, i8* %done_stat138, align 4, !dbg !21565
  %conv139 = zext i8 %87 to i32, !dbg !21562
  %cmp140 = icmp eq i32 %conv139, 4, !dbg !21566
  br i1 %cmp140, label %if.then142, label %if.end183, !dbg !21567

if.then142:                                       ; preds = %if.end136
  %88 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21568
  %d3143 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %88, i32 0, i32 1, !dbg !21571
  %host_stat144 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3143, i32 0, i32 1, !dbg !21572
  %89 = load i8, i8* %host_stat144, align 1, !dbg !21572
  %conv145 = zext i8 %89 to i32, !dbg !21568
  %cmp146 = icmp eq i32 %conv145, 18, !dbg !21573
  br i1 %cmp146, label %if.then148, label %if.else168, !dbg !21574

if.then148:                                       ; preds = %if.then142
  %90 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21575
  %cntl149 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %90, i32 0, i32 4, !dbg !21578
  %91 = load i8, i8* %cntl149, align 2, !dbg !21578
  %conv150 = zext i8 %91 to i32, !dbg !21575
  %and151 = and i32 %conv150, 24, !dbg !21579
  %cmp152 = icmp eq i32 %and151, 0, !dbg !21580
  br i1 %cmp152, label %if.then154, label %if.else159, !dbg !21581

if.then154:                                       ; preds = %if.then148
  %92 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21582
  %d3155 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %92, i32 0, i32 1, !dbg !21584
  %done_stat156 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3155, i32 0, i32 0, !dbg !21585
  store i8 1, i8* %done_stat156, align 4, !dbg !21586
  %93 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21587
  %d3157 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %93, i32 0, i32 1, !dbg !21588
  %host_stat158 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3157, i32 0, i32 1, !dbg !21589
  store i8 0, i8* %host_stat158, align 1, !dbg !21590
  br label %if.end167, !dbg !21591

if.else159:                                       ; preds = %if.then148
  %94 = load i8, i8* %false_overrun, align 1, !dbg !21592
  %tobool160 = trunc i8 %94 to i1, !dbg !21592
  br i1 %tobool160, label %if.then161, label %if.end166, !dbg !21594

if.then161:                                       ; preds = %if.else159
  %95 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21595
  %d3162 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %95, i32 0, i32 1, !dbg !21597
  %done_stat163 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3162, i32 0, i32 0, !dbg !21598
  store i8 1, i8* %done_stat163, align 4, !dbg !21599
  %96 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21600
  %d3164 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %96, i32 0, i32 1, !dbg !21601
  %host_stat165 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3164, i32 0, i32 1, !dbg !21602
  store i8 0, i8* %host_stat165, align 1, !dbg !21603
  br label %if.end166, !dbg !21604

if.end166:                                        ; preds = %if.then161, %if.else159
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then154
  br label %if.end182, !dbg !21605

if.else168:                                       ; preds = %if.then142
  %97 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21606
  %d3169 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %97, i32 0, i32 1, !dbg !21608
  %host_stat170 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3169, i32 0, i32 1, !dbg !21609
  %98 = load i8, i8* %host_stat170, align 1, !dbg !21609
  %conv171 = zext i8 %98 to i32, !dbg !21606
  %cmp172 = icmp eq i32 %conv171, 72, !dbg !21610
  br i1 %cmp172, label %if.then174, label %if.end181, !dbg !21611

if.then174:                                       ; preds = %if.else168
  %99 = load i32, i32* %iop_base, align 4, !dbg !21612
  %call175 = call zeroext i1 @AscStopChip(i32 %99) #11, !dbg !21614
  %100 = load i32, i32* %iop_base, align 4, !dbg !21615
  %add176 = add i32 %100, 15, !dbg !21615
  call void @outb(i8 zeroext 96, i32 %add176) #11, !dbg !21615
  call void @__const_udelay(i64 257700) #11, !dbg !21616
  %101 = load i32, i32* %iop_base, align 4, !dbg !21621
  %add177 = add i32 %101, 15, !dbg !21621
  call void @outb(i8 zeroext 32, i32 %add177) #11, !dbg !21621
  %102 = load i32, i32* %iop_base, align 4, !dbg !21622
  %add178 = add i32 %102, 14, !dbg !21622
  call void @outw(i16 zeroext 4096, i32 %add178) #11, !dbg !21622
  %103 = load i32, i32* %iop_base, align 4, !dbg !21623
  %add179 = add i32 %103, 14, !dbg !21623
  call void @outw(i16 zeroext 0, i32 %add179) #11, !dbg !21623
  %104 = load i32, i32* %iop_base, align 4, !dbg !21624
  %add180 = add i32 %104, 15, !dbg !21624
  call void @outb(i8 zeroext 0, i32 %add180) #11, !dbg !21624
  br label %if.end181, !dbg !21625

if.end181:                                        ; preds = %if.then174, %if.else168
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.end167
  br label %if.end183, !dbg !21626

if.end183:                                        ; preds = %if.end182, %if.end136
  %105 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21627
  %cntl184 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %105, i32 0, i32 4, !dbg !21629
  %106 = load i8, i8* %cntl184, align 2, !dbg !21629
  %conv185 = zext i8 %106 to i32, !dbg !21627
  %and186 = and i32 %conv185, 1, !dbg !21630
  %cmp187 = icmp eq i32 %and186, 0, !dbg !21631
  br i1 %cmp187, label %if.then189, label %if.else190, !dbg !21632

if.then189:                                       ; preds = %if.end183
  %107 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21633
  %108 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21635
  call void @asc_isr_callback(%struct.asc_dvc_var* %107, %struct.asc_q_done_info* %108) #11, !dbg !21636
  br label %if.end217, !dbg !21637

if.else190:                                       ; preds = %if.end183
  %109 = load i32, i32* %iop_base, align 4, !dbg !21638
  %110 = load i16, i16* %q_addr, align 2, !dbg !21641
  %conv191 = zext i16 %110 to i32, !dbg !21641
  %add192 = add i32 %conv191, 36, !dbg !21642
  %conv193 = trunc i32 %add192 to i16, !dbg !21643
  %call194 = call zeroext i8 @AscReadLramByte(i32 %109, i16 zeroext %conv193) #11, !dbg !21644
  %conv195 = zext i8 %call194 to i32, !dbg !21644
  %cmp196 = icmp eq i32 %conv195, 27, !dbg !21645
  br i1 %cmp196, label %if.then198, label %if.end216, !dbg !21646

if.then198:                                       ; preds = %if.else190
  %111 = load i8, i8* %target_id, align 1, !dbg !21647
  %conv199 = zext i8 %111 to i32, !dbg !21647
  %neg200 = xor i32 %conv199, -1, !dbg !21649
  %112 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21650
  %unit_not_ready = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %112, i32 0, i32 8, !dbg !21651
  %113 = load i8, i8* %unit_not_ready, align 1, !dbg !21652
  %conv201 = zext i8 %113 to i32, !dbg !21652
  %and202 = and i32 %conv201, %neg200, !dbg !21652
  %conv203 = trunc i32 %and202 to i8, !dbg !21652
  store i8 %conv203, i8* %unit_not_ready, align 1, !dbg !21652
  %114 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21653
  %d3204 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %114, i32 0, i32 1, !dbg !21655
  %done_stat205 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3204, i32 0, i32 0, !dbg !21656
  %115 = load i8, i8* %done_stat205, align 4, !dbg !21656
  %conv206 = zext i8 %115 to i32, !dbg !21653
  %cmp207 = icmp ne i32 %conv206, 1, !dbg !21657
  br i1 %cmp207, label %if.then209, label %if.end215, !dbg !21658

if.then209:                                       ; preds = %if.then198
  %116 = load i8, i8* %target_id, align 1, !dbg !21659
  %conv210 = zext i8 %116 to i32, !dbg !21659
  %neg211 = xor i32 %conv210, -1, !dbg !21661
  %117 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21662
  %start_motor = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %117, i32 0, i32 10, !dbg !21663
  %118 = load i8, i8* %start_motor, align 1, !dbg !21664
  %conv212 = zext i8 %118 to i32, !dbg !21664
  %and213 = and i32 %conv212, %neg211, !dbg !21664
  %conv214 = trunc i32 %and213 to i8, !dbg !21664
  store i8 %conv214, i8* %start_motor, align 1, !dbg !21664
  br label %if.end215, !dbg !21665

if.end215:                                        ; preds = %if.then209, %if.then198
  br label %if.end216, !dbg !21666

if.end216:                                        ; preds = %if.end215, %if.else190
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then189
  store i32 1, i32* %retval, align 4, !dbg !21667
  br label %return, !dbg !21667

if.else218:                                       ; preds = %if.else123
  %119 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21668
  %call219 = call i32 @AscSetLibErrorCode(%struct.asc_dvc_var* %119, i16 zeroext 13) #11, !dbg !21670
  br label %FATAL_ERR_QDONE, !dbg !21670

FATAL_ERR_QDONE:                                  ; preds = %if.else218, %if.else, %if.then50
  call void @llvm.dbg.label(metadata !21671), !dbg !21672
  %120 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21673
  %cntl220 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %120, i32 0, i32 4, !dbg !21675
  %121 = load i8, i8* %cntl220, align 2, !dbg !21675
  %conv221 = zext i8 %121 to i32, !dbg !21673
  %and222 = and i32 %conv221, 1, !dbg !21676
  %cmp223 = icmp eq i32 %and222, 0, !dbg !21677
  br i1 %cmp223, label %if.then225, label %if.end226, !dbg !21678

if.then225:                                       ; preds = %FATAL_ERR_QDONE
  %122 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21679
  %123 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq, align 8, !dbg !21681
  call void @asc_isr_callback(%struct.asc_dvc_var* %122, %struct.asc_q_done_info* %123) #11, !dbg !21682
  br label %if.end226, !dbg !21683

if.end226:                                        ; preds = %if.then225, %FATAL_ERR_QDONE
  store i32 128, i32* %retval, align 4, !dbg !21684
  br label %return, !dbg !21684

if.end227:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21685
  br label %return, !dbg !21685

return:                                           ; preds = %if.end227, %if.end226, %if.end217, %if.then122
  %124 = load i32, i32* %retval, align 4, !dbg !21686
  ret i32 %124, !dbg !21686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscSetChipSDTR(i32 %iop_base, i8 zeroext %sdtr_data, i8 zeroext %tid_no) #2 !dbg !21687 {
entry:
  %iop_base.addr = alloca i32, align 4
  %sdtr_data.addr = alloca i8, align 1
  %tid_no.addr = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !21690, metadata !DIExpression()), !dbg !21691
  store i8 %sdtr_data, i8* %sdtr_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sdtr_data.addr, metadata !21692, metadata !DIExpression()), !dbg !21693
  store i8 %tid_no, i8* %tid_no.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tid_no.addr, metadata !21694, metadata !DIExpression()), !dbg !21695
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !21696
  %1 = load i8, i8* %tid_no.addr, align 1, !dbg !21697
  %2 = load i8, i8* %sdtr_data.addr, align 1, !dbg !21698
  %call = call zeroext i1 @AscSetChipSynRegAtID(i32 %0, i8 zeroext %1, i8 zeroext %2) #11, !dbg !21699
  %3 = load i32, i32* %iop_base.addr, align 4, !dbg !21700
  %4 = load i8, i8* %tid_no.addr, align 1, !dbg !21700
  %conv = zext i8 %4 to i16, !dbg !21700
  %conv1 = zext i16 %conv to i32, !dbg !21700
  %add = add i32 24, %conv1, !dbg !21700
  %conv2 = trunc i32 %add to i16, !dbg !21700
  %5 = load i8, i8* %sdtr_data.addr, align 1, !dbg !21700
  call void @AscWriteLramByte(i32 %3, i16 zeroext %conv2, i8 zeroext %5) #11, !dbg !21700
  ret void, !dbg !21701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @AscMemWordCopyPtrFromLram(i32 %iop_base, i16 zeroext %s_addr, i8* %d_buffer, i32 %words) #2 !dbg !21702 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %d_buffer.addr = alloca i8*, align 8
  %words.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %word = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !21703, metadata !DIExpression()), !dbg !21704
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !21705, metadata !DIExpression()), !dbg !21706
  store i8* %d_buffer, i8** %d_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d_buffer.addr, metadata !21707, metadata !DIExpression()), !dbg !21708
  store i32 %words, i32* %words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %words.addr, metadata !21709, metadata !DIExpression()), !dbg !21710
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21711, metadata !DIExpression()), !dbg !21712
  call void @llvm.dbg.declare(metadata i16* %word, metadata !21713, metadata !DIExpression()), !dbg !21714
  %0 = load i16, i16* %s_addr.addr, align 2, !dbg !21715
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !21715
  %add = add i32 %1, 10, !dbg !21715
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !21715
  store i32 0, i32* %i, align 4, !dbg !21716
  br label %for.cond, !dbg !21718

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !21719
  %3 = load i32, i32* %words.addr, align 4, !dbg !21721
  %mul = mul i32 2, %3, !dbg !21722
  %cmp = icmp slt i32 %2, %mul, !dbg !21723
  br i1 %cmp, label %for.body, label %for.end, !dbg !21724

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !21725
  %add1 = add i32 %4, 8, !dbg !21725
  %call = call zeroext i16 @inw(i32 %add1) #11, !dbg !21725
  store i16 %call, i16* %word, align 2, !dbg !21727
  %5 = load i16, i16* %word, align 2, !dbg !21728
  %conv = zext i16 %5 to i32, !dbg !21728
  %and = and i32 %conv, 255, !dbg !21729
  %conv2 = trunc i32 %and to i8, !dbg !21728
  %6 = load i8*, i8** %d_buffer.addr, align 8, !dbg !21730
  %7 = load i32, i32* %i, align 4, !dbg !21731
  %idxprom = sext i32 %7 to i64, !dbg !21730
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !21730
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !21732
  %8 = load i16, i16* %word, align 2, !dbg !21733
  %conv3 = zext i16 %8 to i32, !dbg !21733
  %shr = ashr i32 %conv3, 8, !dbg !21734
  %and4 = and i32 %shr, 255, !dbg !21735
  %conv5 = trunc i32 %and4 to i8, !dbg !21736
  %9 = load i8*, i8** %d_buffer.addr, align 8, !dbg !21737
  %10 = load i32, i32* %i, align 4, !dbg !21738
  %add6 = add i32 %10, 1, !dbg !21739
  %idxprom7 = sext i32 %add6 to i64, !dbg !21737
  %arrayidx8 = getelementptr i8, i8* %9, i64 %idxprom7, !dbg !21737
  store i8 %conv5, i8* %arrayidx8, align 1, !dbg !21740
  br label %for.inc, !dbg !21741

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !21742
  %add9 = add i32 %11, 2, !dbg !21742
  store i32 %add9, i32* %i, align 4, !dbg !21742
  br label %for.cond, !dbg !21743, !llvm.loop !21744

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @AscCalSDTRData(%struct.asc_dvc_var* %asc_dvc, i8 zeroext %sdtr_period, i8 zeroext %syn_offset) #2 !dbg !21747 {
entry:
  %retval = alloca i8, align 1
  %asc_dvc.addr = alloca %struct.asc_dvc_var*, align 8
  %sdtr_period.addr = alloca i8, align 1
  %syn_offset.addr = alloca i8, align 1
  %byte = alloca i8, align 1
  %sdtr_period_ix = alloca i8, align 1
  store %struct.asc_dvc_var* %asc_dvc, %struct.asc_dvc_var** %asc_dvc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc.addr, metadata !21748, metadata !DIExpression()), !dbg !21749
  store i8 %sdtr_period, i8* %sdtr_period.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sdtr_period.addr, metadata !21750, metadata !DIExpression()), !dbg !21751
  store i8 %syn_offset, i8* %syn_offset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %syn_offset.addr, metadata !21752, metadata !DIExpression()), !dbg !21753
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !21754, metadata !DIExpression()), !dbg !21755
  call void @llvm.dbg.declare(metadata i8* %sdtr_period_ix, metadata !21756, metadata !DIExpression()), !dbg !21757
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21758
  %1 = load i8, i8* %sdtr_period.addr, align 1, !dbg !21759
  %call = call zeroext i8 @AscGetSynPeriodIndex(%struct.asc_dvc_var* %0, i8 zeroext %1) #11, !dbg !21760
  store i8 %call, i8* %sdtr_period_ix, align 1, !dbg !21761
  %2 = load i8, i8* %sdtr_period_ix, align 1, !dbg !21762
  %conv = zext i8 %2 to i32, !dbg !21762
  %3 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc.addr, align 8, !dbg !21764
  %max_sdtr_index = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %3, i32 0, i32 35, !dbg !21765
  %4 = load i8, i8* %max_sdtr_index, align 1, !dbg !21765
  %conv1 = zext i8 %4 to i32, !dbg !21764
  %cmp = icmp sgt i32 %conv, %conv1, !dbg !21766
  br i1 %cmp, label %if.then, label %if.end, !dbg !21767

if.then:                                          ; preds = %entry
  store i8 -1, i8* %retval, align 1, !dbg !21768
  br label %return, !dbg !21768

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %sdtr_period_ix, align 1, !dbg !21769
  %conv3 = zext i8 %5 to i32, !dbg !21769
  %shl = shl i32 %conv3, 4, !dbg !21770
  %6 = load i8, i8* %syn_offset.addr, align 1, !dbg !21771
  %conv4 = zext i8 %6 to i32, !dbg !21771
  %and = and i32 %conv4, 15, !dbg !21772
  %or = or i32 %shl, %and, !dbg !21773
  %conv5 = trunc i32 %or to i8, !dbg !21774
  store i8 %conv5, i8* %byte, align 1, !dbg !21775
  %7 = load i8, i8* %byte, align 1, !dbg !21776
  store i8 %7, i8* %retval, align 1, !dbg !21777
  br label %return, !dbg !21777

return:                                           ; preds = %if.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !21778
  ret i8 %8, !dbg !21778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @_AscCopyLramScsiDoneQ(i32 %iop_base, i16 zeroext %q_addr, %struct.asc_q_done_info* %scsiq, i32 %max_dma_count) #2 !dbg !21779 {
entry:
  %iop_base.addr = alloca i32, align 4
  %q_addr.addr = alloca i16, align 2
  %scsiq.addr = alloca %struct.asc_q_done_info*, align 8
  %max_dma_count.addr = alloca i32, align 4
  %_val = alloca i16, align 2
  %sg_queue_cnt = alloca i8, align 1
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !21782, metadata !DIExpression()), !dbg !21783
  store i16 %q_addr, i16* %q_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %q_addr.addr, metadata !21784, metadata !DIExpression()), !dbg !21785
  store %struct.asc_q_done_info* %scsiq, %struct.asc_q_done_info** %scsiq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_q_done_info** %scsiq.addr, metadata !21786, metadata !DIExpression()), !dbg !21787
  store i32 %max_dma_count, i32* %max_dma_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_dma_count.addr, metadata !21788, metadata !DIExpression()), !dbg !21789
  call void @llvm.dbg.declare(metadata i16* %_val, metadata !21790, metadata !DIExpression()), !dbg !21791
  call void @llvm.dbg.declare(metadata i8* %sg_queue_cnt, metadata !21792, metadata !DIExpression()), !dbg !21793
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !21794
  %1 = load i16, i16* %q_addr.addr, align 2, !dbg !21795
  %conv = zext i16 %1 to i32, !dbg !21795
  %add = add i32 %conv, 22, !dbg !21796
  %conv1 = trunc i32 %add to i16, !dbg !21795
  %2 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21797
  %3 = bitcast %struct.asc_q_done_info* %2 to i8*, !dbg !21798
  call void @DvcGetQinfo(i32 %0, i16 zeroext %conv1, i8* %3, i32 8) #11, !dbg !21799
  %4 = load i32, i32* %iop_base.addr, align 4, !dbg !21800
  %5 = load i16, i16* %q_addr.addr, align 2, !dbg !21801
  %conv2 = zext i16 %5 to i32, !dbg !21801
  %add3 = add i32 %conv2, 2, !dbg !21802
  %conv4 = trunc i32 %add3 to i16, !dbg !21803
  %call = call zeroext i16 @AscReadLramWord(i32 %4, i16 zeroext %conv4) #11, !dbg !21804
  store i16 %call, i16* %_val, align 2, !dbg !21805
  %6 = load i16, i16* %_val, align 2, !dbg !21806
  %conv5 = trunc i16 %6 to i8, !dbg !21807
  %7 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21808
  %q_status = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %7, i32 0, i32 2, !dbg !21809
  store i8 %conv5, i8* %q_status, align 4, !dbg !21810
  %8 = load i16, i16* %_val, align 2, !dbg !21811
  %conv6 = zext i16 %8 to i32, !dbg !21811
  %shr = ashr i32 %conv6, 8, !dbg !21812
  %conv7 = trunc i32 %shr to i8, !dbg !21813
  %9 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21814
  %q_no = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %9, i32 0, i32 3, !dbg !21815
  store i8 %conv7, i8* %q_no, align 1, !dbg !21816
  %10 = load i32, i32* %iop_base.addr, align 4, !dbg !21817
  %11 = load i16, i16* %q_addr.addr, align 2, !dbg !21818
  %conv8 = zext i16 %11 to i32, !dbg !21818
  %add9 = add i32 %conv8, 4, !dbg !21819
  %conv10 = trunc i32 %add9 to i16, !dbg !21820
  %call11 = call zeroext i16 @AscReadLramWord(i32 %10, i16 zeroext %conv10) #11, !dbg !21821
  store i16 %call11, i16* %_val, align 2, !dbg !21822
  %12 = load i16, i16* %_val, align 2, !dbg !21823
  %conv12 = trunc i16 %12 to i8, !dbg !21824
  %13 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21825
  %cntl = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %13, i32 0, i32 4, !dbg !21826
  store i8 %conv12, i8* %cntl, align 2, !dbg !21827
  %14 = load i16, i16* %_val, align 2, !dbg !21828
  %conv13 = zext i16 %14 to i32, !dbg !21828
  %shr14 = ashr i32 %conv13, 8, !dbg !21829
  %conv15 = trunc i32 %shr14 to i8, !dbg !21830
  store i8 %conv15, i8* %sg_queue_cnt, align 1, !dbg !21831
  %15 = load i32, i32* %iop_base.addr, align 4, !dbg !21832
  %16 = load i16, i16* %q_addr.addr, align 2, !dbg !21833
  %conv16 = zext i16 %16 to i32, !dbg !21833
  %add17 = add i32 %conv16, 20, !dbg !21834
  %conv18 = trunc i32 %add17 to i16, !dbg !21835
  %call19 = call zeroext i16 @AscReadLramWord(i32 %15, i16 zeroext %conv18) #11, !dbg !21836
  store i16 %call19, i16* %_val, align 2, !dbg !21837
  %17 = load i16, i16* %_val, align 2, !dbg !21838
  %conv20 = trunc i16 %17 to i8, !dbg !21839
  %18 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21840
  %sense_len = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %18, i32 0, i32 5, !dbg !21841
  store i8 %conv20, i8* %sense_len, align 1, !dbg !21842
  %19 = load i16, i16* %_val, align 2, !dbg !21843
  %conv21 = zext i16 %19 to i32, !dbg !21843
  %shr22 = ashr i32 %conv21, 8, !dbg !21844
  %conv23 = trunc i32 %shr22 to i8, !dbg !21845
  %20 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21846
  %extra_bytes = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %20, i32 0, i32 6, !dbg !21847
  store i8 %conv23, i8* %extra_bytes, align 4, !dbg !21848
  %21 = load i32, i32* %iop_base.addr, align 4, !dbg !21849
  %22 = load i16, i16* %q_addr.addr, align 2, !dbg !21850
  %conv24 = zext i16 %22 to i32, !dbg !21850
  %add25 = add i32 %conv24, 52, !dbg !21851
  %conv26 = trunc i32 %add25 to i16, !dbg !21852
  %call27 = call zeroext i16 @AscReadLramWord(i32 %21, i16 zeroext %conv26) #11, !dbg !21853
  %conv28 = zext i16 %call27 to i32, !dbg !21854
  %shl = shl i32 %conv28, 16, !dbg !21855
  %23 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21856
  %remain_bytes = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %23, i32 0, i32 8, !dbg !21857
  store i32 %shl, i32* %remain_bytes, align 4, !dbg !21858
  %24 = load i32, i32* %iop_base.addr, align 4, !dbg !21859
  %25 = load i16, i16* %q_addr.addr, align 2, !dbg !21860
  %conv29 = zext i16 %25 to i32, !dbg !21860
  %add30 = add i32 %conv29, 60, !dbg !21861
  %conv31 = trunc i32 %add30 to i16, !dbg !21862
  %call32 = call zeroext i16 @AscReadLramWord(i32 %24, i16 zeroext %conv31) #11, !dbg !21863
  %conv33 = zext i16 %call32 to i32, !dbg !21863
  %26 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21864
  %remain_bytes34 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %26, i32 0, i32 8, !dbg !21865
  %27 = load i32, i32* %remain_bytes34, align 4, !dbg !21866
  %add35 = add i32 %27, %conv33, !dbg !21866
  store i32 %add35, i32* %remain_bytes34, align 4, !dbg !21866
  %28 = load i32, i32* %max_dma_count.addr, align 4, !dbg !21867
  %29 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %scsiq.addr, align 8, !dbg !21868
  %remain_bytes36 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %29, i32 0, i32 8, !dbg !21869
  %30 = load i32, i32* %remain_bytes36, align 4, !dbg !21870
  %and = and i32 %30, %28, !dbg !21870
  store i32 %and, i32* %remain_bytes36, align 4, !dbg !21870
  %31 = load i8, i8* %sg_queue_cnt, align 1, !dbg !21871
  ret i8 %31, !dbg !21872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asc_isr_callback(%struct.asc_dvc_var* %asc_dvc_varp, %struct.asc_q_done_info* %qdonep) #2 !dbg !21873 {
entry:
  %asc_dvc_varp.addr = alloca %struct.asc_dvc_var*, align 8
  %qdonep.addr = alloca %struct.asc_q_done_info*, align 8
  %boardp = alloca %struct.asc_board*, align 8
  %srb_tag = alloca i32, align 4
  %scp = alloca %struct.scsi_cmnd*, align 8
  store %struct.asc_dvc_var* %asc_dvc_varp, %struct.asc_dvc_var** %asc_dvc_varp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_dvc_var** %asc_dvc_varp.addr, metadata !21876, metadata !DIExpression()), !dbg !21877
  store %struct.asc_q_done_info* %qdonep, %struct.asc_q_done_info** %qdonep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.asc_q_done_info** %qdonep.addr, metadata !21878, metadata !DIExpression()), !dbg !21879
  call void @llvm.dbg.declare(metadata %struct.asc_board** %boardp, metadata !21880, metadata !DIExpression()), !dbg !21881
  %0 = load %struct.asc_dvc_var*, %struct.asc_dvc_var** %asc_dvc_varp.addr, align 8, !dbg !21882
  %drv_ptr = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %0, i32 0, i32 36, !dbg !21883
  %1 = load %struct.asc_board*, %struct.asc_board** %drv_ptr, align 8, !dbg !21883
  store %struct.asc_board* %1, %struct.asc_board** %boardp, align 8, !dbg !21881
  call void @llvm.dbg.declare(metadata i32* %srb_tag, metadata !21884, metadata !DIExpression()), !dbg !21885
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scp, metadata !21886, metadata !DIExpression()), !dbg !21887
  %2 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21888
  %d2 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %2, i32 0, i32 0, !dbg !21889
  %srb_tag1 = getelementptr inbounds %struct.asc_scsiq_2, %struct.asc_scsiq_2* %d2, i32 0, i32 0, !dbg !21890
  %3 = load i32, i32* %srb_tag1, align 4, !dbg !21890
  %sub = sub i32 %3, 1, !dbg !21891
  store i32 %sub, i32* %srb_tag, align 4, !dbg !21892
  %4 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21893
  %shost = getelementptr inbounds %struct.asc_board, %struct.asc_board* %4, i32 0, i32 1, !dbg !21894
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !21894
  %6 = load i32, i32* %srb_tag, align 4, !dbg !21895
  %call = call %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %5, i32 %6) #11, !dbg !21896
  store %struct.scsi_cmnd* %call, %struct.scsi_cmnd** %scp, align 8, !dbg !21897
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21898
  %tobool = icmp ne %struct.scsi_cmnd* %7, null, !dbg !21898
  br i1 %tobool, label %if.end, label %if.then, !dbg !21900

if.then:                                          ; preds = %entry
  br label %return, !dbg !21901

if.end:                                           ; preds = %entry
  %8 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21902
  %shost2 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %8, i32 0, i32 1, !dbg !21902
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost2, align 8, !dbg !21902
  %call3 = call i8* @shost_priv(%struct.Scsi_Host* %9) #11, !dbg !21902
  %10 = bitcast i8* %call3 to %struct.asc_board*, !dbg !21902
  %asc_stats = getelementptr inbounds %struct.asc_board, %struct.asc_board* %10, i32 0, i32 12, !dbg !21902
  %callback = getelementptr inbounds %struct.asc_stats, %struct.asc_stats* %asc_stats, i32 0, i32 4, !dbg !21902
  %11 = load i32, i32* %callback, align 8, !dbg !21902
  %add = add i32 %11, 1, !dbg !21902
  store i32 %add, i32* %callback, align 8, !dbg !21902
  %12 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21903
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %12, i32 0, i32 0, !dbg !21903
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21903
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21903
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 22, !dbg !21903
  %dma_handle = getelementptr inbounds %struct.scsi_pointer, %struct.scsi_pointer* %SCp, i32 0, i32 4, !dbg !21903
  %15 = load i64, i64* %dma_handle, align 8, !dbg !21903
  call void @dma_unmap_single_attrs(%struct.device* %13, i64 %15, i64 96, i32 2, i64 0) #11, !dbg !21903
  %16 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21904
  %d3 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %16, i32 0, i32 1, !dbg !21905
  %done_stat = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d3, i32 0, i32 0, !dbg !21906
  %17 = load i8, i8* %done_stat, align 4, !dbg !21906
  %conv = zext i8 %17 to i32, !dbg !21904
  switch i32 %conv, label %sw.default44 [
    i32 1, label %sw.bb
    i32 4, label %sw.bb16
    i32 2, label %sw.bb35
  ], !dbg !21907

sw.bb:                                            ; preds = %if.end
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21908
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 24, !dbg !21910
  store i32 0, i32* %result, align 8, !dbg !21911
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21912
  %call4 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %19) #11, !dbg !21914
  %cmp = icmp ne i32 %call4, 0, !dbg !21915
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !21916

land.lhs.true:                                    ; preds = %sw.bb
  %20 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21917
  %remain_bytes = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %20, i32 0, i32 8, !dbg !21918
  %21 = load i32, i32* %remain_bytes, align 4, !dbg !21918
  %cmp6 = icmp ne i32 %21, 0, !dbg !21919
  br i1 %cmp6, label %land.lhs.true8, label %if.end15, !dbg !21920

land.lhs.true8:                                   ; preds = %land.lhs.true
  %22 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21921
  %remain_bytes9 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %22, i32 0, i32 8, !dbg !21922
  %23 = load i32, i32* %remain_bytes9, align 4, !dbg !21922
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21923
  %call10 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %24) #11, !dbg !21924
  %cmp11 = icmp ule i32 %23, %call10, !dbg !21925
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !21926

if.then13:                                        ; preds = %land.lhs.true8
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21927
  %26 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21929
  %remain_bytes14 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %26, i32 0, i32 8, !dbg !21930
  %27 = load i32, i32* %remain_bytes14, align 4, !dbg !21930
  call void @scsi_set_resid(%struct.scsi_cmnd* %25, i32 %27) #11, !dbg !21931
  br label %if.end15, !dbg !21932

if.end15:                                         ; preds = %if.then13, %land.lhs.true8, %land.lhs.true, %sw.bb
  br label %sw.epilog55, !dbg !21933

sw.bb16:                                          ; preds = %if.end
  %28 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21934
  %d317 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %28, i32 0, i32 1, !dbg !21935
  %host_stat = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d317, i32 0, i32 1, !dbg !21936
  %29 = load i8, i8* %host_stat, align 1, !dbg !21936
  %conv18 = zext i8 %29 to i32, !dbg !21934
  switch i32 %conv18, label %sw.default [
    i32 0, label %sw.bb19
  ], !dbg !21937

sw.bb19:                                          ; preds = %sw.bb16
  %30 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21938
  %d320 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %30, i32 0, i32 1, !dbg !21941
  %scsi_stat = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d320, i32 0, i32 2, !dbg !21942
  %31 = load i8, i8* %scsi_stat, align 2, !dbg !21942
  %conv21 = zext i8 %31 to i32, !dbg !21938
  %cmp22 = icmp eq i32 %conv21, 2, !dbg !21943
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !21944

if.then24:                                        ; preds = %sw.bb19
  %32 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21945
  %d325 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %32, i32 0, i32 1, !dbg !21945
  %scsi_stat26 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d325, i32 0, i32 2, !dbg !21945
  %33 = load i8, i8* %scsi_stat26, align 2, !dbg !21945
  %conv27 = zext i8 %33 to i32, !dbg !21945
  %or = or i32 134217728, %conv27, !dbg !21947
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21948
  %result28 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 24, !dbg !21949
  store i32 %or, i32* %result28, align 8, !dbg !21950
  br label %if.end33, !dbg !21951

if.else:                                          ; preds = %sw.bb19
  %35 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21952
  %d329 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %35, i32 0, i32 1, !dbg !21952
  %scsi_stat30 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d329, i32 0, i32 2, !dbg !21952
  %36 = load i8, i8* %scsi_stat30, align 2, !dbg !21952
  %conv31 = zext i8 %36 to i32, !dbg !21952
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21954
  %result32 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 24, !dbg !21955
  store i32 %conv31, i32* %result32, align 8, !dbg !21956
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then24
  br label %sw.epilog, !dbg !21957

sw.default:                                       ; preds = %sw.bb16
  %38 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21958
  %result34 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %38, i32 0, i32 24, !dbg !21959
  store i32 262144, i32* %result34, align 8, !dbg !21960
  br label %sw.epilog, !dbg !21961

sw.epilog:                                        ; preds = %sw.default, %if.end33
  br label %sw.epilog55, !dbg !21962

sw.bb35:                                          ; preds = %if.end
  %39 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21963
  %d336 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %39, i32 0, i32 1, !dbg !21963
  %scsi_msg = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d336, i32 0, i32 3, !dbg !21963
  %40 = load i8, i8* %scsi_msg, align 1, !dbg !21963
  %conv37 = zext i8 %40 to i32, !dbg !21963
  %shl = shl i32 %conv37, 8, !dbg !21963
  %or38 = or i32 327680, %shl, !dbg !21964
  %41 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21965
  %d339 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %41, i32 0, i32 1, !dbg !21965
  %scsi_stat40 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d339, i32 0, i32 2, !dbg !21965
  %42 = load i8, i8* %scsi_stat40, align 2, !dbg !21965
  %conv41 = zext i8 %42 to i32, !dbg !21965
  %or42 = or i32 %or38, %conv41, !dbg !21966
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21967
  %result43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 24, !dbg !21968
  store i32 %or42, i32* %result43, align 8, !dbg !21969
  br label %sw.epilog55, !dbg !21970

sw.default44:                                     ; preds = %if.end
  %44 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21971
  %d345 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %44, i32 0, i32 1, !dbg !21971
  %scsi_msg46 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d345, i32 0, i32 3, !dbg !21971
  %45 = load i8, i8* %scsi_msg46, align 1, !dbg !21971
  %conv47 = zext i8 %45 to i32, !dbg !21971
  %shl48 = shl i32 %conv47, 8, !dbg !21971
  %or49 = or i32 458752, %shl48, !dbg !21972
  %46 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21973
  %d350 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %46, i32 0, i32 1, !dbg !21973
  %scsi_stat51 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d350, i32 0, i32 2, !dbg !21973
  %47 = load i8, i8* %scsi_stat51, align 2, !dbg !21973
  %conv52 = zext i8 %47 to i32, !dbg !21973
  %or53 = or i32 %or49, %conv52, !dbg !21974
  %48 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21975
  %result54 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %48, i32 0, i32 24, !dbg !21976
  store i32 %or53, i32* %result54, align 8, !dbg !21977
  br label %sw.epilog55, !dbg !21978

sw.epilog55:                                      ; preds = %sw.default44, %sw.bb35, %sw.epilog, %if.end15
  %49 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21979
  %init_tidmask = getelementptr inbounds %struct.asc_board, %struct.asc_board* %49, i32 0, i32 7, !dbg !21981
  %50 = load i16, i16* %init_tidmask, align 4, !dbg !21981
  %conv56 = zext i16 %50 to i32, !dbg !21979
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21982
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 1, !dbg !21982
  %52 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !21982
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %52, i32 0, i32 16, !dbg !21982
  %53 = load i32, i32* %id, align 8, !dbg !21982
  %and = and i32 %53, 15, !dbg !21982
  %shl57 = shl i32 1, %and, !dbg !21982
  %and58 = and i32 %conv56, %shl57, !dbg !21983
  %cmp59 = icmp eq i32 %and58, 0, !dbg !21984
  br i1 %cmp59, label %land.lhs.true61, label %if.end82, !dbg !21985

land.lhs.true61:                                  ; preds = %sw.epilog55
  %54 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21986
  %d362 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %54, i32 0, i32 1, !dbg !21987
  %done_stat63 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d362, i32 0, i32 0, !dbg !21988
  %55 = load i8, i8* %done_stat63, align 4, !dbg !21988
  %conv64 = zext i8 %55 to i32, !dbg !21986
  %cmp65 = icmp eq i32 %conv64, 1, !dbg !21989
  br i1 %cmp65, label %land.lhs.true67, label %if.end82, !dbg !21990

land.lhs.true67:                                  ; preds = %land.lhs.true61
  %56 = load %struct.asc_q_done_info*, %struct.asc_q_done_info** %qdonep.addr, align 8, !dbg !21991
  %d368 = getelementptr inbounds %struct.asc_q_done_info, %struct.asc_q_done_info* %56, i32 0, i32 1, !dbg !21992
  %host_stat69 = getelementptr inbounds %struct.asc_scsiq_3, %struct.asc_scsiq_3* %d368, i32 0, i32 1, !dbg !21993
  %57 = load i8, i8* %host_stat69, align 1, !dbg !21993
  %conv70 = zext i8 %57 to i32, !dbg !21991
  %cmp71 = icmp eq i32 %conv70, 0, !dbg !21994
  br i1 %cmp71, label %if.then73, label %if.end82, !dbg !21995

if.then73:                                        ; preds = %land.lhs.true67
  %58 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !21996
  %device74 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %58, i32 0, i32 1, !dbg !21996
  %59 = load %struct.scsi_device*, %struct.scsi_device** %device74, align 8, !dbg !21996
  %id75 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %59, i32 0, i32 16, !dbg !21996
  %60 = load i32, i32* %id75, align 8, !dbg !21996
  %and76 = and i32 %60, 15, !dbg !21996
  %shl77 = shl i32 1, %and76, !dbg !21996
  %61 = load %struct.asc_board*, %struct.asc_board** %boardp, align 8, !dbg !21998
  %init_tidmask78 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %61, i32 0, i32 7, !dbg !21999
  %62 = load i16, i16* %init_tidmask78, align 4, !dbg !22000
  %conv79 = zext i16 %62 to i32, !dbg !22000
  %or80 = or i32 %conv79, %shl77, !dbg !22000
  %conv81 = trunc i32 %or80 to i16, !dbg !22000
  store i16 %conv81, i16* %init_tidmask78, align 4, !dbg !22000
  br label %if.end82, !dbg !22001

if.end82:                                         ; preds = %if.then73, %land.lhs.true67, %land.lhs.true61, %sw.epilog55
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scp, align 8, !dbg !22002
  call void @asc_scsi_done(%struct.scsi_cmnd* %63) #11, !dbg !22003
  br label %return, !dbg !22004

return:                                           ; preds = %if.end82, %if.then
  ret void, !dbg !22004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DvcGetQinfo(i32 %iop_base, i16 zeroext %s_addr, i8* %inbuf, i32 %words) #2 !dbg !22005 {
entry:
  %iop_base.addr = alloca i32, align 4
  %s_addr.addr = alloca i16, align 2
  %inbuf.addr = alloca i8*, align 8
  %words.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %word = alloca i16, align 2
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !22006, metadata !DIExpression()), !dbg !22007
  store i16 %s_addr, i16* %s_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %s_addr.addr, metadata !22008, metadata !DIExpression()), !dbg !22009
  store i8* %inbuf, i8** %inbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inbuf.addr, metadata !22010, metadata !DIExpression()), !dbg !22011
  store i32 %words, i32* %words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %words.addr, metadata !22012, metadata !DIExpression()), !dbg !22013
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22014, metadata !DIExpression()), !dbg !22015
  call void @llvm.dbg.declare(metadata i16* %word, metadata !22016, metadata !DIExpression()), !dbg !22017
  %0 = load i16, i16* %s_addr.addr, align 2, !dbg !22018
  %1 = load i32, i32* %iop_base.addr, align 4, !dbg !22018
  %add = add i32 %1, 10, !dbg !22018
  call void @outw(i16 zeroext %0, i32 %add) #11, !dbg !22018
  store i32 0, i32* %i, align 4, !dbg !22019
  br label %for.cond, !dbg !22021

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !22022
  %3 = load i32, i32* %words.addr, align 4, !dbg !22024
  %mul = mul i32 2, %3, !dbg !22025
  %cmp = icmp slt i32 %2, %mul, !dbg !22026
  br i1 %cmp, label %for.body, label %for.end, !dbg !22027

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !22028
  %cmp1 = icmp eq i32 %4, 10, !dbg !22031
  br i1 %cmp1, label %if.then, label %if.end, !dbg !22032

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !22033

if.end:                                           ; preds = %for.body
  %5 = load i32, i32* %iop_base.addr, align 4, !dbg !22035
  %add2 = add i32 %5, 8, !dbg !22035
  %call = call zeroext i16 @inw(i32 %add2) #11, !dbg !22035
  store i16 %call, i16* %word, align 2, !dbg !22036
  %6 = load i16, i16* %word, align 2, !dbg !22037
  %conv = zext i16 %6 to i32, !dbg !22037
  %and = and i32 %conv, 255, !dbg !22038
  %conv3 = trunc i32 %and to i8, !dbg !22037
  %7 = load i8*, i8** %inbuf.addr, align 8, !dbg !22039
  %8 = load i32, i32* %i, align 4, !dbg !22040
  %idxprom = sext i32 %8 to i64, !dbg !22039
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !22039
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !22041
  %9 = load i16, i16* %word, align 2, !dbg !22042
  %conv4 = zext i16 %9 to i32, !dbg !22042
  %shr = ashr i32 %conv4, 8, !dbg !22043
  %and5 = and i32 %shr, 255, !dbg !22044
  %conv6 = trunc i32 %and5 to i8, !dbg !22045
  %10 = load i8*, i8** %inbuf.addr, align 8, !dbg !22046
  %11 = load i32, i32* %i, align 4, !dbg !22047
  %add7 = add i32 %11, 1, !dbg !22048
  %idxprom8 = sext i32 %add7 to i64, !dbg !22046
  %arrayidx9 = getelementptr i8, i8* %10, i64 %idxprom8, !dbg !22046
  store i8 %conv6, i8* %arrayidx9, align 1, !dbg !22049
  br label %for.inc, !dbg !22050

for.inc:                                          ; preds = %if.end, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !22051
  %add10 = add i32 %12, 2, !dbg !22051
  store i32 %add10, i32* %i, align 4, !dbg !22051
  br label %for.cond, !dbg !22052, !llvm.loop !22053

for.end:                                          ; preds = %for.cond
  ret void, !dbg !22055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !22056 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22060, metadata !DIExpression()), !dbg !22061
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22062, metadata !DIExpression()), !dbg !22063
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !22064, metadata !DIExpression()), !dbg !22065
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !22066, metadata !DIExpression()), !dbg !22067
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22068
  %1 = load i64, i64* %size.addr, align 8, !dbg !22069
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !22070
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !22071
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !22072
  %and = and i32 %4, 8192, !dbg !22073
  %tobool = icmp ne i32 %and, 0, !dbg !22074
  %5 = zext i1 %tobool to i64, !dbg !22074
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !22074
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !22075
  ret i8* %call, !dbg !22076
}

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dma_pool_create(i8*, %struct.device*, i64, i64, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !22077 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22080, metadata !DIExpression()), !dbg !22081
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22082, metadata !DIExpression()), !dbg !22083
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !22084, metadata !DIExpression()), !dbg !22085
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !22086, metadata !DIExpression()), !dbg !22087
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22088
  %1 = load i64, i64* %size.addr, align 8, !dbg !22089
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !22090
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !22091
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !22092
  ret void, !dbg !22093
}

; Function Attrs: noredzone
declare dso_local void @dma_pool_destroy(%struct.dma_pool*) #1

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !22094 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22097, metadata !DIExpression()), !dbg !22098
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !22099, metadata !DIExpression()), !dbg !22100
  %0 = load i8*, i8** %data.addr, align 8, !dbg !22101
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22102
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !22103
  store i8* %0, i8** %driver_data, align 8, !dbg !22104
  ret void, !dbg !22105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_release(%struct.Scsi_Host* %shost) #2 !dbg !22106 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !22107, metadata !DIExpression()), !dbg !22108
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !22109, metadata !DIExpression()), !dbg !22110
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !22111
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !22112
  %1 = bitcast i8* %call to %struct.asc_board*, !dbg !22112
  store %struct.asc_board* %1, %struct.asc_board** %board, align 8, !dbg !22110
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !22113
  call void @scsi_remove_host(%struct.Scsi_Host* %2) #11, !dbg !22114
  %3 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22115
  %irq = getelementptr inbounds %struct.asc_board, %struct.asc_board* %3, i32 0, i32 3, !dbg !22116
  %4 = load i32, i32* %irq, align 4, !dbg !22116
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !22117
  %6 = bitcast %struct.Scsi_Host* %5 to i8*, !dbg !22117
  %call1 = call i8* @free_irq(i32 %4, i8* %6) #11, !dbg !22118
  %7 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22119
  %flags = getelementptr inbounds %struct.asc_board, %struct.asc_board* %7, i32 0, i32 2, !dbg !22119
  %8 = load i32, i32* %flags, align 8, !dbg !22119
  %and = and i32 %8, 4, !dbg !22119
  %cmp = icmp eq i32 %and, 0, !dbg !22119
  br i1 %cmp, label %if.then, label %if.else, !dbg !22121

if.then:                                          ; preds = %entry
  %9 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22122
  %dev = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 0, !dbg !22122
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !22122
  %11 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22122
  %dvc_var = getelementptr inbounds %struct.asc_board, %struct.asc_board* %11, i32 0, i32 4, !dbg !22122
  %asc_dvc_var = bitcast %union.anon.77* %dvc_var to %struct.asc_dvc_var*, !dbg !22122
  %overrun_dma = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %asc_dvc_var, i32 0, i32 12, !dbg !22122
  %12 = load i64, i64* %overrun_dma, align 8, !dbg !22122
  call void @dma_unmap_single_attrs(%struct.device* %10, i64 %12, i64 64, i32 2, i64 0) #11, !dbg !22122
  %13 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22124
  %dvc_var2 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 4, !dbg !22125
  %asc_dvc_var3 = bitcast %union.anon.77* %dvc_var2 to %struct.asc_dvc_var*, !dbg !22126
  %overrun_buf = getelementptr inbounds %struct.asc_dvc_var, %struct.asc_dvc_var* %asc_dvc_var3, i32 0, i32 11, !dbg !22127
  %14 = load i8*, i8** %overrun_buf, align 8, !dbg !22127
  call void @kfree(i8* %14) #11, !dbg !22128
  br label %if.end, !dbg !22129

if.else:                                          ; preds = %entry
  %15 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22130
  %ioremap_addr = getelementptr inbounds %struct.asc_board, %struct.asc_board* %15, i32 0, i32 14, !dbg !22132
  %16 = load i8*, i8** %ioremap_addr, align 8, !dbg !22132
  call void @iounmap(i8* %16) #11, !dbg !22133
  %17 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22134
  call void @advansys_wide_free_mem(%struct.asc_board* %17) #11, !dbg !22135
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !22136
  call void @scsi_host_put(%struct.Scsi_Host* %18) #11, !dbg !22137
  ret i32 0, !dbg !22138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !22139 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !22142, metadata !DIExpression()), !dbg !22143
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !22144
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !22145
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !22146
  ret i8* %call, !dbg !22147
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !22148 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22151, metadata !DIExpression()), !dbg !22152
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22153
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !22154
  %1 = load i8*, i8** %driver_data, align 8, !dbg !22154
  ret i8* %1, !dbg !22155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_eisa_probe(%struct.device* %dev) #2 !dbg !22156 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %ioport = alloca i32, align 4
  %irq = alloca i32, align 4
  %err = alloca i32, align 4
  %edev = alloca %struct.eisa_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.eisa_device*, align 8
  %data = alloca %struct.eisa_scsi_data*, align 8
  %board = alloca %struct.asc_board*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22157, metadata !DIExpression()), !dbg !22158
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22159, metadata !DIExpression()), !dbg !22160
  call void @llvm.dbg.declare(metadata i32* %ioport, metadata !22161, metadata !DIExpression()), !dbg !22162
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !22163, metadata !DIExpression()), !dbg !22164
  store i32 0, i32* %irq, align 4, !dbg !22164
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22165, metadata !DIExpression()), !dbg !22166
  call void @llvm.dbg.declare(metadata %struct.eisa_device** %edev, metadata !22167, metadata !DIExpression()), !dbg !22168
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !22169, metadata !DIExpression()), !dbg !22171
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22171
  %1 = bitcast %struct.device* %0 to i8*, !dbg !22171
  store i8* %1, i8** %__mptr, align 8, !dbg !22171
  br label %do.body, !dbg !22171

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !22172

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !22171
  %add.ptr = getelementptr i8, i8* %2, i64 -296, !dbg !22171
  %3 = bitcast i8* %add.ptr to %struct.eisa_device*, !dbg !22171
  store %struct.eisa_device* %3, %struct.eisa_device** %tmp, align 8, !dbg !22172
  %4 = load %struct.eisa_device*, %struct.eisa_device** %tmp, align 8, !dbg !22171
  store %struct.eisa_device* %4, %struct.eisa_device** %edev, align 8, !dbg !22168
  call void @llvm.dbg.declare(metadata %struct.eisa_scsi_data** %data, metadata !22174, metadata !DIExpression()), !dbg !22180
  store i32 -12, i32* %err, align 4, !dbg !22181
  %call = call i8* @kzalloc(i64 16, i32 3264) #11, !dbg !22182
  %5 = bitcast i8* %call to %struct.eisa_scsi_data*, !dbg !22182
  store %struct.eisa_scsi_data* %5, %struct.eisa_scsi_data** %data, align 8, !dbg !22183
  %6 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22184
  %tobool = icmp ne %struct.eisa_scsi_data* %6, null, !dbg !22184
  br i1 %tobool, label %if.end, label %if.then, !dbg !22186

if.then:                                          ; preds = %do.end
  br label %fail, !dbg !22187

if.end:                                           ; preds = %do.end
  %7 = load %struct.eisa_device*, %struct.eisa_device** %edev, align 8, !dbg !22188
  %base_addr = getelementptr inbounds %struct.eisa_device, %struct.eisa_device* %7, i32 0, i32 3, !dbg !22189
  %8 = load i64, i64* %base_addr, align 8, !dbg !22189
  %add = add i64 %8, 3120, !dbg !22190
  %conv = trunc i64 %add to i32, !dbg !22188
  store i32 %conv, i32* %ioport, align 4, !dbg !22191
  store i32 -19, i32* %err, align 4, !dbg !22192
  store i32 0, i32* %i, align 4, !dbg !22193
  br label %for.cond, !dbg !22195

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !22196
  %cmp = icmp slt i32 %9, 2, !dbg !22198
  br i1 %cmp, label %for.body, label %for.end, !dbg !22199

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !22200, metadata !DIExpression()), !dbg !22202
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !22203, metadata !DIExpression()), !dbg !22204
  %10 = load i32, i32* %ioport, align 4, !dbg !22205
  %conv2 = sext i32 %10 to i64, !dbg !22205
  %call3 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv2, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 0) #11, !dbg !22205
  %tobool4 = icmp ne %struct.resource* %call3, null, !dbg !22205
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !22207

if.then5:                                         ; preds = %for.body
  %11 = load i32, i32* %ioport, align 4, !dbg !22208
  %12 = load i32, i32* %ioport, align 4, !dbg !22210
  %add6 = add i32 %12, 16, !dbg !22211
  %sub = sub i32 %add6, 1, !dbg !22212
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.151, i64 0, i64 0), i32 %11, i32 %sub) #12, !dbg !22213
  br label %for.inc, !dbg !22214

if.end8:                                          ; preds = %for.body
  %13 = load i32, i32* %ioport, align 4, !dbg !22215
  %call9 = call i32 @AscFindSignature(i32 %13) #11, !dbg !22217
  %tobool10 = icmp ne i32 %call9, 0, !dbg !22217
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !22218

if.then11:                                        ; preds = %if.end8
  %14 = load i32, i32* %ioport, align 4, !dbg !22219
  %conv12 = sext i32 %14 to i64, !dbg !22219
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv12, i64 16) #11, !dbg !22219
  br label %for.inc, !dbg !22221

if.end13:                                         ; preds = %if.end8
  %15 = load i32, i32* %ioport, align 4, !dbg !22222
  %add14 = add i32 %15, 4, !dbg !22223
  %call15 = call zeroext i16 @inw(i32 %add14) #11, !dbg !22224
  %16 = load i32, i32* %irq, align 4, !dbg !22225
  %tobool16 = icmp ne i32 %16, 0, !dbg !22225
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !22227

if.then17:                                        ; preds = %if.end13
  %17 = load %struct.eisa_device*, %struct.eisa_device** %edev, align 8, !dbg !22228
  %call18 = call i32 @advansys_eisa_irq_no(%struct.eisa_device* %17) #11, !dbg !22229
  store i32 %call18, i32* %irq, align 4, !dbg !22230
  br label %if.end19, !dbg !22231

if.end19:                                         ; preds = %if.then17, %if.end13
  store i32 -12, i32* %err, align 4, !dbg !22232
  %call20 = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @advansys_template, i32 640) #11, !dbg !22233
  store %struct.Scsi_Host* %call20, %struct.Scsi_Host** %shost, align 8, !dbg !22234
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22235
  %tobool21 = icmp ne %struct.Scsi_Host* %18, null, !dbg !22235
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !22237

if.then22:                                        ; preds = %if.end19
  br label %release_region, !dbg !22238

if.end23:                                         ; preds = %if.end19
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22239
  %call24 = call i8* @shost_priv(%struct.Scsi_Host* %19) #11, !dbg !22240
  %20 = bitcast i8* %call24 to %struct.asc_board*, !dbg !22240
  store %struct.asc_board* %20, %struct.asc_board** %board, align 8, !dbg !22241
  %21 = load i32, i32* %irq, align 4, !dbg !22242
  %22 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22243
  %irq25 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %22, i32 0, i32 3, !dbg !22244
  store i32 %21, i32* %irq25, align 4, !dbg !22245
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22246
  %24 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22247
  %dev26 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %24, i32 0, i32 0, !dbg !22248
  store %struct.device* %23, %struct.device** %dev26, align 8, !dbg !22249
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22250
  %26 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22251
  %shost27 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %26, i32 0, i32 1, !dbg !22252
  store %struct.Scsi_Host* %25, %struct.Scsi_Host** %shost27, align 8, !dbg !22253
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22254
  %28 = load i32, i32* %ioport, align 4, !dbg !22255
  %call28 = call i32 @advansys_board_found(%struct.Scsi_Host* %27, i32 %28, i32 2) #11, !dbg !22256
  store i32 %call28, i32* %err, align 4, !dbg !22257
  %29 = load i32, i32* %err, align 4, !dbg !22258
  %tobool29 = icmp ne i32 %29, 0, !dbg !22258
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !22260

if.then30:                                        ; preds = %if.end23
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22261
  %31 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22263
  %host = getelementptr inbounds %struct.eisa_scsi_data, %struct.eisa_scsi_data* %31, i32 0, i32 0, !dbg !22264
  %32 = load i32, i32* %i, align 4, !dbg !22265
  %idxprom = sext i32 %32 to i64, !dbg !22263
  %arrayidx = getelementptr [2 x %struct.Scsi_Host*], [2 x %struct.Scsi_Host*]* %host, i64 0, i64 %idxprom, !dbg !22263
  store %struct.Scsi_Host* %30, %struct.Scsi_Host** %arrayidx, align 8, !dbg !22266
  br label %for.inc, !dbg !22267

if.end31:                                         ; preds = %if.end23
  %33 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22268
  call void @scsi_host_put(%struct.Scsi_Host* %33) #11, !dbg !22269
  br label %release_region, !dbg !22269

release_region:                                   ; preds = %if.end31, %if.then22
  call void @llvm.dbg.label(metadata !22270), !dbg !22271
  %34 = load i32, i32* %ioport, align 4, !dbg !22272
  %conv32 = sext i32 %34 to i64, !dbg !22272
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv32, i64 16) #11, !dbg !22272
  br label %for.end, !dbg !22273

for.inc:                                          ; preds = %if.then30, %if.then11, %if.then5
  %35 = load i32, i32* %i, align 4, !dbg !22274
  %inc = add i32 %35, 1, !dbg !22274
  store i32 %inc, i32* %i, align 4, !dbg !22274
  %36 = load i32, i32* %ioport, align 4, !dbg !22275
  %add33 = add i32 %36, 32, !dbg !22275
  store i32 %add33, i32* %ioport, align 4, !dbg !22275
  br label %for.cond, !dbg !22276, !llvm.loop !22277

for.end:                                          ; preds = %release_region, %for.cond
  %37 = load i32, i32* %err, align 4, !dbg !22279
  %tobool34 = icmp ne i32 %37, 0, !dbg !22279
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !22281

if.then35:                                        ; preds = %for.end
  br label %free_data, !dbg !22282

if.end36:                                         ; preds = %for.end
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22283
  %39 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22284
  %40 = bitcast %struct.eisa_scsi_data* %39 to i8*, !dbg !22284
  call void @dev_set_drvdata(%struct.device* %38, i8* %40) #11, !dbg !22285
  store i32 0, i32* %retval, align 4, !dbg !22286
  br label %return, !dbg !22286

free_data:                                        ; preds = %if.then35
  call void @llvm.dbg.label(metadata !22287), !dbg !22288
  %41 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22289
  %host37 = getelementptr inbounds %struct.eisa_scsi_data, %struct.eisa_scsi_data* %41, i32 0, i32 0, !dbg !22290
  %arrayidx38 = getelementptr [2 x %struct.Scsi_Host*], [2 x %struct.Scsi_Host*]* %host37, i64 0, i64 0, !dbg !22289
  %42 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx38, align 8, !dbg !22289
  %43 = bitcast %struct.Scsi_Host* %42 to i8*, !dbg !22289
  call void @kfree(i8* %43) #11, !dbg !22291
  %44 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22292
  %host39 = getelementptr inbounds %struct.eisa_scsi_data, %struct.eisa_scsi_data* %44, i32 0, i32 0, !dbg !22293
  %arrayidx40 = getelementptr [2 x %struct.Scsi_Host*], [2 x %struct.Scsi_Host*]* %host39, i64 0, i64 1, !dbg !22292
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx40, align 8, !dbg !22292
  %46 = bitcast %struct.Scsi_Host* %45 to i8*, !dbg !22292
  call void @kfree(i8* %46) #11, !dbg !22294
  %47 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22295
  %48 = bitcast %struct.eisa_scsi_data* %47 to i8*, !dbg !22295
  call void @kfree(i8* %48) #11, !dbg !22296
  br label %fail, !dbg !22296

fail:                                             ; preds = %free_data, %if.then
  call void @llvm.dbg.label(metadata !22297), !dbg !22298
  %49 = load i32, i32* %err, align 4, !dbg !22299
  store i32 %49, i32* %retval, align 4, !dbg !22300
  br label %return, !dbg !22300

return:                                           ; preds = %fail, %if.end36
  %50 = load i32, i32* %retval, align 4, !dbg !22301
  ret i32 %50, !dbg !22301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_eisa_remove(%struct.device* %dev) #2 !dbg !22302 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %data = alloca %struct.eisa_scsi_data*, align 8
  %ioport = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22303, metadata !DIExpression()), !dbg !22304
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22305, metadata !DIExpression()), !dbg !22306
  call void @llvm.dbg.declare(metadata %struct.eisa_scsi_data** %data, metadata !22307, metadata !DIExpression()), !dbg !22308
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22309
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !22310
  %1 = bitcast i8* %call to %struct.eisa_scsi_data*, !dbg !22310
  store %struct.eisa_scsi_data* %1, %struct.eisa_scsi_data** %data, align 8, !dbg !22308
  store i32 0, i32* %i, align 4, !dbg !22311
  br label %for.cond, !dbg !22313

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !22314
  %cmp = icmp slt i32 %2, 2, !dbg !22316
  br i1 %cmp, label %for.body, label %for.end, !dbg !22317

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ioport, metadata !22318, metadata !DIExpression()), !dbg !22320
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !22321, metadata !DIExpression()), !dbg !22322
  %3 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22323
  %host = getelementptr inbounds %struct.eisa_scsi_data, %struct.eisa_scsi_data* %3, i32 0, i32 0, !dbg !22324
  %4 = load i32, i32* %i, align 4, !dbg !22325
  %idxprom = sext i32 %4 to i64, !dbg !22323
  %arrayidx = getelementptr [2 x %struct.Scsi_Host*], [2 x %struct.Scsi_Host*]* %host, i64 0, i64 %idxprom, !dbg !22323
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %arrayidx, align 8, !dbg !22323
  store %struct.Scsi_Host* %5, %struct.Scsi_Host** %shost, align 8, !dbg !22322
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22326
  %tobool = icmp ne %struct.Scsi_Host* %6, null, !dbg !22326
  br i1 %tobool, label %if.end, label %if.then, !dbg !22328

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !22329

if.end:                                           ; preds = %for.body
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22330
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 42, !dbg !22331
  %8 = load i64, i64* %io_port, align 8, !dbg !22331
  %conv = trunc i64 %8 to i32, !dbg !22330
  store i32 %conv, i32* %ioport, align 4, !dbg !22332
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22333
  %call1 = call i32 @advansys_release(%struct.Scsi_Host* %9) #11, !dbg !22334
  %10 = load i32, i32* %ioport, align 4, !dbg !22335
  %conv2 = sext i32 %10 to i64, !dbg !22335
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv2, i64 16) #11, !dbg !22335
  br label %for.inc, !dbg !22336

for.inc:                                          ; preds = %if.end, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !22337
  %inc = add i32 %11, 1, !dbg !22337
  store i32 %inc, i32* %i, align 4, !dbg !22337
  br label %for.cond, !dbg !22338, !llvm.loop !22339

for.end:                                          ; preds = %for.cond
  %12 = load %struct.eisa_scsi_data*, %struct.eisa_scsi_data** %data, align 8, !dbg !22341
  %13 = bitcast %struct.eisa_scsi_data* %12 to i8*, !dbg !22341
  call void @kfree(i8* %13) #11, !dbg !22342
  ret i32 0, !dbg !22343
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_eisa_irq_no(%struct.eisa_device* %edev) #2 !dbg !22344 {
entry:
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.eisa_device*, align 8
  %cfg_lsw = alloca i16, align 2
  %chip_irq = alloca i32, align 4
  store %struct.eisa_device* %edev, %struct.eisa_device** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.eisa_device** %edev.addr, metadata !22347, metadata !DIExpression()), !dbg !22348
  call void @llvm.dbg.declare(metadata i16* %cfg_lsw, metadata !22349, metadata !DIExpression()), !dbg !22350
  %0 = load %struct.eisa_device*, %struct.eisa_device** %edev.addr, align 8, !dbg !22351
  %base_addr = getelementptr inbounds %struct.eisa_device, %struct.eisa_device* %0, i32 0, i32 3, !dbg !22352
  %1 = load i64, i64* %base_addr, align 8, !dbg !22352
  %add = add i64 %1, 3206, !dbg !22353
  %conv = trunc i64 %add to i32, !dbg !22351
  %call = call zeroext i16 @inw(i32 %conv) #11, !dbg !22354
  store i16 %call, i16* %cfg_lsw, align 2, !dbg !22350
  call void @llvm.dbg.declare(metadata i32* %chip_irq, metadata !22355, metadata !DIExpression()), !dbg !22356
  %2 = load i16, i16* %cfg_lsw, align 2, !dbg !22357
  %conv1 = zext i16 %2 to i32, !dbg !22357
  %shr = ashr i32 %conv1, 8, !dbg !22358
  %and = and i32 %shr, 7, !dbg !22359
  %add2 = add i32 %and, 10, !dbg !22360
  store i32 %add2, i32* %chip_irq, align 4, !dbg !22356
  %3 = load i32, i32* %chip_irq, align 4, !dbg !22361
  %cmp = icmp eq i32 %3, 13, !dbg !22363
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !22364

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %chip_irq, align 4, !dbg !22365
  %cmp4 = icmp ugt i32 %4, 15, !dbg !22366
  br i1 %cmp4, label %if.then, label %if.end, !dbg !22367

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !22368
  br label %return, !dbg !22368

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %chip_irq, align 4, !dbg !22369
  store i32 %5, i32* %retval, align 4, !dbg !22370
  br label %return, !dbg !22370

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !22371
  ret i32 %6, !dbg !22371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_vlb_probe(%struct.device* %dev, i32 %id) #2 !dbg !22372 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %iop_base = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22373, metadata !DIExpression()), !dbg !22374
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !22375, metadata !DIExpression()), !dbg !22376
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22377, metadata !DIExpression()), !dbg !22378
  store i32 -19, i32* %err, align 4, !dbg !22378
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !22379, metadata !DIExpression()), !dbg !22380
  %0 = load i32, i32* %id.addr, align 4, !dbg !22381
  %idxprom = zext i32 %0 to i64, !dbg !22382
  %arrayidx = getelementptr [11 x i32], [11 x i32]* @_asc_def_iop_base, i64 0, i64 %idxprom, !dbg !22382
  %1 = load i32, i32* %arrayidx, align 4, !dbg !22382
  store i32 %1, i32* %iop_base, align 4, !dbg !22380
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !22383, metadata !DIExpression()), !dbg !22384
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !22385, metadata !DIExpression()), !dbg !22386
  %2 = load i32, i32* %iop_base, align 4, !dbg !22387
  %conv = zext i32 %2 to i64, !dbg !22387
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 0) #11, !dbg !22387
  %tobool = icmp ne %struct.resource* %call, null, !dbg !22387
  br i1 %tobool, label %if.end, label %if.then, !dbg !22389

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !22390
  br label %return, !dbg !22390

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %iop_base, align 4, !dbg !22392
  %call1 = call i32 @AscFindSignature(i32 %3) #11, !dbg !22394
  %tobool2 = icmp ne i32 %call1, 0, !dbg !22394
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !22395

if.then3:                                         ; preds = %if.end
  br label %release_region, !dbg !22396

if.end4:                                          ; preds = %if.end
  %4 = load i32, i32* %iop_base, align 4, !dbg !22397
  %call5 = call zeroext i8 @AscGetChipVersion(i32 %4, i16 zeroext 64) #11, !dbg !22399
  %conv6 = zext i8 %call5 to i32, !dbg !22399
  %cmp = icmp sgt i32 %conv6, 7, !dbg !22400
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !22401

if.then8:                                         ; preds = %if.end4
  br label %release_region, !dbg !22402

if.end9:                                          ; preds = %if.end4
  store i32 -12, i32* %err, align 4, !dbg !22403
  %call10 = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @advansys_template, i32 640) #11, !dbg !22404
  store %struct.Scsi_Host* %call10, %struct.Scsi_Host** %shost, align 8, !dbg !22405
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22406
  %tobool11 = icmp ne %struct.Scsi_Host* %5, null, !dbg !22406
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !22408

if.then12:                                        ; preds = %if.end9
  br label %release_region, !dbg !22409

if.end13:                                         ; preds = %if.end9
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22410
  %call14 = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !22411
  %7 = bitcast i8* %call14 to %struct.asc_board*, !dbg !22411
  store %struct.asc_board* %7, %struct.asc_board** %board, align 8, !dbg !22412
  %8 = load i32, i32* %iop_base, align 4, !dbg !22413
  %call15 = call i32 @advansys_vlb_irq_no(i32 %8) #11, !dbg !22414
  %9 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22415
  %irq = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 3, !dbg !22416
  store i32 %call15, i32* %irq, align 4, !dbg !22417
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22418
  %11 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22419
  %dev16 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %11, i32 0, i32 0, !dbg !22420
  store %struct.device* %10, %struct.device** %dev16, align 8, !dbg !22421
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22422
  %13 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22423
  %shost17 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 1, !dbg !22424
  store %struct.Scsi_Host* %12, %struct.Scsi_Host** %shost17, align 8, !dbg !22425
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22426
  %15 = load i32, i32* %iop_base, align 4, !dbg !22427
  %call18 = call i32 @advansys_board_found(%struct.Scsi_Host* %14, i32 %15, i32 64) #11, !dbg !22428
  store i32 %call18, i32* %err, align 4, !dbg !22429
  %16 = load i32, i32* %err, align 4, !dbg !22430
  %tobool19 = icmp ne i32 %16, 0, !dbg !22430
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !22432

if.then20:                                        ; preds = %if.end13
  br label %free_host, !dbg !22433

if.end21:                                         ; preds = %if.end13
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22434
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22435
  %19 = bitcast %struct.Scsi_Host* %18 to i8*, !dbg !22435
  call void @dev_set_drvdata(%struct.device* %17, i8* %19) #11, !dbg !22436
  store i32 0, i32* %retval, align 4, !dbg !22437
  br label %return, !dbg !22437

free_host:                                        ; preds = %if.then20
  call void @llvm.dbg.label(metadata !22438), !dbg !22439
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22440
  call void @scsi_host_put(%struct.Scsi_Host* %20) #11, !dbg !22441
  br label %release_region, !dbg !22441

release_region:                                   ; preds = %free_host, %if.then12, %if.then8, %if.then3
  call void @llvm.dbg.label(metadata !22442), !dbg !22443
  %21 = load i32, i32* %iop_base, align 4, !dbg !22444
  %conv22 = zext i32 %21 to i64, !dbg !22444
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv22, i64 16) #11, !dbg !22444
  store i32 -19, i32* %retval, align 4, !dbg !22445
  br label %return, !dbg !22445

return:                                           ; preds = %release_region, %if.end21, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !22446
  ret i32 %22, !dbg !22446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_isa_remove(%struct.device* %dev, i32 %id) #2 !dbg !22447 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i32, align 4
  %ioport = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22448, metadata !DIExpression()), !dbg !22449
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !22450, metadata !DIExpression()), !dbg !22451
  call void @llvm.dbg.declare(metadata i32* %ioport, metadata !22452, metadata !DIExpression()), !dbg !22453
  %0 = load i32, i32* %id.addr, align 4, !dbg !22454
  %idxprom = zext i32 %0 to i64, !dbg !22455
  %arrayidx = getelementptr [11 x i32], [11 x i32]* @_asc_def_iop_base, i64 0, i64 %idxprom, !dbg !22455
  %1 = load i32, i32* %arrayidx, align 4, !dbg !22455
  store i32 %1, i32* %ioport, align 4, !dbg !22453
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22456
  %call = call i8* @dev_get_drvdata(%struct.device* %2) #11, !dbg !22457
  %3 = bitcast i8* %call to %struct.Scsi_Host*, !dbg !22457
  %call1 = call i32 @advansys_release(%struct.Scsi_Host* %3) #11, !dbg !22458
  %4 = load i32, i32* %ioport, align 4, !dbg !22459
  %conv = sext i32 %4 to i64, !dbg !22459
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv, i64 16) #11, !dbg !22459
  ret i32 0, !dbg !22460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_vlb_irq_no(i32 %iop_base) #2 !dbg !22461 {
entry:
  %retval = alloca i32, align 4
  %iop_base.addr = alloca i32, align 4
  %cfg_lsw = alloca i16, align 2
  %chip_irq = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !22464, metadata !DIExpression()), !dbg !22465
  call void @llvm.dbg.declare(metadata i16* %cfg_lsw, metadata !22466, metadata !DIExpression()), !dbg !22467
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !22468
  %add = add i32 %0, 2, !dbg !22468
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !22468
  store i16 %call, i16* %cfg_lsw, align 2, !dbg !22467
  call void @llvm.dbg.declare(metadata i32* %chip_irq, metadata !22469, metadata !DIExpression()), !dbg !22470
  %1 = load i16, i16* %cfg_lsw, align 2, !dbg !22471
  %conv = zext i16 %1 to i32, !dbg !22471
  %shr = ashr i32 %conv, 2, !dbg !22472
  %and = and i32 %shr, 7, !dbg !22473
  %add1 = add i32 %and, 9, !dbg !22474
  store i32 %add1, i32* %chip_irq, align 4, !dbg !22470
  %2 = load i32, i32* %chip_irq, align 4, !dbg !22475
  %cmp = icmp ult i32 %2, 10, !dbg !22477
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !22478

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %chip_irq, align 4, !dbg !22479
  %cmp3 = icmp eq i32 %3, 13, !dbg !22480
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !22481

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %4 = load i32, i32* %chip_irq, align 4, !dbg !22482
  %cmp6 = icmp ugt i32 %4, 15, !dbg !22483
  br i1 %cmp6, label %if.then, label %if.end, !dbg !22484

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !22485
  br label %return, !dbg !22485

if.end:                                           ; preds = %lor.lhs.false5
  %5 = load i32, i32* %chip_irq, align 4, !dbg !22486
  store i32 %5, i32* %retval, align 4, !dbg !22487
  br label %return, !dbg !22487

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !22488
  ret i32 %6, !dbg !22488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_isa_probe(%struct.device* %dev, i32 %id) #2 !dbg !22489 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %iop_base = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %board = alloca %struct.asc_board*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22490, metadata !DIExpression()), !dbg !22491
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !22492, metadata !DIExpression()), !dbg !22493
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22494, metadata !DIExpression()), !dbg !22495
  store i32 -19, i32* %err, align 4, !dbg !22495
  call void @llvm.dbg.declare(metadata i32* %iop_base, metadata !22496, metadata !DIExpression()), !dbg !22497
  %0 = load i32, i32* %id.addr, align 4, !dbg !22498
  %idxprom = zext i32 %0 to i64, !dbg !22499
  %arrayidx = getelementptr [11 x i32], [11 x i32]* @_asc_def_iop_base, i64 0, i64 %idxprom, !dbg !22499
  %1 = load i32, i32* %arrayidx, align 4, !dbg !22499
  store i32 %1, i32* %iop_base, align 4, !dbg !22497
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !22500, metadata !DIExpression()), !dbg !22501
  call void @llvm.dbg.declare(metadata %struct.asc_board** %board, metadata !22502, metadata !DIExpression()), !dbg !22503
  %2 = load i32, i32* %iop_base, align 4, !dbg !22504
  %conv = zext i32 %2 to i64, !dbg !22504
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 0) #11, !dbg !22504
  %tobool = icmp ne %struct.resource* %call, null, !dbg !22504
  br i1 %tobool, label %if.end, label %if.then, !dbg !22506

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !22507
  br label %return, !dbg !22507

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %iop_base, align 4, !dbg !22509
  %call1 = call i32 @AscFindSignature(i32 %3) #11, !dbg !22511
  %tobool2 = icmp ne i32 %call1, 0, !dbg !22511
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !22512

if.then3:                                         ; preds = %if.end
  br label %release_region, !dbg !22513

if.end4:                                          ; preds = %if.end
  %4 = load i32, i32* %iop_base, align 4, !dbg !22514
  %call5 = call zeroext i8 @AscGetChipVersion(i32 %4, i16 zeroext 1) #11, !dbg !22516
  %conv6 = zext i8 %call5 to i32, !dbg !22516
  %and = and i32 %conv6, 48, !dbg !22517
  %tobool7 = icmp ne i32 %and, 0, !dbg !22517
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !22518

if.then8:                                         ; preds = %if.end4
  br label %release_region, !dbg !22519

if.end9:                                          ; preds = %if.end4
  store i32 -12, i32* %err, align 4, !dbg !22520
  %call10 = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @advansys_template, i32 640) #11, !dbg !22521
  store %struct.Scsi_Host* %call10, %struct.Scsi_Host** %shost, align 8, !dbg !22522
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22523
  %tobool11 = icmp ne %struct.Scsi_Host* %5, null, !dbg !22523
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !22525

if.then12:                                        ; preds = %if.end9
  br label %release_region, !dbg !22526

if.end13:                                         ; preds = %if.end9
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22527
  %call14 = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !22528
  %7 = bitcast i8* %call14 to %struct.asc_board*, !dbg !22528
  store %struct.asc_board* %7, %struct.asc_board** %board, align 8, !dbg !22529
  %8 = load i32, i32* %iop_base, align 4, !dbg !22530
  %call15 = call i32 @advansys_isa_irq_no(i32 %8) #11, !dbg !22531
  %9 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22532
  %irq = getelementptr inbounds %struct.asc_board, %struct.asc_board* %9, i32 0, i32 3, !dbg !22533
  store i32 %call15, i32* %irq, align 4, !dbg !22534
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22535
  %11 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22536
  %dev16 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %11, i32 0, i32 0, !dbg !22537
  store %struct.device* %10, %struct.device** %dev16, align 8, !dbg !22538
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22539
  %13 = load %struct.asc_board*, %struct.asc_board** %board, align 8, !dbg !22540
  %shost17 = getelementptr inbounds %struct.asc_board, %struct.asc_board* %13, i32 0, i32 1, !dbg !22541
  store %struct.Scsi_Host* %12, %struct.Scsi_Host** %shost17, align 8, !dbg !22542
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22543
  %15 = load i32, i32* %iop_base, align 4, !dbg !22544
  %call18 = call i32 @advansys_board_found(%struct.Scsi_Host* %14, i32 %15, i32 1) #11, !dbg !22545
  store i32 %call18, i32* %err, align 4, !dbg !22546
  %16 = load i32, i32* %err, align 4, !dbg !22547
  %tobool19 = icmp ne i32 %16, 0, !dbg !22547
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !22549

if.then20:                                        ; preds = %if.end13
  br label %free_host, !dbg !22550

if.end21:                                         ; preds = %if.end13
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22551
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22552
  %19 = bitcast %struct.Scsi_Host* %18 to i8*, !dbg !22552
  call void @dev_set_drvdata(%struct.device* %17, i8* %19) #11, !dbg !22553
  store i32 0, i32* %retval, align 4, !dbg !22554
  br label %return, !dbg !22554

free_host:                                        ; preds = %if.then20
  call void @llvm.dbg.label(metadata !22555), !dbg !22556
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !22557
  call void @scsi_host_put(%struct.Scsi_Host* %20) #11, !dbg !22558
  br label %release_region, !dbg !22558

release_region:                                   ; preds = %free_host, %if.then12, %if.then8, %if.then3
  call void @llvm.dbg.label(metadata !22559), !dbg !22560
  %21 = load i32, i32* %iop_base, align 4, !dbg !22561
  %conv22 = zext i32 %21 to i64, !dbg !22561
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv22, i64 16) #11, !dbg !22561
  %22 = load i32, i32* %err, align 4, !dbg !22562
  store i32 %22, i32* %retval, align 4, !dbg !22563
  br label %return, !dbg !22563

return:                                           ; preds = %release_region, %if.end21, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !22564
  ret i32 %23, !dbg !22564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @advansys_isa_irq_no(i32 %iop_base) #2 !dbg !22565 {
entry:
  %iop_base.addr = alloca i32, align 4
  %cfg_lsw = alloca i16, align 2
  %chip_irq = alloca i32, align 4
  store i32 %iop_base, i32* %iop_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iop_base.addr, metadata !22566, metadata !DIExpression()), !dbg !22567
  call void @llvm.dbg.declare(metadata i16* %cfg_lsw, metadata !22568, metadata !DIExpression()), !dbg !22569
  %0 = load i32, i32* %iop_base.addr, align 4, !dbg !22570
  %add = add i32 %0, 2, !dbg !22570
  %call = call zeroext i16 @inw(i32 %add) #11, !dbg !22570
  store i16 %call, i16* %cfg_lsw, align 2, !dbg !22569
  call void @llvm.dbg.declare(metadata i32* %chip_irq, metadata !22571, metadata !DIExpression()), !dbg !22572
  %1 = load i16, i16* %cfg_lsw, align 2, !dbg !22573
  %conv = zext i16 %1 to i32, !dbg !22573
  %shr = ashr i32 %conv, 2, !dbg !22574
  %and = and i32 %shr, 3, !dbg !22575
  %add1 = add i32 %and, 10, !dbg !22576
  store i32 %add1, i32* %chip_irq, align 4, !dbg !22572
  %2 = load i32, i32* %chip_irq, align 4, !dbg !22577
  %cmp = icmp eq i32 %2, 13, !dbg !22579
  br i1 %cmp, label %if.then, label %if.end, !dbg !22580

if.then:                                          ; preds = %entry
  store i32 15, i32* %chip_irq, align 4, !dbg !22581
  br label %if.end, !dbg !22582

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %chip_irq, align 4, !dbg !22583
  ret i32 %3, !dbg !22584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @isa_register_driver(%struct.isa_driver* %d, i32 %i) #2 !dbg !22585 {
entry:
  %d.addr = alloca %struct.isa_driver*, align 8
  %i.addr = alloca i32, align 4
  store %struct.isa_driver* %d, %struct.isa_driver** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isa_driver** %d.addr, metadata !22588, metadata !DIExpression()), !dbg !22589
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !22590, metadata !DIExpression()), !dbg !22591
  ret i32 -19, !dbg !22592
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @eisa_driver_register(%struct.eisa_driver* %edrv) #2 !dbg !22593 {
entry:
  %edrv.addr = alloca %struct.eisa_driver*, align 8
  store %struct.eisa_driver* %edrv, %struct.eisa_driver** %edrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.eisa_driver** %edrv.addr, metadata !22596, metadata !DIExpression()), !dbg !22597
  ret i32 0, !dbg !22598
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6131}
!llvm.module.flags = !{!6132, !6133, !6134, !6135}
!llvm.ident = !{!6136}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "advansys_pci_driver", scope: !2, file: !3, line: 11796, type: !5820, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !186, globals: !6027, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/advansys.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !42, !48, !55, !59, !66, !71, !78, !84, !93, !101, !107, !113, !120, !127, !135, !146, !153, !163, !168, !175, !180}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !31, line: 49, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41}
!33 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !43, line: 118, baseType: !7, size: 32, elements: !44)
!43 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!44 = !{!45, !46, !47}
!45 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !49, line: 19, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53, !54}
!51 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !43, line: 293, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !60, line: 502, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !43, line: 315, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !72, line: 59, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !79, line: 54, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!80 = !{!81, !82, !83}
!81 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !85, line: 296, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92}
!87 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !94, line: 9, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100}
!96 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !102, line: 26, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !108, line: 44, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !114, line: 343, baseType: !7, size: 32, elements: !115)
!114 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!115 = !{!116, !117, !118, !119}
!116 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !60, line: 524, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 10, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167}
!166 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !169, line: 305, baseType: !7, size: 32, elements: !170)
!169 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!170 = !{!171, !172, !173, !174}
!171 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !176, line: 460, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!177 = !{!178, !179}
!178 = !DIEnumerator(name: "BLK_MQ_UNIQUE_TAG_BITS", value: 16, isUnsigned: true)
!179 = !DIEnumerator(name: "BLK_MQ_UNIQUE_TAG_MASK", value: 65535, isUnsigned: true)
!180 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !181, line: 11, baseType: !7, size: 32, elements: !182)
!181 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!182 = !{!183, !184, !185}
!183 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!186 = !{!187, !189, !190, !5245, !783, !5282, !404, !977, !760, !334, !5240, !5229, !7, !5252, !245, !5704, !5706, !303, !5708, !5710, !5986, !900, !5630, !5987, !261, !5989, !296, !5267, !5990, !5991, !402, !6011, !620}
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "ulong", file: !188, line: 88, baseType: !189)
!188 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!189 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_board", file: !3, line: 2246, size: 5120, elements: !192)
!192 = !{!193, !4795, !5228, !5230, !5231, !5404, !5409, !5410, !5411, !5413, !5414, !5415, !5607, !5626, !5627, !5628, !5629, !5694, !5695, !5696, !5700, !5701, !5702, !5703}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !191, file: !3, line: 2247, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !114, line: 461, size: 5568, elements: !196)
!196 = !{!197, !4360, !4361, !4364, !4365, !4415, !4506, !4507, !4508, !4509, !4510, !4519, !4613, !4626, !4630, !4631, !4635, !4637, !4638, !4639, !4643, !4649, !4650, !4653, !4657, !4747, !4748, !4749, !4750, !4751, !4783, !4784, !4785, !4788, !4791, !4792, !4793, !4794}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !195, file: !114, line: 462, baseType: !198, size: 512)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !199, line: 64, size: 512, elements: !200)
!199 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !205, !211, !213, !274, !4227, !4354, !4355, !4356, !4357, !4358, !4359}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !198, file: !199, line: 65, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !198, file: !199, line: 66, baseType: !206, size: 128, offset: 64)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !188, line: 178, size: 128, elements: !207)
!207 = !{!208, !210}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !206, file: !188, line: 179, baseType: !209, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !206, file: !188, line: 179, baseType: !209, size: 64, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !198, file: !199, line: 67, baseType: !212, size: 64, offset: 192)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !198, file: !199, line: 68, baseType: !214, size: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !199, line: 192, size: 704, elements: !216)
!216 = !{!217, !218, !234, !235}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !215, file: !199, line: 193, baseType: !206, size: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !215, file: !199, line: 194, baseType: !219, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !220, line: 83, baseType: !221)
!220 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !220, line: 71, elements: !222)
!222 = !{!223}
!223 = !DIDerivedType(tag: DW_TAG_member, scope: !221, file: !220, line: 72, baseType: !224)
!224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !221, file: !220, line: 72, elements: !225)
!225 = !{!226}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !224, file: !220, line: 73, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !220, line: 20, elements: !228)
!228 = !{!229}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !227, file: !220, line: 21, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !231, line: 25, baseType: !232)
!231 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !231, line: 25, elements: !233)
!233 = !{}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !215, file: !199, line: 195, baseType: !198, size: 512, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !215, file: !199, line: 196, baseType: !236, size: 64, offset: 640)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !199, line: 156, size: 192, elements: !239)
!239 = !{!240, !246, !251}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !238, file: !199, line: 157, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DISubroutineType(types: !244)
!244 = !{!245, !214, !212}
!245 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !238, file: !199, line: 158, baseType: !247, size: 64, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{!202, !214, !212}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !238, file: !199, line: 159, baseType: !252, size: 64, offset: 128)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{!245, !214, !212, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !199, line: 148, size: 20736, elements: !258)
!258 = !{!259, !264, !268, !269, !273}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !257, file: !199, line: 149, baseType: !260, size: 192)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 192, elements: !262)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!262 = !{!263}
!263 = !DISubrange(count: 3)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !257, file: !199, line: 150, baseType: !265, size: 4096, offset: 192)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 4096, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !257, file: !199, line: 151, baseType: !245, size: 32, offset: 4288)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !257, file: !199, line: 152, baseType: !270, size: 16384, offset: 4320)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 16384, elements: !271)
!271 = !{!272}
!272 = !DISubrange(count: 2048)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !257, file: !199, line: 153, baseType: !245, size: 32, offset: 20704)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !198, file: !199, line: 69, baseType: !275, size: 64, offset: 320)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !199, line: 138, size: 448, elements: !277)
!277 = !{!278, !282, !311, !313, !4189, !4217, !4221}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !276, file: !199, line: 139, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DISubroutineType(types: !281)
!281 = !{null, !212}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !276, file: !199, line: 140, baseType: !283, size: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !286, line: 230, size: 128, elements: !287)
!286 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!287 = !{!288, !304}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !285, file: !286, line: 231, baseType: !289, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DISubroutineType(types: !291)
!291 = !{!292, !212, !297, !261}
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !188, line: 60, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !294, line: 73, baseType: !295)
!294 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !294, line: 15, baseType: !296)
!296 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !286, line: 30, size: 128, elements: !299)
!299 = !{!300, !301}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !298, file: !286, line: 31, baseType: !202, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !298, file: !286, line: 32, baseType: !302, size: 16, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !188, line: 19, baseType: !303)
!303 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !285, file: !286, line: 232, baseType: !305, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DISubroutineType(types: !307)
!307 = !{!292, !212, !297, !202, !308}
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !188, line: 55, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !294, line: 72, baseType: !310)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !294, line: 16, baseType: !189)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !276, file: !199, line: 141, baseType: !312, size: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !276, file: !199, line: 142, baseType: !314, size: 64, offset: 192)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !286, line: 84, size: 320, elements: !318)
!318 = !{!319, !320, !324, !4186, !4187}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !317, file: !286, line: 85, baseType: !202, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !317, file: !286, line: 86, baseType: !321, size: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DISubroutineType(types: !323)
!323 = !{!302, !212, !297, !245}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !317, file: !286, line: 88, baseType: !325, size: 64, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DISubroutineType(types: !327)
!327 = !{!302, !212, !328, !245}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !286, line: 168, size: 448, elements: !330)
!330 = !{!331, !332, !333, !335, !4181, !4182}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !329, file: !286, line: 169, baseType: !298, size: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !329, file: !286, line: 170, baseType: !308, size: 64, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !329, file: !286, line: 171, baseType: !334, size: 64, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !329, file: !286, line: 172, baseType: !336, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!292, !339, !212, !328, !261, !518, !308}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !85, line: 916, size: 1856, align: 32, elements: !341)
!341 = !{!342, !360, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4164, !4165, !4174, !4175, !4176, !4177, !4178, !4179, !4180}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !340, file: !85, line: 920, baseType: !343, size: 128)
!343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !85, line: 917, size: 128, elements: !344)
!344 = !{!345, !351}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !343, file: !85, line: 918, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !347, line: 58, size: 64, elements: !348)
!347 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !346, file: !347, line: 59, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !343, file: !85, line: 919, baseType: !352, size: 128, align: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !188, line: 216, size: 128, align: 64, elements: !353)
!353 = !{!354, !356}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !352, file: !188, line: 217, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !352, file: !188, line: 218, baseType: !357, size: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !355}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !340, file: !85, line: 921, baseType: !361, size: 128, offset: 128)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !362, line: 8, size: 128, elements: !363)
!362 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364, !368}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !361, file: !362, line: 9, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !367, line: 18, flags: DIFlagFwdDecl)
!367 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !361, file: !362, line: 10, baseType: !369, size: 64, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !367, line: 89, size: 1536, elements: !371)
!371 = !{!372, !373, !383, !391, !392, !415, !4114, !4116, !4128, !4129, !4130, !4131, !4132, !4138, !4139, !4140}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !370, file: !367, line: 91, baseType: !7, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !370, file: !367, line: 92, baseType: !374, size: 32, offset: 32)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !375, line: 277, baseType: !376)
!375 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !375, line: 277, size: 32, elements: !377)
!377 = !{!378}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !376, file: !375, line: 277, baseType: !379, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !375, line: 70, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !375, line: 65, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !380, file: !375, line: 66, baseType: !7, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !370, file: !367, line: 93, baseType: !384, size: 128, offset: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !385, line: 38, size: 128, elements: !386)
!385 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!386 = !{!387, !389}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !384, file: !385, line: 39, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !384, file: !385, line: 39, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !370, file: !367, line: 94, baseType: !369, size: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !370, file: !367, line: 95, baseType: !393, size: 128, offset: 256)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !367, line: 47, size: 128, elements: !394)
!394 = !{!395, !411}
!395 = !DIDerivedType(tag: DW_TAG_member, scope: !393, file: !367, line: 48, baseType: !396, size: 64)
!396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !393, file: !367, line: 48, size: 64, elements: !397)
!397 = !{!398, !407}
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !396, file: !367, line: 49, baseType: !399, size: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !396, file: !367, line: 49, size: 64, elements: !400)
!400 = !{!401, !406}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !399, file: !367, line: 50, baseType: !402, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !403, line: 21, baseType: !404)
!403 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !405, line: 27, baseType: !7)
!405 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!406 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !399, file: !367, line: 50, baseType: !402, size: 32, offset: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !396, file: !367, line: 52, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !403, line: 23, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !405, line: 31, baseType: !410)
!410 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !393, file: !367, line: 54, baseType: !412, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !414)
!414 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !370, file: !367, line: 96, baseType: !416, size: 64, offset: 384)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !85, line: 610, size: 4224, elements: !418)
!418 = !{!419, !420, !421, !429, !436, !437, !585, !3827, !3828, !3829, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !4090, !4098, !4099, !4100, !4110, !4111, !4112, !4113}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !417, file: !85, line: 611, baseType: !302, size: 16)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !417, file: !85, line: 612, baseType: !303, size: 16, offset: 16)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !417, file: !85, line: 613, baseType: !422, size: 32, offset: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !423, line: 23, baseType: !424)
!423 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !423, line: 21, size: 32, elements: !425)
!425 = !{!426}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !424, file: !423, line: 22, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !188, line: 32, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !294, line: 49, baseType: !7)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !417, file: !85, line: 614, baseType: !430, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !423, line: 28, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !423, line: 26, size: 32, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !431, file: !423, line: 27, baseType: !434, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !188, line: 33, baseType: !435)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !294, line: 50, baseType: !7)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !417, file: !85, line: 615, baseType: !7, size: 32, offset: 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !417, file: !85, line: 622, baseType: !438, size: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !440)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !85, line: 1864, size: 1536, align: 512, elements: !441)
!441 = !{!442, !446, !459, !463, !469, !473, !479, !483, !487, !491, !495, !496, !502, !506, !532, !561, !565, !571, !576, !580, !581}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !440, file: !85, line: 1865, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!369, !416, !369, !7}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !440, file: !85, line: 1866, baseType: !447, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!202, !369, !416, !450}
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !452, line: 10, size: 128, elements: !453)
!452 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!453 = !{!454, !458}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !451, file: !452, line: 11, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DISubroutineType(types: !457)
!457 = !{null, !334}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !451, file: !452, line: 12, baseType: !334, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !440, file: !85, line: 1867, baseType: !460, size: 64, offset: 128)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!245, !416, !245}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !440, file: !85, line: 1868, baseType: !464, size: 64, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{!467, !416, !245}
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !85, line: 581, flags: DIFlagFwdDecl)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !440, file: !85, line: 1870, baseType: !470, size: 64, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{!245, !369, !261, !245}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !440, file: !85, line: 1872, baseType: !474, size: 64, offset: 320)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{!245, !416, !369, !302, !477}
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !188, line: 30, baseType: !478)
!478 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !440, file: !85, line: 1873, baseType: !480, size: 64, offset: 384)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!245, !369, !416, !369}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !440, file: !85, line: 1874, baseType: !484, size: 64, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!245, !416, !369}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !440, file: !85, line: 1875, baseType: !488, size: 64, offset: 512)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!245, !416, !369, !202}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !440, file: !85, line: 1876, baseType: !492, size: 64, offset: 576)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!245, !416, !369, !302}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !440, file: !85, line: 1877, baseType: !484, size: 64, offset: 640)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !440, file: !85, line: 1878, baseType: !497, size: 64, offset: 704)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!245, !416, !369, !302, !500}
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !188, line: 16, baseType: !501)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !188, line: 13, baseType: !402)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !440, file: !85, line: 1879, baseType: !503, size: 64, offset: 768)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!245, !416, !369, !416, !369, !7}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !440, file: !85, line: 1881, baseType: !507, size: 64, offset: 832)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{!245, !369, !510}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !85, line: 219, size: 640, elements: !512)
!512 = !{!513, !514, !515, !516, !517, !521, !529, !530, !531}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !511, file: !85, line: 220, baseType: !7, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !511, file: !85, line: 221, baseType: !302, size: 16, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !511, file: !85, line: 222, baseType: !422, size: 32, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !511, file: !85, line: 223, baseType: !430, size: 32, offset: 96)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !511, file: !85, line: 224, baseType: !518, size: 64, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !188, line: 46, baseType: !519)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !294, line: 88, baseType: !520)
!520 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !511, file: !85, line: 225, baseType: !522, size: 128, offset: 192)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !523, line: 13, size: 128, elements: !524)
!523 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!524 = !{!525, !528}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !522, file: !523, line: 14, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !523, line: 8, baseType: !527)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !405, line: 30, baseType: !520)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !522, file: !523, line: 15, baseType: !296, size: 64, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !511, file: !85, line: 226, baseType: !522, size: 128, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !511, file: !85, line: 227, baseType: !522, size: 128, offset: 448)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !511, file: !85, line: 234, baseType: !339, size: 64, offset: 576)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !440, file: !85, line: 1882, baseType: !533, size: 64, offset: 896)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{!245, !536, !538, !402, !7}
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !540, line: 22, size: 1152, elements: !541)
!540 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!541 = !{!542, !543, !544, !545, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !539, file: !540, line: 23, baseType: !402, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !539, file: !540, line: 24, baseType: !302, size: 16, offset: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !539, file: !540, line: 25, baseType: !7, size: 32, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !539, file: !540, line: 26, baseType: !546, size: 32, offset: 96)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !188, line: 104, baseType: !402)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !539, file: !540, line: 27, baseType: !408, size: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !539, file: !540, line: 28, baseType: !408, size: 64, offset: 192)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !539, file: !540, line: 37, baseType: !408, size: 64, offset: 256)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !539, file: !540, line: 38, baseType: !500, size: 32, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !539, file: !540, line: 39, baseType: !500, size: 32, offset: 352)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !539, file: !540, line: 40, baseType: !422, size: 32, offset: 384)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !539, file: !540, line: 41, baseType: !430, size: 32, offset: 416)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !539, file: !540, line: 42, baseType: !518, size: 64, offset: 448)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !539, file: !540, line: 43, baseType: !522, size: 128, offset: 512)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !539, file: !540, line: 44, baseType: !522, size: 128, offset: 640)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !539, file: !540, line: 45, baseType: !522, size: 128, offset: 768)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !539, file: !540, line: 46, baseType: !522, size: 128, offset: 896)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !539, file: !540, line: 47, baseType: !408, size: 64, offset: 1024)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !539, file: !540, line: 48, baseType: !408, size: 64, offset: 1088)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !440, file: !85, line: 1883, baseType: !562, size: 64, offset: 960)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!292, !369, !261, !308}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !440, file: !85, line: 1884, baseType: !566, size: 64, offset: 1024)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!245, !416, !569, !408, !408}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !85, line: 50, flags: DIFlagFwdDecl)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !440, file: !85, line: 1886, baseType: !572, size: 64, offset: 1088)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!245, !416, !575, !245}
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !440, file: !85, line: 1887, baseType: !577, size: 64, offset: 1152)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!245, !416, !369, !339, !7, !302}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !440, file: !85, line: 1890, baseType: !492, size: 64, offset: 1216)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !440, file: !85, line: 1891, baseType: !582, size: 64, offset: 1280)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!245, !416, !467, !245}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !417, file: !85, line: 623, baseType: !586, size: 64, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !85, line: 1416, size: 9472, elements: !588)
!588 = !{!589, !590, !591, !592, !593, !594, !644, !3441, !3523, !3606, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3622, !3626, !3627, !3628, !3629, !3632, !3633, !3634, !3675, !3701, !3702, !3703, !3704, !3705, !3706, !3709, !3710, !3717, !3718, !3719, !3720, !3721, !3780, !3781, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !587, file: !85, line: 1417, baseType: !206, size: 128)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !587, file: !85, line: 1418, baseType: !500, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !587, file: !85, line: 1419, baseType: !414, size: 8, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !587, file: !85, line: 1420, baseType: !189, size: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !587, file: !85, line: 1421, baseType: !518, size: 64, offset: 256)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !587, file: !85, line: 1422, baseType: !595, size: 64, offset: 320)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !85, line: 2228, size: 576, elements: !597)
!597 = !{!598, !599, !600, !607, !611, !615, !619, !623, !624, !634, !637, !638, !639, !641, !642, !643}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !596, file: !85, line: 2229, baseType: !202, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !596, file: !85, line: 2230, baseType: !245, size: 32, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !596, file: !85, line: 2238, baseType: !601, size: 64, offset: 128)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DISubroutineType(types: !603)
!603 = !{!245, !604}
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !606, line: 28, flags: DIFlagFwdDecl)
!606 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!607 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !596, file: !85, line: 2239, baseType: !608, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !610)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !85, line: 70, flags: DIFlagFwdDecl)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !596, file: !85, line: 2240, baseType: !612, size: 64, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!369, !595, !245, !202, !334}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !596, file: !85, line: 2242, baseType: !616, size: 64, offset: 320)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{null, !586}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !596, file: !85, line: 2243, baseType: !620, size: 64, offset: 384)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !622, line: 76, flags: DIFlagFwdDecl)
!622 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !596, file: !85, line: 2244, baseType: !595, size: 64, offset: 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !596, file: !85, line: 2245, baseType: !625, size: 64, offset: 512)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !188, line: 182, size: 64, elements: !626)
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !625, file: !188, line: 183, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !188, line: 186, size: 128, elements: !630)
!630 = !{!631, !632}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !629, file: !188, line: 187, baseType: !628, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !629, file: !188, line: 187, baseType: !633, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !596, file: !85, line: 2247, baseType: !635, offset: 576)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !636, line: 187, elements: !233)
!636 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!637 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !596, file: !85, line: 2248, baseType: !635, offset: 576)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !596, file: !85, line: 2249, baseType: !635, offset: 576)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !596, file: !85, line: 2250, baseType: !640, offset: 576)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !635, elements: !262)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !596, file: !85, line: 2252, baseType: !635, offset: 576)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !596, file: !85, line: 2253, baseType: !635, offset: 576)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !596, file: !85, line: 2254, baseType: !635, offset: 576)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !587, file: !85, line: 1423, baseType: !645, size: 64, offset: 384)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !85, line: 1935, size: 1472, elements: !648)
!648 = !{!649, !653, !657, !658, !662, !668, !672, !673, !674, !678, !682, !683, !684, !685, !691, !696, !697, !753, !754, !755, !756, !3425, !3440}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !647, file: !85, line: 1936, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{!416, !586}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !647, file: !85, line: 1937, baseType: !654, size: 64, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{null, !416}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !647, file: !85, line: 1938, baseType: !654, size: 64, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !647, file: !85, line: 1940, baseType: !659, size: 64, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{null, !416, !245}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !647, file: !85, line: 1941, baseType: !663, size: 64, offset: 256)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{!245, !416, !666}
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !647, file: !85, line: 1942, baseType: !669, size: 64, offset: 320)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DISubroutineType(types: !671)
!671 = !{!245, !416}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !647, file: !85, line: 1943, baseType: !654, size: 64, offset: 384)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !647, file: !85, line: 1944, baseType: !616, size: 64, offset: 448)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !647, file: !85, line: 1945, baseType: !675, size: 64, offset: 512)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!245, !586, !245}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !647, file: !85, line: 1946, baseType: !679, size: 64, offset: 576)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!245, !586}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !647, file: !85, line: 1947, baseType: !679, size: 64, offset: 640)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !647, file: !85, line: 1948, baseType: !679, size: 64, offset: 704)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !647, file: !85, line: 1949, baseType: !679, size: 64, offset: 768)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !647, file: !85, line: 1950, baseType: !686, size: 64, offset: 832)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DISubroutineType(types: !688)
!688 = !{!245, !369, !689}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !85, line: 57, flags: DIFlagFwdDecl)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !647, file: !85, line: 1951, baseType: !692, size: 64, offset: 896)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!245, !586, !695, !261}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !647, file: !85, line: 1952, baseType: !616, size: 64, offset: 960)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !647, file: !85, line: 1954, baseType: !698, size: 64, offset: 1024)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!245, !701, !369}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !703, line: 16, size: 896, elements: !704)
!703 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!704 = !{!705, !706, !707, !708, !709, !710, !711, !712, !726, !748, !749, !752}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !702, file: !703, line: 17, baseType: !261, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !702, file: !703, line: 18, baseType: !308, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !702, file: !703, line: 19, baseType: !308, size: 64, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !702, file: !703, line: 20, baseType: !308, size: 64, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !702, file: !703, line: 21, baseType: !308, size: 64, offset: 256)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !702, file: !703, line: 22, baseType: !518, size: 64, offset: 320)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !702, file: !703, line: 23, baseType: !518, size: 64, offset: 384)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !702, file: !703, line: 24, baseType: !713, size: 192, offset: 448)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !714, line: 53, size: 192, elements: !715)
!714 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!715 = !{!716, !724, !725}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !713, file: !714, line: 54, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !718, line: 13, baseType: !719)
!718 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !188, line: 175, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 173, size: 64, elements: !721)
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !720, file: !188, line: 174, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !403, line: 22, baseType: !527)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !713, file: !714, line: 55, baseType: !219, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !713, file: !714, line: 59, baseType: !206, size: 128, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !702, file: !703, line: 25, baseType: !727, size: 64, offset: 640)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !703, line: 31, size: 256, elements: !730)
!730 = !{!731, !736, !740, !744}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !729, file: !703, line: 32, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{!334, !701, !735}
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !729, file: !703, line: 33, baseType: !737, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !701, !334}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !729, file: !703, line: 34, baseType: !741, size: 64, offset: 128)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!334, !701, !334, !735}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !729, file: !703, line: 35, baseType: !745, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{!245, !701, !334}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !702, file: !703, line: 26, baseType: !245, size: 32, offset: 704)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !702, file: !703, line: 27, baseType: !750, size: 64, offset: 768)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !702, file: !703, line: 28, baseType: !334, size: 64, offset: 832)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !647, file: !85, line: 1955, baseType: !698, size: 64, offset: 1088)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !647, file: !85, line: 1956, baseType: !698, size: 64, offset: 1152)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !647, file: !85, line: 1957, baseType: !698, size: 64, offset: 1216)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !647, file: !85, line: 1963, baseType: !757, size: 64, offset: 1280)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!245, !586, !760, !783}
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !762, line: 68, size: 512, align: 128, elements: !763)
!762 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!763 = !{!764, !765, !3417, !3424}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !761, file: !762, line: 69, baseType: !189, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !762, line: 77, baseType: !766, size: 320, offset: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !761, file: !762, line: 77, size: 320, elements: !767)
!767 = !{!768, !973, !978, !1006, !1014, !1020, !3368, !3416}
!768 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 78, baseType: !769, size: 320)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 78, size: 320, elements: !770)
!770 = !{!771, !772, !971, !972}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !769, file: !762, line: 84, baseType: !206, size: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !769, file: !762, line: 86, baseType: !773, size: 64, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !85, line: 451, size: 1216, align: 64, elements: !775)
!775 = !{!776, !777, !785, !786, !791, !806, !815, !816, !817, !818, !964, !965, !968, !969, !970}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !774, file: !85, line: 452, baseType: !416, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !774, file: !85, line: 453, baseType: !778, size: 128, offset: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !779, line: 292, size: 128, elements: !780)
!779 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!780 = !{!781, !782, !784}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !778, file: !779, line: 293, baseType: !219)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !778, file: !779, line: 295, baseType: !783, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !188, line: 148, baseType: !7)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !778, file: !779, line: 296, baseType: !334, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !774, file: !85, line: 454, baseType: !783, size: 32, offset: 192)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !774, file: !85, line: 455, baseType: !787, size: 32, offset: 224)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !188, line: 168, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 166, size: 32, elements: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !788, file: !188, line: 167, baseType: !245, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !774, file: !85, line: 460, baseType: !792, size: 128, offset: 256)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !793, line: 125, size: 128, elements: !794)
!793 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!794 = !{!795, !805}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !792, file: !793, line: 126, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !793, line: 31, size: 64, elements: !797)
!797 = !{!798}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !796, file: !793, line: 32, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !793, line: 24, size: 192, align: 64, elements: !801)
!801 = !{!802, !803, !804}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !800, file: !793, line: 25, baseType: !189, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !800, file: !793, line: 26, baseType: !799, size: 64, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !800, file: !793, line: 27, baseType: !799, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !792, file: !793, line: 127, baseType: !799, size: 64, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !774, file: !85, line: 461, baseType: !807, size: 256, offset: 384)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !808, line: 35, size: 256, elements: !809)
!808 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!809 = !{!810, !811, !812, !814}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !807, file: !808, line: 36, baseType: !717, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !807, file: !808, line: 42, baseType: !717, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !807, file: !808, line: 46, baseType: !813, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !220, line: 29, baseType: !227)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !807, file: !808, line: 47, baseType: !206, size: 128, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !774, file: !85, line: 462, baseType: !189, size: 64, offset: 640)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !774, file: !85, line: 463, baseType: !189, size: 64, offset: 704)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !774, file: !85, line: 464, baseType: !189, size: 64, offset: 768)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !774, file: !85, line: 465, baseType: !819, size: 64, offset: 832)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !85, line: 367, size: 1408, elements: !822)
!822 = !{!823, !827, !831, !835, !839, !843, !856, !862, !866, !871, !875, !879, !883, !928, !932, !938, !939, !940, !944, !949, !953, !960}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !821, file: !85, line: 368, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!245, !760, !666}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !821, file: !85, line: 369, baseType: !828, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!245, !339, !760}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !821, file: !85, line: 372, baseType: !832, size: 64, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!245, !773, !666}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !821, file: !85, line: 375, baseType: !836, size: 64, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!245, !760}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !821, file: !85, line: 381, baseType: !840, size: 64, offset: 256)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!245, !339, !773, !209, !7}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !821, file: !85, line: 383, baseType: !844, size: 64, offset: 320)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{null, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !849, line: 795, size: 256, elements: !850)
!849 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!850 = !{!851, !852, !853, !854, !855}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !848, file: !849, line: 796, baseType: !339, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !848, file: !849, line: 797, baseType: !773, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !848, file: !849, line: 799, baseType: !189, size: 64, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !848, file: !849, line: 800, baseType: !7, size: 32, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !848, file: !849, line: 801, baseType: !7, size: 32, offset: 224)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !821, file: !85, line: 385, baseType: !857, size: 64, offset: 384)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!245, !339, !773, !518, !7, !7, !860, !861}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !821, file: !85, line: 388, baseType: !863, size: 64, offset: 448)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!245, !339, !773, !518, !7, !7, !760, !334}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !821, file: !85, line: 393, baseType: !867, size: 64, offset: 512)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!870, !773, !870}
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !188, line: 125, baseType: !408)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !821, file: !85, line: 394, baseType: !872, size: 64, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{null, !760, !7, !7}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !821, file: !85, line: 395, baseType: !876, size: 64, offset: 640)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!245, !760, !783}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !821, file: !85, line: 396, baseType: !880, size: 64, offset: 704)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !760}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !821, file: !85, line: 397, baseType: !884, size: 64, offset: 768)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!292, !887, !926}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !85, line: 320, size: 384, elements: !889)
!889 = !{!890, !891, !892, !896, !897, !898, !901, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !888, file: !85, line: 321, baseType: !339, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !888, file: !85, line: 326, baseType: !518, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !888, file: !85, line: 327, baseType: !893, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !887, !296, !296}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !888, file: !85, line: 328, baseType: !334, size: 64, offset: 192)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !888, file: !85, line: 329, baseType: !245, size: 32, offset: 256)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !888, file: !85, line: 330, baseType: !899, size: 16, offset: 288)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !403, line: 19, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !405, line: 24, baseType: !303)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !888, file: !85, line: 331, baseType: !899, size: 16, offset: 304)
!902 = !DIDerivedType(tag: DW_TAG_member, scope: !888, file: !85, line: 332, baseType: !903, size: 64, offset: 320)
!903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !888, file: !85, line: 332, size: 64, elements: !904)
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !903, file: !85, line: 333, baseType: !7, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !903, file: !85, line: 334, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !849, line: 569, size: 448, elements: !909)
!909 = !{!910, !911, !912}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !908, file: !849, line: 570, baseType: !760, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !908, file: !849, line: 571, baseType: !245, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !908, file: !849, line: 572, baseType: !913, size: 320, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !914, line: 14, baseType: !915)
!914 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !914, line: 29, size: 320, elements: !916)
!916 = !{!917, !918, !919, !925}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !915, file: !914, line: 30, baseType: !7, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !915, file: !914, line: 31, baseType: !334, size: 64, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !915, file: !914, line: 32, baseType: !920, size: 64, offset: 128)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !914, line: 16, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!245, !924, !7, !245, !334}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !915, file: !914, line: 33, baseType: !206, size: 128, offset: 192)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !85, line: 64, flags: DIFlagFwdDecl)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !821, file: !85, line: 402, baseType: !929, size: 64, offset: 832)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!245, !773, !760, !760, !5}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !821, file: !85, line: 404, baseType: !933, size: 64, offset: 896)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!477, !760, !936}
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !937, line: 305, baseType: !7)
!937 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!938 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !821, file: !85, line: 405, baseType: !880, size: 64, offset: 960)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !821, file: !85, line: 406, baseType: !836, size: 64, offset: 1024)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !821, file: !85, line: 407, baseType: !941, size: 64, offset: 1088)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!245, !760, !189, !189}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !821, file: !85, line: 409, baseType: !945, size: 64, offset: 1152)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{null, !760, !948, !948}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !821, file: !85, line: 410, baseType: !950, size: 64, offset: 1216)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!245, !773, !760}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !821, file: !85, line: 413, baseType: !954, size: 64, offset: 1280)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{!245, !957, !339, !959}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !85, line: 61, flags: DIFlagFwdDecl)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !821, file: !85, line: 415, baseType: !961, size: 64, offset: 1344)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{null, !339}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !774, file: !85, line: 466, baseType: !189, size: 64, offset: 896)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !774, file: !85, line: 467, baseType: !966, size: 32, offset: 960)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !967, line: 8, baseType: !402)
!967 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!968 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !774, file: !85, line: 468, baseType: !219, offset: 992)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !774, file: !85, line: 469, baseType: !206, size: 128, offset: 1024)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !774, file: !85, line: 470, baseType: !334, size: 64, offset: 1152)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !769, file: !762, line: 87, baseType: !189, size: 64, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !769, file: !762, line: 94, baseType: !189, size: 64, offset: 256)
!973 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 96, baseType: !974, size: 64)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 96, size: 64, elements: !975)
!975 = !{!976}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !974, file: !762, line: 101, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !188, line: 143, baseType: !408)
!978 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 103, baseType: !979, size: 320)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 103, size: 320, elements: !980)
!980 = !{!981, !991, !994, !995}
!981 = !DIDerivedType(tag: DW_TAG_member, scope: !979, file: !762, line: 104, baseType: !982, size: 128)
!982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !979, file: !762, line: 104, size: 128, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !982, file: !762, line: 105, baseType: !206, size: 128)
!985 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !762, line: 106, baseType: !986, size: 128)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !762, line: 106, size: 128, elements: !987)
!987 = !{!988, !989, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !986, file: !762, line: 107, baseType: !760, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !986, file: !762, line: 109, baseType: !245, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !986, file: !762, line: 110, baseType: !245, size: 32, offset: 96)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !979, file: !762, line: 117, baseType: !992, size: 64, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !762, line: 117, flags: DIFlagFwdDecl)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !979, file: !762, line: 119, baseType: !334, size: 64, offset: 192)
!995 = !DIDerivedType(tag: DW_TAG_member, scope: !979, file: !762, line: 120, baseType: !996, size: 64, offset: 256)
!996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !979, file: !762, line: 120, size: 64, elements: !997)
!997 = !{!998, !999, !1000}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !996, file: !762, line: 121, baseType: !334, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !996, file: !762, line: 122, baseType: !189, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !762, line: 123, baseType: !1001, size: 32)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !762, line: 123, size: 32, elements: !1002)
!1002 = !{!1003, !1004, !1005}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1001, file: !762, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1001, file: !762, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1001, file: !762, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 130, baseType: !1007, size: 192)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 130, size: 192, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1013}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1007, file: !762, line: 131, baseType: !189, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1007, file: !762, line: 134, baseType: !414, size: 8, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1007, file: !762, line: 135, baseType: !414, size: 8, offset: 72)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1007, file: !762, line: 136, baseType: !787, size: 32, offset: 96)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1007, file: !762, line: 137, baseType: !7, size: 32, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 139, baseType: !1015, size: 256)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 139, size: 256, elements: !1016)
!1016 = !{!1017, !1018, !1019}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1015, file: !762, line: 140, baseType: !189, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1015, file: !762, line: 141, baseType: !787, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1015, file: !762, line: 143, baseType: !206, size: 128, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 145, baseType: !1021, size: 256)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 145, size: 256, elements: !1022)
!1022 = !{!1023, !1024, !1027, !1028, !3367}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1021, file: !762, line: 146, baseType: !189, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1021, file: !762, line: 147, baseType: !1025, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1026, line: 509, baseType: !760)
!1026 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1021, file: !762, line: 148, baseType: !189, size: 64, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, scope: !1021, file: !762, line: 149, baseType: !1029, size: 64, offset: 192)
!1029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1021, file: !762, line: 149, size: 64, elements: !1030)
!1030 = !{!1031, !3366}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1029, file: !762, line: 150, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !762, line: 388, size: 7296, elements: !1034)
!1034 = !{!1035, !3364}
!1035 = !DIDerivedType(tag: DW_TAG_member, scope: !1033, file: !762, line: 389, baseType: !1036, size: 7296)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1033, file: !762, line: 389, size: 7296, elements: !1037)
!1037 = !{!1038, !1156, !1157, !1158, !1162, !1163, !1164, !1165, !1166, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1207, !1215, !1218, !1258, !1259, !3348, !3349, !3352, !3353, !3354, !3357, !3358, !3359, !3362, !3363}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1036, file: !762, line: 390, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !762, line: 305, size: 1472, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1056, !1057, !1062, !1063, !1066, !1150, !1151, !1152, !1153, !1154}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1040, file: !762, line: 308, baseType: !189, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1040, file: !762, line: 309, baseType: !189, size: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1040, file: !762, line: 313, baseType: !1039, size: 64, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1040, file: !762, line: 313, baseType: !1039, size: 64, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1040, file: !762, line: 315, baseType: !800, size: 192, align: 64, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1040, file: !762, line: 323, baseType: !189, size: 64, offset: 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1040, file: !762, line: 327, baseType: !1032, size: 64, offset: 512)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1040, file: !762, line: 333, baseType: !1050, size: 64, offset: 576)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1026, line: 284, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1026, line: 284, size: 64, elements: !1052)
!1052 = !{!1053}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1051, file: !1026, line: 284, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1055, line: 19, baseType: !189)
!1055 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1040, file: !762, line: 334, baseType: !189, size: 64, offset: 640)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1040, file: !762, line: 343, baseType: !1058, size: 256, offset: 704)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1040, file: !762, line: 340, size: 256, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1058, file: !762, line: 341, baseType: !800, size: 192, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1058, file: !762, line: 342, baseType: !189, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1040, file: !762, line: 351, baseType: !206, size: 128, offset: 960)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1040, file: !762, line: 353, baseType: !1064, size: 64, offset: 1088)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !762, line: 353, flags: DIFlagFwdDecl)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1040, file: !762, line: 356, baseType: !1067, size: 64, offset: 1152)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1070)
!1070 = !{!1071, !1075, !1076, !1080, !1084, !1124, !1128, !1132, !1136, !1137, !1138, !1142, !1146}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1069, file: !14, line: 558, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{null, !1039}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1069, file: !14, line: 559, baseType: !1072, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1069, file: !14, line: 560, baseType: !1077, size: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!245, !1039, !189}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1069, file: !14, line: 561, baseType: !1081, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!245, !1039}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1069, file: !14, line: 562, baseType: !1085, size: 64, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !762, line: 682, baseType: !7)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097, !1104, !1111, !1117, !1118, !1119, !1121, !1123}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1090, file: !14, line: 509, baseType: !1039, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1090, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1090, file: !14, line: 511, baseType: !783, size: 32, offset: 96)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1090, file: !14, line: 512, baseType: !189, size: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1090, file: !14, line: 513, baseType: !189, size: 64, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1090, file: !14, line: 514, baseType: !1098, size: 64, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1026, line: 385, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1026, line: 385, size: 64, elements: !1101)
!1101 = !{!1102}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1100, file: !1026, line: 385, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1055, line: 15, baseType: !189)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1090, file: !14, line: 516, baseType: !1105, size: 64, offset: 320)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1026, line: 359, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1026, line: 359, size: 64, elements: !1108)
!1108 = !{!1109}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1107, file: !1026, line: 359, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1055, line: 16, baseType: !189)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1090, file: !14, line: 519, baseType: !1112, size: 64, offset: 384)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1055, line: 21, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 21, size: 64, elements: !1114)
!1114 = !{!1115}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1113, file: !1055, line: 21, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1055, line: 14, baseType: !189)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1090, file: !14, line: 521, baseType: !760, size: 64, offset: 448)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1090, file: !14, line: 522, baseType: !760, size: 64, offset: 512)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1090, file: !14, line: 528, baseType: !1120, size: 64, offset: 576)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1090, file: !14, line: 532, baseType: !1122, size: 64, offset: 640)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1090, file: !14, line: 536, baseType: !1025, size: 64, offset: 704)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1069, file: !14, line: 563, baseType: !1125, size: 64, offset: 320)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1088, !1089, !13}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1069, file: !14, line: 565, baseType: !1129, size: 64, offset: 384)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{null, !1089, !189, !189}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1069, file: !14, line: 567, baseType: !1133, size: 64, offset: 448)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!189, !1039}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1069, file: !14, line: 571, baseType: !1085, size: 64, offset: 512)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1069, file: !14, line: 574, baseType: !1085, size: 64, offset: 576)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1069, file: !14, line: 579, baseType: !1139, size: 64, offset: 640)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!245, !1039, !189, !334, !245, !245}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1069, file: !14, line: 585, baseType: !1143, size: 64, offset: 704)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!202, !1039}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1069, file: !14, line: 615, baseType: !1147, size: 64, offset: 768)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!760, !1039, !189}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1040, file: !762, line: 359, baseType: !189, size: 64, offset: 1216)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1040, file: !762, line: 361, baseType: !339, size: 64, offset: 1280)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1040, file: !762, line: 362, baseType: !334, size: 64, offset: 1344)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1040, file: !762, line: 365, baseType: !717, size: 64, offset: 1408)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1040, file: !762, line: 373, baseType: !1155, offset: 1472)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !762, line: 296, elements: !233)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1036, file: !762, line: 391, baseType: !796, size: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1036, file: !762, line: 392, baseType: !408, size: 64, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1036, file: !762, line: 394, baseType: !1159, size: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!189, !339, !189, !189, !189, !189}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1036, file: !762, line: 398, baseType: !189, size: 64, offset: 256)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1036, file: !762, line: 399, baseType: !189, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1036, file: !762, line: 405, baseType: !189, size: 64, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1036, file: !762, line: 406, baseType: !189, size: 64, offset: 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1036, file: !762, line: 407, baseType: !1167, size: 64, offset: 512)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1026, line: 286, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1026, line: 286, size: 64, elements: !1170)
!1170 = !{!1171}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1169, file: !1026, line: 286, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1055, line: 18, baseType: !189)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1036, file: !762, line: 416, baseType: !787, size: 32, offset: 576)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1036, file: !762, line: 428, baseType: !787, size: 32, offset: 608)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1036, file: !762, line: 437, baseType: !787, size: 32, offset: 640)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1036, file: !762, line: 447, baseType: !787, size: 32, offset: 672)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1036, file: !762, line: 450, baseType: !717, size: 64, offset: 704)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1036, file: !762, line: 452, baseType: !245, size: 32, offset: 768)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1036, file: !762, line: 454, baseType: !219, offset: 800)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1036, file: !762, line: 457, baseType: !807, size: 256, offset: 832)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1036, file: !762, line: 459, baseType: !206, size: 128, offset: 1088)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1036, file: !762, line: 466, baseType: !189, size: 64, offset: 1216)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1036, file: !762, line: 467, baseType: !189, size: 64, offset: 1280)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1036, file: !762, line: 469, baseType: !189, size: 64, offset: 1344)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1036, file: !762, line: 470, baseType: !189, size: 64, offset: 1408)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1036, file: !762, line: 471, baseType: !719, size: 64, offset: 1472)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1036, file: !762, line: 472, baseType: !189, size: 64, offset: 1536)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1036, file: !762, line: 473, baseType: !189, size: 64, offset: 1600)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1036, file: !762, line: 474, baseType: !189, size: 64, offset: 1664)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1036, file: !762, line: 475, baseType: !189, size: 64, offset: 1728)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1036, file: !762, line: 477, baseType: !219, offset: 1792)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1036, file: !762, line: 478, baseType: !189, size: 64, offset: 1792)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1036, file: !762, line: 478, baseType: !189, size: 64, offset: 1856)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1036, file: !762, line: 478, baseType: !189, size: 64, offset: 1920)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1036, file: !762, line: 478, baseType: !189, size: 64, offset: 1984)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1036, file: !762, line: 479, baseType: !189, size: 64, offset: 2048)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1036, file: !762, line: 479, baseType: !189, size: 64, offset: 2112)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1036, file: !762, line: 479, baseType: !189, size: 64, offset: 2176)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1036, file: !762, line: 480, baseType: !189, size: 64, offset: 2240)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1036, file: !762, line: 480, baseType: !189, size: 64, offset: 2304)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1036, file: !762, line: 480, baseType: !189, size: 64, offset: 2368)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1036, file: !762, line: 480, baseType: !189, size: 64, offset: 2432)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1036, file: !762, line: 482, baseType: !1204, size: 2816, offset: 2496)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 2816, elements: !1205)
!1205 = !{!1206}
!1206 = !DISubrange(count: 44)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1036, file: !762, line: 488, baseType: !1208, size: 256, offset: 5312)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1209, line: 60, size: 256, elements: !1210)
!1209 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1210 = !{!1211}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1208, file: !1209, line: 61, baseType: !1212, size: 256)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !717, size: 256, elements: !1213)
!1213 = !{!1214}
!1214 = !DISubrange(count: 4)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1036, file: !762, line: 490, baseType: !1216, size: 64, offset: 5568)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !762, line: 490, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1036, file: !762, line: 493, baseType: !1219, size: 896, offset: 5632)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1220, line: 53, baseType: !1221)
!1220 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1220, line: 13, size: 896, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1229, !1230, !1231, !1232, !1252, !1253, !1254}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1221, file: !1220, line: 18, baseType: !408, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1221, file: !1220, line: 28, baseType: !719, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1221, file: !1220, line: 31, baseType: !807, size: 256, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1221, file: !1220, line: 32, baseType: !1227, size: 64, offset: 384)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1220, line: 32, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1221, file: !1220, line: 37, baseType: !303, size: 16, offset: 448)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1221, file: !1220, line: 40, baseType: !713, size: 192, offset: 512)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1221, file: !1220, line: 41, baseType: !334, size: 64, offset: 704)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1221, file: !1220, line: 42, baseType: !1233, size: 64, offset: 768)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1236, line: 13, size: 896, elements: !1237)
!1236 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1235, file: !1236, line: 14, baseType: !334, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1235, file: !1236, line: 15, baseType: !189, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1235, file: !1236, line: 17, baseType: !189, size: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1235, file: !1236, line: 17, baseType: !189, size: 64, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1235, file: !1236, line: 19, baseType: !296, size: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1235, file: !1236, line: 21, baseType: !296, size: 64, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1235, file: !1236, line: 22, baseType: !296, size: 64, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1235, file: !1236, line: 23, baseType: !296, size: 64, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1235, file: !1236, line: 24, baseType: !296, size: 64, offset: 512)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1235, file: !1236, line: 25, baseType: !296, size: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1235, file: !1236, line: 26, baseType: !296, size: 64, offset: 640)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1235, file: !1236, line: 27, baseType: !296, size: 64, offset: 704)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1235, file: !1236, line: 28, baseType: !296, size: 64, offset: 768)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1235, file: !1236, line: 29, baseType: !296, size: 64, offset: 832)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1221, file: !1220, line: 44, baseType: !787, size: 32, offset: 832)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1221, file: !1220, line: 50, baseType: !899, size: 16, offset: 864)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1221, file: !1220, line: 51, baseType: !1255, size: 16, offset: 880)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !403, line: 18, baseType: !1256)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !405, line: 23, baseType: !1257)
!1257 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1036, file: !762, line: 495, baseType: !189, size: 64, offset: 6528)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1036, file: !762, line: 497, baseType: !1260, size: 64, offset: 6592)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !762, line: 381, size: 384, elements: !1262)
!1262 = !{!1263, !1264, !3347}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1261, file: !762, line: 382, baseType: !787, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1261, file: !762, line: 383, baseType: !1265, size: 128, offset: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !762, line: 376, size: 128, elements: !1266)
!1266 = !{!1267, !3345}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1265, file: !762, line: 377, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1270, line: 640, size: 48640, elements: !1271)
!1270 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1271 = !{!1272, !1278, !1280, !1281, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1298, !1316, !1327, !1412, !1413, !1414, !1425, !1426, !1428, !1429, !1430, !1431, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1510, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1547, !1549, !1550, !1551, !1563, !1564, !1565, !1566, !1567, !1568, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1592, !1597, !1781, !1782, !1783, !1784, !1788, !1791, !1794, !1797, !1800, !1804, !1905, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1951, !1952, !1953, !1954, !1955, !1960, !1961, !1962, !1965, !1966, !2991, !3000, !3003, !3004, !3005, !3008, !3009, !3088, !3089, !3092, !3093, !3096, !3097, !3098, !3102, !3103, !3104, !3117, !3118, !3119, !3129, !3134, !3137, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1269, file: !1270, line: 646, baseType: !1273, size: 128)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1274, line: 56, size: 128, elements: !1275)
!1274 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1275 = !{!1276, !1277}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1273, file: !1274, line: 57, baseType: !189, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1273, file: !1274, line: 58, baseType: !402, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1269, file: !1270, line: 649, baseType: !1279, size: 64, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !296)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1269, file: !1270, line: 657, baseType: !334, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1269, file: !1270, line: 658, baseType: !1282, size: 32, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1283, line: 113, baseType: !1284)
!1283 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1283, line: 111, size: 32, elements: !1285)
!1285 = !{!1286}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1284, file: !1283, line: 112, baseType: !787, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1269, file: !1270, line: 660, baseType: !7, size: 32, offset: 288)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1269, file: !1270, line: 661, baseType: !7, size: 32, offset: 320)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1269, file: !1270, line: 684, baseType: !245, size: 32, offset: 352)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1269, file: !1270, line: 686, baseType: !245, size: 32, offset: 384)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1269, file: !1270, line: 687, baseType: !245, size: 32, offset: 416)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1269, file: !1270, line: 688, baseType: !245, size: 32, offset: 448)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1269, file: !1270, line: 689, baseType: !7, size: 32, offset: 480)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1269, file: !1270, line: 691, baseType: !1295, size: 64, offset: 512)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1297)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1270, line: 691, flags: DIFlagFwdDecl)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1269, file: !1270, line: 692, baseType: !1299, size: 832, offset: 576)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1270, line: 451, size: 832, elements: !1300)
!1300 = !{!1301, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1299, file: !1270, line: 453, baseType: !1302, size: 128)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1270, line: 325, size: 128, elements: !1303)
!1303 = !{!1304, !1305}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1302, file: !1270, line: 326, baseType: !189, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1302, file: !1270, line: 327, baseType: !402, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1299, file: !1270, line: 454, baseType: !800, size: 192, align: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1299, file: !1270, line: 455, baseType: !206, size: 128, offset: 320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1299, file: !1270, line: 456, baseType: !7, size: 32, offset: 448)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1299, file: !1270, line: 458, baseType: !408, size: 64, offset: 512)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1299, file: !1270, line: 459, baseType: !408, size: 64, offset: 576)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1299, file: !1270, line: 460, baseType: !408, size: 64, offset: 640)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1299, file: !1270, line: 461, baseType: !408, size: 64, offset: 704)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1299, file: !1270, line: 463, baseType: !408, size: 64, offset: 768)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1299, file: !1270, line: 465, baseType: !1315, offset: 832)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1270, line: 415, elements: !233)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1269, file: !1270, line: 693, baseType: !1317, size: 384, offset: 1408)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1270, line: 489, size: 384, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1317, file: !1270, line: 490, baseType: !206, size: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1317, file: !1270, line: 491, baseType: !189, size: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1317, file: !1270, line: 492, baseType: !189, size: 64, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1317, file: !1270, line: 493, baseType: !7, size: 32, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1317, file: !1270, line: 494, baseType: !303, size: 16, offset: 288)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1317, file: !1270, line: 495, baseType: !303, size: 16, offset: 304)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1317, file: !1270, line: 497, baseType: !1326, size: 64, offset: 320)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1269, file: !1270, line: 697, baseType: !1328, size: 1792, offset: 1792)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1270, line: 507, size: 1792, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1409, !1410}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1328, file: !1270, line: 508, baseType: !800, size: 192, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1328, file: !1270, line: 515, baseType: !408, size: 64, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1328, file: !1270, line: 516, baseType: !408, size: 64, offset: 256)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1328, file: !1270, line: 517, baseType: !408, size: 64, offset: 320)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1328, file: !1270, line: 518, baseType: !408, size: 64, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1328, file: !1270, line: 519, baseType: !408, size: 64, offset: 448)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1328, file: !1270, line: 526, baseType: !723, size: 64, offset: 512)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1328, file: !1270, line: 527, baseType: !408, size: 64, offset: 576)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1328, file: !1270, line: 528, baseType: !7, size: 32, offset: 640)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1328, file: !1270, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1328, file: !1270, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1328, file: !1270, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1328, file: !1270, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1328, file: !1270, line: 563, baseType: !1344, size: 512, offset: 704)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1345)
!1345 = !{!1346, !1354, !1355, !1360, !1403, !1406, !1407, !1408}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1344, file: !20, line: 119, baseType: !1347, size: 256)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1348, line: 9, size: 256, elements: !1349)
!1348 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1349 = !{!1350, !1351}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1347, file: !1348, line: 10, baseType: !800, size: 192, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1347, file: !1348, line: 11, baseType: !1352, size: 64, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1353, line: 29, baseType: !723)
!1353 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1344, file: !20, line: 120, baseType: !1352, size: 64, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1344, file: !20, line: 121, baseType: !1356, size: 64, offset: 320)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!19, !1359}
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1344, file: !20, line: 122, baseType: !1361, size: 64, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1363)
!1363 = !{!1364, !1384, !1385, !1388, !1393, !1394, !1398, !1402}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1362, file: !20, line: 160, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1366, file: !20, line: 215, baseType: !813)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1366, file: !20, line: 216, baseType: !7, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1366, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1366, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1366, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1366, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1366, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1366, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1366, file: !20, line: 233, baseType: !1352, size: 64, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1366, file: !20, line: 234, baseType: !1359, size: 64, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1366, file: !20, line: 235, baseType: !1352, size: 64, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1366, file: !20, line: 236, baseType: !1359, size: 64, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1366, file: !20, line: 237, baseType: !1381, size: 4096, offset: 512)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 4096, elements: !1382)
!1382 = !{!1383}
!1383 = !DISubrange(count: 8)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1362, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1362, file: !20, line: 162, baseType: !1386, size: 32, offset: 96)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !188, line: 27, baseType: !1387)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !294, line: 96, baseType: !245)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1362, file: !20, line: 163, baseType: !1389, size: 32, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !375, line: 276, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !375, line: 276, size: 32, elements: !1391)
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1390, file: !375, line: 276, baseType: !379, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1362, file: !20, line: 164, baseType: !1359, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1362, file: !20, line: 165, baseType: !1395, size: 128, offset: 256)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1348, line: 14, size: 128, elements: !1396)
!1396 = !{!1397}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1395, file: !1348, line: 15, baseType: !792, size: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1362, file: !20, line: 166, baseType: !1399, size: 64, offset: 384)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!1352}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1362, file: !20, line: 167, baseType: !1352, size: 64, offset: 448)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1344, file: !20, line: 123, baseType: !1404, size: 8, offset: 448)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !403, line: 17, baseType: !1405)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !405, line: 21, baseType: !414)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1344, file: !20, line: 124, baseType: !1404, size: 8, offset: 456)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1344, file: !20, line: 125, baseType: !1404, size: 8, offset: 464)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1344, file: !20, line: 126, baseType: !1404, size: 8, offset: 472)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1328, file: !1270, line: 572, baseType: !1344, size: 512, offset: 1216)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1328, file: !1270, line: 580, baseType: !1411, size: 64, offset: 1728)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1269, file: !1270, line: 721, baseType: !7, size: 32, offset: 3584)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1269, file: !1270, line: 722, baseType: !245, size: 32, offset: 3616)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1269, file: !1270, line: 723, baseType: !1415, size: 64, offset: 3648)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1418, line: 17, baseType: !1419)
!1418 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1418, line: 17, size: 64, elements: !1420)
!1420 = !{!1421}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1419, file: !1418, line: 17, baseType: !1422, size: 64)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 64, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 1)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1269, file: !1270, line: 724, baseType: !1417, size: 64, offset: 3712)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1269, file: !1270, line: 749, baseType: !1427, offset: 3776)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1270, line: 290, elements: !233)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1269, file: !1270, line: 751, baseType: !206, size: 128, offset: 3776)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1269, file: !1270, line: 757, baseType: !1032, size: 64, offset: 3904)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1269, file: !1270, line: 758, baseType: !1032, size: 64, offset: 3968)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1269, file: !1270, line: 761, baseType: !1432, size: 320, offset: 4032)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1209, line: 34, size: 320, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1432, file: !1209, line: 35, baseType: !408, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1432, file: !1209, line: 36, baseType: !1436, size: 256, offset: 64)
!1436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 256, elements: !1213)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1269, file: !1270, line: 766, baseType: !245, size: 32, offset: 4352)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1269, file: !1270, line: 767, baseType: !245, size: 32, offset: 4384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1269, file: !1270, line: 768, baseType: !245, size: 32, offset: 4416)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1269, file: !1270, line: 770, baseType: !245, size: 32, offset: 4448)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1269, file: !1270, line: 772, baseType: !189, size: 64, offset: 4480)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1269, file: !1270, line: 775, baseType: !7, size: 32, offset: 4544)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1269, file: !1270, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1269, file: !1270, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1269, file: !1270, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1269, file: !1270, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1269, file: !1270, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1269, file: !1270, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1269, file: !1270, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1269, file: !1270, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1269, file: !1270, line: 831, baseType: !189, size: 64, offset: 4672)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1269, file: !1270, line: 833, baseType: !1453, size: 384, offset: 4736)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1454)
!1454 = !{!1455, !1460}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1453, file: !25, line: 26, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!296, !1459}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, scope: !1453, file: !25, line: 27, baseType: !1461, size: 320, offset: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1453, file: !25, line: 27, size: 320, elements: !1462)
!1462 = !{!1463, !1473, !1500}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1461, file: !25, line: 36, baseType: !1464, size: 320)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1461, file: !25, line: 29, size: 320, elements: !1465)
!1465 = !{!1466, !1468, !1469, !1470, !1471, !1472}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1464, file: !25, line: 30, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1464, file: !25, line: 31, baseType: !402, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1464, file: !25, line: 32, baseType: !402, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1464, file: !25, line: 33, baseType: !402, size: 32, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1464, file: !25, line: 34, baseType: !408, size: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1464, file: !25, line: 35, baseType: !1467, size: 64, offset: 256)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1461, file: !25, line: 46, baseType: !1474, size: 192)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1461, file: !25, line: 38, size: 192, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1499}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1474, file: !25, line: 39, baseType: !1386, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1474, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, scope: !1474, file: !25, line: 41, baseType: !1479, size: 64, offset: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1474, file: !25, line: 41, size: 64, elements: !1480)
!1480 = !{!1481, !1489}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1479, file: !25, line: 42, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1484, line: 7, size: 128, elements: !1485)
!1484 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1485 = !{!1486, !1488}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1483, file: !1484, line: 8, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !294, line: 93, baseType: !520)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1483, file: !1484, line: 9, baseType: !520, size: 64, offset: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1479, file: !25, line: 43, baseType: !1490, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1492, line: 7, size: 64, elements: !1493)
!1492 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1493 = !{!1494, !1498}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1491, file: !1492, line: 8, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1492, line: 5, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !403, line: 20, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !405, line: 26, baseType: !245)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1491, file: !1492, line: 9, baseType: !1496, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1474, file: !25, line: 45, baseType: !408, size: 64, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1461, file: !25, line: 54, baseType: !1501, size: 256)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1461, file: !25, line: 48, size: 256, elements: !1502)
!1502 = !{!1503, !1506, !1507, !1508, !1509}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1501, file: !25, line: 49, baseType: !1504, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1501, file: !25, line: 50, baseType: !245, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1501, file: !25, line: 51, baseType: !245, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1501, file: !25, line: 52, baseType: !189, size: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1501, file: !25, line: 53, baseType: !189, size: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1269, file: !1270, line: 835, baseType: !1511, size: 32, offset: 5120)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !188, line: 22, baseType: !1512)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !294, line: 28, baseType: !245)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1269, file: !1270, line: 836, baseType: !1511, size: 32, offset: 5152)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1269, file: !1270, line: 840, baseType: !189, size: 64, offset: 5184)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1269, file: !1270, line: 849, baseType: !1268, size: 64, offset: 5248)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1269, file: !1270, line: 852, baseType: !1268, size: 64, offset: 5312)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1269, file: !1270, line: 857, baseType: !206, size: 128, offset: 5376)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1269, file: !1270, line: 858, baseType: !206, size: 128, offset: 5504)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1269, file: !1270, line: 859, baseType: !1268, size: 64, offset: 5632)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1269, file: !1270, line: 867, baseType: !206, size: 128, offset: 5696)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1269, file: !1270, line: 868, baseType: !206, size: 128, offset: 5824)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1269, file: !1270, line: 871, baseType: !1523, size: 64, offset: 5952)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !94, line: 59, size: 768, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1531, !1532, !1538, !1539}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1524, file: !94, line: 61, baseType: !1282, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1524, file: !94, line: 62, baseType: !7, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1524, file: !94, line: 63, baseType: !219, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1524, file: !94, line: 65, baseType: !1530, size: 256, offset: 64)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 256, elements: !1213)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1524, file: !94, line: 66, baseType: !625, size: 64, offset: 320)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1524, file: !94, line: 68, baseType: !1533, size: 128, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !914, line: 40, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !914, line: 36, size: 128, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1534, file: !914, line: 37, baseType: !219)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1534, file: !914, line: 38, baseType: !206, size: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1524, file: !94, line: 69, baseType: !352, size: 128, align: 64, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1524, file: !94, line: 70, baseType: !1540, size: 128, offset: 640)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1541, size: 128, elements: !1423)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !94, line: 54, size: 128, elements: !1542)
!1542 = !{!1543, !1544}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1541, file: !94, line: 55, baseType: !245, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1541, file: !94, line: 56, baseType: !1545, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !94, line: 56, flags: DIFlagFwdDecl)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1269, file: !1270, line: 872, baseType: !1548, size: 512, offset: 6016)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, size: 512, elements: !1213)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1269, file: !1270, line: 873, baseType: !206, size: 128, offset: 6528)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1269, file: !1270, line: 874, baseType: !206, size: 128, offset: 6656)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1269, file: !1270, line: 876, baseType: !1552, size: 64, offset: 6784)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1554, line: 26, size: 192, elements: !1555)
!1554 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1553, file: !1554, line: 27, baseType: !7, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1553, file: !1554, line: 28, baseType: !1558, size: 128, offset: 64)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1559, line: 43, size: 128, elements: !1560)
!1559 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1560 = !{!1561, !1562}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1558, file: !1559, line: 44, baseType: !813)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1558, file: !1559, line: 45, baseType: !206, size: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1269, file: !1270, line: 879, baseType: !695, size: 64, offset: 6848)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1269, file: !1270, line: 882, baseType: !695, size: 64, offset: 6912)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1269, file: !1270, line: 884, baseType: !408, size: 64, offset: 6976)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1269, file: !1270, line: 885, baseType: !408, size: 64, offset: 7040)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1269, file: !1270, line: 890, baseType: !408, size: 64, offset: 7104)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1269, file: !1270, line: 891, baseType: !1569, size: 128, offset: 7168)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1270, line: 242, size: 128, elements: !1570)
!1570 = !{!1571, !1572, !1573}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1569, file: !1270, line: 244, baseType: !408, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1569, file: !1270, line: 245, baseType: !408, size: 64, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1569, file: !1270, line: 246, baseType: !813, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1269, file: !1270, line: 900, baseType: !189, size: 64, offset: 7296)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1269, file: !1270, line: 901, baseType: !189, size: 64, offset: 7360)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1269, file: !1270, line: 904, baseType: !408, size: 64, offset: 7424)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1269, file: !1270, line: 907, baseType: !408, size: 64, offset: 7488)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1269, file: !1270, line: 910, baseType: !189, size: 64, offset: 7552)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1269, file: !1270, line: 911, baseType: !189, size: 64, offset: 7616)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1269, file: !1270, line: 914, baseType: !1581, size: 640, offset: 7680)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1582, line: 123, size: 640, elements: !1583)
!1582 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1583 = !{!1584, !1590, !1591}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1581, file: !1582, line: 124, baseType: !1585, size: 576)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1586, size: 576, elements: !262)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1582, line: 108, size: 192, elements: !1587)
!1587 = !{!1588, !1589}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1586, file: !1582, line: 109, baseType: !408, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1586, file: !1582, line: 110, baseType: !1395, size: 128, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1581, file: !1582, line: 125, baseType: !7, size: 32, offset: 576)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1581, file: !1582, line: 126, baseType: !7, size: 32, offset: 608)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1269, file: !1270, line: 917, baseType: !1593, size: 192, offset: 8320)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1582, line: 134, size: 192, elements: !1594)
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1593, file: !1582, line: 135, baseType: !352, size: 128, align: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1593, file: !1582, line: 136, baseType: !7, size: 32, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1269, file: !1270, line: 923, baseType: !1598, size: 64, offset: 8512)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1601, line: 111, size: 1280, elements: !1602)
!1601 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1622, !1623, !1624, !1625, !1626, !1627, !1734, !1735, !1736, !1737, !1763, !1766, !1776}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1600, file: !1601, line: 112, baseType: !787, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1600, file: !1601, line: 120, baseType: !422, size: 32, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1600, file: !1601, line: 121, baseType: !430, size: 32, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1600, file: !1601, line: 122, baseType: !422, size: 32, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1600, file: !1601, line: 123, baseType: !430, size: 32, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1600, file: !1601, line: 124, baseType: !422, size: 32, offset: 160)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1600, file: !1601, line: 125, baseType: !430, size: 32, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1600, file: !1601, line: 126, baseType: !422, size: 32, offset: 224)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1600, file: !1601, line: 127, baseType: !430, size: 32, offset: 256)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1600, file: !1601, line: 128, baseType: !7, size: 32, offset: 288)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1600, file: !1601, line: 129, baseType: !1614, size: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1615, line: 26, baseType: !1616)
!1615 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1615, line: 24, size: 64, elements: !1617)
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1616, file: !1615, line: 25, baseType: !1619, size: 64)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 64, elements: !1620)
!1620 = !{!1621}
!1621 = !DISubrange(count: 2)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1600, file: !1601, line: 130, baseType: !1614, size: 64, offset: 384)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1600, file: !1601, line: 131, baseType: !1614, size: 64, offset: 448)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1600, file: !1601, line: 132, baseType: !1614, size: 64, offset: 512)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1600, file: !1601, line: 133, baseType: !1614, size: 64, offset: 576)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1600, file: !1601, line: 135, baseType: !414, size: 8, offset: 640)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1600, file: !1601, line: 137, baseType: !1628, size: 64, offset: 704)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1630, line: 189, size: 1664, elements: !1631)
!1630 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1631 = !{!1632, !1633, !1636, !1641, !1642, !1645, !1646, !1651, !1652, !1653, !1654, !1656, !1657, !1658, !1659, !1660, !1698, !1719}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1629, file: !1630, line: 190, baseType: !1282, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1629, file: !1630, line: 191, baseType: !1634, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1630, line: 28, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !188, line: 98, baseType: !1496)
!1636 = !DIDerivedType(tag: DW_TAG_member, scope: !1629, file: !1630, line: 192, baseType: !1637, size: 192, offset: 64)
!1637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1629, file: !1630, line: 192, size: 192, elements: !1638)
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1637, file: !1630, line: 193, baseType: !206, size: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1637, file: !1630, line: 194, baseType: !800, size: 192, align: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1629, file: !1630, line: 199, baseType: !807, size: 256, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1629, file: !1630, line: 200, baseType: !1643, size: 64, offset: 512)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1630, line: 200, flags: DIFlagFwdDecl)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1629, file: !1630, line: 201, baseType: !334, size: 64, offset: 576)
!1646 = !DIDerivedType(tag: DW_TAG_member, scope: !1629, file: !1630, line: 202, baseType: !1647, size: 64, offset: 640)
!1647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1629, file: !1630, line: 202, size: 64, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1647, file: !1630, line: 203, baseType: !526, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1647, file: !1630, line: 204, baseType: !526, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1629, file: !1630, line: 206, baseType: !526, size: 64, offset: 704)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1629, file: !1630, line: 207, baseType: !422, size: 32, offset: 768)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1629, file: !1630, line: 208, baseType: !430, size: 32, offset: 800)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1629, file: !1630, line: 209, baseType: !1655, size: 32, offset: 832)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1630, line: 31, baseType: !546)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1629, file: !1630, line: 210, baseType: !303, size: 16, offset: 864)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1629, file: !1630, line: 211, baseType: !303, size: 16, offset: 880)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1629, file: !1630, line: 215, baseType: !1257, size: 16, offset: 896)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1629, file: !1630, line: 222, baseType: !189, size: 64, offset: 960)
!1660 = !DIDerivedType(tag: DW_TAG_member, scope: !1629, file: !1630, line: 239, baseType: !1661, size: 320, offset: 1024)
!1661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1629, file: !1630, line: 239, size: 320, elements: !1662)
!1662 = !{!1663, !1690}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1661, file: !1630, line: 240, baseType: !1664, size: 320)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1630, line: 108, size: 320, elements: !1665)
!1665 = !{!1666, !1667, !1679, !1682, !1689}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1664, file: !1630, line: 110, baseType: !189, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, scope: !1664, file: !1630, line: 111, baseType: !1668, size: 64, offset: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1664, file: !1630, line: 111, size: 64, elements: !1669)
!1669 = !{!1670, !1678}
!1670 = !DIDerivedType(tag: DW_TAG_member, scope: !1668, file: !1630, line: 112, baseType: !1671, size: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1668, file: !1630, line: 112, size: 64, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1671, file: !1630, line: 114, baseType: !899, size: 16)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1671, file: !1630, line: 115, baseType: !1675, size: 48, offset: 16)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 48, elements: !1676)
!1676 = !{!1677}
!1677 = !DISubrange(count: 6)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1668, file: !1630, line: 121, baseType: !189, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1664, file: !1630, line: 123, baseType: !1680, size: 64, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1630, line: 96, flags: DIFlagFwdDecl)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1664, file: !1630, line: 124, baseType: !1683, size: 64, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1630, line: 102, size: 192, elements: !1685)
!1685 = !{!1686, !1687, !1688}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1684, file: !1630, line: 103, baseType: !352, size: 128, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1684, file: !1630, line: 104, baseType: !1282, size: 32, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1684, file: !1630, line: 105, baseType: !477, size: 8, offset: 160)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1664, file: !1630, line: 125, baseType: !202, size: 64, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, scope: !1661, file: !1630, line: 241, baseType: !1691, size: 320)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1661, file: !1630, line: 241, size: 320, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1691, file: !1630, line: 242, baseType: !189, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1691, file: !1630, line: 243, baseType: !189, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1691, file: !1630, line: 244, baseType: !1680, size: 64, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1691, file: !1630, line: 245, baseType: !1683, size: 64, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1691, file: !1630, line: 246, baseType: !261, size: 64, offset: 256)
!1698 = !DIDerivedType(tag: DW_TAG_member, scope: !1629, file: !1630, line: 254, baseType: !1699, size: 256, offset: 1344)
!1699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1629, file: !1630, line: 254, size: 256, elements: !1700)
!1700 = !{!1701, !1707}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1699, file: !1630, line: 255, baseType: !1702, size: 256)
!1702 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1630, line: 128, size: 256, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1702, file: !1630, line: 129, baseType: !334, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1702, file: !1630, line: 130, baseType: !1706, size: 256)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 256, elements: !1213)
!1707 = !DIDerivedType(tag: DW_TAG_member, scope: !1699, file: !1630, line: 256, baseType: !1708, size: 256)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1699, file: !1630, line: 256, size: 256, elements: !1709)
!1709 = !{!1710, !1711}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1708, file: !1630, line: 258, baseType: !206, size: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1708, file: !1630, line: 259, baseType: !1712, size: 128, offset: 128)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1713, line: 22, size: 128, elements: !1714)
!1713 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1714 = !{!1715, !1718}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1712, file: !1713, line: 23, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1713, line: 23, flags: DIFlagFwdDecl)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1712, file: !1713, line: 24, baseType: !189, size: 64, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1629, file: !1630, line: 274, baseType: !1720, size: 64, offset: 1600)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1630, line: 170, size: 192, elements: !1722)
!1722 = !{!1723, !1732, !1733}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1721, file: !1630, line: 171, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1630, line: 165, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!245, !1628, !1728, !1730, !1628}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1681)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1721, file: !1630, line: 172, baseType: !1628, size: 64, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1721, file: !1630, line: 173, baseType: !1680, size: 64, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1600, file: !1601, line: 138, baseType: !1628, size: 64, offset: 768)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1600, file: !1601, line: 139, baseType: !1628, size: 64, offset: 832)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1600, file: !1601, line: 140, baseType: !1628, size: 64, offset: 896)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1600, file: !1601, line: 145, baseType: !1738, size: 64, offset: 960)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1740, line: 13, size: 896, elements: !1741)
!1740 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1741 = !{!1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1739, file: !1740, line: 14, baseType: !1282, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1739, file: !1740, line: 15, baseType: !787, size: 32, offset: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1739, file: !1740, line: 16, baseType: !787, size: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1739, file: !1740, line: 21, baseType: !717, size: 64, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1739, file: !1740, line: 27, baseType: !189, size: 64, offset: 192)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1739, file: !1740, line: 28, baseType: !189, size: 64, offset: 256)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1739, file: !1740, line: 29, baseType: !717, size: 64, offset: 320)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1739, file: !1740, line: 32, baseType: !629, size: 128, offset: 384)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1739, file: !1740, line: 33, baseType: !422, size: 32, offset: 512)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1739, file: !1740, line: 37, baseType: !717, size: 64, offset: 576)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1739, file: !1740, line: 44, baseType: !1753, size: 256, offset: 640)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1754, line: 15, size: 256, elements: !1755)
!1754 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1753, file: !1754, line: 16, baseType: !813)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1753, file: !1754, line: 18, baseType: !245, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1753, file: !1754, line: 19, baseType: !245, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1753, file: !1754, line: 20, baseType: !245, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1753, file: !1754, line: 21, baseType: !245, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1753, file: !1754, line: 22, baseType: !189, size: 64, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1753, file: !1754, line: 23, baseType: !189, size: 64, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1600, file: !1601, line: 146, baseType: !1764, size: 64, offset: 1024)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !423, line: 18, flags: DIFlagFwdDecl)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1600, file: !1601, line: 147, baseType: !1767, size: 64, offset: 1088)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1601, line: 25, size: 64, elements: !1769)
!1769 = !{!1770, !1771, !1772}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1768, file: !1601, line: 26, baseType: !787, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1768, file: !1601, line: 27, baseType: !245, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1768, file: !1601, line: 28, baseType: !1773, offset: 64)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, elements: !1774)
!1774 = !{!1775}
!1775 = !DISubrange(count: 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, scope: !1600, file: !1601, line: 149, baseType: !1777, size: 128, offset: 1152)
!1777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1600, file: !1601, line: 149, size: 128, elements: !1778)
!1778 = !{!1779, !1780}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1777, file: !1601, line: 150, baseType: !245, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1777, file: !1601, line: 151, baseType: !352, size: 128, align: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1269, file: !1270, line: 926, baseType: !1598, size: 64, offset: 8576)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1269, file: !1270, line: 929, baseType: !1598, size: 64, offset: 8640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1269, file: !1270, line: 933, baseType: !1628, size: 64, offset: 8704)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1269, file: !1270, line: 943, baseType: !1785, size: 128, offset: 8768)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 128, elements: !1786)
!1786 = !{!1787}
!1787 = !DISubrange(count: 16)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1269, file: !1270, line: 945, baseType: !1789, size: 64, offset: 8896)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1270, line: 49, flags: DIFlagFwdDecl)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1269, file: !1270, line: 956, baseType: !1792, size: 64, offset: 8960)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1270, line: 45, flags: DIFlagFwdDecl)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1269, file: !1270, line: 959, baseType: !1795, size: 64, offset: 9024)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1270, line: 959, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1269, file: !1270, line: 962, baseType: !1798, size: 64, offset: 9088)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1270, line: 66, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1269, file: !1270, line: 966, baseType: !1801, size: 64, offset: 9152)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1803, line: 35, flags: DIFlagFwdDecl)
!1803 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1269, file: !1270, line: 969, baseType: !1805, size: 64, offset: 9216)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1807, line: 82, size: 7296, elements: !1808)
!1807 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1844, !1853, !1854, !1856, !1857, !1858, !1861, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1891, !1892, !1899, !1900, !1901, !1902, !1903, !1904}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1806, file: !1807, line: 83, baseType: !1282, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1806, file: !1807, line: 84, baseType: !787, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1806, file: !1807, line: 85, baseType: !245, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1806, file: !1807, line: 86, baseType: !206, size: 128, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1806, file: !1807, line: 88, baseType: !1533, size: 128, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1806, file: !1807, line: 91, baseType: !1268, size: 64, offset: 384)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1806, file: !1807, line: 94, baseType: !1816, size: 192, offset: 448)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1817, line: 30, size: 192, elements: !1818)
!1817 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1816, file: !1817, line: 31, baseType: !206, size: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1816, file: !1817, line: 32, baseType: !1821, size: 64, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1822, line: 25, baseType: !1823)
!1822 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1822, line: 23, size: 64, elements: !1824)
!1824 = !{!1825}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1823, file: !1822, line: 24, baseType: !1422, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1806, file: !1807, line: 97, baseType: !625, size: 64, offset: 640)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1806, file: !1807, line: 100, baseType: !245, size: 32, offset: 704)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1806, file: !1807, line: 106, baseType: !245, size: 32, offset: 736)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1806, file: !1807, line: 107, baseType: !1268, size: 64, offset: 768)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1806, file: !1807, line: 110, baseType: !245, size: 32, offset: 832)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1806, file: !1807, line: 111, baseType: !7, size: 32, offset: 864)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1806, file: !1807, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1806, file: !1807, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1806, file: !1807, line: 128, baseType: !245, size: 32, offset: 928)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1806, file: !1807, line: 129, baseType: !206, size: 128, offset: 960)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1806, file: !1807, line: 132, baseType: !1344, size: 512, offset: 1088)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1806, file: !1807, line: 133, baseType: !1352, size: 64, offset: 1600)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1806, file: !1807, line: 140, baseType: !1839, size: 256, offset: 1664)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 256, elements: !1620)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1807, line: 38, size: 128, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1840, file: !1807, line: 39, baseType: !408, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1840, file: !1807, line: 40, baseType: !408, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1806, file: !1807, line: 146, baseType: !1845, size: 192, offset: 1920)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1807, line: 66, size: 192, elements: !1846)
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1845, file: !1807, line: 67, baseType: !1848, size: 192)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1807, line: 47, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1848, file: !1807, line: 48, baseType: !719, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1848, file: !1807, line: 49, baseType: !719, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1848, file: !1807, line: 50, baseType: !719, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1806, file: !1807, line: 150, baseType: !1581, size: 640, offset: 2112)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1806, file: !1807, line: 153, baseType: !1855, size: 256, offset: 2752)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 256, elements: !1213)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1806, file: !1807, line: 159, baseType: !1523, size: 64, offset: 3008)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1806, file: !1807, line: 162, baseType: !245, size: 32, offset: 3072)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1806, file: !1807, line: 164, baseType: !1859, size: 64, offset: 3136)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1807, line: 164, flags: DIFlagFwdDecl)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1806, file: !1807, line: 175, baseType: !1862, size: 32, offset: 3200)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !375, line: 805, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !375, line: 798, size: 32, elements: !1864)
!1864 = !{!1865, !1866}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1863, file: !375, line: 803, baseType: !374, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1863, file: !375, line: 804, baseType: !219, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1806, file: !1807, line: 176, baseType: !408, size: 64, offset: 3264)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1806, file: !1807, line: 176, baseType: !408, size: 64, offset: 3328)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1806, file: !1807, line: 176, baseType: !408, size: 64, offset: 3392)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1806, file: !1807, line: 176, baseType: !408, size: 64, offset: 3456)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1806, file: !1807, line: 177, baseType: !408, size: 64, offset: 3520)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1806, file: !1807, line: 178, baseType: !408, size: 64, offset: 3584)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1806, file: !1807, line: 179, baseType: !1569, size: 128, offset: 3648)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1806, file: !1807, line: 180, baseType: !189, size: 64, offset: 3776)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1806, file: !1807, line: 180, baseType: !189, size: 64, offset: 3840)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1806, file: !1807, line: 180, baseType: !189, size: 64, offset: 3904)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1806, file: !1807, line: 180, baseType: !189, size: 64, offset: 3968)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1806, file: !1807, line: 181, baseType: !189, size: 64, offset: 4032)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1806, file: !1807, line: 181, baseType: !189, size: 64, offset: 4096)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1806, file: !1807, line: 181, baseType: !189, size: 64, offset: 4160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1806, file: !1807, line: 181, baseType: !189, size: 64, offset: 4224)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1806, file: !1807, line: 182, baseType: !189, size: 64, offset: 4288)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1806, file: !1807, line: 182, baseType: !189, size: 64, offset: 4352)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1806, file: !1807, line: 182, baseType: !189, size: 64, offset: 4416)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1806, file: !1807, line: 182, baseType: !189, size: 64, offset: 4480)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1806, file: !1807, line: 183, baseType: !189, size: 64, offset: 4544)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1806, file: !1807, line: 183, baseType: !189, size: 64, offset: 4608)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1806, file: !1807, line: 184, baseType: !1889, offset: 4672)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1890, line: 12, elements: !233)
!1890 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1806, file: !1807, line: 192, baseType: !410, size: 64, offset: 4672)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1806, file: !1807, line: 203, baseType: !1893, size: 2048, offset: 4736)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 2048, elements: !1786)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1895, line: 43, size: 128, elements: !1896)
!1895 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1894, file: !1895, line: 44, baseType: !310, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1894, file: !1895, line: 45, baseType: !310, size: 64, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1806, file: !1807, line: 220, baseType: !477, size: 8, offset: 6784)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1806, file: !1807, line: 221, baseType: !1257, size: 16, offset: 6800)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1806, file: !1807, line: 222, baseType: !1257, size: 16, offset: 6816)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1806, file: !1807, line: 224, baseType: !1032, size: 64, offset: 6848)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1806, file: !1807, line: 227, baseType: !713, size: 192, offset: 6912)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1806, file: !1807, line: 233, baseType: !713, size: 192, offset: 7104)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1269, file: !1270, line: 970, baseType: !1906, size: 64, offset: 9280)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1807, line: 20, size: 16576, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1907, file: !1807, line: 21, baseType: !219)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1907, file: !1807, line: 22, baseType: !1282, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1907, file: !1807, line: 23, baseType: !1533, size: 128, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1907, file: !1807, line: 24, baseType: !1913, size: 16384, offset: 192)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 16384, elements: !266)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1817, line: 49, size: 256, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1914, file: !1817, line: 50, baseType: !1917, size: 256)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1817, line: 35, size: 256, elements: !1918)
!1918 = !{!1919, !1926, !1927, !1933}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1917, file: !1817, line: 37, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1921, line: 19, baseType: !1922)
!1921 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1921, line: 18, baseType: !1924)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{null, !245}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1917, file: !1817, line: 38, baseType: !189, size: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1917, file: !1817, line: 44, baseType: !1928, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1921, line: 22, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1921, line: 21, baseType: !1931)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{null}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1917, file: !1817, line: 46, baseType: !1821, size: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1269, file: !1270, line: 971, baseType: !1821, size: 64, offset: 9344)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1269, file: !1270, line: 972, baseType: !1821, size: 64, offset: 9408)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1269, file: !1270, line: 974, baseType: !1821, size: 64, offset: 9472)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1269, file: !1270, line: 975, baseType: !1816, size: 192, offset: 9536)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1269, file: !1270, line: 976, baseType: !189, size: 64, offset: 9728)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1269, file: !1270, line: 977, baseType: !308, size: 64, offset: 9792)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1269, file: !1270, line: 978, baseType: !7, size: 32, offset: 9856)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1269, file: !1270, line: 980, baseType: !355, size: 64, offset: 9920)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1269, file: !1270, line: 989, baseType: !1943, size: 128, offset: 9984)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1944, line: 35, size: 128, elements: !1945)
!1944 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1945 = !{!1946, !1947, !1948}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1943, file: !1944, line: 36, baseType: !245, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1943, file: !1944, line: 37, baseType: !787, size: 32, offset: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1943, file: !1944, line: 38, baseType: !1949, size: 64, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1944, line: 23, flags: DIFlagFwdDecl)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1269, file: !1270, line: 992, baseType: !408, size: 64, offset: 10112)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1269, file: !1270, line: 993, baseType: !408, size: 64, offset: 10176)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1269, file: !1270, line: 996, baseType: !219, offset: 10240)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1269, file: !1270, line: 999, baseType: !813, offset: 10240)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1269, file: !1270, line: 1001, baseType: !1956, size: 64, offset: 10240)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1270, line: 636, size: 64, elements: !1957)
!1957 = !{!1958}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1956, file: !1270, line: 637, baseType: !1959, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1269, file: !1270, line: 1005, baseType: !792, size: 128, offset: 10304)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1269, file: !1270, line: 1007, baseType: !1268, size: 64, offset: 10432)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1269, file: !1270, line: 1009, baseType: !1963, size: 64, offset: 10496)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1270, line: 1009, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1269, file: !1270, line: 1043, baseType: !334, size: 64, offset: 10560)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1269, file: !1270, line: 1046, baseType: !1967, size: 64, offset: 10624)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1969, line: 554, size: 128, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !2990}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1968, file: !1969, line: 555, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1974, line: 203, size: 832, elements: !1975)
!1974 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1975 = !{!1976, !1977, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2958, !2963, !2964, !2983, !2984, !2985, !2986, !2987, !2989}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1973, file: !1974, line: 204, baseType: !1972, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1973, file: !1974, line: 205, baseType: !1978, size: 64, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1980, line: 167, size: 8512, elements: !1981)
!1980 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !{!1982, !1983, !1984, !1985, !1989, !1990, !1991, !2065, !2066, !2255, !2925, !2926, !2927, !2928, !2929, !2930, !2933, !2934, !2937, !2938, !2939, !2942}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1979, file: !1980, line: 171, baseType: !245, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1979, file: !1980, line: 172, baseType: !245, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1979, file: !1980, line: 173, baseType: !245, size: 32, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1979, file: !1980, line: 176, baseType: !1986, size: 256, offset: 96)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 256, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1979, file: !1980, line: 178, baseType: !303, size: 16, offset: 352)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1979, file: !1980, line: 179, baseType: !303, size: 16, offset: 368)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1979, file: !1980, line: 186, baseType: !1992, size: 64, offset: 384)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1980, line: 149, size: 256, elements: !1994)
!1994 = !{!1995, !1996, !1997, !2061}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1993, file: !1980, line: 150, baseType: !352, size: 128, align: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1993, file: !1980, line: 151, baseType: !245, size: 32, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1993, file: !1980, line: 152, baseType: !1998, size: 64, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1980, line: 53, size: 6592, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004, !2007, !2028, !2029, !2030, !2031, !2032, !2042}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1999, file: !1980, line: 54, baseType: !870, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1999, file: !1980, line: 60, baseType: !870, size: 64, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1999, file: !1980, line: 64, baseType: !189, size: 64, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1999, file: !1980, line: 65, baseType: !2005, size: 64, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1980, line: 65, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1999, file: !1980, line: 66, baseType: !2008, size: 128, offset: 256)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2009, line: 105, size: 128, elements: !2010)
!2009 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2008, file: !2009, line: 110, baseType: !189, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2008, file: !2009, line: 118, baseType: !2013, size: 64, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2009, line: 95, size: 448, elements: !2015)
!2015 = !{!2016, !2017, !2023, !2024, !2025, !2026, !2027}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2014, file: !2009, line: 96, baseType: !717, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2014, file: !2009, line: 97, baseType: !2018, size: 64, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2009, line: 60, baseType: !2020)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !2022}
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2014, file: !2009, line: 98, baseType: !2018, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2014, file: !2009, line: 99, baseType: !477, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2014, file: !2009, line: 100, baseType: !477, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2014, file: !2009, line: 101, baseType: !352, size: 128, align: 64, offset: 256)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2014, file: !2009, line: 102, baseType: !2022, size: 64, offset: 384)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1999, file: !1980, line: 68, baseType: !195, size: 5568, offset: 384)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1999, file: !1980, line: 69, baseType: !212, size: 64, offset: 5952)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1999, file: !1980, line: 70, baseType: !245, size: 32, offset: 6016)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1999, file: !1980, line: 70, baseType: !245, size: 32, offset: 6048)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1999, file: !1980, line: 71, baseType: !2033, size: 64, offset: 6080)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1980, line: 48, size: 808, elements: !2035)
!2035 = !{!2036, !2040}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2034, file: !1980, line: 49, baseType: !2037, size: 296)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 296, elements: !2038)
!2038 = !{!2039}
!2039 = !DISubrange(count: 37)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2034, file: !1980, line: 50, baseType: !2041, size: 512, offset: 296)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 512, elements: !266)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1999, file: !1980, line: 75, baseType: !2043, size: 448, offset: 6144)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2044, line: 124, size: 448, elements: !2045)
!2044 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2045 = !{!2046, !2057, !2058}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2043, file: !2044, line: 125, baseType: !2047, size: 256)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2044, line: 102, size: 256, elements: !2048)
!2048 = !{!2049, !2050, !2051}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2047, file: !2044, line: 103, baseType: !717, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2047, file: !2044, line: 104, baseType: !206, size: 128, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2047, file: !2044, line: 105, baseType: !2052, size: 64, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2044, line: 21, baseType: !2053)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{null, !2056}
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2043, file: !2044, line: 126, baseType: !352, size: 128, align: 64, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2043, file: !2044, line: 129, baseType: !2059, size: 64, offset: 384)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2044, line: 18, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1993, file: !1980, line: 153, baseType: !2062, offset: 256)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1998, elements: !2063)
!2063 = !{!2064}
!2064 = !DISubrange(count: -1)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1979, file: !1980, line: 187, baseType: !1999, size: 6592, offset: 448)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1979, file: !1980, line: 189, baseType: !2067, size: 64, offset: 7040)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !43, line: 1844, size: 960, elements: !2070)
!2070 = !{!2071, !2076, !2184, !2188, !2192, !2196, !2197, !2201, !2205, !2209, !2215, !2219, !2245, !2250, !2251}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2069, file: !43, line: 1845, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!2075, !1972}
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1974, line: 515, baseType: !7)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2069, file: !43, line: 1846, baseType: !2077, size: 64, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!245, !2080, !2183}
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1974, line: 22, size: 1344, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2181, !2182}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2081, file: !1974, line: 23, baseType: !500, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2081, file: !1974, line: 24, baseType: !245, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2081, file: !1974, line: 25, baseType: !416, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2081, file: !1974, line: 26, baseType: !586, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2081, file: !1974, line: 27, baseType: !713, size: 192, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2081, file: !1974, line: 28, baseType: !334, size: 64, offset: 384)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2081, file: !1974, line: 29, baseType: !334, size: 64, offset: 448)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2081, file: !1974, line: 30, baseType: !245, size: 32, offset: 512)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2081, file: !1974, line: 31, baseType: !477, size: 8, offset: 544)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2081, file: !1974, line: 33, baseType: !206, size: 128, offset: 576)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2081, file: !1974, line: 35, baseType: !2080, size: 64, offset: 704)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2081, file: !1974, line: 36, baseType: !1404, size: 8, offset: 768)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2081, file: !1974, line: 37, baseType: !1998, size: 64, offset: 832)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2081, file: !1974, line: 39, baseType: !7, size: 32, offset: 896)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2081, file: !1974, line: 41, baseType: !219, offset: 928)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2081, file: !1974, line: 42, baseType: !1978, size: 64, offset: 960)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2081, file: !1974, line: 43, baseType: !2100, size: 64, offset: 1024)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !31, line: 165, size: 4672, elements: !2102)
!2102 = !{!2103, !2104, !2105, !2106, !2107, !2108, !2113, !2114, !2115, !2116, !2117, !2118, !2174, !2175, !2176, !2177, !2179, !2180}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2101, file: !31, line: 166, baseType: !408, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2101, file: !31, line: 167, baseType: !800, size: 192, align: 64, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2101, file: !31, line: 168, baseType: !206, size: 128, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2101, file: !31, line: 169, baseType: !189, size: 64, offset: 384)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2101, file: !31, line: 170, baseType: !189, size: 64, offset: 448)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2101, file: !31, line: 172, baseType: !2109, size: 32, offset: 512)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2110, line: 19, size: 32, elements: !2111)
!2110 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2109, file: !2110, line: 20, baseType: !1282, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2101, file: !31, line: 173, baseType: !7, size: 32, offset: 544)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2101, file: !31, line: 174, baseType: !7, size: 32, offset: 576)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2101, file: !31, line: 175, baseType: !7, size: 32, offset: 608)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2101, file: !31, line: 175, baseType: !7, size: 32, offset: 640)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2101, file: !31, line: 181, baseType: !717, size: 64, offset: 704)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2101, file: !31, line: 183, baseType: !2119, size: 2688, offset: 768)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !31, line: 107, size: 2688, elements: !2120)
!2120 = !{!2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2150, !2151, !2152, !2153, !2154, !2172, !2173}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2119, file: !31, line: 108, baseType: !2100, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2119, file: !31, line: 110, baseType: !189, size: 64, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2119, file: !31, line: 111, baseType: !189, size: 64, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2119, file: !31, line: 113, baseType: !206, size: 128, offset: 192)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2119, file: !31, line: 114, baseType: !206, size: 128, offset: 320)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2119, file: !31, line: 115, baseType: !206, size: 128, offset: 448)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2119, file: !31, line: 116, baseType: !206, size: 128, offset: 576)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2119, file: !31, line: 117, baseType: !219, offset: 704)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2119, file: !31, line: 119, baseType: !2130, size: 256, offset: 704)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2131, size: 256, elements: !1213)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2132, line: 97, size: 64, elements: !2133)
!2132 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2133 = !{!2134}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2131, file: !2132, line: 98, baseType: !723, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2119, file: !31, line: 121, baseType: !189, size: 64, offset: 960)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2119, file: !31, line: 123, baseType: !189, size: 64, offset: 1024)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2119, file: !31, line: 124, baseType: !189, size: 64, offset: 1088)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2119, file: !31, line: 125, baseType: !189, size: 64, offset: 1152)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2119, file: !31, line: 126, baseType: !189, size: 64, offset: 1216)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2119, file: !31, line: 127, baseType: !189, size: 64, offset: 1280)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2119, file: !31, line: 135, baseType: !189, size: 64, offset: 1344)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2119, file: !31, line: 136, baseType: !189, size: 64, offset: 1408)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2119, file: !31, line: 138, baseType: !2144, size: 128, offset: 1472)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2145, line: 76, size: 128, elements: !2146)
!2145 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2146 = !{!2147, !2148, !2149}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2144, file: !2145, line: 78, baseType: !2131, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2144, file: !2145, line: 80, baseType: !7, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2144, file: !2145, line: 81, baseType: !813, offset: 96)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2119, file: !31, line: 139, baseType: !245, size: 32, offset: 1600)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2119, file: !31, line: 140, baseType: !30, size: 32, offset: 1632)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2119, file: !31, line: 142, baseType: !219, offset: 1664)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2119, file: !31, line: 143, baseType: !206, size: 128, offset: 1664)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2119, file: !31, line: 144, baseType: !2155, size: 704, offset: 1792)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2044, line: 115, size: 704, elements: !2156)
!2156 = !{!2157, !2158, !2170, !2171}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2155, file: !2044, line: 116, baseType: !2047, size: 256)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2155, file: !2044, line: 117, baseType: !2159, size: 320, offset: 256)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2160, line: 11, size: 320, elements: !2161)
!2160 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2161 = !{!2162, !2163, !2164, !2169}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2159, file: !2160, line: 16, baseType: !629, size: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2159, file: !2160, line: 17, baseType: !189, size: 64, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2159, file: !2160, line: 18, baseType: !2165, size: 64, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{null, !2168}
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2159, file: !2160, line: 19, baseType: !402, size: 32, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2155, file: !2044, line: 120, baseType: !2059, size: 64, offset: 576)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2155, file: !2044, line: 121, baseType: !245, size: 32, offset: 640)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2119, file: !31, line: 146, baseType: !189, size: 64, offset: 2496)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2119, file: !31, line: 148, baseType: !206, size: 128, offset: 2560)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2101, file: !31, line: 184, baseType: !206, size: 128, offset: 3456)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2101, file: !31, line: 190, baseType: !1533, size: 128, offset: 3584)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2101, file: !31, line: 192, baseType: !194, size: 64, offset: 3712)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2101, file: !31, line: 193, baseType: !2178, size: 512, offset: 3776)
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 512, elements: !266)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2101, file: !31, line: 194, baseType: !194, size: 64, offset: 4288)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2101, file: !31, line: 196, baseType: !2159, size: 320, offset: 4352)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2081, file: !1974, line: 46, baseType: !245, size: 32, offset: 1088)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2081, file: !1974, line: 48, baseType: !713, size: 192, offset: 1152)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !188, line: 150, baseType: !7)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2069, file: !43, line: 1847, baseType: !2185, size: 64, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{null, !1978, !2183}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2069, file: !43, line: 1848, baseType: !2189, size: 64, offset: 192)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!245, !2080, !870, !760, !7}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2069, file: !43, line: 1849, baseType: !2193, size: 64, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{!245, !2080, !2183, !7, !189}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2069, file: !43, line: 1850, baseType: !2193, size: 64, offset: 320)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2069, file: !43, line: 1851, baseType: !2198, size: 64, offset: 384)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!7, !1978, !7}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2069, file: !43, line: 1853, baseType: !2202, size: 64, offset: 448)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{null, !1978}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2069, file: !43, line: 1854, baseType: !2206, size: 64, offset: 512)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!245, !1978}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2069, file: !43, line: 1855, baseType: !2210, size: 64, offset: 576)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!245, !2080, !2213}
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !85, line: 51, flags: DIFlagFwdDecl)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2069, file: !43, line: 1857, baseType: !2216, size: 64, offset: 640)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{null, !2080, !189}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2069, file: !43, line: 1858, baseType: !2220, size: 64, offset: 704)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!245, !1978, !870, !7, !2223, !334}
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !43, line: 354, baseType: !2224)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!245, !2227, !7, !334}
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2229, line: 106, size: 512, elements: !2230)
!2229 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2230 = !{!2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2240, !2241}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2228, file: !2229, line: 107, baseType: !409, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2228, file: !2229, line: 108, baseType: !409, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2228, file: !2229, line: 109, baseType: !409, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2228, file: !2229, line: 110, baseType: !1405, size: 8, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2228, file: !2229, line: 111, baseType: !1405, size: 8, offset: 200)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2228, file: !2229, line: 112, baseType: !1405, size: 8, offset: 208)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2228, file: !2229, line: 113, baseType: !1405, size: 8, offset: 216)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2228, file: !2229, line: 114, baseType: !2239, size: 32, offset: 224)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 32, elements: !1213)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2228, file: !2229, line: 115, baseType: !409, size: 64, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2228, file: !2229, line: 116, baseType: !2242, size: 192, offset: 320)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 192, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 24)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2069, file: !43, line: 1860, baseType: !2246, size: 64, offset: 768)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!261, !1978, !2249}
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2069, file: !43, line: 1861, baseType: !620, size: 64, offset: 832)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2069, file: !43, line: 1862, baseType: !2252, size: 64, offset: 896)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2254)
!2254 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !43, line: 41, flags: DIFlagFwdDecl)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1979, file: !1980, line: 190, baseType: !2256, size: 64, offset: 7104)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !43, line: 399, size: 14464, elements: !2258)
!2258 = !{!2259, !2475, !2597, !2598, !2601, !2604, !2700, !2701, !2702, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2761, !2770, !2771, !2772, !2773, !2774, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2880, !2881, !2882, !2883, !2884, !2885, !2918, !2919, !2920, !2921}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2257, file: !43, line: 400, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !43, line: 130, size: 2176, elements: !2262)
!2262 = !{!2263, !2264, !2267, !2350, !2351, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2365, !2378, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2473, !2474}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2261, file: !43, line: 131, baseType: !2256, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2261, file: !43, line: 132, baseType: !2265, size: 64, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !43, line: 132, flags: DIFlagFwdDecl)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2261, file: !43, line: 133, baseType: !2268, size: 64, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !176, line: 16, size: 4032, elements: !2270)
!2270 = !{!2271, !2277, !2278, !2281, !2282, !2283, !2284, !2285, !2286, !2289, !2290, !2305, !2306, !2307, !2308, !2309, !2311, !2312, !2313, !2314, !2317, !2318, !2319, !2320, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335}
!2271 = !DIDerivedType(tag: DW_TAG_member, scope: !2269, file: !176, line: 17, baseType: !2272, size: 192)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2269, file: !176, line: 17, size: 192, elements: !2273)
!2273 = !{!2274, !2275, !2276}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2272, file: !176, line: 19, baseType: !219)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2272, file: !176, line: 27, baseType: !206, size: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2272, file: !176, line: 32, baseType: !189, size: 64, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2269, file: !176, line: 38, baseType: !2155, size: 704, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2269, file: !176, line: 40, baseType: !2279, size: 64, offset: 896)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1418, line: 756, baseType: !2280)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1419, size: 64, elements: !1423)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2269, file: !176, line: 45, baseType: !245, size: 32, offset: 960)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2269, file: !176, line: 50, baseType: !245, size: 32, offset: 992)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2269, file: !176, line: 53, baseType: !189, size: 64, offset: 1024)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2269, file: !176, line: 59, baseType: !334, size: 64, offset: 1088)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2269, file: !176, line: 63, baseType: !2256, size: 64, offset: 1152)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2269, file: !176, line: 65, baseType: !2287, size: 64, offset: 1216)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !43, line: 40, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2269, file: !176, line: 71, baseType: !334, size: 64, offset: 1280)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2269, file: !176, line: 77, baseType: !2291, size: 192, offset: 1344)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2292, line: 48, size: 192, elements: !2293)
!2292 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2293 = !{!2294, !2295, !2296, !2297}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2291, file: !2292, line: 52, baseType: !7, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2291, file: !2292, line: 57, baseType: !7, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2291, file: !2292, line: 62, baseType: !7, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2291, file: !2292, line: 67, baseType: !2298, size: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2292, line: 20, size: 192, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2299, file: !2292, line: 24, baseType: !189, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2299, file: !2292, line: 29, baseType: !189, size: 64, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2299, file: !2292, line: 34, baseType: !189, size: 64, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2299, file: !2292, line: 39, baseType: !219, offset: 192)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2269, file: !176, line: 83, baseType: !2265, size: 64, offset: 1536)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2269, file: !176, line: 89, baseType: !7, size: 32, offset: 1600)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2269, file: !176, line: 92, baseType: !303, size: 16, offset: 1632)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2269, file: !176, line: 94, baseType: !303, size: 16, offset: 1648)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2269, file: !176, line: 96, baseType: !2310, size: 64, offset: 1664)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2269, file: !176, line: 99, baseType: !219, offset: 1728)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2269, file: !176, line: 104, baseType: !913, size: 320, offset: 1728)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2269, file: !176, line: 110, baseType: !787, size: 32, offset: 2048)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2269, file: !176, line: 116, baseType: !2315, size: 64, offset: 2112)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !176, line: 9, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2269, file: !176, line: 122, baseType: !2315, size: 64, offset: 2176)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2269, file: !176, line: 125, baseType: !189, size: 64, offset: 2240)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2269, file: !176, line: 127, baseType: !189, size: 64, offset: 2304)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2269, file: !176, line: 130, baseType: !2321, size: 448, offset: 2368)
!2321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 448, elements: !2322)
!2322 = !{!2323}
!2323 = !DISubrange(count: 7)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2269, file: !176, line: 133, baseType: !7, size: 32, offset: 2816)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2269, file: !176, line: 135, baseType: !7, size: 32, offset: 2848)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2269, file: !176, line: 141, baseType: !787, size: 32, offset: 2880)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2269, file: !176, line: 145, baseType: !787, size: 32, offset: 2912)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2269, file: !176, line: 148, baseType: !629, size: 128, offset: 2944)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2269, file: !176, line: 150, baseType: !629, size: 128, offset: 3072)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2269, file: !176, line: 152, baseType: !198, size: 512, offset: 3200)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2269, file: !176, line: 155, baseType: !189, size: 64, offset: 3712)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2269, file: !176, line: 157, baseType: !189, size: 64, offset: 3776)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2269, file: !176, line: 159, baseType: !189, size: 64, offset: 3840)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2269, file: !176, line: 175, baseType: !206, size: 128, offset: 3904)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2269, file: !176, line: 182, baseType: !2336, offset: 4032)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2337, elements: !2063)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2338, line: 16, size: 576, elements: !2339)
!2338 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2339 = !{!2340, !2342, !2343, !2344, !2345, !2346, !2347, !2349}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2337, file: !2338, line: 17, baseType: !2341, size: 32)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1257, size: 32, elements: !1620)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2337, file: !2338, line: 18, baseType: !1257, size: 16, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2337, file: !2338, line: 19, baseType: !1404, size: 8, offset: 48)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2337, file: !2338, line: 20, baseType: !1404, size: 8, offset: 56)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2337, file: !2338, line: 21, baseType: !1558, size: 128, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2337, file: !2338, line: 23, baseType: !355, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2337, file: !2338, line: 24, baseType: !2348, size: 64, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2337, file: !2338, line: 25, baseType: !2047, size: 256, offset: 320)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2261, file: !43, line: 135, baseType: !7, size: 32, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2261, file: !43, line: 136, baseType: !2352, size: 32, offset: 224)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !43, line: 66, baseType: !404)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2261, file: !43, line: 138, baseType: !245, size: 32, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2261, file: !43, line: 139, baseType: !245, size: 32, offset: 288)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2261, file: !43, line: 142, baseType: !7, size: 32, offset: 320)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2261, file: !43, line: 143, baseType: !870, size: 64, offset: 384)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2261, file: !43, line: 145, baseType: !1972, size: 64, offset: 448)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2261, file: !43, line: 146, baseType: !1972, size: 64, offset: 512)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2261, file: !43, line: 148, baseType: !206, size: 128, offset: 576)
!2360 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !43, line: 157, baseType: !2361, size: 128, offset: 704)
!2361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !43, line: 157, size: 128, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2361, file: !43, line: 158, baseType: !629, size: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2361, file: !43, line: 159, baseType: !206, size: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !43, line: 167, baseType: !2366, size: 192, offset: 832)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !43, line: 167, size: 192, elements: !2367)
!2367 = !{!2368, !2369, !2376, !2377}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2366, file: !43, line: 168, baseType: !800, size: 192, align: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2366, file: !43, line: 169, baseType: !2370, size: 128)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2371, line: 31, size: 128, elements: !2372)
!2371 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2372 = !{!2373, !2374, !2375}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2370, file: !2371, line: 32, baseType: !760, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2370, file: !2371, line: 33, baseType: !7, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2370, file: !2371, line: 34, baseType: !7, size: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2366, file: !43, line: 170, baseType: !334, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2366, file: !43, line: 171, baseType: !245, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !43, line: 180, baseType: !2379, size: 256, offset: 1024)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !43, line: 180, size: 256, elements: !2380)
!2380 = !{!2381, !2416}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2379, file: !43, line: 184, baseType: !2382, size: 192)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2379, file: !43, line: 181, size: 192, elements: !2383)
!2383 = !{!2384, !2414}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2382, file: !43, line: 182, baseType: !2385, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2387, line: 73, size: 448, elements: !2388)
!2387 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2388 = !{!2389, !2390, !2403, !2408, !2413}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2386, file: !2387, line: 74, baseType: !2256, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2386, file: !2387, line: 75, baseType: !2391, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2387, line: 99, size: 704, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2392, file: !2387, line: 100, baseType: !717, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2392, file: !2387, line: 101, baseType: !787, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2392, file: !2387, line: 102, baseType: !787, size: 32, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2392, file: !2387, line: 105, baseType: !219, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2392, file: !2387, line: 107, baseType: !303, size: 16, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2392, file: !2387, line: 109, baseType: !778, size: 128, offset: 192)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2392, file: !2387, line: 110, baseType: !2385, size: 64, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2392, file: !2387, line: 111, baseType: !625, size: 64, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2392, file: !2387, line: 113, baseType: !2047, size: 256, offset: 448)
!2403 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !2387, line: 83, baseType: !2404, size: 128, offset: 128)
!2404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2386, file: !2387, line: 83, size: 128, elements: !2405)
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2404, file: !2387, line: 84, baseType: !206, size: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2404, file: !2387, line: 85, baseType: !992, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !2387, line: 87, baseType: !2409, size: 128, offset: 256)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2386, file: !2387, line: 87, size: 128, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2409, file: !2387, line: 88, baseType: !629, size: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2409, file: !2387, line: 89, baseType: !352, size: 128, align: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2386, file: !2387, line: 92, baseType: !7, size: 32, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2382, file: !43, line: 183, baseType: !2415, size: 128, offset: 64)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 128, elements: !1620)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2379, file: !43, line: 190, baseType: !2417, size: 256)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2379, file: !43, line: 186, size: 256, elements: !2418)
!2418 = !{!2419, !2420, !2421}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2417, file: !43, line: 187, baseType: !7, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2417, file: !43, line: 188, baseType: !206, size: 128, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2417, file: !43, line: 189, baseType: !2422, size: 64, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !43, line: 62, baseType: !2424)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{null, !2260, !2426}
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1974, line: 58, baseType: !1404)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2261, file: !43, line: 193, baseType: !1978, size: 64, offset: 1280)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2261, file: !43, line: 194, baseType: !1998, size: 64, offset: 1344)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2261, file: !43, line: 200, baseType: !408, size: 64, offset: 1408)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2261, file: !43, line: 202, baseType: !408, size: 64, offset: 1472)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2261, file: !43, line: 212, baseType: !303, size: 16, offset: 1536)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2261, file: !43, line: 218, baseType: !303, size: 16, offset: 1552)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2261, file: !43, line: 221, baseType: !303, size: 16, offset: 1568)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2261, file: !43, line: 229, baseType: !303, size: 16, offset: 1584)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2261, file: !43, line: 230, baseType: !303, size: 16, offset: 1600)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2261, file: !43, line: 232, baseType: !42, size: 32, offset: 1632)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2261, file: !43, line: 233, baseType: !1282, size: 32, offset: 1664)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2261, file: !43, line: 235, baseType: !7, size: 32, offset: 1696)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2261, file: !43, line: 236, baseType: !189, size: 64, offset: 1728)
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !43, line: 238, baseType: !2441, size: 256, offset: 1792)
!2441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !43, line: 238, size: 256, elements: !2442)
!2442 = !{!2443, !2472}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2441, file: !43, line: 239, baseType: !2444, size: 256)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2445, line: 23, size: 256, elements: !2446)
!2445 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2446 = !{!2447, !2469, !2471}
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2444, file: !2445, line: 24, baseType: !2448, size: 128)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2444, file: !2445, line: 24, size: 128, elements: !2449)
!2449 = !{!2450, !2462}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2448, file: !2445, line: 25, baseType: !2451, size: 128)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2452, line: 58, size: 128, elements: !2453)
!2452 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2453 = !{!2454, !2455, !2460, !2461}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2451, file: !2452, line: 59, baseType: !346, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2452, line: 60, baseType: !2456, size: 32, offset: 64)
!2456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2452, line: 60, size: 32, elements: !2457)
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2456, file: !2452, line: 61, baseType: !7, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2456, file: !2452, line: 62, baseType: !787, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2451, file: !2452, line: 65, baseType: !899, size: 16, offset: 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2451, file: !2452, line: 65, baseType: !899, size: 16, offset: 112)
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !2445, line: 26, baseType: !2463, size: 128)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2448, file: !2445, line: 26, size: 128, elements: !2464)
!2464 = !{!2465, !2466, !2467, !2468}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2463, file: !2445, line: 27, baseType: !346, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2463, file: !2445, line: 28, baseType: !7, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2463, file: !2445, line: 30, baseType: !899, size: 16, offset: 96)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2463, file: !2445, line: 30, baseType: !899, size: 16, offset: 112)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2444, file: !2445, line: 34, baseType: !2470, size: 64, offset: 128)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2445, line: 17, baseType: !455)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2444, file: !2445, line: 35, baseType: !334, size: 64, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2441, file: !43, line: 240, baseType: !408, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2261, file: !43, line: 246, baseType: !2422, size: 64, offset: 2048)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2261, file: !43, line: 247, baseType: !334, size: 64, offset: 2112)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2257, file: !43, line: 401, baseType: !2476, size: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !49, line: 101, size: 4992, elements: !2478)
!2478 = !{!2479, !2591, !2592, !2593, !2594, !2595}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2477, file: !49, line: 103, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !49, line: 66, size: 2240, elements: !2482)
!2482 = !{!2483, !2484, !2566, !2567, !2568, !2581, !2582, !2583, !2585, !2586, !2590}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2481, file: !49, line: 69, baseType: !992, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2481, file: !49, line: 72, baseType: !2485, size: 1408, offset: 64)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !49, line: 29, size: 1408, elements: !2486)
!2486 = !{!2487, !2491, !2495, !2499, !2503, !2507, !2511, !2515, !2520, !2524, !2528, !2534, !2538, !2539, !2543, !2547, !2551, !2555, !2556, !2560, !2561, !2565}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2485, file: !49, line: 30, baseType: !2488, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!245, !2256, !2480}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2485, file: !49, line: 31, baseType: !2492, size: 64, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{null, !2476}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2485, file: !49, line: 32, baseType: !2496, size: 64, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!245, !2268, !7}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2485, file: !49, line: 33, baseType: !2500, size: 64, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{null, !2268, !7}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2485, file: !49, line: 34, baseType: !2504, size: 64, offset: 256)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !2268}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2485, file: !49, line: 36, baseType: !2508, size: 64, offset: 320)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!477, !2256, !2260, !1972}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2485, file: !49, line: 37, baseType: !2512, size: 64, offset: 384)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!477, !2268, !1972, !7}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2485, file: !49, line: 38, baseType: !2516, size: 64, offset: 448)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!245, !2256, !2519, !1972}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2485, file: !49, line: 39, baseType: !2521, size: 64, offset: 512)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{null, !2256, !2260, !48}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2485, file: !49, line: 40, baseType: !2525, size: 64, offset: 576)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{null, !2256, !2260, !2260}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2485, file: !49, line: 41, baseType: !2529, size: 64, offset: 640)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{null, !7, !2532}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !49, line: 26, flags: DIFlagFwdDecl)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2485, file: !49, line: 42, baseType: !2535, size: 64, offset: 704)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{null, !2260}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2485, file: !49, line: 43, baseType: !2535, size: 64, offset: 768)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2485, file: !49, line: 44, baseType: !2540, size: 64, offset: 832)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !2268, !209, !477}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2485, file: !49, line: 45, baseType: !2544, size: 64, offset: 896)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!2260, !2268}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2485, file: !49, line: 46, baseType: !2548, size: 64, offset: 960)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!477, !2268}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2485, file: !49, line: 47, baseType: !2552, size: 64, offset: 1024)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{null, !2260, !408}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2485, file: !49, line: 48, baseType: !2535, size: 64, offset: 1088)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2485, file: !49, line: 49, baseType: !2557, size: 64, offset: 1152)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!2260, !2256, !2260}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2485, file: !49, line: 50, baseType: !2557, size: 64, offset: 1216)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2485, file: !49, line: 51, baseType: !2562, size: 64, offset: 1280)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{null, !2385}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2485, file: !49, line: 52, baseType: !2562, size: 64, offset: 1344)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2481, file: !49, line: 74, baseType: !308, size: 64, offset: 1472)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2481, file: !49, line: 75, baseType: !308, size: 64, offset: 1536)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2481, file: !49, line: 76, baseType: !2569, size: 64, offset: 1600)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !49, line: 57, size: 256, elements: !2571)
!2571 = !{!2572, !2573, !2577}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2570, file: !49, line: 58, baseType: !298, size: 128)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2570, file: !49, line: 59, baseType: !2574, size: 64, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!292, !2476, !261}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2570, file: !49, line: 60, baseType: !2578, size: 64, offset: 192)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!292, !2476, !202, !308}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2481, file: !49, line: 77, baseType: !202, size: 64, offset: 1664)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2481, file: !49, line: 78, baseType: !202, size: 64, offset: 1728)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2481, file: !49, line: 79, baseType: !2584, size: 32, offset: 1792)
!2584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2481, file: !49, line: 80, baseType: !620, size: 64, offset: 1856)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2481, file: !49, line: 87, baseType: !2587, size: 176, offset: 1920)
!2587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 176, elements: !2588)
!2588 = !{!2589}
!2589 = !DISubrange(count: 22)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2481, file: !49, line: 88, baseType: !206, size: 128, offset: 2112)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2477, file: !49, line: 104, baseType: !334, size: 64, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2477, file: !49, line: 105, baseType: !198, size: 512, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2477, file: !49, line: 106, baseType: !713, size: 192, offset: 640)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2477, file: !49, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2477, file: !49, line: 108, baseType: !2596, size: 4096, offset: 896)
!2596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 4096, elements: !266)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2257, file: !43, line: 403, baseType: !2008, size: 128, offset: 128)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2257, file: !43, line: 405, baseType: !2599, size: 64, offset: 256)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !43, line: 43, flags: DIFlagFwdDecl)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2257, file: !43, line: 406, baseType: !2602, size: 64, offset: 320)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !43, line: 42, flags: DIFlagFwdDecl)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2257, file: !43, line: 408, baseType: !2605, size: 64, offset: 384)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2607)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !176, line: 290, size: 960, elements: !2608)
!2608 = !{!2609, !2619, !2620, !2624, !2628, !2632, !2636, !2637, !2641, !2642, !2689, !2693, !2694, !2695, !2696}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !2607, file: !176, line: 294, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!2426, !2268, !2613}
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !176, line: 277, size: 128, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !2615, file: !176, line: 278, baseType: !2260, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2615, file: !176, line: 279, baseType: !477, size: 8, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !2607, file: !176, line: 304, baseType: !2504, size: 64, offset: 64)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !2607, file: !176, line: 312, baseType: !2621, size: 64, offset: 128)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!477, !2256}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !2607, file: !176, line: 317, baseType: !2625, size: 64, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{null, !2256}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2607, file: !176, line: 322, baseType: !2629, size: 64, offset: 256)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{!55, !2260, !477}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2607, file: !176, line: 327, baseType: !2633, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!245, !2268}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2607, file: !176, line: 332, baseType: !2535, size: 64, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2607, file: !176, line: 339, baseType: !2638, size: 64, offset: 448)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!245, !2268, !334, !7}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2607, file: !176, line: 343, baseType: !2500, size: 64, offset: 512)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !2607, file: !176, line: 352, baseType: !2643, size: 64, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!245, !2646, !2260, !7, !7}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !176, line: 249, size: 2304, elements: !2648)
!2648 = !{!2649, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2684, !2685, !2687, !2688}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2647, file: !176, line: 250, baseType: !2650, size: 384)
!2650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2651, size: 384, elements: !262)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !176, line: 195, size: 128, elements: !2652)
!2652 = !{!2653, !2655, !2656}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !2651, file: !176, line: 196, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !2651, file: !176, line: 197, baseType: !7, size: 32, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !2651, file: !176, line: 198, baseType: !7, size: 32, offset: 96)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !2647, file: !176, line: 251, baseType: !7, size: 32, offset: 384)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2647, file: !176, line: 252, baseType: !2605, size: 64, offset: 448)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2647, file: !176, line: 253, baseType: !7, size: 32, offset: 512)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2647, file: !176, line: 254, baseType: !7, size: 32, offset: 544)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !2647, file: !176, line: 255, baseType: !7, size: 32, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2647, file: !176, line: 256, baseType: !7, size: 32, offset: 608)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2647, file: !176, line: 257, baseType: !245, size: 32, offset: 640)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2647, file: !176, line: 258, baseType: !7, size: 32, offset: 672)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2647, file: !176, line: 259, baseType: !7, size: 32, offset: 704)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2647, file: !176, line: 260, baseType: !334, size: 64, offset: 768)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !2647, file: !176, line: 261, baseType: !787, size: 32, offset: 832)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !2647, file: !176, line: 263, baseType: !2669, size: 512, offset: 896)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2292, line: 97, size: 512, elements: !2670)
!2670 = !{!2671, !2672, !2673, !2674, !2675, !2681, !2682, !2683}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !2669, file: !2292, line: 101, baseType: !2291, size: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !2669, file: !2292, line: 109, baseType: !2654, size: 64, offset: 192)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !2669, file: !2292, line: 115, baseType: !7, size: 32, offset: 256)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !2669, file: !2292, line: 120, baseType: !787, size: 32, offset: 288)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !2669, file: !2292, line: 125, baseType: !2676, size: 64, offset: 320)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2292, line: 76, size: 192, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !2677, file: !2292, line: 80, baseType: !787, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2677, file: !2292, line: 85, baseType: !1533, size: 128, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !2669, file: !2292, line: 130, baseType: !787, size: 32, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !2669, file: !2292, line: 135, baseType: !477, size: 8, offset: 416)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !2669, file: !2292, line: 141, baseType: !7, size: 32, offset: 448)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !2647, file: !176, line: 264, baseType: !2669, size: 512, offset: 1408)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2647, file: !176, line: 265, baseType: !2686, size: 64, offset: 1920)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !2647, file: !176, line: 267, baseType: !713, size: 192, offset: 1984)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !2647, file: !176, line: 268, baseType: !206, size: 128, offset: 2176)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !2607, file: !176, line: 357, baseType: !2690, size: 64, offset: 640)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !2646, !2260, !7}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !2607, file: !176, line: 363, baseType: !2535, size: 64, offset: 704)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !2607, file: !176, line: 369, baseType: !2535, size: 64, offset: 768)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2607, file: !176, line: 374, baseType: !2621, size: 64, offset: 832)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !2607, file: !176, line: 380, baseType: !2697, size: 64, offset: 896)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!245, !2646}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2257, file: !43, line: 411, baseType: !2265, size: 64, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2257, file: !43, line: 413, baseType: !7, size: 32, offset: 512)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2257, file: !43, line: 416, baseType: !2703, size: 64, offset: 576)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2257, file: !43, line: 417, baseType: !7, size: 32, offset: 640)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2257, file: !43, line: 419, baseType: !2100, size: 64, offset: 704)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2257, file: !43, line: 425, baseType: !334, size: 64, offset: 768)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2257, file: !43, line: 430, baseType: !189, size: 64, offset: 832)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2257, file: !43, line: 436, baseType: !787, size: 32, offset: 896)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2257, file: !43, line: 442, baseType: !245, size: 32, offset: 928)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2257, file: !43, line: 447, baseType: !783, size: 32, offset: 960)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2257, file: !43, line: 449, baseType: !219, offset: 992)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2257, file: !43, line: 454, baseType: !198, size: 512, offset: 1024)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2257, file: !43, line: 459, baseType: !212, size: 64, offset: 1536)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2257, file: !43, line: 462, baseType: !2715, size: 128, offset: 1600)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1980, line: 159, size: 128, elements: !2716)
!2716 = !{!2717, !2746, !2747, !2748, !2749}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2715, file: !1980, line: 160, baseType: !2718, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !43, line: 1664, size: 320, elements: !2721)
!2721 = !{!2722, !2736, !2737, !2740, !2745}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !2720, file: !43, line: 1665, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !43, line: 1660, baseType: !2725)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!2426, !2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !43, line: 1651, size: 320, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !2728, file: !43, line: 1652, baseType: !334, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !2728, file: !43, line: 1653, baseType: !334, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2728, file: !43, line: 1654, baseType: !870, size: 64, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2728, file: !43, line: 1655, baseType: !7, size: 32, offset: 192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2728, file: !43, line: 1656, baseType: !303, size: 16, offset: 224)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2728, file: !43, line: 1657, baseType: !202, size: 64, offset: 256)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !2720, file: !43, line: 1666, baseType: !2723, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !2720, file: !43, line: 1667, baseType: !2738, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !43, line: 1661, baseType: !2536)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !2720, file: !43, line: 1668, baseType: !2741, size: 64, offset: 192)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !43, line: 1662, baseType: !2743)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{null, !2260, !7}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2720, file: !43, line: 1669, baseType: !202, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2715, file: !1980, line: 161, baseType: !414, size: 8, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !2715, file: !1980, line: 162, baseType: !414, size: 8, offset: 72)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !2715, file: !1980, line: 163, baseType: !414, size: 8, offset: 80)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !2715, file: !1980, line: 164, baseType: !414, size: 8, offset: 88)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2257, file: !43, line: 466, baseType: !194, size: 64, offset: 1728)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2257, file: !43, line: 467, baseType: !59, size: 32, offset: 1792)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2257, file: !43, line: 468, baseType: !7, size: 32, offset: 1824)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2257, file: !43, line: 474, baseType: !189, size: 64, offset: 1856)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2257, file: !43, line: 476, baseType: !7, size: 32, offset: 1920)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2257, file: !43, line: 477, baseType: !7, size: 32, offset: 1952)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2257, file: !43, line: 484, baseType: !7, size: 32, offset: 1984)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2257, file: !43, line: 485, baseType: !245, size: 32, offset: 2016)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2257, file: !43, line: 487, baseType: !2759, size: 64, offset: 2048)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !43, line: 44, flags: DIFlagFwdDecl)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2257, file: !43, line: 488, baseType: !2762, size: 5120, offset: 2112)
!2762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2763, size: 5120, elements: !1786)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1974, line: 540, size: 320, elements: !2764)
!2764 = !{!2765, !2766, !2767, !2768, !2769}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !2763, file: !1974, line: 541, baseType: !408, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2763, file: !1974, line: 542, baseType: !408, size: 64, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2763, file: !1974, line: 543, baseType: !408, size: 64, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !2763, file: !1974, line: 544, baseType: !402, size: 32, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2763, file: !1974, line: 545, baseType: !408, size: 64, offset: 256)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2257, file: !43, line: 490, baseType: !2159, size: 320, offset: 7232)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2257, file: !43, line: 491, baseType: !2047, size: 256, offset: 7552)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2257, file: !43, line: 493, baseType: !787, size: 32, offset: 7808)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2257, file: !43, line: 495, baseType: !206, size: 128, offset: 7872)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2257, file: !43, line: 502, baseType: !2775, size: 896, offset: 8000)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !43, line: 321, size: 896, elements: !2776)
!2776 = !{!2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !2775, file: !43, line: 322, baseType: !189, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !2775, file: !43, line: 323, baseType: !189, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !2775, file: !43, line: 324, baseType: !189, size: 64, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !2775, file: !43, line: 326, baseType: !7, size: 32, offset: 192)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !2775, file: !43, line: 327, baseType: !7, size: 32, offset: 224)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !2775, file: !43, line: 328, baseType: !7, size: 32, offset: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !2775, file: !43, line: 329, baseType: !7, size: 32, offset: 288)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2775, file: !43, line: 330, baseType: !7, size: 32, offset: 320)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !2775, file: !43, line: 331, baseType: !7, size: 32, offset: 352)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !2775, file: !43, line: 332, baseType: !7, size: 32, offset: 384)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !2775, file: !43, line: 333, baseType: !7, size: 32, offset: 416)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !2775, file: !43, line: 334, baseType: !7, size: 32, offset: 448)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !2775, file: !43, line: 335, baseType: !7, size: 32, offset: 480)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !2775, file: !43, line: 336, baseType: !7, size: 32, offset: 512)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !2775, file: !43, line: 337, baseType: !7, size: 32, offset: 544)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !2775, file: !43, line: 338, baseType: !7, size: 32, offset: 576)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !2775, file: !43, line: 339, baseType: !7, size: 32, offset: 608)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !2775, file: !43, line: 340, baseType: !7, size: 32, offset: 640)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !2775, file: !43, line: 341, baseType: !7, size: 32, offset: 672)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !2775, file: !43, line: 342, baseType: !7, size: 32, offset: 704)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !2775, file: !43, line: 344, baseType: !303, size: 16, offset: 736)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !2775, file: !43, line: 345, baseType: !303, size: 16, offset: 752)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !2775, file: !43, line: 346, baseType: !303, size: 16, offset: 768)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !2775, file: !43, line: 348, baseType: !414, size: 8, offset: 784)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !2775, file: !43, line: 349, baseType: !414, size: 8, offset: 792)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !2775, file: !43, line: 350, baseType: !414, size: 8, offset: 800)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !2775, file: !43, line: 351, baseType: !66, size: 32, offset: 832)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2257, file: !43, line: 504, baseType: !7, size: 32, offset: 8896)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2257, file: !43, line: 534, baseType: !7, size: 32, offset: 8928)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2257, file: !43, line: 535, baseType: !7, size: 32, offset: 8960)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2257, file: !43, line: 536, baseType: !245, size: 32, offset: 8992)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2257, file: !43, line: 537, baseType: !713, size: 192, offset: 9024)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2257, file: !43, line: 544, baseType: !2287, size: 64, offset: 9216)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2257, file: !43, line: 546, baseType: !206, size: 128, offset: 9280)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2257, file: !43, line: 547, baseType: !219, offset: 9408)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2257, file: !43, line: 548, baseType: !2155, size: 704, offset: 9408)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2257, file: !43, line: 550, baseType: !713, size: 192, offset: 10112)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2257, file: !43, line: 551, baseType: !713, size: 192, offset: 10304)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2257, file: !43, line: 557, baseType: !206, size: 128, offset: 10496)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2257, file: !43, line: 558, baseType: !219, offset: 10624)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2257, file: !43, line: 560, baseType: !245, size: 32, offset: 10624)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2257, file: !43, line: 563, baseType: !2819, size: 256, offset: 10688)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !2820, line: 18, size: 256, elements: !2821)
!2820 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!2821 = !{!2822, !2823, !2824, !2825}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !2819, file: !2820, line: 19, baseType: !194, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !2819, file: !2820, line: 20, baseType: !245, size: 32, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2819, file: !2820, line: 21, baseType: !2256, size: 64, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2819, file: !2820, line: 22, baseType: !2826, size: 64, offset: 192)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !2820, line: 10, size: 256, elements: !2829)
!2829 = !{!2830, !2871, !2875, !2879}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !2828, file: !2820, line: 11, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!245, !2834}
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !2836, line: 22, size: 1280, elements: !2837)
!2836 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!2837 = !{!2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !2835, file: !2836, line: 23, baseType: !1497, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2835, file: !2836, line: 24, baseType: !404, size: 32, offset: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !2835, file: !2836, line: 25, baseType: !404, size: 32, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !2835, file: !2836, line: 28, baseType: !404, size: 32, offset: 96)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2835, file: !2836, line: 29, baseType: !409, size: 64, offset: 128)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !2835, file: !2836, line: 30, baseType: !409, size: 64, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !2835, file: !2836, line: 31, baseType: !404, size: 32, offset: 256)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !2835, file: !2836, line: 32, baseType: !404, size: 32, offset: 288)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !2835, file: !2836, line: 33, baseType: !404, size: 32, offset: 320)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !2835, file: !2836, line: 34, baseType: !404, size: 32, offset: 352)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !2835, file: !2836, line: 35, baseType: !409, size: 64, offset: 384)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !2835, file: !2836, line: 38, baseType: !404, size: 32, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !2835, file: !2836, line: 40, baseType: !404, size: 32, offset: 480)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !2835, file: !2836, line: 41, baseType: !404, size: 32, offset: 512)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !2835, file: !2836, line: 42, baseType: !404, size: 32, offset: 544)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !2835, file: !2836, line: 43, baseType: !409, size: 64, offset: 576)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !2835, file: !2836, line: 44, baseType: !409, size: 64, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2835, file: !2836, line: 46, baseType: !404, size: 32, offset: 704)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2835, file: !2836, line: 47, baseType: !404, size: 32, offset: 736)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !2835, file: !2836, line: 48, baseType: !409, size: 64, offset: 768)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !2835, file: !2836, line: 49, baseType: !404, size: 32, offset: 832)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !2835, file: !2836, line: 51, baseType: !404, size: 32, offset: 864)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !2835, file: !2836, line: 52, baseType: !404, size: 32, offset: 896)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !2835, file: !2836, line: 53, baseType: !404, size: 32, offset: 928)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !2835, file: !2836, line: 54, baseType: !404, size: 32, offset: 960)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2835, file: !2836, line: 55, baseType: !404, size: 32, offset: 992)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2835, file: !2836, line: 56, baseType: !404, size: 32, offset: 1024)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !2835, file: !2836, line: 57, baseType: !404, size: 32, offset: 1056)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !2835, file: !2836, line: 58, baseType: !1497, size: 32, offset: 1088)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !2835, file: !2836, line: 59, baseType: !1497, size: 32, offset: 1120)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !2835, file: !2836, line: 60, baseType: !409, size: 64, offset: 1152)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !2835, file: !2836, line: 61, baseType: !404, size: 32, offset: 1216)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2835, file: !2836, line: 63, baseType: !404, size: 32, offset: 1248)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !2828, file: !2820, line: 12, baseType: !2872, size: 64, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!245, !2260, !2834, !2183}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !2828, file: !2820, line: 14, baseType: !2876, size: 64, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!245, !2260, !2834}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !2828, file: !2820, line: 15, baseType: !2535, size: 64, offset: 192)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2257, file: !43, line: 570, baseType: !352, size: 128, align: 64, offset: 10944)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2257, file: !43, line: 571, baseType: !1533, size: 128, offset: 11072)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2257, file: !43, line: 576, baseType: !713, size: 192, offset: 11200)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2257, file: !43, line: 578, baseType: !2646, size: 64, offset: 11392)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2257, file: !43, line: 579, baseType: !206, size: 128, offset: 11456)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2257, file: !43, line: 580, baseType: !2886, size: 2368, offset: 11584)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1969, line: 682, size: 2368, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2886, file: !1969, line: 683, baseType: !992, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2886, file: !1969, line: 684, baseType: !7, size: 32, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2886, file: !1969, line: 686, baseType: !2891, size: 448, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2892, line: 26, baseType: !2893)
!2892 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2892, line: 16, size: 448, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2905, !2910}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2893, file: !2892, line: 17, baseType: !219)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2893, file: !2892, line: 18, baseType: !245, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2893, file: !2892, line: 19, baseType: !245, size: 32, offset: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2893, file: !2892, line: 20, baseType: !861, size: 64, offset: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2893, file: !2892, line: 22, baseType: !334, size: 64, offset: 128)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2893, file: !2892, line: 23, baseType: !2901, size: 64, offset: 192)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2892, line: 13, baseType: !2903)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!334, !783, !334}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2893, file: !2892, line: 24, baseType: !2906, size: 64, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2892, line: 14, baseType: !2908)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{null, !334, !334}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2893, file: !2892, line: 25, baseType: !1533, size: 128, offset: 320)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2886, file: !1969, line: 687, baseType: !2891, size: 448, offset: 576)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2886, file: !1969, line: 689, baseType: !2891, size: 448, offset: 1024)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2886, file: !1969, line: 690, baseType: !2891, size: 448, offset: 1472)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2886, file: !1969, line: 697, baseType: !219, offset: 1920)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2886, file: !1969, line: 698, baseType: !1968, size: 128, offset: 1920)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2886, file: !1969, line: 699, baseType: !2047, size: 256, offset: 2048)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2886, file: !1969, line: 700, baseType: !2059, size: 64, offset: 2304)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2257, file: !43, line: 582, baseType: !369, size: 64, offset: 13952)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2257, file: !43, line: 589, baseType: !477, size: 8, offset: 14016)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2257, file: !43, line: 591, baseType: !308, size: 64, offset: 14080)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2257, file: !43, line: 594, baseType: !2922, size: 320, offset: 14144)
!2922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 320, elements: !2923)
!2923 = !{!2924}
!2924 = !DISubrange(count: 5)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1979, file: !1980, line: 191, baseType: !334, size: 64, offset: 7168)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1979, file: !1980, line: 193, baseType: !245, size: 32, offset: 7232)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1979, file: !1980, line: 194, baseType: !189, size: 64, offset: 7296)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1979, file: !1980, line: 196, baseType: !807, size: 256, offset: 7360)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1979, file: !1980, line: 197, baseType: !212, size: 64, offset: 7616)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1979, file: !1980, line: 199, baseType: !2931, size: 64, offset: 7680)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1980, line: 199, flags: DIFlagFwdDecl)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1979, file: !1980, line: 200, baseType: !787, size: 32, offset: 7744)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1979, file: !1980, line: 201, baseType: !2935, size: 64, offset: 7808)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1980, line: 156, flags: DIFlagFwdDecl)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1979, file: !1980, line: 203, baseType: !198, size: 512, offset: 7872)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1979, file: !1980, line: 208, baseType: !245, size: 32, offset: 8384)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1979, file: !1980, line: 209, baseType: !2940, size: 64, offset: 8448)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1980, line: 157, flags: DIFlagFwdDecl)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1979, file: !1980, line: 210, baseType: !2943, offset: 8512)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !636, line: 192, elements: !233)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1973, file: !1974, line: 206, baseType: !7, size: 32, offset: 128)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1973, file: !1974, line: 210, baseType: !303, size: 16, offset: 160)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1973, file: !1974, line: 211, baseType: !303, size: 16, offset: 176)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1973, file: !1974, line: 212, baseType: !303, size: 16, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1973, file: !1974, line: 213, baseType: !2426, size: 8, offset: 208)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1973, file: !1974, line: 214, baseType: !1404, size: 8, offset: 216)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1973, file: !1974, line: 215, baseType: !787, size: 32, offset: 224)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1973, file: !1974, line: 217, baseType: !2952, size: 192, offset: 256)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2371, line: 37, size: 192, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2952, file: !2371, line: 38, baseType: !870, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2952, file: !2371, line: 40, baseType: !7, size: 32, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2952, file: !2371, line: 42, baseType: !7, size: 32, offset: 96)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2952, file: !2371, line: 44, baseType: !7, size: 32, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1973, file: !1974, line: 219, baseType: !2959, size: 64, offset: 448)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1974, line: 19, baseType: !2961)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{null, !1972}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1973, file: !1974, line: 221, baseType: !334, size: 64, offset: 512)
!2964 = !DIDerivedType(tag: DW_TAG_member, scope: !1973, file: !1974, line: 240, baseType: !2965, size: 64, offset: 576)
!2965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1973, file: !1974, line: 240, size: 64, elements: !2966)
!2966 = !{!2967}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2965, file: !1974, line: 242, baseType: !2968, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1969, line: 313, size: 832, elements: !2970)
!2970 = !{!2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2981}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2969, file: !1969, line: 314, baseType: !1972, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2969, file: !1969, line: 316, baseType: !2952, size: 192, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2969, file: !1969, line: 318, baseType: !303, size: 16, offset: 256)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2969, file: !1969, line: 319, baseType: !303, size: 16, offset: 272)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2969, file: !1969, line: 320, baseType: !303, size: 16, offset: 288)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2969, file: !1969, line: 321, baseType: !303, size: 16, offset: 304)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2969, file: !1969, line: 323, baseType: !2952, size: 192, offset: 320)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2969, file: !1969, line: 325, baseType: !2047, size: 256, offset: 512)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2969, file: !1969, line: 327, baseType: !2980, size: 64, offset: 768)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2969, file: !1969, line: 328, baseType: !2982, offset: 832)
!2982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2370, elements: !2063)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1973, file: !1974, line: 246, baseType: !303, size: 16, offset: 640)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1973, file: !1974, line: 252, baseType: !303, size: 16, offset: 656)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1973, file: !1974, line: 254, baseType: !787, size: 32, offset: 672)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1973, file: !1974, line: 256, baseType: !2980, size: 64, offset: 704)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1973, file: !1974, line: 258, baseType: !2988, size: 64, offset: 768)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1973, file: !1974, line: 265, baseType: !2982, offset: 832)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1968, file: !1969, line: 556, baseType: !1972, size: 64, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1269, file: !1270, line: 1050, baseType: !2992, size: 64, offset: 10688)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !43, line: 1236, size: 320, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998, !2999}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !2993, file: !43, line: 1237, baseType: !206, size: 128)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !2993, file: !43, line: 1238, baseType: !206, size: 128, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !2993, file: !43, line: 1239, baseType: !303, size: 16, offset: 256)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !2993, file: !43, line: 1240, baseType: !477, size: 8, offset: 272)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !2993, file: !43, line: 1241, baseType: !477, size: 8, offset: 280)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1269, file: !1270, line: 1054, baseType: !3001, size: 64, offset: 10752)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1270, line: 55, flags: DIFlagFwdDecl)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1269, file: !1270, line: 1056, baseType: !2100, size: 64, offset: 10816)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1269, file: !1270, line: 1058, baseType: !2391, size: 64, offset: 10880)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1269, file: !1270, line: 1061, baseType: !3006, size: 64, offset: 10944)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1270, line: 43, flags: DIFlagFwdDecl)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1269, file: !1270, line: 1064, baseType: !189, size: 64, offset: 11008)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1269, file: !1270, line: 1065, baseType: !3010, size: 64, offset: 11072)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1817, line: 14, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1817, line: 12, size: 384, elements: !3013)
!3013 = !{!3014}
!3014 = !DIDerivedType(tag: DW_TAG_member, scope: !3012, file: !1817, line: 13, baseType: !3015, size: 384)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3012, file: !1817, line: 13, size: 384, elements: !3016)
!3016 = !{!3017, !3018, !3019, !3020}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3015, file: !1817, line: 13, baseType: !245, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3015, file: !1817, line: 13, baseType: !245, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3015, file: !1817, line: 13, baseType: !245, size: 32, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3015, file: !1817, line: 13, baseType: !3021, size: 256, offset: 128)
!3021 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3022, line: 32, size: 256, elements: !3023)
!3022 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3023 = !{!3024, !3029, !3042, !3048, !3057, !3077, !3082}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3021, file: !3022, line: 37, baseType: !3025, size: 64)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 34, size: 64, elements: !3026)
!3026 = !{!3027, !3028}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3025, file: !3022, line: 35, baseType: !1512, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3025, file: !3022, line: 36, baseType: !428, size: 32, offset: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3021, file: !3022, line: 45, baseType: !3030, size: 192)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 40, size: 192, elements: !3031)
!3031 = !{!3032, !3034, !3035, !3041}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3030, file: !3022, line: 41, baseType: !3033, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !294, line: 95, baseType: !245)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3030, file: !3022, line: 42, baseType: !245, size: 32, offset: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3030, file: !3022, line: 43, baseType: !3036, size: 64, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3022, line: 11, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3022, line: 8, size: 64, elements: !3038)
!3038 = !{!3039, !3040}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3037, file: !3022, line: 9, baseType: !245, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3037, file: !3022, line: 10, baseType: !334, size: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3030, file: !3022, line: 44, baseType: !245, size: 32, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3021, file: !3022, line: 52, baseType: !3043, size: 128)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 48, size: 128, elements: !3044)
!3044 = !{!3045, !3046, !3047}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3043, file: !3022, line: 49, baseType: !1512, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3043, file: !3022, line: 50, baseType: !428, size: 32, offset: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3043, file: !3022, line: 51, baseType: !3036, size: 64, offset: 64)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3021, file: !3022, line: 61, baseType: !3049, size: 256)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 55, size: 256, elements: !3050)
!3050 = !{!3051, !3052, !3053, !3054, !3056}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3049, file: !3022, line: 56, baseType: !1512, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3049, file: !3022, line: 57, baseType: !428, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3049, file: !3022, line: 58, baseType: !245, size: 32, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3049, file: !3022, line: 59, baseType: !3055, size: 64, offset: 128)
!3055 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !294, line: 94, baseType: !295)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3049, file: !3022, line: 60, baseType: !3055, size: 64, offset: 192)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3021, file: !3022, line: 95, baseType: !3058, size: 256)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 64, size: 256, elements: !3059)
!3059 = !{!3060, !3061}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3058, file: !3022, line: 65, baseType: !334, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, scope: !3058, file: !3022, line: 77, baseType: !3062, size: 192, offset: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3058, file: !3022, line: 77, size: 192, elements: !3063)
!3063 = !{!3064, !3065, !3072}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3062, file: !3022, line: 82, baseType: !1257, size: 16)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3062, file: !3022, line: 88, baseType: !3066, size: 192)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3062, file: !3022, line: 84, size: 192, elements: !3067)
!3067 = !{!3068, !3070, !3071}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3066, file: !3022, line: 85, baseType: !3069, size: 64)
!3069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 64, elements: !1382)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3066, file: !3022, line: 86, baseType: !334, size: 64, offset: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3066, file: !3022, line: 87, baseType: !334, size: 64, offset: 128)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3062, file: !3022, line: 93, baseType: !3073, size: 96)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3062, file: !3022, line: 90, size: 96, elements: !3074)
!3074 = !{!3075, !3076}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3073, file: !3022, line: 91, baseType: !3069, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3073, file: !3022, line: 92, baseType: !404, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3021, file: !3022, line: 101, baseType: !3078, size: 128)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 98, size: 128, elements: !3079)
!3079 = !{!3080, !3081}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3078, file: !3022, line: 99, baseType: !296, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3078, file: !3022, line: 100, baseType: !245, size: 32, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3021, file: !3022, line: 108, baseType: !3083, size: 128)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3021, file: !3022, line: 104, size: 128, elements: !3084)
!3084 = !{!3085, !3086, !3087}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3083, file: !3022, line: 105, baseType: !334, size: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3083, file: !3022, line: 106, baseType: !245, size: 32, offset: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3083, file: !3022, line: 107, baseType: !7, size: 32, offset: 96)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1269, file: !1270, line: 1067, baseType: !1889, offset: 11136)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1269, file: !1270, line: 1099, baseType: !3090, size: 64, offset: 11136)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1270, line: 56, flags: DIFlagFwdDecl)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1269, file: !1270, line: 1103, baseType: !206, size: 128, offset: 11200)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1269, file: !1270, line: 1104, baseType: !3094, size: 64, offset: 11328)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1270, line: 46, flags: DIFlagFwdDecl)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1269, file: !1270, line: 1105, baseType: !713, size: 192, offset: 11392)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1269, file: !1270, line: 1106, baseType: !7, size: 32, offset: 11584)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1269, file: !1270, line: 1109, baseType: !3099, size: 128, offset: 11648)
!3099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3100, size: 128, elements: !1620)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1270, line: 51, flags: DIFlagFwdDecl)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1269, file: !1270, line: 1110, baseType: !713, size: 192, offset: 11776)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1269, file: !1270, line: 1111, baseType: !206, size: 128, offset: 11968)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1269, file: !1270, line: 1173, baseType: !3105, size: 64, offset: 12096)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3107, line: 62, size: 256, align: 256, elements: !3108)
!3107 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3108 = !{!3109, !3110, !3111, !3116}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3106, file: !3107, line: 75, baseType: !404, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3106, file: !3107, line: 90, baseType: !404, size: 32, offset: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3106, file: !3107, line: 124, baseType: !3112, size: 64, offset: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3106, file: !3107, line: 109, size: 64, elements: !3113)
!3113 = !{!3114, !3115}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3112, file: !3107, line: 110, baseType: !409, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3112, file: !3107, line: 112, baseType: !409, size: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3106, file: !3107, line: 144, baseType: !404, size: 32, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1269, file: !1270, line: 1174, baseType: !402, size: 32, offset: 12160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1269, file: !1270, line: 1179, baseType: !189, size: 64, offset: 12224)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1269, file: !1270, line: 1182, baseType: !3120, size: 128, offset: 12288)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1209, line: 76, size: 128, elements: !3121)
!3121 = !{!3122, !3127, !3128}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3120, file: !1209, line: 85, baseType: !3123, size: 64)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3124, line: 7, size: 64, elements: !3125)
!3124 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3125 = !{!3126}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3123, file: !3124, line: 12, baseType: !1419, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3120, file: !1209, line: 88, baseType: !477, size: 8, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3120, file: !1209, line: 95, baseType: !477, size: 8, offset: 72)
!3129 = !DIDerivedType(tag: DW_TAG_member, scope: !1269, file: !1270, line: 1184, baseType: !3130, size: 128, offset: 12416)
!3130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1269, file: !1270, line: 1184, size: 128, elements: !3131)
!3131 = !{!3132, !3133}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3130, file: !1270, line: 1185, baseType: !1282, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3130, file: !1270, line: 1186, baseType: !352, size: 128, align: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1269, file: !1270, line: 1190, baseType: !3135, size: 64, offset: 12544)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1270, line: 53, flags: DIFlagFwdDecl)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1269, file: !1270, line: 1192, baseType: !3138, size: 128, offset: 12608)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1209, line: 64, size: 128, elements: !3139)
!3139 = !{!3140, !3141, !3142}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3138, file: !1209, line: 65, baseType: !760, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3138, file: !1209, line: 67, baseType: !404, size: 32, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3138, file: !1209, line: 68, baseType: !404, size: 32, offset: 96)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1269, file: !1270, line: 1206, baseType: !245, size: 32, offset: 12736)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1269, file: !1270, line: 1207, baseType: !245, size: 32, offset: 12768)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1269, file: !1270, line: 1209, baseType: !189, size: 64, offset: 12800)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1269, file: !1270, line: 1219, baseType: !408, size: 64, offset: 12864)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1269, file: !1270, line: 1220, baseType: !408, size: 64, offset: 12928)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1269, file: !1270, line: 1317, baseType: !245, size: 32, offset: 12992)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1269, file: !1270, line: 1319, baseType: !1268, size: 64, offset: 13056)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1269, file: !1270, line: 1322, baseType: !3151, size: 64, offset: 13120)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3153, line: 56, size: 512, elements: !3154)
!3153 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161, !3163}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3152, file: !3153, line: 57, baseType: !3151, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3152, file: !3153, line: 58, baseType: !334, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3152, file: !3153, line: 59, baseType: !189, size: 64, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3152, file: !3153, line: 60, baseType: !189, size: 64, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3152, file: !3153, line: 61, baseType: !860, size: 64, offset: 256)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3152, file: !3153, line: 62, baseType: !7, size: 32, offset: 320)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3152, file: !3153, line: 63, baseType: !3162, size: 64, offset: 384)
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !188, line: 153, baseType: !408)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3152, file: !3153, line: 64, baseType: !3164, size: 64, offset: 448)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1269, file: !1270, line: 1326, baseType: !1282, size: 32, offset: 13184)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1269, file: !1270, line: 1342, baseType: !334, size: 64, offset: 13248)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1269, file: !1270, line: 1343, baseType: !409, size: 64, offset: 13312)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1269, file: !1270, line: 1344, baseType: !408, size: 64, offset: 13376)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1269, file: !1270, line: 1345, baseType: !409, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1269, file: !1270, line: 1346, baseType: !409, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1269, file: !1270, line: 1347, baseType: !409, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1269, file: !1270, line: 1348, baseType: !352, size: 128, align: 64, offset: 13504)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1269, file: !1270, line: 1358, baseType: !3175, size: 34816, offset: 13824)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3176, line: 485, size: 34816, elements: !3177)
!3176 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3177 = !{!3178, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3207, !3208, !3209, !3210, !3211, !3212, !3215, !3216, !3217}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3175, file: !3176, line: 487, baseType: !3179, size: 192)
!3179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3180, size: 192, elements: !262)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3181, line: 16, size: 64, elements: !3182)
!3181 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3182 = !{!3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3180, file: !3181, line: 17, baseType: !899, size: 16)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3180, file: !3181, line: 18, baseType: !899, size: 16, offset: 16)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3180, file: !3181, line: 19, baseType: !899, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3180, file: !3181, line: 19, baseType: !899, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3180, file: !3181, line: 19, baseType: !899, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3180, file: !3181, line: 19, baseType: !899, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3180, file: !3181, line: 19, baseType: !899, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3180, file: !3181, line: 20, baseType: !899, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3180, file: !3181, line: 20, baseType: !899, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3180, file: !3181, line: 20, baseType: !899, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3180, file: !3181, line: 20, baseType: !899, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3180, file: !3181, line: 20, baseType: !899, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3180, file: !3181, line: 20, baseType: !899, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3175, file: !3176, line: 491, baseType: !189, size: 64, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3175, file: !3176, line: 495, baseType: !303, size: 16, offset: 256)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3175, file: !3176, line: 496, baseType: !303, size: 16, offset: 272)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3175, file: !3176, line: 497, baseType: !303, size: 16, offset: 288)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3175, file: !3176, line: 498, baseType: !303, size: 16, offset: 304)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3175, file: !3176, line: 502, baseType: !189, size: 64, offset: 320)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3175, file: !3176, line: 503, baseType: !189, size: 64, offset: 384)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3175, file: !3176, line: 514, baseType: !3204, size: 256, offset: 448)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3205, size: 256, elements: !1213)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3176, line: 483, flags: DIFlagFwdDecl)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3175, file: !3176, line: 516, baseType: !189, size: 64, offset: 704)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3175, file: !3176, line: 518, baseType: !189, size: 64, offset: 768)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3175, file: !3176, line: 520, baseType: !189, size: 64, offset: 832)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3175, file: !3176, line: 521, baseType: !189, size: 64, offset: 896)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3175, file: !3176, line: 522, baseType: !189, size: 64, offset: 960)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3175, file: !3176, line: 528, baseType: !3213, size: 64, offset: 1024)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3176, line: 10, flags: DIFlagFwdDecl)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3175, file: !3176, line: 535, baseType: !189, size: 64, offset: 1088)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3175, file: !3176, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3175, file: !3176, line: 540, baseType: !3218, size: 33280, offset: 1536)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3219, line: 317, size: 33280, elements: !3220)
!3219 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !{!3221, !3222, !3223}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3218, file: !3219, line: 330, baseType: !7, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3218, file: !3219, line: 337, baseType: !189, size: 64, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3218, file: !3219, line: 348, baseType: !3224, size: 32768, offset: 512)
!3224 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3219, line: 304, size: 32768, elements: !3225)
!3225 = !{!3226, !3241, !3278, !3328, !3341}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3224, file: !3219, line: 305, baseType: !3227, size: 896)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3219, line: 12, size: 896, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3240}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3227, file: !3219, line: 13, baseType: !402, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3227, file: !3219, line: 14, baseType: !402, size: 32, offset: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3227, file: !3219, line: 15, baseType: !402, size: 32, offset: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3227, file: !3219, line: 16, baseType: !402, size: 32, offset: 96)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3227, file: !3219, line: 17, baseType: !402, size: 32, offset: 128)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3227, file: !3219, line: 18, baseType: !402, size: 32, offset: 160)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3227, file: !3219, line: 19, baseType: !402, size: 32, offset: 192)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3227, file: !3219, line: 22, baseType: !3237, size: 640, offset: 224)
!3237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 640, elements: !3238)
!3238 = !{!3239}
!3239 = !DISubrange(count: 20)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3227, file: !3219, line: 25, baseType: !402, size: 32, offset: 864)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3224, file: !3219, line: 306, baseType: !3242, size: 4096, align: 128)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3219, line: 34, size: 4096, align: 128, elements: !3243)
!3243 = !{!3244, !3245, !3246, !3247, !3248, !3263, !3264, !3265, !3267, !3269, !3273}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3242, file: !3219, line: 35, baseType: !899, size: 16)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3242, file: !3219, line: 36, baseType: !899, size: 16, offset: 16)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3242, file: !3219, line: 37, baseType: !899, size: 16, offset: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3242, file: !3219, line: 38, baseType: !899, size: 16, offset: 48)
!3248 = !DIDerivedType(tag: DW_TAG_member, scope: !3242, file: !3219, line: 39, baseType: !3249, size: 128, offset: 64)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3242, file: !3219, line: 39, size: 128, elements: !3250)
!3250 = !{!3251, !3256}
!3251 = !DIDerivedType(tag: DW_TAG_member, scope: !3249, file: !3219, line: 40, baseType: !3252, size: 128)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3249, file: !3219, line: 40, size: 128, elements: !3253)
!3253 = !{!3254, !3255}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3252, file: !3219, line: 41, baseType: !408, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3252, file: !3219, line: 42, baseType: !408, size: 64, offset: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, scope: !3249, file: !3219, line: 44, baseType: !3257, size: 128)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3249, file: !3219, line: 44, size: 128, elements: !3258)
!3258 = !{!3259, !3260, !3261, !3262}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3257, file: !3219, line: 45, baseType: !402, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3257, file: !3219, line: 46, baseType: !402, size: 32, offset: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3257, file: !3219, line: 47, baseType: !402, size: 32, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3257, file: !3219, line: 48, baseType: !402, size: 32, offset: 96)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3242, file: !3219, line: 51, baseType: !402, size: 32, offset: 192)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3242, file: !3219, line: 52, baseType: !402, size: 32, offset: 224)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3242, file: !3219, line: 55, baseType: !3266, size: 1024, offset: 256)
!3266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 1024, elements: !1987)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3242, file: !3219, line: 58, baseType: !3268, size: 2048, offset: 1280)
!3268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 2048, elements: !266)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3242, file: !3219, line: 60, baseType: !3270, size: 384, offset: 3328)
!3270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 384, elements: !3271)
!3271 = !{!3272}
!3272 = !DISubrange(count: 12)
!3273 = !DIDerivedType(tag: DW_TAG_member, scope: !3242, file: !3219, line: 62, baseType: !3274, size: 384, offset: 3712)
!3274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3242, file: !3219, line: 62, size: 384, elements: !3275)
!3275 = !{!3276, !3277}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3274, file: !3219, line: 63, baseType: !3270, size: 384)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3274, file: !3219, line: 64, baseType: !3270, size: 384)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3224, file: !3219, line: 307, baseType: !3279, size: 1088)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3219, line: 79, size: 1088, elements: !3280)
!3280 = !{!3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3327}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3279, file: !3219, line: 80, baseType: !402, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3279, file: !3219, line: 81, baseType: !402, size: 32, offset: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3279, file: !3219, line: 82, baseType: !402, size: 32, offset: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3279, file: !3219, line: 83, baseType: !402, size: 32, offset: 96)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3279, file: !3219, line: 84, baseType: !402, size: 32, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3279, file: !3219, line: 85, baseType: !402, size: 32, offset: 160)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3279, file: !3219, line: 86, baseType: !402, size: 32, offset: 192)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3279, file: !3219, line: 88, baseType: !3237, size: 640, offset: 224)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3279, file: !3219, line: 89, baseType: !1404, size: 8, offset: 864)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3279, file: !3219, line: 90, baseType: !1404, size: 8, offset: 872)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3279, file: !3219, line: 91, baseType: !1404, size: 8, offset: 880)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3279, file: !3219, line: 92, baseType: !1404, size: 8, offset: 888)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3279, file: !3219, line: 93, baseType: !1404, size: 8, offset: 896)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3279, file: !3219, line: 94, baseType: !1404, size: 8, offset: 904)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3279, file: !3219, line: 95, baseType: !3296, size: 64, offset: 960)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3298, line: 11, size: 128, elements: !3299)
!3298 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3299 = !{!3300, !3301}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3297, file: !3298, line: 12, baseType: !296, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3297, file: !3298, line: 13, baseType: !3302, size: 64, offset: 64)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3304, line: 56, size: 1344, elements: !3305)
!3304 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3305 = !{!3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3303, file: !3304, line: 61, baseType: !189, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3303, file: !3304, line: 62, baseType: !189, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3303, file: !3304, line: 63, baseType: !189, size: 64, offset: 128)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3303, file: !3304, line: 64, baseType: !189, size: 64, offset: 192)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3303, file: !3304, line: 65, baseType: !189, size: 64, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3303, file: !3304, line: 66, baseType: !189, size: 64, offset: 320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3303, file: !3304, line: 68, baseType: !189, size: 64, offset: 384)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3303, file: !3304, line: 69, baseType: !189, size: 64, offset: 448)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3303, file: !3304, line: 70, baseType: !189, size: 64, offset: 512)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3303, file: !3304, line: 71, baseType: !189, size: 64, offset: 576)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3303, file: !3304, line: 72, baseType: !189, size: 64, offset: 640)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3303, file: !3304, line: 73, baseType: !189, size: 64, offset: 704)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3303, file: !3304, line: 74, baseType: !189, size: 64, offset: 768)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3303, file: !3304, line: 75, baseType: !189, size: 64, offset: 832)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3303, file: !3304, line: 76, baseType: !189, size: 64, offset: 896)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3303, file: !3304, line: 81, baseType: !189, size: 64, offset: 960)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3303, file: !3304, line: 83, baseType: !189, size: 64, offset: 1024)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3303, file: !3304, line: 84, baseType: !189, size: 64, offset: 1088)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3303, file: !3304, line: 85, baseType: !189, size: 64, offset: 1152)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3303, file: !3304, line: 86, baseType: !189, size: 64, offset: 1216)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3303, file: !3304, line: 87, baseType: !189, size: 64, offset: 1280)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3279, file: !3219, line: 96, baseType: !402, size: 32, offset: 1024)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3224, file: !3219, line: 308, baseType: !3329, size: 4608, align: 512)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3219, line: 289, size: 4608, align: 512, elements: !3330)
!3330 = !{!3331, !3332, !3339}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3329, file: !3219, line: 290, baseType: !3242, size: 4096, align: 128)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3329, file: !3219, line: 291, baseType: !3333, size: 512, offset: 4096)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3219, line: 268, size: 512, elements: !3334)
!3334 = !{!3335, !3336, !3337}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3333, file: !3219, line: 269, baseType: !408, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3333, file: !3219, line: 270, baseType: !408, size: 64, offset: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3333, file: !3219, line: 271, baseType: !3338, size: 384, offset: 128)
!3338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 384, elements: !1676)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3329, file: !3219, line: 292, baseType: !3340, offset: 4608)
!3340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, elements: !1774)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3224, file: !3219, line: 309, baseType: !3342, size: 32768)
!3342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 32768, elements: !3343)
!3343 = !{!3344}
!3344 = !DISubrange(count: 4096)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1265, file: !762, line: 378, baseType: !3346, size: 64, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1261, file: !762, line: 384, baseType: !1553, size: 192, offset: 192)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1036, file: !762, line: 500, baseType: !219, offset: 6656)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1036, file: !762, line: 501, baseType: !3350, size: 64, offset: 6656)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !762, line: 387, flags: DIFlagFwdDecl)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1036, file: !762, line: 516, baseType: !1764, size: 64, offset: 6720)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1036, file: !762, line: 519, baseType: !339, size: 64, offset: 6784)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1036, file: !762, line: 521, baseType: !3355, size: 64, offset: 6848)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !762, line: 521, flags: DIFlagFwdDecl)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1036, file: !762, line: 545, baseType: !787, size: 32, offset: 6912)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1036, file: !762, line: 548, baseType: !477, size: 8, offset: 6944)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1036, file: !762, line: 550, baseType: !3360, offset: 6952)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3361, line: 142, elements: !233)
!3361 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1036, file: !762, line: 554, baseType: !2047, size: 256, offset: 6976)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1036, file: !762, line: 557, baseType: !402, size: 32, offset: 7232)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1033, file: !762, line: 565, baseType: !3365, offset: 7296)
!3365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, elements: !2063)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1029, file: !762, line: 151, baseType: !787, size: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1021, file: !762, line: 156, baseType: !219, offset: 256)
!3368 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 159, baseType: !3369, size: 128)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 159, size: 128, elements: !3370)
!3370 = !{!3371, !3415}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3369, file: !762, line: 161, baseType: !3372, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !72, line: 110, size: 1152, elements: !3374)
!3374 = !{!3375, !3385, !3386, !3387, !3388, !3389, !3390, !3402, !3403, !3404}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3373, file: !72, line: 111, baseType: !3376, size: 384)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !72, line: 19, size: 384, elements: !3377)
!3377 = !{!3378, !3380, !3381, !3382, !3383, !3384}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3376, file: !72, line: 20, baseType: !3379, size: 64)
!3379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3376, file: !72, line: 21, baseType: !3379, size: 64, offset: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3376, file: !72, line: 22, baseType: !3379, size: 64, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3376, file: !72, line: 23, baseType: !189, size: 64, offset: 192)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3376, file: !72, line: 24, baseType: !189, size: 64, offset: 256)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3376, file: !72, line: 25, baseType: !189, size: 64, offset: 320)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3373, file: !72, line: 112, baseType: !2022, size: 64, offset: 384)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3373, file: !72, line: 113, baseType: !2008, size: 128, offset: 448)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3373, file: !72, line: 114, baseType: !1553, size: 192, offset: 576)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3373, file: !72, line: 115, baseType: !71, size: 32, offset: 768)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3373, file: !72, line: 116, baseType: !7, size: 32, offset: 800)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3373, file: !72, line: 117, baseType: !3391, size: 64, offset: 832)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3393)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !72, line: 67, size: 256, elements: !3394)
!3394 = !{!3395, !3396, !3400, !3401}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3393, file: !72, line: 73, baseType: !880, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3393, file: !72, line: 78, baseType: !3397, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{null, !3372}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3393, file: !72, line: 83, baseType: !3397, size: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3393, file: !72, line: 89, baseType: !1085, size: 64, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3373, file: !72, line: 118, baseType: !334, size: 64, offset: 896)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3373, file: !72, line: 119, baseType: !245, size: 32, offset: 960)
!3404 = !DIDerivedType(tag: DW_TAG_member, scope: !3373, file: !72, line: 120, baseType: !3405, size: 128, offset: 1024)
!3405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3373, file: !72, line: 120, size: 128, elements: !3406)
!3406 = !{!3407, !3413}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3405, file: !72, line: 121, baseType: !3408, size: 128)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3409, line: 6, size: 128, elements: !3410)
!3409 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3410 = !{!3411, !3412}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3408, file: !3409, line: 7, baseType: !408, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3408, file: !3409, line: 8, baseType: !408, size: 64, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3405, file: !72, line: 122, baseType: !3414)
!3414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3408, elements: !1774)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3369, file: !762, line: 162, baseType: !334, size: 64, offset: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !766, file: !762, line: 176, baseType: !352, size: 128, align: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !762, line: 179, baseType: !3418, size: 32, offset: 384)
!3418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !761, file: !762, line: 179, size: 32, elements: !3419)
!3419 = !{!3420, !3421, !3422, !3423}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3418, file: !762, line: 184, baseType: !787, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3418, file: !762, line: 192, baseType: !7, size: 32)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3418, file: !762, line: 194, baseType: !7, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3418, file: !762, line: 195, baseType: !245, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !761, file: !762, line: 199, baseType: !787, size: 32, offset: 416)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !647, file: !85, line: 1964, baseType: !3426, size: 64, offset: 1344)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!296, !586, !3429}
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3431, line: 12, size: 256, elements: !3432)
!3431 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3432 = !{!3433, !3434, !3435, !3436, !3437}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3430, file: !3431, line: 13, baseType: !783, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3430, file: !3431, line: 16, baseType: !245, size: 32, offset: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3430, file: !3431, line: 23, baseType: !189, size: 64, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3430, file: !3431, line: 30, baseType: !189, size: 64, offset: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3430, file: !3431, line: 33, baseType: !3438, size: 64, offset: 192)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !762, line: 27, flags: DIFlagFwdDecl)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !647, file: !85, line: 1966, baseType: !3426, size: 64, offset: 1408)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !587, file: !85, line: 1424, baseType: !3442, size: 64, offset: 448)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3444)
!3444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !79, line: 322, size: 704, elements: !3445)
!3445 = !{!3446, !3492, !3496, !3500, !3501, !3502, !3503, !3504, !3509, !3514, !3518}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3444, file: !79, line: 323, baseType: !3447, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!245, !3450}
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !79, line: 294, size: 1600, elements: !3452)
!3452 = !{!3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3477, !3478, !3479}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3451, file: !79, line: 295, baseType: !629, size: 128)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3451, file: !79, line: 296, baseType: !206, size: 128, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3451, file: !79, line: 297, baseType: !206, size: 128, offset: 256)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3451, file: !79, line: 298, baseType: !206, size: 128, offset: 384)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3451, file: !79, line: 299, baseType: !713, size: 192, offset: 512)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3451, file: !79, line: 300, baseType: !219, offset: 704)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3451, file: !79, line: 301, baseType: !787, size: 32, offset: 704)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3451, file: !79, line: 302, baseType: !586, size: 64, offset: 768)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3451, file: !79, line: 303, baseType: !3462, size: 64, offset: 832)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !79, line: 68, size: 64, elements: !3463)
!3463 = !{!3464, !3476}
!3464 = !DIDerivedType(tag: DW_TAG_member, scope: !3462, file: !79, line: 69, baseType: !3465, size: 32)
!3465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3462, file: !79, line: 69, size: 32, elements: !3466)
!3466 = !{!3467, !3468, !3469}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3465, file: !79, line: 70, baseType: !422, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3465, file: !79, line: 71, baseType: !430, size: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3465, file: !79, line: 72, baseType: !3470, size: 32)
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3471, line: 24, baseType: !3472)
!3471 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3471, line: 22, size: 32, elements: !3473)
!3473 = !{!3474}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3472, file: !3471, line: 23, baseType: !3475, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3471, line: 20, baseType: !428)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3462, file: !79, line: 74, baseType: !78, size: 32, offset: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3451, file: !79, line: 304, baseType: !518, size: 64, offset: 896)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3451, file: !79, line: 305, baseType: !189, size: 64, offset: 960)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3451, file: !79, line: 306, baseType: !3480, size: 576, offset: 1024)
!3480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !79, line: 205, size: 576, elements: !3481)
!3481 = !{!3482, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3480, file: !79, line: 206, baseType: !3483, size: 64)
!3483 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !79, line: 66, baseType: !520)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3480, file: !79, line: 207, baseType: !3483, size: 64, offset: 64)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3480, file: !79, line: 208, baseType: !3483, size: 64, offset: 128)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3480, file: !79, line: 209, baseType: !3483, size: 64, offset: 192)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3480, file: !79, line: 210, baseType: !3483, size: 64, offset: 256)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3480, file: !79, line: 211, baseType: !3483, size: 64, offset: 320)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3480, file: !79, line: 212, baseType: !3483, size: 64, offset: 384)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3480, file: !79, line: 213, baseType: !526, size: 64, offset: 448)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3480, file: !79, line: 214, baseType: !526, size: 64, offset: 512)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3444, file: !79, line: 324, baseType: !3493, size: 64, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!3450, !586, !245}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3444, file: !79, line: 325, baseType: !3497, size: 64, offset: 128)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{null, !3450}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3444, file: !79, line: 326, baseType: !3447, size: 64, offset: 192)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3444, file: !79, line: 327, baseType: !3447, size: 64, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3444, file: !79, line: 328, baseType: !3447, size: 64, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3444, file: !79, line: 329, baseType: !675, size: 64, offset: 384)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3444, file: !79, line: 332, baseType: !3505, size: 64, offset: 448)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!3508, !416}
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3444, file: !79, line: 333, baseType: !3510, size: 64, offset: 512)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!245, !416, !3513}
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3444, file: !79, line: 335, baseType: !3515, size: 64, offset: 576)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!245, !416, !3508}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3444, file: !79, line: 337, baseType: !3519, size: 64, offset: 640)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!245, !586, !3522}
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !587, file: !85, line: 1425, baseType: !3524, size: 64, offset: 512)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3526)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !79, line: 428, size: 704, elements: !3527)
!3527 = !{!3528, !3532, !3533, !3537, !3538, !3539, !3554, !3577, !3581, !3582, !3605}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3526, file: !79, line: 429, baseType: !3529, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{!245, !586, !245, !245, !536}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3526, file: !79, line: 430, baseType: !675, size: 64, offset: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3526, file: !79, line: 431, baseType: !3534, size: 64, offset: 128)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!245, !586, !7}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3526, file: !79, line: 432, baseType: !3534, size: 64, offset: 192)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3526, file: !79, line: 433, baseType: !675, size: 64, offset: 256)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3526, file: !79, line: 434, baseType: !3540, size: 64, offset: 320)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{!245, !586, !245, !3543}
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !79, line: 415, size: 256, elements: !3545)
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3544, file: !79, line: 416, baseType: !245, size: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3544, file: !79, line: 417, baseType: !7, size: 32, offset: 32)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3544, file: !79, line: 418, baseType: !7, size: 32, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3544, file: !79, line: 420, baseType: !7, size: 32, offset: 96)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3544, file: !79, line: 421, baseType: !7, size: 32, offset: 128)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3544, file: !79, line: 422, baseType: !7, size: 32, offset: 160)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3544, file: !79, line: 423, baseType: !7, size: 32, offset: 192)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3544, file: !79, line: 424, baseType: !7, size: 32, offset: 224)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3526, file: !79, line: 435, baseType: !3555, size: 64, offset: 384)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!245, !586, !3462, !3558}
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !79, line: 343, size: 960, elements: !3560)
!3560 = !{!3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3559, file: !79, line: 344, baseType: !245, size: 32)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3559, file: !79, line: 345, baseType: !408, size: 64, offset: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3559, file: !79, line: 346, baseType: !408, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3559, file: !79, line: 347, baseType: !408, size: 64, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3559, file: !79, line: 348, baseType: !408, size: 64, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3559, file: !79, line: 349, baseType: !408, size: 64, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3559, file: !79, line: 350, baseType: !408, size: 64, offset: 384)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3559, file: !79, line: 351, baseType: !723, size: 64, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3559, file: !79, line: 353, baseType: !723, size: 64, offset: 512)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3559, file: !79, line: 354, baseType: !245, size: 32, offset: 576)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3559, file: !79, line: 355, baseType: !245, size: 32, offset: 608)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3559, file: !79, line: 356, baseType: !408, size: 64, offset: 640)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3559, file: !79, line: 357, baseType: !408, size: 64, offset: 704)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3559, file: !79, line: 358, baseType: !408, size: 64, offset: 768)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3559, file: !79, line: 359, baseType: !723, size: 64, offset: 832)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3559, file: !79, line: 360, baseType: !245, size: 32, offset: 896)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3526, file: !79, line: 436, baseType: !3578, size: 64, offset: 448)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!245, !586, !3522, !3558}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3526, file: !79, line: 438, baseType: !3555, size: 64, offset: 512)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3526, file: !79, line: 439, baseType: !3583, size: 64, offset: 576)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!245, !586, !3586}
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !79, line: 409, size: 1408, elements: !3588)
!3588 = !{!3589, !3590}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3587, file: !79, line: 410, baseType: !7, size: 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3587, file: !79, line: 411, baseType: !3591, size: 1344, offset: 64)
!3591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3592, size: 1344, elements: !262)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !79, line: 395, size: 448, elements: !3593)
!3593 = !{!3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3604}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3592, file: !79, line: 396, baseType: !7, size: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3592, file: !79, line: 397, baseType: !7, size: 32, offset: 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3592, file: !79, line: 399, baseType: !7, size: 32, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3592, file: !79, line: 400, baseType: !7, size: 32, offset: 96)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3592, file: !79, line: 401, baseType: !7, size: 32, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3592, file: !79, line: 402, baseType: !7, size: 32, offset: 160)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3592, file: !79, line: 403, baseType: !7, size: 32, offset: 192)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3592, file: !79, line: 404, baseType: !410, size: 64, offset: 256)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3592, file: !79, line: 405, baseType: !3603, size: 64, offset: 320)
!3603 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !188, line: 126, baseType: !408)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3592, file: !79, line: 406, baseType: !3603, size: 64, offset: 384)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3526, file: !79, line: 440, baseType: !3534, size: 64, offset: 640)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !587, file: !85, line: 1426, baseType: !3607, size: 64, offset: 576)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3609)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !85, line: 49, flags: DIFlagFwdDecl)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !587, file: !85, line: 1427, baseType: !189, size: 64, offset: 640)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !587, file: !85, line: 1428, baseType: !189, size: 64, offset: 704)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !587, file: !85, line: 1429, baseType: !189, size: 64, offset: 768)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !587, file: !85, line: 1430, baseType: !369, size: 64, offset: 832)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !587, file: !85, line: 1431, baseType: !807, size: 256, offset: 896)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !587, file: !85, line: 1432, baseType: !245, size: 32, offset: 1152)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !587, file: !85, line: 1433, baseType: !787, size: 32, offset: 1184)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !587, file: !85, line: 1437, baseType: !3618, size: 64, offset: 1216)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3621)
!3621 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !85, line: 1437, flags: DIFlagFwdDecl)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !587, file: !85, line: 1449, baseType: !3623, size: 64, offset: 1280)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !385, line: 34, size: 64, elements: !3624)
!3624 = !{!3625}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3623, file: !385, line: 35, baseType: !388, size: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !587, file: !85, line: 1450, baseType: !206, size: 128, offset: 1344)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !587, file: !85, line: 1451, baseType: !2080, size: 64, offset: 1472)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !587, file: !85, line: 1452, baseType: !2100, size: 64, offset: 1536)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !587, file: !85, line: 1453, baseType: !3630, size: 64, offset: 1600)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !85, line: 1453, flags: DIFlagFwdDecl)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !587, file: !85, line: 1454, baseType: !629, size: 128, offset: 1664)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !587, file: !85, line: 1455, baseType: !7, size: 32, offset: 1792)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !587, file: !85, line: 1456, baseType: !3635, size: 2432, offset: 1856)
!3635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !79, line: 518, size: 2432, elements: !3636)
!3636 = !{!3637, !3638, !3639, !3641, !3673}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3635, file: !79, line: 519, baseType: !7, size: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3635, file: !79, line: 520, baseType: !807, size: 256, offset: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3635, file: !79, line: 521, baseType: !3640, size: 192, offset: 320)
!3640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !416, size: 192, elements: !262)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3635, file: !79, line: 522, baseType: !3642, size: 1728, offset: 512)
!3642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3643, size: 1728, elements: !262)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !79, line: 222, size: 576, elements: !3644)
!3644 = !{!3645, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3643, file: !79, line: 223, baseType: !3646, size: 64)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !79, line: 443, size: 256, elements: !3648)
!3648 = !{!3649, !3650, !3663, !3664}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3647, file: !79, line: 444, baseType: !245, size: 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3647, file: !79, line: 445, baseType: !3651, size: 64, offset: 64)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3653)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !79, line: 310, size: 512, elements: !3654)
!3654 = !{!3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3653, file: !79, line: 311, baseType: !675, size: 64)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3653, file: !79, line: 312, baseType: !675, size: 64, offset: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3653, file: !79, line: 313, baseType: !675, size: 64, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3653, file: !79, line: 314, baseType: !675, size: 64, offset: 192)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3653, file: !79, line: 315, baseType: !3447, size: 64, offset: 256)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3653, file: !79, line: 316, baseType: !3447, size: 64, offset: 320)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3653, file: !79, line: 317, baseType: !3447, size: 64, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3653, file: !79, line: 318, baseType: !3519, size: 64, offset: 448)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3647, file: !79, line: 446, baseType: !620, size: 64, offset: 128)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3647, file: !79, line: 447, baseType: !3646, size: 64, offset: 192)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3643, file: !79, line: 224, baseType: !245, size: 32, offset: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3643, file: !79, line: 226, baseType: !206, size: 128, offset: 128)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3643, file: !79, line: 227, baseType: !189, size: 64, offset: 256)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3643, file: !79, line: 228, baseType: !7, size: 32, offset: 320)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3643, file: !79, line: 229, baseType: !7, size: 32, offset: 352)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3643, file: !79, line: 230, baseType: !3483, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3643, file: !79, line: 231, baseType: !3483, size: 64, offset: 448)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3643, file: !79, line: 232, baseType: !334, size: 64, offset: 512)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3635, file: !79, line: 523, baseType: !3674, size: 192, offset: 2240)
!3674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3651, size: 192, elements: !262)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !587, file: !85, line: 1458, baseType: !3676, size: 2112, offset: 4288)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !85, line: 1410, size: 2112, elements: !3677)
!3677 = !{!3678, !3679, !3680}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3676, file: !85, line: 1411, baseType: !245, size: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3676, file: !85, line: 1412, baseType: !1533, size: 128, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3676, file: !85, line: 1413, baseType: !3681, size: 1920, offset: 192)
!3681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3682, size: 1920, elements: !262)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3683, line: 12, size: 640, elements: !3684)
!3683 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3684 = !{!3685, !3693, !3694, !3699, !3700}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3682, file: !3683, line: 13, baseType: !3686, size: 320)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3687, line: 17, size: 320, elements: !3688)
!3687 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3688 = !{!3689, !3690, !3691, !3692}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3686, file: !3687, line: 18, baseType: !245, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3686, file: !3687, line: 19, baseType: !245, size: 32, offset: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3686, file: !3687, line: 20, baseType: !1533, size: 128, offset: 64)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3686, file: !3687, line: 22, baseType: !352, size: 128, align: 64, offset: 192)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3682, file: !3683, line: 14, baseType: !2654, size: 64, offset: 320)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3682, file: !3683, line: 15, baseType: !3695, size: 64, offset: 384)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3696, line: 16, size: 64, elements: !3697)
!3696 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3697 = !{!3698}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3695, file: !3696, line: 17, baseType: !1268, size: 64)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3682, file: !3683, line: 16, baseType: !1533, size: 128, offset: 448)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3682, file: !3683, line: 17, baseType: !787, size: 32, offset: 576)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !587, file: !85, line: 1465, baseType: !334, size: 64, offset: 6400)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !587, file: !85, line: 1468, baseType: !402, size: 32, offset: 6464)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !587, file: !85, line: 1470, baseType: !526, size: 64, offset: 6528)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !587, file: !85, line: 1471, baseType: !526, size: 64, offset: 6592)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !587, file: !85, line: 1473, baseType: !404, size: 32, offset: 6656)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !587, file: !85, line: 1474, baseType: !3707, size: 64, offset: 6720)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !85, line: 603, flags: DIFlagFwdDecl)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !587, file: !85, line: 1477, baseType: !1986, size: 256, offset: 6784)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !587, file: !85, line: 1478, baseType: !3711, size: 128, offset: 7040)
!3711 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3712, line: 18, baseType: !3713)
!3712 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3712, line: 16, size: 128, elements: !3714)
!3714 = !{!3715}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3713, file: !3712, line: 17, baseType: !3716, size: 128)
!3716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 128, elements: !1786)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !587, file: !85, line: 1480, baseType: !7, size: 32, offset: 7168)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !587, file: !85, line: 1481, baseType: !2183, size: 32, offset: 7200)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !587, file: !85, line: 1487, baseType: !713, size: 192, offset: 7232)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !587, file: !85, line: 1493, baseType: !202, size: 64, offset: 7424)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !587, file: !85, line: 1495, baseType: !3722, size: 64, offset: 7488)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3724)
!3724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !367, line: 135, size: 1024, align: 512, elements: !3725)
!3725 = !{!3726, !3730, !3731, !3738, !3744, !3748, !3752, !3756, !3757, !3761, !3765, !3770, !3774}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3724, file: !367, line: 136, baseType: !3727, size: 64)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!245, !369, !7}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3724, file: !367, line: 137, baseType: !3727, size: 64, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3724, file: !367, line: 138, baseType: !3732, size: 64, offset: 128)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!245, !3735, !3737}
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3724, file: !367, line: 139, baseType: !3739, size: 64, offset: 192)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!245, !3735, !7, !202, !3742}
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3724, file: !367, line: 141, baseType: !3745, size: 64, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!245, !3735}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3724, file: !367, line: 142, baseType: !3749, size: 64, offset: 320)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!245, !369}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3724, file: !367, line: 143, baseType: !3753, size: 64, offset: 384)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{null, !369}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3724, file: !367, line: 144, baseType: !3753, size: 64, offset: 448)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3724, file: !367, line: 145, baseType: !3758, size: 64, offset: 512)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !369, !416}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3724, file: !367, line: 146, baseType: !3762, size: 64, offset: 576)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!261, !369, !261, !245}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3724, file: !367, line: 147, baseType: !3766, size: 64, offset: 640)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!365, !3769}
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3724, file: !367, line: 148, baseType: !3771, size: 64, offset: 704)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!245, !536, !477}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3724, file: !367, line: 149, baseType: !3775, size: 64, offset: 768)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!369, !369, !3778}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !587, file: !85, line: 1500, baseType: !245, size: 32, offset: 7552)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !587, file: !85, line: 1502, baseType: !3782, size: 448, offset: 7616)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3431, line: 60, size: 448, elements: !3783)
!3783 = !{!3784, !3789, !3790, !3791, !3792, !3793, !3794}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3782, file: !3431, line: 61, baseType: !3785, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!189, !3788, !3429}
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3782, file: !3431, line: 63, baseType: !3785, size: 64, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3782, file: !3431, line: 66, baseType: !296, size: 64, offset: 128)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3782, file: !3431, line: 67, baseType: !245, size: 32, offset: 192)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3782, file: !3431, line: 68, baseType: !7, size: 32, offset: 224)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3782, file: !3431, line: 71, baseType: !206, size: 128, offset: 256)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3782, file: !3431, line: 77, baseType: !3795, size: 64, offset: 384)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !587, file: !85, line: 1505, baseType: !717, size: 64, offset: 8064)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !587, file: !85, line: 1508, baseType: !717, size: 64, offset: 8128)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !587, file: !85, line: 1511, baseType: !245, size: 32, offset: 8192)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !587, file: !85, line: 1514, baseType: !966, size: 32, offset: 8224)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !587, file: !85, line: 1517, baseType: !2059, size: 64, offset: 8256)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !587, file: !85, line: 1518, baseType: !625, size: 64, offset: 8320)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !587, file: !85, line: 1525, baseType: !1764, size: 64, offset: 8384)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !587, file: !85, line: 1532, baseType: !3804, size: 64, offset: 8448)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3805, line: 52, size: 64, elements: !3806)
!3805 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3806 = !{!3807}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3804, file: !3805, line: 53, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3805, line: 40, size: 256, elements: !3810)
!3810 = !{!3811, !3812, !3817}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3809, file: !3805, line: 42, baseType: !219)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3809, file: !3805, line: 44, baseType: !3813, size: 192)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3805, line: 28, size: 192, elements: !3814)
!3814 = !{!3815, !3816}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3813, file: !3805, line: 29, baseType: !206, size: 128)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3813, file: !3805, line: 31, baseType: !296, size: 64, offset: 128)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3809, file: !3805, line: 49, baseType: !296, size: 64, offset: 192)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !587, file: !85, line: 1533, baseType: !3804, size: 64, offset: 8512)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !587, file: !85, line: 1534, baseType: !352, size: 128, align: 64, offset: 8576)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !587, file: !85, line: 1535, baseType: !2047, size: 256, offset: 8704)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !587, file: !85, line: 1537, baseType: !713, size: 192, offset: 8960)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !587, file: !85, line: 1542, baseType: !245, size: 32, offset: 9152)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !587, file: !85, line: 1545, baseType: !219, offset: 9184)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !587, file: !85, line: 1546, baseType: !206, size: 128, offset: 9216)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !587, file: !85, line: 1548, baseType: !219, offset: 9344)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !587, file: !85, line: 1549, baseType: !206, size: 128, offset: 9344)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !417, file: !85, line: 624, baseType: !773, size: 64, offset: 256)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !417, file: !85, line: 631, baseType: !189, size: 64, offset: 320)
!3829 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !85, line: 639, baseType: !3830, size: 32, offset: 384)
!3830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !85, line: 639, size: 32, elements: !3831)
!3831 = !{!3832, !3833}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3830, file: !85, line: 640, baseType: !2584, size: 32)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3830, file: !85, line: 641, baseType: !7, size: 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !417, file: !85, line: 643, baseType: !500, size: 32, offset: 416)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !417, file: !85, line: 644, baseType: !518, size: 64, offset: 448)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !417, file: !85, line: 645, baseType: !522, size: 128, offset: 512)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !417, file: !85, line: 646, baseType: !522, size: 128, offset: 640)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !417, file: !85, line: 647, baseType: !522, size: 128, offset: 768)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !417, file: !85, line: 648, baseType: !219, offset: 896)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !417, file: !85, line: 649, baseType: !303, size: 16, offset: 896)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !417, file: !85, line: 650, baseType: !1404, size: 8, offset: 912)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !417, file: !85, line: 651, baseType: !1404, size: 8, offset: 920)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !417, file: !85, line: 652, baseType: !3603, size: 64, offset: 960)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !417, file: !85, line: 659, baseType: !189, size: 64, offset: 1024)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !417, file: !85, line: 660, baseType: !807, size: 256, offset: 1088)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !417, file: !85, line: 662, baseType: !189, size: 64, offset: 1344)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !417, file: !85, line: 663, baseType: !189, size: 64, offset: 1408)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !417, file: !85, line: 665, baseType: !629, size: 128, offset: 1472)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !417, file: !85, line: 666, baseType: !206, size: 128, offset: 1600)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !417, file: !85, line: 675, baseType: !206, size: 128, offset: 1728)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !417, file: !85, line: 676, baseType: !206, size: 128, offset: 1856)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !417, file: !85, line: 677, baseType: !206, size: 128, offset: 1984)
!3853 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !85, line: 678, baseType: !3854, size: 128, offset: 2112)
!3854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !85, line: 678, size: 128, elements: !3855)
!3855 = !{!3856, !3857}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3854, file: !85, line: 679, baseType: !625, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3854, file: !85, line: 680, baseType: !352, size: 128, align: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !417, file: !85, line: 682, baseType: !719, size: 64, offset: 2240)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !417, file: !85, line: 683, baseType: !719, size: 64, offset: 2304)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !417, file: !85, line: 684, baseType: !787, size: 32, offset: 2368)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !417, file: !85, line: 685, baseType: !787, size: 32, offset: 2400)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !417, file: !85, line: 686, baseType: !787, size: 32, offset: 2432)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !417, file: !85, line: 688, baseType: !787, size: 32, offset: 2464)
!3864 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !85, line: 690, baseType: !3865, size: 64, offset: 2496)
!3865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !85, line: 690, size: 64, elements: !3866)
!3866 = !{!3867, !4089}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3865, file: !85, line: 691, baseType: !3868, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3870)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !85, line: 1822, size: 2048, elements: !3871)
!3871 = !{!3872, !3873, !3877, !3881, !3885, !3886, !3887, !3891, !3904, !3905, !3913, !3917, !3918, !3922, !3923, !3927, !3932, !3933, !3937, !3941, !4049, !4053, !4054, !4058, !4059, !4063, !4067, !4072, !4076, !4080, !4084, !4088}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3870, file: !85, line: 1823, baseType: !620, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3870, file: !85, line: 1824, baseType: !3874, size: 64, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{!518, !339, !518, !245}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3870, file: !85, line: 1825, baseType: !3878, size: 64, offset: 128)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!292, !339, !261, !308, !735}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3870, file: !85, line: 1826, baseType: !3882, size: 64, offset: 192)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!292, !339, !202, !308, !735}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3870, file: !85, line: 1827, baseType: !884, size: 64, offset: 256)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3870, file: !85, line: 1828, baseType: !884, size: 64, offset: 320)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3870, file: !85, line: 1829, baseType: !3888, size: 64, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!245, !887, !477}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3870, file: !85, line: 1830, baseType: !3892, size: 64, offset: 448)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!245, !339, !3895}
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !85, line: 1776, size: 128, elements: !3897)
!3897 = !{!3898, !3903}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3896, file: !85, line: 1777, baseType: !3899, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !85, line: 1773, baseType: !3900)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!245, !3895, !202, !245, !518, !408, !7}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3896, file: !85, line: 1778, baseType: !518, size: 64, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3870, file: !85, line: 1831, baseType: !3892, size: 64, offset: 512)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3870, file: !85, line: 1832, baseType: !3906, size: 64, offset: 576)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!3909, !339, !3911}
!3909 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3910, line: 52, baseType: !7)
!3910 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !606, line: 27, flags: DIFlagFwdDecl)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3870, file: !85, line: 1833, baseType: !3914, size: 64, offset: 640)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!296, !339, !7, !189}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3870, file: !85, line: 1834, baseType: !3914, size: 64, offset: 704)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3870, file: !85, line: 1835, baseType: !3919, size: 64, offset: 768)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!245, !339, !1039}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3870, file: !85, line: 1836, baseType: !189, size: 64, offset: 832)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3870, file: !85, line: 1837, baseType: !3924, size: 64, offset: 896)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{!245, !416, !339}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3870, file: !85, line: 1838, baseType: !3928, size: 64, offset: 960)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!245, !339, !3931}
!3931 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !85, line: 1007, baseType: !334)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3870, file: !85, line: 1839, baseType: !3924, size: 64, offset: 1024)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3870, file: !85, line: 1840, baseType: !3934, size: 64, offset: 1088)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!245, !339, !518, !518, !245}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3870, file: !85, line: 1841, baseType: !3938, size: 64, offset: 1152)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!245, !245, !339, !245}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3870, file: !85, line: 1842, baseType: !3942, size: 64, offset: 1216)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!245, !339, !245, !3945}
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !85, line: 1062, size: 1664, elements: !3947)
!3947 = !{!3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3979, !3980, !3981, !3994, !4025}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3946, file: !85, line: 1063, baseType: !3945, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3946, file: !85, line: 1064, baseType: !206, size: 128, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3946, file: !85, line: 1065, baseType: !629, size: 128, offset: 192)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3946, file: !85, line: 1066, baseType: !206, size: 128, offset: 320)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3946, file: !85, line: 1069, baseType: !206, size: 128, offset: 448)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3946, file: !85, line: 1072, baseType: !3931, size: 64, offset: 576)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3946, file: !85, line: 1073, baseType: !7, size: 32, offset: 640)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3946, file: !85, line: 1074, baseType: !414, size: 8, offset: 672)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3946, file: !85, line: 1075, baseType: !7, size: 32, offset: 704)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3946, file: !85, line: 1076, baseType: !245, size: 32, offset: 736)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3946, file: !85, line: 1077, baseType: !1533, size: 128, offset: 768)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3946, file: !85, line: 1078, baseType: !339, size: 64, offset: 896)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3946, file: !85, line: 1079, baseType: !518, size: 64, offset: 960)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3946, file: !85, line: 1080, baseType: !518, size: 64, offset: 1024)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3946, file: !85, line: 1082, baseType: !3963, size: 64, offset: 1088)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !85, line: 1314, size: 320, elements: !3965)
!3965 = !{!3966, !3974, !3975, !3976, !3977, !3978}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3964, file: !85, line: 1315, baseType: !3967)
!3967 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3968, line: 20, baseType: !3969)
!3968 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3968, line: 11, elements: !3970)
!3970 = !{!3971}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3969, file: !3968, line: 12, baseType: !3972)
!3972 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !231, line: 33, baseType: !3973)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !231, line: 31, elements: !233)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3964, file: !85, line: 1316, baseType: !245, size: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3964, file: !85, line: 1317, baseType: !245, size: 32, offset: 32)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3964, file: !85, line: 1318, baseType: !3963, size: 64, offset: 64)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3964, file: !85, line: 1319, baseType: !339, size: 64, offset: 128)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3964, file: !85, line: 1320, baseType: !352, size: 128, align: 64, offset: 192)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3946, file: !85, line: 1084, baseType: !189, size: 64, offset: 1152)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3946, file: !85, line: 1085, baseType: !189, size: 64, offset: 1216)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3946, file: !85, line: 1087, baseType: !3982, size: 64, offset: 1280)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3984)
!3984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !85, line: 1011, size: 128, elements: !3985)
!3985 = !{!3986, !3990}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3984, file: !85, line: 1012, baseType: !3987, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{null, !3945, !3945}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3984, file: !85, line: 1013, baseType: !3991, size: 64, offset: 64)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !3945}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3946, file: !85, line: 1088, baseType: !3995, size: 64, offset: 1344)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3997)
!3997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !85, line: 1016, size: 512, elements: !3998)
!3998 = !{!3999, !4003, !4007, !4008, !4012, !4016, !4020, !4024}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3997, file: !85, line: 1017, baseType: !4000, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!3931, !3931}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3997, file: !85, line: 1018, baseType: !4004, size: 64, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{null, !3931}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3997, file: !85, line: 1019, baseType: !3991, size: 64, offset: 128)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3997, file: !85, line: 1020, baseType: !4009, size: 64, offset: 192)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!245, !3945, !245}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3997, file: !85, line: 1021, baseType: !4013, size: 64, offset: 256)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!477, !3945}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3997, file: !85, line: 1022, baseType: !4017, size: 64, offset: 320)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!245, !3945, !245, !209}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3997, file: !85, line: 1023, baseType: !4021, size: 64, offset: 384)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{null, !3945, !861}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3997, file: !85, line: 1024, baseType: !4013, size: 64, offset: 448)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3946, file: !85, line: 1097, baseType: !4026, size: 256, offset: 1408)
!4026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3946, file: !85, line: 1089, size: 256, elements: !4027)
!4027 = !{!4028, !4037, !4043}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4026, file: !85, line: 1090, baseType: !4029, size: 256)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4030, line: 10, size: 256, elements: !4031)
!4030 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4031 = !{!4032, !4033, !4036}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4029, file: !4030, line: 11, baseType: !402, size: 32)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4029, file: !4030, line: 12, baseType: !4034, size: 64, offset: 64)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4030, line: 5, flags: DIFlagFwdDecl)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4029, file: !4030, line: 13, baseType: !206, size: 128, offset: 128)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4026, file: !85, line: 1091, baseType: !4038, size: 64)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4030, line: 17, size: 64, elements: !4039)
!4039 = !{!4040}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4038, file: !4030, line: 18, baseType: !4041, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4030, line: 16, flags: DIFlagFwdDecl)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4026, file: !85, line: 1096, baseType: !4044, size: 192)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4026, file: !85, line: 1092, size: 192, elements: !4045)
!4045 = !{!4046, !4047, !4048}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4044, file: !85, line: 1093, baseType: !206, size: 128)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4044, file: !85, line: 1094, baseType: !245, size: 32, offset: 128)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4044, file: !85, line: 1095, baseType: !7, size: 32, offset: 160)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3870, file: !85, line: 1843, baseType: !4050, size: 64, offset: 1280)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!292, !339, !760, !245, !308, !735, !245}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3870, file: !85, line: 1844, baseType: !1159, size: 64, offset: 1344)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3870, file: !85, line: 1845, baseType: !4055, size: 64, offset: 1408)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!245, !245}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3870, file: !85, line: 1846, baseType: !3942, size: 64, offset: 1472)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3870, file: !85, line: 1847, baseType: !4060, size: 64, offset: 1536)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!292, !3135, !339, !735, !308, !7}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3870, file: !85, line: 1848, baseType: !4064, size: 64, offset: 1600)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!292, !339, !735, !3135, !308, !7}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3870, file: !85, line: 1849, baseType: !4068, size: 64, offset: 1664)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!245, !339, !296, !4071, !861}
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3870, file: !85, line: 1850, baseType: !4073, size: 64, offset: 1728)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!296, !339, !245, !518, !518}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3870, file: !85, line: 1852, baseType: !4077, size: 64, offset: 1792)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{null, !701, !339}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3870, file: !85, line: 1856, baseType: !4081, size: 64, offset: 1856)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!292, !339, !518, !339, !518, !308, !7}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3870, file: !85, line: 1858, baseType: !4085, size: 64, offset: 1920)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!518, !339, !518, !339, !518, !518, !7}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3870, file: !85, line: 1861, baseType: !3934, size: 64, offset: 1984)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3865, file: !85, line: 692, baseType: !654, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !417, file: !85, line: 694, baseType: !4091, size: 64, offset: 2560)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !85, line: 1100, size: 384, elements: !4093)
!4093 = !{!4094, !4095, !4096, !4097}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4092, file: !85, line: 1101, baseType: !219)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4092, file: !85, line: 1102, baseType: !206, size: 128)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4092, file: !85, line: 1103, baseType: !206, size: 128, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4092, file: !85, line: 1104, baseType: !206, size: 128, offset: 256)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !417, file: !85, line: 695, baseType: !774, size: 1216, align: 64, offset: 2624)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !417, file: !85, line: 696, baseType: !206, size: 128, offset: 3840)
!4100 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !85, line: 697, baseType: !4101, size: 64, offset: 3968)
!4101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !85, line: 697, size: 64, elements: !4102)
!4102 = !{!4103, !4104, !4105, !4108, !4109}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4101, file: !85, line: 698, baseType: !3135, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4101, file: !85, line: 699, baseType: !2080, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4101, file: !85, line: 700, baseType: !4106, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !85, line: 700, flags: DIFlagFwdDecl)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4101, file: !85, line: 701, baseType: !261, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4101, file: !85, line: 702, baseType: !7, size: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !417, file: !85, line: 705, baseType: !404, size: 32, offset: 4032)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !417, file: !85, line: 708, baseType: !404, size: 32, offset: 4064)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !417, file: !85, line: 709, baseType: !3707, size: 64, offset: 4096)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !417, file: !85, line: 720, baseType: !334, size: 64, offset: 4160)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !370, file: !367, line: 98, baseType: !4115, size: 256, offset: 448)
!4115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 256, elements: !1987)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !370, file: !367, line: 101, baseType: !4117, size: 32, offset: 704)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4118, line: 25, size: 32, elements: !4119)
!4118 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4119 = !{!4120}
!4120 = !DIDerivedType(tag: DW_TAG_member, scope: !4117, file: !4118, line: 26, baseType: !4121, size: 32)
!4121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4117, file: !4118, line: 26, size: 32, elements: !4122)
!4122 = !{!4123}
!4123 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4118, line: 30, baseType: !4124, size: 32)
!4124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4121, file: !4118, line: 30, size: 32, elements: !4125)
!4125 = !{!4126, !4127}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4124, file: !4118, line: 31, baseType: !219)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4124, file: !4118, line: 32, baseType: !245, size: 32)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !370, file: !367, line: 102, baseType: !3722, size: 64, offset: 768)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !370, file: !367, line: 103, baseType: !586, size: 64, offset: 832)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !370, file: !367, line: 104, baseType: !189, size: 64, offset: 896)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !370, file: !367, line: 105, baseType: !334, size: 64, offset: 960)
!4132 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 107, baseType: !4133, size: 128, offset: 1024)
!4133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 107, size: 128, elements: !4134)
!4134 = !{!4135, !4136}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4133, file: !367, line: 108, baseType: !206, size: 128)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4133, file: !367, line: 109, baseType: !4137, size: 64)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !370, file: !367, line: 111, baseType: !206, size: 128, offset: 1152)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !370, file: !367, line: 112, baseType: !206, size: 128, offset: 1280)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !370, file: !367, line: 120, baseType: !4141, size: 128, offset: 1408)
!4141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 116, size: 128, elements: !4142)
!4142 = !{!4143, !4144, !4145}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4141, file: !367, line: 117, baseType: !629, size: 128)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4141, file: !367, line: 118, baseType: !384, size: 128)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4141, file: !367, line: 119, baseType: !352, size: 128, align: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !340, file: !85, line: 922, baseType: !416, size: 64, offset: 256)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !340, file: !85, line: 923, baseType: !3868, size: 64, offset: 320)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !340, file: !85, line: 929, baseType: !219, offset: 384)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !340, file: !85, line: 930, baseType: !84, size: 32, offset: 384)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !340, file: !85, line: 931, baseType: !717, size: 64, offset: 448)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !340, file: !85, line: 932, baseType: !7, size: 32, offset: 512)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !340, file: !85, line: 933, baseType: !2183, size: 32, offset: 544)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !340, file: !85, line: 934, baseType: !713, size: 192, offset: 576)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !340, file: !85, line: 935, baseType: !518, size: 64, offset: 768)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !340, file: !85, line: 936, baseType: !4156, size: 192, offset: 832)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !85, line: 885, size: 192, elements: !4157)
!4157 = !{!4158, !4159, !4160, !4161, !4162, !4163}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4156, file: !85, line: 886, baseType: !3967)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4156, file: !85, line: 887, baseType: !1523, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4156, file: !85, line: 888, baseType: !93, size: 32, offset: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4156, file: !85, line: 889, baseType: !422, size: 32, offset: 96)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4156, file: !85, line: 889, baseType: !422, size: 32, offset: 128)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4156, file: !85, line: 890, baseType: !245, size: 32, offset: 160)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !340, file: !85, line: 937, baseType: !1598, size: 64, offset: 1024)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !340, file: !85, line: 938, baseType: !4166, size: 256, offset: 1088)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !85, line: 896, size: 256, elements: !4167)
!4167 = !{!4168, !4169, !4170, !4171, !4172, !4173}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4166, file: !85, line: 897, baseType: !189, size: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4166, file: !85, line: 898, baseType: !7, size: 32, offset: 64)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4166, file: !85, line: 899, baseType: !7, size: 32, offset: 96)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4166, file: !85, line: 902, baseType: !7, size: 32, offset: 128)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4166, file: !85, line: 903, baseType: !7, size: 32, offset: 160)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4166, file: !85, line: 904, baseType: !518, size: 64, offset: 192)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !340, file: !85, line: 940, baseType: !408, size: 64, offset: 1344)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !340, file: !85, line: 945, baseType: !334, size: 64, offset: 1408)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !340, file: !85, line: 949, baseType: !206, size: 128, offset: 1472)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !340, file: !85, line: 950, baseType: !206, size: 128, offset: 1600)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !340, file: !85, line: 952, baseType: !773, size: 64, offset: 1728)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !340, file: !85, line: 953, baseType: !966, size: 32, offset: 1792)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !340, file: !85, line: 954, baseType: !966, size: 32, offset: 1824)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !329, file: !286, line: 174, baseType: !336, size: 64, offset: 320)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !329, file: !286, line: 176, baseType: !4183, size: 64, offset: 384)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!245, !339, !212, !328, !1039}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !317, file: !286, line: 90, baseType: !312, size: 64, offset: 192)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !317, file: !286, line: 91, baseType: !4188, size: 64, offset: 256)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !276, file: !199, line: 143, baseType: !4190, size: 64, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!4193, !212}
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4195)
!4195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !102, line: 39, size: 384, elements: !4196)
!4196 = !{!4197, !4198, !4202, !4206, !4212, !4216}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4195, file: !102, line: 40, baseType: !101, size: 32)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4195, file: !102, line: 41, baseType: !4199, size: 64, offset: 64)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!477}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4195, file: !102, line: 42, baseType: !4203, size: 64, offset: 128)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!334}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4195, file: !102, line: 43, baseType: !4207, size: 64, offset: 192)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!3164, !4210}
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !102, line: 19, flags: DIFlagFwdDecl)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4195, file: !102, line: 44, baseType: !4213, size: 64, offset: 256)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!3164}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4195, file: !102, line: 45, baseType: !455, size: 64, offset: 320)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !276, file: !199, line: 144, baseType: !4218, size: 64, offset: 320)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!3164, !212}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !276, file: !199, line: 145, baseType: !4222, size: 64, offset: 384)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{null, !212, !4225, !4226}
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !198, file: !199, line: 70, baseType: !4228, size: 64, offset: 384)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !606, line: 123, size: 1024, elements: !4230)
!4230 = !{!4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4347, !4348, !4349, !4350, !4351}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4229, file: !606, line: 124, baseType: !787, size: 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4229, file: !606, line: 125, baseType: !787, size: 32, offset: 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4229, file: !606, line: 135, baseType: !4228, size: 64, offset: 64)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4229, file: !606, line: 136, baseType: !202, size: 64, offset: 128)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4229, file: !606, line: 138, baseType: !800, size: 192, align: 64, offset: 192)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4229, file: !606, line: 140, baseType: !3164, size: 64, offset: 384)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4229, file: !606, line: 141, baseType: !7, size: 32, offset: 448)
!4238 = !DIDerivedType(tag: DW_TAG_member, scope: !4229, file: !606, line: 142, baseType: !4239, size: 256, offset: 512)
!4239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4229, file: !606, line: 142, size: 256, elements: !4240)
!4240 = !{!4241, !4287, !4291}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4239, file: !606, line: 143, baseType: !4242, size: 192)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !606, line: 91, size: 192, elements: !4243)
!4243 = !{!4244, !4245, !4246}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4242, file: !606, line: 92, baseType: !189, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4242, file: !606, line: 94, baseType: !796, size: 64, offset: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4242, file: !606, line: 100, baseType: !4247, size: 64, offset: 128)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !606, line: 180, size: 704, elements: !4249)
!4249 = !{!4250, !4251, !4252, !4259, !4260, !4261, !4285, !4286}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4248, file: !606, line: 182, baseType: !4228, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4248, file: !606, line: 183, baseType: !7, size: 32, offset: 64)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4248, file: !606, line: 186, baseType: !4253, size: 192, offset: 128)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4254, line: 19, size: 192, elements: !4255)
!4254 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4255 = !{!4256, !4257, !4258}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4253, file: !4254, line: 20, baseType: !778, size: 128)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4253, file: !4254, line: 21, baseType: !7, size: 32, offset: 128)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4253, file: !4254, line: 22, baseType: !7, size: 32, offset: 160)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4248, file: !606, line: 187, baseType: !402, size: 32, offset: 320)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4248, file: !606, line: 188, baseType: !402, size: 32, offset: 352)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4248, file: !606, line: 189, baseType: !4262, size: 64, offset: 384)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !606, line: 168, size: 320, elements: !4264)
!4264 = !{!4265, !4269, !4273, !4277, !4281}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4263, file: !606, line: 169, baseType: !4266, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!245, !701, !4247}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4263, file: !606, line: 171, baseType: !4270, size: 64, offset: 64)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!245, !4228, !202, !302}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4263, file: !606, line: 173, baseType: !4274, size: 64, offset: 128)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!245, !4228}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4263, file: !606, line: 174, baseType: !4278, size: 64, offset: 192)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!245, !4228, !4228, !202}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4263, file: !606, line: 176, baseType: !4282, size: 64, offset: 256)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!245, !701, !4228, !4247}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4248, file: !606, line: 192, baseType: !206, size: 128, offset: 448)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4248, file: !606, line: 194, baseType: !1533, size: 128, offset: 576)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4239, file: !606, line: 144, baseType: !4288, size: 64)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !606, line: 103, size: 64, elements: !4289)
!4289 = !{!4290}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4288, file: !606, line: 104, baseType: !4228, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4239, file: !606, line: 145, baseType: !4292, size: 256)
!4292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !606, line: 107, size: 256, elements: !4293)
!4293 = !{!4294, !4342, !4345, !4346}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4292, file: !606, line: 108, baseType: !4295, size: 64)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4297)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !606, line: 217, size: 768, elements: !4298)
!4298 = !{!4299, !4319, !4323, !4324, !4325, !4326, !4327, !4331, !4332, !4333, !4334, !4338}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4297, file: !606, line: 222, baseType: !4300, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!245, !4303}
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !606, line: 197, size: 1088, elements: !4305)
!4305 = !{!4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4304, file: !606, line: 199, baseType: !4228, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4304, file: !606, line: 200, baseType: !339, size: 64, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4304, file: !606, line: 201, baseType: !701, size: 64, offset: 128)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4304, file: !606, line: 202, baseType: !334, size: 64, offset: 192)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4304, file: !606, line: 205, baseType: !713, size: 192, offset: 256)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4304, file: !606, line: 206, baseType: !713, size: 192, offset: 448)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4304, file: !606, line: 207, baseType: !245, size: 32, offset: 640)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4304, file: !606, line: 208, baseType: !206, size: 128, offset: 704)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4304, file: !606, line: 209, baseType: !261, size: 64, offset: 832)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4304, file: !606, line: 211, baseType: !308, size: 64, offset: 896)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4304, file: !606, line: 212, baseType: !477, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4304, file: !606, line: 213, baseType: !477, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4304, file: !606, line: 214, baseType: !1067, size: 64, offset: 1024)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4297, file: !606, line: 223, baseType: !4320, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{null, !4303}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4297, file: !606, line: 236, baseType: !745, size: 64, offset: 128)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4297, file: !606, line: 238, baseType: !732, size: 64, offset: 192)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4297, file: !606, line: 239, baseType: !741, size: 64, offset: 256)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4297, file: !606, line: 240, baseType: !737, size: 64, offset: 320)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4297, file: !606, line: 242, baseType: !4328, size: 64, offset: 384)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!292, !4303, !261, !308, !518}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4297, file: !606, line: 252, baseType: !308, size: 64, offset: 448)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4297, file: !606, line: 259, baseType: !477, size: 8, offset: 512)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4297, file: !606, line: 260, baseType: !4328, size: 64, offset: 576)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4297, file: !606, line: 263, baseType: !4335, size: 64, offset: 640)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!3909, !4303, !3911}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4297, file: !606, line: 266, baseType: !4339, size: 64, offset: 704)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!245, !4303, !1039}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4292, file: !606, line: 109, baseType: !4343, size: 64, offset: 64)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !606, line: 31, flags: DIFlagFwdDecl)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4292, file: !606, line: 110, baseType: !518, size: 64, offset: 128)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4292, file: !606, line: 111, baseType: !4228, size: 64, offset: 192)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4229, file: !606, line: 148, baseType: !334, size: 64, offset: 768)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4229, file: !606, line: 154, baseType: !408, size: 64, offset: 832)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4229, file: !606, line: 156, baseType: !303, size: 16, offset: 896)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4229, file: !606, line: 157, baseType: !302, size: 16, offset: 912)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4229, file: !606, line: 158, baseType: !4352, size: 64, offset: 960)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !606, line: 32, flags: DIFlagFwdDecl)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !198, file: !199, line: 71, baseType: !2109, size: 32, offset: 448)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !198, file: !199, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !198, file: !199, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !198, file: !199, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !198, file: !199, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !198, file: !199, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !195, file: !114, line: 463, baseType: !194, size: 64, offset: 512)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !195, file: !114, line: 465, baseType: !4362, size: 64, offset: 576)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !114, line: 36, flags: DIFlagFwdDecl)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !195, file: !114, line: 467, baseType: !202, size: 64, offset: 640)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !195, file: !114, line: 468, baseType: !4366, size: 64, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4368)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !114, line: 87, size: 384, elements: !4369)
!4369 = !{!4370, !4371, !4372, !4376, !4380, !4384}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4368, file: !114, line: 88, baseType: !202, size: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4368, file: !114, line: 89, baseType: !314, size: 64, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4368, file: !114, line: 90, baseType: !4373, size: 64, offset: 128)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!245, !194, !256}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4368, file: !114, line: 91, baseType: !4377, size: 64, offset: 192)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{!261, !194, !2249, !4225, !4226}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4368, file: !114, line: 93, baseType: !4381, size: 64, offset: 256)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{null, !194}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4368, file: !114, line: 95, baseType: !4385, size: 64, offset: 320)
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4387)
!4387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !60, line: 278, size: 1472, elements: !4388)
!4388 = !{!4389, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4387, file: !60, line: 279, baseType: !4390, size: 64)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!245, !194}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4387, file: !60, line: 280, baseType: !4381, size: 64, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4387, file: !60, line: 281, baseType: !4390, size: 64, offset: 128)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4387, file: !60, line: 282, baseType: !4390, size: 64, offset: 192)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4387, file: !60, line: 283, baseType: !4390, size: 64, offset: 256)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4387, file: !60, line: 284, baseType: !4390, size: 64, offset: 320)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4387, file: !60, line: 285, baseType: !4390, size: 64, offset: 384)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4387, file: !60, line: 286, baseType: !4390, size: 64, offset: 448)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4387, file: !60, line: 287, baseType: !4390, size: 64, offset: 512)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4387, file: !60, line: 288, baseType: !4390, size: 64, offset: 576)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4387, file: !60, line: 289, baseType: !4390, size: 64, offset: 640)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4387, file: !60, line: 290, baseType: !4390, size: 64, offset: 704)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4387, file: !60, line: 291, baseType: !4390, size: 64, offset: 768)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4387, file: !60, line: 292, baseType: !4390, size: 64, offset: 832)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4387, file: !60, line: 293, baseType: !4390, size: 64, offset: 896)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4387, file: !60, line: 294, baseType: !4390, size: 64, offset: 960)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4387, file: !60, line: 295, baseType: !4390, size: 64, offset: 1024)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4387, file: !60, line: 296, baseType: !4390, size: 64, offset: 1088)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4387, file: !60, line: 297, baseType: !4390, size: 64, offset: 1152)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4387, file: !60, line: 298, baseType: !4390, size: 64, offset: 1216)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4387, file: !60, line: 299, baseType: !4390, size: 64, offset: 1280)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4387, file: !60, line: 300, baseType: !4390, size: 64, offset: 1344)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4387, file: !60, line: 301, baseType: !4390, size: 64, offset: 1408)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !195, file: !114, line: 470, baseType: !4416, size: 64, offset: 768)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4418, line: 82, size: 1408, elements: !4419)
!4418 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4419 = !{!4420, !4421, !4422, !4423, !4424, !4425, !4426, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4501, !4504, !4505}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4417, file: !4418, line: 83, baseType: !202, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4417, file: !4418, line: 84, baseType: !202, size: 64, offset: 64)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4417, file: !4418, line: 85, baseType: !194, size: 64, offset: 128)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4417, file: !4418, line: 86, baseType: !314, size: 64, offset: 192)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4417, file: !4418, line: 87, baseType: !314, size: 64, offset: 256)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4417, file: !4418, line: 88, baseType: !314, size: 64, offset: 320)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4417, file: !4418, line: 90, baseType: !4427, size: 64, offset: 384)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!245, !194, !4430}
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !108, line: 95, size: 1152, elements: !4432)
!4432 = !{!4433, !4434, !4435, !4436, !4437, !4438, !4439, !4452, !4465, !4466, !4467, !4468, !4469, !4477, !4478, !4479, !4480, !4481, !4482}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4431, file: !108, line: 96, baseType: !202, size: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4431, file: !108, line: 97, baseType: !4416, size: 64, offset: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4431, file: !108, line: 99, baseType: !620, size: 64, offset: 128)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4431, file: !108, line: 100, baseType: !202, size: 64, offset: 192)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4431, file: !108, line: 102, baseType: !477, size: 8, offset: 256)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4431, file: !108, line: 103, baseType: !107, size: 32, offset: 288)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4431, file: !108, line: 105, baseType: !4440, size: 64, offset: 320)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4442)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4443, line: 262, size: 1600, elements: !4444)
!4443 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4444 = !{!4445, !4446, !4447, !4451}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4442, file: !4443, line: 263, baseType: !1986, size: 256)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4442, file: !4443, line: 264, baseType: !1986, size: 256, offset: 256)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4442, file: !4443, line: 265, baseType: !4448, size: 1024, offset: 512)
!4448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 1024, elements: !4449)
!4449 = !{!4450}
!4450 = !DISubrange(count: 128)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4442, file: !4443, line: 266, baseType: !3164, size: 64, offset: 1536)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4431, file: !108, line: 106, baseType: !4453, size: 64, offset: 384)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4455)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4443, line: 210, size: 256, elements: !4456)
!4456 = !{!4457, !4461, !4463, !4464}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4455, file: !4443, line: 211, baseType: !4458, size: 72)
!4458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 72, elements: !4459)
!4459 = !{!4460}
!4460 = !DISubrange(count: 9)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4455, file: !4443, line: 212, baseType: !4462, size: 64, offset: 128)
!4462 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4443, line: 14, baseType: !189)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4455, file: !4443, line: 213, baseType: !404, size: 32, offset: 192)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4455, file: !4443, line: 214, baseType: !404, size: 32, offset: 224)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4431, file: !108, line: 108, baseType: !4390, size: 64, offset: 448)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4431, file: !108, line: 109, baseType: !4381, size: 64, offset: 512)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4431, file: !108, line: 110, baseType: !4390, size: 64, offset: 576)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4431, file: !108, line: 111, baseType: !4381, size: 64, offset: 640)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4431, file: !108, line: 112, baseType: !4470, size: 64, offset: 704)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!245, !194, !4473}
!4473 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !60, line: 52, baseType: !4474)
!4474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !60, line: 50, size: 32, elements: !4475)
!4475 = !{!4476}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4474, file: !60, line: 51, baseType: !245, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4431, file: !108, line: 113, baseType: !4390, size: 64, offset: 768)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4431, file: !108, line: 114, baseType: !314, size: 64, offset: 832)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4431, file: !108, line: 115, baseType: !314, size: 64, offset: 896)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4431, file: !108, line: 117, baseType: !4385, size: 64, offset: 960)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4431, file: !108, line: 118, baseType: !4381, size: 64, offset: 1024)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4431, file: !108, line: 120, baseType: !4483, size: 64, offset: 1088)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !108, line: 120, flags: DIFlagFwdDecl)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4417, file: !4418, line: 91, baseType: !4373, size: 64, offset: 448)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4417, file: !4418, line: 92, baseType: !4390, size: 64, offset: 512)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4417, file: !4418, line: 93, baseType: !4381, size: 64, offset: 576)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4417, file: !4418, line: 94, baseType: !4390, size: 64, offset: 640)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4417, file: !4418, line: 95, baseType: !4381, size: 64, offset: 704)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4417, file: !4418, line: 97, baseType: !4390, size: 64, offset: 768)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4417, file: !4418, line: 98, baseType: !4390, size: 64, offset: 832)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4417, file: !4418, line: 100, baseType: !4470, size: 64, offset: 896)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4417, file: !4418, line: 101, baseType: !4390, size: 64, offset: 960)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4417, file: !4418, line: 103, baseType: !4390, size: 64, offset: 1024)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4417, file: !4418, line: 105, baseType: !4390, size: 64, offset: 1088)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4417, file: !4418, line: 107, baseType: !4385, size: 64, offset: 1152)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4417, file: !4418, line: 109, baseType: !4498, size: 64, offset: 1216)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4500)
!4500 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4418, line: 109, flags: DIFlagFwdDecl)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4417, file: !4418, line: 111, baseType: !4502, size: 64, offset: 1280)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4418, line: 111, flags: DIFlagFwdDecl)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4417, file: !4418, line: 112, baseType: !635, offset: 1344)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4417, file: !4418, line: 114, baseType: !477, size: 8, offset: 1344)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !195, file: !114, line: 471, baseType: !4430, size: 64, offset: 832)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !195, file: !114, line: 473, baseType: !334, size: 64, offset: 896)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !195, file: !114, line: 475, baseType: !334, size: 64, offset: 960)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !195, file: !114, line: 480, baseType: !713, size: 192, offset: 1024)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !195, file: !114, line: 484, baseType: !4511, size: 576, offset: 1216)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !114, line: 361, size: 576, elements: !4512)
!4512 = !{!4513, !4514, !4515, !4516, !4517, !4518}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4511, file: !114, line: 362, baseType: !206, size: 128)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4511, file: !114, line: 363, baseType: !206, size: 128, offset: 128)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4511, file: !114, line: 364, baseType: !206, size: 128, offset: 256)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4511, file: !114, line: 365, baseType: !206, size: 128, offset: 384)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4511, file: !114, line: 366, baseType: !477, size: 8, offset: 512)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4511, file: !114, line: 367, baseType: !113, size: 32, offset: 544)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !195, file: !114, line: 485, baseType: !4520, size: 2304, offset: 1792)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !60, line: 565, size: 2304, elements: !4521)
!4521 = !{!4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4606, !4610}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4520, file: !60, line: 566, baseType: !4473, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4520, file: !60, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4520, file: !60, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4520, file: !60, line: 569, baseType: !477, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4520, file: !60, line: 570, baseType: !477, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4520, file: !60, line: 571, baseType: !477, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4520, file: !60, line: 572, baseType: !477, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4520, file: !60, line: 573, baseType: !477, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4520, file: !60, line: 574, baseType: !477, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4520, file: !60, line: 575, baseType: !477, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4520, file: !60, line: 576, baseType: !477, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4520, file: !60, line: 577, baseType: !402, size: 32, offset: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4520, file: !60, line: 578, baseType: !219, offset: 96)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4520, file: !60, line: 580, baseType: !206, size: 128, offset: 128)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4520, file: !60, line: 581, baseType: !1553, size: 192, offset: 256)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4520, file: !60, line: 582, baseType: !4538, size: 64, offset: 448)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4540, line: 43, size: 1472, elements: !4541)
!4540 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4541 = !{!4542, !4543, !4544, !4545, !4546, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4539, file: !4540, line: 44, baseType: !202, size: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4539, file: !4540, line: 45, baseType: !245, size: 32, offset: 64)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4539, file: !4540, line: 46, baseType: !206, size: 128, offset: 128)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4539, file: !4540, line: 47, baseType: !219, offset: 256)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4539, file: !4540, line: 48, baseType: !4547, size: 64, offset: 256)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !60, line: 533, flags: DIFlagFwdDecl)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4539, file: !4540, line: 49, baseType: !2159, size: 320, offset: 320)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4539, file: !4540, line: 50, baseType: !189, size: 64, offset: 640)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4539, file: !4540, line: 51, baseType: !1352, size: 64, offset: 704)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4539, file: !4540, line: 52, baseType: !1352, size: 64, offset: 768)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4539, file: !4540, line: 53, baseType: !1352, size: 64, offset: 832)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4539, file: !4540, line: 54, baseType: !1352, size: 64, offset: 896)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4539, file: !4540, line: 55, baseType: !1352, size: 64, offset: 960)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4539, file: !4540, line: 56, baseType: !189, size: 64, offset: 1024)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4539, file: !4540, line: 57, baseType: !189, size: 64, offset: 1088)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4539, file: !4540, line: 58, baseType: !189, size: 64, offset: 1152)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4539, file: !4540, line: 59, baseType: !189, size: 64, offset: 1216)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4539, file: !4540, line: 60, baseType: !189, size: 64, offset: 1280)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4539, file: !4540, line: 61, baseType: !194, size: 64, offset: 1344)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4539, file: !4540, line: 62, baseType: !477, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4539, file: !4540, line: 63, baseType: !477, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4520, file: !60, line: 583, baseType: !477, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4520, file: !60, line: 584, baseType: !477, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4520, file: !60, line: 585, baseType: !477, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4520, file: !60, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4520, file: !60, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4520, file: !60, line: 592, baseType: !1344, size: 512, offset: 576)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4520, file: !60, line: 593, baseType: !408, size: 64, offset: 1088)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4520, file: !60, line: 594, baseType: !2047, size: 256, offset: 1152)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4520, file: !60, line: 595, baseType: !1533, size: 128, offset: 1408)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4520, file: !60, line: 596, baseType: !4547, size: 64, offset: 1536)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4520, file: !60, line: 597, baseType: !787, size: 32, offset: 1600)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4520, file: !60, line: 598, baseType: !787, size: 32, offset: 1632)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4520, file: !60, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4520, file: !60, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4520, file: !60, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4520, file: !60, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4520, file: !60, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4520, file: !60, line: 604, baseType: !477, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4520, file: !60, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4520, file: !60, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4520, file: !60, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4520, file: !60, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4520, file: !60, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4520, file: !60, line: 610, baseType: !7, size: 32, offset: 1696)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4520, file: !60, line: 611, baseType: !120, size: 32, offset: 1728)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4520, file: !60, line: 612, baseType: !59, size: 32, offset: 1760)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4520, file: !60, line: 613, baseType: !245, size: 32, offset: 1792)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4520, file: !60, line: 614, baseType: !245, size: 32, offset: 1824)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4520, file: !60, line: 615, baseType: !408, size: 64, offset: 1856)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4520, file: !60, line: 616, baseType: !408, size: 64, offset: 1920)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4520, file: !60, line: 617, baseType: !408, size: 64, offset: 1984)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4520, file: !60, line: 618, baseType: !408, size: 64, offset: 2048)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4520, file: !60, line: 620, baseType: !4597, size: 64, offset: 2112)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !60, line: 536, size: 256, elements: !4599)
!4599 = !{!4600, !4601, !4602, !4603}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4598, file: !60, line: 537, baseType: !219)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4598, file: !60, line: 538, baseType: !7, size: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4598, file: !60, line: 540, baseType: !206, size: 128, offset: 64)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4598, file: !60, line: 543, baseType: !4604, size: 64, offset: 192)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !60, line: 534, flags: DIFlagFwdDecl)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4520, file: !60, line: 621, baseType: !4607, size: 64, offset: 2176)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{null, !194, !1496}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4520, file: !60, line: 622, baseType: !4611, size: 64, offset: 2240)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !60, line: 622, flags: DIFlagFwdDecl)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !195, file: !114, line: 486, baseType: !4614, size: 64, offset: 4096)
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !60, line: 642, size: 1792, elements: !4616)
!4616 = !{!4617, !4618, !4619, !4623, !4624, !4625}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4615, file: !60, line: 643, baseType: !4387, size: 1472)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4615, file: !60, line: 644, baseType: !4390, size: 64, offset: 1472)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4615, file: !60, line: 645, baseType: !4620, size: 64, offset: 1536)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{null, !194, !477}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4615, file: !60, line: 646, baseType: !4390, size: 64, offset: 1600)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4615, file: !60, line: 647, baseType: !4381, size: 64, offset: 1664)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4615, file: !60, line: 648, baseType: !4381, size: 64, offset: 1728)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !195, file: !114, line: 493, baseType: !4627, size: 64, offset: 4160)
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4629, line: 13, flags: DIFlagFwdDecl)
!4629 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !195, file: !114, line: 499, baseType: !206, size: 128, offset: 4224)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !195, file: !114, line: 502, baseType: !4632, size: 64, offset: 4352)
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4634)
!4634 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !114, line: 502, flags: DIFlagFwdDecl)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !195, file: !114, line: 504, baseType: !4636, size: 64, offset: 4416)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !195, file: !114, line: 505, baseType: !408, size: 64, offset: 4480)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !195, file: !114, line: 510, baseType: !408, size: 64, offset: 4544)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !195, file: !114, line: 511, baseType: !4640, size: 64, offset: 4608)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4642)
!4642 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !114, line: 511, flags: DIFlagFwdDecl)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !195, file: !114, line: 513, baseType: !4644, size: 64, offset: 4672)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !114, line: 288, size: 128, elements: !4646)
!4646 = !{!4647, !4648}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4645, file: !114, line: 293, baseType: !7, size: 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4645, file: !114, line: 294, baseType: !189, size: 64, offset: 64)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !195, file: !114, line: 515, baseType: !206, size: 128, offset: 4736)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !195, file: !114, line: 526, baseType: !4651, offset: 4864)
!4651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4652, line: 5, elements: !233)
!4652 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !195, file: !114, line: 528, baseType: !4654, size: 64, offset: 4864)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4656, line: 14, flags: DIFlagFwdDecl)
!4656 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !195, file: !114, line: 529, baseType: !4658, size: 64, offset: 4928)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4660, line: 17, size: 192, elements: !4661)
!4660 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4661 = !{!4662, !4663, !4746}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4659, file: !4660, line: 18, baseType: !4658, size: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4659, file: !4660, line: 19, baseType: !4664, size: 64, offset: 64)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4666)
!4666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4660, line: 110, size: 1152, elements: !4667)
!4667 = !{!4668, !4672, !4676, !4682, !4688, !4692, !4696, !4701, !4705, !4706, !4710, !4714, !4718, !4729, !4730, !4731, !4732, !4742}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4666, file: !4660, line: 111, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!4658, !4658}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4666, file: !4660, line: 112, baseType: !4673, size: 64, offset: 64)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{null, !4658}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4666, file: !4660, line: 113, baseType: !4677, size: 64, offset: 128)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!477, !4680}
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4681, size: 64)
!4681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4659)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4666, file: !4660, line: 114, baseType: !4683, size: 64, offset: 192)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!3164, !4680, !4686}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4666, file: !4660, line: 116, baseType: !4689, size: 64, offset: 256)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!477, !4680, !202}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4666, file: !4660, line: 118, baseType: !4693, size: 64, offset: 320)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!245, !4680, !202, !7, !334, !308}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4666, file: !4660, line: 123, baseType: !4697, size: 64, offset: 384)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!245, !4680, !202, !4700, !308}
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4666, file: !4660, line: 126, baseType: !4702, size: 64, offset: 448)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{!202, !4680}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4666, file: !4660, line: 127, baseType: !4702, size: 64, offset: 512)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4666, file: !4660, line: 128, baseType: !4707, size: 64, offset: 576)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!4658, !4680}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4666, file: !4660, line: 130, baseType: !4711, size: 64, offset: 640)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{!4658, !4680, !4658}
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4666, file: !4660, line: 133, baseType: !4715, size: 64, offset: 704)
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = !DISubroutineType(types: !4717)
!4717 = !{!4658, !4680, !202}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4666, file: !4660, line: 135, baseType: !4719, size: 64, offset: 768)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!245, !4680, !202, !202, !7, !7, !4722}
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4660, line: 43, size: 640, elements: !4724)
!4724 = !{!4725, !4726, !4727}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4723, file: !4660, line: 44, baseType: !4658, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4723, file: !4660, line: 45, baseType: !7, size: 32, offset: 64)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4723, file: !4660, line: 46, baseType: !4728, size: 512, offset: 128)
!4728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 512, elements: !1382)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4666, file: !4660, line: 140, baseType: !4711, size: 64, offset: 832)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4666, file: !4660, line: 143, baseType: !4707, size: 64, offset: 896)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4666, file: !4660, line: 145, baseType: !4669, size: 64, offset: 960)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4666, file: !4660, line: 146, baseType: !4733, size: 64, offset: 1024)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4734, size: 64)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!245, !4680, !4736}
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4660, line: 29, size: 128, elements: !4738)
!4738 = !{!4739, !4740, !4741}
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4737, file: !4660, line: 30, baseType: !7, size: 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4737, file: !4660, line: 31, baseType: !7, size: 32, offset: 32)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4737, file: !4660, line: 32, baseType: !4680, size: 64, offset: 64)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4666, file: !4660, line: 148, baseType: !4743, size: 64, offset: 1088)
!4743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4744, size: 64)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!245, !4680, !194}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4659, file: !4660, line: 20, baseType: !194, size: 64, offset: 128)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !195, file: !114, line: 534, baseType: !500, size: 32, offset: 4992)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !195, file: !114, line: 535, baseType: !402, size: 32, offset: 5024)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !195, file: !114, line: 537, baseType: !219, offset: 5056)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !195, file: !114, line: 538, baseType: !206, size: 128, offset: 5056)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !195, file: !114, line: 540, baseType: !4752, size: 64, offset: 5184)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4754, line: 54, size: 960, elements: !4755)
!4754 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4755 = !{!4756, !4757, !4758, !4759, !4760, !4761, !4762, !4766, !4770, !4771, !4772, !4773, !4777, !4781, !4782}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4753, file: !4754, line: 55, baseType: !202, size: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4753, file: !4754, line: 56, baseType: !620, size: 64, offset: 64)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4753, file: !4754, line: 58, baseType: !314, size: 64, offset: 128)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4753, file: !4754, line: 59, baseType: !314, size: 64, offset: 192)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4753, file: !4754, line: 60, baseType: !212, size: 64, offset: 256)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4753, file: !4754, line: 62, baseType: !4373, size: 64, offset: 320)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4753, file: !4754, line: 63, baseType: !4763, size: 64, offset: 384)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4764, size: 64)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!261, !194, !2249}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4753, file: !4754, line: 65, baseType: !4767, size: 64, offset: 448)
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !4752}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4753, file: !4754, line: 66, baseType: !4381, size: 64, offset: 512)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4753, file: !4754, line: 68, baseType: !4390, size: 64, offset: 576)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4753, file: !4754, line: 70, baseType: !4193, size: 64, offset: 640)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4753, file: !4754, line: 71, baseType: !4774, size: 64, offset: 704)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = !DISubroutineType(types: !4776)
!4776 = !{!3164, !194}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4753, file: !4754, line: 73, baseType: !4778, size: 64, offset: 768)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{null, !194, !4225, !4226}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4753, file: !4754, line: 75, baseType: !4385, size: 64, offset: 832)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4753, file: !4754, line: 77, baseType: !4502, size: 64, offset: 896)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !195, file: !114, line: 541, baseType: !314, size: 64, offset: 5248)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !195, file: !114, line: 543, baseType: !4381, size: 64, offset: 5312)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !195, file: !114, line: 544, baseType: !4786, size: 64, offset: 5376)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !114, line: 45, flags: DIFlagFwdDecl)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !195, file: !114, line: 545, baseType: !4789, size: 64, offset: 5440)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !114, line: 47, flags: DIFlagFwdDecl)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !195, file: !114, line: 547, baseType: !477, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !195, file: !114, line: 548, baseType: !477, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !195, file: !114, line: 549, baseType: !477, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !195, file: !114, line: 550, baseType: !477, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "shost", scope: !191, file: !3, line: 2248, baseType: !4796, size: 64, offset: 64)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !4798)
!4798 = !{!4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !5174, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210, !5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !4797, file: !154, line: 533, baseType: !206, size: 128)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !4797, file: !154, line: 534, baseType: !206, size: 128, offset: 128)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !4797, file: !154, line: 536, baseType: !206, size: 128, offset: 256)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !4797, file: !154, line: 538, baseType: !219, offset: 384)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !4797, file: !154, line: 539, baseType: !1122, size: 64, offset: 384)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !4797, file: !154, line: 541, baseType: !713, size: 192, offset: 448)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !4797, file: !154, line: 543, baseType: !206, size: 128, offset: 640)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !4797, file: !154, line: 544, baseType: !1268, size: 64, offset: 768)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !4797, file: !154, line: 545, baseType: !1552, size: 64, offset: 832)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !4797, file: !154, line: 547, baseType: !1533, size: 128, offset: 896)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !4797, file: !154, line: 548, baseType: !4810, size: 64, offset: 1024)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !4812)
!4812 = !{!4813, !4814, !4815, !4819, !4972, !5056, !5057, !5058, !5062, !5066, !5067, !5068, !5069, !5070, !5074, !5075, !5079, !5083, !5087, !5091, !5095, !5099, !5103, !5107, !5111, !5112, !5116, !5120, !5124, !5128, !5129, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5166, !5167, !5168, !5169, !5170, !5173}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !4811, file: !154, line: 33, baseType: !620, size: 64)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4811, file: !154, line: 34, baseType: !202, size: 64, offset: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4811, file: !154, line: 43, baseType: !4816, size: 64, offset: 128)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!202, !4796}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4811, file: !154, line: 50, baseType: !4820, size: 64, offset: 192)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!245, !4823, !7, !334}
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !4825)
!4825 = !{!4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4855, !4856, !4857, !4858, !4866, !4867, !4868, !4869, !4870, !4894, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4960, !4961, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !4824, file: !128, line: 102, baseType: !4796, size: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !4824, file: !128, line: 103, baseType: !2256, size: 64, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !4824, file: !128, line: 106, baseType: !206, size: 128, offset: 128)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !4824, file: !128, line: 107, baseType: !206, size: 128, offset: 256)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !4824, file: !128, line: 109, baseType: !787, size: 32, offset: 384)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !4824, file: !128, line: 110, baseType: !787, size: 32, offset: 416)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !4824, file: !128, line: 112, baseType: !787, size: 32, offset: 448)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4824, file: !128, line: 113, baseType: !219, offset: 480)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !4824, file: !128, line: 114, baseType: !206, size: 128, offset: 512)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4824, file: !128, line: 115, baseType: !303, size: 16, offset: 640)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !4824, file: !128, line: 116, baseType: !303, size: 16, offset: 656)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !4824, file: !128, line: 117, baseType: !303, size: 16, offset: 672)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !4824, file: !128, line: 118, baseType: !303, size: 16, offset: 688)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !4824, file: !128, line: 119, baseType: !189, size: 64, offset: 704)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !4824, file: !128, line: 120, baseType: !189, size: 64, offset: 768)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !4824, file: !128, line: 123, baseType: !189, size: 64, offset: 832)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4824, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4824, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !4824, file: !128, line: 126, baseType: !408, size: 64, offset: 960)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !4824, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !4824, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4824, file: !128, line: 131, baseType: !334, size: 64, offset: 1088)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4824, file: !128, line: 132, baseType: !414, size: 8, offset: 1152)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !4824, file: !128, line: 133, baseType: !204, size: 8, offset: 1160)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !4824, file: !128, line: 134, baseType: !204, size: 8, offset: 1168)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !4824, file: !128, line: 135, baseType: !713, size: 192, offset: 1216)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !4824, file: !128, line: 136, baseType: !414, size: 8, offset: 1408)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !4824, file: !128, line: 137, baseType: !4854, size: 64, offset: 1472)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4824, file: !128, line: 138, baseType: !202, size: 64, offset: 1536)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !4824, file: !128, line: 139, baseType: !202, size: 64, offset: 1600)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !4824, file: !128, line: 140, baseType: !202, size: 64, offset: 1664)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !4824, file: !128, line: 143, baseType: !4859, size: 64, offset: 1728)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !4861)
!4861 = !{!4862, !4863, !4864}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4860, file: !128, line: 96, baseType: !352, size: 128, align: 64)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4860, file: !128, line: 97, baseType: !245, size: 32, offset: 128)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4860, file: !128, line: 98, baseType: !4865, offset: 160)
!4865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, elements: !2063)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !4824, file: !128, line: 144, baseType: !4859, size: 64, offset: 1792)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !4824, file: !128, line: 145, baseType: !4859, size: 64, offset: 1856)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !4824, file: !128, line: 146, baseType: !4859, size: 64, offset: 1920)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !4824, file: !128, line: 147, baseType: !414, size: 8, offset: 1984)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !4824, file: !128, line: 148, baseType: !4871, size: 64, offset: 2048)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !4873)
!4873 = !{!4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !4872, file: !128, line: 290, baseType: !4823, size: 64)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !4872, file: !128, line: 291, baseType: !206, size: 128, offset: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4872, file: !128, line: 292, baseType: !206, size: 128, offset: 192)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4872, file: !128, line: 293, baseType: !195, size: 5568, offset: 320)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !4872, file: !128, line: 294, baseType: !2109, size: 32, offset: 5888)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4872, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4872, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !4872, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !4872, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !4872, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !4872, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !4872, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !4872, file: !128, line: 310, baseType: !787, size: 32, offset: 6016)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !4872, file: !128, line: 311, baseType: !787, size: 32, offset: 6048)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4872, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !4872, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !4872, file: !128, line: 321, baseType: !204, size: 8, offset: 6144)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4872, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4872, file: !128, line: 323, baseType: !334, size: 64, offset: 6208)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !4872, file: !128, line: 324, baseType: !3365, offset: 6272)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !4824, file: !128, line: 150, baseType: !4895, size: 64, offset: 2112)
!4895 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !409)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !4824, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4824, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4824, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4824, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !4824, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !4824, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !4824, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !4824, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !4824, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !4824, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !4824, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !4824, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !4824, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !4824, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !4824, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !4824, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !4824, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !4824, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !4824, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !4824, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4824, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !4824, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !4824, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !4824, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !4824, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !4824, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !4824, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !4824, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !4824, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !4824, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !4824, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !4824, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !4824, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !4824, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !4824, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !4824, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !4824, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !4824, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !4824, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !4824, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !4824, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4824, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !4824, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !4824, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !4824, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !4824, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !4824, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !4824, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !4824, file: !128, line: 208, baseType: !477, size: 8, offset: 2256)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !4824, file: !128, line: 210, baseType: !787, size: 32, offset: 2272)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !4824, file: !128, line: 212, baseType: !1422, size: 64, offset: 2304)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !4824, file: !128, line: 213, baseType: !1422, size: 64, offset: 2368)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !4824, file: !128, line: 214, baseType: !206, size: 128, offset: 2432)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !4824, file: !128, line: 215, baseType: !2047, size: 256, offset: 2560)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !4824, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !4824, file: !128, line: 220, baseType: !787, size: 32, offset: 2848)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !4824, file: !128, line: 221, baseType: !787, size: 32, offset: 2880)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !4824, file: !128, line: 222, baseType: !787, size: 32, offset: 2912)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !4824, file: !128, line: 224, baseType: !195, size: 5568, offset: 2944)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !4824, file: !128, line: 225, baseType: !195, size: 5568, offset: 8512)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !4824, file: !128, line: 227, baseType: !4957, size: 256, offset: 14080)
!4957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !2044, line: 168, size: 256, elements: !4958)
!4958 = !{!4959}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4957, file: !2044, line: 169, baseType: !2047, size: 256)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !4824, file: !128, line: 228, baseType: !2047, size: 256, offset: 14336)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4824, file: !128, line: 230, baseType: !4962, size: 64, offset: 14592)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !4824, file: !128, line: 231, baseType: !334, size: 64, offset: 14656)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !4824, file: !128, line: 233, baseType: !308, size: 64, offset: 14720)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !4824, file: !128, line: 234, baseType: !334, size: 64, offset: 14784)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !4824, file: !128, line: 236, baseType: !414, size: 8, offset: 14848)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !4824, file: !128, line: 237, baseType: !713, size: 192, offset: 14912)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !4824, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !4824, file: !128, line: 239, baseType: !1268, size: 64, offset: 15168)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !4824, file: !128, line: 240, baseType: !3365, offset: 15232)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !4811, file: !154, line: 65, baseType: !4973, size: 64, offset: 256)
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 64)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!245, !4796, !4976}
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !4978, line: 68, size: 3136, elements: !4979)
!4978 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!4979 = !{!4980, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5026, !5028, !5029, !5030, !5031, !5032, !5036, !5050, !5051, !5052, !5053, !5054, !5055}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !4977, file: !4978, line: 69, baseType: !4981, size: 448)
!4981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !4982, line: 9, size: 448, elements: !4983)
!4982 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!4983 = !{!4984, !4986, !4987, !4988, !4989, !4990, !4991, !4992}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !4981, file: !4982, line: 10, baseType: !4985, size: 128)
!4985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 128, elements: !1786)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4981, file: !4982, line: 11, baseType: !4854, size: 64, offset: 128)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !4981, file: !4982, line: 12, baseType: !303, size: 16, offset: 192)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4981, file: !4982, line: 13, baseType: !245, size: 32, offset: 224)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !4981, file: !4982, line: 14, baseType: !7, size: 32, offset: 256)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !4981, file: !4982, line: 15, baseType: !7, size: 32, offset: 288)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4981, file: !4982, line: 16, baseType: !245, size: 32, offset: 320)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !4981, file: !4982, line: 17, baseType: !334, size: 64, offset: 384)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4977, file: !4978, line: 70, baseType: !4823, size: 64, offset: 448)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !4977, file: !4978, line: 71, baseType: !206, size: 128, offset: 512)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !4977, file: !4978, line: 72, baseType: !2155, size: 704, offset: 640)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4977, file: !4978, line: 74, baseType: !352, size: 128, align: 64, offset: 1344)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !4977, file: !4978, line: 76, baseType: !245, size: 32, offset: 1472)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !4977, file: !4978, line: 83, baseType: !189, size: 64, offset: 1536)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4977, file: !4978, line: 85, baseType: !245, size: 32, offset: 1600)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !4977, file: !4978, line: 86, baseType: !245, size: 32, offset: 1632)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !4977, file: !4978, line: 88, baseType: !414, size: 8, offset: 1664)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !4977, file: !4978, line: 89, baseType: !414, size: 8, offset: 1672)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !4977, file: !4978, line: 90, baseType: !414, size: 8, offset: 1680)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !4977, file: !4978, line: 92, baseType: !303, size: 16, offset: 1696)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !4977, file: !4978, line: 93, baseType: !146, size: 32, offset: 1728)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !4977, file: !4978, line: 96, baseType: !4854, size: 64, offset: 1792)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !4977, file: !4978, line: 100, baseType: !5008, size: 192, offset: 1856)
!5008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !4978, line: 35, size: 192, elements: !5009)
!5009 = !{!5010, !5025}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5008, file: !4978, line: 36, baseType: !5011, size: 128)
!5011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5012, line: 42, size: 128, elements: !5013)
!5012 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5013 = !{!5014, !5023, !5024}
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5011, file: !5012, line: 43, baseType: !5015, size: 64)
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5012, line: 11, size: 256, elements: !5017)
!5017 = !{!5018, !5019, !5020, !5021, !5022}
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5016, file: !5012, line: 12, baseType: !189, size: 64)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5016, file: !5012, line: 13, baseType: !7, size: 32, offset: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5016, file: !5012, line: 14, baseType: !7, size: 32, offset: 96)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5016, file: !5012, line: 15, baseType: !977, size: 64, offset: 128)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5016, file: !5012, line: 17, baseType: !7, size: 32, offset: 192)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5011, file: !5012, line: 44, baseType: !7, size: 32, offset: 64)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5011, file: !5012, line: 45, baseType: !7, size: 32, offset: 96)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5008, file: !4978, line: 37, baseType: !7, size: 32, offset: 128)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !4977, file: !4978, line: 101, baseType: !5027, size: 64, offset: 2048)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !4977, file: !4978, line: 103, baseType: !7, size: 32, offset: 2112)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !4977, file: !4978, line: 106, baseType: !7, size: 32, offset: 2144)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4977, file: !4978, line: 112, baseType: !2260, size: 64, offset: 2176)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !4977, file: !4978, line: 115, baseType: !4854, size: 64, offset: 2240)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !4977, file: !4978, line: 123, baseType: !5033, size: 64, offset: 2304)
!5033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5034, size: 64)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{null, !4976}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !4977, file: !4978, line: 129, baseType: !5037, size: 512, offset: 2368)
!5037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !4978, line: 41, size: 512, elements: !5038)
!5038 = !{!5039, !5040, !5041, !5042, !5043, !5044, !5046, !5047, !5048, !5049}
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5037, file: !4978, line: 42, baseType: !261, size: 64)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5037, file: !4978, line: 43, baseType: !245, size: 32, offset: 64)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5037, file: !4978, line: 44, baseType: !5015, size: 64, offset: 128)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5037, file: !4978, line: 45, baseType: !245, size: 32, offset: 192)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5037, file: !4978, line: 47, baseType: !977, size: 64, offset: 256)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5037, file: !4978, line: 49, baseType: !5045, size: 32, offset: 320)
!5045 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !245)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5037, file: !4978, line: 50, baseType: !5045, size: 32, offset: 352)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5037, file: !4978, line: 51, baseType: !5045, size: 32, offset: 384)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5037, file: !4978, line: 52, baseType: !5045, size: 32, offset: 416)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5037, file: !4978, line: 53, baseType: !5045, size: 32, offset: 448)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !4977, file: !4978, line: 131, baseType: !4854, size: 64, offset: 2880)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4977, file: !4978, line: 139, baseType: !245, size: 32, offset: 2944)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4977, file: !4978, line: 140, baseType: !245, size: 32, offset: 2976)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4977, file: !4978, line: 141, baseType: !189, size: 64, offset: 3008)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4977, file: !4978, line: 143, baseType: !414, size: 8, offset: 3072)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !4977, file: !4978, line: 144, baseType: !7, size: 32, offset: 3104)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !4811, file: !154, line: 66, baseType: !4973, size: 64, offset: 320)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !4811, file: !154, line: 102, baseType: !4973, size: 64, offset: 384)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !4811, file: !154, line: 112, baseType: !5059, size: 64, offset: 448)
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !4796, !899}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !4811, file: !154, line: 132, baseType: !5063, size: 64, offset: 512)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!245, !4976}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !4811, file: !154, line: 133, baseType: !5063, size: 64, offset: 576)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !4811, file: !154, line: 134, baseType: !5063, size: 64, offset: 640)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !4811, file: !154, line: 135, baseType: !5063, size: 64, offset: 704)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !4811, file: !154, line: 136, baseType: !5063, size: 64, offset: 768)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !4811, file: !154, line: 164, baseType: !5071, size: 64, offset: 832)
!5071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5072, size: 64)
!5072 = !DISubroutineType(types: !5073)
!5073 = !{!245, !4823}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !4811, file: !154, line: 195, baseType: !5071, size: 64, offset: 896)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !4811, file: !154, line: 206, baseType: !5076, size: 64, offset: 960)
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 64)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{null, !4823}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !4811, file: !154, line: 220, baseType: !5080, size: 64, offset: 1024)
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!245, !4871}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !4811, file: !154, line: 230, baseType: !5084, size: 64, offset: 1088)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{null, !4871}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !4811, file: !154, line: 241, baseType: !5088, size: 64, offset: 1152)
!5088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5089, size: 64)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!245, !4796, !189}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !4811, file: !154, line: 250, baseType: !5092, size: 64, offset: 1216)
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{null, !4796}
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !4811, file: !154, line: 263, baseType: !5096, size: 64, offset: 1280)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!245, !4823, !245}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !4811, file: !154, line: 271, baseType: !5100, size: 64, offset: 1344)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!245, !4796}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !4811, file: !154, line: 278, baseType: !5104, size: 64, offset: 1408)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!477, !2260}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !4811, file: !154, line: 288, baseType: !5108, size: 64, offset: 1472)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!245, !4823, !2080, !870, !695}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4811, file: !154, line: 297, baseType: !5076, size: 64, offset: 1536)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !4811, file: !154, line: 306, baseType: !5113, size: 64, offset: 1600)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!245, !701, !4796}
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4811, file: !154, line: 307, baseType: !5117, size: 64, offset: 1664)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!245, !4796, !261, !245}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !4811, file: !154, line: 316, baseType: !5121, size: 64, offset: 1728)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!55, !4976}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !4811, file: !154, line: 326, baseType: !5125, size: 64, offset: 1792)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!245, !4796, !245}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !4811, file: !154, line: 334, baseType: !202, size: 64, offset: 1856)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !4811, file: !154, line: 340, baseType: !5130, size: 64, offset: 1920)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !5132, line: 123, flags: DIFlagFwdDecl)
!5132 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4811, file: !154, line: 347, baseType: !245, size: 32, offset: 1984)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !4811, file: !154, line: 356, baseType: !245, size: 32, offset: 2016)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !4811, file: !154, line: 362, baseType: !303, size: 16, offset: 2048)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !4811, file: !154, line: 363, baseType: !303, size: 16, offset: 2064)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4811, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4811, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !4811, file: !154, line: 379, baseType: !189, size: 64, offset: 2176)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4811, file: !154, line: 381, baseType: !189, size: 64, offset: 2240)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !4811, file: !154, line: 400, baseType: !1257, size: 16, offset: 2304)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4811, file: !154, line: 406, baseType: !414, size: 8, offset: 2320)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !4811, file: !154, line: 409, baseType: !245, size: 32, offset: 2336)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !4811, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !4811, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !4811, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !4811, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !4811, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4811, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !4811, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !4811, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !4811, file: !154, line: 459, baseType: !5153, size: 64, offset: 2432)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5154, size: 64)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !114, line: 99, size: 256, elements: !5156)
!5156 = !{!5157, !5158, !5162}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5155, file: !114, line: 100, baseType: !298, size: 128)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5155, file: !114, line: 101, baseType: !5159, size: 64, offset: 128)
!5159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5160, size: 64)
!5160 = !DISubroutineType(types: !5161)
!5161 = !{!292, !194, !5154, !261}
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5155, file: !114, line: 103, baseType: !5163, size: 64, offset: 192)
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{!292, !194, !5154, !202, !308}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !4811, file: !154, line: 464, baseType: !5153, size: 64, offset: 2496)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !4811, file: !154, line: 470, baseType: !314, size: 64, offset: 2560)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4811, file: !154, line: 479, baseType: !408, size: 64, offset: 2624)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4811, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !4811, file: !154, line: 485, baseType: !5171, size: 64, offset: 2752)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !4811, file: !154, line: 488, baseType: !245, size: 32, offset: 2816)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !4797, file: !154, line: 549, baseType: !5175, size: 64, offset: 1088)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !154, line: 23, flags: DIFlagFwdDecl)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !4797, file: !154, line: 552, baseType: !2647, size: 2304, offset: 1152)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !4797, file: !154, line: 554, baseType: !787, size: 32, offset: 3456)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !4797, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !4797, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !4797, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !4797, file: !154, line: 563, baseType: !245, size: 32, offset: 3584)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !4797, file: !154, line: 564, baseType: !189, size: 64, offset: 3648)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !4797, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !4797, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !4797, file: !154, line: 575, baseType: !408, size: 64, offset: 3776)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4797, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !4797, file: !154, line: 593, baseType: !303, size: 16, offset: 3872)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !4797, file: !154, line: 595, baseType: !245, size: 32, offset: 3904)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4797, file: !154, line: 596, baseType: !245, size: 32, offset: 3936)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !4797, file: !154, line: 597, baseType: !1257, size: 16, offset: 3968)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !4797, file: !154, line: 598, baseType: !303, size: 16, offset: 3984)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !4797, file: !154, line: 599, baseType: !303, size: 16, offset: 4000)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4797, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4797, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !4797, file: !154, line: 602, baseType: !189, size: 64, offset: 4096)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4797, file: !154, line: 603, baseType: !189, size: 64, offset: 4160)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !4797, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !4797, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !4797, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !4797, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !4797, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !4797, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !4797, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !4797, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4797, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !4797, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !4797, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !4797, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !4797, file: !154, line: 653, baseType: !5211, size: 160, offset: 4272)
!5211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 160, elements: !3238)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !4797, file: !154, line: 654, baseType: !2059, size: 64, offset: 4480)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !4797, file: !154, line: 659, baseType: !2059, size: 64, offset: 4544)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !4797, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !4797, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !4797, file: !154, line: 668, baseType: !414, size: 8, offset: 4672)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4797, file: !154, line: 671, baseType: !189, size: 64, offset: 4736)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !4797, file: !154, line: 672, baseType: !189, size: 64, offset: 4800)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !4797, file: !154, line: 673, baseType: !414, size: 8, offset: 4864)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !4797, file: !154, line: 674, baseType: !414, size: 8, offset: 4872)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4797, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !4797, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !4797, file: !154, line: 681, baseType: !195, size: 5568, offset: 4992)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !4797, file: !154, line: 681, baseType: !195, size: 5568, offset: 10560)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !4797, file: !154, line: 687, baseType: !334, size: 64, offset: 16128)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !4797, file: !154, line: 693, baseType: !194, size: 64, offset: 16192)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4797, file: !154, line: 700, baseType: !3365, align: 64, offset: 16256)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !191, file: !3, line: 2249, baseType: !5229, size: 32, offset: 128)
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !188, line: 87, baseType: !7)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !191, file: !3, line: 2250, baseType: !7, size: 32, offset: 160)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_var", scope: !191, file: !3, line: 2254, baseType: !5232, size: 2048, offset: 192)
!5232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !191, file: !3, line: 2251, size: 2048, elements: !5233)
!5233 = !{!5234, !5350}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "asc_dvc_var", scope: !5232, file: !3, line: 2252, baseType: !5235, size: 2048)
!5235 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_DVC_VAR", file: !3, line: 537, baseType: !5236)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_dvc_var", file: !3, line: 498, size: 2048, elements: !5237)
!5237 = !{!5238, !5239, !5241, !5242, !5243, !5244, !5246, !5247, !5248, !5249, !5250, !5251, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5264, !5265, !5316, !5317, !5320, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "iop_base", scope: !5236, file: !3, line: 499, baseType: !7, size: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "err_code", scope: !5236, file: !3, line: 500, baseType: !5240, size: 16, offset: 32)
!5240 = !DIDerivedType(tag: DW_TAG_typedef, name: "ushort", file: !188, line: 86, baseType: !303)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_cntl", scope: !5236, file: !3, line: 501, baseType: !5240, size: 16, offset: 48)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "bug_fix_cntl", scope: !5236, file: !3, line: 502, baseType: !5240, size: 16, offset: 64)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "bus_type", scope: !5236, file: !3, line: 503, baseType: !5240, size: 16, offset: 80)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "init_sdtr", scope: !5236, file: !3, line: 504, baseType: !5245, size: 8, offset: 96)
!5245 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !3, line: 63, baseType: !414)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_done", scope: !5236, file: !3, line: 505, baseType: !5245, size: 8, offset: 104)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "use_tagged_qng", scope: !5236, file: !3, line: 506, baseType: !5245, size: 8, offset: 112)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "unit_not_ready", scope: !5236, file: !3, line: 507, baseType: !5245, size: 8, offset: 120)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "queue_full_or_busy", scope: !5236, file: !3, line: 508, baseType: !5245, size: 8, offset: 128)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "start_motor", scope: !5236, file: !3, line: 509, baseType: !5245, size: 8, offset: 136)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "overrun_buf", scope: !5236, file: !3, line: 510, baseType: !5252, size: 64, offset: 192)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 64)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "overrun_dma", scope: !5236, file: !3, line: 511, baseType: !977, size: 64, offset: 256)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_reset_wait", scope: !5236, file: !3, line: 512, baseType: !5245, size: 8, offset: 320)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "chip_no", scope: !5236, file: !3, line: 513, baseType: !5245, size: 8, offset: 328)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "is_in_int", scope: !5236, file: !3, line: 514, baseType: !477, size: 8, offset: 336)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_qng", scope: !5236, file: !3, line: 515, baseType: !5245, size: 8, offset: 344)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "cur_total_qng", scope: !5236, file: !3, line: 516, baseType: !5245, size: 8, offset: 352)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "in_critical_cnt", scope: !5236, file: !3, line: 517, baseType: !5245, size: 8, offset: 360)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "last_q_shortage", scope: !5236, file: !3, line: 518, baseType: !5245, size: 8, offset: 368)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !5236, file: !3, line: 519, baseType: !5240, size: 16, offset: 384)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dvc_qng", scope: !5236, file: !3, line: 520, baseType: !5263, size: 64, offset: 400)
!5263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 64, elements: !1382)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "max_dvc_qng", scope: !5236, file: !3, line: 521, baseType: !5263, size: 64, offset: 464)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "scsiq_busy_head", scope: !5236, file: !3, line: 522, baseType: !5266, size: 512, offset: 576)
!5266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5267, size: 512, elements: !1382)
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SCSI_Q", file: !3, line: 329, baseType: !5269)
!5269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_scsi_q", file: !3, line: 322, size: 512, elements: !5270)
!5270 = !{!5271, !5287, !5297, !5298, !5314, !5315}
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "q1", scope: !5269, file: !3, line: 323, baseType: !5272, size: 192)
!5272 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SCSIQ_1", file: !3, line: 267, baseType: !5273)
!5273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_scsiq_1", file: !3, line: 255, size: 192, elements: !5274)
!5274 = !{!5275, !5276, !5277, !5278, !5279, !5280, !5281, !5283, !5284, !5285, !5286}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5273, file: !3, line: 256, baseType: !5245, size: 8)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "q_no", scope: !5273, file: !3, line: 257, baseType: !5245, size: 8, offset: 8)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "cntl", scope: !5273, file: !3, line: 258, baseType: !5245, size: 8, offset: 16)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "sg_queue_cnt", scope: !5273, file: !3, line: 259, baseType: !5245, size: 8, offset: 24)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "target_id", scope: !5273, file: !3, line: 260, baseType: !5245, size: 8, offset: 32)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "target_lun", scope: !5273, file: !3, line: 261, baseType: !5245, size: 8, offset: 40)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !5273, file: !3, line: 262, baseType: !5282, size: 32, offset: 64)
!5282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !3910, line: 31, baseType: !404)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !5273, file: !3, line: 263, baseType: !5282, size: 32, offset: 96)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "sense_addr", scope: !5273, file: !3, line: 264, baseType: !5282, size: 32, offset: 128)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5273, file: !3, line: 265, baseType: !5245, size: 8, offset: 160)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "extra_bytes", scope: !5273, file: !3, line: 266, baseType: !5245, size: 8, offset: 168)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "q2", scope: !5269, file: !3, line: 324, baseType: !5288, size: 96, offset: 192)
!5288 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SCSIQ_2", file: !3, line: 276, baseType: !5289)
!5289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_scsiq_2", file: !3, line: 269, size: 96, elements: !5290)
!5290 = !{!5291, !5292, !5293, !5294, !5295, !5296}
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "srb_tag", scope: !5289, file: !3, line: 270, baseType: !402, size: 32)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "target_ix", scope: !5289, file: !3, line: 271, baseType: !5245, size: 8, offset: 32)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5289, file: !3, line: 272, baseType: !5245, size: 8, offset: 40)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !5289, file: !3, line: 273, baseType: !5245, size: 8, offset: 48)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "tag_code", scope: !5289, file: !3, line: 274, baseType: !5245, size: 8, offset: 56)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "vm_id", scope: !5289, file: !3, line: 275, baseType: !5240, size: 16, offset: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "cdbptr", scope: !5269, file: !3, line: 325, baseType: !5252, size: 64, offset: 320)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "sg_head", scope: !5269, file: !3, line: 326, baseType: !5299, size: 64, offset: 384)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SG_HEAD", file: !3, line: 320, baseType: !5301)
!5301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_sg_head", file: !3, line: 314, size: 64, elements: !5302)
!5302 = !{!5303, !5304, !5305, !5306, !5307}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "entry_cnt", scope: !5301, file: !3, line: 315, baseType: !5240, size: 16)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "queue_cnt", scope: !5301, file: !3, line: 316, baseType: !5240, size: 16, offset: 16)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "entry_to_copy", scope: !5301, file: !3, line: 317, baseType: !5240, size: 16, offset: 32)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !5301, file: !3, line: 318, baseType: !5240, size: 16, offset: 48)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !5301, file: !3, line: 319, baseType: !5308, offset: 64)
!5308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5309, elements: !2063)
!5309 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SG_LIST", file: !3, line: 312, baseType: !5310)
!5310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_sg_list", file: !3, line: 309, size: 64, elements: !5311)
!5311 = !{!5312, !5313}
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5310, file: !3, line: 310, baseType: !5282, size: 32)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5310, file: !3, line: 311, baseType: !5282, size: 32, offset: 32)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "remain_sg_entry_cnt", scope: !5269, file: !3, line: 327, baseType: !5240, size: 16, offset: 448)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "next_sg_index", scope: !5269, file: !3, line: 328, baseType: !5240, size: 16, offset: 464)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "scsiq_busy_tail", scope: !5236, file: !3, line: 523, baseType: !5266, size: 512, offset: 1088)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_period_tbl", scope: !5236, file: !3, line: 524, baseType: !5318, size: 64, offset: 1600)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5245)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !5236, file: !3, line: 525, baseType: !5321, size: 64, offset: 1664)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_DVC_CFG", file: !3, line: 475, baseType: !5323)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_dvc_cfg", file: !3, line: 461, size: 272, elements: !5324)
!5324 = !{!5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "can_tagged_qng", scope: !5323, file: !3, line: 462, baseType: !5245, size: 8)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_qng_enabled", scope: !5323, file: !3, line: 463, baseType: !5245, size: 8, offset: 8)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "disc_enable", scope: !5323, file: !3, line: 464, baseType: !5245, size: 8, offset: 16)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_enable", scope: !5323, file: !3, line: 465, baseType: !5245, size: 8, offset: 24)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "chip_scsi_id", scope: !5323, file: !3, line: 466, baseType: !5245, size: 8, offset: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "isa_dma_speed", scope: !5323, file: !3, line: 467, baseType: !5245, size: 8, offset: 40)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "isa_dma_channel", scope: !5323, file: !3, line: 468, baseType: !5245, size: 8, offset: 48)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "chip_version", scope: !5323, file: !3, line: 469, baseType: !5245, size: 8, offset: 56)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "mcode_date", scope: !5323, file: !3, line: 470, baseType: !5240, size: 16, offset: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "mcode_version", scope: !5323, file: !3, line: 471, baseType: !5240, size: 16, offset: 80)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "max_tag_qng", scope: !5323, file: !3, line: 472, baseType: !5263, size: 64, offset: 96)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_period_offset", scope: !5323, file: !3, line: 473, baseType: !5263, size: 64, offset: 160)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_info", scope: !5323, file: !3, line: 474, baseType: !5338, size: 48, offset: 224)
!5338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 48, elements: !1676)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "pci_fix_asyn_xfer_always", scope: !5236, file: !3, line: 526, baseType: !5245, size: 8, offset: 1728)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "redo_scam", scope: !5236, file: !3, line: 527, baseType: !204, size: 8, offset: 1736)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "res2", scope: !5236, file: !3, line: 528, baseType: !5240, size: 16, offset: 1744)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "dos_int13_table", scope: !5236, file: !3, line: 529, baseType: !5263, size: 64, offset: 1760)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "max_dma_count", scope: !5236, file: !3, line: 530, baseType: !7, size: 32, offset: 1824)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "no_scam", scope: !5236, file: !3, line: 531, baseType: !5245, size: 8, offset: 1856)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "pci_fix_asyn_xfer", scope: !5236, file: !3, line: 532, baseType: !5245, size: 8, offset: 1864)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "min_sdtr_index", scope: !5236, file: !3, line: 533, baseType: !5245, size: 8, offset: 1872)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "max_sdtr_index", scope: !5236, file: !3, line: 534, baseType: !5245, size: 8, offset: 1880)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "drv_ptr", scope: !5236, file: !3, line: 535, baseType: !190, size: 64, offset: 1920)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "uc_break", scope: !5236, file: !3, line: 536, baseType: !7, size: 32, offset: 1984)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "adv_dvc_var", scope: !5232, file: !3, line: 2253, baseType: !5351, size: 896)
!5351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADV_DVC_VAR", file: !3, line: 1853, baseType: !5352)
!5352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_dvc_var", file: !3, line: 1819, size: 896, elements: !5353)
!5353 = !{!5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5385, !5386, !5387, !5388, !5389, !5390}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "iop_base", scope: !5352, file: !3, line: 1820, baseType: !334, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "err_code", scope: !5352, file: !3, line: 1821, baseType: !5240, size: 16, offset: 64)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "bios_ctrl", scope: !5352, file: !3, line: 1822, baseType: !5240, size: 16, offset: 80)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr_able", scope: !5352, file: !3, line: 1823, baseType: !5240, size: 16, offset: 96)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_able", scope: !5352, file: !3, line: 1824, baseType: !5240, size: 16, offset: 112)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "ultra_able", scope: !5352, file: !3, line: 1825, baseType: !5240, size: 16, offset: 128)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed1", scope: !5352, file: !3, line: 1826, baseType: !5240, size: 16, offset: 144)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed2", scope: !5352, file: !3, line: 1827, baseType: !5240, size: 16, offset: 160)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed3", scope: !5352, file: !3, line: 1828, baseType: !5240, size: 16, offset: 176)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed4", scope: !5352, file: !3, line: 1829, baseType: !5240, size: 16, offset: 192)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "tagqng_able", scope: !5352, file: !3, line: 1830, baseType: !5240, size: 16, offset: 208)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "ppr_able", scope: !5352, file: !3, line: 1831, baseType: !5240, size: 16, offset: 224)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "max_dvc_qng", scope: !5352, file: !3, line: 1832, baseType: !5245, size: 8, offset: 240)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "start_motor", scope: !5352, file: !3, line: 1833, baseType: !5240, size: 16, offset: 256)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_reset_wait", scope: !5352, file: !3, line: 1834, baseType: !5245, size: 8, offset: 272)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "chip_no", scope: !5352, file: !3, line: 1835, baseType: !5245, size: 8, offset: 280)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_qng", scope: !5352, file: !3, line: 1836, baseType: !5245, size: 8, offset: 288)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "no_scam", scope: !5352, file: !3, line: 1837, baseType: !5240, size: 16, offset: 304)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "drv_ptr", scope: !5352, file: !3, line: 1838, baseType: !190, size: 64, offset: 320)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "chip_scsi_id", scope: !5352, file: !3, line: 1839, baseType: !5245, size: 8, offset: 384)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "chip_type", scope: !5352, file: !3, line: 1840, baseType: !5245, size: 8, offset: 392)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "bist_err_code", scope: !5352, file: !3, line: 1841, baseType: !5245, size: 8, offset: 400)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "carrier", scope: !5352, file: !3, line: 1842, baseType: !5377, size: 64, offset: 448)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADV_CARR_T", file: !3, line: 1672, baseType: !5379)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_carr_t", file: !3, line: 1661, size: 128, elements: !5380)
!5380 = !{!5381, !5382, !5383, !5384}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "carr_va", scope: !5379, file: !3, line: 1662, baseType: !5282, size: 32)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "carr_pa", scope: !5379, file: !3, line: 1663, baseType: !5282, size: 32, offset: 32)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "areq_vpa", scope: !5379, file: !3, line: 1664, baseType: !5282, size: 32, offset: 64)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "next_vpa", scope: !5379, file: !3, line: 1671, baseType: !5282, size: 32, offset: 96)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "carr_freelist", scope: !5352, file: !3, line: 1843, baseType: !5377, size: 64, offset: 512)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_addr", scope: !5352, file: !3, line: 1844, baseType: !977, size: 64, offset: 576)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "icq_sp", scope: !5352, file: !3, line: 1845, baseType: !5377, size: 64, offset: 640)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "irq_sp", scope: !5352, file: !3, line: 1846, baseType: !5377, size: 64, offset: 704)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "carr_pending_cnt", scope: !5352, file: !3, line: 1847, baseType: !5240, size: 16, offset: 768)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !5352, file: !3, line: 1852, baseType: !5391, size: 64, offset: 832)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADV_DVC_CFG", file: !3, line: 1719, baseType: !5393)
!5393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_dvc_cfg", file: !3, line: 1709, size: 128, elements: !5394)
!5394 = !{!5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "disc_enable", scope: !5393, file: !3, line: 1710, baseType: !5240, size: 16)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "chip_version", scope: !5393, file: !3, line: 1711, baseType: !5245, size: 8, offset: 16)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "termination", scope: !5393, file: !3, line: 1712, baseType: !5245, size: 8, offset: 24)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "control_flag", scope: !5393, file: !3, line: 1713, baseType: !5240, size: 16, offset: 32)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "mcode_date", scope: !5393, file: !3, line: 1714, baseType: !5240, size: 16, offset: 48)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "mcode_version", scope: !5393, file: !3, line: 1715, baseType: !5240, size: 16, offset: 64)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "serial1", scope: !5393, file: !3, line: 1716, baseType: !5240, size: 16, offset: 80)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "serial2", scope: !5393, file: !3, line: 1717, baseType: !5240, size: 16, offset: 96)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "serial3", scope: !5393, file: !3, line: 1718, baseType: !5240, size: 16, offset: 112)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_cfg", scope: !191, file: !3, line: 2258, baseType: !5405, size: 272, offset: 2240)
!5405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !191, file: !3, line: 2255, size: 272, elements: !5406)
!5406 = !{!5407, !5408}
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "asc_dvc_cfg", scope: !5405, file: !3, line: 2256, baseType: !5322, size: 272)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "adv_dvc_cfg", scope: !5405, file: !3, line: 2257, baseType: !5392, size: 128)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "asc_n_io_port", scope: !191, file: !3, line: 2259, baseType: !5240, size: 16, offset: 2512)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "init_tidmask", scope: !191, file: !3, line: 2260, baseType: !5240, size: 16, offset: 2528)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "reqcnt", scope: !191, file: !3, line: 2261, baseType: !5412, size: 256, offset: 2544)
!5412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5240, size: 256, elements: !1786)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "queue_full", scope: !191, file: !3, line: 2262, baseType: !5240, size: 16, offset: 2800)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "queue_full_cnt", scope: !191, file: !3, line: 2263, baseType: !5412, size: 256, offset: 2816)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "eep_config", scope: !191, file: !3, line: 2269, baseType: !5416, size: 1024, offset: 3072)
!5416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !191, file: !3, line: 2264, size: 1024, elements: !5417)
!5417 = !{!5418, !5438, !5477, !5542}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "asc_eep", scope: !5416, file: !3, line: 2265, baseType: !5419, size: 256)
!5419 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASCEEP_CONFIG", file: !3, line: 606, baseType: !5420)
!5420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asceep_config", file: !3, line: 588, size: 256, elements: !5421)
!5421 = !{!5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_lsw", scope: !5420, file: !3, line: 589, baseType: !5240, size: 16)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_msw", scope: !5420, file: !3, line: 590, baseType: !5240, size: 16, offset: 16)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "init_sdtr", scope: !5420, file: !3, line: 591, baseType: !5245, size: 8, offset: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "disc_enable", scope: !5420, file: !3, line: 592, baseType: !5245, size: 8, offset: 40)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "use_cmd_qng", scope: !5420, file: !3, line: 593, baseType: !5245, size: 8, offset: 48)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "start_motor", scope: !5420, file: !3, line: 594, baseType: !5245, size: 8, offset: 56)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_qng", scope: !5420, file: !3, line: 595, baseType: !5245, size: 8, offset: 64)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "max_tag_qng", scope: !5420, file: !3, line: 596, baseType: !5245, size: 8, offset: 72)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "bios_scan", scope: !5420, file: !3, line: 597, baseType: !5245, size: 8, offset: 80)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "power_up_wait", scope: !5420, file: !3, line: 598, baseType: !5245, size: 8, offset: 88)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "no_scam", scope: !5420, file: !3, line: 599, baseType: !5245, size: 8, offset: 96)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "id_speed", scope: !5420, file: !3, line: 600, baseType: !5245, size: 8, offset: 104)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "dos_int13_table", scope: !5420, file: !3, line: 602, baseType: !5263, size: 64, offset: 112)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_info", scope: !5420, file: !3, line: 603, baseType: !5338, size: 48, offset: 176)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "cntl", scope: !5420, file: !3, line: 604, baseType: !5240, size: 16, offset: 224)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "chksum", scope: !5420, file: !3, line: 605, baseType: !5240, size: 16, offset: 240)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "adv_3550_eep", scope: !5416, file: !3, line: 2266, baseType: !5439, size: 592)
!5439 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADVEEP_3550_CONFIG", file: !3, line: 995, baseType: !5440)
!5440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adveep_3550_config", file: !3, line: 928, size: 592, elements: !5441)
!5441 = !{!5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5470, !5471, !5472, !5473, !5474, !5475, !5476}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_lsw", scope: !5440, file: !3, line: 931, baseType: !5240, size: 16)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_msw", scope: !5440, file: !3, line: 935, baseType: !5240, size: 16, offset: 16)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "disc_enable", scope: !5440, file: !3, line: 936, baseType: !5240, size: 16, offset: 32)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr_able", scope: !5440, file: !3, line: 937, baseType: !5240, size: 16, offset: 48)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_able", scope: !5440, file: !3, line: 938, baseType: !5240, size: 16, offset: 64)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "start_motor", scope: !5440, file: !3, line: 939, baseType: !5240, size: 16, offset: 80)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "tagqng_able", scope: !5440, file: !3, line: 940, baseType: !5240, size: 16, offset: 96)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "bios_scan", scope: !5440, file: !3, line: 941, baseType: !5240, size: 16, offset: 112)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "scam_tolerant", scope: !5440, file: !3, line: 942, baseType: !5240, size: 16, offset: 128)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_scsi_id", scope: !5440, file: !3, line: 944, baseType: !5245, size: 8, offset: 144)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "bios_boot_delay", scope: !5440, file: !3, line: 945, baseType: !5245, size: 8, offset: 152)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_reset_delay", scope: !5440, file: !3, line: 947, baseType: !5245, size: 8, offset: 160)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "bios_id_lun", scope: !5440, file: !3, line: 948, baseType: !5245, size: 8, offset: 168)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "termination", scope: !5440, file: !3, line: 952, baseType: !5245, size: 8, offset: 176)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5440, file: !3, line: 958, baseType: !5245, size: 8, offset: 184)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "bios_ctrl", scope: !5440, file: !3, line: 960, baseType: !5240, size: 16, offset: 192)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "ultra_able", scope: !5440, file: !3, line: 977, baseType: !5240, size: 16, offset: 208)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5440, file: !3, line: 978, baseType: !5240, size: 16, offset: 224)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_qng", scope: !5440, file: !3, line: 979, baseType: !5245, size: 8, offset: 240)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "max_dvc_qng", scope: !5440, file: !3, line: 980, baseType: !5245, size: 8, offset: 248)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_cntl", scope: !5440, file: !3, line: 981, baseType: !5240, size: 16, offset: 256)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "bug_fix", scope: !5440, file: !3, line: 982, baseType: !5240, size: 16, offset: 272)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word1", scope: !5440, file: !3, line: 983, baseType: !5240, size: 16, offset: 288)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word2", scope: !5440, file: !3, line: 984, baseType: !5240, size: 16, offset: 304)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word3", scope: !5440, file: !3, line: 985, baseType: !5240, size: 16, offset: 320)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "check_sum", scope: !5440, file: !3, line: 986, baseType: !5240, size: 16, offset: 336)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "oem_name", scope: !5440, file: !3, line: 987, baseType: !5469, size: 128, offset: 352)
!5469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 128, elements: !1786)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_err_code", scope: !5440, file: !3, line: 988, baseType: !5240, size: 16, offset: 480)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "adv_err_code", scope: !5440, file: !3, line: 989, baseType: !5240, size: 16, offset: 496)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "adv_err_addr", scope: !5440, file: !3, line: 990, baseType: !5240, size: 16, offset: 512)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dvc_err_code", scope: !5440, file: !3, line: 991, baseType: !5240, size: 16, offset: 528)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "saved_adv_err_code", scope: !5440, file: !3, line: 992, baseType: !5240, size: 16, offset: 544)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "saved_adv_err_addr", scope: !5440, file: !3, line: 993, baseType: !5240, size: 16, offset: 560)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_err", scope: !5440, file: !3, line: 994, baseType: !5240, size: 16, offset: 576)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "adv_38C0800_eep", scope: !5416, file: !3, line: 2267, baseType: !5478, size: 1024)
!5478 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADVEEP_38C0800_CONFIG", file: !3, line: 1095, baseType: !5479)
!5479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adveep_38C0800_config", file: !3, line: 997, size: 1024, elements: !5480)
!5480 = !{!5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541}
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_lsw", scope: !5479, file: !3, line: 1000, baseType: !5240, size: 16)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_msw", scope: !5479, file: !3, line: 1004, baseType: !5240, size: 16, offset: 16)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "disc_enable", scope: !5479, file: !3, line: 1005, baseType: !5240, size: 16, offset: 32)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr_able", scope: !5479, file: !3, line: 1006, baseType: !5240, size: 16, offset: 48)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed1", scope: !5479, file: !3, line: 1007, baseType: !5240, size: 16, offset: 64)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "start_motor", scope: !5479, file: !3, line: 1008, baseType: !5240, size: 16, offset: 80)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "tagqng_able", scope: !5479, file: !3, line: 1009, baseType: !5240, size: 16, offset: 96)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "bios_scan", scope: !5479, file: !3, line: 1010, baseType: !5240, size: 16, offset: 112)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "scam_tolerant", scope: !5479, file: !3, line: 1011, baseType: !5240, size: 16, offset: 128)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_scsi_id", scope: !5479, file: !3, line: 1013, baseType: !5245, size: 8, offset: 144)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "bios_boot_delay", scope: !5479, file: !3, line: 1014, baseType: !5245, size: 8, offset: 152)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_reset_delay", scope: !5479, file: !3, line: 1016, baseType: !5245, size: 8, offset: 160)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "bios_id_lun", scope: !5479, file: !3, line: 1017, baseType: !5245, size: 8, offset: 168)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "termination_se", scope: !5479, file: !3, line: 1021, baseType: !5245, size: 8, offset: 176)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "termination_lvd", scope: !5479, file: !3, line: 1027, baseType: !5245, size: 8, offset: 184)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "bios_ctrl", scope: !5479, file: !3, line: 1033, baseType: !5240, size: 16, offset: 192)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed2", scope: !5479, file: !3, line: 1050, baseType: !5240, size: 16, offset: 208)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed3", scope: !5479, file: !3, line: 1051, baseType: !5240, size: 16, offset: 224)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_qng", scope: !5479, file: !3, line: 1052, baseType: !5245, size: 8, offset: 240)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "max_dvc_qng", scope: !5479, file: !3, line: 1053, baseType: !5245, size: 8, offset: 248)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_cntl", scope: !5479, file: !3, line: 1054, baseType: !5240, size: 16, offset: 256)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed4", scope: !5479, file: !3, line: 1055, baseType: !5240, size: 16, offset: 272)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word1", scope: !5479, file: !3, line: 1056, baseType: !5240, size: 16, offset: 288)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word2", scope: !5479, file: !3, line: 1057, baseType: !5240, size: 16, offset: 304)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word3", scope: !5479, file: !3, line: 1058, baseType: !5240, size: 16, offset: 320)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "check_sum", scope: !5479, file: !3, line: 1059, baseType: !5240, size: 16, offset: 336)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "oem_name", scope: !5479, file: !3, line: 1060, baseType: !5469, size: 128, offset: 352)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_err_code", scope: !5479, file: !3, line: 1061, baseType: !5240, size: 16, offset: 480)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "adv_err_code", scope: !5479, file: !3, line: 1062, baseType: !5240, size: 16, offset: 496)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "adv_err_addr", scope: !5479, file: !3, line: 1063, baseType: !5240, size: 16, offset: 512)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dvc_err_code", scope: !5479, file: !3, line: 1064, baseType: !5240, size: 16, offset: 528)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "saved_adv_err_code", scope: !5479, file: !3, line: 1065, baseType: !5240, size: 16, offset: 544)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "saved_adv_err_addr", scope: !5479, file: !3, line: 1066, baseType: !5240, size: 16, offset: 560)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "reserved36", scope: !5479, file: !3, line: 1067, baseType: !5240, size: 16, offset: 576)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "reserved37", scope: !5479, file: !3, line: 1068, baseType: !5240, size: 16, offset: 592)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "reserved38", scope: !5479, file: !3, line: 1069, baseType: !5240, size: 16, offset: 608)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "reserved39", scope: !5479, file: !3, line: 1070, baseType: !5240, size: 16, offset: 624)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "reserved40", scope: !5479, file: !3, line: 1071, baseType: !5240, size: 16, offset: 640)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "reserved41", scope: !5479, file: !3, line: 1072, baseType: !5240, size: 16, offset: 656)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "reserved42", scope: !5479, file: !3, line: 1073, baseType: !5240, size: 16, offset: 672)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "reserved43", scope: !5479, file: !3, line: 1074, baseType: !5240, size: 16, offset: 688)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "reserved44", scope: !5479, file: !3, line: 1075, baseType: !5240, size: 16, offset: 704)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "reserved45", scope: !5479, file: !3, line: 1076, baseType: !5240, size: 16, offset: 720)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "reserved46", scope: !5479, file: !3, line: 1077, baseType: !5240, size: 16, offset: 736)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "reserved47", scope: !5479, file: !3, line: 1078, baseType: !5240, size: 16, offset: 752)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "reserved48", scope: !5479, file: !3, line: 1079, baseType: !5240, size: 16, offset: 768)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "reserved49", scope: !5479, file: !3, line: 1080, baseType: !5240, size: 16, offset: 784)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "reserved50", scope: !5479, file: !3, line: 1081, baseType: !5240, size: 16, offset: 800)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "reserved51", scope: !5479, file: !3, line: 1082, baseType: !5240, size: 16, offset: 816)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "reserved52", scope: !5479, file: !3, line: 1083, baseType: !5240, size: 16, offset: 832)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "reserved53", scope: !5479, file: !3, line: 1084, baseType: !5240, size: 16, offset: 848)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "reserved54", scope: !5479, file: !3, line: 1085, baseType: !5240, size: 16, offset: 864)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "reserved55", scope: !5479, file: !3, line: 1086, baseType: !5240, size: 16, offset: 880)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "cisptr_lsw", scope: !5479, file: !3, line: 1087, baseType: !5240, size: 16, offset: 896)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "cisprt_msw", scope: !5479, file: !3, line: 1088, baseType: !5240, size: 16, offset: 912)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "subsysvid", scope: !5479, file: !3, line: 1089, baseType: !5240, size: 16, offset: 928)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "subsysid", scope: !5479, file: !3, line: 1090, baseType: !5240, size: 16, offset: 944)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "reserved60", scope: !5479, file: !3, line: 1091, baseType: !5240, size: 16, offset: 960)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved61", scope: !5479, file: !3, line: 1092, baseType: !5240, size: 16, offset: 976)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved62", scope: !5479, file: !3, line: 1093, baseType: !5240, size: 16, offset: 992)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "reserved63", scope: !5479, file: !3, line: 1094, baseType: !5240, size: 16, offset: 1008)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "adv_38C1600_eep", scope: !5416, file: !3, line: 2268, baseType: !5543, size: 1024)
!5543 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADVEEP_38C1600_CONFIG", file: !3, line: 1197, baseType: !5544)
!5544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adveep_38C1600_config", file: !3, line: 1097, size: 1024, elements: !5545)
!5545 = !{!5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_lsw", scope: !5544, file: !3, line: 1100, baseType: !5240, size: 16)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_msw", scope: !5544, file: !3, line: 1106, baseType: !5240, size: 16, offset: 16)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "disc_enable", scope: !5544, file: !3, line: 1107, baseType: !5240, size: 16, offset: 32)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr_able", scope: !5544, file: !3, line: 1108, baseType: !5240, size: 16, offset: 48)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed1", scope: !5544, file: !3, line: 1109, baseType: !5240, size: 16, offset: 64)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "start_motor", scope: !5544, file: !3, line: 1110, baseType: !5240, size: 16, offset: 80)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "tagqng_able", scope: !5544, file: !3, line: 1111, baseType: !5240, size: 16, offset: 96)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "bios_scan", scope: !5544, file: !3, line: 1112, baseType: !5240, size: 16, offset: 112)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "scam_tolerant", scope: !5544, file: !3, line: 1113, baseType: !5240, size: 16, offset: 128)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_scsi_id", scope: !5544, file: !3, line: 1115, baseType: !5245, size: 8, offset: 144)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "bios_boot_delay", scope: !5544, file: !3, line: 1116, baseType: !5245, size: 8, offset: 152)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_reset_delay", scope: !5544, file: !3, line: 1118, baseType: !5245, size: 8, offset: 160)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "bios_id_lun", scope: !5544, file: !3, line: 1119, baseType: !5245, size: 8, offset: 168)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "termination_se", scope: !5544, file: !3, line: 1123, baseType: !5245, size: 8, offset: 176)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "termination_lvd", scope: !5544, file: !3, line: 1129, baseType: !5245, size: 8, offset: 184)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "bios_ctrl", scope: !5544, file: !3, line: 1135, baseType: !5240, size: 16, offset: 192)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed2", scope: !5544, file: !3, line: 1152, baseType: !5240, size: 16, offset: 208)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed3", scope: !5544, file: !3, line: 1153, baseType: !5240, size: 16, offset: 224)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_qng", scope: !5544, file: !3, line: 1154, baseType: !5245, size: 8, offset: 240)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "max_dvc_qng", scope: !5544, file: !3, line: 1155, baseType: !5245, size: 8, offset: 248)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_cntl", scope: !5544, file: !3, line: 1156, baseType: !5240, size: 16, offset: 256)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_speed4", scope: !5544, file: !3, line: 1157, baseType: !5240, size: 16, offset: 272)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word1", scope: !5544, file: !3, line: 1158, baseType: !5240, size: 16, offset: 288)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word2", scope: !5544, file: !3, line: 1159, baseType: !5240, size: 16, offset: 304)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number_word3", scope: !5544, file: !3, line: 1160, baseType: !5240, size: 16, offset: 320)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "check_sum", scope: !5544, file: !3, line: 1161, baseType: !5240, size: 16, offset: 336)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "oem_name", scope: !5544, file: !3, line: 1162, baseType: !5469, size: 128, offset: 352)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "dvc_err_code", scope: !5544, file: !3, line: 1163, baseType: !5240, size: 16, offset: 480)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "adv_err_code", scope: !5544, file: !3, line: 1164, baseType: !5240, size: 16, offset: 496)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "adv_err_addr", scope: !5544, file: !3, line: 1165, baseType: !5240, size: 16, offset: 512)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dvc_err_code", scope: !5544, file: !3, line: 1166, baseType: !5240, size: 16, offset: 528)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "saved_adv_err_code", scope: !5544, file: !3, line: 1167, baseType: !5240, size: 16, offset: 544)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "saved_adv_err_addr", scope: !5544, file: !3, line: 1168, baseType: !5240, size: 16, offset: 560)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "reserved36", scope: !5544, file: !3, line: 1169, baseType: !5240, size: 16, offset: 576)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "reserved37", scope: !5544, file: !3, line: 1170, baseType: !5240, size: 16, offset: 592)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "reserved38", scope: !5544, file: !3, line: 1171, baseType: !5240, size: 16, offset: 608)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "reserved39", scope: !5544, file: !3, line: 1172, baseType: !5240, size: 16, offset: 624)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "reserved40", scope: !5544, file: !3, line: 1173, baseType: !5240, size: 16, offset: 640)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "reserved41", scope: !5544, file: !3, line: 1174, baseType: !5240, size: 16, offset: 656)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "reserved42", scope: !5544, file: !3, line: 1175, baseType: !5240, size: 16, offset: 672)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "reserved43", scope: !5544, file: !3, line: 1176, baseType: !5240, size: 16, offset: 688)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "reserved44", scope: !5544, file: !3, line: 1177, baseType: !5240, size: 16, offset: 704)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "reserved45", scope: !5544, file: !3, line: 1178, baseType: !5240, size: 16, offset: 720)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "reserved46", scope: !5544, file: !3, line: 1179, baseType: !5240, size: 16, offset: 736)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "reserved47", scope: !5544, file: !3, line: 1180, baseType: !5240, size: 16, offset: 752)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "reserved48", scope: !5544, file: !3, line: 1181, baseType: !5240, size: 16, offset: 768)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "reserved49", scope: !5544, file: !3, line: 1182, baseType: !5240, size: 16, offset: 784)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "reserved50", scope: !5544, file: !3, line: 1183, baseType: !5240, size: 16, offset: 800)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "reserved51", scope: !5544, file: !3, line: 1184, baseType: !5240, size: 16, offset: 816)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "reserved52", scope: !5544, file: !3, line: 1185, baseType: !5240, size: 16, offset: 832)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "reserved53", scope: !5544, file: !3, line: 1186, baseType: !5240, size: 16, offset: 848)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "reserved54", scope: !5544, file: !3, line: 1187, baseType: !5240, size: 16, offset: 864)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "reserved55", scope: !5544, file: !3, line: 1188, baseType: !5240, size: 16, offset: 880)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "cisptr_lsw", scope: !5544, file: !3, line: 1189, baseType: !5240, size: 16, offset: 896)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "cisprt_msw", scope: !5544, file: !3, line: 1190, baseType: !5240, size: 16, offset: 912)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "subsysvid", scope: !5544, file: !3, line: 1191, baseType: !5240, size: 16, offset: 928)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "subsysid", scope: !5544, file: !3, line: 1192, baseType: !5240, size: 16, offset: 944)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "reserved60", scope: !5544, file: !3, line: 1193, baseType: !5240, size: 16, offset: 960)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "reserved61", scope: !5544, file: !3, line: 1194, baseType: !5240, size: 16, offset: 976)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "reserved62", scope: !5544, file: !3, line: 1195, baseType: !5240, size: 16, offset: 992)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "reserved63", scope: !5544, file: !3, line: 1196, baseType: !5240, size: 16, offset: 1008)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "asc_stats", scope: !191, file: !3, line: 2272, baseType: !5608, size: 512, offset: 4096)
!5608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_stats", file: !3, line: 2216, size: 512, elements: !5609)
!5609 = !{!5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5608, file: !3, line: 2218, baseType: !7, size: 32)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5608, file: !3, line: 2219, baseType: !7, size: 32, offset: 32)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "biosparam", scope: !5608, file: !3, line: 2220, baseType: !7, size: 32, offset: 64)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !5608, file: !3, line: 2221, baseType: !7, size: 32, offset: 96)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5608, file: !3, line: 2222, baseType: !7, size: 32, offset: 128)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5608, file: !3, line: 2223, baseType: !7, size: 32, offset: 160)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "build_error", scope: !5608, file: !3, line: 2224, baseType: !7, size: 32, offset: 192)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "adv_build_noreq", scope: !5608, file: !3, line: 2225, baseType: !7, size: 32, offset: 224)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "adv_build_nosg", scope: !5608, file: !3, line: 2226, baseType: !7, size: 32, offset: 256)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "exe_noerror", scope: !5608, file: !3, line: 2228, baseType: !7, size: 32, offset: 288)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "exe_busy", scope: !5608, file: !3, line: 2229, baseType: !7, size: 32, offset: 320)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "exe_error", scope: !5608, file: !3, line: 2230, baseType: !7, size: 32, offset: 352)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "exe_unknown", scope: !5608, file: !3, line: 2231, baseType: !7, size: 32, offset: 384)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_cnt", scope: !5608, file: !3, line: 2233, baseType: !7, size: 32, offset: 416)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_elem", scope: !5608, file: !3, line: 2234, baseType: !7, size: 32, offset: 448)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_sect", scope: !5608, file: !3, line: 2235, baseType: !7, size: 32, offset: 480)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_data", scope: !191, file: !3, line: 2277, baseType: !5263, size: 64, offset: 4608)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "ioremap_addr", scope: !191, file: !3, line: 2281, baseType: !334, size: 64, offset: 4672)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "ioport", scope: !191, file: !3, line: 2282, baseType: !5240, size: 16, offset: 4736)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "adv_reqp", scope: !191, file: !3, line: 2283, baseType: !5630, size: 64, offset: 4800)
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5631, size: 64)
!5631 = !DIDerivedType(tag: DW_TAG_typedef, name: "adv_req_t", file: !3, line: 1805, baseType: !5632, align: 256)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_req", file: !3, line: 1799, size: 960, elements: !5633)
!5633 = !{!5634, !5681, !5683, !5684, !5685}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_req_q", scope: !5632, file: !3, line: 1800, baseType: !5635, size: 576)
!5635 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADV_SCSI_REQ_Q", file: !3, line: 1776, baseType: !5636)
!5636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_scsi_req_q", file: !3, line: 1747, size: 576, elements: !5637)
!5637 = !{!5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5656, !5657, !5658, !5660, !5661, !5662, !5663}
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "cntl", scope: !5636, file: !3, line: 1748, baseType: !5245, size: 8)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "target_cmd", scope: !5636, file: !3, line: 1749, baseType: !5245, size: 8, offset: 8)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "target_id", scope: !5636, file: !3, line: 1750, baseType: !5245, size: 8, offset: 16)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "target_lun", scope: !5636, file: !3, line: 1751, baseType: !5245, size: 8, offset: 24)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !5636, file: !3, line: 1752, baseType: !5282, size: 32, offset: 32)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !5636, file: !3, line: 1753, baseType: !5282, size: 32, offset: 64)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "sense_addr", scope: !5636, file: !3, line: 1754, baseType: !5282, size: 32, offset: 96)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "carr_pa", scope: !5636, file: !3, line: 1755, baseType: !5282, size: 32, offset: 128)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "mflag", scope: !5636, file: !3, line: 1756, baseType: !5245, size: 8, offset: 160)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5636, file: !3, line: 1757, baseType: !5245, size: 8, offset: 168)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !5636, file: !3, line: 1758, baseType: !5245, size: 8, offset: 176)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cntl", scope: !5636, file: !3, line: 1759, baseType: !5245, size: 8, offset: 184)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "done_status", scope: !5636, file: !3, line: 1760, baseType: !5245, size: 8, offset: 192)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_status", scope: !5636, file: !3, line: 1761, baseType: !5245, size: 8, offset: 200)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "host_status", scope: !5636, file: !3, line: 1762, baseType: !5245, size: 8, offset: 208)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "sg_working_ix", scope: !5636, file: !3, line: 1763, baseType: !5245, size: 8, offset: 216)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !5636, file: !3, line: 1764, baseType: !5655, size: 96, offset: 224)
!5655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 96, elements: !3271)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "sg_real_addr", scope: !5636, file: !3, line: 1765, baseType: !5282, size: 32, offset: 320)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "scsiq_rptr", scope: !5636, file: !3, line: 1766, baseType: !5282, size: 32, offset: 352)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "cdb16", scope: !5636, file: !3, line: 1767, baseType: !5659, size: 32, offset: 384)
!5659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 32, elements: !1213)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "scsiq_ptr", scope: !5636, file: !3, line: 1768, baseType: !5282, size: 32, offset: 416)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "carr_va", scope: !5636, file: !3, line: 1769, baseType: !5282, size: 32, offset: 448)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "srb_tag", scope: !5636, file: !3, line: 1774, baseType: !402, size: 32, offset: 480)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list_ptr", scope: !5636, file: !3, line: 1775, baseType: !5664, size: 64, offset: 512)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADV_SG_BLOCK", file: !3, line: 1734, baseType: !5666)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_sg_block", file: !3, line: 1724, size: 1024, elements: !5667)
!5667 = !{!5668, !5669, !5670, !5671, !5672, !5673}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5666, file: !3, line: 1725, baseType: !5245, size: 8)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5666, file: !3, line: 1726, baseType: !5245, size: 8, offset: 8)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !5666, file: !3, line: 1727, baseType: !5245, size: 8, offset: 16)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "sg_cnt", scope: !5666, file: !3, line: 1728, baseType: !5245, size: 8, offset: 24)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "sg_ptr", scope: !5666, file: !3, line: 1729, baseType: !5282, size: 32, offset: 32)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !5666, file: !3, line: 1733, baseType: !5674, size: 960, offset: 64)
!5674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5675, size: 960, elements: !5679)
!5675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5666, file: !3, line: 1730, size: 64, elements: !5676)
!5676 = !{!5677, !5678}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "sg_addr", scope: !5675, file: !3, line: 1731, baseType: !5282, size: 32)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !5675, file: !3, line: 1732, baseType: !5282, size: 32, offset: 32)
!5679 = !{!5680}
!5680 = !DISubrange(count: 15)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5632, file: !3, line: 1801, baseType: !5682, size: 192, offset: 576)
!5682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 192, elements: !2243)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "cmndp", scope: !5632, file: !3, line: 1802, baseType: !4976, size: 64, offset: 768)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "req_addr", scope: !5632, file: !3, line: 1803, baseType: !977, size: 64, offset: 832)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "sgblkp", scope: !5632, file: !3, line: 1804, baseType: !5686, size: 64, offset: 896)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = !DIDerivedType(tag: DW_TAG_typedef, name: "adv_sgblk_t", file: !3, line: 1797, baseType: !5688)
!5688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adv_sgblk", file: !3, line: 1793, size: 1152, elements: !5689)
!5689 = !{!5690, !5691, !5692}
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "sg_block", scope: !5688, file: !3, line: 1794, baseType: !5665, size: 1024)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "sg_addr", scope: !5688, file: !3, line: 1795, baseType: !977, size: 64, offset: 1024)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "next_sgblkp", scope: !5688, file: !3, line: 1796, baseType: !5693, size: 64, offset: 1088)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5688, size: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "adv_reqp_addr", scope: !191, file: !3, line: 2284, baseType: !977, size: 64, offset: 4864)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "adv_reqp_size", scope: !191, file: !3, line: 2285, baseType: !308, size: 64, offset: 4928)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "adv_sgblk_pool", scope: !191, file: !3, line: 2286, baseType: !5697, size: 64, offset: 4992)
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5698, size: 64)
!5698 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !5699, line: 21, flags: DIFlagFwdDecl)
!5699 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "bios_signature", scope: !191, file: !3, line: 2287, baseType: !5240, size: 16, offset: 5056)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "bios_version", scope: !191, file: !3, line: 2288, baseType: !5240, size: 16, offset: 5072)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "bios_codeseg", scope: !191, file: !3, line: 2289, baseType: !5240, size: 16, offset: 5088)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "bios_codelen", scope: !191, file: !3, line: 2290, baseType: !5240, size: 16, offset: 5104)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !414)
!5706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5707, size: 64)
!5707 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 64)
!5709 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !303)
!5710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5711, size: 64)
!5711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !5712, line: 309, size: 19264, elements: !5713)
!5712 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!5713 = !{!5714, !5715, !5787, !5788, !5789, !5790, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5818, !5883, !5884, !5885, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5959, !5960, !5962, !5963, !5964, !5965, !5967, !5968, !5969, !5972, !5979, !5980, !5981, !5982, !5983, !5984, !5985}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !5711, file: !5712, line: 310, baseType: !206, size: 128)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5711, file: !5712, line: 311, baseType: !5716, size: 64, offset: 128)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !5712, line: 605, size: 8064, elements: !5718)
!5718 = !{!5719, !5720, !5721, !5722, !5723, !5724, !5725, !5740, !5741, !5742, !5766, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5779, !5780, !5782, !5783, !5784, !5785, !5786}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5717, file: !5712, line: 606, baseType: !206, size: 128)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5717, file: !5712, line: 607, baseType: !5716, size: 64, offset: 128)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5717, file: !5712, line: 608, baseType: !206, size: 128, offset: 192)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5717, file: !5712, line: 609, baseType: !206, size: 128, offset: 320)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !5717, file: !5712, line: 610, baseType: !5710, size: 64, offset: 448)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !5717, file: !5712, line: 611, baseType: !206, size: 128, offset: 512)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5717, file: !5712, line: 613, baseType: !5726, size: 256, offset: 640)
!5726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5727, size: 256, elements: !1213)
!5727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5728, size: 64)
!5728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !5729, line: 20, size: 512, elements: !5730)
!5729 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!5730 = !{!5731, !5733, !5734, !5735, !5736, !5737, !5738, !5739}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5728, file: !5729, line: 21, baseType: !5732, size: 64)
!5732 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !188, line: 158, baseType: !3162)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5728, file: !5729, line: 22, baseType: !5732, size: 64, offset: 64)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5728, file: !5729, line: 23, baseType: !202, size: 64, offset: 128)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5728, file: !5729, line: 24, baseType: !189, size: 64, offset: 192)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5728, file: !5729, line: 25, baseType: !189, size: 64, offset: 256)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5728, file: !5729, line: 26, baseType: !5727, size: 64, offset: 320)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5728, file: !5729, line: 26, baseType: !5727, size: 64, offset: 384)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5728, file: !5729, line: 26, baseType: !5727, size: 64, offset: 448)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !5717, file: !5712, line: 614, baseType: !206, size: 128, offset: 896)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !5717, file: !5712, line: 615, baseType: !5728, size: 512, offset: 1024)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5717, file: !5712, line: 617, baseType: !5743, size: 64, offset: 1536)
!5743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !5712, line: 731, size: 320, elements: !5745)
!5745 = !{!5746, !5750, !5754, !5758, !5762}
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !5744, file: !5712, line: 732, baseType: !5747, size: 64)
!5747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5748, size: 64)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!245, !5716}
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !5744, file: !5712, line: 733, baseType: !5751, size: 64, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 64)
!5752 = !DISubroutineType(types: !5753)
!5753 = !{null, !5716}
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !5744, file: !5712, line: 734, baseType: !5755, size: 64, offset: 128)
!5755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5756, size: 64)
!5756 = !DISubroutineType(types: !5757)
!5757 = !{!334, !5716, !7, !245}
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5744, file: !5712, line: 735, baseType: !5759, size: 64, offset: 192)
!5759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5760, size: 64)
!5760 = !DISubroutineType(types: !5761)
!5761 = !{!245, !5716, !7, !245, !245, !1467}
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5744, file: !5712, line: 736, baseType: !5763, size: 64, offset: 256)
!5763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5764, size: 64)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!245, !5716, !7, !245, !245, !402}
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !5717, file: !5712, line: 618, baseType: !5767, size: 64, offset: 1600)
!5767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5768, size: 64)
!5768 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !5712, line: 537, flags: DIFlagFwdDecl)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5717, file: !5712, line: 619, baseType: !334, size: 64, offset: 1664)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !5717, file: !5712, line: 620, baseType: !5130, size: 64, offset: 1728)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5717, file: !5712, line: 622, baseType: !414, size: 8, offset: 1792)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !5717, file: !5712, line: 623, baseType: !414, size: 8, offset: 1800)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !5717, file: !5712, line: 624, baseType: !414, size: 8, offset: 1808)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !5717, file: !5712, line: 625, baseType: !414, size: 8, offset: 1816)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5717, file: !5712, line: 630, baseType: !5776, size: 384, offset: 1824)
!5776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 384, elements: !5777)
!5777 = !{!5778}
!5778 = !DISubrange(count: 48)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !5717, file: !5712, line: 632, baseType: !303, size: 16, offset: 2208)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !5717, file: !5712, line: 633, baseType: !5781, size: 16, offset: 2224)
!5781 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !5712, line: 237, baseType: !303)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !5717, file: !5712, line: 634, baseType: !194, size: 64, offset: 2240)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5717, file: !5712, line: 635, baseType: !195, size: 5568, offset: 2304)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !5717, file: !5712, line: 636, baseType: !328, size: 64, offset: 7872)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !5717, file: !5712, line: 637, baseType: !328, size: 64, offset: 7936)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !5717, file: !5712, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !5711, file: !5712, line: 312, baseType: !5716, size: 64, offset: 192)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5711, file: !5712, line: 314, baseType: !334, size: 64, offset: 256)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !5711, file: !5712, line: 315, baseType: !5130, size: 64, offset: 320)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5711, file: !5712, line: 316, baseType: !5791, size: 64, offset: 384)
!5791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5792, size: 64)
!5792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !5712, line: 69, size: 832, elements: !5793)
!5793 = !{!5794, !5795, !5796, !5799, !5800}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5792, file: !5712, line: 70, baseType: !5716, size: 64)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5792, file: !5712, line: 71, baseType: !206, size: 128, offset: 64)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5792, file: !5712, line: 72, baseType: !5797, size: 64, offset: 192)
!5797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5798, size: 64)
!5798 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !5712, line: 72, flags: DIFlagFwdDecl)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5792, file: !5712, line: 73, baseType: !414, size: 8, offset: 256)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5792, file: !5712, line: 74, baseType: !198, size: 512, offset: 320)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !5711, file: !5712, line: 318, baseType: !7, size: 32, offset: 448)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5711, file: !5712, line: 319, baseType: !303, size: 16, offset: 480)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5711, file: !5712, line: 320, baseType: !303, size: 16, offset: 496)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !5711, file: !5712, line: 321, baseType: !303, size: 16, offset: 512)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !5711, file: !5712, line: 322, baseType: !303, size: 16, offset: 528)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5711, file: !5712, line: 323, baseType: !7, size: 32, offset: 544)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !5711, file: !5712, line: 324, baseType: !1404, size: 8, offset: 576)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !5711, file: !5712, line: 325, baseType: !1404, size: 8, offset: 584)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !5711, file: !5712, line: 330, baseType: !1404, size: 8, offset: 592)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !5711, file: !5712, line: 331, baseType: !1404, size: 8, offset: 600)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !5711, file: !5712, line: 332, baseType: !1404, size: 8, offset: 608)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !5711, file: !5712, line: 333, baseType: !1404, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !5711, file: !5712, line: 334, baseType: !1404, size: 8, offset: 624)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !5711, file: !5712, line: 335, baseType: !1404, size: 8, offset: 632)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !5711, file: !5712, line: 336, baseType: !899, size: 16, offset: 640)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !5711, file: !5712, line: 337, baseType: !5817, size: 64, offset: 704)
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5711, file: !5712, line: 339, baseType: !5819, size: 64, offset: 768)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !5712, line: 858, size: 2048, elements: !5821)
!5821 = !{!5822, !5823, !5824, !5836, !5840, !5844, !5848, !5852, !5853, !5857, !5876, !5877, !5878}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5820, file: !5712, line: 859, baseType: !206, size: 128)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5820, file: !5712, line: 860, baseType: !202, size: 64, offset: 128)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5820, file: !5712, line: 861, baseType: !5825, size: 64, offset: 192)
!5825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5826, size: 64)
!5826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5827)
!5827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4443, line: 38, size: 256, elements: !5828)
!5828 = !{!5829, !5830, !5831, !5832, !5833, !5834, !5835}
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5827, file: !4443, line: 39, baseType: !404, size: 32)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5827, file: !4443, line: 39, baseType: !404, size: 32, offset: 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !5827, file: !4443, line: 40, baseType: !404, size: 32, offset: 64)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !5827, file: !4443, line: 40, baseType: !404, size: 32, offset: 96)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5827, file: !4443, line: 41, baseType: !404, size: 32, offset: 128)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !5827, file: !4443, line: 41, baseType: !404, size: 32, offset: 160)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5827, file: !4443, line: 42, baseType: !4462, size: 64, offset: 192)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5820, file: !5712, line: 862, baseType: !5837, size: 64, offset: 256)
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!245, !5710, !5825}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5820, file: !5712, line: 863, baseType: !5841, size: 64, offset: 320)
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 64)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{null, !5710}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5820, file: !5712, line: 864, baseType: !5845, size: 64, offset: 384)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!245, !5710, !4473}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5820, file: !5712, line: 865, baseType: !5849, size: 64, offset: 448)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!245, !5710}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5820, file: !5712, line: 866, baseType: !5841, size: 64, offset: 512)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !5820, file: !5712, line: 867, baseType: !5854, size: 64, offset: 576)
!5854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5855, size: 64)
!5855 = !DISubroutineType(types: !5856)
!5856 = !{!245, !5710, !245}
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !5820, file: !5712, line: 868, baseType: !5858, size: 64, offset: 640)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5860)
!5860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !5712, line: 795, size: 384, elements: !5861)
!5861 = !{!5862, !5868, !5872, !5873, !5874, !5875}
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !5860, file: !5712, line: 797, baseType: !5863, size: 64)
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5864, size: 64)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!5866, !5710, !5867}
!5866 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !5712, line: 772, baseType: !7)
!5867 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !5712, line: 180, baseType: !7)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !5860, file: !5712, line: 801, baseType: !5869, size: 64, offset: 64)
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!5866, !5710}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !5860, file: !5712, line: 804, baseType: !5869, size: 64, offset: 128)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !5860, file: !5712, line: 807, baseType: !5841, size: 64, offset: 192)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5860, file: !5712, line: 808, baseType: !5841, size: 64, offset: 256)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5860, file: !5712, line: 811, baseType: !5841, size: 64, offset: 320)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5820, file: !5712, line: 869, baseType: !314, size: 64, offset: 704)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5820, file: !5712, line: 870, baseType: !4431, size: 1152, offset: 768)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5820, file: !5712, line: 871, baseType: !5879, size: 128, offset: 1920)
!5879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !5712, line: 759, size: 128, elements: !5880)
!5880 = !{!5881, !5882}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5879, file: !5712, line: 760, baseType: !219)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5879, file: !5712, line: 761, baseType: !206, size: 128)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !5711, file: !5712, line: 340, baseType: !408, size: 64, offset: 832)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5711, file: !5712, line: 346, baseType: !4645, size: 128, offset: 896)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !5711, file: !5712, line: 348, baseType: !5886, size: 32, offset: 1024)
!5886 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !5712, line: 155, baseType: !245)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !5711, file: !5712, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !5711, file: !5712, line: 352, baseType: !1404, size: 8, offset: 1064)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !5711, file: !5712, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !5711, file: !5712, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !5711, file: !5712, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !5711, file: !5712, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !5711, file: !5712, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !5711, file: !5712, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !5711, file: !5712, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !5711, file: !5712, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !5711, file: !5712, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !5711, file: !5712, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !5711, file: !5712, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !5711, file: !5712, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !5711, file: !5712, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !5711, file: !5712, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !5711, file: !5712, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !5711, file: !5712, line: 376, baseType: !7, size: 32, offset: 1120)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !5711, file: !5712, line: 377, baseType: !7, size: 32, offset: 1152)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !5711, file: !5712, line: 380, baseType: !5907, size: 64, offset: 1216)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !5712, line: 303, flags: DIFlagFwdDecl)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !5711, file: !5712, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !5711, file: !5712, line: 383, baseType: !245, size: 32, offset: 1312)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !5711, file: !5712, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !5711, file: !5712, line: 387, baseType: !5867, size: 32, offset: 1376)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5711, file: !5712, line: 388, baseType: !195, size: 5568, offset: 1408)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !5711, file: !5712, line: 390, baseType: !245, size: 32, offset: 6976)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5711, file: !5712, line: 396, baseType: !7, size: 32, offset: 7008)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5711, file: !5712, line: 397, baseType: !5917, size: 8704, offset: 7040)
!5917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5728, size: 8704, elements: !5918)
!5918 = !{!5919}
!5919 = !DISubrange(count: 17)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !5711, file: !5712, line: 399, baseType: !477, size: 8, offset: 15744)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !5711, file: !5712, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !5711, file: !5712, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !5711, file: !5712, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !5711, file: !5712, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !5711, file: !5712, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !5711, file: !5712, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !5711, file: !5712, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !5711, file: !5712, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !5711, file: !5712, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !5711, file: !5712, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !5711, file: !5712, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !5711, file: !5712, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !5711, file: !5712, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !5711, file: !5712, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !5711, file: !5712, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !5711, file: !5712, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !5711, file: !5712, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !5711, file: !5712, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !5711, file: !5712, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !5711, file: !5712, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !5711, file: !5712, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !5711, file: !5712, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !5711, file: !5712, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !5711, file: !5712, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !5711, file: !5712, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !5711, file: !5712, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !5711, file: !5712, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !5711, file: !5712, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !5711, file: !5712, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !5711, file: !5712, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !5711, file: !5712, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !5711, file: !5712, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !5711, file: !5712, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !5711, file: !5712, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !5711, file: !5712, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !5711, file: !5712, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !5711, file: !5712, line: 450, baseType: !5958, size: 16, offset: 15792)
!5958 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !5712, line: 206, baseType: !303)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !5711, file: !5712, line: 451, baseType: !787, size: 32, offset: 15808)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !5711, file: !5712, line: 453, baseType: !5961, size: 512, offset: 15840)
!5961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 512, elements: !1786)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !5711, file: !5712, line: 454, baseType: !625, size: 64, offset: 16384)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !5711, file: !5712, line: 455, baseType: !328, size: 64, offset: 16448)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !5711, file: !5712, line: 456, baseType: !245, size: 32, offset: 16512)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !5711, file: !5712, line: 457, baseType: !5966, size: 1088, offset: 16576)
!5966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 1088, elements: !5918)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !5711, file: !5712, line: 458, baseType: !5966, size: 1088, offset: 17664)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !5711, file: !5712, line: 469, baseType: !314, size: 64, offset: 18752)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !5711, file: !5712, line: 471, baseType: !5970, size: 64, offset: 18816)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5971 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !5712, line: 304, flags: DIFlagFwdDecl)
!5972 = !DIDerivedType(tag: DW_TAG_member, scope: !5711, file: !5712, line: 478, baseType: !5973, size: 64, offset: 18880)
!5973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5711, file: !5712, line: 478, size: 64, elements: !5974)
!5974 = !{!5975, !5978}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !5973, file: !5712, line: 479, baseType: !5976, size: 64)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !5712, line: 305, flags: DIFlagFwdDecl)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !5973, file: !5712, line: 480, baseType: !5710, size: 64)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !5711, file: !5712, line: 482, baseType: !899, size: 16, offset: 18944)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !5711, file: !5712, line: 483, baseType: !1404, size: 8, offset: 18960)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !5711, file: !5712, line: 497, baseType: !899, size: 16, offset: 18976)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !5711, file: !5712, line: 498, baseType: !3162, size: 64, offset: 19008)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !5711, file: !5712, line: 499, baseType: !308, size: 64, offset: 19072)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !5711, file: !5712, line: 500, baseType: !261, size: 64, offset: 19136)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !5711, file: !5712, line: 502, baseType: !189, size: 64, offset: 19200)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !3910, line: 29, baseType: !900)
!5987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5988, size: 64)
!5988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5707)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5992, size: 64)
!5992 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_QDONE_INFO", file: !3, line: 307, baseType: !5993)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_q_done_info", file: !3, line: 297, size: 224, elements: !5994)
!5994 = !{!5995, !5996, !6004, !6005, !6006, !6007, !6008, !6009, !6010}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "d2", scope: !5993, file: !3, line: 298, baseType: !5288, size: 96)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "d3", scope: !5993, file: !3, line: 299, baseType: !5997, size: 32, offset: 96)
!5997 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SCSIQ_3", file: !3, line: 283, baseType: !5998)
!5998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_scsiq_3", file: !3, line: 278, size: 32, elements: !5999)
!5999 = !{!6000, !6001, !6002, !6003}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "done_stat", scope: !5998, file: !3, line: 279, baseType: !5245, size: 8)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "host_stat", scope: !5998, file: !3, line: 280, baseType: !5245, size: 8, offset: 8)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_stat", scope: !5998, file: !3, line: 281, baseType: !5245, size: 8, offset: 16)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_msg", scope: !5998, file: !3, line: 282, baseType: !5245, size: 8, offset: 24)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "q_status", scope: !5993, file: !3, line: 300, baseType: !5245, size: 8, offset: 128)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "q_no", scope: !5993, file: !3, line: 301, baseType: !5245, size: 8, offset: 136)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "cntl", scope: !5993, file: !3, line: 302, baseType: !5245, size: 8, offset: 144)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5993, file: !3, line: 303, baseType: !5245, size: 8, offset: 152)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "extra_bytes", scope: !5993, file: !3, line: 304, baseType: !5245, size: 8, offset: 160)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !5993, file: !3, line: 305, baseType: !5245, size: 8, offset: 168)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "remain_bytes", scope: !5993, file: !3, line: 306, baseType: !402, size: 32, offset: 192)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eisa_device", file: !6013, line: 35, size: 7936, elements: !6014)
!6013 = !DIFile(filename: "./include/linux/eisa.h", directory: "/home/lizy2001/genbc/linux")
!6014 = !{!6015, !6020, !6021, !6022, !6023, !6025, !6026}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6012, file: !6013, line: 36, baseType: !6016, size: 128)
!6016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eisa_device_id", file: !4443, line: 370, size: 128, elements: !6017)
!6017 = !{!6018, !6019}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !6016, file: !4443, line: 371, baseType: !3069, size: 64)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6016, file: !4443, line: 372, baseType: !4462, size: 64, offset: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !6012, file: !6013, line: 37, baseType: !245, size: 32, offset: 128)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6012, file: !6013, line: 38, baseType: !245, size: 32, offset: 160)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !6012, file: !6013, line: 39, baseType: !189, size: 64, offset: 192)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !6012, file: !6013, line: 40, baseType: !6024, size: 2048, offset: 256)
!6024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5728, size: 2048, elements: !1213)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6012, file: !6013, line: 41, baseType: !408, size: 64, offset: 2304)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6012, file: !6013, line: 42, baseType: !195, size: 5568, offset: 2368)
!6027 = !{!6028, !6030, !6035, !6040, !6045, !6048, !6050, !6055, !0, !6057, !6060, !6062, !6065, !6071, !6073, !6076, !6079, !6081, !6083, !6085, !6087, !6089, !6091, !6099, !6102, !6124, !6129}
!6028 = !DIGlobalVariableExpression(var: !6029, expr: !DIExpression())
!6029 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_advansys_init310", scope: !2, file: !3, line: 11845, type: !334, isLocal: true, isDefinition: true)
!6030 = !DIGlobalVariableExpression(var: !6031, expr: !DIExpression())
!6031 = distinct !DIGlobalVariable(name: "__exitcall_advansys_exit", scope: !2, file: !3, line: 11846, type: !6032, isLocal: true, isDefinition: true)
!6032 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6033, line: 117, baseType: !6034)
!6033 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!6035 = !DIGlobalVariableExpression(var: !6036, expr: !DIExpression())
!6036 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file311", scope: !2, file: !3, line: 11848, type: !6037, isLocal: true, isDefinition: true, align: 8)
!6037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 288, elements: !6038)
!6038 = !{!6039}
!6039 = !DISubrange(count: 36)
!6040 = !DIGlobalVariableExpression(var: !6041, expr: !DIExpression())
!6041 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license312", scope: !2, file: !3, line: 11848, type: !6042, isLocal: true, isDefinition: true, align: 8)
!6042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 168, elements: !6043)
!6043 = !{!6044}
!6044 = !DISubrange(count: 21)
!6045 = !DIGlobalVariableExpression(var: !6046, expr: !DIExpression())
!6046 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware313", scope: !2, file: !3, line: 11849, type: !6047, isLocal: true, isDefinition: true, align: 8)
!6047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 296, elements: !2038)
!6048 = !DIGlobalVariableExpression(var: !6049, expr: !DIExpression())
!6049 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware314", scope: !2, file: !3, line: 11850, type: !6037, isLocal: true, isDefinition: true, align: 8)
!6050 = !DIGlobalVariableExpression(var: !6051, expr: !DIExpression())
!6051 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware315", scope: !2, file: !3, line: 11851, type: !6052, isLocal: true, isDefinition: true, align: 8)
!6052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 312, elements: !6053)
!6053 = !{!6054}
!6054 = !DISubrange(count: 39)
!6055 = !DIGlobalVariableExpression(var: !6056, expr: !DIExpression())
!6056 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware316", scope: !2, file: !3, line: 11852, type: !6052, isLocal: true, isDefinition: true, align: 8)
!6057 = !DIGlobalVariableExpression(var: !6058, expr: !DIExpression())
!6058 = distinct !DIGlobalVariable(name: "advansys_pci_tbl", scope: !2, file: !3, line: 11703, type: !6059, isLocal: true, isDefinition: true)
!6059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5827, size: 1792, elements: !2322)
!6060 = !DIGlobalVariableExpression(var: !6061, expr: !DIExpression())
!6061 = distinct !DIGlobalVariable(name: "advansys_template", scope: !2, file: !3, line: 10790, type: !4811, isLocal: true, isDefinition: true)
!6062 = !DIGlobalVariableExpression(var: !6063, expr: !DIExpression())
!6063 = distinct !DIGlobalVariable(name: "info", scope: !6064, file: !3, line: 2631, type: !4448, isLocal: true, isDefinition: true)
!6064 = distinct !DISubprogram(name: "advansys_info", scope: !3, file: !3, line: 2629, type: !4817, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6065 = !DIGlobalVariableExpression(var: !6066, expr: !DIExpression())
!6066 = distinct !DIGlobalVariable(name: "__warned", scope: !6067, file: !6068, line: 275, type: !477, isLocal: true, isDefinition: true)
!6067 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !6068, file: !6068, line: 271, type: !6069, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6068 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!6069 = !DISubroutineType(types: !6070)
!6070 = !{!977, !194, !334, !308, !146, !189}
!6071 = !DIGlobalVariableExpression(var: !6072, expr: !DIExpression())
!6072 = distinct !DIGlobalVariable(name: "_syn_offset_one_disable_cmd", scope: !2, file: !3, line: 8133, type: !5469, isLocal: true, isDefinition: true)
!6073 = !DIGlobalVariableExpression(var: !6074, expr: !DIExpression())
!6074 = distinct !DIGlobalVariable(name: "asc_syn_xfer_period", scope: !2, file: !3, line: 423, type: !6075, isLocal: true, isDefinition: true)
!6075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 64, elements: !1382)
!6076 = !DIGlobalVariableExpression(var: !6077, expr: !DIExpression())
!6077 = distinct !DIGlobalVariable(name: "asc_syn_ultra_xfer_period", scope: !2, file: !3, line: 427, type: !6078, isLocal: true, isDefinition: true)
!6078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 128, elements: !1786)
!6079 = !DIGlobalVariableExpression(var: !6080, expr: !DIExpression())
!6080 = distinct !DIGlobalVariable(name: "ADVEEP_38C1600_Config_Field_IsChar", scope: !2, file: !3, line: 9704, type: !5543, isLocal: true, isDefinition: true)
!6081 = !DIGlobalVariableExpression(var: !6082, expr: !DIExpression())
!6082 = distinct !DIGlobalVariable(name: "Default_38C1600_EEPROM_Config", scope: !2, file: !3, line: 9639, type: !5543, isLocal: true, isDefinition: true)
!6083 = !DIGlobalVariableExpression(var: !6084, expr: !DIExpression())
!6084 = distinct !DIGlobalVariable(name: "ADVEEP_38C0800_Config_Field_IsChar", scope: !2, file: !3, line: 9574, type: !5478, isLocal: true, isDefinition: true)
!6085 = !DIGlobalVariableExpression(var: !6086, expr: !DIExpression())
!6086 = distinct !DIGlobalVariable(name: "Default_38C0800_EEPROM_Config", scope: !2, file: !3, line: 9509, type: !5478, isLocal: true, isDefinition: true)
!6087 = !DIGlobalVariableExpression(var: !6088, expr: !DIExpression())
!6088 = distinct !DIGlobalVariable(name: "ADVEEP_3550_Config_Field_IsChar", scope: !2, file: !3, line: 9471, type: !5439, isLocal: true, isDefinition: true)
!6089 = !DIGlobalVariableExpression(var: !6090, expr: !DIExpression())
!6090 = distinct !DIGlobalVariable(name: "Default_3550_EEPROM_Config", scope: !2, file: !3, line: 9433, type: !5439, isLocal: true, isDefinition: true)
!6091 = !DIGlobalVariableExpression(var: !6092, expr: !DIExpression())
!6092 = distinct !DIGlobalVariable(name: "advansys_eisa_driver", scope: !2, file: !3, line: 11693, type: !6093, isLocal: true, isDefinition: true)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eisa_driver", file: !6013, line: 58, size: 1216, elements: !6094)
!6094 = !{!6095, !6098}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !6093, file: !6013, line: 59, baseType: !6096, size: 64)
!6096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6097, size: 64)
!6097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6016)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6093, file: !6013, line: 60, baseType: !4431, size: 1152, offset: 64)
!6099 = !DIGlobalVariableExpression(var: !6100, expr: !DIExpression())
!6100 = distinct !DIGlobalVariable(name: "advansys_eisa_table", scope: !2, file: !3, line: 11564, type: !6101, isLocal: true, isDefinition: true)
!6101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6016, size: 384, elements: !262)
!6102 = !DIGlobalVariableExpression(var: !6103, expr: !DIExpression())
!6103 = distinct !DIGlobalVariable(name: "advansys_vlb_driver", scope: !2, file: !3, line: 11555, type: !6104, isLocal: true, isDefinition: true)
!6104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isa_driver", file: !6105, line: 13, size: 1600, elements: !6106)
!6105 = !DIFile(filename: "./include/linux/isa.h", directory: "/home/lizy2001/genbc/linux")
!6106 = !{!6107, !6111, !6112, !6113, !6117, !6121, !6122, !6123}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6104, file: !6105, line: 14, baseType: !6108, size: 64)
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6109, size: 64)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!245, !194, !7}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6104, file: !6105, line: 15, baseType: !6108, size: 64, offset: 64)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6104, file: !6105, line: 16, baseType: !6108, size: 64, offset: 128)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6104, file: !6105, line: 17, baseType: !6114, size: 64, offset: 192)
!6114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6115, size: 64)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{null, !194, !7}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6104, file: !6105, line: 18, baseType: !6118, size: 64, offset: 256)
!6118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6119, size: 64)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!245, !194, !7, !4473}
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6104, file: !6105, line: 19, baseType: !6108, size: 64, offset: 320)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6104, file: !6105, line: 21, baseType: !4431, size: 1152, offset: 384)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6104, file: !6105, line: 22, baseType: !194, size: 64, offset: 1536)
!6124 = !DIGlobalVariableExpression(var: !6125, expr: !DIExpression())
!6125 = distinct !DIGlobalVariable(name: "_asc_def_iop_base", scope: !2, file: !3, line: 11410, type: !6126, isLocal: true, isDefinition: true)
!6126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 352, elements: !6127)
!6127 = !{!6128}
!6128 = !DISubrange(count: 11)
!6129 = !DIGlobalVariableExpression(var: !6130, expr: !DIExpression())
!6130 = distinct !DIGlobalVariable(name: "advansys_isa_driver", scope: !2, file: !3, line: 11480, type: !6104, isLocal: true, isDefinition: true)
!6131 = !{!"rsp"}
!6132 = !{i32 7, !"Dwarf Version", i32 4}
!6133 = !{i32 2, !"Debug Info Version", i32 3}
!6134 = !{i32 1, !"wchar_size", i32 2}
!6135 = !{i32 1, !"Code Model", i32 2}
!6136 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6137 = distinct !DISubprogram(name: "advansys_exit", scope: !3, file: !3, line: 11837, type: !1931, scopeLine: 11838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6138 = !DILocation(line: 11839, column: 2, scope: !6137)
!6139 = !DILocation(line: 11840, column: 2, scope: !6137)
!6140 = !DILocation(line: 11841, column: 2, scope: !6137)
!6141 = !DILocation(line: 11842, column: 2, scope: !6137)
!6142 = !DILocation(line: 11843, column: 1, scope: !6137)
!6143 = distinct !DISubprogram(name: "eisa_driver_unregister", scope: !6013, file: !6013, line: 75, type: !6144, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !6146}
!6146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6093, size: 64)
!6147 = !DILocalVariable(name: "edrv", arg: 1, scope: !6143, file: !6013, line: 75, type: !6146)
!6148 = !DILocation(line: 75, column: 64, scope: !6143)
!6149 = !DILocation(line: 75, column: 72, scope: !6143)
!6150 = distinct !DISubprogram(name: "isa_unregister_driver", scope: !6105, file: !6105, line: 36, type: !6151, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{null, !6153}
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 64)
!6154 = !DILocalVariable(name: "d", arg: 1, scope: !6150, file: !6105, line: 36, type: !6153)
!6155 = !DILocation(line: 36, column: 61, scope: !6150)
!6156 = !DILocation(line: 38, column: 1, scope: !6150)
!6157 = distinct !DISubprogram(name: "advansys_init", scope: !3, file: !3, line: 11803, type: !6158, scopeLine: 11804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{!245}
!6160 = !DILocalVariable(name: "error", scope: !6157, file: !3, line: 11805, type: !245)
!6161 = !DILocation(line: 11805, column: 6, scope: !6157)
!6162 = !DILocation(line: 11807, column: 10, scope: !6157)
!6163 = !DILocation(line: 11807, column: 8, scope: !6157)
!6164 = !DILocation(line: 11809, column: 6, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 11809, column: 6)
!6166 = !DILocation(line: 11809, column: 6, scope: !6157)
!6167 = !DILocation(line: 11810, column: 3, scope: !6165)
!6168 = !DILocation(line: 11812, column: 10, scope: !6157)
!6169 = !DILocation(line: 11812, column: 8, scope: !6157)
!6170 = !DILocation(line: 11814, column: 6, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 11814, column: 6)
!6172 = !DILocation(line: 11814, column: 6, scope: !6157)
!6173 = !DILocation(line: 11815, column: 3, scope: !6171)
!6174 = !DILocation(line: 11817, column: 10, scope: !6157)
!6175 = !DILocation(line: 11817, column: 8, scope: !6157)
!6176 = !DILocation(line: 11818, column: 6, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 11818, column: 6)
!6178 = !DILocation(line: 11818, column: 6, scope: !6157)
!6179 = !DILocation(line: 11819, column: 3, scope: !6177)
!6180 = !DILocation(line: 11821, column: 10, scope: !6157)
!6181 = !DILocation(line: 11821, column: 8, scope: !6157)
!6182 = !DILocation(line: 11822, column: 6, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 11822, column: 6)
!6184 = !DILocation(line: 11822, column: 6, scope: !6157)
!6185 = !DILocation(line: 11823, column: 3, scope: !6183)
!6186 = !DILocation(line: 11825, column: 2, scope: !6157)
!6187 = !DILabel(scope: !6157, name: "unregister_eisa", file: !3, line: 11827)
!6188 = !DILocation(line: 11827, column: 2, scope: !6157)
!6189 = !DILocation(line: 11828, column: 2, scope: !6157)
!6190 = !DILabel(scope: !6157, name: "unregister_vlb", file: !3, line: 11829)
!6191 = !DILocation(line: 11829, column: 2, scope: !6157)
!6192 = !DILocation(line: 11830, column: 2, scope: !6157)
!6193 = !DILabel(scope: !6157, name: "unregister_isa", file: !3, line: 11831)
!6194 = !DILocation(line: 11831, column: 2, scope: !6157)
!6195 = !DILocation(line: 11832, column: 2, scope: !6157)
!6196 = !DILabel(scope: !6157, name: "fail", file: !3, line: 11833)
!6197 = !DILocation(line: 11833, column: 2, scope: !6157)
!6198 = !DILocation(line: 11834, column: 9, scope: !6157)
!6199 = !DILocation(line: 11834, column: 2, scope: !6157)
!6200 = !DILocation(line: 11835, column: 1, scope: !6157)
!6201 = distinct !DISubprogram(name: "advansys_pci_probe", scope: !3, file: !3, line: 11734, type: !5838, scopeLine: 11736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6202 = !DILocalVariable(name: "pdev", arg: 1, scope: !6201, file: !3, line: 11734, type: !5710)
!6203 = !DILocation(line: 11734, column: 47, scope: !6201)
!6204 = !DILocalVariable(name: "ent", arg: 2, scope: !6201, file: !3, line: 11735, type: !5825)
!6205 = !DILocation(line: 11735, column: 38, scope: !6201)
!6206 = !DILocalVariable(name: "err", scope: !6201, file: !3, line: 11737, type: !245)
!6207 = !DILocation(line: 11737, column: 6, scope: !6201)
!6208 = !DILocalVariable(name: "ioport", scope: !6201, file: !3, line: 11737, type: !245)
!6209 = !DILocation(line: 11737, column: 11, scope: !6201)
!6210 = !DILocalVariable(name: "shost", scope: !6201, file: !3, line: 11738, type: !4796)
!6211 = !DILocation(line: 11738, column: 20, scope: !6201)
!6212 = !DILocalVariable(name: "board", scope: !6201, file: !3, line: 11739, type: !190)
!6213 = !DILocation(line: 11739, column: 20, scope: !6201)
!6214 = !DILocation(line: 11741, column: 26, scope: !6201)
!6215 = !DILocation(line: 11741, column: 8, scope: !6201)
!6216 = !DILocation(line: 11741, column: 6, scope: !6201)
!6217 = !DILocation(line: 11742, column: 6, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 11742, column: 6)
!6219 = !DILocation(line: 11742, column: 6, scope: !6201)
!6220 = !DILocation(line: 11743, column: 3, scope: !6218)
!6221 = !DILocation(line: 11744, column: 28, scope: !6201)
!6222 = !DILocation(line: 11744, column: 8, scope: !6201)
!6223 = !DILocation(line: 11744, column: 6, scope: !6201)
!6224 = !DILocation(line: 11745, column: 6, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 11745, column: 6)
!6226 = !DILocation(line: 11745, column: 6, scope: !6201)
!6227 = !DILocation(line: 11746, column: 3, scope: !6225)
!6228 = !DILocation(line: 11747, column: 17, scope: !6201)
!6229 = !DILocation(line: 11747, column: 2, scope: !6201)
!6230 = !DILocation(line: 11748, column: 23, scope: !6201)
!6231 = !DILocation(line: 11748, column: 2, scope: !6201)
!6232 = !DILocation(line: 11750, column: 6, scope: !6201)
!6233 = !DILocation(line: 11751, column: 6, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 11751, column: 6)
!6235 = !DILocation(line: 11751, column: 32, scope: !6234)
!6236 = !DILocation(line: 11751, column: 6, scope: !6201)
!6237 = !DILocation(line: 11752, column: 3, scope: !6234)
!6238 = !DILocation(line: 11754, column: 11, scope: !6201)
!6239 = !DILocation(line: 11754, column: 9, scope: !6201)
!6240 = !DILocation(line: 11756, column: 6, scope: !6201)
!6241 = !DILocation(line: 11757, column: 10, scope: !6201)
!6242 = !DILocation(line: 11757, column: 8, scope: !6201)
!6243 = !DILocation(line: 11758, column: 7, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 11758, column: 6)
!6245 = !DILocation(line: 11758, column: 6, scope: !6201)
!6246 = !DILocation(line: 11759, column: 3, scope: !6244)
!6247 = !DILocation(line: 11761, column: 21, scope: !6201)
!6248 = !DILocation(line: 11761, column: 10, scope: !6201)
!6249 = !DILocation(line: 11761, column: 8, scope: !6201)
!6250 = !DILocation(line: 11762, column: 15, scope: !6201)
!6251 = !DILocation(line: 11762, column: 21, scope: !6201)
!6252 = !DILocation(line: 11762, column: 2, scope: !6201)
!6253 = !DILocation(line: 11762, column: 9, scope: !6201)
!6254 = !DILocation(line: 11762, column: 13, scope: !6201)
!6255 = !DILocation(line: 11763, column: 16, scope: !6201)
!6256 = !DILocation(line: 11763, column: 22, scope: !6201)
!6257 = !DILocation(line: 11763, column: 2, scope: !6201)
!6258 = !DILocation(line: 11763, column: 9, scope: !6201)
!6259 = !DILocation(line: 11763, column: 13, scope: !6201)
!6260 = !DILocation(line: 11764, column: 17, scope: !6201)
!6261 = !DILocation(line: 11764, column: 2, scope: !6201)
!6262 = !DILocation(line: 11764, column: 9, scope: !6201)
!6263 = !DILocation(line: 11764, column: 15, scope: !6201)
!6264 = !DILocation(line: 11766, column: 6, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 11766, column: 6)
!6266 = !DILocation(line: 11766, column: 12, scope: !6265)
!6267 = !DILocation(line: 11766, column: 19, scope: !6265)
!6268 = !DILocation(line: 11766, column: 49, scope: !6265)
!6269 = !DILocation(line: 11767, column: 6, scope: !6265)
!6270 = !DILocation(line: 11767, column: 12, scope: !6265)
!6271 = !DILocation(line: 11767, column: 19, scope: !6265)
!6272 = !DILocation(line: 11767, column: 49, scope: !6265)
!6273 = !DILocation(line: 11768, column: 6, scope: !6265)
!6274 = !DILocation(line: 11768, column: 12, scope: !6265)
!6275 = !DILocation(line: 11768, column: 19, scope: !6265)
!6276 = !DILocation(line: 11766, column: 6, scope: !6201)
!6277 = !DILocation(line: 11769, column: 3, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 11768, column: 50)
!6279 = !DILocation(line: 11769, column: 10, scope: !6278)
!6280 = !DILocation(line: 11769, column: 16, scope: !6278)
!6281 = !DILocation(line: 11770, column: 2, scope: !6278)
!6282 = !DILocation(line: 11772, column: 29, scope: !6201)
!6283 = !DILocation(line: 11772, column: 36, scope: !6201)
!6284 = !DILocation(line: 11772, column: 8, scope: !6201)
!6285 = !DILocation(line: 11772, column: 6, scope: !6201)
!6286 = !DILocation(line: 11773, column: 6, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 11773, column: 6)
!6288 = !DILocation(line: 11773, column: 6, scope: !6201)
!6289 = !DILocation(line: 11774, column: 3, scope: !6287)
!6290 = !DILocation(line: 11776, column: 18, scope: !6201)
!6291 = !DILocation(line: 11776, column: 24, scope: !6201)
!6292 = !DILocation(line: 11776, column: 2, scope: !6201)
!6293 = !DILocation(line: 11777, column: 2, scope: !6201)
!6294 = !DILabel(scope: !6201, name: "free_host", file: !3, line: 11779)
!6295 = !DILocation(line: 11779, column: 2, scope: !6201)
!6296 = !DILocation(line: 11780, column: 16, scope: !6201)
!6297 = !DILocation(line: 11780, column: 2, scope: !6201)
!6298 = !DILabel(scope: !6201, name: "release_region", file: !3, line: 11781)
!6299 = !DILocation(line: 11781, column: 2, scope: !6201)
!6300 = !DILocation(line: 11782, column: 22, scope: !6201)
!6301 = !DILocation(line: 11782, column: 2, scope: !6201)
!6302 = !DILabel(scope: !6201, name: "disable_device", file: !3, line: 11783)
!6303 = !DILocation(line: 11783, column: 2, scope: !6201)
!6304 = !DILocation(line: 11784, column: 21, scope: !6201)
!6305 = !DILocation(line: 11784, column: 2, scope: !6201)
!6306 = !DILabel(scope: !6201, name: "fail", file: !3, line: 11785)
!6307 = !DILocation(line: 11785, column: 2, scope: !6201)
!6308 = !DILocation(line: 11786, column: 9, scope: !6201)
!6309 = !DILocation(line: 11786, column: 2, scope: !6201)
!6310 = !DILocation(line: 11787, column: 1, scope: !6201)
!6311 = distinct !DISubprogram(name: "advansys_pci_remove", scope: !3, file: !3, line: 11789, type: !5842, scopeLine: 11790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6312 = !DILocalVariable(name: "pdev", arg: 1, scope: !6311, file: !3, line: 11789, type: !5710)
!6313 = !DILocation(line: 11789, column: 49, scope: !6311)
!6314 = !DILocation(line: 11791, column: 35, scope: !6311)
!6315 = !DILocation(line: 11791, column: 19, scope: !6311)
!6316 = !DILocation(line: 11791, column: 2, scope: !6311)
!6317 = !DILocation(line: 11792, column: 22, scope: !6311)
!6318 = !DILocation(line: 11792, column: 2, scope: !6311)
!6319 = !DILocation(line: 11793, column: 21, scope: !6311)
!6320 = !DILocation(line: 11793, column: 2, scope: !6311)
!6321 = !DILocation(line: 11794, column: 1, scope: !6311)
!6322 = distinct !DISubprogram(name: "advansys_set_latency", scope: !3, file: !3, line: 11721, type: !5842, scopeLine: 11722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6323 = !DILocalVariable(name: "pdev", arg: 1, scope: !6322, file: !3, line: 11721, type: !5710)
!6324 = !DILocation(line: 11721, column: 50, scope: !6322)
!6325 = !DILocation(line: 11723, column: 7, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 11723, column: 6)
!6327 = !DILocation(line: 11723, column: 13, scope: !6326)
!6328 = !DILocation(line: 11723, column: 20, scope: !6326)
!6329 = !DILocation(line: 11723, column: 48, scope: !6326)
!6330 = !DILocation(line: 11724, column: 7, scope: !6326)
!6331 = !DILocation(line: 11724, column: 13, scope: !6326)
!6332 = !DILocation(line: 11724, column: 20, scope: !6326)
!6333 = !DILocation(line: 11723, column: 6, scope: !6322)
!6334 = !DILocation(line: 11725, column: 25, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 11724, column: 50)
!6336 = !DILocation(line: 11725, column: 3, scope: !6335)
!6337 = !DILocation(line: 11726, column: 2, scope: !6335)
!6338 = !DILocalVariable(name: "latency", scope: !6339, file: !3, line: 11727, type: !1404)
!6339 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 11726, column: 9)
!6340 = !DILocation(line: 11727, column: 6, scope: !6339)
!6341 = !DILocation(line: 11728, column: 24, scope: !6339)
!6342 = !DILocation(line: 11728, column: 3, scope: !6339)
!6343 = !DILocation(line: 11729, column: 7, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 11729, column: 7)
!6345 = !DILocation(line: 11729, column: 15, scope: !6344)
!6346 = !DILocation(line: 11729, column: 7, scope: !6339)
!6347 = !DILocation(line: 11730, column: 26, scope: !6344)
!6348 = !DILocation(line: 11730, column: 4, scope: !6344)
!6349 = !DILocation(line: 11732, column: 1, scope: !6322)
!6350 = distinct !DISubprogram(name: "shost_priv", scope: !154, file: !154, line: 710, type: !6351, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{!334, !4796}
!6353 = !DILocalVariable(name: "shost", arg: 1, scope: !6350, file: !154, line: 710, type: !4796)
!6354 = !DILocation(line: 710, column: 50, scope: !6350)
!6355 = !DILocation(line: 712, column: 17, scope: !6350)
!6356 = !DILocation(line: 712, column: 24, scope: !6350)
!6357 = !DILocation(line: 712, column: 9, scope: !6350)
!6358 = !DILocation(line: 712, column: 2, scope: !6350)
!6359 = distinct !DISubprogram(name: "advansys_board_found", scope: !3, file: !3, line: 10906, type: !6360, scopeLine: 10908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!245, !4796, !7, !245}
!6362 = !DILocalVariable(name: "shost", arg: 1, scope: !6359, file: !3, line: 10906, type: !4796)
!6363 = !DILocation(line: 10906, column: 51, scope: !6359)
!6364 = !DILocalVariable(name: "iop", arg: 2, scope: !6359, file: !3, line: 10906, type: !7)
!6365 = !DILocation(line: 10906, column: 71, scope: !6359)
!6366 = !DILocalVariable(name: "bus_type", arg: 3, scope: !6359, file: !3, line: 10907, type: !245)
!6367 = !DILocation(line: 10907, column: 9, scope: !6359)
!6368 = !DILocalVariable(name: "pdev", scope: !6359, file: !3, line: 10909, type: !5710)
!6369 = !DILocation(line: 10909, column: 18, scope: !6359)
!6370 = !DILocalVariable(name: "boardp", scope: !6359, file: !3, line: 10910, type: !190)
!6371 = !DILocation(line: 10910, column: 20, scope: !6359)
!6372 = !DILocation(line: 10910, column: 40, scope: !6359)
!6373 = !DILocation(line: 10910, column: 29, scope: !6359)
!6374 = !DILocalVariable(name: "asc_dvc_varp", scope: !6359, file: !3, line: 10911, type: !6375)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!6376 = !DILocation(line: 10911, column: 15, scope: !6359)
!6377 = !DILocalVariable(name: "adv_dvc_varp", scope: !6359, file: !3, line: 10912, type: !6378)
!6378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!6379 = !DILocation(line: 10912, column: 15, scope: !6359)
!6380 = !DILocalVariable(name: "share_irq", scope: !6359, file: !3, line: 10913, type: !245)
!6381 = !DILocation(line: 10913, column: 6, scope: !6359)
!6382 = !DILocalVariable(name: "warn_code", scope: !6359, file: !3, line: 10913, type: !245)
!6383 = !DILocation(line: 10913, column: 17, scope: !6359)
!6384 = !DILocalVariable(name: "ret", scope: !6359, file: !3, line: 10913, type: !245)
!6385 = !DILocation(line: 10913, column: 28, scope: !6359)
!6386 = !DILocation(line: 10915, column: 10, scope: !6359)
!6387 = !DILocation(line: 10915, column: 19, scope: !6359)
!6388 = !DILocation(line: 10915, column: 9, scope: !6359)
!6389 = !DILocalVariable(name: "__mptr", scope: !6390, file: !3, line: 10915, type: !334)
!6390 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 10915, column: 36)
!6391 = !DILocation(line: 10915, column: 36, scope: !6390)
!6392 = !DILocation(line: 10915, column: 36, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 10915, column: 36)
!6394 = !DILocation(line: 10915, column: 7, scope: !6359)
!6395 = !DILocation(line: 10917, column: 6, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 10917, column: 6)
!6397 = !DILocation(line: 10917, column: 6, scope: !6359)
!6398 = !DILocation(line: 10919, column: 19, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 10917, column: 32)
!6400 = !DILocation(line: 10919, column: 27, scope: !6399)
!6401 = !DILocation(line: 10919, column: 35, scope: !6399)
!6402 = !DILocation(line: 10919, column: 16, scope: !6399)
!6403 = !DILocation(line: 10920, column: 28, scope: !6399)
!6404 = !DILocation(line: 10920, column: 3, scope: !6399)
!6405 = !DILocation(line: 10920, column: 17, scope: !6399)
!6406 = !DILocation(line: 10920, column: 26, scope: !6399)
!6407 = !DILocation(line: 10921, column: 27, scope: !6399)
!6408 = !DILocation(line: 10921, column: 3, scope: !6399)
!6409 = !DILocation(line: 10921, column: 17, scope: !6399)
!6410 = !DILocation(line: 10921, column: 25, scope: !6399)
!6411 = !DILocation(line: 10922, column: 24, scope: !6399)
!6412 = !DILocation(line: 10922, column: 32, scope: !6399)
!6413 = !DILocation(line: 10922, column: 40, scope: !6399)
!6414 = !DILocation(line: 10922, column: 3, scope: !6399)
!6415 = !DILocation(line: 10922, column: 17, scope: !6399)
!6416 = !DILocation(line: 10922, column: 21, scope: !6399)
!6417 = !DILocation(line: 10923, column: 28, scope: !6399)
!6418 = !DILocation(line: 10923, column: 3, scope: !6399)
!6419 = !DILocation(line: 10923, column: 17, scope: !6399)
!6420 = !DILocation(line: 10923, column: 26, scope: !6399)
!6421 = !DILocation(line: 10924, column: 2, scope: !6399)
!6422 = !DILocation(line: 10926, column: 19, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 10924, column: 9)
!6424 = !DILocation(line: 10926, column: 27, scope: !6423)
!6425 = !DILocation(line: 10926, column: 35, scope: !6423)
!6426 = !DILocation(line: 10926, column: 16, scope: !6423)
!6427 = !DILocation(line: 10927, column: 27, scope: !6423)
!6428 = !DILocation(line: 10927, column: 3, scope: !6423)
!6429 = !DILocation(line: 10927, column: 17, scope: !6423)
!6430 = !DILocation(line: 10927, column: 25, scope: !6423)
!6431 = !DILocation(line: 10928, column: 24, scope: !6423)
!6432 = !DILocation(line: 10928, column: 32, scope: !6423)
!6433 = !DILocation(line: 10928, column: 40, scope: !6423)
!6434 = !DILocation(line: 10928, column: 3, scope: !6423)
!6435 = !DILocation(line: 10928, column: 17, scope: !6423)
!6436 = !DILocation(line: 10928, column: 21, scope: !6423)
!6437 = !DILocation(line: 10929, column: 7, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 10929, column: 7)
!6439 = !DILocation(line: 10929, column: 13, scope: !6438)
!6440 = !DILocation(line: 10929, column: 20, scope: !6438)
!6441 = !DILocation(line: 10929, column: 7, scope: !6423)
!6442 = !DILocation(line: 10931, column: 4, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 10929, column: 51)
!6444 = !DILocation(line: 10931, column: 18, scope: !6443)
!6445 = !DILocation(line: 10931, column: 28, scope: !6443)
!6446 = !DILocation(line: 10932, column: 3, scope: !6443)
!6447 = !DILocation(line: 10932, column: 14, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 10932, column: 14)
!6449 = !DILocation(line: 10932, column: 20, scope: !6448)
!6450 = !DILocation(line: 10932, column: 27, scope: !6448)
!6451 = !DILocation(line: 10932, column: 14, scope: !6438)
!6452 = !DILocation(line: 10934, column: 4, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 10932, column: 58)
!6454 = !DILocation(line: 10934, column: 18, scope: !6453)
!6455 = !DILocation(line: 10934, column: 28, scope: !6453)
!6456 = !DILocation(line: 10935, column: 3, scope: !6453)
!6457 = !DILocation(line: 10937, column: 4, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 10935, column: 10)
!6459 = !DILocation(line: 10937, column: 18, scope: !6458)
!6460 = !DILocation(line: 10937, column: 28, scope: !6458)
!6461 = !DILocation(line: 10940, column: 27, scope: !6423)
!6462 = !DILocation(line: 10940, column: 3, scope: !6423)
!6463 = !DILocation(line: 10940, column: 11, scope: !6423)
!6464 = !DILocation(line: 10940, column: 25, scope: !6423)
!6465 = !DILocation(line: 10941, column: 42, scope: !6423)
!6466 = !DILocation(line: 10941, column: 26, scope: !6423)
!6467 = !DILocation(line: 10941, column: 3, scope: !6423)
!6468 = !DILocation(line: 10941, column: 11, scope: !6423)
!6469 = !DILocation(line: 10941, column: 24, scope: !6423)
!6470 = !DILocation(line: 10942, column: 8, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 10942, column: 7)
!6472 = !DILocation(line: 10942, column: 16, scope: !6471)
!6473 = !DILocation(line: 10942, column: 7, scope: !6423)
!6474 = !DILocation(line: 10943, column: 4, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 10942, column: 30)
!6476 = !DILocation(line: 10947, column: 8, scope: !6475)
!6477 = !DILocation(line: 10948, column: 4, scope: !6475)
!6478 = !DILocation(line: 10950, column: 41, scope: !6423)
!6479 = !DILocation(line: 10950, column: 49, scope: !6423)
!6480 = !DILocation(line: 10950, column: 3, scope: !6423)
!6481 = !DILocation(line: 10950, column: 17, scope: !6423)
!6482 = !DILocation(line: 10950, column: 26, scope: !6423)
!6483 = !DILocation(line: 10958, column: 20, scope: !6423)
!6484 = !DILocation(line: 10958, column: 3, scope: !6423)
!6485 = !DILocation(line: 10958, column: 11, scope: !6423)
!6486 = !DILocation(line: 10958, column: 18, scope: !6423)
!6487 = !DILocation(line: 10965, column: 6, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 10965, column: 6)
!6489 = !DILocation(line: 10965, column: 6, scope: !6359)
!6490 = !DILocation(line: 10970, column: 11, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 10965, column: 32)
!6492 = !DILocation(line: 10970, column: 25, scope: !6491)
!6493 = !DILocation(line: 10970, column: 3, scope: !6491)
!6494 = !DILocation(line: 10987, column: 4, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 10970, column: 35)
!6496 = !DILocation(line: 10987, column: 11, scope: !6495)
!6497 = !DILocation(line: 10987, column: 29, scope: !6495)
!6498 = !DILocation(line: 10988, column: 14, scope: !6495)
!6499 = !DILocation(line: 10989, column: 4, scope: !6495)
!6500 = !DILocation(line: 10992, column: 4, scope: !6495)
!6501 = !DILocation(line: 10994, column: 4, scope: !6495)
!6502 = !DILocation(line: 10994, column: 11, scope: !6495)
!6503 = !DILocation(line: 10994, column: 29, scope: !6495)
!6504 = !DILocation(line: 10995, column: 14, scope: !6495)
!6505 = !DILocation(line: 10996, column: 4, scope: !6495)
!6506 = !DILocation(line: 11006, column: 26, scope: !6491)
!6507 = !DILocation(line: 11006, column: 9, scope: !6491)
!6508 = !DILocation(line: 11006, column: 7, scope: !6491)
!6509 = !DILocation(line: 11007, column: 2, scope: !6491)
!6510 = !DILocation(line: 11013, column: 3, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 11007, column: 9)
!6512 = !DILocation(line: 11013, column: 10, scope: !6511)
!6513 = !DILocation(line: 11013, column: 28, scope: !6511)
!6514 = !DILocation(line: 11014, column: 13, scope: !6511)
!6515 = !DILocation(line: 11017, column: 26, scope: !6511)
!6516 = !DILocation(line: 11017, column: 32, scope: !6511)
!6517 = !DILocation(line: 11017, column: 9, scope: !6511)
!6518 = !DILocation(line: 11017, column: 7, scope: !6511)
!6519 = !DILocation(line: 11024, column: 6, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11024, column: 6)
!6521 = !DILocation(line: 11024, column: 6, scope: !6359)
!6522 = !DILocation(line: 11025, column: 3, scope: !6520)
!6523 = !DILocation(line: 11031, column: 6, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11031, column: 6)
!6525 = !DILocation(line: 11031, column: 6, scope: !6359)
!6526 = !DILocalVariable(name: "ep", scope: !6527, file: !3, line: 11033, type: !5990)
!6527 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 11031, column: 32)
!6528 = !DILocation(line: 11033, column: 18, scope: !6527)
!6529 = !DILocation(line: 11039, column: 7, scope: !6527)
!6530 = !DILocation(line: 11038, column: 3, scope: !6527)
!6531 = !DILocation(line: 11038, column: 11, scope: !6527)
!6532 = !DILocation(line: 11038, column: 24, scope: !6527)
!6533 = !DILocation(line: 11044, column: 9, scope: !6527)
!6534 = !DILocation(line: 11044, column: 17, scope: !6527)
!6535 = !DILocation(line: 11044, column: 28, scope: !6527)
!6536 = !DILocation(line: 11044, column: 6, scope: !6527)
!6537 = !DILocation(line: 11046, column: 19, scope: !6527)
!6538 = !DILocation(line: 11046, column: 33, scope: !6527)
!6539 = !DILocation(line: 11046, column: 38, scope: !6527)
!6540 = !DILocation(line: 11046, column: 3, scope: !6527)
!6541 = !DILocation(line: 11046, column: 7, scope: !6527)
!6542 = !DILocation(line: 11046, column: 17, scope: !6527)
!6543 = !DILocation(line: 11047, column: 21, scope: !6527)
!6544 = !DILocation(line: 11047, column: 35, scope: !6527)
!6545 = !DILocation(line: 11047, column: 40, scope: !6527)
!6546 = !DILocation(line: 11047, column: 3, scope: !6527)
!6547 = !DILocation(line: 11047, column: 7, scope: !6527)
!6548 = !DILocation(line: 11047, column: 19, scope: !6527)
!6549 = !DILocation(line: 11048, column: 21, scope: !6527)
!6550 = !DILocation(line: 11048, column: 35, scope: !6527)
!6551 = !DILocation(line: 11048, column: 40, scope: !6527)
!6552 = !DILocation(line: 11048, column: 3, scope: !6527)
!6553 = !DILocation(line: 11048, column: 7, scope: !6527)
!6554 = !DILocation(line: 11048, column: 19, scope: !6527)
!6555 = !DILocation(line: 11049, column: 3, scope: !6527)
!6556 = !DILocation(line: 11050, column: 21, scope: !6527)
!6557 = !DILocation(line: 11050, column: 35, scope: !6527)
!6558 = !DILocation(line: 11050, column: 3, scope: !6527)
!6559 = !DILocation(line: 11050, column: 7, scope: !6527)
!6560 = !DILocation(line: 11050, column: 19, scope: !6527)
!6561 = !DILocation(line: 11051, column: 14, scope: !6527)
!6562 = !DILocation(line: 11051, column: 28, scope: !6527)
!6563 = !DILocation(line: 11051, column: 3, scope: !6527)
!6564 = !DILocation(line: 11051, column: 7, scope: !6527)
!6565 = !DILocation(line: 11051, column: 12, scope: !6527)
!6566 = !DILocation(line: 11052, column: 17, scope: !6527)
!6567 = !DILocation(line: 11052, column: 31, scope: !6527)
!6568 = !DILocation(line: 11052, column: 3, scope: !6527)
!6569 = !DILocation(line: 11052, column: 7, scope: !6527)
!6570 = !DILocation(line: 11052, column: 15, scope: !6527)
!6571 = !DILocation(line: 11053, column: 23, scope: !6527)
!6572 = !DILocation(line: 11053, column: 37, scope: !6527)
!6573 = !DILocation(line: 11053, column: 3, scope: !6527)
!6574 = !DILocation(line: 11053, column: 7, scope: !6527)
!6575 = !DILocation(line: 11053, column: 21, scope: !6527)
!6576 = !DILocation(line: 11054, column: 3, scope: !6527)
!6577 = !DILocation(line: 11056, column: 21, scope: !6527)
!6578 = !DILocation(line: 11056, column: 35, scope: !6527)
!6579 = !DILocation(line: 11056, column: 40, scope: !6527)
!6580 = !DILocation(line: 11056, column: 3, scope: !6527)
!6581 = !DILocation(line: 11056, column: 7, scope: !6527)
!6582 = !DILocation(line: 11056, column: 19, scope: !6527)
!6583 = !DILocation(line: 11057, column: 25, scope: !6527)
!6584 = !DILocation(line: 11057, column: 39, scope: !6527)
!6585 = !DILocation(line: 11057, column: 44, scope: !6527)
!6586 = !DILocation(line: 11057, column: 3, scope: !6527)
!6587 = !DILocation(line: 11057, column: 7, scope: !6527)
!6588 = !DILocation(line: 11057, column: 23, scope: !6527)
!6589 = !DILocation(line: 11058, column: 25, scope: !6527)
!6590 = !DILocation(line: 11058, column: 39, scope: !6527)
!6591 = !DILocation(line: 11058, column: 44, scope: !6527)
!6592 = !DILocation(line: 11058, column: 3, scope: !6527)
!6593 = !DILocation(line: 11058, column: 7, scope: !6527)
!6594 = !DILocation(line: 11058, column: 23, scope: !6527)
!6595 = !DILocation(line: 11059, column: 25, scope: !6527)
!6596 = !DILocation(line: 11059, column: 39, scope: !6527)
!6597 = !DILocation(line: 11059, column: 44, scope: !6527)
!6598 = !DILocation(line: 11059, column: 3, scope: !6527)
!6599 = !DILocation(line: 11059, column: 7, scope: !6527)
!6600 = !DILocation(line: 11059, column: 23, scope: !6527)
!6601 = !DILocation(line: 11060, column: 25, scope: !6527)
!6602 = !DILocation(line: 11060, column: 39, scope: !6527)
!6603 = !DILocation(line: 11060, column: 44, scope: !6527)
!6604 = !DILocation(line: 11060, column: 3, scope: !6527)
!6605 = !DILocation(line: 11060, column: 7, scope: !6527)
!6606 = !DILocation(line: 11060, column: 23, scope: !6527)
!6607 = !DILocation(line: 11061, column: 25, scope: !6527)
!6608 = !DILocation(line: 11061, column: 39, scope: !6527)
!6609 = !DILocation(line: 11061, column: 44, scope: !6527)
!6610 = !DILocation(line: 11061, column: 3, scope: !6527)
!6611 = !DILocation(line: 11061, column: 7, scope: !6527)
!6612 = !DILocation(line: 11061, column: 23, scope: !6527)
!6613 = !DILocation(line: 11062, column: 25, scope: !6527)
!6614 = !DILocation(line: 11062, column: 39, scope: !6527)
!6615 = !DILocation(line: 11062, column: 44, scope: !6527)
!6616 = !DILocation(line: 11062, column: 3, scope: !6527)
!6617 = !DILocation(line: 11062, column: 7, scope: !6527)
!6618 = !DILocation(line: 11062, column: 23, scope: !6527)
!6619 = !DILocation(line: 11068, column: 26, scope: !6527)
!6620 = !DILocation(line: 11068, column: 32, scope: !6527)
!6621 = !DILocation(line: 11068, column: 9, scope: !6527)
!6622 = !DILocation(line: 11068, column: 7, scope: !6527)
!6623 = !DILocation(line: 11069, column: 7, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 11069, column: 7)
!6625 = !DILocation(line: 11069, column: 7, scope: !6527)
!6626 = !DILocation(line: 11070, column: 4, scope: !6624)
!6627 = !DILocation(line: 11071, column: 2, scope: !6527)
!6628 = !DILocalVariable(name: "ep_3550", scope: !6629, file: !3, line: 11072, type: !6630)
!6629 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 11071, column: 9)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5439, size: 64)
!6631 = !DILocation(line: 11072, column: 23, scope: !6629)
!6632 = !DILocalVariable(name: "ep_38C0800", scope: !6629, file: !3, line: 11073, type: !6633)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!6634 = !DILocation(line: 11073, column: 26, scope: !6629)
!6635 = !DILocalVariable(name: "ep_38C1600", scope: !6629, file: !3, line: 11074, type: !6636)
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!6637 = !DILocation(line: 11074, column: 26, scope: !6629)
!6638 = !DILocation(line: 11079, column: 7, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 11079, column: 7)
!6640 = !DILocation(line: 11079, column: 21, scope: !6639)
!6641 = !DILocation(line: 11079, column: 31, scope: !6639)
!6642 = !DILocation(line: 11079, column: 7, scope: !6629)
!6643 = !DILocation(line: 11080, column: 15, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 11079, column: 52)
!6645 = !DILocation(line: 11080, column: 23, scope: !6644)
!6646 = !DILocation(line: 11080, column: 34, scope: !6644)
!6647 = !DILocation(line: 11080, column: 12, scope: !6644)
!6648 = !DILocation(line: 11082, column: 31, scope: !6644)
!6649 = !DILocation(line: 11082, column: 45, scope: !6644)
!6650 = !DILocation(line: 11082, column: 4, scope: !6644)
!6651 = !DILocation(line: 11082, column: 13, scope: !6644)
!6652 = !DILocation(line: 11082, column: 29, scope: !6644)
!6653 = !DILocation(line: 11083, column: 28, scope: !6644)
!6654 = !DILocation(line: 11083, column: 42, scope: !6644)
!6655 = !DILocation(line: 11083, column: 4, scope: !6644)
!6656 = !DILocation(line: 11083, column: 13, scope: !6644)
!6657 = !DILocation(line: 11083, column: 26, scope: !6644)
!6658 = !DILocation(line: 11084, column: 27, scope: !6644)
!6659 = !DILocation(line: 11084, column: 41, scope: !6644)
!6660 = !DILocation(line: 11084, column: 4, scope: !6644)
!6661 = !DILocation(line: 11084, column: 13, scope: !6644)
!6662 = !DILocation(line: 11084, column: 25, scope: !6644)
!6663 = !DILocation(line: 11085, column: 27, scope: !6644)
!6664 = !DILocation(line: 11085, column: 41, scope: !6644)
!6665 = !DILocation(line: 11085, column: 46, scope: !6644)
!6666 = !DILocation(line: 11085, column: 4, scope: !6644)
!6667 = !DILocation(line: 11085, column: 13, scope: !6644)
!6668 = !DILocation(line: 11085, column: 25, scope: !6644)
!6669 = !DILocation(line: 11086, column: 27, scope: !6644)
!6670 = !DILocation(line: 11086, column: 41, scope: !6644)
!6671 = !DILocation(line: 11086, column: 46, scope: !6644)
!6672 = !DILocation(line: 11086, column: 4, scope: !6644)
!6673 = !DILocation(line: 11086, column: 13, scope: !6644)
!6674 = !DILocation(line: 11086, column: 25, scope: !6644)
!6675 = !DILocation(line: 11087, column: 25, scope: !6644)
!6676 = !DILocation(line: 11087, column: 39, scope: !6644)
!6677 = !DILocation(line: 11087, column: 4, scope: !6644)
!6678 = !DILocation(line: 11087, column: 13, scope: !6644)
!6679 = !DILocation(line: 11087, column: 23, scope: !6644)
!6680 = !DILocation(line: 11088, column: 25, scope: !6644)
!6681 = !DILocation(line: 11088, column: 39, scope: !6644)
!6682 = !DILocation(line: 11088, column: 4, scope: !6644)
!6683 = !DILocation(line: 11088, column: 13, scope: !6644)
!6684 = !DILocation(line: 11088, column: 23, scope: !6644)
!6685 = !DILocation(line: 11089, column: 25, scope: !6644)
!6686 = !DILocation(line: 11089, column: 39, scope: !6644)
!6687 = !DILocation(line: 11089, column: 4, scope: !6644)
!6688 = !DILocation(line: 11089, column: 13, scope: !6644)
!6689 = !DILocation(line: 11089, column: 23, scope: !6644)
!6690 = !DILocation(line: 11090, column: 26, scope: !6644)
!6691 = !DILocation(line: 11090, column: 40, scope: !6644)
!6692 = !DILocation(line: 11090, column: 4, scope: !6644)
!6693 = !DILocation(line: 11090, column: 13, scope: !6644)
!6694 = !DILocation(line: 11090, column: 24, scope: !6644)
!6695 = !DILocation(line: 11091, column: 27, scope: !6644)
!6696 = !DILocation(line: 11091, column: 41, scope: !6644)
!6697 = !DILocation(line: 11091, column: 4, scope: !6644)
!6698 = !DILocation(line: 11091, column: 13, scope: !6644)
!6699 = !DILocation(line: 11091, column: 25, scope: !6644)
!6700 = !DILocation(line: 11092, column: 27, scope: !6644)
!6701 = !DILocation(line: 11092, column: 41, scope: !6644)
!6702 = !DILocation(line: 11092, column: 4, scope: !6644)
!6703 = !DILocation(line: 11092, column: 13, scope: !6644)
!6704 = !DILocation(line: 11092, column: 25, scope: !6644)
!6705 = !DILocation(line: 11094, column: 8, scope: !6644)
!6706 = !DILocation(line: 11094, column: 22, scope: !6644)
!6707 = !DILocation(line: 11093, column: 4, scope: !6644)
!6708 = !DILocation(line: 11093, column: 13, scope: !6644)
!6709 = !DILocation(line: 11093, column: 30, scope: !6644)
!6710 = !DILocation(line: 11096, column: 8, scope: !6644)
!6711 = !DILocation(line: 11096, column: 22, scope: !6644)
!6712 = !DILocation(line: 11096, column: 27, scope: !6644)
!6713 = !DILocation(line: 11095, column: 4, scope: !6644)
!6714 = !DILocation(line: 11095, column: 13, scope: !6644)
!6715 = !DILocation(line: 11095, column: 33, scope: !6644)
!6716 = !DILocation(line: 11098, column: 8, scope: !6644)
!6717 = !DILocation(line: 11098, column: 22, scope: !6644)
!6718 = !DILocation(line: 11098, column: 27, scope: !6644)
!6719 = !DILocation(line: 11097, column: 4, scope: !6644)
!6720 = !DILocation(line: 11097, column: 13, scope: !6644)
!6721 = !DILocation(line: 11097, column: 33, scope: !6644)
!6722 = !DILocation(line: 11100, column: 8, scope: !6644)
!6723 = !DILocation(line: 11100, column: 22, scope: !6644)
!6724 = !DILocation(line: 11100, column: 27, scope: !6644)
!6725 = !DILocation(line: 11099, column: 4, scope: !6644)
!6726 = !DILocation(line: 11099, column: 13, scope: !6644)
!6727 = !DILocation(line: 11099, column: 33, scope: !6644)
!6728 = !DILocation(line: 11101, column: 3, scope: !6644)
!6729 = !DILocation(line: 11101, column: 14, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 11101, column: 14)
!6731 = !DILocation(line: 11101, column: 28, scope: !6730)
!6732 = !DILocation(line: 11101, column: 38, scope: !6730)
!6733 = !DILocation(line: 11101, column: 14, scope: !6639)
!6734 = !DILocation(line: 11102, column: 18, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 11101, column: 62)
!6736 = !DILocation(line: 11102, column: 26, scope: !6735)
!6737 = !DILocation(line: 11102, column: 37, scope: !6735)
!6738 = !DILocation(line: 11102, column: 15, scope: !6735)
!6739 = !DILocation(line: 11105, column: 8, scope: !6735)
!6740 = !DILocation(line: 11105, column: 22, scope: !6735)
!6741 = !DILocation(line: 11104, column: 4, scope: !6735)
!6742 = !DILocation(line: 11104, column: 16, scope: !6735)
!6743 = !DILocation(line: 11104, column: 32, scope: !6735)
!6744 = !DILocation(line: 11106, column: 31, scope: !6735)
!6745 = !DILocation(line: 11106, column: 45, scope: !6735)
!6746 = !DILocation(line: 11106, column: 4, scope: !6735)
!6747 = !DILocation(line: 11106, column: 16, scope: !6735)
!6748 = !DILocation(line: 11106, column: 29, scope: !6735)
!6749 = !DILocation(line: 11107, column: 30, scope: !6735)
!6750 = !DILocation(line: 11107, column: 44, scope: !6735)
!6751 = !DILocation(line: 11107, column: 4, scope: !6735)
!6752 = !DILocation(line: 11107, column: 16, scope: !6735)
!6753 = !DILocation(line: 11107, column: 28, scope: !6735)
!6754 = !DILocation(line: 11109, column: 8, scope: !6735)
!6755 = !DILocation(line: 11109, column: 22, scope: !6735)
!6756 = !DILocation(line: 11109, column: 27, scope: !6735)
!6757 = !DILocation(line: 11108, column: 4, scope: !6735)
!6758 = !DILocation(line: 11108, column: 16, scope: !6735)
!6759 = !DILocation(line: 11108, column: 32, scope: !6735)
!6760 = !DILocation(line: 11111, column: 8, scope: !6735)
!6761 = !DILocation(line: 11111, column: 22, scope: !6735)
!6762 = !DILocation(line: 11111, column: 27, scope: !6735)
!6763 = !DILocation(line: 11110, column: 4, scope: !6735)
!6764 = !DILocation(line: 11110, column: 16, scope: !6735)
!6765 = !DILocation(line: 11110, column: 28, scope: !6735)
!6766 = !DILocation(line: 11112, column: 28, scope: !6735)
!6767 = !DILocation(line: 11112, column: 42, scope: !6735)
!6768 = !DILocation(line: 11112, column: 4, scope: !6735)
!6769 = !DILocation(line: 11112, column: 16, scope: !6735)
!6770 = !DILocation(line: 11112, column: 26, scope: !6735)
!6771 = !DILocation(line: 11113, column: 28, scope: !6735)
!6772 = !DILocation(line: 11113, column: 42, scope: !6735)
!6773 = !DILocation(line: 11113, column: 4, scope: !6735)
!6774 = !DILocation(line: 11113, column: 16, scope: !6735)
!6775 = !DILocation(line: 11113, column: 26, scope: !6735)
!6776 = !DILocation(line: 11114, column: 30, scope: !6735)
!6777 = !DILocation(line: 11114, column: 44, scope: !6735)
!6778 = !DILocation(line: 11114, column: 4, scope: !6735)
!6779 = !DILocation(line: 11114, column: 16, scope: !6735)
!6780 = !DILocation(line: 11114, column: 28, scope: !6735)
!6781 = !DILocation(line: 11115, column: 30, scope: !6735)
!6782 = !DILocation(line: 11115, column: 44, scope: !6735)
!6783 = !DILocation(line: 11115, column: 4, scope: !6735)
!6784 = !DILocation(line: 11115, column: 16, scope: !6735)
!6785 = !DILocation(line: 11115, column: 28, scope: !6735)
!6786 = !DILocation(line: 11116, column: 30, scope: !6735)
!6787 = !DILocation(line: 11116, column: 44, scope: !6735)
!6788 = !DILocation(line: 11116, column: 4, scope: !6735)
!6789 = !DILocation(line: 11116, column: 16, scope: !6735)
!6790 = !DILocation(line: 11116, column: 28, scope: !6735)
!6791 = !DILocation(line: 11117, column: 30, scope: !6735)
!6792 = !DILocation(line: 11117, column: 44, scope: !6735)
!6793 = !DILocation(line: 11117, column: 4, scope: !6735)
!6794 = !DILocation(line: 11117, column: 16, scope: !6735)
!6795 = !DILocation(line: 11117, column: 28, scope: !6735)
!6796 = !DILocation(line: 11118, column: 30, scope: !6735)
!6797 = !DILocation(line: 11118, column: 44, scope: !6735)
!6798 = !DILocation(line: 11118, column: 4, scope: !6735)
!6799 = !DILocation(line: 11118, column: 16, scope: !6735)
!6800 = !DILocation(line: 11118, column: 28, scope: !6735)
!6801 = !DILocation(line: 11119, column: 30, scope: !6735)
!6802 = !DILocation(line: 11119, column: 44, scope: !6735)
!6803 = !DILocation(line: 11119, column: 4, scope: !6735)
!6804 = !DILocation(line: 11119, column: 16, scope: !6735)
!6805 = !DILocation(line: 11119, column: 28, scope: !6735)
!6806 = !DILocation(line: 11120, column: 30, scope: !6735)
!6807 = !DILocation(line: 11120, column: 44, scope: !6735)
!6808 = !DILocation(line: 11120, column: 4, scope: !6735)
!6809 = !DILocation(line: 11120, column: 16, scope: !6735)
!6810 = !DILocation(line: 11120, column: 28, scope: !6735)
!6811 = !DILocation(line: 11122, column: 8, scope: !6735)
!6812 = !DILocation(line: 11122, column: 22, scope: !6735)
!6813 = !DILocation(line: 11121, column: 4, scope: !6735)
!6814 = !DILocation(line: 11121, column: 16, scope: !6735)
!6815 = !DILocation(line: 11121, column: 33, scope: !6735)
!6816 = !DILocation(line: 11124, column: 8, scope: !6735)
!6817 = !DILocation(line: 11124, column: 22, scope: !6735)
!6818 = !DILocation(line: 11124, column: 27, scope: !6735)
!6819 = !DILocation(line: 11123, column: 4, scope: !6735)
!6820 = !DILocation(line: 11123, column: 16, scope: !6735)
!6821 = !DILocation(line: 11123, column: 36, scope: !6735)
!6822 = !DILocation(line: 11126, column: 8, scope: !6735)
!6823 = !DILocation(line: 11126, column: 22, scope: !6735)
!6824 = !DILocation(line: 11126, column: 27, scope: !6735)
!6825 = !DILocation(line: 11125, column: 4, scope: !6735)
!6826 = !DILocation(line: 11125, column: 16, scope: !6735)
!6827 = !DILocation(line: 11125, column: 36, scope: !6735)
!6828 = !DILocation(line: 11128, column: 8, scope: !6735)
!6829 = !DILocation(line: 11128, column: 22, scope: !6735)
!6830 = !DILocation(line: 11128, column: 27, scope: !6735)
!6831 = !DILocation(line: 11127, column: 4, scope: !6735)
!6832 = !DILocation(line: 11127, column: 16, scope: !6735)
!6833 = !DILocation(line: 11127, column: 36, scope: !6735)
!6834 = !DILocation(line: 11129, column: 3, scope: !6735)
!6835 = !DILocation(line: 11130, column: 18, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 11129, column: 10)
!6837 = !DILocation(line: 11130, column: 26, scope: !6836)
!6838 = !DILocation(line: 11130, column: 37, scope: !6836)
!6839 = !DILocation(line: 11130, column: 15, scope: !6836)
!6840 = !DILocation(line: 11133, column: 8, scope: !6836)
!6841 = !DILocation(line: 11133, column: 22, scope: !6836)
!6842 = !DILocation(line: 11132, column: 4, scope: !6836)
!6843 = !DILocation(line: 11132, column: 16, scope: !6836)
!6844 = !DILocation(line: 11132, column: 32, scope: !6836)
!6845 = !DILocation(line: 11134, column: 31, scope: !6836)
!6846 = !DILocation(line: 11134, column: 45, scope: !6836)
!6847 = !DILocation(line: 11134, column: 4, scope: !6836)
!6848 = !DILocation(line: 11134, column: 16, scope: !6836)
!6849 = !DILocation(line: 11134, column: 29, scope: !6836)
!6850 = !DILocation(line: 11135, column: 30, scope: !6836)
!6851 = !DILocation(line: 11135, column: 44, scope: !6836)
!6852 = !DILocation(line: 11135, column: 4, scope: !6836)
!6853 = !DILocation(line: 11135, column: 16, scope: !6836)
!6854 = !DILocation(line: 11135, column: 28, scope: !6836)
!6855 = !DILocation(line: 11137, column: 8, scope: !6836)
!6856 = !DILocation(line: 11137, column: 22, scope: !6836)
!6857 = !DILocation(line: 11137, column: 27, scope: !6836)
!6858 = !DILocation(line: 11136, column: 4, scope: !6836)
!6859 = !DILocation(line: 11136, column: 16, scope: !6836)
!6860 = !DILocation(line: 11136, column: 32, scope: !6836)
!6861 = !DILocation(line: 11139, column: 8, scope: !6836)
!6862 = !DILocation(line: 11139, column: 22, scope: !6836)
!6863 = !DILocation(line: 11139, column: 27, scope: !6836)
!6864 = !DILocation(line: 11138, column: 4, scope: !6836)
!6865 = !DILocation(line: 11138, column: 16, scope: !6836)
!6866 = !DILocation(line: 11138, column: 28, scope: !6836)
!6867 = !DILocation(line: 11140, column: 28, scope: !6836)
!6868 = !DILocation(line: 11140, column: 42, scope: !6836)
!6869 = !DILocation(line: 11140, column: 4, scope: !6836)
!6870 = !DILocation(line: 11140, column: 16, scope: !6836)
!6871 = !DILocation(line: 11140, column: 26, scope: !6836)
!6872 = !DILocation(line: 11141, column: 28, scope: !6836)
!6873 = !DILocation(line: 11141, column: 42, scope: !6836)
!6874 = !DILocation(line: 11141, column: 4, scope: !6836)
!6875 = !DILocation(line: 11141, column: 16, scope: !6836)
!6876 = !DILocation(line: 11141, column: 26, scope: !6836)
!6877 = !DILocation(line: 11142, column: 30, scope: !6836)
!6878 = !DILocation(line: 11142, column: 44, scope: !6836)
!6879 = !DILocation(line: 11142, column: 4, scope: !6836)
!6880 = !DILocation(line: 11142, column: 16, scope: !6836)
!6881 = !DILocation(line: 11142, column: 28, scope: !6836)
!6882 = !DILocation(line: 11143, column: 30, scope: !6836)
!6883 = !DILocation(line: 11143, column: 44, scope: !6836)
!6884 = !DILocation(line: 11143, column: 4, scope: !6836)
!6885 = !DILocation(line: 11143, column: 16, scope: !6836)
!6886 = !DILocation(line: 11143, column: 28, scope: !6836)
!6887 = !DILocation(line: 11144, column: 30, scope: !6836)
!6888 = !DILocation(line: 11144, column: 44, scope: !6836)
!6889 = !DILocation(line: 11144, column: 4, scope: !6836)
!6890 = !DILocation(line: 11144, column: 16, scope: !6836)
!6891 = !DILocation(line: 11144, column: 28, scope: !6836)
!6892 = !DILocation(line: 11145, column: 30, scope: !6836)
!6893 = !DILocation(line: 11145, column: 44, scope: !6836)
!6894 = !DILocation(line: 11145, column: 4, scope: !6836)
!6895 = !DILocation(line: 11145, column: 16, scope: !6836)
!6896 = !DILocation(line: 11145, column: 28, scope: !6836)
!6897 = !DILocation(line: 11146, column: 30, scope: !6836)
!6898 = !DILocation(line: 11146, column: 44, scope: !6836)
!6899 = !DILocation(line: 11146, column: 4, scope: !6836)
!6900 = !DILocation(line: 11146, column: 16, scope: !6836)
!6901 = !DILocation(line: 11146, column: 28, scope: !6836)
!6902 = !DILocation(line: 11147, column: 30, scope: !6836)
!6903 = !DILocation(line: 11147, column: 44, scope: !6836)
!6904 = !DILocation(line: 11147, column: 4, scope: !6836)
!6905 = !DILocation(line: 11147, column: 16, scope: !6836)
!6906 = !DILocation(line: 11147, column: 28, scope: !6836)
!6907 = !DILocation(line: 11148, column: 30, scope: !6836)
!6908 = !DILocation(line: 11148, column: 44, scope: !6836)
!6909 = !DILocation(line: 11148, column: 4, scope: !6836)
!6910 = !DILocation(line: 11148, column: 16, scope: !6836)
!6911 = !DILocation(line: 11148, column: 28, scope: !6836)
!6912 = !DILocation(line: 11150, column: 8, scope: !6836)
!6913 = !DILocation(line: 11150, column: 22, scope: !6836)
!6914 = !DILocation(line: 11149, column: 4, scope: !6836)
!6915 = !DILocation(line: 11149, column: 16, scope: !6836)
!6916 = !DILocation(line: 11149, column: 33, scope: !6836)
!6917 = !DILocation(line: 11152, column: 8, scope: !6836)
!6918 = !DILocation(line: 11152, column: 22, scope: !6836)
!6919 = !DILocation(line: 11152, column: 27, scope: !6836)
!6920 = !DILocation(line: 11151, column: 4, scope: !6836)
!6921 = !DILocation(line: 11151, column: 16, scope: !6836)
!6922 = !DILocation(line: 11151, column: 36, scope: !6836)
!6923 = !DILocation(line: 11154, column: 8, scope: !6836)
!6924 = !DILocation(line: 11154, column: 22, scope: !6836)
!6925 = !DILocation(line: 11154, column: 27, scope: !6836)
!6926 = !DILocation(line: 11153, column: 4, scope: !6836)
!6927 = !DILocation(line: 11153, column: 16, scope: !6836)
!6928 = !DILocation(line: 11153, column: 36, scope: !6836)
!6929 = !DILocation(line: 11156, column: 8, scope: !6836)
!6930 = !DILocation(line: 11156, column: 22, scope: !6836)
!6931 = !DILocation(line: 11156, column: 27, scope: !6836)
!6932 = !DILocation(line: 11155, column: 4, scope: !6836)
!6933 = !DILocation(line: 11155, column: 16, scope: !6836)
!6934 = !DILocation(line: 11155, column: 36, scope: !6836)
!6935 = !DILocation(line: 11163, column: 7, scope: !6629)
!6936 = !DILocation(line: 11162, column: 3, scope: !6629)
!6937 = !DILocation(line: 11162, column: 11, scope: !6629)
!6938 = !DILocation(line: 11162, column: 24, scope: !6629)
!6939 = !DILocation(line: 11171, column: 2, scope: !6359)
!6940 = !DILocation(line: 11171, column: 9, scope: !6359)
!6941 = !DILocation(line: 11171, column: 21, scope: !6359)
!6942 = !DILocation(line: 11172, column: 6, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11172, column: 6)
!6944 = !DILocation(line: 11172, column: 6, scope: !6359)
!6945 = !DILocation(line: 11173, column: 3, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 11172, column: 32)
!6947 = !DILocation(line: 11173, column: 10, scope: !6946)
!6948 = !DILocation(line: 11173, column: 17, scope: !6946)
!6949 = !DILocation(line: 11174, column: 3, scope: !6946)
!6950 = !DILocation(line: 11174, column: 10, scope: !6946)
!6951 = !DILocation(line: 11174, column: 18, scope: !6946)
!6952 = !DILocation(line: 11175, column: 3, scope: !6946)
!6953 = !DILocation(line: 11175, column: 10, scope: !6946)
!6954 = !DILocation(line: 11175, column: 22, scope: !6946)
!6955 = !DILocation(line: 11177, column: 20, scope: !6946)
!6956 = !DILocation(line: 11177, column: 34, scope: !6946)
!6957 = !DILocation(line: 11177, column: 3, scope: !6946)
!6958 = !DILocation(line: 11177, column: 10, scope: !6946)
!6959 = !DILocation(line: 11177, column: 18, scope: !6946)
!6960 = !DILocation(line: 11178, column: 3, scope: !6946)
!6961 = !DILocation(line: 11178, column: 11, scope: !6946)
!6962 = !DILocation(line: 11178, column: 25, scope: !6946)
!6963 = !DILocation(line: 11179, column: 20, scope: !6946)
!6964 = !DILocation(line: 11179, column: 34, scope: !6946)
!6965 = !DILocation(line: 11179, column: 39, scope: !6946)
!6966 = !DILocation(line: 11179, column: 3, scope: !6946)
!6967 = !DILocation(line: 11179, column: 10, scope: !6946)
!6968 = !DILocation(line: 11179, column: 18, scope: !6946)
!6969 = !DILocation(line: 11182, column: 22, scope: !6946)
!6970 = !DILocation(line: 11182, column: 36, scope: !6946)
!6971 = !DILocation(line: 11182, column: 3, scope: !6946)
!6972 = !DILocation(line: 11182, column: 10, scope: !6946)
!6973 = !DILocation(line: 11182, column: 20, scope: !6946)
!6974 = !DILocation(line: 11183, column: 2, scope: !6946)
!6975 = !DILocation(line: 11184, column: 3, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 11183, column: 9)
!6977 = !DILocation(line: 11184, column: 10, scope: !6976)
!6978 = !DILocation(line: 11184, column: 17, scope: !6976)
!6979 = !DILocation(line: 11185, column: 3, scope: !6976)
!6980 = !DILocation(line: 11185, column: 10, scope: !6976)
!6981 = !DILocation(line: 11185, column: 18, scope: !6976)
!6982 = !DILocation(line: 11186, column: 3, scope: !6976)
!6983 = !DILocation(line: 11186, column: 10, scope: !6976)
!6984 = !DILocation(line: 11186, column: 22, scope: !6976)
!6985 = !DILocation(line: 11194, column: 20, scope: !6976)
!6986 = !DILocation(line: 11194, column: 3, scope: !6976)
!6987 = !DILocation(line: 11194, column: 10, scope: !6976)
!6988 = !DILocation(line: 11194, column: 18, scope: !6976)
!6989 = !DILocation(line: 11196, column: 20, scope: !6976)
!6990 = !DILocation(line: 11196, column: 34, scope: !6976)
!6991 = !DILocation(line: 11196, column: 3, scope: !6976)
!6992 = !DILocation(line: 11196, column: 10, scope: !6976)
!6993 = !DILocation(line: 11196, column: 18, scope: !6976)
!6994 = !DILocation(line: 11199, column: 22, scope: !6976)
!6995 = !DILocation(line: 11199, column: 36, scope: !6976)
!6996 = !DILocation(line: 11199, column: 3, scope: !6976)
!6997 = !DILocation(line: 11199, column: 10, scope: !6976)
!6998 = !DILocation(line: 11199, column: 20, scope: !6976)
!6999 = !DILocation(line: 11206, column: 6, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11206, column: 6)
!7001 = !DILocation(line: 11206, column: 6, scope: !6359)
!7002 = !DILocation(line: 11214, column: 10, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 11206, column: 32)
!7004 = !DILocation(line: 11214, column: 24, scope: !7003)
!7005 = !DILocation(line: 11214, column: 38, scope: !7003)
!7006 = !DILocation(line: 11214, column: 43, scope: !7003)
!7007 = !DILocation(line: 11214, column: 48, scope: !7003)
!7008 = !DILocation(line: 11215, column: 27, scope: !7003)
!7009 = !DILocation(line: 11214, column: 7, scope: !7003)
!7010 = !DILocation(line: 11213, column: 3, scope: !7003)
!7011 = !DILocation(line: 11213, column: 10, scope: !7003)
!7012 = !DILocation(line: 11213, column: 23, scope: !7003)
!7013 = !DILocation(line: 11216, column: 2, scope: !7003)
!7014 = !DILocation(line: 11217, column: 3, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 11216, column: 9)
!7016 = !DILocation(line: 11217, column: 10, scope: !7015)
!7017 = !DILocation(line: 11217, column: 23, scope: !7015)
!7018 = !DILocation(line: 11226, column: 6, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11226, column: 6)
!7020 = !DILocation(line: 11226, column: 13, scope: !7019)
!7021 = !DILocation(line: 11226, column: 26, scope: !7019)
!7022 = !DILocation(line: 11226, column: 6, scope: !6359)
!7023 = !DILocation(line: 11227, column: 3, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 11226, column: 36)
!7025 = !DILocation(line: 11227, column: 10, scope: !7024)
!7026 = !DILocation(line: 11227, column: 23, scope: !7024)
!7027 = !DILocation(line: 11228, column: 2, scope: !7024)
!7028 = !DILocation(line: 11233, column: 6, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11233, column: 6)
!7030 = !DILocation(line: 11233, column: 6, scope: !6359)
!7031 = !DILocation(line: 11234, column: 39, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 11233, column: 32)
!7033 = !DILocation(line: 11234, column: 53, scope: !7032)
!7034 = !DILocation(line: 11235, column: 11, scope: !7032)
!7035 = !DILocation(line: 11235, column: 25, scope: !7032)
!7036 = !DILocation(line: 11234, column: 17, scope: !7032)
!7037 = !DILocation(line: 11234, column: 3, scope: !7032)
!7038 = !DILocation(line: 11234, column: 10, scope: !7032)
!7039 = !DILocation(line: 11234, column: 15, scope: !7032)
!7040 = !DILocation(line: 11236, column: 2, scope: !7032)
!7041 = !DILocation(line: 11241, column: 3, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 11236, column: 9)
!7043 = !DILocation(line: 11241, column: 3, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 11241, column: 3)
!7045 = !DILocation(line: 11243, column: 3, scope: !7042)
!7046 = !DILocation(line: 11243, column: 3, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 11243, column: 3)
!7048 = !DILocation(line: 11245, column: 3, scope: !7042)
!7049 = !DILocation(line: 11245, column: 3, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 11245, column: 3)
!7051 = !DILocation(line: 11247, column: 3, scope: !7042)
!7052 = !DILocation(line: 11247, column: 3, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 11247, column: 3)
!7054 = !DILocation(line: 11260, column: 7, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 11260, column: 7)
!7056 = !DILocation(line: 11260, column: 15, scope: !7055)
!7057 = !DILocation(line: 11260, column: 30, scope: !7055)
!7058 = !DILocation(line: 11260, column: 7, scope: !7042)
!7059 = !DILocation(line: 11265, column: 26, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 11260, column: 41)
!7061 = !DILocation(line: 11265, column: 34, scope: !7060)
!7062 = !DILocation(line: 11265, column: 19, scope: !7060)
!7063 = !DILocation(line: 11265, column: 47, scope: !7060)
!7064 = !DILocation(line: 11265, column: 4, scope: !7060)
!7065 = !DILocation(line: 11265, column: 11, scope: !7060)
!7066 = !DILocation(line: 11265, column: 16, scope: !7060)
!7067 = !DILocation(line: 11266, column: 3, scope: !7060)
!7068 = !DILocation(line: 11267, column: 4, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 11266, column: 10)
!7070 = !DILocation(line: 11267, column: 11, scope: !7069)
!7071 = !DILocation(line: 11267, column: 16, scope: !7069)
!7072 = !DILocation(line: 11276, column: 2, scope: !6359)
!7073 = !DILocation(line: 11276, column: 9, scope: !6359)
!7074 = !DILocation(line: 11276, column: 21, scope: !6359)
!7075 = !DILocation(line: 11297, column: 20, scope: !6359)
!7076 = !DILocation(line: 11297, column: 28, scope: !6359)
!7077 = !DILocation(line: 11297, column: 53, scope: !6359)
!7078 = !DILocation(line: 11298, column: 16, scope: !6359)
!7079 = !DILocation(line: 11297, column: 8, scope: !6359)
!7080 = !DILocation(line: 11297, column: 6, scope: !6359)
!7081 = !DILocation(line: 11300, column: 6, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11300, column: 6)
!7083 = !DILocation(line: 11300, column: 6, scope: !6359)
!7084 = !DILocation(line: 11301, column: 7, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 11301, column: 7)
!7086 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 11300, column: 11)
!7087 = !DILocation(line: 11301, column: 11, scope: !7085)
!7088 = !DILocation(line: 11301, column: 7, scope: !7086)
!7089 = !DILocation(line: 11302, column: 4, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 11301, column: 22)
!7091 = !DILocation(line: 11304, column: 3, scope: !7090)
!7092 = !DILocation(line: 11304, column: 14, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 11304, column: 14)
!7094 = !DILocation(line: 11304, column: 18, scope: !7093)
!7095 = !DILocation(line: 11304, column: 14, scope: !7085)
!7096 = !DILocation(line: 11305, column: 4, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 11304, column: 30)
!7098 = !DILocation(line: 11307, column: 3, scope: !7097)
!7099 = !DILocation(line: 11308, column: 4, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 11307, column: 10)
!7101 = !DILocation(line: 11311, column: 3, scope: !7086)
!7102 = !DILocation(line: 11317, column: 6, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11317, column: 6)
!7104 = !DILocation(line: 11317, column: 6, scope: !6359)
!7105 = !DILocation(line: 11320, column: 31, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 11317, column: 32)
!7107 = !DILocation(line: 11320, column: 3, scope: !7106)
!7108 = !DILocation(line: 11320, column: 17, scope: !7106)
!7109 = !DILocation(line: 11320, column: 29, scope: !7106)
!7110 = !DILocation(line: 11321, column: 8, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 11321, column: 7)
!7112 = !DILocation(line: 11321, column: 22, scope: !7111)
!7113 = !DILocation(line: 11321, column: 7, scope: !7106)
!7114 = !DILocation(line: 11322, column: 8, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 11321, column: 35)
!7116 = !DILocation(line: 11323, column: 4, scope: !7115)
!7117 = !DILocation(line: 11325, column: 36, scope: !7106)
!7118 = !DILocation(line: 11325, column: 15, scope: !7106)
!7119 = !DILocation(line: 11325, column: 13, scope: !7106)
!7120 = !DILocation(line: 11327, column: 7, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 11327, column: 7)
!7122 = !DILocation(line: 11327, column: 17, scope: !7121)
!7123 = !DILocation(line: 11327, column: 20, scope: !7121)
!7124 = !DILocation(line: 11327, column: 34, scope: !7121)
!7125 = !DILocation(line: 11327, column: 7, scope: !7106)
!7126 = !DILocation(line: 11328, column: 4, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 11327, column: 44)
!7128 = !DILocation(line: 11332, column: 9, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 11332, column: 8)
!7130 = !DILocation(line: 11332, column: 23, scope: !7129)
!7131 = !DILocation(line: 11332, column: 8, scope: !7127)
!7132 = !DILocation(line: 11333, column: 9, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 11332, column: 36)
!7134 = !DILocation(line: 11334, column: 5, scope: !7133)
!7135 = !DILocation(line: 11336, column: 3, scope: !7127)
!7136 = !DILocation(line: 11337, column: 2, scope: !7106)
!7137 = !DILocation(line: 11338, column: 31, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 11338, column: 7)
!7139 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 11337, column: 9)
!7140 = !DILocation(line: 11338, column: 7, scope: !7138)
!7141 = !DILocation(line: 11338, column: 7, scope: !7139)
!7142 = !DILocation(line: 11339, column: 8, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 11338, column: 39)
!7144 = !DILocation(line: 11340, column: 4, scope: !7143)
!7145 = !DILocation(line: 11346, column: 22, scope: !6359)
!7146 = !DILocation(line: 11346, column: 29, scope: !6359)
!7147 = !DILocation(line: 11346, column: 37, scope: !6359)
!7148 = !DILocation(line: 11346, column: 8, scope: !6359)
!7149 = !DILocation(line: 11346, column: 6, scope: !6359)
!7150 = !DILocation(line: 11347, column: 6, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11347, column: 6)
!7152 = !DILocation(line: 11347, column: 6, scope: !6359)
!7153 = !DILocation(line: 11348, column: 3, scope: !7151)
!7154 = !DILocation(line: 11350, column: 17, scope: !6359)
!7155 = !DILocation(line: 11350, column: 2, scope: !6359)
!7156 = !DILocation(line: 11351, column: 2, scope: !6359)
!7157 = !DILabel(scope: !6359, name: "err_free_mem", file: !3, line: 11353)
!7158 = !DILocation(line: 11353, column: 2, scope: !6359)
!7159 = !DILocation(line: 11354, column: 6, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11354, column: 6)
!7161 = !DILocation(line: 11354, column: 6, scope: !6359)
!7162 = !DILocation(line: 11355, column: 7, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 11355, column: 7)
!7164 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 11354, column: 32)
!7165 = !DILocation(line: 11355, column: 21, scope: !7163)
!7166 = !DILocation(line: 11355, column: 7, scope: !7164)
!7167 = !DILocation(line: 11356, column: 4, scope: !7163)
!7168 = !DILocation(line: 11358, column: 9, scope: !7164)
!7169 = !DILocation(line: 11358, column: 23, scope: !7164)
!7170 = !DILocation(line: 11358, column: 3, scope: !7164)
!7171 = !DILocation(line: 11359, column: 2, scope: !7164)
!7172 = !DILocation(line: 11360, column: 26, scope: !7160)
!7173 = !DILocation(line: 11360, column: 3, scope: !7160)
!7174 = !DILabel(scope: !6359, name: "err_free_irq", file: !3, line: 11361)
!7175 = !DILocation(line: 11361, column: 2, scope: !6359)
!7176 = !DILocation(line: 11362, column: 11, scope: !6359)
!7177 = !DILocation(line: 11362, column: 19, scope: !6359)
!7178 = !DILocation(line: 11362, column: 24, scope: !6359)
!7179 = !DILocation(line: 11362, column: 2, scope: !6359)
!7180 = !DILabel(scope: !6359, name: "err_free_dma", file: !3, line: 11363)
!7181 = !DILocation(line: 11363, column: 2, scope: !6359)
!7182 = !DILabel(scope: !6359, name: "err_unmap", file: !3, line: 11368)
!7183 = !DILocation(line: 11368, column: 2, scope: !6359)
!7184 = !DILocation(line: 11369, column: 6, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 11369, column: 6)
!7186 = !DILocation(line: 11369, column: 14, scope: !7185)
!7187 = !DILocation(line: 11369, column: 6, scope: !6359)
!7188 = !DILocation(line: 11370, column: 11, scope: !7185)
!7189 = !DILocation(line: 11370, column: 19, scope: !7185)
!7190 = !DILocation(line: 11370, column: 3, scope: !7185)
!7191 = !DILabel(scope: !6359, name: "err_shost", file: !3, line: 11372)
!7192 = !DILocation(line: 11372, column: 2, scope: !6359)
!7193 = !DILocation(line: 11374, column: 9, scope: !6359)
!7194 = !DILocation(line: 11374, column: 2, scope: !6359)
!7195 = !DILocation(line: 11375, column: 1, scope: !6359)
!7196 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !5712, file: !5712, line: 1870, type: !7197, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{null, !5710, !334}
!7199 = !DILocalVariable(name: "pdev", arg: 1, scope: !7196, file: !5712, line: 1870, type: !5710)
!7200 = !DILocation(line: 1870, column: 52, scope: !7196)
!7201 = !DILocalVariable(name: "data", arg: 2, scope: !7196, file: !5712, line: 1870, type: !334)
!7202 = !DILocation(line: 1870, column: 64, scope: !7196)
!7203 = !DILocation(line: 1872, column: 19, scope: !7196)
!7204 = !DILocation(line: 1872, column: 25, scope: !7196)
!7205 = !DILocation(line: 1872, column: 30, scope: !7196)
!7206 = !DILocation(line: 1872, column: 2, scope: !7196)
!7207 = !DILocation(line: 1873, column: 1, scope: !7196)
!7208 = !DILocalVariable(name: "shost", arg: 1, scope: !6064, file: !3, line: 2629, type: !4796)
!7209 = !DILocation(line: 2629, column: 52, scope: !6064)
!7210 = !DILocalVariable(name: "boardp", scope: !6064, file: !3, line: 2632, type: !190)
!7211 = !DILocation(line: 2632, column: 20, scope: !6064)
!7212 = !DILocation(line: 2632, column: 40, scope: !6064)
!7213 = !DILocation(line: 2632, column: 29, scope: !6064)
!7214 = !DILocalVariable(name: "asc_dvc_varp", scope: !6064, file: !3, line: 2633, type: !6375)
!7215 = !DILocation(line: 2633, column: 15, scope: !6064)
!7216 = !DILocalVariable(name: "adv_dvc_varp", scope: !6064, file: !3, line: 2634, type: !6378)
!7217 = !DILocation(line: 2634, column: 15, scope: !6064)
!7218 = !DILocalVariable(name: "busname", scope: !6064, file: !3, line: 2635, type: !261)
!7219 = !DILocation(line: 2635, column: 8, scope: !6064)
!7220 = !DILocalVariable(name: "widename", scope: !6064, file: !3, line: 2636, type: !261)
!7221 = !DILocation(line: 2636, column: 8, scope: !6064)
!7222 = !DILocation(line: 2638, column: 6, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 2638, column: 6)
!7224 = !DILocation(line: 2638, column: 6, scope: !6064)
!7225 = !DILocation(line: 2639, column: 19, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 2638, column: 32)
!7227 = !DILocation(line: 2639, column: 27, scope: !7226)
!7228 = !DILocation(line: 2639, column: 35, scope: !7226)
!7229 = !DILocation(line: 2639, column: 16, scope: !7226)
!7230 = !DILocation(line: 2641, column: 7, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 2641, column: 7)
!7232 = !DILocation(line: 2641, column: 21, scope: !7231)
!7233 = !DILocation(line: 2641, column: 30, scope: !7231)
!7234 = !DILocation(line: 2641, column: 7, scope: !7226)
!7235 = !DILocation(line: 2642, column: 9, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 2642, column: 8)
!7237 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2641, column: 44)
!7238 = !DILocation(line: 2642, column: 23, scope: !7236)
!7239 = !DILocation(line: 2642, column: 32, scope: !7236)
!7240 = !DILocation(line: 2642, column: 49, scope: !7236)
!7241 = !DILocation(line: 2642, column: 8, scope: !7237)
!7242 = !DILocation(line: 2644, column: 13, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 2643, column: 23)
!7244 = !DILocation(line: 2645, column: 4, scope: !7243)
!7245 = !DILocation(line: 2646, column: 13, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 2645, column: 11)
!7247 = !DILocation(line: 2650, column: 18, scope: !7237)
!7248 = !DILocation(line: 2651, column: 12, scope: !7237)
!7249 = !DILocation(line: 2651, column: 19, scope: !7237)
!7250 = !DILocation(line: 2652, column: 12, scope: !7237)
!7251 = !DILocation(line: 2652, column: 19, scope: !7237)
!7252 = !DILocation(line: 2652, column: 27, scope: !7237)
!7253 = !DILocation(line: 2652, column: 43, scope: !7237)
!7254 = !DILocation(line: 2653, column: 5, scope: !7237)
!7255 = !DILocation(line: 2653, column: 13, scope: !7237)
!7256 = !DILocation(line: 2653, column: 18, scope: !7237)
!7257 = !DILocation(line: 2653, column: 25, scope: !7237)
!7258 = !DILocation(line: 2648, column: 4, scope: !7237)
!7259 = !DILocation(line: 2654, column: 3, scope: !7237)
!7260 = !DILocation(line: 2655, column: 8, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 2655, column: 8)
!7262 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2654, column: 10)
!7263 = !DILocation(line: 2655, column: 22, scope: !7261)
!7264 = !DILocation(line: 2655, column: 31, scope: !7261)
!7265 = !DILocation(line: 2655, column: 8, scope: !7262)
!7266 = !DILocation(line: 2656, column: 13, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2655, column: 44)
!7268 = !DILocation(line: 2657, column: 4, scope: !7267)
!7269 = !DILocation(line: 2657, column: 15, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2657, column: 15)
!7271 = !DILocation(line: 2657, column: 29, scope: !7270)
!7272 = !DILocation(line: 2657, column: 38, scope: !7270)
!7273 = !DILocation(line: 2657, column: 15, scope: !7261)
!7274 = !DILocation(line: 2658, column: 13, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 2657, column: 53)
!7276 = !DILocation(line: 2659, column: 4, scope: !7275)
!7277 = !DILocation(line: 2659, column: 15, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 2659, column: 15)
!7279 = !DILocation(line: 2659, column: 29, scope: !7278)
!7280 = !DILocation(line: 2659, column: 38, scope: !7278)
!7281 = !DILocation(line: 2659, column: 15, scope: !7270)
!7282 = !DILocation(line: 2660, column: 10, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2660, column: 9)
!7284 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 2659, column: 52)
!7285 = !DILocation(line: 2660, column: 24, scope: !7283)
!7286 = !DILocation(line: 2660, column: 33, scope: !7283)
!7287 = !DILocation(line: 2661, column: 9, scope: !7283)
!7288 = !DILocation(line: 2660, column: 9, scope: !7284)
!7289 = !DILocation(line: 2662, column: 14, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2661, column: 30)
!7291 = !DILocation(line: 2663, column: 5, scope: !7290)
!7292 = !DILocation(line: 2664, column: 14, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2663, column: 12)
!7294 = !DILocation(line: 2666, column: 4, scope: !7284)
!7295 = !DILocation(line: 2667, column: 13, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 2666, column: 11)
!7297 = !DILocation(line: 2668, column: 5, scope: !7296)
!7298 = !DILocation(line: 2673, column: 18, scope: !7262)
!7299 = !DILocation(line: 2673, column: 34, scope: !7262)
!7300 = !DILocation(line: 2673, column: 41, scope: !7262)
!7301 = !DILocation(line: 2674, column: 12, scope: !7262)
!7302 = !DILocation(line: 2674, column: 19, scope: !7262)
!7303 = !DILocation(line: 2674, column: 27, scope: !7262)
!7304 = !DILocation(line: 2674, column: 43, scope: !7262)
!7305 = !DILocation(line: 2675, column: 5, scope: !7262)
!7306 = !DILocation(line: 2675, column: 13, scope: !7262)
!7307 = !DILocation(line: 2671, column: 4, scope: !7262)
!7308 = !DILocation(line: 2677, column: 2, scope: !7226)
!7309 = !DILocation(line: 2685, column: 19, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 2677, column: 9)
!7311 = !DILocation(line: 2685, column: 27, scope: !7310)
!7312 = !DILocation(line: 2685, column: 35, scope: !7310)
!7313 = !DILocation(line: 2685, column: 16, scope: !7310)
!7314 = !DILocation(line: 2686, column: 7, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 2686, column: 7)
!7316 = !DILocation(line: 2686, column: 21, scope: !7315)
!7317 = !DILocation(line: 2686, column: 31, scope: !7315)
!7318 = !DILocation(line: 2686, column: 7, scope: !7310)
!7319 = !DILocation(line: 2687, column: 13, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2686, column: 52)
!7321 = !DILocation(line: 2688, column: 3, scope: !7320)
!7322 = !DILocation(line: 2688, column: 14, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2688, column: 14)
!7324 = !DILocation(line: 2688, column: 28, scope: !7323)
!7325 = !DILocation(line: 2688, column: 38, scope: !7323)
!7326 = !DILocation(line: 2688, column: 14, scope: !7315)
!7327 = !DILocation(line: 2689, column: 13, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2688, column: 62)
!7329 = !DILocation(line: 2690, column: 3, scope: !7328)
!7330 = !DILocation(line: 2691, column: 13, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2690, column: 10)
!7332 = !DILocation(line: 2695, column: 17, scope: !7310)
!7333 = !DILocation(line: 2695, column: 34, scope: !7310)
!7334 = !DILocation(line: 2695, column: 48, scope: !7310)
!7335 = !DILocation(line: 2695, column: 27, scope: !7310)
!7336 = !DILocation(line: 2696, column: 11, scope: !7310)
!7337 = !DILocation(line: 2696, column: 25, scope: !7310)
!7338 = !DILocation(line: 2696, column: 4, scope: !7310)
!7339 = !DILocation(line: 2696, column: 36, scope: !7310)
!7340 = !DILocation(line: 2696, column: 44, scope: !7310)
!7341 = !DILocation(line: 2696, column: 34, scope: !7310)
!7342 = !DILocation(line: 2696, column: 58, scope: !7310)
!7343 = !DILocation(line: 2696, column: 63, scope: !7310)
!7344 = !DILocation(line: 2696, column: 71, scope: !7310)
!7345 = !DILocation(line: 2693, column: 3, scope: !7310)
!7346 = !DILocation(line: 2698, column: 2, scope: !6064)
!7347 = !DILocation(line: 2698, column: 2, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 2698, column: 2)
!7349 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 2698, column: 2)
!7350 = !DILocation(line: 2698, column: 2, scope: !7349)
!7351 = !DILocation(line: 2698, column: 2, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 2698, column: 2)
!7353 = !DILocation(line: 2698, column: 2, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2698, column: 2)
!7355 = !DILocation(line: 2698, column: 2, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2698, column: 2)
!7357 = !{i32 -2140709587, i32 -2140709558, i32 -2140709512, i32 -2140709454, i32 -2140709400, i32 -2140709346, i32 -2140709291, i32 -2140709260}
!7358 = !DILocation(line: 2698, column: 2, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 2698, column: 2)
!7360 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2698, column: 2)
!7361 = !{i32 -2140708813, i32 -2140708806, i32 -2140708752, i32 -2140708721, i32 -2140708691}
!7362 = !DILocation(line: 2698, column: 2, scope: !7360)
!7363 = !DILocation(line: 2700, column: 2, scope: !6064)
!7364 = distinct !DISubprogram(name: "advansys_queuecommand", scope: !3, file: !3, line: 8577, type: !4974, scopeLine: 8577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7365 = !DILocalVariable(name: "lock", arg: 1, scope: !7366, file: !7367, line: 407, type: !1122)
!7366 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7367, file: !7367, line: 407, type: !7368, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7367 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7368 = !DISubroutineType(types: !7369)
!7369 = !{null, !1122, !189}
!7370 = !DILocation(line: 407, column: 64, scope: !7366, inlinedAt: !7371)
!7371 = distinct !DILocation(line: 8577, column: 8, scope: !7364)
!7372 = !DILocalVariable(name: "flags", arg: 2, scope: !7366, file: !7367, line: 407, type: !189)
!7373 = !DILocation(line: 407, column: 84, scope: !7366, inlinedAt: !7371)
!7374 = !DILocalVariable(name: "lock", arg: 1, scope: !7375, file: !7367, line: 327, type: !1122)
!7375 = distinct !DISubprogram(name: "spinlock_check", scope: !7367, file: !7367, line: 327, type: !7376, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{!7378, !1122}
!7378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!7379 = !DILocation(line: 327, column: 67, scope: !7375, inlinedAt: !7380)
!7380 = distinct !DILocation(line: 8577, column: 8, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 8577, column: 8)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 8577, column: 8)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 8577, column: 8)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 8577, column: 8)
!7385 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 8577, column: 8)
!7386 = !DILocalVariable(name: "shost", arg: 1, scope: !7364, file: !3, line: 8577, type: !4796)
!7387 = !DILocation(line: 8577, column: 8, scope: !7364)
!7388 = !DILocalVariable(name: "cmd", arg: 2, scope: !7364, file: !3, line: 8577, type: !4976)
!7389 = !DILocalVariable(name: "irq_flags", scope: !7364, file: !3, line: 8577, type: !189)
!7390 = !DILocalVariable(name: "rc", scope: !7364, file: !3, line: 8577, type: !245)
!7391 = !DILocation(line: 8577, column: 8, scope: !7385)
!7392 = !DILocalVariable(name: "__dummy", scope: !7393, file: !3, line: 8577, type: !189)
!7393 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 8577, column: 8)
!7394 = !DILocation(line: 8577, column: 8, scope: !7393)
!7395 = !DILocalVariable(name: "__dummy2", scope: !7393, file: !3, line: 8577, type: !189)
!7396 = !DILocation(line: 8577, column: 8, scope: !7384)
!7397 = !DILocation(line: 8577, column: 8, scope: !7383)
!7398 = !DILocation(line: 8577, column: 8, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 8577, column: 8)
!7400 = !DILocalVariable(name: "__dummy", scope: !7401, file: !3, line: 8577, type: !189)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 8577, column: 8)
!7402 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 8577, column: 8)
!7403 = !DILocation(line: 8577, column: 8, scope: !7401)
!7404 = !DILocalVariable(name: "__dummy2", scope: !7401, file: !3, line: 8577, type: !189)
!7405 = !DILocation(line: 8577, column: 8, scope: !7402)
!7406 = !DILocation(line: 8577, column: 8, scope: !7382)
!7407 = !{i32 -2140596777}
!7408 = !DILocation(line: 8577, column: 8, scope: !7381)
!7409 = !DILocation(line: 329, column: 10, scope: !7375, inlinedAt: !7380)
!7410 = !DILocation(line: 329, column: 16, scope: !7375, inlinedAt: !7380)
!7411 = !DILocalVariable(name: "__dummy", scope: !7412, file: !7367, line: 409, type: !189)
!7412 = distinct !DILexicalBlock(scope: !7413, file: !7367, line: 409, column: 2)
!7413 = distinct !DILexicalBlock(scope: !7366, file: !7367, line: 409, column: 2)
!7414 = !DILocation(line: 409, column: 2, scope: !7412, inlinedAt: !7371)
!7415 = !DILocalVariable(name: "__dummy2", scope: !7412, file: !7367, line: 409, type: !189)
!7416 = !DILocalVariable(name: "__dummy", scope: !7417, file: !7367, line: 409, type: !189)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !7367, line: 409, column: 2)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !7367, line: 409, column: 2)
!7419 = distinct !DILexicalBlock(scope: !7420, file: !7367, line: 409, column: 2)
!7420 = distinct !DILexicalBlock(scope: !7413, file: !7367, line: 409, column: 2)
!7421 = !DILocation(line: 409, column: 2, scope: !7417, inlinedAt: !7371)
!7422 = !DILocalVariable(name: "__dummy2", scope: !7417, file: !7367, line: 409, type: !189)
!7423 = !DILocation(line: 409, column: 2, scope: !7418, inlinedAt: !7371)
!7424 = !DILocation(line: 409, column: 2, scope: !7425, inlinedAt: !7371)
!7425 = distinct !DILexicalBlock(scope: !7420, file: !7367, line: 409, column: 2)
!7426 = !{i32 -2145123978}
!7427 = !DILocation(line: 409, column: 2, scope: !7428, inlinedAt: !7371)
!7428 = distinct !DILexicalBlock(scope: !7425, file: !7367, line: 409, column: 2)
!7429 = distinct !DISubprogram(name: "advansys_reset", scope: !3, file: !3, line: 7105, type: !5064, scopeLine: 7106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7430 = !DILocation(line: 407, column: 64, scope: !7366, inlinedAt: !7431)
!7431 = distinct !DILocation(line: 7165, column: 3, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 7141, column: 9)
!7433 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 7119, column: 6)
!7434 = !DILocation(line: 407, column: 84, scope: !7366, inlinedAt: !7431)
!7435 = !DILocation(line: 327, column: 67, scope: !7375, inlinedAt: !7436)
!7436 = distinct !DILocation(line: 7163, column: 3, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 7163, column: 3)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 7163, column: 3)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 7163, column: 3)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 7163, column: 3)
!7441 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 7163, column: 3)
!7442 = !DILocalVariable(name: "scp", arg: 1, scope: !7429, file: !3, line: 7105, type: !4976)
!7443 = !DILocation(line: 7105, column: 45, scope: !7429)
!7444 = !DILocalVariable(name: "shost", scope: !7429, file: !3, line: 7107, type: !4796)
!7445 = !DILocation(line: 7107, column: 20, scope: !7429)
!7446 = !DILocation(line: 7107, column: 28, scope: !7429)
!7447 = !DILocation(line: 7107, column: 33, scope: !7429)
!7448 = !DILocation(line: 7107, column: 41, scope: !7429)
!7449 = !DILocalVariable(name: "boardp", scope: !7429, file: !3, line: 7108, type: !190)
!7450 = !DILocation(line: 7108, column: 20, scope: !7429)
!7451 = !DILocation(line: 7108, column: 40, scope: !7429)
!7452 = !DILocation(line: 7108, column: 29, scope: !7429)
!7453 = !DILocalVariable(name: "flags", scope: !7429, file: !3, line: 7109, type: !189)
!7454 = !DILocation(line: 7109, column: 16, scope: !7429)
!7455 = !DILocalVariable(name: "status", scope: !7429, file: !3, line: 7110, type: !245)
!7456 = !DILocation(line: 7110, column: 6, scope: !7429)
!7457 = !DILocalVariable(name: "ret", scope: !7429, file: !3, line: 7111, type: !245)
!7458 = !DILocation(line: 7111, column: 6, scope: !7429)
!7459 = !DILocation(line: 7115, column: 2, scope: !7429)
!7460 = !DILocation(line: 7117, column: 25, scope: !7429)
!7461 = !DILocation(line: 7117, column: 2, scope: !7429)
!7462 = !DILocation(line: 7119, column: 6, scope: !7433)
!7463 = !DILocation(line: 7119, column: 6, scope: !7429)
!7464 = !DILocalVariable(name: "asc_dvc", scope: !7465, file: !3, line: 7120, type: !6375)
!7465 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 7119, column: 32)
!7466 = !DILocation(line: 7120, column: 16, scope: !7465)
!7467 = !DILocation(line: 7120, column: 27, scope: !7465)
!7468 = !DILocation(line: 7120, column: 35, scope: !7465)
!7469 = !DILocation(line: 7120, column: 43, scope: !7465)
!7470 = !DILocation(line: 7124, column: 33, scope: !7465)
!7471 = !DILocation(line: 7124, column: 12, scope: !7465)
!7472 = !DILocation(line: 7124, column: 10, scope: !7465)
!7473 = !DILocation(line: 7127, column: 7, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 7127, column: 7)
!7475 = !DILocation(line: 7127, column: 16, scope: !7474)
!7476 = !DILocation(line: 7127, column: 25, scope: !7474)
!7477 = !DILocation(line: 7127, column: 29, scope: !7474)
!7478 = !DILocation(line: 7127, column: 38, scope: !7474)
!7479 = !DILocation(line: 7127, column: 7, scope: !7465)
!7480 = !DILocation(line: 7128, column: 27, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 7127, column: 51)
!7482 = !DILocation(line: 7129, column: 33, scope: !7481)
!7483 = !DILocation(line: 7129, column: 42, scope: !7481)
!7484 = !DILocation(line: 7130, column: 9, scope: !7481)
!7485 = !DILocation(line: 7128, column: 4, scope: !7481)
!7486 = !DILocation(line: 7131, column: 8, scope: !7481)
!7487 = !DILocation(line: 7132, column: 3, scope: !7481)
!7488 = !DILocation(line: 7132, column: 14, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 7132, column: 14)
!7490 = !DILocation(line: 7132, column: 14, scope: !7474)
!7491 = !DILocation(line: 7133, column: 27, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 7132, column: 22)
!7493 = !DILocation(line: 7134, column: 19, scope: !7492)
!7494 = !DILocation(line: 7133, column: 4, scope: !7492)
!7495 = !DILocation(line: 7135, column: 3, scope: !7492)
!7496 = !DILocation(line: 7136, column: 27, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 7135, column: 10)
!7498 = !DILocation(line: 7136, column: 4, scope: !7497)
!7499 = !DILocation(line: 7141, column: 2, scope: !7465)
!7500 = !DILocalVariable(name: "adv_dvc", scope: !7432, file: !3, line: 7146, type: !6378)
!7501 = !DILocation(line: 7146, column: 16, scope: !7432)
!7502 = !DILocation(line: 7146, column: 27, scope: !7432)
!7503 = !DILocation(line: 7146, column: 35, scope: !7432)
!7504 = !DILocation(line: 7146, column: 43, scope: !7432)
!7505 = !DILocation(line: 7152, column: 29, scope: !7432)
!7506 = !DILocation(line: 7152, column: 11, scope: !7432)
!7507 = !DILocation(line: 7152, column: 3, scope: !7432)
!7508 = !DILocation(line: 7154, column: 27, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 7152, column: 39)
!7510 = !DILocation(line: 7154, column: 4, scope: !7509)
!7511 = !DILocation(line: 7156, column: 4, scope: !7509)
!7512 = !DILocation(line: 7159, column: 27, scope: !7509)
!7513 = !DILocation(line: 7159, column: 4, scope: !7509)
!7514 = !DILocation(line: 7160, column: 8, scope: !7509)
!7515 = !DILocation(line: 7161, column: 4, scope: !7509)
!7516 = !DILocation(line: 7163, column: 3, scope: !7432)
!7517 = !DILocation(line: 7163, column: 3, scope: !7441)
!7518 = !DILocalVariable(name: "__dummy", scope: !7519, file: !3, line: 7163, type: !189)
!7519 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 7163, column: 3)
!7520 = !DILocation(line: 7163, column: 3, scope: !7519)
!7521 = !DILocalVariable(name: "__dummy2", scope: !7519, file: !3, line: 7163, type: !189)
!7522 = !DILocation(line: 7163, column: 3, scope: !7440)
!7523 = !DILocation(line: 7163, column: 3, scope: !7439)
!7524 = !DILocation(line: 7163, column: 3, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 7163, column: 3)
!7526 = !DILocalVariable(name: "__dummy", scope: !7527, file: !3, line: 7163, type: !189)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 7163, column: 3)
!7528 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 7163, column: 3)
!7529 = !DILocation(line: 7163, column: 3, scope: !7527)
!7530 = !DILocalVariable(name: "__dummy2", scope: !7527, file: !3, line: 7163, type: !189)
!7531 = !DILocation(line: 7163, column: 3, scope: !7528)
!7532 = !DILocation(line: 7163, column: 3, scope: !7438)
!7533 = !{i32 -2140613655}
!7534 = !DILocation(line: 7163, column: 3, scope: !7437)
!7535 = !DILocation(line: 329, column: 10, scope: !7375, inlinedAt: !7436)
!7536 = !DILocation(line: 329, column: 16, scope: !7375, inlinedAt: !7436)
!7537 = !DILocation(line: 7164, column: 10, scope: !7432)
!7538 = !DILocation(line: 7164, column: 3, scope: !7432)
!7539 = !DILocation(line: 7165, column: 26, scope: !7432)
!7540 = !DILocation(line: 7165, column: 33, scope: !7432)
!7541 = !DILocation(line: 7165, column: 44, scope: !7432)
!7542 = !DILocation(line: 409, column: 2, scope: !7412, inlinedAt: !7431)
!7543 = !DILocation(line: 409, column: 2, scope: !7417, inlinedAt: !7431)
!7544 = !DILocation(line: 409, column: 2, scope: !7418, inlinedAt: !7431)
!7545 = !DILocation(line: 409, column: 2, scope: !7425, inlinedAt: !7431)
!7546 = !DILocation(line: 409, column: 2, scope: !7428, inlinedAt: !7431)
!7547 = !DILocation(line: 7170, column: 9, scope: !7429)
!7548 = !DILocation(line: 7170, column: 2, scope: !7429)
!7549 = distinct !DISubprogram(name: "advansys_slave_configure", scope: !3, file: !3, line: 7480, type: !5072, scopeLine: 7481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7550 = !DILocalVariable(name: "sdev", arg: 1, scope: !7549, file: !3, line: 7480, type: !4823)
!7551 = !DILocation(line: 7480, column: 57, scope: !7549)
!7552 = !DILocalVariable(name: "boardp", scope: !7549, file: !3, line: 7482, type: !190)
!7553 = !DILocation(line: 7482, column: 20, scope: !7549)
!7554 = !DILocation(line: 7482, column: 40, scope: !7549)
!7555 = !DILocation(line: 7482, column: 46, scope: !7549)
!7556 = !DILocation(line: 7482, column: 29, scope: !7549)
!7557 = !DILocation(line: 7484, column: 6, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 7484, column: 6)
!7559 = !DILocation(line: 7484, column: 6, scope: !7549)
!7560 = !DILocation(line: 7485, column: 35, scope: !7558)
!7561 = !DILocation(line: 7486, column: 8, scope: !7558)
!7562 = !DILocation(line: 7486, column: 16, scope: !7558)
!7563 = !DILocation(line: 7486, column: 24, scope: !7558)
!7564 = !DILocation(line: 7485, column: 3, scope: !7558)
!7565 = !DILocation(line: 7488, column: 33, scope: !7558)
!7566 = !DILocation(line: 7489, column: 8, scope: !7558)
!7567 = !DILocation(line: 7489, column: 16, scope: !7558)
!7568 = !DILocation(line: 7489, column: 24, scope: !7558)
!7569 = !DILocation(line: 7488, column: 3, scope: !7558)
!7570 = !DILocation(line: 7491, column: 2, scope: !7549)
!7571 = distinct !DISubprogram(name: "advansys_biosparam", scope: !3, file: !3, line: 7185, type: !5109, scopeLine: 7187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7572 = !DILocalVariable(name: "sdev", arg: 1, scope: !7571, file: !3, line: 7185, type: !4823)
!7573 = !DILocation(line: 7185, column: 40, scope: !7571)
!7574 = !DILocalVariable(name: "bdev", arg: 2, scope: !7571, file: !3, line: 7185, type: !2080)
!7575 = !DILocation(line: 7185, column: 67, scope: !7571)
!7576 = !DILocalVariable(name: "capacity", arg: 3, scope: !7571, file: !3, line: 7186, type: !870)
!7577 = !DILocation(line: 7186, column: 15, scope: !7571)
!7578 = !DILocalVariable(name: "ip", arg: 4, scope: !7571, file: !3, line: 7186, type: !695)
!7579 = !DILocation(line: 7186, column: 29, scope: !7571)
!7580 = !DILocalVariable(name: "boardp", scope: !7571, file: !3, line: 7188, type: !190)
!7581 = !DILocation(line: 7188, column: 20, scope: !7571)
!7582 = !DILocation(line: 7188, column: 40, scope: !7571)
!7583 = !DILocation(line: 7188, column: 46, scope: !7571)
!7584 = !DILocation(line: 7188, column: 29, scope: !7571)
!7585 = !DILocation(line: 7191, column: 2, scope: !7571)
!7586 = !DILocation(line: 7192, column: 6, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 7192, column: 6)
!7588 = !DILocation(line: 7192, column: 6, scope: !7571)
!7589 = !DILocation(line: 7193, column: 8, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 7193, column: 7)
!7591 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 7192, column: 32)
!7592 = !DILocation(line: 7193, column: 16, scope: !7590)
!7593 = !DILocation(line: 7193, column: 24, scope: !7590)
!7594 = !DILocation(line: 7193, column: 36, scope: !7590)
!7595 = !DILocation(line: 7193, column: 45, scope: !7590)
!7596 = !DILocation(line: 7194, column: 30, scope: !7590)
!7597 = !DILocation(line: 7194, column: 33, scope: !7590)
!7598 = !DILocation(line: 7194, column: 42, scope: !7590)
!7599 = !DILocation(line: 7193, column: 7, scope: !7591)
!7600 = !DILocation(line: 7195, column: 4, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 7194, column: 54)
!7602 = !DILocation(line: 7195, column: 10, scope: !7601)
!7603 = !DILocation(line: 7196, column: 4, scope: !7601)
!7604 = !DILocation(line: 7196, column: 10, scope: !7601)
!7605 = !DILocation(line: 7197, column: 3, scope: !7601)
!7606 = !DILocation(line: 7198, column: 4, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 7197, column: 10)
!7608 = !DILocation(line: 7198, column: 10, scope: !7607)
!7609 = !DILocation(line: 7199, column: 4, scope: !7607)
!7610 = !DILocation(line: 7199, column: 10, scope: !7607)
!7611 = !DILocation(line: 7201, column: 2, scope: !7591)
!7612 = !DILocation(line: 7202, column: 8, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 7202, column: 7)
!7614 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 7201, column: 9)
!7615 = !DILocation(line: 7202, column: 16, scope: !7613)
!7616 = !DILocation(line: 7202, column: 24, scope: !7613)
!7617 = !DILocation(line: 7202, column: 36, scope: !7613)
!7618 = !DILocation(line: 7202, column: 46, scope: !7613)
!7619 = !DILocation(line: 7203, column: 33, scope: !7613)
!7620 = !DILocation(line: 7203, column: 36, scope: !7613)
!7621 = !DILocation(line: 7203, column: 45, scope: !7613)
!7622 = !DILocation(line: 7202, column: 7, scope: !7614)
!7623 = !DILocation(line: 7204, column: 4, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 7203, column: 57)
!7625 = !DILocation(line: 7204, column: 10, scope: !7624)
!7626 = !DILocation(line: 7205, column: 4, scope: !7624)
!7627 = !DILocation(line: 7205, column: 10, scope: !7624)
!7628 = !DILocation(line: 7206, column: 3, scope: !7624)
!7629 = !DILocation(line: 7207, column: 4, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 7206, column: 10)
!7631 = !DILocation(line: 7207, column: 10, scope: !7630)
!7632 = !DILocation(line: 7208, column: 4, scope: !7630)
!7633 = !DILocation(line: 7208, column: 10, scope: !7630)
!7634 = !DILocation(line: 7211, column: 25, scope: !7571)
!7635 = !DILocation(line: 7211, column: 37, scope: !7571)
!7636 = !DILocation(line: 7211, column: 45, scope: !7571)
!7637 = !DILocation(line: 7211, column: 43, scope: !7571)
!7638 = !DILocation(line: 7211, column: 36, scope: !7571)
!7639 = !DILocation(line: 7211, column: 34, scope: !7571)
!7640 = !DILocation(line: 7211, column: 10, scope: !7571)
!7641 = !DILocation(line: 7211, column: 2, scope: !7571)
!7642 = !DILocation(line: 7211, column: 8, scope: !7571)
!7643 = !DILocation(line: 7213, column: 2, scope: !7571)
!7644 = distinct !DISubprogram(name: "advansys_show_info", scope: !3, file: !3, line: 3589, type: !5114, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7645 = !DILocalVariable(name: "m", arg: 1, scope: !7644, file: !3, line: 3589, type: !701)
!7646 = !DILocation(line: 3589, column: 37, scope: !7644)
!7647 = !DILocalVariable(name: "shost", arg: 2, scope: !7644, file: !3, line: 3589, type: !4796)
!7648 = !DILocation(line: 3589, column: 58, scope: !7644)
!7649 = !DILocalVariable(name: "boardp", scope: !7644, file: !3, line: 3591, type: !190)
!7650 = !DILocation(line: 3591, column: 20, scope: !7644)
!7651 = !DILocation(line: 3591, column: 40, scope: !7644)
!7652 = !DILocation(line: 3591, column: 29, scope: !7644)
!7653 = !DILocation(line: 3605, column: 13, scope: !7644)
!7654 = !DILocation(line: 3605, column: 46, scope: !7644)
!7655 = !DILocation(line: 3605, column: 32, scope: !7644)
!7656 = !DILocation(line: 3605, column: 2, scope: !7644)
!7657 = !DILocation(line: 3609, column: 7, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3609, column: 6)
!7659 = !DILocation(line: 3609, column: 6, scope: !7644)
!7660 = !DILocation(line: 3610, column: 20, scope: !7658)
!7661 = !DILocation(line: 3610, column: 23, scope: !7658)
!7662 = !DILocation(line: 3610, column: 3, scope: !7658)
!7663 = !DILocation(line: 3615, column: 24, scope: !7644)
!7664 = !DILocation(line: 3615, column: 27, scope: !7644)
!7665 = !DILocation(line: 3615, column: 2, scope: !7644)
!7666 = !DILocation(line: 3620, column: 6, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3620, column: 6)
!7668 = !DILocation(line: 3620, column: 6, scope: !7644)
!7669 = !DILocation(line: 3621, column: 28, scope: !7667)
!7670 = !DILocation(line: 3621, column: 31, scope: !7667)
!7671 = !DILocation(line: 3621, column: 3, scope: !7667)
!7672 = !DILocation(line: 3623, column: 28, scope: !7667)
!7673 = !DILocation(line: 3623, column: 31, scope: !7667)
!7674 = !DILocation(line: 3623, column: 3, scope: !7667)
!7675 = !DILocation(line: 3628, column: 22, scope: !7644)
!7676 = !DILocation(line: 3628, column: 25, scope: !7644)
!7677 = !DILocation(line: 3628, column: 2, scope: !7644)
!7678 = !DILocation(line: 3634, column: 22, scope: !7644)
!7679 = !DILocation(line: 3634, column: 25, scope: !7644)
!7680 = !DILocation(line: 3634, column: 2, scope: !7644)
!7681 = !DILocation(line: 3641, column: 6, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3641, column: 6)
!7683 = !DILocation(line: 3641, column: 6, scope: !7644)
!7684 = !DILocation(line: 3642, column: 26, scope: !7682)
!7685 = !DILocation(line: 3642, column: 29, scope: !7682)
!7686 = !DILocation(line: 3642, column: 3, scope: !7682)
!7687 = !DILocation(line: 3644, column: 26, scope: !7682)
!7688 = !DILocation(line: 3644, column: 29, scope: !7682)
!7689 = !DILocation(line: 3644, column: 3, scope: !7682)
!7690 = !DILocation(line: 3645, column: 2, scope: !7644)
!7691 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7692, file: !7692, line: 666, type: !7693, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7692 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!189}
!7695 = !DILocalVariable(name: "f", scope: !7691, file: !7692, line: 668, type: !189)
!7696 = !DILocation(line: 668, column: 16, scope: !7691)
!7697 = !DILocation(line: 670, column: 6, scope: !7691)
!7698 = !DILocation(line: 670, column: 4, scope: !7691)
!7699 = !DILocation(line: 671, column: 2, scope: !7691)
!7700 = !DILocation(line: 672, column: 9, scope: !7691)
!7701 = !DILocation(line: 672, column: 2, scope: !7691)
!7702 = distinct !DISubprogram(name: "advansys_queuecommand_lck", scope: !3, file: !3, line: 8552, type: !7703, scopeLine: 8553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!245, !4976, !5033}
!7705 = !DILocalVariable(name: "scp", arg: 1, scope: !7702, file: !3, line: 8552, type: !4976)
!7706 = !DILocation(line: 8552, column: 45, scope: !7702)
!7707 = !DILocalVariable(name: "done", arg: 2, scope: !7702, file: !3, line: 8552, type: !5033)
!7708 = !DILocation(line: 8552, column: 57, scope: !7702)
!7709 = !DILocalVariable(name: "shost", scope: !7702, file: !3, line: 8554, type: !4796)
!7710 = !DILocation(line: 8554, column: 20, scope: !7702)
!7711 = !DILocation(line: 8554, column: 28, scope: !7702)
!7712 = !DILocation(line: 8554, column: 33, scope: !7702)
!7713 = !DILocation(line: 8554, column: 41, scope: !7702)
!7714 = !DILocalVariable(name: "asc_res", scope: !7702, file: !3, line: 8555, type: !245)
!7715 = !DILocation(line: 8555, column: 6, scope: !7702)
!7716 = !DILocalVariable(name: "result", scope: !7702, file: !3, line: 8555, type: !245)
!7717 = !DILocation(line: 8555, column: 15, scope: !7702)
!7718 = !DILocation(line: 8557, column: 2, scope: !7702)
!7719 = !DILocation(line: 8558, column: 19, scope: !7702)
!7720 = !DILocation(line: 8558, column: 2, scope: !7702)
!7721 = !DILocation(line: 8558, column: 7, scope: !7702)
!7722 = !DILocation(line: 8558, column: 17, scope: !7702)
!7723 = !DILocation(line: 8560, column: 34, scope: !7702)
!7724 = !DILocation(line: 8560, column: 12, scope: !7702)
!7725 = !DILocation(line: 8560, column: 10, scope: !7702)
!7726 = !DILocation(line: 8562, column: 10, scope: !7702)
!7727 = !DILocation(line: 8562, column: 2, scope: !7702)
!7728 = !DILocation(line: 8564, column: 3, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 8562, column: 19)
!7730 = !DILocation(line: 8566, column: 10, scope: !7729)
!7731 = !DILocation(line: 8567, column: 3, scope: !7729)
!7732 = !DILocation(line: 8570, column: 17, scope: !7729)
!7733 = !DILocation(line: 8570, column: 3, scope: !7729)
!7734 = !DILocation(line: 8571, column: 3, scope: !7729)
!7735 = !DILocation(line: 8574, column: 9, scope: !7702)
!7736 = !DILocation(line: 8574, column: 2, scope: !7702)
!7737 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7692, file: !7692, line: 646, type: !7693, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7738 = !DILocalVariable(name: "__ret", scope: !7739, file: !7692, line: 648, type: !189)
!7739 = distinct !DILexicalBlock(scope: !7737, file: !7692, line: 648, column: 9)
!7740 = !DILocation(line: 648, column: 9, scope: !7739)
!7741 = !DILocalVariable(name: "__edi", scope: !7739, file: !7692, line: 648, type: !189)
!7742 = !DILocalVariable(name: "__esi", scope: !7739, file: !7692, line: 648, type: !189)
!7743 = !DILocalVariable(name: "__edx", scope: !7739, file: !7692, line: 648, type: !189)
!7744 = !DILocalVariable(name: "__ecx", scope: !7739, file: !7692, line: 648, type: !189)
!7745 = !DILocalVariable(name: "__eax", scope: !7739, file: !7692, line: 648, type: !189)
!7746 = !DILocation(line: 648, column: 9, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7692, line: 648, column: 9)
!7748 = distinct !DILexicalBlock(scope: !7739, file: !7692, line: 648, column: 9)
!7749 = !{i32 -2145437547, i32 -2145435232, i32 -2145434998, i32 -2145434947, i32 -2145434919, i32 -2145434894, i32 -2145435210, i32 -2145435197, i32 -2145434759, i32 -2145434640, i32 -2145435105, i32 -2145435078, i32 -2145435050, i32 -2145435020}
!7750 = !DILocalVariable(name: "__mask", scope: !7751, file: !7692, line: 648, type: !189)
!7751 = distinct !DILexicalBlock(scope: !7747, file: !7692, line: 648, column: 9)
!7752 = !DILocation(line: 648, column: 9, scope: !7751)
!7753 = !DILocation(line: 648, column: 9, scope: !7748)
!7754 = !DILocation(line: 648, column: 2, scope: !7737)
!7755 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7692, file: !7692, line: 656, type: !1931, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7756 = !DILocalVariable(name: "__edi", scope: !7757, file: !7692, line: 658, type: !189)
!7757 = distinct !DILexicalBlock(scope: !7755, file: !7692, line: 658, column: 2)
!7758 = !DILocation(line: 658, column: 2, scope: !7757)
!7759 = !DILocalVariable(name: "__esi", scope: !7757, file: !7692, line: 658, type: !189)
!7760 = !DILocalVariable(name: "__edx", scope: !7757, file: !7692, line: 658, type: !189)
!7761 = !DILocalVariable(name: "__ecx", scope: !7757, file: !7692, line: 658, type: !189)
!7762 = !DILocalVariable(name: "__eax", scope: !7757, file: !7692, line: 658, type: !189)
!7763 = !{i32 -2145430453, i32 -2145429721, i32 -2145429487, i32 -2145429436, i32 -2145429408, i32 -2145429383, i32 -2145429699, i32 -2145429686, i32 -2145429248, i32 -2145429129, i32 -2145429594, i32 -2145429567, i32 -2145429539, i32 -2145429509}
!7764 = !DILocation(line: 659, column: 1, scope: !7755)
!7765 = distinct !DISubprogram(name: "asc_execute_scsi_cmnd", scope: !3, file: !3, line: 8465, type: !5064, scopeLine: 8466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7766 = !DILocalVariable(name: "scp", arg: 1, scope: !7765, file: !3, line: 8465, type: !4976)
!7767 = !DILocation(line: 8465, column: 52, scope: !7765)
!7768 = !DILocalVariable(name: "ret", scope: !7765, file: !3, line: 8467, type: !245)
!7769 = !DILocation(line: 8467, column: 6, scope: !7765)
!7770 = !DILocalVariable(name: "err_code", scope: !7765, file: !3, line: 8467, type: !245)
!7771 = !DILocation(line: 8467, column: 11, scope: !7765)
!7772 = !DILocalVariable(name: "boardp", scope: !7765, file: !3, line: 8468, type: !190)
!7773 = !DILocation(line: 8468, column: 20, scope: !7765)
!7774 = !DILocation(line: 8468, column: 40, scope: !7765)
!7775 = !DILocation(line: 8468, column: 45, scope: !7765)
!7776 = !DILocation(line: 8468, column: 53, scope: !7765)
!7777 = !DILocation(line: 8468, column: 29, scope: !7765)
!7778 = !DILocation(line: 8472, column: 6, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 8472, column: 6)
!7780 = !DILocation(line: 8472, column: 6, scope: !7765)
!7781 = !DILocalVariable(name: "asc_dvc", scope: !7782, file: !3, line: 8473, type: !6375)
!7782 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 8472, column: 32)
!7783 = !DILocation(line: 8473, column: 16, scope: !7782)
!7784 = !DILocation(line: 8473, column: 27, scope: !7782)
!7785 = !DILocation(line: 8473, column: 35, scope: !7782)
!7786 = !DILocation(line: 8473, column: 43, scope: !7782)
!7787 = !DILocalVariable(name: "asc_scsi_q", scope: !7782, file: !3, line: 8474, type: !5269)
!7788 = !DILocation(line: 8474, column: 21, scope: !7782)
!7789 = !DILocation(line: 8476, column: 23, scope: !7782)
!7790 = !DILocation(line: 8476, column: 31, scope: !7782)
!7791 = !DILocation(line: 8476, column: 9, scope: !7782)
!7792 = !DILocation(line: 8476, column: 7, scope: !7782)
!7793 = !DILocation(line: 8477, column: 7, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 8477, column: 7)
!7795 = !DILocation(line: 8477, column: 11, scope: !7794)
!7796 = !DILocation(line: 8477, column: 7, scope: !7782)
!7797 = !DILocation(line: 8478, column: 4, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 8477, column: 27)
!7799 = !DILocation(line: 8479, column: 11, scope: !7798)
!7800 = !DILocation(line: 8479, column: 4, scope: !7798)
!7801 = !DILocation(line: 8482, column: 25, scope: !7782)
!7802 = !DILocation(line: 8482, column: 9, scope: !7782)
!7803 = !DILocation(line: 8482, column: 7, scope: !7782)
!7804 = !DILocation(line: 8483, column: 20, scope: !7782)
!7805 = !DILocation(line: 8483, column: 9, scope: !7782)
!7806 = !DILocation(line: 8483, column: 3, scope: !7782)
!7807 = !DILocation(line: 8484, column: 14, scope: !7782)
!7808 = !DILocation(line: 8484, column: 23, scope: !7782)
!7809 = !DILocation(line: 8484, column: 12, scope: !7782)
!7810 = !DILocation(line: 8485, column: 2, scope: !7782)
!7811 = !DILocalVariable(name: "adv_dvc", scope: !7812, file: !3, line: 8486, type: !6378)
!7812 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 8485, column: 9)
!7813 = !DILocation(line: 8486, column: 16, scope: !7812)
!7814 = !DILocation(line: 8486, column: 27, scope: !7812)
!7815 = !DILocation(line: 8486, column: 35, scope: !7812)
!7816 = !DILocation(line: 8486, column: 43, scope: !7812)
!7817 = !DILocalVariable(name: "adv_reqp", scope: !7812, file: !3, line: 8487, type: !5630)
!7818 = !DILocation(line: 8487, column: 14, scope: !7812)
!7819 = !DILocation(line: 8489, column: 25, scope: !7812)
!7820 = !DILocation(line: 8489, column: 33, scope: !7812)
!7821 = !DILocation(line: 8489, column: 11, scope: !7812)
!7822 = !DILocation(line: 8489, column: 3, scope: !7812)
!7823 = !DILocation(line: 8492, column: 4, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 8489, column: 50)
!7825 = !DILocation(line: 8501, column: 4, scope: !7824)
!7826 = !DILocation(line: 8505, column: 4, scope: !7824)
!7827 = !DILocation(line: 8506, column: 4, scope: !7824)
!7828 = !DILocation(line: 8509, column: 25, scope: !7812)
!7829 = !DILocation(line: 8509, column: 34, scope: !7812)
!7830 = !DILocation(line: 8509, column: 9, scope: !7812)
!7831 = !DILocation(line: 8509, column: 7, scope: !7812)
!7832 = !DILocation(line: 8510, column: 14, scope: !7812)
!7833 = !DILocation(line: 8510, column: 23, scope: !7812)
!7834 = !DILocation(line: 8510, column: 12, scope: !7812)
!7835 = !DILocation(line: 8513, column: 10, scope: !7765)
!7836 = !DILocation(line: 8513, column: 2, scope: !7765)
!7837 = !DILocation(line: 8515, column: 3, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 8513, column: 15)
!7839 = !DILocation(line: 8520, column: 3, scope: !7838)
!7840 = !DILocation(line: 8520, column: 11, scope: !7838)
!7841 = !DILocation(line: 8520, column: 18, scope: !7838)
!7842 = !DILocation(line: 8520, column: 23, scope: !7838)
!7843 = !DILocation(line: 8520, column: 31, scope: !7838)
!7844 = !DILocation(line: 8520, column: 34, scope: !7838)
!7845 = !DILocation(line: 8522, column: 3, scope: !7838)
!7846 = !DILocation(line: 8525, column: 3, scope: !7838)
!7847 = !DILocation(line: 8526, column: 3, scope: !7838)
!7848 = !DILocation(line: 8528, column: 25, scope: !7838)
!7849 = !DILocation(line: 8529, column: 23, scope: !7838)
!7850 = !DILocation(line: 8528, column: 3, scope: !7838)
!7851 = !DILocation(line: 8530, column: 3, scope: !7838)
!7852 = !DILocation(line: 8531, column: 3, scope: !7838)
!7853 = !DILocation(line: 8531, column: 8, scope: !7838)
!7854 = !DILocation(line: 8531, column: 15, scope: !7838)
!7855 = !DILocation(line: 8532, column: 3, scope: !7838)
!7856 = !DILocation(line: 8534, column: 25, scope: !7838)
!7857 = !DILocation(line: 8535, column: 23, scope: !7838)
!7858 = !DILocation(line: 8534, column: 3, scope: !7838)
!7859 = !DILocation(line: 8536, column: 3, scope: !7838)
!7860 = !DILocation(line: 8537, column: 3, scope: !7838)
!7861 = !DILocation(line: 8537, column: 8, scope: !7838)
!7862 = !DILocation(line: 8537, column: 15, scope: !7838)
!7863 = !DILocation(line: 8538, column: 3, scope: !7838)
!7864 = !DILocation(line: 8542, column: 9, scope: !7765)
!7865 = !DILocation(line: 8542, column: 2, scope: !7765)
!7866 = !DILocation(line: 8543, column: 1, scope: !7765)
!7867 = distinct !DISubprogram(name: "asc_scsi_done", scope: !3, file: !3, line: 3649, type: !5034, scopeLine: 3650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7868 = !DILocalVariable(name: "scp", arg: 1, scope: !7867, file: !3, line: 3649, type: !4976)
!7869 = !DILocation(line: 3649, column: 45, scope: !7867)
!7870 = !DILocation(line: 3651, column: 17, scope: !7867)
!7871 = !DILocation(line: 3651, column: 2, scope: !7867)
!7872 = !DILocation(line: 3652, column: 2, scope: !7867)
!7873 = !DILocation(line: 3653, column: 2, scope: !7867)
!7874 = !DILocation(line: 3653, column: 7, scope: !7867)
!7875 = !DILocation(line: 3653, column: 17, scope: !7867)
!7876 = !DILocation(line: 3654, column: 1, scope: !7867)
!7877 = distinct !DISubprogram(name: "asc_build_req", scope: !3, file: !3, line: 7508, type: !7878, scopeLine: 7510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!245, !190, !4976, !7880}
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5269, size: 64)
!7881 = !DILocalVariable(name: "boardp", arg: 1, scope: !7877, file: !3, line: 7508, type: !190)
!7882 = !DILocation(line: 7508, column: 44, scope: !7877)
!7883 = !DILocalVariable(name: "scp", arg: 2, scope: !7877, file: !3, line: 7508, type: !4976)
!7884 = !DILocation(line: 7508, column: 70, scope: !7877)
!7885 = !DILocalVariable(name: "asc_scsi_q", arg: 3, scope: !7877, file: !3, line: 7509, type: !7880)
!7886 = !DILocation(line: 7509, column: 23, scope: !7877)
!7887 = !DILocalVariable(name: "asc_dvc", scope: !7877, file: !3, line: 7511, type: !7888)
!7888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!7889 = !DILocation(line: 7511, column: 22, scope: !7877)
!7890 = !DILocation(line: 7511, column: 33, scope: !7877)
!7891 = !DILocation(line: 7511, column: 41, scope: !7877)
!7892 = !DILocation(line: 7511, column: 49, scope: !7877)
!7893 = !DILocalVariable(name: "use_sg", scope: !7877, file: !3, line: 7512, type: !245)
!7894 = !DILocation(line: 7512, column: 6, scope: !7877)
!7895 = !DILocalVariable(name: "srb_tag", scope: !7877, file: !3, line: 7513, type: !402)
!7896 = !DILocation(line: 7513, column: 6, scope: !7877)
!7897 = !DILocation(line: 7515, column: 9, scope: !7877)
!7898 = !DILocation(line: 7515, column: 2, scope: !7877)
!7899 = !DILocation(line: 7521, column: 12, scope: !7877)
!7900 = !DILocation(line: 7521, column: 17, scope: !7877)
!7901 = !DILocation(line: 7521, column: 26, scope: !7877)
!7902 = !DILocation(line: 7521, column: 30, scope: !7877)
!7903 = !DILocation(line: 7521, column: 10, scope: !7877)
!7904 = !DILocation(line: 7522, column: 27, scope: !7877)
!7905 = !DILocation(line: 7522, column: 2, scope: !7877)
!7906 = !DILocation(line: 7522, column: 14, scope: !7877)
!7907 = !DILocation(line: 7522, column: 17, scope: !7877)
!7908 = !DILocation(line: 7522, column: 25, scope: !7877)
!7909 = !DILocation(line: 7527, column: 24, scope: !7877)
!7910 = !DILocation(line: 7527, column: 29, scope: !7877)
!7911 = !DILocation(line: 7527, column: 2, scope: !7877)
!7912 = !DILocation(line: 7527, column: 14, scope: !7877)
!7913 = !DILocation(line: 7527, column: 21, scope: !7877)
!7914 = !DILocation(line: 7528, column: 27, scope: !7877)
!7915 = !DILocation(line: 7528, column: 32, scope: !7877)
!7916 = !DILocation(line: 7528, column: 2, scope: !7877)
!7917 = !DILocation(line: 7528, column: 14, scope: !7877)
!7918 = !DILocation(line: 7528, column: 17, scope: !7877)
!7919 = !DILocation(line: 7528, column: 25, scope: !7877)
!7920 = !DILocation(line: 7529, column: 29, scope: !7877)
!7921 = !DILocation(line: 7529, column: 2, scope: !7877)
!7922 = !DILocation(line: 7529, column: 14, scope: !7877)
!7923 = !DILocation(line: 7529, column: 17, scope: !7877)
!7924 = !DILocation(line: 7529, column: 27, scope: !7877)
!7925 = !DILocation(line: 7530, column: 30, scope: !7877)
!7926 = !DILocation(line: 7530, column: 35, scope: !7877)
!7927 = !DILocation(line: 7530, column: 43, scope: !7877)
!7928 = !DILocation(line: 7530, column: 2, scope: !7877)
!7929 = !DILocation(line: 7530, column: 14, scope: !7877)
!7930 = !DILocation(line: 7530, column: 17, scope: !7877)
!7931 = !DILocation(line: 7530, column: 28, scope: !7877)
!7932 = !DILocation(line: 7532, column: 6, scope: !7877)
!7933 = !DILocation(line: 7531, column: 2, scope: !7877)
!7934 = !DILocation(line: 7531, column: 14, scope: !7877)
!7935 = !DILocation(line: 7531, column: 17, scope: !7877)
!7936 = !DILocation(line: 7531, column: 27, scope: !7877)
!7937 = !DILocation(line: 7533, column: 55, scope: !7877)
!7938 = !DILocation(line: 7533, column: 30, scope: !7877)
!7939 = !DILocation(line: 7533, column: 2, scope: !7877)
!7940 = !DILocation(line: 7533, column: 14, scope: !7877)
!7941 = !DILocation(line: 7533, column: 17, scope: !7877)
!7942 = !DILocation(line: 7533, column: 28, scope: !7877)
!7943 = !DILocation(line: 7534, column: 2, scope: !7877)
!7944 = !DILocation(line: 7534, column: 14, scope: !7877)
!7945 = !DILocation(line: 7534, column: 17, scope: !7877)
!7946 = !DILocation(line: 7534, column: 27, scope: !7877)
!7947 = !DILocation(line: 7535, column: 7, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 7535, column: 6)
!7949 = !DILocation(line: 7535, column: 19, scope: !7948)
!7950 = !DILocation(line: 7535, column: 22, scope: !7948)
!7951 = !DILocation(line: 7535, column: 6, scope: !7877)
!7952 = !DILocation(line: 7536, column: 3, scope: !7948)
!7953 = !DILocation(line: 7549, column: 7, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 7549, column: 6)
!7955 = !DILocation(line: 7549, column: 16, scope: !7954)
!7956 = !DILocation(line: 7549, column: 28, scope: !7954)
!7957 = !DILocation(line: 7549, column: 33, scope: !7954)
!7958 = !DILocation(line: 7549, column: 41, scope: !7954)
!7959 = !DILocation(line: 7549, column: 45, scope: !7954)
!7960 = !DILocation(line: 7549, column: 50, scope: !7954)
!7961 = !DILocation(line: 7550, column: 7, scope: !7954)
!7962 = !DILocation(line: 7550, column: 15, scope: !7954)
!7963 = !DILocation(line: 7550, column: 22, scope: !7954)
!7964 = !DILocation(line: 7550, column: 27, scope: !7954)
!7965 = !DILocation(line: 7550, column: 35, scope: !7954)
!7966 = !DILocation(line: 7550, column: 39, scope: !7954)
!7967 = !DILocation(line: 7550, column: 46, scope: !7954)
!7968 = !DILocation(line: 7549, column: 6, scope: !7877)
!7969 = !DILocation(line: 7551, column: 3, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 7550, column: 52)
!7971 = !DILocation(line: 7551, column: 15, scope: !7970)
!7972 = !DILocation(line: 7551, column: 18, scope: !7970)
!7973 = !DILocation(line: 7551, column: 27, scope: !7970)
!7974 = !DILocation(line: 7552, column: 2, scope: !7970)
!7975 = !DILocation(line: 7553, column: 3, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 7552, column: 9)
!7977 = !DILocation(line: 7553, column: 15, scope: !7976)
!7978 = !DILocation(line: 7553, column: 18, scope: !7976)
!7979 = !DILocation(line: 7553, column: 27, scope: !7976)
!7980 = !DILocation(line: 7557, column: 24, scope: !7877)
!7981 = !DILocation(line: 7557, column: 11, scope: !7877)
!7982 = !DILocation(line: 7557, column: 9, scope: !7877)
!7983 = !DILocation(line: 7558, column: 6, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 7558, column: 6)
!7985 = !DILocation(line: 7558, column: 13, scope: !7984)
!7986 = !DILocation(line: 7558, column: 6, scope: !7877)
!7987 = !DILocation(line: 7560, column: 3, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 7558, column: 18)
!7989 = !DILocation(line: 7561, column: 13, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 7561, column: 13)
!7991 = !DILocation(line: 7561, column: 20, scope: !7990)
!7992 = !DILocation(line: 7561, column: 13, scope: !7984)
!7993 = !DILocalVariable(name: "sgcnt", scope: !7994, file: !3, line: 7562, type: !245)
!7994 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 7561, column: 25)
!7995 = !DILocation(line: 7562, column: 7, scope: !7994)
!7996 = !DILocalVariable(name: "slp", scope: !7994, file: !3, line: 7563, type: !5015)
!7997 = !DILocation(line: 7563, column: 23, scope: !7994)
!7998 = !DILocalVariable(name: "asc_sg_head", scope: !7994, file: !3, line: 7564, type: !7999)
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5301, size: 64)
!8000 = !DILocation(line: 7564, column: 23, scope: !7994)
!8001 = !DILocation(line: 7566, column: 7, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 7566, column: 7)
!8003 = !DILocation(line: 7566, column: 16, scope: !8002)
!8004 = !DILocation(line: 7566, column: 21, scope: !8002)
!8005 = !DILocation(line: 7566, column: 29, scope: !8002)
!8006 = !DILocation(line: 7566, column: 35, scope: !8002)
!8007 = !DILocation(line: 7566, column: 14, scope: !8002)
!8008 = !DILocation(line: 7566, column: 7, scope: !7994)
!8009 = !DILocation(line: 7567, column: 26, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 7566, column: 49)
!8011 = !DILocation(line: 7568, column: 26, scope: !8010)
!8012 = !DILocation(line: 7569, column: 5, scope: !8010)
!8013 = !DILocation(line: 7569, column: 10, scope: !8010)
!8014 = !DILocation(line: 7569, column: 18, scope: !8010)
!8015 = !DILocation(line: 7569, column: 24, scope: !8010)
!8016 = !DILocation(line: 7567, column: 4, scope: !8010)
!8017 = !DILocation(line: 7570, column: 19, scope: !8010)
!8018 = !DILocation(line: 7570, column: 4, scope: !8010)
!8019 = !DILocation(line: 7571, column: 4, scope: !8010)
!8020 = !DILocation(line: 7571, column: 9, scope: !8010)
!8021 = !DILocation(line: 7571, column: 16, scope: !8010)
!8022 = !DILocation(line: 7572, column: 4, scope: !8010)
!8023 = !DILocation(line: 7576, column: 4, scope: !7994)
!8024 = !DILocation(line: 7576, column: 11, scope: !7994)
!8025 = !DILocation(line: 7575, column: 53, scope: !7994)
!8026 = !DILocation(line: 7575, column: 17, scope: !7994)
!8027 = !DILocation(line: 7575, column: 15, scope: !7994)
!8028 = !DILocation(line: 7577, column: 8, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 7577, column: 7)
!8030 = !DILocation(line: 7577, column: 7, scope: !7994)
!8031 = !DILocation(line: 7578, column: 19, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 7577, column: 21)
!8033 = !DILocation(line: 7578, column: 4, scope: !8032)
!8034 = !DILocation(line: 7579, column: 4, scope: !8032)
!8035 = !DILocation(line: 7579, column: 9, scope: !8032)
!8036 = !DILocation(line: 7579, column: 16, scope: !8032)
!8037 = !DILocation(line: 7580, column: 4, scope: !8032)
!8038 = !DILocation(line: 7583, column: 3, scope: !7994)
!8039 = !DILocation(line: 7583, column: 15, scope: !7994)
!8040 = !DILocation(line: 7583, column: 18, scope: !7994)
!8041 = !DILocation(line: 7583, column: 23, scope: !7994)
!8042 = !DILocation(line: 7584, column: 25, scope: !7994)
!8043 = !DILocation(line: 7584, column: 3, scope: !7994)
!8044 = !DILocation(line: 7584, column: 15, scope: !7994)
!8045 = !DILocation(line: 7584, column: 23, scope: !7994)
!8046 = !DILocation(line: 7585, column: 3, scope: !7994)
!8047 = !DILocation(line: 7585, column: 15, scope: !7994)
!8048 = !DILocation(line: 7585, column: 18, scope: !7994)
!8049 = !DILocation(line: 7585, column: 27, scope: !7994)
!8050 = !DILocation(line: 7586, column: 3, scope: !7994)
!8051 = !DILocation(line: 7586, column: 15, scope: !7994)
!8052 = !DILocation(line: 7586, column: 18, scope: !7994)
!8053 = !DILocation(line: 7586, column: 28, scope: !7994)
!8054 = !DILocation(line: 7588, column: 58, scope: !7994)
!8055 = !DILocation(line: 7588, column: 28, scope: !7994)
!8056 = !DILocation(line: 7588, column: 40, scope: !7994)
!8057 = !DILocation(line: 7588, column: 43, scope: !7994)
!8058 = !DILocation(line: 7588, column: 56, scope: !7994)
!8059 = !DILocation(line: 7588, column: 3, scope: !7994)
!8060 = !DILocation(line: 7588, column: 16, scope: !7994)
!8061 = !DILocation(line: 7588, column: 26, scope: !7994)
!8062 = !DILocation(line: 7589, column: 3, scope: !7994)
!8063 = !DILocation(line: 7595, column: 3, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 7595, column: 3)
!8065 = !DILocation(line: 7595, column: 3, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 7595, column: 3)
!8067 = !DILocation(line: 7597, column: 8, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 7595, column: 45)
!8069 = !DILocation(line: 7596, column: 4, scope: !8068)
!8070 = !DILocation(line: 7596, column: 17, scope: !8068)
!8071 = !DILocation(line: 7596, column: 25, scope: !8068)
!8072 = !DILocation(line: 7596, column: 32, scope: !8068)
!8073 = !DILocation(line: 7596, column: 37, scope: !8068)
!8074 = !DILocation(line: 7599, column: 8, scope: !8068)
!8075 = !DILocation(line: 7598, column: 4, scope: !8068)
!8076 = !DILocation(line: 7598, column: 17, scope: !8068)
!8077 = !DILocation(line: 7598, column: 25, scope: !8068)
!8078 = !DILocation(line: 7598, column: 32, scope: !8068)
!8079 = !DILocation(line: 7598, column: 38, scope: !8068)
!8080 = !DILocation(line: 7600, column: 4, scope: !8068)
!8081 = !DILocation(line: 7602, column: 3, scope: !8068)
!8082 = distinct !{!8082, !8063, !8083}
!8083 = !DILocation(line: 7602, column: 3, scope: !8064)
!8084 = !DILocation(line: 7603, column: 2, scope: !7994)
!8085 = !DILocation(line: 7605, column: 2, scope: !7877)
!8086 = !DILocation(line: 7610, column: 2, scope: !7877)
!8087 = !DILocation(line: 7611, column: 1, scope: !7877)
!8088 = distinct !DISubprogram(name: "AscExeScsiQueue", scope: !3, file: !3, line: 8152, type: !8089, scopeLine: 8153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8089 = !DISubroutineType(types: !8090)
!8090 = !{!245, !6375, !5267}
!8091 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !8088, file: !3, line: 8152, type: !6375)
!8092 = !DILocation(line: 8152, column: 41, scope: !8088)
!8093 = !DILocalVariable(name: "scsiq", arg: 2, scope: !8088, file: !3, line: 8152, type: !5267)
!8094 = !DILocation(line: 8152, column: 62, scope: !8088)
!8095 = !DILocalVariable(name: "iop_base", scope: !8088, file: !3, line: 8154, type: !7)
!8096 = !DILocation(line: 8154, column: 11, scope: !8088)
!8097 = !DILocalVariable(name: "sta", scope: !8088, file: !3, line: 8155, type: !245)
!8098 = !DILocation(line: 8155, column: 6, scope: !8088)
!8099 = !DILocalVariable(name: "n_q_required", scope: !8088, file: !3, line: 8156, type: !245)
!8100 = !DILocation(line: 8156, column: 6, scope: !8088)
!8101 = !DILocalVariable(name: "disable_syn_offset_one_fix", scope: !8088, file: !3, line: 8157, type: !477)
!8102 = !DILocation(line: 8157, column: 7, scope: !8088)
!8103 = !DILocalVariable(name: "i", scope: !8088, file: !3, line: 8158, type: !245)
!8104 = !DILocation(line: 8158, column: 6, scope: !8088)
!8105 = !DILocalVariable(name: "addr", scope: !8088, file: !3, line: 8159, type: !402)
!8106 = !DILocation(line: 8159, column: 6, scope: !8088)
!8107 = !DILocalVariable(name: "sg_entry_cnt", scope: !8088, file: !3, line: 8160, type: !5240)
!8108 = !DILocation(line: 8160, column: 9, scope: !8088)
!8109 = !DILocalVariable(name: "sg_entry_cnt_minus_one", scope: !8088, file: !3, line: 8161, type: !5240)
!8110 = !DILocation(line: 8161, column: 9, scope: !8088)
!8111 = !DILocalVariable(name: "target_ix", scope: !8088, file: !3, line: 8162, type: !5245)
!8112 = !DILocation(line: 8162, column: 8, scope: !8088)
!8113 = !DILocalVariable(name: "tid_no", scope: !8088, file: !3, line: 8163, type: !5245)
!8114 = !DILocation(line: 8163, column: 8, scope: !8088)
!8115 = !DILocalVariable(name: "sdtr_data", scope: !8088, file: !3, line: 8164, type: !5245)
!8116 = !DILocation(line: 8164, column: 8, scope: !8088)
!8117 = !DILocalVariable(name: "extra_bytes", scope: !8088, file: !3, line: 8165, type: !5245)
!8118 = !DILocation(line: 8165, column: 8, scope: !8088)
!8119 = !DILocalVariable(name: "scsi_cmd", scope: !8088, file: !3, line: 8166, type: !5245)
!8120 = !DILocation(line: 8166, column: 8, scope: !8088)
!8121 = !DILocalVariable(name: "disable_cmd", scope: !8088, file: !3, line: 8167, type: !5245)
!8122 = !DILocation(line: 8167, column: 8, scope: !8088)
!8123 = !DILocalVariable(name: "sg_head", scope: !8088, file: !3, line: 8168, type: !5299)
!8124 = !DILocation(line: 8168, column: 15, scope: !8088)
!8125 = !DILocalVariable(name: "data_cnt", scope: !8088, file: !3, line: 8169, type: !189)
!8126 = !DILocation(line: 8169, column: 16, scope: !8088)
!8127 = !DILocation(line: 8171, column: 13, scope: !8088)
!8128 = !DILocation(line: 8171, column: 22, scope: !8088)
!8129 = !DILocation(line: 8171, column: 11, scope: !8088)
!8130 = !DILocation(line: 8172, column: 12, scope: !8088)
!8131 = !DILocation(line: 8172, column: 19, scope: !8088)
!8132 = !DILocation(line: 8172, column: 10, scope: !8088)
!8133 = !DILocation(line: 8173, column: 6, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8173, column: 6)
!8135 = !DILocation(line: 8173, column: 15, scope: !8134)
!8136 = !DILocation(line: 8173, column: 24, scope: !8134)
!8137 = !DILocation(line: 8173, column: 6, scope: !8088)
!8138 = !DILocation(line: 8174, column: 3, scope: !8134)
!8139 = !DILocation(line: 8175, column: 2, scope: !8088)
!8140 = !DILocation(line: 8175, column: 9, scope: !8088)
!8141 = !DILocation(line: 8175, column: 12, scope: !8088)
!8142 = !DILocation(line: 8175, column: 17, scope: !8088)
!8143 = !DILocation(line: 8176, column: 7, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8176, column: 6)
!8145 = !DILocation(line: 8176, column: 14, scope: !8144)
!8146 = !DILocation(line: 8176, column: 17, scope: !8144)
!8147 = !DILocation(line: 8176, column: 26, scope: !8144)
!8148 = !DILocation(line: 8176, column: 54, scope: !8144)
!8149 = !DILocation(line: 8176, column: 6, scope: !8088)
!8150 = !DILocation(line: 8177, column: 3, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 8176, column: 60)
!8152 = !DILocation(line: 8177, column: 10, scope: !8151)
!8153 = !DILocation(line: 8177, column: 13, scope: !8151)
!8154 = !DILocation(line: 8177, column: 25, scope: !8151)
!8155 = !DILocation(line: 8178, column: 2, scope: !8151)
!8156 = !DILocation(line: 8179, column: 6, scope: !8088)
!8157 = !DILocation(line: 8180, column: 14, scope: !8088)
!8158 = !DILocation(line: 8180, column: 21, scope: !8088)
!8159 = !DILocation(line: 8180, column: 24, scope: !8088)
!8160 = !DILocation(line: 8180, column: 12, scope: !8088)
!8161 = !DILocation(line: 8181, column: 11, scope: !8088)
!8162 = !DILocation(line: 8181, column: 9, scope: !8088)
!8163 = !DILocation(line: 8182, column: 15, scope: !8088)
!8164 = !DILocation(line: 8183, column: 6, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8183, column: 6)
!8166 = !DILocation(line: 8183, column: 13, scope: !8165)
!8167 = !DILocation(line: 8183, column: 23, scope: !8165)
!8168 = !DILocation(line: 8183, column: 6, scope: !8088)
!8169 = !DILocation(line: 8184, column: 8, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 8184, column: 7)
!8171 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 8183, column: 41)
!8172 = !DILocation(line: 8184, column: 17, scope: !8170)
!8173 = !DILocation(line: 8184, column: 29, scope: !8170)
!8174 = !DILocation(line: 8184, column: 36, scope: !8170)
!8175 = !DILocation(line: 8184, column: 39, scope: !8170)
!8176 = !DILocation(line: 8184, column: 27, scope: !8170)
!8177 = !DILocation(line: 8184, column: 50, scope: !8170)
!8178 = !DILocation(line: 8184, column: 7, scope: !8171)
!8179 = !DILocation(line: 8185, column: 27, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 8184, column: 56)
!8181 = !DILocation(line: 8185, column: 34, scope: !8180)
!8182 = !DILocation(line: 8185, column: 37, scope: !8180)
!8183 = !DILocation(line: 8185, column: 26, scope: !8180)
!8184 = !DILocation(line: 8185, column: 4, scope: !8180)
!8185 = !DILocation(line: 8185, column: 13, scope: !8180)
!8186 = !DILocation(line: 8185, column: 23, scope: !8180)
!8187 = !DILocation(line: 8186, column: 16, scope: !8180)
!8188 = !DILocation(line: 8186, column: 14, scope: !8180)
!8189 = !DILocation(line: 8187, column: 18, scope: !8180)
!8190 = !DILocation(line: 8188, column: 11, scope: !8180)
!8191 = !DILocation(line: 8189, column: 11, scope: !8180)
!8192 = !DILocation(line: 8189, column: 28, scope: !8180)
!8193 = !DILocation(line: 8189, column: 38, scope: !8180)
!8194 = !DILocation(line: 8190, column: 21, scope: !8180)
!8195 = !DILocation(line: 8191, column: 14, scope: !8180)
!8196 = !DILocation(line: 8191, column: 29, scope: !8180)
!8197 = !DILocation(line: 8190, column: 13, scope: !8180)
!8198 = !DILocation(line: 8189, column: 44, scope: !8180)
!8199 = !DILocation(line: 8193, column: 19, scope: !8180)
!8200 = !DILocation(line: 8193, column: 29, scope: !8180)
!8201 = !DILocation(line: 8193, column: 11, scope: !8180)
!8202 = !DILocation(line: 8187, column: 4, scope: !8180)
!8203 = !DILocation(line: 8195, column: 4, scope: !8180)
!8204 = !DILocation(line: 8195, column: 11, scope: !8180)
!8205 = !DILocation(line: 8195, column: 14, scope: !8180)
!8206 = !DILocation(line: 8195, column: 19, scope: !8180)
!8207 = !DILocation(line: 8196, column: 3, scope: !8180)
!8208 = !DILocation(line: 8197, column: 2, scope: !8171)
!8209 = !DILocation(line: 8198, column: 6, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8198, column: 6)
!8211 = !DILocation(line: 8198, column: 15, scope: !8210)
!8212 = !DILocation(line: 8198, column: 31, scope: !8210)
!8213 = !DILocation(line: 8198, column: 6, scope: !8088)
!8214 = !DILocation(line: 8199, column: 22, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 8198, column: 37)
!8216 = !DILocation(line: 8199, column: 3, scope: !8215)
!8217 = !DILocation(line: 8200, column: 3, scope: !8215)
!8218 = !DILocation(line: 8202, column: 2, scope: !8088)
!8219 = !DILocation(line: 8202, column: 11, scope: !8088)
!8220 = !DILocation(line: 8202, column: 26, scope: !8088)
!8221 = !DILocation(line: 8203, column: 7, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8203, column: 6)
!8223 = !DILocation(line: 8203, column: 14, scope: !8222)
!8224 = !DILocation(line: 8203, column: 17, scope: !8222)
!8225 = !DILocation(line: 8203, column: 22, scope: !8222)
!8226 = !DILocation(line: 8203, column: 36, scope: !8222)
!8227 = !DILocation(line: 8203, column: 6, scope: !8088)
!8228 = !DILocation(line: 8204, column: 23, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 8204, column: 7)
!8230 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 8203, column: 42)
!8231 = !DILocation(line: 8204, column: 32, scope: !8229)
!8232 = !DILocation(line: 8204, column: 21, scope: !8229)
!8233 = !DILocation(line: 8204, column: 7, scope: !8229)
!8234 = !DILocation(line: 8204, column: 43, scope: !8229)
!8235 = !DILocation(line: 8204, column: 7, scope: !8230)
!8236 = !DILocation(line: 8205, column: 4, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 8204, column: 49)
!8238 = !DILocation(line: 8205, column: 13, scope: !8237)
!8239 = !DILocation(line: 8205, column: 28, scope: !8237)
!8240 = !DILocation(line: 8206, column: 4, scope: !8237)
!8241 = !DILocation(line: 8208, column: 7, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 8208, column: 7)
!8243 = !DILocation(line: 8208, column: 20, scope: !8242)
!8244 = !DILocation(line: 8208, column: 7, scope: !8230)
!8245 = !DILocation(line: 8209, column: 4, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 8208, column: 39)
!8247 = !DILocation(line: 8209, column: 13, scope: !8246)
!8248 = !DILocation(line: 8209, column: 28, scope: !8246)
!8249 = !DILocation(line: 8210, column: 4, scope: !8246)
!8250 = !DILocation(line: 8212, column: 7, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 8212, column: 7)
!8252 = !DILocation(line: 8212, column: 20, scope: !8251)
!8253 = !DILocation(line: 8212, column: 7, scope: !8230)
!8254 = !DILocation(line: 8213, column: 26, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 8212, column: 26)
!8256 = !DILocation(line: 8213, column: 4, scope: !8255)
!8257 = !DILocation(line: 8213, column: 11, scope: !8255)
!8258 = !DILocation(line: 8213, column: 14, scope: !8255)
!8259 = !DILocation(line: 8213, column: 24, scope: !8255)
!8260 = !DILocation(line: 8214, column: 25, scope: !8255)
!8261 = !DILocation(line: 8214, column: 4, scope: !8255)
!8262 = !DILocation(line: 8214, column: 11, scope: !8255)
!8263 = !DILocation(line: 8214, column: 14, scope: !8255)
!8264 = !DILocation(line: 8214, column: 23, scope: !8255)
!8265 = !DILocation(line: 8215, column: 4, scope: !8255)
!8266 = !DILocation(line: 8215, column: 11, scope: !8255)
!8267 = !DILocation(line: 8215, column: 14, scope: !8255)
!8268 = !DILocation(line: 8215, column: 19, scope: !8255)
!8269 = !DILocation(line: 8216, column: 3, scope: !8255)
!8270 = !DILocation(line: 8217, column: 28, scope: !8230)
!8271 = !DILocation(line: 8217, column: 41, scope: !8230)
!8272 = !DILocation(line: 8217, column: 26, scope: !8230)
!8273 = !DILocation(line: 8218, column: 2, scope: !8230)
!8274 = !DILocation(line: 8219, column: 13, scope: !8088)
!8275 = !DILocation(line: 8219, column: 20, scope: !8088)
!8276 = !DILocation(line: 8219, column: 11, scope: !8088)
!8277 = !DILocation(line: 8220, column: 29, scope: !8088)
!8278 = !DILocation(line: 8221, column: 7, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8221, column: 6)
!8280 = !DILocation(line: 8221, column: 16, scope: !8279)
!8281 = !DILocation(line: 8221, column: 36, scope: !8279)
!8282 = !DILocation(line: 8221, column: 43, scope: !8279)
!8283 = !DILocation(line: 8221, column: 46, scope: !8279)
!8284 = !DILocation(line: 8221, column: 34, scope: !8279)
!8285 = !DILocation(line: 8221, column: 57, scope: !8279)
!8286 = !DILocation(line: 8222, column: 8, scope: !8279)
!8287 = !DILocation(line: 8222, column: 17, scope: !8279)
!8288 = !DILocation(line: 8222, column: 44, scope: !8279)
!8289 = !DILocation(line: 8222, column: 51, scope: !8279)
!8290 = !DILocation(line: 8222, column: 54, scope: !8279)
!8291 = !DILocation(line: 8222, column: 42, scope: !8279)
!8292 = !DILocation(line: 8221, column: 6, scope: !8088)
!8293 = !DILocation(line: 8223, column: 7, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 8223, column: 7)
!8295 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 8222, column: 66)
!8296 = !DILocation(line: 8223, column: 14, scope: !8294)
!8297 = !DILocation(line: 8223, column: 17, scope: !8294)
!8298 = !DILocation(line: 8223, column: 22, scope: !8294)
!8299 = !DILocation(line: 8223, column: 7, scope: !8295)
!8300 = !DILocation(line: 8224, column: 13, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 8223, column: 36)
!8302 = !DILocation(line: 8225, column: 11, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 8225, column: 4)
!8304 = !DILocation(line: 8225, column: 9, scope: !8303)
!8305 = !DILocation(line: 8225, column: 16, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 8225, column: 4)
!8307 = !DILocation(line: 8225, column: 20, scope: !8306)
!8308 = !DILocation(line: 8225, column: 18, scope: !8306)
!8309 = !DILocation(line: 8225, column: 4, scope: !8303)
!8310 = !DILocation(line: 8226, column: 17, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 8225, column: 39)
!8312 = !DILocation(line: 8226, column: 14, scope: !8311)
!8313 = !DILocation(line: 8228, column: 4, scope: !8311)
!8314 = !DILocation(line: 8225, column: 35, scope: !8306)
!8315 = !DILocation(line: 8225, column: 4, scope: !8306)
!8316 = distinct !{!8316, !8309, !8317}
!8317 = !DILocation(line: 8228, column: 4, scope: !8303)
!8318 = !DILocation(line: 8229, column: 3, scope: !8301)
!8319 = !DILocation(line: 8230, column: 15, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 8229, column: 10)
!8321 = !DILocation(line: 8230, column: 13, scope: !8320)
!8322 = !DILocation(line: 8232, column: 7, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 8232, column: 7)
!8324 = !DILocation(line: 8232, column: 16, scope: !8323)
!8325 = !DILocation(line: 8232, column: 7, scope: !8295)
!8326 = !DILocation(line: 8233, column: 8, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 8233, column: 8)
!8328 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 8232, column: 24)
!8329 = !DILocation(line: 8233, column: 17, scope: !8327)
!8330 = !DILocation(line: 8233, column: 8, scope: !8328)
!8331 = !DILocation(line: 8234, column: 32, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 8233, column: 26)
!8333 = !DILocation(line: 8235, column: 4, scope: !8332)
!8334 = !DILocation(line: 8236, column: 12, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 8236, column: 5)
!8336 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 8235, column: 11)
!8337 = !DILocation(line: 8236, column: 10, scope: !8335)
!8338 = !DILocation(line: 8236, column: 17, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 8236, column: 5)
!8340 = !DILocation(line: 8236, column: 19, scope: !8339)
!8341 = !DILocation(line: 8236, column: 5, scope: !8335)
!8342 = !DILocation(line: 8239, column: 38, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 8237, column: 15)
!8344 = !DILocation(line: 8239, column: 10, scope: !8343)
!8345 = !DILocation(line: 8238, column: 18, scope: !8343)
!8346 = !DILocation(line: 8240, column: 10, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 8240, column: 10)
!8348 = !DILocation(line: 8240, column: 22, scope: !8347)
!8349 = !DILocation(line: 8240, column: 10, scope: !8343)
!8350 = !DILocation(line: 8241, column: 7, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 8240, column: 31)
!8352 = !DILocation(line: 8243, column: 10, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 8243, column: 10)
!8354 = !DILocation(line: 8243, column: 22, scope: !8353)
!8355 = !DILocation(line: 8243, column: 19, scope: !8353)
!8356 = !DILocation(line: 8243, column: 10, scope: !8343)
!8357 = !DILocation(line: 8244, column: 34, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 8243, column: 35)
!8359 = !DILocation(line: 8246, column: 7, scope: !8358)
!8360 = !DILocation(line: 8248, column: 5, scope: !8343)
!8361 = !DILocation(line: 8237, column: 11, scope: !8339)
!8362 = !DILocation(line: 8236, column: 5, scope: !8339)
!8363 = distinct !{!8363, !8341, !8364}
!8364 = !DILocation(line: 8248, column: 5, scope: !8335)
!8365 = !DILocation(line: 8250, column: 3, scope: !8328)
!8366 = !DILocation(line: 8251, column: 2, scope: !8295)
!8367 = !DILocation(line: 8252, column: 6, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8252, column: 6)
!8369 = !DILocation(line: 8252, column: 6, scope: !8088)
!8370 = !DILocation(line: 8253, column: 3, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 8252, column: 34)
!8372 = !DILocation(line: 8253, column: 10, scope: !8371)
!8373 = !DILocation(line: 8253, column: 13, scope: !8371)
!8374 = !DILocation(line: 8253, column: 22, scope: !8371)
!8375 = !DILocation(line: 8254, column: 3, scope: !8371)
!8376 = !DILocation(line: 8254, column: 10, scope: !8371)
!8377 = !DILocation(line: 8254, column: 13, scope: !8371)
!8378 = !DILocation(line: 8254, column: 22, scope: !8371)
!8379 = !DILocation(line: 8256, column: 2, scope: !8371)
!8380 = !DILocation(line: 8257, column: 3, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 8256, column: 9)
!8382 = !DILocation(line: 8257, column: 10, scope: !8381)
!8383 = !DILocation(line: 8257, column: 13, scope: !8381)
!8384 = !DILocation(line: 8257, column: 22, scope: !8381)
!8385 = !DILocation(line: 8259, column: 7, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 8259, column: 6)
!8387 = !DILocation(line: 8259, column: 14, scope: !8386)
!8388 = !DILocation(line: 8259, column: 17, scope: !8386)
!8389 = !DILocation(line: 8259, column: 22, scope: !8386)
!8390 = !DILocation(line: 8259, column: 36, scope: !8386)
!8391 = !DILocation(line: 8259, column: 6, scope: !8088)
!8392 = !DILocation(line: 8260, column: 7, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 8260, column: 7)
!8394 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 8259, column: 42)
!8395 = !DILocation(line: 8260, column: 16, scope: !8393)
!8396 = !DILocation(line: 8260, column: 7, scope: !8394)
!8397 = !DILocation(line: 8261, column: 8, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 8261, column: 8)
!8399 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 8260, column: 30)
!8400 = !DILocation(line: 8261, column: 17, scope: !8398)
!8401 = !DILocation(line: 8261, column: 30, scope: !8398)
!8402 = !DILocation(line: 8261, column: 8, scope: !8399)
!8403 = !DILocation(line: 8262, column: 10, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 8262, column: 9)
!8405 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 8261, column: 56)
!8406 = !DILocation(line: 8262, column: 19, scope: !8404)
!8407 = !DILocation(line: 8262, column: 30, scope: !8404)
!8408 = !DILocation(line: 8263, column: 10, scope: !8404)
!8409 = !DILocation(line: 8263, column: 19, scope: !8404)
!8410 = !DILocation(line: 8262, column: 9, scope: !8405)
!8411 = !DILocation(line: 8264, column: 13, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 8263, column: 32)
!8413 = !DILocation(line: 8268, column: 7, scope: !8412)
!8414 = !DILocation(line: 8267, column: 18, scope: !8412)
!8415 = !DILocation(line: 8264, column: 11, scope: !8412)
!8416 = !DILocation(line: 8273, column: 26, scope: !8412)
!8417 = !DILocation(line: 8273, column: 18, scope: !8412)
!8418 = !DILocation(line: 8273, column: 31, scope: !8412)
!8419 = !DILocation(line: 8273, column: 10, scope: !8412)
!8420 = !DILocation(line: 8272, column: 18, scope: !8412)
!8421 = !DILocation(line: 8274, column: 11, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 8274, column: 10)
!8423 = !DILocation(line: 8274, column: 23, scope: !8422)
!8424 = !DILocation(line: 8275, column: 10, scope: !8422)
!8425 = !DILocation(line: 8276, column: 12, scope: !8422)
!8426 = !DILocation(line: 8276, column: 19, scope: !8422)
!8427 = !DILocation(line: 8277, column: 12, scope: !8422)
!8428 = !DILocation(line: 8277, column: 21, scope: !8422)
!8429 = !DILocation(line: 8279, column: 11, scope: !8422)
!8430 = !DILocation(line: 8274, column: 10, scope: !8412)
!8431 = !DILocation(line: 8280, column: 7, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 8279, column: 18)
!8433 = !DILocation(line: 8280, column: 14, scope: !8432)
!8434 = !DILocation(line: 8280, column: 17, scope: !8432)
!8435 = !DILocation(line: 8280, column: 26, scope: !8432)
!8436 = !DILocation(line: 8283, column: 11, scope: !8432)
!8437 = !DILocation(line: 8282, column: 7, scope: !8432)
!8438 = !DILocation(line: 8282, column: 14, scope: !8432)
!8439 = !DILocation(line: 8282, column: 17, scope: !8432)
!8440 = !DILocation(line: 8282, column: 29, scope: !8432)
!8441 = !DILocation(line: 8285, column: 11, scope: !8432)
!8442 = !DILocation(line: 8284, column: 16, scope: !8432)
!8443 = !DILocation(line: 8289, column: 19, scope: !8432)
!8444 = !DILocation(line: 8289, column: 16, scope: !8432)
!8445 = !DILocation(line: 8294, column: 11, scope: !8432)
!8446 = !DILocation(line: 8290, column: 7, scope: !8432)
!8447 = !DILocation(line: 8291, column: 11, scope: !8432)
!8448 = !DILocation(line: 8292, column: 12, scope: !8432)
!8449 = !DILocation(line: 8293, column: 11, scope: !8432)
!8450 = !DILocation(line: 8293, column: 17, scope: !8432)
!8451 = !DILocation(line: 8295, column: 6, scope: !8432)
!8452 = !DILocation(line: 8296, column: 5, scope: !8412)
!8453 = !DILocation(line: 8297, column: 4, scope: !8405)
!8454 = !DILocation(line: 8298, column: 3, scope: !8399)
!8455 = !DILocation(line: 8299, column: 28, scope: !8394)
!8456 = !DILocation(line: 8299, column: 37, scope: !8394)
!8457 = !DILocation(line: 8299, column: 3, scope: !8394)
!8458 = !DILocation(line: 8299, column: 12, scope: !8394)
!8459 = !DILocation(line: 8299, column: 26, scope: !8394)
!8460 = !DILocation(line: 8300, column: 35, scope: !8394)
!8461 = !DILocation(line: 8300, column: 18, scope: !8394)
!8462 = !DILocation(line: 8300, column: 16, scope: !8394)
!8463 = !DILocation(line: 8301, column: 29, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 8301, column: 7)
!8465 = !DILocation(line: 8301, column: 38, scope: !8464)
!8466 = !DILocation(line: 8301, column: 49, scope: !8464)
!8467 = !DILocation(line: 8301, column: 8, scope: !8464)
!8468 = !DILocation(line: 8302, column: 15, scope: !8464)
!8469 = !DILocation(line: 8301, column: 63, scope: !8464)
!8470 = !DILocation(line: 8303, column: 7, scope: !8464)
!8471 = !DILocation(line: 8303, column: 12, scope: !8464)
!8472 = !DILocation(line: 8303, column: 19, scope: !8464)
!8473 = !DILocation(line: 8303, column: 22, scope: !8464)
!8474 = !DILocation(line: 8303, column: 27, scope: !8464)
!8475 = !DILocation(line: 8303, column: 40, scope: !8464)
!8476 = !DILocation(line: 8301, column: 7, scope: !8394)
!8477 = !DILocation(line: 8305, column: 26, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 8304, column: 8)
!8479 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 8303, column: 47)
!8480 = !DILocation(line: 8305, column: 35, scope: !8478)
!8481 = !DILocation(line: 8306, column: 12, scope: !8478)
!8482 = !DILocation(line: 8305, column: 9, scope: !8478)
!8483 = !DILocation(line: 8304, column: 13, scope: !8478)
!8484 = !DILocation(line: 8306, column: 27, scope: !8478)
!8485 = !DILocation(line: 8304, column: 8, scope: !8479)
!8486 = !DILocation(line: 8307, column: 5, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 8306, column: 33)
!8488 = !DILocation(line: 8307, column: 14, scope: !8487)
!8489 = !DILocation(line: 8307, column: 29, scope: !8487)
!8490 = !DILocation(line: 8308, column: 13, scope: !8487)
!8491 = !DILocation(line: 8308, column: 5, scope: !8487)
!8492 = !DILocation(line: 8310, column: 3, scope: !8479)
!8493 = !DILocation(line: 8311, column: 2, scope: !8394)
!8494 = !DILocation(line: 8312, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 8312, column: 7)
!8496 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 8311, column: 9)
!8497 = !DILocation(line: 8312, column: 16, scope: !8495)
!8498 = !DILocation(line: 8312, column: 7, scope: !8496)
!8499 = !DILocation(line: 8313, column: 8, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 8313, column: 8)
!8501 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 8312, column: 30)
!8502 = !DILocation(line: 8313, column: 17, scope: !8500)
!8503 = !DILocation(line: 8313, column: 30, scope: !8500)
!8504 = !DILocation(line: 8313, column: 8, scope: !8501)
!8505 = !DILocation(line: 8314, column: 10, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 8314, column: 9)
!8507 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 8313, column: 56)
!8508 = !DILocation(line: 8314, column: 19, scope: !8506)
!8509 = !DILocation(line: 8314, column: 30, scope: !8506)
!8510 = !DILocation(line: 8315, column: 10, scope: !8506)
!8511 = !DILocation(line: 8315, column: 19, scope: !8506)
!8512 = !DILocation(line: 8314, column: 9, scope: !8507)
!8513 = !DILocation(line: 8317, column: 10, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 8315, column: 32)
!8515 = !DILocation(line: 8318, column: 10, scope: !8514)
!8516 = !DILocation(line: 8317, column: 43, scope: !8514)
!8517 = !DILocation(line: 8316, column: 11, scope: !8514)
!8518 = !DILocation(line: 8320, column: 26, scope: !8514)
!8519 = !DILocation(line: 8320, column: 18, scope: !8514)
!8520 = !DILocation(line: 8320, column: 31, scope: !8514)
!8521 = !DILocation(line: 8320, column: 10, scope: !8514)
!8522 = !DILocation(line: 8319, column: 18, scope: !8514)
!8523 = !DILocation(line: 8321, column: 11, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 8321, column: 10)
!8525 = !DILocation(line: 8321, column: 23, scope: !8524)
!8526 = !DILocation(line: 8322, column: 10, scope: !8524)
!8527 = !DILocation(line: 8323, column: 12, scope: !8524)
!8528 = !DILocation(line: 8323, column: 19, scope: !8524)
!8529 = !DILocation(line: 8324, column: 12, scope: !8524)
!8530 = !DILocation(line: 8324, column: 21, scope: !8524)
!8531 = !DILocation(line: 8326, column: 11, scope: !8524)
!8532 = !DILocation(line: 8321, column: 10, scope: !8514)
!8533 = !DILocation(line: 8328, column: 11, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 8326, column: 18)
!8535 = !DILocation(line: 8327, column: 16, scope: !8534)
!8536 = !DILocation(line: 8330, column: 20, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 8330, column: 11)
!8538 = !DILocation(line: 8330, column: 12, scope: !8537)
!8539 = !DILocation(line: 8330, column: 29, scope: !8537)
!8540 = !DILocation(line: 8331, column: 11, scope: !8537)
!8541 = !DILocation(line: 8330, column: 11, scope: !8534)
!8542 = !DILocation(line: 8332, column: 8, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 8331, column: 17)
!8544 = !DILocation(line: 8332, column: 15, scope: !8543)
!8545 = !DILocation(line: 8332, column: 18, scope: !8543)
!8546 = !DILocation(line: 8332, column: 27, scope: !8543)
!8547 = !DILocation(line: 8334, column: 20, scope: !8543)
!8548 = !DILocation(line: 8334, column: 17, scope: !8543)
!8549 = !DILocation(line: 8336, column: 12, scope: !8543)
!8550 = !DILocation(line: 8335, column: 8, scope: !8543)
!8551 = !DILocation(line: 8335, column: 15, scope: !8543)
!8552 = !DILocation(line: 8335, column: 18, scope: !8543)
!8553 = !DILocation(line: 8335, column: 27, scope: !8543)
!8554 = !DILocation(line: 8339, column: 12, scope: !8543)
!8555 = !DILocation(line: 8338, column: 8, scope: !8543)
!8556 = !DILocation(line: 8338, column: 15, scope: !8543)
!8557 = !DILocation(line: 8338, column: 18, scope: !8543)
!8558 = !DILocation(line: 8338, column: 30, scope: !8543)
!8559 = !DILocation(line: 8340, column: 7, scope: !8543)
!8560 = !DILocation(line: 8341, column: 6, scope: !8534)
!8561 = !DILocation(line: 8342, column: 5, scope: !8514)
!8562 = !DILocation(line: 8343, column: 4, scope: !8507)
!8563 = !DILocation(line: 8344, column: 3, scope: !8501)
!8564 = !DILocation(line: 8345, column: 16, scope: !8496)
!8565 = !DILocation(line: 8346, column: 29, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 8346, column: 7)
!8567 = !DILocation(line: 8346, column: 38, scope: !8566)
!8568 = !DILocation(line: 8346, column: 8, scope: !8566)
!8569 = !DILocation(line: 8346, column: 52, scope: !8566)
!8570 = !DILocation(line: 8346, column: 58, scope: !8566)
!8571 = !DILocation(line: 8347, column: 9, scope: !8566)
!8572 = !DILocation(line: 8347, column: 16, scope: !8566)
!8573 = !DILocation(line: 8347, column: 19, scope: !8566)
!8574 = !DILocation(line: 8347, column: 24, scope: !8566)
!8575 = !DILocation(line: 8347, column: 37, scope: !8566)
!8576 = !DILocation(line: 8346, column: 7, scope: !8496)
!8577 = !DILocation(line: 8348, column: 32, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 8348, column: 8)
!8579 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 8347, column: 44)
!8580 = !DILocation(line: 8348, column: 41, scope: !8578)
!8581 = !DILocation(line: 8349, column: 11, scope: !8578)
!8582 = !DILocation(line: 8348, column: 15, scope: !8578)
!8583 = !DILocation(line: 8348, column: 13, scope: !8578)
!8584 = !DILocation(line: 8349, column: 26, scope: !8578)
!8585 = !DILocation(line: 8348, column: 8, scope: !8579)
!8586 = !DILocation(line: 8350, column: 5, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 8349, column: 32)
!8588 = !DILocation(line: 8350, column: 14, scope: !8587)
!8589 = !DILocation(line: 8350, column: 29, scope: !8587)
!8590 = !DILocation(line: 8351, column: 13, scope: !8587)
!8591 = !DILocation(line: 8351, column: 5, scope: !8587)
!8592 = !DILocation(line: 8353, column: 3, scope: !8579)
!8593 = !DILocation(line: 8355, column: 2, scope: !8088)
!8594 = !DILocation(line: 8355, column: 11, scope: !8088)
!8595 = !DILocation(line: 8355, column: 26, scope: !8088)
!8596 = !DILocation(line: 8356, column: 10, scope: !8088)
!8597 = !DILocation(line: 8356, column: 2, scope: !8088)
!8598 = !DILocation(line: 8357, column: 1, scope: !8088)
!8599 = distinct !DISubprogram(name: "adv_build_req", scope: !3, file: !3, line: 7732, type: !8600, scopeLine: 7734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{!245, !190, !4976, !8602}
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 64)
!8603 = !DILocalVariable(name: "boardp", arg: 1, scope: !8599, file: !3, line: 7732, type: !190)
!8604 = !DILocation(line: 7732, column: 33, scope: !8599)
!8605 = !DILocalVariable(name: "scp", arg: 2, scope: !8599, file: !3, line: 7732, type: !4976)
!8606 = !DILocation(line: 7732, column: 59, scope: !8599)
!8607 = !DILocalVariable(name: "adv_reqpp", arg: 3, scope: !8599, file: !3, line: 7733, type: !8602)
!8608 = !DILocation(line: 7733, column: 20, scope: !8599)
!8609 = !DILocalVariable(name: "srb_tag", scope: !8599, file: !3, line: 7735, type: !402)
!8610 = !DILocation(line: 7735, column: 6, scope: !8599)
!8611 = !DILocation(line: 7735, column: 16, scope: !8599)
!8612 = !DILocation(line: 7735, column: 21, scope: !8599)
!8613 = !DILocation(line: 7735, column: 30, scope: !8599)
!8614 = !DILocalVariable(name: "reqp", scope: !8599, file: !3, line: 7736, type: !5630)
!8615 = !DILocation(line: 7736, column: 13, scope: !8599)
!8616 = !DILocalVariable(name: "scsiqp", scope: !8599, file: !3, line: 7737, type: !8617)
!8617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5635, size: 64)
!8618 = !DILocation(line: 7737, column: 18, scope: !8599)
!8619 = !DILocalVariable(name: "ret", scope: !8599, file: !3, line: 7738, type: !245)
!8620 = !DILocation(line: 7738, column: 6, scope: !8599)
!8621 = !DILocalVariable(name: "use_sg", scope: !8599, file: !3, line: 7739, type: !245)
!8622 = !DILocation(line: 7739, column: 6, scope: !8599)
!8623 = !DILocalVariable(name: "sense_addr", scope: !8599, file: !3, line: 7740, type: !977)
!8624 = !DILocation(line: 7740, column: 13, scope: !8599)
!8625 = !DILocation(line: 7746, column: 10, scope: !8599)
!8626 = !DILocation(line: 7746, column: 18, scope: !8599)
!8627 = !DILocation(line: 7746, column: 27, scope: !8599)
!8628 = !DILocation(line: 7746, column: 7, scope: !8599)
!8629 = !DILocation(line: 7747, column: 6, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 7747, column: 6)
!8631 = !DILocation(line: 7747, column: 12, scope: !8630)
!8632 = !DILocation(line: 7747, column: 18, scope: !8630)
!8633 = !DILocation(line: 7747, column: 21, scope: !8630)
!8634 = !DILocation(line: 7747, column: 27, scope: !8630)
!8635 = !DILocation(line: 7747, column: 36, scope: !8630)
!8636 = !DILocation(line: 7747, column: 33, scope: !8630)
!8637 = !DILocation(line: 7747, column: 6, scope: !8599)
!8638 = !DILocation(line: 7749, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 7747, column: 42)
!8640 = !DILocation(line: 7750, column: 3, scope: !8639)
!8641 = !DILocation(line: 7753, column: 19, scope: !8599)
!8642 = !DILocation(line: 7753, column: 27, scope: !8599)
!8643 = !DILocation(line: 7753, column: 44, scope: !8599)
!8644 = !DILocation(line: 7753, column: 52, scope: !8599)
!8645 = !DILocation(line: 7753, column: 41, scope: !8599)
!8646 = !DILocation(line: 7753, column: 2, scope: !8599)
!8647 = !DILocation(line: 7753, column: 8, scope: !8599)
!8648 = !DILocation(line: 7753, column: 17, scope: !8599)
!8649 = !DILocation(line: 7755, column: 12, scope: !8599)
!8650 = !DILocation(line: 7755, column: 18, scope: !8599)
!8651 = !DILocation(line: 7755, column: 9, scope: !8599)
!8652 = !DILocation(line: 7760, column: 37, scope: !8599)
!8653 = !DILocation(line: 7760, column: 45, scope: !8599)
!8654 = !DILocation(line: 7760, column: 57, scope: !8599)
!8655 = !DILocation(line: 7760, column: 17, scope: !8599)
!8656 = !DILocation(line: 7760, column: 25, scope: !8599)
!8657 = !DILocation(line: 7760, column: 35, scope: !8599)
!8658 = !DILocation(line: 7760, column: 2, scope: !8599)
!8659 = !DILocation(line: 7760, column: 10, scope: !8599)
!8660 = !DILocation(line: 7760, column: 15, scope: !8599)
!8661 = !DILocation(line: 7765, column: 20, scope: !8599)
!8662 = !DILocation(line: 7765, column: 2, scope: !8599)
!8663 = !DILocation(line: 7765, column: 10, scope: !8599)
!8664 = !DILocation(line: 7765, column: 18, scope: !8599)
!8665 = !DILocation(line: 7770, column: 16, scope: !8599)
!8666 = !DILocation(line: 7770, column: 2, scope: !8599)
!8667 = !DILocation(line: 7770, column: 8, scope: !8599)
!8668 = !DILocation(line: 7770, column: 14, scope: !8599)
!8669 = !DILocation(line: 7771, column: 31, scope: !8599)
!8670 = !DILocation(line: 7771, column: 23, scope: !8599)
!8671 = !DILocation(line: 7771, column: 2, scope: !8599)
!8672 = !DILocation(line: 7771, column: 7, scope: !8599)
!8673 = !DILocation(line: 7771, column: 21, scope: !8599)
!8674 = !DILocation(line: 7778, column: 20, scope: !8599)
!8675 = !DILocation(line: 7778, column: 25, scope: !8599)
!8676 = !DILocation(line: 7778, column: 2, scope: !8599)
!8677 = !DILocation(line: 7778, column: 10, scope: !8599)
!8678 = !DILocation(line: 7778, column: 18, scope: !8599)
!8679 = !DILocation(line: 7780, column: 9, scope: !8599)
!8680 = !DILocation(line: 7780, column: 17, scope: !8599)
!8681 = !DILocation(line: 7780, column: 2, scope: !8599)
!8682 = !DILocation(line: 7780, column: 22, scope: !8599)
!8683 = !DILocation(line: 7780, column: 27, scope: !8599)
!8684 = !DILocation(line: 7780, column: 33, scope: !8599)
!8685 = !DILocation(line: 7780, column: 38, scope: !8599)
!8686 = !DILocation(line: 7780, column: 46, scope: !8599)
!8687 = !DILocation(line: 7780, column: 53, scope: !8599)
!8688 = !DILocation(line: 7780, column: 58, scope: !8599)
!8689 = !DILocation(line: 7782, column: 6, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 7782, column: 6)
!8691 = !DILocation(line: 7782, column: 11, scope: !8690)
!8692 = !DILocation(line: 7782, column: 19, scope: !8690)
!8693 = !DILocation(line: 7782, column: 6, scope: !8599)
!8694 = !DILocalVariable(name: "cdb16_len", scope: !8695, file: !3, line: 7783, type: !245)
!8695 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 7782, column: 25)
!8696 = !DILocation(line: 7783, column: 7, scope: !8695)
!8697 = !DILocation(line: 7783, column: 19, scope: !8695)
!8698 = !DILocation(line: 7783, column: 24, scope: !8695)
!8699 = !DILocation(line: 7783, column: 32, scope: !8695)
!8700 = !DILocation(line: 7785, column: 10, scope: !8695)
!8701 = !DILocation(line: 7785, column: 18, scope: !8695)
!8702 = !DILocation(line: 7785, column: 3, scope: !8695)
!8703 = !DILocation(line: 7785, column: 26, scope: !8695)
!8704 = !DILocation(line: 7785, column: 31, scope: !8695)
!8705 = !DILocation(line: 7785, column: 41, scope: !8695)
!8706 = !DILocation(line: 7786, column: 2, scope: !8695)
!8707 = !DILocation(line: 7788, column: 22, scope: !8599)
!8708 = !DILocation(line: 7788, column: 27, scope: !8599)
!8709 = !DILocation(line: 7788, column: 35, scope: !8599)
!8710 = !DILocation(line: 7788, column: 2, scope: !8599)
!8711 = !DILocation(line: 7788, column: 10, scope: !8599)
!8712 = !DILocation(line: 7788, column: 20, scope: !8599)
!8713 = !DILocation(line: 7789, column: 23, scope: !8599)
!8714 = !DILocation(line: 7789, column: 28, scope: !8599)
!8715 = !DILocation(line: 7789, column: 36, scope: !8599)
!8716 = !DILocation(line: 7789, column: 2, scope: !8599)
!8717 = !DILocation(line: 7789, column: 10, scope: !8599)
!8718 = !DILocation(line: 7789, column: 21, scope: !8599)
!8719 = !DILocation(line: 7791, column: 15, scope: !8599)
!8720 = !DILocation(line: 7791, column: 13, scope: !8599)
!8721 = !DILocation(line: 7793, column: 24, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 7793, column: 6)
!8723 = !DILocation(line: 7793, column: 32, scope: !8722)
!8724 = !DILocation(line: 7793, column: 37, scope: !8722)
!8725 = !DILocation(line: 7793, column: 6, scope: !8722)
!8726 = !DILocation(line: 7793, column: 6, scope: !8599)
!8727 = !DILocation(line: 7795, column: 3, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 7793, column: 50)
!8729 = !DILocation(line: 7796, column: 3, scope: !8728)
!8730 = !DILocation(line: 7798, column: 23, scope: !8599)
!8731 = !DILocation(line: 7798, column: 2, scope: !8599)
!8732 = !DILocation(line: 7798, column: 10, scope: !8599)
!8733 = !DILocation(line: 7798, column: 21, scope: !8599)
!8734 = !DILocation(line: 7799, column: 2, scope: !8599)
!8735 = !DILocation(line: 7799, column: 10, scope: !8599)
!8736 = !DILocation(line: 7799, column: 20, scope: !8599)
!8737 = !DILocation(line: 7803, column: 24, scope: !8599)
!8738 = !DILocation(line: 7803, column: 11, scope: !8599)
!8739 = !DILocation(line: 7803, column: 9, scope: !8599)
!8740 = !DILocation(line: 7804, column: 6, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 7804, column: 6)
!8742 = !DILocation(line: 7804, column: 13, scope: !8741)
!8743 = !DILocation(line: 7804, column: 6, scope: !8599)
!8744 = !DILocation(line: 7806, column: 3, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 7804, column: 18)
!8746 = !DILocation(line: 7807, column: 3, scope: !8745)
!8747 = !DILocation(line: 7808, column: 13, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 7808, column: 13)
!8749 = !DILocation(line: 7808, column: 20, scope: !8748)
!8750 = !DILocation(line: 7808, column: 13, scope: !8741)
!8751 = !DILocation(line: 7810, column: 3, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 7808, column: 26)
!8753 = !DILocation(line: 7810, column: 9, scope: !8752)
!8754 = !DILocation(line: 7810, column: 16, scope: !8752)
!8755 = !DILocation(line: 7811, column: 3, scope: !8752)
!8756 = !DILocation(line: 7811, column: 11, scope: !8752)
!8757 = !DILocation(line: 7811, column: 20, scope: !8752)
!8758 = !DILocation(line: 7813, column: 3, scope: !8752)
!8759 = !DILocation(line: 7813, column: 11, scope: !8752)
!8760 = !DILocation(line: 7813, column: 21, scope: !8752)
!8761 = !DILocation(line: 7814, column: 3, scope: !8752)
!8762 = !DILocation(line: 7814, column: 11, scope: !8752)
!8763 = !DILocation(line: 7814, column: 23, scope: !8752)
!8764 = !DILocation(line: 7815, column: 3, scope: !8752)
!8765 = !DILocation(line: 7815, column: 11, scope: !8752)
!8766 = !DILocation(line: 7815, column: 24, scope: !8752)
!8767 = !DILocation(line: 7816, column: 2, scope: !8752)
!8768 = !DILocation(line: 7817, column: 7, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 7817, column: 7)
!8770 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 7816, column: 9)
!8771 = !DILocation(line: 7817, column: 14, scope: !8769)
!8772 = !DILocation(line: 7817, column: 7, scope: !8770)
!8773 = !DILocation(line: 7818, column: 26, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 7817, column: 33)
!8775 = !DILocation(line: 7819, column: 32, scope: !8774)
!8776 = !DILocation(line: 7820, column: 8, scope: !8774)
!8777 = !DILocation(line: 7820, column: 13, scope: !8774)
!8778 = !DILocation(line: 7820, column: 21, scope: !8774)
!8779 = !DILocation(line: 7820, column: 27, scope: !8774)
!8780 = !DILocation(line: 7818, column: 4, scope: !8774)
!8781 = !DILocation(line: 7821, column: 19, scope: !8774)
!8782 = !DILocation(line: 7821, column: 4, scope: !8774)
!8783 = !DILocation(line: 7822, column: 4, scope: !8774)
!8784 = !DILocation(line: 7822, column: 9, scope: !8774)
!8785 = !DILocation(line: 7822, column: 16, scope: !8774)
!8786 = !DILocation(line: 7823, column: 4, scope: !8774)
!8787 = !DILocation(line: 7823, column: 10, scope: !8774)
!8788 = !DILocation(line: 7823, column: 16, scope: !8774)
!8789 = !DILocation(line: 7824, column: 4, scope: !8774)
!8790 = !DILocation(line: 7824, column: 9, scope: !8774)
!8791 = !DILocation(line: 7824, column: 23, scope: !8774)
!8792 = !DILocation(line: 7826, column: 4, scope: !8774)
!8793 = !DILocation(line: 7829, column: 22, scope: !8770)
!8794 = !DILocation(line: 7829, column: 3, scope: !8770)
!8795 = !DILocation(line: 7829, column: 11, scope: !8770)
!8796 = !DILocation(line: 7829, column: 20, scope: !8770)
!8797 = !DILocation(line: 7831, column: 24, scope: !8770)
!8798 = !DILocation(line: 7831, column: 32, scope: !8770)
!8799 = !DILocation(line: 7831, column: 38, scope: !8770)
!8800 = !DILocation(line: 7831, column: 46, scope: !8770)
!8801 = !DILocation(line: 7831, column: 51, scope: !8770)
!8802 = !DILocation(line: 7831, column: 9, scope: !8770)
!8803 = !DILocation(line: 7831, column: 7, scope: !8770)
!8804 = !DILocation(line: 7832, column: 7, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 7832, column: 7)
!8806 = !DILocation(line: 7832, column: 11, scope: !8805)
!8807 = !DILocation(line: 7832, column: 7, scope: !8770)
!8808 = !DILocation(line: 7833, column: 19, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 7832, column: 27)
!8810 = !DILocation(line: 7833, column: 4, scope: !8809)
!8811 = !DILocation(line: 7834, column: 4, scope: !8809)
!8812 = !DILocation(line: 7834, column: 9, scope: !8809)
!8813 = !DILocation(line: 7834, column: 16, scope: !8809)
!8814 = !DILocation(line: 7835, column: 4, scope: !8809)
!8815 = !DILocation(line: 7835, column: 10, scope: !8809)
!8816 = !DILocation(line: 7835, column: 16, scope: !8809)
!8817 = !DILocation(line: 7836, column: 4, scope: !8809)
!8818 = !DILocation(line: 7836, column: 9, scope: !8809)
!8819 = !DILocation(line: 7836, column: 23, scope: !8809)
!8820 = !DILocation(line: 7838, column: 11, scope: !8809)
!8821 = !DILocation(line: 7838, column: 4, scope: !8809)
!8822 = !DILocation(line: 7841, column: 3, scope: !8770)
!8823 = !DILocation(line: 7844, column: 2, scope: !8599)
!8824 = !DILocation(line: 7849, column: 15, scope: !8599)
!8825 = !DILocation(line: 7849, column: 3, scope: !8599)
!8826 = !DILocation(line: 7849, column: 13, scope: !8599)
!8827 = !DILocation(line: 7851, column: 2, scope: !8599)
!8828 = !DILocation(line: 7852, column: 1, scope: !8599)
!8829 = distinct !DISubprogram(name: "AdvExeScsiQueue", scope: !3, file: !3, line: 8380, type: !8830, scopeLine: 8381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{!245, !6378, !5630}
!8832 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !8829, file: !3, line: 8380, type: !6378)
!8833 = !DILocation(line: 8380, column: 41, scope: !8829)
!8834 = !DILocalVariable(name: "reqp", arg: 2, scope: !8829, file: !3, line: 8380, type: !5630)
!8835 = !DILocation(line: 8380, column: 61, scope: !8829)
!8836 = !DILocalVariable(name: "iop_base", scope: !8829, file: !3, line: 8382, type: !334)
!8837 = !DILocation(line: 8382, column: 14, scope: !8829)
!8838 = !DILocalVariable(name: "new_carrp", scope: !8829, file: !3, line: 8383, type: !5377)
!8839 = !DILocation(line: 8383, column: 14, scope: !8829)
!8840 = !DILocalVariable(name: "scsiq", scope: !8829, file: !3, line: 8384, type: !8617)
!8841 = !DILocation(line: 8384, column: 18, scope: !8829)
!8842 = !DILocation(line: 8384, column: 27, scope: !8829)
!8843 = !DILocation(line: 8384, column: 33, scope: !8829)
!8844 = !DILocation(line: 8389, column: 6, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 8389, column: 6)
!8846 = !DILocation(line: 8389, column: 13, scope: !8845)
!8847 = !DILocation(line: 8389, column: 23, scope: !8845)
!8848 = !DILocation(line: 8389, column: 6, scope: !8829)
!8849 = !DILocation(line: 8390, column: 3, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 8389, column: 38)
!8851 = !DILocation(line: 8390, column: 10, scope: !8850)
!8852 = !DILocation(line: 8390, column: 22, scope: !8850)
!8853 = !DILocation(line: 8391, column: 3, scope: !8850)
!8854 = !DILocation(line: 8391, column: 10, scope: !8850)
!8855 = !DILocation(line: 8391, column: 22, scope: !8850)
!8856 = !DILocation(line: 8392, column: 3, scope: !8850)
!8857 = !DILocation(line: 8395, column: 13, scope: !8829)
!8858 = !DILocation(line: 8395, column: 22, scope: !8829)
!8859 = !DILocation(line: 8395, column: 11, scope: !8829)
!8860 = !DILocation(line: 8401, column: 35, scope: !8829)
!8861 = !DILocation(line: 8401, column: 14, scope: !8829)
!8862 = !DILocation(line: 8401, column: 12, scope: !8829)
!8863 = !DILocation(line: 8402, column: 7, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 8402, column: 6)
!8865 = !DILocation(line: 8402, column: 6, scope: !8829)
!8866 = !DILocation(line: 8404, column: 3, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 8402, column: 18)
!8868 = !DILocation(line: 8407, column: 2, scope: !8829)
!8869 = !DILocation(line: 8407, column: 11, scope: !8829)
!8870 = !DILocation(line: 8407, column: 27, scope: !8829)
!8871 = !DILocation(line: 8410, column: 21, scope: !8829)
!8872 = !DILocation(line: 8410, column: 2, scope: !8829)
!8873 = !DILocation(line: 8410, column: 9, scope: !8829)
!8874 = !DILocation(line: 8410, column: 19, scope: !8829)
!8875 = !DILocation(line: 8411, column: 22, scope: !8829)
!8876 = !DILocation(line: 8411, column: 2, scope: !8829)
!8877 = !DILocation(line: 8411, column: 9, scope: !8829)
!8878 = !DILocation(line: 8411, column: 20, scope: !8829)
!8879 = !DILocation(line: 8413, column: 19, scope: !8829)
!8880 = !DILocation(line: 8413, column: 28, scope: !8829)
!8881 = !DILocation(line: 8413, column: 36, scope: !8829)
!8882 = !DILocation(line: 8413, column: 2, scope: !8829)
!8883 = !DILocation(line: 8413, column: 9, scope: !8829)
!8884 = !DILocation(line: 8413, column: 17, scope: !8829)
!8885 = !DILocation(line: 8414, column: 19, scope: !8829)
!8886 = !DILocation(line: 8414, column: 28, scope: !8829)
!8887 = !DILocation(line: 8414, column: 36, scope: !8829)
!8888 = !DILocation(line: 8414, column: 2, scope: !8829)
!8889 = !DILocation(line: 8414, column: 9, scope: !8829)
!8890 = !DILocation(line: 8414, column: 17, scope: !8829)
!8891 = !DILocation(line: 8421, column: 30, scope: !8829)
!8892 = !DILocation(line: 8421, column: 37, scope: !8829)
!8893 = !DILocation(line: 8421, column: 2, scope: !8829)
!8894 = !DILocation(line: 8421, column: 11, scope: !8829)
!8895 = !DILocation(line: 8421, column: 19, scope: !8829)
!8896 = !DILocation(line: 8421, column: 28, scope: !8829)
!8897 = !DILocation(line: 8428, column: 30, scope: !8829)
!8898 = !DILocation(line: 8428, column: 41, scope: !8829)
!8899 = !DILocation(line: 8428, column: 2, scope: !8829)
!8900 = !DILocation(line: 8428, column: 11, scope: !8829)
!8901 = !DILocation(line: 8428, column: 19, scope: !8829)
!8902 = !DILocation(line: 8428, column: 28, scope: !8829)
!8903 = !DILocation(line: 8433, column: 20, scope: !8829)
!8904 = !DILocation(line: 8433, column: 2, scope: !8829)
!8905 = !DILocation(line: 8433, column: 11, scope: !8829)
!8906 = !DILocation(line: 8433, column: 18, scope: !8829)
!8907 = !DILocation(line: 8435, column: 6, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 8435, column: 6)
!8909 = !DILocation(line: 8435, column: 15, scope: !8908)
!8910 = !DILocation(line: 8435, column: 25, scope: !8908)
!8911 = !DILocation(line: 8435, column: 45, scope: !8908)
!8912 = !DILocation(line: 8436, column: 6, scope: !8908)
!8913 = !DILocation(line: 8436, column: 15, scope: !8908)
!8914 = !DILocation(line: 8436, column: 25, scope: !8908)
!8915 = !DILocation(line: 8435, column: 6, scope: !8829)
!8916 = !DILocation(line: 8440, column: 3, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 8436, column: 49)
!8918 = !DILocation(line: 8441, column: 7, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 8441, column: 7)
!8920 = !DILocation(line: 8441, column: 16, scope: !8919)
!8921 = !DILocation(line: 8441, column: 26, scope: !8919)
!8922 = !DILocation(line: 8441, column: 7, scope: !8917)
!8923 = !DILocation(line: 8447, column: 4, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 8441, column: 47)
!8925 = !DILocation(line: 8449, column: 3, scope: !8924)
!8926 = !DILocation(line: 8450, column: 2, scope: !8917)
!8927 = !DILocation(line: 8450, column: 13, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 8450, column: 13)
!8929 = !DILocation(line: 8450, column: 22, scope: !8928)
!8930 = !DILocation(line: 8450, column: 32, scope: !8928)
!8931 = !DILocation(line: 8450, column: 13, scope: !8908)
!8932 = !DILocation(line: 8455, column: 3, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 8450, column: 56)
!8934 = !DILocation(line: 8457, column: 2, scope: !8933)
!8935 = !DILocation(line: 8459, column: 2, scope: !8829)
!8936 = !DILocation(line: 8460, column: 1, scope: !8829)
!8937 = distinct !DISubprogram(name: "asc_get_sense_buffer_dma", scope: !3, file: !3, line: 7494, type: !8938, scopeLine: 7495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8938 = !DISubroutineType(types: !8939)
!8939 = !{!5282, !4976}
!8940 = !DILocalVariable(name: "scp", arg: 1, scope: !8937, file: !3, line: 7494, type: !4976)
!8941 = !DILocation(line: 7494, column: 58, scope: !8937)
!8942 = !DILocalVariable(name: "board", scope: !8937, file: !3, line: 7496, type: !190)
!8943 = !DILocation(line: 7496, column: 20, scope: !8937)
!8944 = !DILocation(line: 7496, column: 39, scope: !8937)
!8945 = !DILocation(line: 7496, column: 44, scope: !8937)
!8946 = !DILocation(line: 7496, column: 52, scope: !8937)
!8947 = !DILocation(line: 7496, column: 28, scope: !8937)
!8948 = !DILocation(line: 7498, column: 24, scope: !8937)
!8949 = !DILocation(line: 7498, column: 2, scope: !8937)
!8950 = !DILocation(line: 7498, column: 7, scope: !8937)
!8951 = !DILocation(line: 7498, column: 11, scope: !8937)
!8952 = !DILocation(line: 7498, column: 22, scope: !8937)
!8953 = !DILocation(line: 7501, column: 24, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 7501, column: 6)
!8955 = !DILocation(line: 7501, column: 31, scope: !8954)
!8956 = !DILocation(line: 7501, column: 36, scope: !8954)
!8957 = !DILocation(line: 7501, column: 41, scope: !8954)
!8958 = !DILocation(line: 7501, column: 45, scope: !8954)
!8959 = !DILocation(line: 7501, column: 6, scope: !8954)
!8960 = !DILocation(line: 7501, column: 6, scope: !8937)
!8961 = !DILocation(line: 7503, column: 3, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 7501, column: 58)
!8963 = !DILocation(line: 7505, column: 9, scope: !8937)
!8964 = !DILocation(line: 7505, column: 2, scope: !8937)
!8965 = !DILocation(line: 7506, column: 1, scope: !8937)
!8966 = distinct !DISubprogram(name: "kzalloc", scope: !169, file: !169, line: 662, type: !8967, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8967 = !DISubroutineType(types: !8968)
!8968 = !{!334, !308, !783}
!8969 = !DILocalVariable(name: "s", arg: 1, scope: !8970, file: !169, line: 445, type: !992)
!8970 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !169, file: !169, line: 445, type: !8971, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8971 = !DISubroutineType(types: !8972)
!8972 = !{!334, !992, !783, !308}
!8973 = !DILocation(line: 445, column: 72, scope: !8970, inlinedAt: !8974)
!8974 = distinct !DILocation(line: 552, column: 10, scope: !8975, inlinedAt: !8978)
!8975 = distinct !DILexicalBlock(scope: !8976, file: !169, line: 540, column: 34)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !169, line: 540, column: 6)
!8977 = distinct !DISubprogram(name: "kmalloc", scope: !169, file: !169, line: 538, type: !8967, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8978 = distinct !DILocation(line: 664, column: 9, scope: !8966)
!8979 = !DILocalVariable(name: "flags", arg: 2, scope: !8970, file: !169, line: 446, type: !783)
!8980 = !DILocation(line: 446, column: 9, scope: !8970, inlinedAt: !8974)
!8981 = !DILocalVariable(name: "size", arg: 3, scope: !8970, file: !169, line: 446, type: !308)
!8982 = !DILocation(line: 446, column: 23, scope: !8970, inlinedAt: !8974)
!8983 = !DILocalVariable(name: "ret", scope: !8970, file: !169, line: 448, type: !334)
!8984 = !DILocation(line: 448, column: 8, scope: !8970, inlinedAt: !8974)
!8985 = !DILocalVariable(name: "flags", arg: 1, scope: !8986, file: !169, line: 318, type: !783)
!8986 = distinct !DISubprogram(name: "kmalloc_type", scope: !169, file: !169, line: 318, type: !8987, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!168, !783}
!8989 = !DILocation(line: 318, column: 67, scope: !8986, inlinedAt: !8990)
!8990 = distinct !DILocation(line: 553, column: 20, scope: !8975, inlinedAt: !8978)
!8991 = !DILocalVariable(name: "size", arg: 1, scope: !8992, file: !169, line: 346, type: !308)
!8992 = distinct !DISubprogram(name: "kmalloc_index", scope: !169, file: !169, line: 346, type: !8993, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8993 = !DISubroutineType(types: !8994)
!8994 = !{!7, !308}
!8995 = !DILocation(line: 346, column: 58, scope: !8992, inlinedAt: !8996)
!8996 = distinct !DILocation(line: 547, column: 11, scope: !8975, inlinedAt: !8978)
!8997 = !DILocalVariable(name: "size", arg: 1, scope: !8998, file: !169, line: 472, type: !308)
!8998 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !169, file: !169, line: 472, type: !8999, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!8999 = !DISubroutineType(types: !9000)
!9000 = !{!334, !308, !783, !7}
!9001 = !DILocation(line: 472, column: 28, scope: !8998, inlinedAt: !9002)
!9002 = distinct !DILocation(line: 481, column: 9, scope: !9003, inlinedAt: !9004)
!9003 = distinct !DISubprogram(name: "kmalloc_large", scope: !169, file: !169, line: 478, type: !8967, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9004 = distinct !DILocation(line: 545, column: 11, scope: !9005, inlinedAt: !8978)
!9005 = distinct !DILexicalBlock(scope: !8975, file: !169, line: 544, column: 7)
!9006 = !DILocalVariable(name: "flags", arg: 2, scope: !8998, file: !169, line: 472, type: !783)
!9007 = !DILocation(line: 472, column: 40, scope: !8998, inlinedAt: !9002)
!9008 = !DILocalVariable(name: "order", arg: 3, scope: !8998, file: !169, line: 472, type: !7)
!9009 = !DILocation(line: 472, column: 60, scope: !8998, inlinedAt: !9002)
!9010 = !DILocalVariable(name: "size", arg: 1, scope: !9003, file: !169, line: 478, type: !308)
!9011 = !DILocation(line: 478, column: 51, scope: !9003, inlinedAt: !9004)
!9012 = !DILocalVariable(name: "flags", arg: 2, scope: !9003, file: !169, line: 478, type: !783)
!9013 = !DILocation(line: 478, column: 63, scope: !9003, inlinedAt: !9004)
!9014 = !DILocalVariable(name: "order", scope: !9003, file: !169, line: 480, type: !7)
!9015 = !DILocation(line: 480, column: 15, scope: !9003, inlinedAt: !9004)
!9016 = !DILocalVariable(name: "size", arg: 1, scope: !8977, file: !169, line: 538, type: !308)
!9017 = !DILocation(line: 538, column: 45, scope: !8977, inlinedAt: !8978)
!9018 = !DILocalVariable(name: "flags", arg: 2, scope: !8977, file: !169, line: 538, type: !783)
!9019 = !DILocation(line: 538, column: 57, scope: !8977, inlinedAt: !8978)
!9020 = !DILocalVariable(name: "index", scope: !8975, file: !169, line: 542, type: !7)
!9021 = !DILocation(line: 542, column: 16, scope: !8975, inlinedAt: !8978)
!9022 = !DILocalVariable(name: "size", arg: 1, scope: !8966, file: !169, line: 662, type: !308)
!9023 = !DILocation(line: 662, column: 36, scope: !8966)
!9024 = !DILocalVariable(name: "flags", arg: 2, scope: !8966, file: !169, line: 662, type: !783)
!9025 = !DILocation(line: 662, column: 48, scope: !8966)
!9026 = !DILocation(line: 664, column: 17, scope: !8966)
!9027 = !DILocation(line: 664, column: 23, scope: !8966)
!9028 = !DILocation(line: 664, column: 29, scope: !8966)
!9029 = !DILocation(line: 540, column: 27, scope: !8976, inlinedAt: !8978)
!9030 = !DILocation(line: 540, column: 6, scope: !8976, inlinedAt: !8978)
!9031 = !DILocation(line: 540, column: 6, scope: !8977, inlinedAt: !8978)
!9032 = !DILocation(line: 544, column: 7, scope: !9005, inlinedAt: !8978)
!9033 = !DILocation(line: 544, column: 12, scope: !9005, inlinedAt: !8978)
!9034 = !DILocation(line: 544, column: 7, scope: !8975, inlinedAt: !8978)
!9035 = !DILocation(line: 545, column: 25, scope: !9005, inlinedAt: !8978)
!9036 = !DILocation(line: 545, column: 31, scope: !9005, inlinedAt: !8978)
!9037 = !DILocation(line: 480, column: 33, scope: !9003, inlinedAt: !9004)
!9038 = !DILocation(line: 480, column: 23, scope: !9003, inlinedAt: !9004)
!9039 = !DILocation(line: 481, column: 29, scope: !9003, inlinedAt: !9004)
!9040 = !DILocation(line: 481, column: 35, scope: !9003, inlinedAt: !9004)
!9041 = !DILocation(line: 481, column: 42, scope: !9003, inlinedAt: !9004)
!9042 = !DILocation(line: 474, column: 23, scope: !8998, inlinedAt: !9002)
!9043 = !DILocation(line: 474, column: 29, scope: !8998, inlinedAt: !9002)
!9044 = !DILocation(line: 474, column: 36, scope: !8998, inlinedAt: !9002)
!9045 = !DILocation(line: 474, column: 9, scope: !8998, inlinedAt: !9002)
!9046 = !DILocation(line: 545, column: 4, scope: !9005, inlinedAt: !8978)
!9047 = !DILocation(line: 547, column: 25, scope: !8975, inlinedAt: !8978)
!9048 = !DILocation(line: 348, column: 7, scope: !9049, inlinedAt: !8996)
!9049 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 348, column: 6)
!9050 = !DILocation(line: 348, column: 6, scope: !8992, inlinedAt: !8996)
!9051 = !DILocation(line: 349, column: 3, scope: !9049, inlinedAt: !8996)
!9052 = !DILocation(line: 351, column: 6, scope: !9053, inlinedAt: !8996)
!9053 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 351, column: 6)
!9054 = !DILocation(line: 351, column: 11, scope: !9053, inlinedAt: !8996)
!9055 = !DILocation(line: 351, column: 6, scope: !8992, inlinedAt: !8996)
!9056 = !DILocation(line: 352, column: 3, scope: !9053, inlinedAt: !8996)
!9057 = !DILocation(line: 354, column: 32, scope: !9058, inlinedAt: !8996)
!9058 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 354, column: 6)
!9059 = !DILocation(line: 354, column: 37, scope: !9058, inlinedAt: !8996)
!9060 = !DILocation(line: 354, column: 42, scope: !9058, inlinedAt: !8996)
!9061 = !DILocation(line: 354, column: 45, scope: !9058, inlinedAt: !8996)
!9062 = !DILocation(line: 354, column: 50, scope: !9058, inlinedAt: !8996)
!9063 = !DILocation(line: 354, column: 6, scope: !8992, inlinedAt: !8996)
!9064 = !DILocation(line: 355, column: 3, scope: !9058, inlinedAt: !8996)
!9065 = !DILocation(line: 356, column: 32, scope: !9066, inlinedAt: !8996)
!9066 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 356, column: 6)
!9067 = !DILocation(line: 356, column: 37, scope: !9066, inlinedAt: !8996)
!9068 = !DILocation(line: 356, column: 43, scope: !9066, inlinedAt: !8996)
!9069 = !DILocation(line: 356, column: 46, scope: !9066, inlinedAt: !8996)
!9070 = !DILocation(line: 356, column: 51, scope: !9066, inlinedAt: !8996)
!9071 = !DILocation(line: 356, column: 6, scope: !8992, inlinedAt: !8996)
!9072 = !DILocation(line: 357, column: 3, scope: !9066, inlinedAt: !8996)
!9073 = !DILocation(line: 358, column: 6, scope: !9074, inlinedAt: !8996)
!9074 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 358, column: 6)
!9075 = !DILocation(line: 358, column: 11, scope: !9074, inlinedAt: !8996)
!9076 = !DILocation(line: 358, column: 6, scope: !8992, inlinedAt: !8996)
!9077 = !DILocation(line: 358, column: 26, scope: !9074, inlinedAt: !8996)
!9078 = !DILocation(line: 359, column: 6, scope: !9079, inlinedAt: !8996)
!9079 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 359, column: 6)
!9080 = !DILocation(line: 359, column: 11, scope: !9079, inlinedAt: !8996)
!9081 = !DILocation(line: 359, column: 6, scope: !8992, inlinedAt: !8996)
!9082 = !DILocation(line: 359, column: 26, scope: !9079, inlinedAt: !8996)
!9083 = !DILocation(line: 360, column: 6, scope: !9084, inlinedAt: !8996)
!9084 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 360, column: 6)
!9085 = !DILocation(line: 360, column: 11, scope: !9084, inlinedAt: !8996)
!9086 = !DILocation(line: 360, column: 6, scope: !8992, inlinedAt: !8996)
!9087 = !DILocation(line: 360, column: 26, scope: !9084, inlinedAt: !8996)
!9088 = !DILocation(line: 361, column: 6, scope: !9089, inlinedAt: !8996)
!9089 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 361, column: 6)
!9090 = !DILocation(line: 361, column: 11, scope: !9089, inlinedAt: !8996)
!9091 = !DILocation(line: 361, column: 6, scope: !8992, inlinedAt: !8996)
!9092 = !DILocation(line: 361, column: 26, scope: !9089, inlinedAt: !8996)
!9093 = !DILocation(line: 362, column: 6, scope: !9094, inlinedAt: !8996)
!9094 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 362, column: 6)
!9095 = !DILocation(line: 362, column: 11, scope: !9094, inlinedAt: !8996)
!9096 = !DILocation(line: 362, column: 6, scope: !8992, inlinedAt: !8996)
!9097 = !DILocation(line: 362, column: 26, scope: !9094, inlinedAt: !8996)
!9098 = !DILocation(line: 363, column: 6, scope: !9099, inlinedAt: !8996)
!9099 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 363, column: 6)
!9100 = !DILocation(line: 363, column: 11, scope: !9099, inlinedAt: !8996)
!9101 = !DILocation(line: 363, column: 6, scope: !8992, inlinedAt: !8996)
!9102 = !DILocation(line: 363, column: 26, scope: !9099, inlinedAt: !8996)
!9103 = !DILocation(line: 364, column: 6, scope: !9104, inlinedAt: !8996)
!9104 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 364, column: 6)
!9105 = !DILocation(line: 364, column: 11, scope: !9104, inlinedAt: !8996)
!9106 = !DILocation(line: 364, column: 6, scope: !8992, inlinedAt: !8996)
!9107 = !DILocation(line: 364, column: 26, scope: !9104, inlinedAt: !8996)
!9108 = !DILocation(line: 365, column: 6, scope: !9109, inlinedAt: !8996)
!9109 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 365, column: 6)
!9110 = !DILocation(line: 365, column: 11, scope: !9109, inlinedAt: !8996)
!9111 = !DILocation(line: 365, column: 6, scope: !8992, inlinedAt: !8996)
!9112 = !DILocation(line: 365, column: 26, scope: !9109, inlinedAt: !8996)
!9113 = !DILocation(line: 366, column: 6, scope: !9114, inlinedAt: !8996)
!9114 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 366, column: 6)
!9115 = !DILocation(line: 366, column: 11, scope: !9114, inlinedAt: !8996)
!9116 = !DILocation(line: 366, column: 6, scope: !8992, inlinedAt: !8996)
!9117 = !DILocation(line: 366, column: 26, scope: !9114, inlinedAt: !8996)
!9118 = !DILocation(line: 367, column: 6, scope: !9119, inlinedAt: !8996)
!9119 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 367, column: 6)
!9120 = !DILocation(line: 367, column: 11, scope: !9119, inlinedAt: !8996)
!9121 = !DILocation(line: 367, column: 6, scope: !8992, inlinedAt: !8996)
!9122 = !DILocation(line: 367, column: 26, scope: !9119, inlinedAt: !8996)
!9123 = !DILocation(line: 368, column: 6, scope: !9124, inlinedAt: !8996)
!9124 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 368, column: 6)
!9125 = !DILocation(line: 368, column: 11, scope: !9124, inlinedAt: !8996)
!9126 = !DILocation(line: 368, column: 6, scope: !8992, inlinedAt: !8996)
!9127 = !DILocation(line: 368, column: 26, scope: !9124, inlinedAt: !8996)
!9128 = !DILocation(line: 369, column: 6, scope: !9129, inlinedAt: !8996)
!9129 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 369, column: 6)
!9130 = !DILocation(line: 369, column: 11, scope: !9129, inlinedAt: !8996)
!9131 = !DILocation(line: 369, column: 6, scope: !8992, inlinedAt: !8996)
!9132 = !DILocation(line: 369, column: 26, scope: !9129, inlinedAt: !8996)
!9133 = !DILocation(line: 370, column: 6, scope: !9134, inlinedAt: !8996)
!9134 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 370, column: 6)
!9135 = !DILocation(line: 370, column: 11, scope: !9134, inlinedAt: !8996)
!9136 = !DILocation(line: 370, column: 6, scope: !8992, inlinedAt: !8996)
!9137 = !DILocation(line: 370, column: 26, scope: !9134, inlinedAt: !8996)
!9138 = !DILocation(line: 371, column: 6, scope: !9139, inlinedAt: !8996)
!9139 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 371, column: 6)
!9140 = !DILocation(line: 371, column: 11, scope: !9139, inlinedAt: !8996)
!9141 = !DILocation(line: 371, column: 6, scope: !8992, inlinedAt: !8996)
!9142 = !DILocation(line: 371, column: 26, scope: !9139, inlinedAt: !8996)
!9143 = !DILocation(line: 372, column: 6, scope: !9144, inlinedAt: !8996)
!9144 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 372, column: 6)
!9145 = !DILocation(line: 372, column: 11, scope: !9144, inlinedAt: !8996)
!9146 = !DILocation(line: 372, column: 6, scope: !8992, inlinedAt: !8996)
!9147 = !DILocation(line: 372, column: 26, scope: !9144, inlinedAt: !8996)
!9148 = !DILocation(line: 373, column: 6, scope: !9149, inlinedAt: !8996)
!9149 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 373, column: 6)
!9150 = !DILocation(line: 373, column: 11, scope: !9149, inlinedAt: !8996)
!9151 = !DILocation(line: 373, column: 6, scope: !8992, inlinedAt: !8996)
!9152 = !DILocation(line: 373, column: 26, scope: !9149, inlinedAt: !8996)
!9153 = !DILocation(line: 374, column: 6, scope: !9154, inlinedAt: !8996)
!9154 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 374, column: 6)
!9155 = !DILocation(line: 374, column: 11, scope: !9154, inlinedAt: !8996)
!9156 = !DILocation(line: 374, column: 6, scope: !8992, inlinedAt: !8996)
!9157 = !DILocation(line: 374, column: 26, scope: !9154, inlinedAt: !8996)
!9158 = !DILocation(line: 375, column: 6, scope: !9159, inlinedAt: !8996)
!9159 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 375, column: 6)
!9160 = !DILocation(line: 375, column: 11, scope: !9159, inlinedAt: !8996)
!9161 = !DILocation(line: 375, column: 6, scope: !8992, inlinedAt: !8996)
!9162 = !DILocation(line: 375, column: 27, scope: !9159, inlinedAt: !8996)
!9163 = !DILocation(line: 376, column: 6, scope: !9164, inlinedAt: !8996)
!9164 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 376, column: 6)
!9165 = !DILocation(line: 376, column: 11, scope: !9164, inlinedAt: !8996)
!9166 = !DILocation(line: 376, column: 6, scope: !8992, inlinedAt: !8996)
!9167 = !DILocation(line: 376, column: 32, scope: !9164, inlinedAt: !8996)
!9168 = !DILocation(line: 377, column: 6, scope: !9169, inlinedAt: !8996)
!9169 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 377, column: 6)
!9170 = !DILocation(line: 377, column: 11, scope: !9169, inlinedAt: !8996)
!9171 = !DILocation(line: 377, column: 6, scope: !8992, inlinedAt: !8996)
!9172 = !DILocation(line: 377, column: 32, scope: !9169, inlinedAt: !8996)
!9173 = !DILocation(line: 378, column: 6, scope: !9174, inlinedAt: !8996)
!9174 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 378, column: 6)
!9175 = !DILocation(line: 378, column: 11, scope: !9174, inlinedAt: !8996)
!9176 = !DILocation(line: 378, column: 6, scope: !8992, inlinedAt: !8996)
!9177 = !DILocation(line: 378, column: 32, scope: !9174, inlinedAt: !8996)
!9178 = !DILocation(line: 379, column: 6, scope: !9179, inlinedAt: !8996)
!9179 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 379, column: 6)
!9180 = !DILocation(line: 379, column: 11, scope: !9179, inlinedAt: !8996)
!9181 = !DILocation(line: 379, column: 6, scope: !8992, inlinedAt: !8996)
!9182 = !DILocation(line: 379, column: 33, scope: !9179, inlinedAt: !8996)
!9183 = !DILocation(line: 380, column: 6, scope: !9184, inlinedAt: !8996)
!9184 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 380, column: 6)
!9185 = !DILocation(line: 380, column: 11, scope: !9184, inlinedAt: !8996)
!9186 = !DILocation(line: 380, column: 6, scope: !8992, inlinedAt: !8996)
!9187 = !DILocation(line: 380, column: 33, scope: !9184, inlinedAt: !8996)
!9188 = !DILocation(line: 381, column: 6, scope: !9189, inlinedAt: !8996)
!9189 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 381, column: 6)
!9190 = !DILocation(line: 381, column: 11, scope: !9189, inlinedAt: !8996)
!9191 = !DILocation(line: 381, column: 6, scope: !8992, inlinedAt: !8996)
!9192 = !DILocation(line: 381, column: 33, scope: !9189, inlinedAt: !8996)
!9193 = !DILocation(line: 382, column: 2, scope: !9194, inlinedAt: !8996)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !169, line: 382, column: 2)
!9195 = distinct !DILexicalBlock(scope: !8992, file: !169, line: 382, column: 2)
!9196 = !{i32 -2143765509, i32 -2143765480, i32 -2143765434, i32 -2143765376, i32 -2143765322, i32 -2143765268, i32 -2143765213, i32 -2143765182}
!9197 = !DILocation(line: 382, column: 2, scope: !9198, inlinedAt: !8996)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !169, line: 382, column: 2)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !169, line: 382, column: 2)
!9200 = !{i32 -2143764739, i32 -2143764732, i32 -2143764678, i32 -2143764647, i32 -2143764617}
!9201 = !DILocation(line: 382, column: 2, scope: !9199, inlinedAt: !8996)
!9202 = !DILocation(line: 386, column: 1, scope: !8992, inlinedAt: !8996)
!9203 = !DILocation(line: 547, column: 9, scope: !8975, inlinedAt: !8978)
!9204 = !DILocation(line: 549, column: 8, scope: !9205, inlinedAt: !8978)
!9205 = distinct !DILexicalBlock(scope: !8975, file: !169, line: 549, column: 7)
!9206 = !DILocation(line: 549, column: 7, scope: !8975, inlinedAt: !8978)
!9207 = !DILocation(line: 550, column: 4, scope: !9205, inlinedAt: !8978)
!9208 = !DILocation(line: 553, column: 33, scope: !8975, inlinedAt: !8978)
!9209 = !DILocation(line: 325, column: 6, scope: !9210, inlinedAt: !8990)
!9210 = distinct !DILexicalBlock(scope: !8986, file: !169, line: 325, column: 6)
!9211 = !DILocation(line: 325, column: 6, scope: !8986, inlinedAt: !8990)
!9212 = !DILocation(line: 326, column: 3, scope: !9210, inlinedAt: !8990)
!9213 = !DILocation(line: 332, column: 9, scope: !8986, inlinedAt: !8990)
!9214 = !DILocation(line: 332, column: 15, scope: !8986, inlinedAt: !8990)
!9215 = !DILocation(line: 332, column: 2, scope: !8986, inlinedAt: !8990)
!9216 = !DILocation(line: 336, column: 1, scope: !8986, inlinedAt: !8990)
!9217 = !DILocation(line: 553, column: 5, scope: !8975, inlinedAt: !8978)
!9218 = !DILocation(line: 553, column: 41, scope: !8975, inlinedAt: !8978)
!9219 = !DILocation(line: 554, column: 5, scope: !8975, inlinedAt: !8978)
!9220 = !DILocation(line: 554, column: 12, scope: !8975, inlinedAt: !8978)
!9221 = !DILocation(line: 448, column: 31, scope: !8970, inlinedAt: !8974)
!9222 = !DILocation(line: 448, column: 34, scope: !8970, inlinedAt: !8974)
!9223 = !DILocation(line: 448, column: 14, scope: !8970, inlinedAt: !8974)
!9224 = !DILocation(line: 450, column: 22, scope: !8970, inlinedAt: !8974)
!9225 = !DILocation(line: 450, column: 25, scope: !8970, inlinedAt: !8974)
!9226 = !DILocation(line: 450, column: 30, scope: !8970, inlinedAt: !8974)
!9227 = !DILocation(line: 450, column: 36, scope: !8970, inlinedAt: !8974)
!9228 = !DILocation(line: 450, column: 8, scope: !8970, inlinedAt: !8974)
!9229 = !DILocation(line: 450, column: 6, scope: !8970, inlinedAt: !8974)
!9230 = !DILocation(line: 451, column: 9, scope: !8970, inlinedAt: !8974)
!9231 = !DILocation(line: 552, column: 3, scope: !8975, inlinedAt: !8978)
!9232 = !DILocation(line: 557, column: 19, scope: !8977, inlinedAt: !8978)
!9233 = !DILocation(line: 557, column: 25, scope: !8977, inlinedAt: !8978)
!9234 = !DILocation(line: 557, column: 9, scope: !8977, inlinedAt: !8978)
!9235 = !DILocation(line: 557, column: 2, scope: !8977, inlinedAt: !8978)
!9236 = !DILocation(line: 558, column: 1, scope: !8977, inlinedAt: !8978)
!9237 = !DILocation(line: 664, column: 2, scope: !8966)
!9238 = distinct !DISubprogram(name: "scsi_sglist", scope: !4978, file: !4978, line: 184, type: !9239, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9239 = !DISubroutineType(types: !9240)
!9240 = !{!5015, !4976}
!9241 = !DILocalVariable(name: "cmd", arg: 1, scope: !9238, file: !4978, line: 184, type: !4976)
!9242 = !DILocation(line: 184, column: 65, scope: !9238)
!9243 = !DILocation(line: 186, column: 9, scope: !9238)
!9244 = !DILocation(line: 186, column: 14, scope: !9238)
!9245 = !DILocation(line: 186, column: 18, scope: !9238)
!9246 = !DILocation(line: 186, column: 24, scope: !9238)
!9247 = !DILocation(line: 186, column: 2, scope: !9238)
!9248 = !DILocalVariable(name: "dev", arg: 1, scope: !6067, file: !6068, line: 271, type: !194)
!9249 = !DILocation(line: 271, column: 62, scope: !6067)
!9250 = !DILocalVariable(name: "ptr", arg: 2, scope: !6067, file: !6068, line: 271, type: !334)
!9251 = !DILocation(line: 271, column: 73, scope: !6067)
!9252 = !DILocalVariable(name: "size", arg: 3, scope: !6067, file: !6068, line: 272, type: !308)
!9253 = !DILocation(line: 272, column: 10, scope: !6067)
!9254 = !DILocalVariable(name: "dir", arg: 4, scope: !6067, file: !6068, line: 272, type: !146)
!9255 = !DILocation(line: 272, column: 40, scope: !6067)
!9256 = !DILocalVariable(name: "attrs", arg: 5, scope: !6067, file: !6068, line: 272, type: !189)
!9257 = !DILocation(line: 272, column: 59, scope: !6067)
!9258 = !DILocalVariable(name: "__ret_warn_once", scope: !9259, file: !6068, line: 275, type: !245)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !6068, line: 275, column: 6)
!9260 = distinct !DILexicalBlock(scope: !6067, file: !6068, line: 275, column: 6)
!9261 = !DILocation(line: 275, column: 6, scope: !9259)
!9262 = !DILocation(line: 275, column: 6, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9259, file: !6068, line: 275, column: 6)
!9264 = !DILocation(line: 0, scope: !9263)
!9265 = !DILocation(line: 275, column: 6, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9263, file: !6068, line: 275, column: 6)
!9267 = !DILocalVariable(name: "__ret_warn_on", scope: !9268, file: !6068, line: 275, type: !245)
!9268 = distinct !DILexicalBlock(scope: !9266, file: !6068, line: 275, column: 6)
!9269 = !DILocation(line: 275, column: 6, scope: !9268)
!9270 = !DILocation(line: 275, column: 6, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9268, file: !6068, line: 275, column: 6)
!9272 = !DILocation(line: 275, column: 6, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9271, file: !6068, line: 275, column: 6)
!9274 = !DILocation(line: 275, column: 6, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9273, file: !6068, line: 275, column: 6)
!9276 = !DILocation(line: 275, column: 6, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !6068, line: 275, column: 6)
!9278 = !DILocation(line: 275, column: 6, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9277, file: !6068, line: 275, column: 6)
!9280 = !DILocation(line: 275, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !6068, line: 275, column: 6)
!9282 = !{i32 -2140901939, i32 -2140901910, i32 -2140901864, i32 -2140901806, i32 -2140901752, i32 -2140901698, i32 -2140901643, i32 -2140901612}
!9283 = !DILocation(line: 275, column: 6, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9277, file: !6068, line: 275, column: 6)
!9285 = !{i32 -2140901192, i32 -2140901185, i32 -2140901133, i32 -2140901102, i32 -2140901072}
!9286 = !DILocation(line: 275, column: 6, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9277, file: !6068, line: 275, column: 6)
!9288 = !DILocation(line: 275, column: 6, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9273, file: !6068, line: 275, column: 6)
!9290 = !DILocation(line: 275, column: 6, scope: !9260)
!9291 = !DILocation(line: 275, column: 6, scope: !6067)
!9292 = !DILocation(line: 277, column: 3, scope: !9260)
!9293 = !DILocation(line: 278, column: 23, scope: !6067)
!9294 = !DILocation(line: 278, column: 28, scope: !6067)
!9295 = !DILocation(line: 278, column: 33, scope: !6067)
!9296 = !DILocation(line: 278, column: 2, scope: !6067)
!9297 = !DILocation(line: 279, column: 28, scope: !6067)
!9298 = !DILocation(line: 279, column: 33, scope: !6067)
!9299 = !DILocation(line: 279, column: 52, scope: !6067)
!9300 = !DILocation(line: 280, column: 4, scope: !6067)
!9301 = !DILocation(line: 280, column: 10, scope: !6067)
!9302 = !DILocation(line: 280, column: 15, scope: !6067)
!9303 = !DILocation(line: 279, column: 9, scope: !6067)
!9304 = !DILocation(line: 279, column: 2, scope: !6067)
!9305 = !DILocation(line: 281, column: 1, scope: !6067)
!9306 = distinct !DISubprogram(name: "dma_mapping_error", scope: !6068, file: !6068, line: 94, type: !9307, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!245, !194, !977}
!9309 = !DILocalVariable(name: "dev", arg: 1, scope: !9306, file: !6068, line: 94, type: !194)
!9310 = !DILocation(line: 94, column: 52, scope: !9306)
!9311 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !9306, file: !6068, line: 94, type: !977)
!9312 = !DILocation(line: 94, column: 68, scope: !9306)
!9313 = !DILocation(line: 96, column: 26, scope: !9306)
!9314 = !DILocation(line: 96, column: 31, scope: !9306)
!9315 = !DILocation(line: 96, column: 2, scope: !9306)
!9316 = !DILocation(line: 98, column: 6, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9306, file: !6068, line: 98, column: 6)
!9318 = !DILocation(line: 98, column: 15, scope: !9317)
!9319 = !DILocation(line: 98, column: 6, scope: !9306)
!9320 = !DILocation(line: 99, column: 3, scope: !9317)
!9321 = !DILocation(line: 100, column: 2, scope: !9306)
!9322 = !DILocation(line: 101, column: 1, scope: !9306)
!9323 = distinct !DISubprogram(name: "dev_name", scope: !114, file: !114, line: 609, type: !9324, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!202, !4686}
!9326 = !DILocalVariable(name: "dev", arg: 1, scope: !9323, file: !114, line: 609, type: !4686)
!9327 = !DILocation(line: 609, column: 57, scope: !9323)
!9328 = !DILocation(line: 612, column: 6, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9323, file: !114, line: 612, column: 6)
!9330 = !DILocation(line: 612, column: 11, scope: !9329)
!9331 = !DILocation(line: 612, column: 6, scope: !9323)
!9332 = !DILocation(line: 613, column: 10, scope: !9329)
!9333 = !DILocation(line: 613, column: 15, scope: !9329)
!9334 = !DILocation(line: 613, column: 3, scope: !9329)
!9335 = !DILocation(line: 615, column: 23, scope: !9323)
!9336 = !DILocation(line: 615, column: 28, scope: !9323)
!9337 = !DILocation(line: 615, column: 9, scope: !9323)
!9338 = !DILocation(line: 615, column: 2, scope: !9323)
!9339 = !DILocation(line: 616, column: 1, scope: !9323)
!9340 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !6068, file: !6068, line: 87, type: !9341, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{null, !194, !3164, !189}
!9343 = !DILocalVariable(name: "dev", arg: 1, scope: !9340, file: !6068, line: 87, type: !194)
!9344 = !DILocation(line: 87, column: 56, scope: !9340)
!9345 = !DILocalVariable(name: "addr", arg: 2, scope: !9340, file: !6068, line: 87, type: !3164)
!9346 = !DILocation(line: 87, column: 73, scope: !9340)
!9347 = !DILocalVariable(name: "len", arg: 3, scope: !9340, file: !6068, line: 88, type: !189)
!9348 = !DILocation(line: 88, column: 17, scope: !9340)
!9349 = !DILocation(line: 90, column: 1, scope: !9340)
!9350 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !9351, file: !9351, line: 18, type: !9352, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9351 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!9352 = !DISubroutineType(types: !9353)
!9353 = !{!189, !189}
!9354 = !DILocalVariable(name: "x", arg: 1, scope: !9350, file: !9351, line: 18, type: !189)
!9355 = !DILocation(line: 18, column: 63, scope: !9350)
!9356 = !DILocalVariable(name: "y", scope: !9350, file: !9351, line: 20, type: !189)
!9357 = !DILocation(line: 20, column: 16, scope: !9350)
!9358 = !DILocation(line: 20, column: 20, scope: !9350)
!9359 = !DILocation(line: 20, column: 22, scope: !9350)
!9360 = !DILocation(line: 23, column: 6, scope: !9350)
!9361 = !DILocation(line: 23, column: 12, scope: !9350)
!9362 = !DILocation(line: 23, column: 16, scope: !9350)
!9363 = !DILocation(line: 23, column: 14, scope: !9350)
!9364 = !DILocation(line: 23, column: 11, scope: !9350)
!9365 = !DILocation(line: 23, column: 21, scope: !9350)
!9366 = !DILocation(line: 23, column: 55, scope: !9350)
!9367 = !DILocation(line: 23, column: 53, scope: !9350)
!9368 = !DILocation(line: 23, column: 8, scope: !9350)
!9369 = !DILocation(line: 23, column: 4, scope: !9350)
!9370 = !DILocation(line: 25, column: 9, scope: !9350)
!9371 = !DILocation(line: 25, column: 2, scope: !9350)
!9372 = distinct !DISubprogram(name: "kobject_name", scope: !199, file: !199, line: 88, type: !9373, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{!202, !9375}
!9375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9376, size: 64)
!9376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!9377 = !DILocalVariable(name: "kobj", arg: 1, scope: !9372, file: !199, line: 88, type: !9375)
!9378 = !DILocation(line: 88, column: 62, scope: !9372)
!9379 = !DILocation(line: 90, column: 9, scope: !9372)
!9380 = !DILocation(line: 90, column: 15, scope: !9372)
!9381 = !DILocation(line: 90, column: 2, scope: !9372)
!9382 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !6068, file: !6068, line: 83, type: !9383, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{null, !194, !977}
!9385 = !DILocalVariable(name: "dev", arg: 1, scope: !9382, file: !6068, line: 83, type: !194)
!9386 = !DILocation(line: 83, column: 59, scope: !9382)
!9387 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !9382, file: !6068, line: 84, type: !977)
!9388 = !DILocation(line: 84, column: 14, scope: !9382)
!9389 = !DILocation(line: 86, column: 1, scope: !9382)
!9390 = distinct !DISubprogram(name: "get_order", scope: !9391, file: !9391, line: 29, type: !9392, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9391 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9392 = !DISubroutineType(types: !9393)
!9393 = !{!245, !189}
!9394 = !DILocalVariable(name: "x", arg: 1, scope: !9395, file: !9396, line: 366, type: !409)
!9395 = distinct !DISubprogram(name: "fls64", scope: !9396, file: !9396, line: 366, type: !9397, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9396 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9397 = !DISubroutineType(types: !9398)
!9398 = !{!245, !409}
!9399 = !DILocation(line: 366, column: 40, scope: !9395, inlinedAt: !9400)
!9400 = distinct !DILocation(line: 46, column: 9, scope: !9390)
!9401 = !DILocalVariable(name: "bitpos", scope: !9395, file: !9396, line: 368, type: !245)
!9402 = !DILocation(line: 368, column: 6, scope: !9395, inlinedAt: !9400)
!9403 = !DILocalVariable(name: "size", arg: 1, scope: !9390, file: !9391, line: 29, type: !189)
!9404 = !DILocation(line: 29, column: 63, scope: !9390)
!9405 = !DILocation(line: 31, column: 27, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9390, file: !9391, line: 31, column: 6)
!9407 = !DILocation(line: 31, column: 6, scope: !9406)
!9408 = !DILocation(line: 31, column: 6, scope: !9390)
!9409 = !DILocation(line: 32, column: 8, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9411, file: !9391, line: 32, column: 7)
!9411 = distinct !DILexicalBlock(scope: !9406, file: !9391, line: 31, column: 34)
!9412 = !DILocation(line: 32, column: 7, scope: !9411)
!9413 = !DILocation(line: 33, column: 4, scope: !9410)
!9414 = !DILocation(line: 35, column: 7, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9411, file: !9391, line: 35, column: 7)
!9416 = !DILocation(line: 35, column: 12, scope: !9415)
!9417 = !DILocation(line: 35, column: 7, scope: !9411)
!9418 = !DILocation(line: 36, column: 4, scope: !9415)
!9419 = !DILocation(line: 38, column: 10, scope: !9411)
!9420 = !DILocation(line: 38, column: 28, scope: !9411)
!9421 = !DILocation(line: 38, column: 41, scope: !9411)
!9422 = !DILocation(line: 38, column: 3, scope: !9411)
!9423 = !DILocation(line: 41, column: 6, scope: !9390)
!9424 = !DILocation(line: 42, column: 7, scope: !9390)
!9425 = !DILocation(line: 46, column: 15, scope: !9390)
!9426 = !DILocation(line: 374, column: 2, scope: !9395, inlinedAt: !9400)
!9427 = !DILocation(line: 376, column: 14, scope: !9395, inlinedAt: !9400)
!9428 = !{i32 650412}
!9429 = !DILocation(line: 377, column: 9, scope: !9395, inlinedAt: !9400)
!9430 = !DILocation(line: 377, column: 16, scope: !9395, inlinedAt: !9400)
!9431 = !DILocation(line: 46, column: 2, scope: !9390)
!9432 = !DILocation(line: 48, column: 1, scope: !9390)
!9433 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9434, file: !9434, line: 30, type: !9435, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9434 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9435 = !DISubroutineType(types: !9436)
!9436 = !{!245, !408}
!9437 = !DILocation(line: 366, column: 40, scope: !9395, inlinedAt: !9438)
!9438 = distinct !DILocation(line: 32, column: 9, scope: !9433)
!9439 = !DILocation(line: 368, column: 6, scope: !9395, inlinedAt: !9438)
!9440 = !DILocalVariable(name: "n", arg: 1, scope: !9433, file: !9434, line: 30, type: !408)
!9441 = !DILocation(line: 30, column: 21, scope: !9433)
!9442 = !DILocation(line: 32, column: 15, scope: !9433)
!9443 = !DILocation(line: 374, column: 2, scope: !9395, inlinedAt: !9438)
!9444 = !DILocation(line: 376, column: 14, scope: !9395, inlinedAt: !9438)
!9445 = !DILocation(line: 377, column: 9, scope: !9395, inlinedAt: !9438)
!9446 = !DILocation(line: 377, column: 16, scope: !9395, inlinedAt: !9438)
!9447 = !DILocation(line: 32, column: 18, scope: !9433)
!9448 = !DILocation(line: 32, column: 2, scope: !9433)
!9449 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9450, file: !9450, line: 137, type: !9451, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9450 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9451 = !DISubroutineType(types: !9452)
!9452 = !{!334, !992, !3164, !308, !783}
!9453 = !DILocalVariable(name: "s", arg: 1, scope: !9449, file: !9450, line: 137, type: !992)
!9454 = !DILocation(line: 137, column: 54, scope: !9449)
!9455 = !DILocalVariable(name: "object", arg: 2, scope: !9449, file: !9450, line: 137, type: !3164)
!9456 = !DILocation(line: 137, column: 69, scope: !9449)
!9457 = !DILocalVariable(name: "size", arg: 3, scope: !9449, file: !9450, line: 138, type: !308)
!9458 = !DILocation(line: 138, column: 12, scope: !9449)
!9459 = !DILocalVariable(name: "flags", arg: 4, scope: !9449, file: !9450, line: 138, type: !783)
!9460 = !DILocation(line: 138, column: 24, scope: !9449)
!9461 = !DILocation(line: 140, column: 17, scope: !9449)
!9462 = !DILocation(line: 140, column: 2, scope: !9449)
!9463 = distinct !DISubprogram(name: "AscReadLramByte", scope: !3, file: !3, line: 3773, type: !9464, scopeLine: 3774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9464 = !DISubroutineType(types: !9465)
!9465 = !{!5245, !7, !5240}
!9466 = !DILocalVariable(name: "iop_base", arg: 1, scope: !9463, file: !3, line: 3773, type: !7)
!9467 = !DILocation(line: 3773, column: 39, scope: !9463)
!9468 = !DILocalVariable(name: "addr", arg: 2, scope: !9463, file: !3, line: 3773, type: !5240)
!9469 = !DILocation(line: 3773, column: 56, scope: !9463)
!9470 = !DILocalVariable(name: "byte_data", scope: !9463, file: !3, line: 3775, type: !414)
!9471 = !DILocation(line: 3775, column: 16, scope: !9463)
!9472 = !DILocalVariable(name: "word_data", scope: !9463, file: !3, line: 3776, type: !303)
!9473 = !DILocation(line: 3776, column: 17, scope: !9463)
!9474 = !DILocation(line: 3778, column: 6, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 3778, column: 6)
!9476 = !DILocation(line: 3778, column: 6, scope: !9463)
!9477 = !DILocation(line: 3779, column: 3, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 3778, column: 24)
!9479 = !DILocation(line: 3780, column: 15, scope: !9478)
!9480 = !DILocation(line: 3780, column: 13, scope: !9478)
!9481 = !DILocation(line: 3781, column: 16, scope: !9478)
!9482 = !DILocation(line: 3781, column: 26, scope: !9478)
!9483 = !DILocation(line: 3781, column: 32, scope: !9478)
!9484 = !DILocation(line: 3781, column: 15, scope: !9478)
!9485 = !DILocation(line: 3781, column: 13, scope: !9478)
!9486 = !DILocation(line: 3782, column: 2, scope: !9478)
!9487 = !DILocation(line: 3783, column: 3, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 3782, column: 9)
!9489 = !DILocation(line: 3784, column: 15, scope: !9488)
!9490 = !DILocation(line: 3784, column: 13, scope: !9488)
!9491 = !DILocation(line: 3785, column: 15, scope: !9488)
!9492 = !DILocation(line: 3785, column: 25, scope: !9488)
!9493 = !DILocation(line: 3785, column: 13, scope: !9488)
!9494 = !DILocation(line: 3787, column: 9, scope: !9463)
!9495 = !DILocation(line: 3787, column: 2, scope: !9463)
!9496 = distinct !DISubprogram(name: "AscMsgOutSDTR", scope: !3, file: !3, line: 6286, type: !9497, scopeLine: 6287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{!5245, !6375, !5245, !5245}
!9499 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !9496, file: !3, line: 6286, type: !6375)
!9500 = !DILocation(line: 6286, column: 28, scope: !9496)
!9501 = !DILocalVariable(name: "sdtr_period", arg: 2, scope: !9496, file: !3, line: 6286, type: !5245)
!9502 = !DILocation(line: 6286, column: 43, scope: !9496)
!9503 = !DILocalVariable(name: "sdtr_offset", arg: 3, scope: !9496, file: !3, line: 6286, type: !5245)
!9504 = !DILocation(line: 6286, column: 62, scope: !9496)
!9505 = !DILocalVariable(name: "iop_base", scope: !9496, file: !3, line: 6288, type: !7)
!9506 = !DILocation(line: 6288, column: 11, scope: !9496)
!9507 = !DILocation(line: 6288, column: 22, scope: !9496)
!9508 = !DILocation(line: 6288, column: 31, scope: !9496)
!9509 = !DILocalVariable(name: "sdtr_period_index", scope: !9496, file: !3, line: 6289, type: !5245)
!9510 = !DILocation(line: 6289, column: 8, scope: !9496)
!9511 = !DILocation(line: 6289, column: 49, scope: !9496)
!9512 = !DILocation(line: 6289, column: 58, scope: !9496)
!9513 = !DILocation(line: 6289, column: 28, scope: !9496)
!9514 = !DILocalVariable(name: "sdtr_buf", scope: !9496, file: !3, line: 6290, type: !9515)
!9515 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXT_MSG", file: !3, line: 451, baseType: !9516)
!9516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ext_msg", file: !3, line: 431, size: 64, elements: !9517)
!9517 = !{!9518, !9519, !9520, !9521, !9540}
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !9516, file: !3, line: 432, baseType: !5245, size: 8)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !9516, file: !3, line: 433, baseType: !5245, size: 8, offset: 8)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "msg_req", scope: !9516, file: !3, line: 434, baseType: !5245, size: 8, offset: 16)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "u_ext_msg", scope: !9516, file: !3, line: 449, baseType: !9522, size: 32, offset: 24)
!9522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9516, file: !3, line: 435, size: 32, elements: !9523)
!9523 = !{!9524, !9529, !9533}
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !9522, file: !3, line: 439, baseType: !9525, size: 16)
!9525 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9522, file: !3, line: 436, size: 16, elements: !9526)
!9526 = !{!9527, !9528}
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_xfer_period", scope: !9525, file: !3, line: 437, baseType: !5245, size: 8)
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr_req_ack_offset", scope: !9525, file: !3, line: 438, baseType: !5245, size: 8, offset: 8)
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !9522, file: !3, line: 442, baseType: !9530, size: 8)
!9530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9522, file: !3, line: 440, size: 8, elements: !9531)
!9531 = !{!9532}
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr_width", scope: !9530, file: !3, line: 441, baseType: !5245, size: 8)
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "mdp", scope: !9522, file: !3, line: 448, baseType: !9534, size: 32)
!9534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9522, file: !3, line: 443, size: 32, elements: !9535)
!9535 = !{!9536, !9537, !9538, !9539}
!9536 = !DIDerivedType(tag: DW_TAG_member, name: "mdp_b3", scope: !9534, file: !3, line: 444, baseType: !5245, size: 8)
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "mdp_b2", scope: !9534, file: !3, line: 445, baseType: !5245, size: 8, offset: 8)
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "mdp_b1", scope: !9534, file: !3, line: 446, baseType: !5245, size: 8, offset: 16)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "mdp_b0", scope: !9534, file: !3, line: 447, baseType: !5245, size: 8, offset: 24)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !9516, file: !3, line: 450, baseType: !5245, size: 8, offset: 56)
!9541 = !DILocation(line: 6290, column: 10, scope: !9496)
!9542 = !DILocation(line: 6290, column: 21, scope: !9496)
!9543 = !DILocation(line: 6294, column: 4, scope: !9496)
!9544 = !DILocation(line: 6294, column: 18, scope: !9496)
!9545 = !DILocation(line: 6295, column: 21, scope: !9496)
!9546 = !DILocation(line: 6297, column: 14, scope: !9496)
!9547 = !DILocation(line: 6299, column: 6, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 6299, column: 6)
!9549 = !DILocation(line: 6299, column: 27, scope: !9548)
!9550 = !DILocation(line: 6299, column: 36, scope: !9548)
!9551 = !DILocation(line: 6299, column: 24, scope: !9548)
!9552 = !DILocation(line: 6299, column: 6, scope: !9496)
!9553 = !DILocation(line: 6300, column: 27, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 6299, column: 52)
!9555 = !DILocation(line: 6301, column: 6, scope: !9554)
!9556 = !DILocation(line: 6300, column: 3, scope: !9554)
!9557 = !DILocation(line: 6303, column: 12, scope: !9554)
!9558 = !DILocation(line: 6303, column: 30, scope: !9554)
!9559 = !DILocation(line: 6303, column: 38, scope: !9554)
!9560 = !DILocation(line: 6303, column: 36, scope: !9554)
!9561 = !DILocation(line: 6303, column: 10, scope: !9554)
!9562 = !DILocation(line: 6303, column: 3, scope: !9554)
!9563 = !DILocation(line: 6305, column: 12, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 6304, column: 9)
!9565 = !DILocation(line: 6305, column: 27, scope: !9564)
!9566 = !DILocation(line: 6306, column: 27, scope: !9564)
!9567 = !DILocation(line: 6307, column: 6, scope: !9564)
!9568 = !DILocation(line: 6306, column: 3, scope: !9564)
!9569 = !DILocation(line: 6309, column: 3, scope: !9564)
!9570 = !DILocation(line: 6311, column: 1, scope: !9496)
!9571 = distinct !DISubprogram(name: "AscSetLibErrorCode", scope: !3, file: !3, line: 6224, type: !9572, scopeLine: 6225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9572 = !DISubroutineType(types: !9573)
!9573 = !{!245, !6375, !5240}
!9574 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !9571, file: !3, line: 6224, type: !6375)
!9575 = !DILocation(line: 6224, column: 44, scope: !9571)
!9576 = !DILocalVariable(name: "err_code", arg: 2, scope: !9571, file: !3, line: 6224, type: !5240)
!9577 = !DILocation(line: 6224, column: 60, scope: !9571)
!9578 = !DILocation(line: 6226, column: 6, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 6226, column: 6)
!9580 = !DILocation(line: 6226, column: 15, scope: !9579)
!9581 = !DILocation(line: 6226, column: 24, scope: !9579)
!9582 = !DILocation(line: 6226, column: 6, scope: !9571)
!9583 = !DILocation(line: 6227, column: 23, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 6226, column: 30)
!9585 = !DILocation(line: 6227, column: 3, scope: !9584)
!9586 = !DILocation(line: 6227, column: 12, scope: !9584)
!9587 = !DILocation(line: 6227, column: 21, scope: !9584)
!9588 = !DILocation(line: 6228, column: 20, scope: !9584)
!9589 = !DILocation(line: 6228, column: 29, scope: !9584)
!9590 = !DILocation(line: 6229, column: 6, scope: !9584)
!9591 = !DILocation(line: 6228, column: 3, scope: !9584)
!9592 = !DILocation(line: 6230, column: 2, scope: !9584)
!9593 = !DILocation(line: 6231, column: 9, scope: !9571)
!9594 = !DILocation(line: 6231, column: 2, scope: !9571)
!9595 = distinct !DISubprogram(name: "AscSgListToQueue", scope: !3, file: !3, line: 7854, type: !4056, scopeLine: 7855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9596 = !DILocalVariable(name: "sg_list", arg: 1, scope: !9595, file: !3, line: 7854, type: !245)
!9597 = !DILocation(line: 7854, column: 33, scope: !9595)
!9598 = !DILocalVariable(name: "n_sg_list_qs", scope: !9595, file: !3, line: 7856, type: !245)
!9599 = !DILocation(line: 7856, column: 6, scope: !9595)
!9600 = !DILocation(line: 7858, column: 19, scope: !9595)
!9601 = !DILocation(line: 7858, column: 27, scope: !9595)
!9602 = !DILocation(line: 7858, column: 32, scope: !9595)
!9603 = !DILocation(line: 7858, column: 15, scope: !9595)
!9604 = !DILocation(line: 7859, column: 8, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 7859, column: 6)
!9606 = !DILocation(line: 7859, column: 16, scope: !9605)
!9607 = !DILocation(line: 7859, column: 21, scope: !9605)
!9608 = !DILocation(line: 7859, column: 42, scope: !9605)
!9609 = !DILocation(line: 7859, column: 6, scope: !9595)
!9610 = !DILocation(line: 7860, column: 15, scope: !9605)
!9611 = !DILocation(line: 7860, column: 3, scope: !9605)
!9612 = !DILocation(line: 7861, column: 9, scope: !9595)
!9613 = !DILocation(line: 7861, column: 22, scope: !9595)
!9614 = !DILocation(line: 7861, column: 2, scope: !9595)
!9615 = distinct !DISubprogram(name: "AscGetNumOfFreeQueue", scope: !3, file: !3, line: 7865, type: !9616, scopeLine: 7866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{!5229, !6375, !5245, !5245}
!9618 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !9615, file: !3, line: 7865, type: !6375)
!9619 = !DILocation(line: 7865, column: 35, scope: !9615)
!9620 = !DILocalVariable(name: "target_ix", arg: 2, scope: !9615, file: !3, line: 7865, type: !5245)
!9621 = !DILocation(line: 7865, column: 50, scope: !9615)
!9622 = !DILocalVariable(name: "n_qs", arg: 3, scope: !9615, file: !3, line: 7865, type: !5245)
!9623 = !DILocation(line: 7865, column: 67, scope: !9615)
!9624 = !DILocalVariable(name: "cur_used_qs", scope: !9615, file: !3, line: 7867, type: !5229)
!9625 = !DILocation(line: 7867, column: 7, scope: !9615)
!9626 = !DILocalVariable(name: "cur_free_qs", scope: !9615, file: !3, line: 7868, type: !5229)
!9627 = !DILocation(line: 7868, column: 7, scope: !9615)
!9628 = !DILocalVariable(name: "target_id", scope: !9615, file: !3, line: 7869, type: !5245)
!9629 = !DILocation(line: 7869, column: 23, scope: !9615)
!9630 = !DILocalVariable(name: "tid_no", scope: !9615, file: !3, line: 7870, type: !5245)
!9631 = !DILocation(line: 7870, column: 8, scope: !9615)
!9632 = !DILocation(line: 7872, column: 14, scope: !9615)
!9633 = !DILocation(line: 7872, column: 12, scope: !9615)
!9634 = !DILocation(line: 7873, column: 11, scope: !9615)
!9635 = !DILocation(line: 7873, column: 9, scope: !9615)
!9636 = !DILocation(line: 7874, column: 7, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 7874, column: 6)
!9638 = !DILocation(line: 7874, column: 16, scope: !9637)
!9639 = !DILocation(line: 7874, column: 33, scope: !9637)
!9640 = !DILocation(line: 7874, column: 31, scope: !9637)
!9641 = !DILocation(line: 7874, column: 44, scope: !9637)
!9642 = !DILocation(line: 7875, column: 7, scope: !9637)
!9643 = !DILocation(line: 7875, column: 16, scope: !9637)
!9644 = !DILocation(line: 7875, column: 37, scope: !9637)
!9645 = !DILocation(line: 7875, column: 35, scope: !9637)
!9646 = !DILocation(line: 7874, column: 6, scope: !9615)
!9647 = !DILocation(line: 7876, column: 3, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 7875, column: 49)
!9649 = !DILocation(line: 7878, column: 6, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 7878, column: 6)
!9651 = !DILocation(line: 7878, column: 11, scope: !9650)
!9652 = !DILocation(line: 7878, column: 6, scope: !9615)
!9653 = !DILocation(line: 7879, column: 24, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 7878, column: 17)
!9655 = !DILocation(line: 7879, column: 33, scope: !9654)
!9656 = !DILocation(line: 7879, column: 17, scope: !9654)
!9657 = !DILocation(line: 7880, column: 14, scope: !9654)
!9658 = !DILocation(line: 7880, column: 23, scope: !9654)
!9659 = !DILocation(line: 7880, column: 7, scope: !9654)
!9660 = !DILocation(line: 7879, column: 47, scope: !9654)
!9661 = !DILocation(line: 7880, column: 39, scope: !9654)
!9662 = !DILocation(line: 7879, column: 15, scope: !9654)
!9663 = !DILocation(line: 7881, column: 2, scope: !9654)
!9664 = !DILocation(line: 7882, column: 24, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 7881, column: 9)
!9666 = !DILocation(line: 7882, column: 33, scope: !9665)
!9667 = !DILocation(line: 7882, column: 17, scope: !9665)
!9668 = !DILocation(line: 7882, column: 47, scope: !9665)
!9669 = !DILocation(line: 7882, column: 15, scope: !9665)
!9670 = !DILocation(line: 7885, column: 14, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 7885, column: 6)
!9672 = !DILocation(line: 7885, column: 28, scope: !9671)
!9673 = !DILocation(line: 7885, column: 26, scope: !9671)
!9674 = !DILocation(line: 7885, column: 44, scope: !9671)
!9675 = !DILocation(line: 7885, column: 53, scope: !9671)
!9676 = !DILocation(line: 7885, column: 37, scope: !9671)
!9677 = !DILocation(line: 7885, column: 34, scope: !9671)
!9678 = !DILocation(line: 7885, column: 6, scope: !9615)
!9679 = !DILocation(line: 7886, column: 24, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 7885, column: 68)
!9681 = !DILocation(line: 7886, column: 33, scope: !9680)
!9682 = !DILocation(line: 7886, column: 17, scope: !9680)
!9683 = !DILocation(line: 7886, column: 49, scope: !9680)
!9684 = !DILocation(line: 7886, column: 47, scope: !9680)
!9685 = !DILocation(line: 7886, column: 15, scope: !9680)
!9686 = !DILocation(line: 7887, column: 7, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 7887, column: 7)
!9688 = !DILocation(line: 7887, column: 16, scope: !9687)
!9689 = !DILocation(line: 7887, column: 28, scope: !9687)
!9690 = !DILocation(line: 7888, column: 7, scope: !9687)
!9691 = !DILocation(line: 7888, column: 16, scope: !9687)
!9692 = !DILocation(line: 7888, column: 28, scope: !9687)
!9693 = !DILocation(line: 7887, column: 36, scope: !9687)
!9694 = !DILocation(line: 7887, column: 7, scope: !9680)
!9695 = !DILocation(line: 7889, column: 4, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 7888, column: 37)
!9697 = !DILocation(line: 7891, column: 10, scope: !9680)
!9698 = !DILocation(line: 7891, column: 3, scope: !9680)
!9699 = !DILocation(line: 7893, column: 6, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 7893, column: 6)
!9701 = !DILocation(line: 7893, column: 11, scope: !9700)
!9702 = !DILocation(line: 7893, column: 6, scope: !9615)
!9703 = !DILocation(line: 7894, column: 8, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 7894, column: 7)
!9705 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 7893, column: 16)
!9706 = !DILocation(line: 7894, column: 15, scope: !9704)
!9707 = !DILocation(line: 7894, column: 24, scope: !9704)
!9708 = !DILocation(line: 7894, column: 13, scope: !9704)
!9709 = !DILocation(line: 7895, column: 7, scope: !9704)
!9710 = !DILocation(line: 7895, column: 11, scope: !9704)
!9711 = !DILocation(line: 7895, column: 20, scope: !9704)
!9712 = !DILocation(line: 7895, column: 29, scope: !9704)
!9713 = !DILocation(line: 7895, column: 43, scope: !9704)
!9714 = !DILocation(line: 7895, column: 16, scope: !9704)
!9715 = !DILocation(line: 7894, column: 7, scope: !9705)
!9716 = !DILocation(line: 7896, column: 31, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 7895, column: 63)
!9718 = !DILocation(line: 7896, column: 4, scope: !9717)
!9719 = !DILocation(line: 7896, column: 13, scope: !9717)
!9720 = !DILocation(line: 7896, column: 29, scope: !9717)
!9721 = !DILocation(line: 7897, column: 3, scope: !9717)
!9722 = !DILocation(line: 7898, column: 2, scope: !9705)
!9723 = !DILocation(line: 7899, column: 2, scope: !9615)
!9724 = !DILocation(line: 7900, column: 1, scope: !9615)
!9725 = distinct !DISubprogram(name: "AscSendScsiQueue", scope: !3, file: !3, line: 8093, type: !9726, scopeLine: 8094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!245, !6375, !5267, !5245}
!9728 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !9725, file: !3, line: 8093, type: !6375)
!9729 = !DILocation(line: 8093, column: 31, scope: !9725)
!9730 = !DILocalVariable(name: "scsiq", arg: 2, scope: !9725, file: !3, line: 8093, type: !5267)
!9731 = !DILocation(line: 8093, column: 52, scope: !9725)
!9732 = !DILocalVariable(name: "n_q_required", arg: 3, scope: !9725, file: !3, line: 8093, type: !5245)
!9733 = !DILocation(line: 8093, column: 65, scope: !9725)
!9734 = !DILocalVariable(name: "iop_base", scope: !9725, file: !3, line: 8095, type: !7)
!9735 = !DILocation(line: 8095, column: 11, scope: !9725)
!9736 = !DILocalVariable(name: "free_q_head", scope: !9725, file: !3, line: 8096, type: !5245)
!9737 = !DILocation(line: 8096, column: 8, scope: !9725)
!9738 = !DILocalVariable(name: "next_qp", scope: !9725, file: !3, line: 8097, type: !5245)
!9739 = !DILocation(line: 8097, column: 8, scope: !9725)
!9740 = !DILocalVariable(name: "tid_no", scope: !9725, file: !3, line: 8098, type: !5245)
!9741 = !DILocation(line: 8098, column: 8, scope: !9725)
!9742 = !DILocalVariable(name: "target_ix", scope: !9725, file: !3, line: 8099, type: !5245)
!9743 = !DILocation(line: 8099, column: 8, scope: !9725)
!9744 = !DILocalVariable(name: "sta", scope: !9725, file: !3, line: 8100, type: !245)
!9745 = !DILocation(line: 8100, column: 6, scope: !9725)
!9746 = !DILocation(line: 8102, column: 13, scope: !9725)
!9747 = !DILocation(line: 8102, column: 22, scope: !9725)
!9748 = !DILocation(line: 8102, column: 11, scope: !9725)
!9749 = !DILocation(line: 8103, column: 14, scope: !9725)
!9750 = !DILocation(line: 8103, column: 21, scope: !9725)
!9751 = !DILocation(line: 8103, column: 24, scope: !9725)
!9752 = !DILocation(line: 8103, column: 12, scope: !9725)
!9753 = !DILocation(line: 8104, column: 11, scope: !9725)
!9754 = !DILocation(line: 8104, column: 9, scope: !9725)
!9755 = !DILocation(line: 8105, column: 6, scope: !9725)
!9756 = !DILocation(line: 8106, column: 23, scope: !9725)
!9757 = !DILocation(line: 8106, column: 16, scope: !9725)
!9758 = !DILocation(line: 8106, column: 14, scope: !9725)
!9759 = !DILocation(line: 8107, column: 6, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9725, file: !3, line: 8107, column: 6)
!9761 = !DILocation(line: 8107, column: 19, scope: !9760)
!9762 = !DILocation(line: 8107, column: 6, scope: !9725)
!9763 = !DILocation(line: 8108, column: 39, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 8107, column: 24)
!9765 = !DILocation(line: 8108, column: 49, scope: !9764)
!9766 = !DILocation(line: 8109, column: 18, scope: !9764)
!9767 = !DILocation(line: 8108, column: 13, scope: !9764)
!9768 = !DILocation(line: 8108, column: 11, scope: !9764)
!9769 = !DILocation(line: 8110, column: 7, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 8110, column: 7)
!9771 = !DILocation(line: 8110, column: 15, scope: !9770)
!9772 = !DILocation(line: 8110, column: 7, scope: !9764)
!9773 = !DILocation(line: 8111, column: 4, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 8110, column: 33)
!9775 = !DILocation(line: 8111, column: 13, scope: !9774)
!9776 = !DILocation(line: 8111, column: 29, scope: !9774)
!9777 = !DILocation(line: 8112, column: 32, scope: !9774)
!9778 = !DILocation(line: 8112, column: 45, scope: !9774)
!9779 = !DILocation(line: 8112, column: 4, scope: !9774)
!9780 = !DILocation(line: 8112, column: 11, scope: !9774)
!9781 = !DILocation(line: 8112, column: 20, scope: !9774)
!9782 = !DILocation(line: 8112, column: 30, scope: !9774)
!9783 = !DILocation(line: 8113, column: 21, scope: !9774)
!9784 = !DILocation(line: 8113, column: 4, scope: !9774)
!9785 = !DILocation(line: 8113, column: 11, scope: !9774)
!9786 = !DILocation(line: 8113, column: 14, scope: !9774)
!9787 = !DILocation(line: 8113, column: 19, scope: !9774)
!9788 = !DILocation(line: 8114, column: 33, scope: !9774)
!9789 = !DILocation(line: 8114, column: 42, scope: !9774)
!9790 = !DILocation(line: 8115, column: 12, scope: !9774)
!9791 = !DILocation(line: 8114, column: 10, scope: !9774)
!9792 = !DILocation(line: 8114, column: 8, scope: !9774)
!9793 = !DILocation(line: 8116, column: 3, scope: !9774)
!9794 = !DILocation(line: 8117, column: 2, scope: !9764)
!9795 = !DILocation(line: 8117, column: 13, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 8117, column: 13)
!9797 = !DILocation(line: 8117, column: 26, scope: !9796)
!9798 = !DILocation(line: 8117, column: 13, scope: !9760)
!9799 = !DILocation(line: 8118, column: 31, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 8117, column: 32)
!9801 = !DILocation(line: 8118, column: 41, scope: !9800)
!9802 = !DILocation(line: 8118, column: 13, scope: !9800)
!9803 = !DILocation(line: 8118, column: 11, scope: !9800)
!9804 = !DILocation(line: 8119, column: 7, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 8119, column: 7)
!9806 = !DILocation(line: 8119, column: 15, scope: !9805)
!9807 = !DILocation(line: 8119, column: 7, scope: !9800)
!9808 = !DILocation(line: 8120, column: 21, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 8119, column: 33)
!9810 = !DILocation(line: 8120, column: 4, scope: !9809)
!9811 = !DILocation(line: 8120, column: 11, scope: !9809)
!9812 = !DILocation(line: 8120, column: 14, scope: !9809)
!9813 = !DILocation(line: 8120, column: 19, scope: !9809)
!9814 = !DILocation(line: 8121, column: 27, scope: !9809)
!9815 = !DILocation(line: 8121, column: 36, scope: !9809)
!9816 = !DILocation(line: 8121, column: 43, scope: !9809)
!9817 = !DILocation(line: 8121, column: 10, scope: !9809)
!9818 = !DILocation(line: 8121, column: 8, scope: !9809)
!9819 = !DILocation(line: 8122, column: 3, scope: !9809)
!9820 = !DILocation(line: 8123, column: 2, scope: !9800)
!9821 = !DILocation(line: 8124, column: 6, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9725, file: !3, line: 8124, column: 6)
!9823 = !DILocation(line: 8124, column: 10, scope: !9822)
!9824 = !DILocation(line: 8124, column: 6, scope: !9725)
!9825 = !DILocation(line: 8125, column: 3, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 8124, column: 16)
!9827 = !DILocation(line: 8126, column: 29, scope: !9826)
!9828 = !DILocation(line: 8126, column: 3, scope: !9826)
!9829 = !DILocation(line: 8126, column: 12, scope: !9826)
!9830 = !DILocation(line: 8126, column: 26, scope: !9826)
!9831 = !DILocation(line: 8127, column: 3, scope: !9826)
!9832 = !DILocation(line: 8127, column: 12, scope: !9826)
!9833 = !DILocation(line: 8127, column: 24, scope: !9826)
!9834 = !DILocation(line: 8127, column: 31, scope: !9826)
!9835 = !DILocation(line: 8128, column: 2, scope: !9826)
!9836 = !DILocation(line: 8129, column: 9, scope: !9725)
!9837 = !DILocation(line: 8129, column: 2, scope: !9725)
!9838 = distinct !DISubprogram(name: "outw", scope: !9839, file: !9839, line: 335, type: !9840, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9839 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!9840 = !DISubroutineType(types: !9841)
!9841 = !{null, !303, !245}
!9842 = !DILocalVariable(name: "value", arg: 1, scope: !9838, file: !9839, line: 335, type: !303)
!9843 = !DILocation(line: 335, column: 1, scope: !9838)
!9844 = !DILocalVariable(name: "port", arg: 2, scope: !9838, file: !9839, line: 335, type: !245)
!9845 = !{i32 -2141375964}
!9846 = distinct !DISubprogram(name: "inw", scope: !9839, file: !9839, line: 335, type: !9847, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!303, !245}
!9849 = !DILocalVariable(name: "port", arg: 1, scope: !9846, file: !9839, line: 335, type: !245)
!9850 = !DILocation(line: 335, column: 1, scope: !9846)
!9851 = !DILocalVariable(name: "value", scope: !9846, file: !9839, line: 335, type: !303)
!9852 = !{i32 -2141375762}
!9853 = distinct !DISubprogram(name: "AscGetSynPeriodIndex", scope: !3, file: !3, line: 6263, type: !9854, scopeLine: 6264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!5245, !6375, !5245}
!9856 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !9853, file: !3, line: 6263, type: !6375)
!9857 = !DILocation(line: 6263, column: 48, scope: !9853)
!9858 = !DILocalVariable(name: "syn_time", arg: 2, scope: !9853, file: !3, line: 6263, type: !5245)
!9859 = !DILocation(line: 6263, column: 63, scope: !9853)
!9860 = !DILocalVariable(name: "period_table", scope: !9853, file: !3, line: 6265, type: !5318)
!9861 = !DILocation(line: 6265, column: 15, scope: !9853)
!9862 = !DILocalVariable(name: "max_index", scope: !9853, file: !3, line: 6266, type: !245)
!9863 = !DILocation(line: 6266, column: 6, scope: !9853)
!9864 = !DILocalVariable(name: "min_index", scope: !9853, file: !3, line: 6267, type: !245)
!9865 = !DILocation(line: 6267, column: 6, scope: !9853)
!9866 = !DILocalVariable(name: "i", scope: !9853, file: !3, line: 6268, type: !245)
!9867 = !DILocation(line: 6268, column: 6, scope: !9853)
!9868 = !DILocation(line: 6270, column: 17, scope: !9853)
!9869 = !DILocation(line: 6270, column: 26, scope: !9853)
!9870 = !DILocation(line: 6270, column: 15, scope: !9853)
!9871 = !DILocation(line: 6271, column: 19, scope: !9853)
!9872 = !DILocation(line: 6271, column: 28, scope: !9853)
!9873 = !DILocation(line: 6271, column: 14, scope: !9853)
!9874 = !DILocation(line: 6271, column: 12, scope: !9853)
!9875 = !DILocation(line: 6272, column: 19, scope: !9853)
!9876 = !DILocation(line: 6272, column: 28, scope: !9853)
!9877 = !DILocation(line: 6272, column: 14, scope: !9853)
!9878 = !DILocation(line: 6272, column: 12, scope: !9853)
!9879 = !DILocation(line: 6273, column: 7, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 6273, column: 6)
!9881 = !DILocation(line: 6273, column: 19, scope: !9880)
!9882 = !DILocation(line: 6273, column: 32, scope: !9880)
!9883 = !DILocation(line: 6273, column: 16, scope: !9880)
!9884 = !DILocation(line: 6273, column: 6, scope: !9853)
!9885 = !DILocation(line: 6274, column: 12, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 6274, column: 3)
!9887 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 6273, column: 45)
!9888 = !DILocation(line: 6274, column: 10, scope: !9886)
!9889 = !DILocation(line: 6274, column: 8, scope: !9886)
!9890 = !DILocation(line: 6274, column: 23, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 6274, column: 3)
!9892 = !DILocation(line: 6274, column: 28, scope: !9891)
!9893 = !DILocation(line: 6274, column: 38, scope: !9891)
!9894 = !DILocation(line: 6274, column: 25, scope: !9891)
!9895 = !DILocation(line: 6274, column: 3, scope: !9886)
!9896 = !DILocation(line: 6275, column: 8, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 6275, column: 8)
!9898 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 6274, column: 49)
!9899 = !DILocation(line: 6275, column: 20, scope: !9897)
!9900 = !DILocation(line: 6275, column: 33, scope: !9897)
!9901 = !DILocation(line: 6275, column: 17, scope: !9897)
!9902 = !DILocation(line: 6275, column: 8, scope: !9898)
!9903 = !DILocation(line: 6276, column: 19, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 6275, column: 37)
!9905 = !DILocation(line: 6276, column: 12, scope: !9904)
!9906 = !DILocation(line: 6276, column: 5, scope: !9904)
!9907 = !DILocation(line: 6278, column: 3, scope: !9898)
!9908 = !DILocation(line: 6274, column: 45, scope: !9891)
!9909 = !DILocation(line: 6274, column: 3, scope: !9891)
!9910 = distinct !{!9910, !9895, !9911}
!9911 = !DILocation(line: 6278, column: 3, scope: !9886)
!9912 = !DILocation(line: 6279, column: 17, scope: !9887)
!9913 = !DILocation(line: 6279, column: 10, scope: !9887)
!9914 = !DILocation(line: 6279, column: 3, scope: !9887)
!9915 = !DILocation(line: 6281, column: 18, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 6280, column: 9)
!9917 = !DILocation(line: 6281, column: 28, scope: !9916)
!9918 = !DILocation(line: 6281, column: 10, scope: !9916)
!9919 = !DILocation(line: 6281, column: 3, scope: !9916)
!9920 = !DILocation(line: 6283, column: 1, scope: !9853)
!9921 = distinct !DISubprogram(name: "AscMemWordCopyPtrToLram", scope: !3, file: !3, line: 3840, type: !9922, scopeLine: 3842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9922 = !DISubroutineType(types: !9923)
!9923 = !{null, !7, !5240, !5318, !245}
!9924 = !DILocalVariable(name: "iop_base", arg: 1, scope: !9921, file: !3, line: 3840, type: !7)
!9925 = !DILocation(line: 3840, column: 34, scope: !9921)
!9926 = !DILocalVariable(name: "s_addr", arg: 2, scope: !9921, file: !3, line: 3840, type: !5240)
!9927 = !DILocation(line: 3840, column: 51, scope: !9921)
!9928 = !DILocalVariable(name: "s_buffer", arg: 3, scope: !9921, file: !3, line: 3841, type: !5318)
!9929 = !DILocation(line: 3841, column: 17, scope: !9921)
!9930 = !DILocalVariable(name: "words", arg: 4, scope: !9921, file: !3, line: 3841, type: !245)
!9931 = !DILocation(line: 3841, column: 31, scope: !9921)
!9932 = !DILocalVariable(name: "i", scope: !9921, file: !3, line: 3843, type: !245)
!9933 = !DILocation(line: 3843, column: 6, scope: !9921)
!9934 = !DILocation(line: 3845, column: 2, scope: !9921)
!9935 = !DILocation(line: 3846, column: 9, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 3846, column: 2)
!9937 = !DILocation(line: 3846, column: 7, scope: !9936)
!9938 = !DILocation(line: 3846, column: 14, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 3846, column: 2)
!9940 = !DILocation(line: 3846, column: 22, scope: !9939)
!9941 = !DILocation(line: 3846, column: 20, scope: !9939)
!9942 = !DILocation(line: 3846, column: 16, scope: !9939)
!9943 = !DILocation(line: 3846, column: 2, scope: !9936)
!9944 = !DILocation(line: 3855, column: 3, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9939, file: !3, line: 3846, column: 37)
!9946 = !DILocation(line: 3857, column: 2, scope: !9945)
!9947 = !DILocation(line: 3846, column: 31, scope: !9939)
!9948 = !DILocation(line: 3846, column: 2, scope: !9939)
!9949 = distinct !{!9949, !9943, !9950}
!9950 = !DILocation(line: 3857, column: 2, scope: !9936)
!9951 = !DILocation(line: 3858, column: 1, scope: !9921)
!9952 = distinct !DISubprogram(name: "AscWriteLramWord", scope: !3, file: !3, line: 3810, type: !9953, scopeLine: 3811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9953 = !DISubroutineType(types: !9954)
!9954 = !{null, !7, !5240, !5240}
!9955 = !DILocalVariable(name: "iop_base", arg: 1, scope: !9952, file: !3, line: 3810, type: !7)
!9956 = !DILocation(line: 3810, column: 39, scope: !9952)
!9957 = !DILocalVariable(name: "addr", arg: 2, scope: !9952, file: !3, line: 3810, type: !5240)
!9958 = !DILocation(line: 3810, column: 56, scope: !9952)
!9959 = !DILocalVariable(name: "word_val", arg: 3, scope: !9952, file: !3, line: 3810, type: !5240)
!9960 = !DILocation(line: 3810, column: 69, scope: !9952)
!9961 = !DILocation(line: 3812, column: 2, scope: !9952)
!9962 = !DILocation(line: 3813, column: 2, scope: !9952)
!9963 = !DILocation(line: 3814, column: 1, scope: !9952)
!9964 = distinct !DISubprogram(name: "AscReadLramWord", scope: !3, file: !3, line: 3790, type: !9965, scopeLine: 3791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9965 = !DISubroutineType(types: !9966)
!9966 = !{!5240, !7, !5240}
!9967 = !DILocalVariable(name: "iop_base", arg: 1, scope: !9964, file: !3, line: 3790, type: !7)
!9968 = !DILocation(line: 3790, column: 40, scope: !9964)
!9969 = !DILocalVariable(name: "addr", arg: 2, scope: !9964, file: !3, line: 3790, type: !5240)
!9970 = !DILocation(line: 3790, column: 57, scope: !9964)
!9971 = !DILocalVariable(name: "word_data", scope: !9964, file: !3, line: 3792, type: !5240)
!9972 = !DILocation(line: 3792, column: 9, scope: !9964)
!9973 = !DILocation(line: 3794, column: 2, scope: !9964)
!9974 = !DILocation(line: 3795, column: 14, scope: !9964)
!9975 = !DILocation(line: 3795, column: 12, scope: !9964)
!9976 = !DILocation(line: 3796, column: 10, scope: !9964)
!9977 = !DILocation(line: 3796, column: 2, scope: !9964)
!9978 = distinct !DISubprogram(name: "AscAllocMultipleFreeQueue", scope: !3, file: !3, line: 7919, type: !9979, scopeLine: 7920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!9979 = !DISubroutineType(types: !9980)
!9980 = !{!5245, !7, !5245, !5245}
!9981 = !DILocalVariable(name: "iop_base", arg: 1, scope: !9978, file: !3, line: 7919, type: !7)
!9982 = !DILocation(line: 7919, column: 36, scope: !9978)
!9983 = !DILocalVariable(name: "free_q_head", arg: 2, scope: !9978, file: !3, line: 7919, type: !5245)
!9984 = !DILocation(line: 7919, column: 52, scope: !9978)
!9985 = !DILocalVariable(name: "n_free_q", arg: 3, scope: !9978, file: !3, line: 7919, type: !5245)
!9986 = !DILocation(line: 7919, column: 71, scope: !9978)
!9987 = !DILocalVariable(name: "i", scope: !9978, file: !3, line: 7921, type: !5245)
!9988 = !DILocation(line: 7921, column: 8, scope: !9978)
!9989 = !DILocation(line: 7923, column: 9, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 7923, column: 2)
!9991 = !DILocation(line: 7923, column: 7, scope: !9990)
!9992 = !DILocation(line: 7923, column: 14, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 7923, column: 2)
!9994 = !DILocation(line: 7923, column: 18, scope: !9993)
!9995 = !DILocation(line: 7923, column: 16, scope: !9993)
!9996 = !DILocation(line: 7923, column: 2, scope: !9990)
!9997 = !DILocation(line: 7924, column: 35, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 7923, column: 33)
!9999 = !DILocation(line: 7924, column: 45, scope: !9998)
!10000 = !DILocation(line: 7924, column: 17, scope: !9998)
!10001 = !DILocation(line: 7924, column: 15, scope: !9998)
!10002 = !DILocation(line: 7925, column: 7, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 7925, column: 7)
!10004 = !DILocation(line: 7925, column: 19, scope: !10003)
!10005 = !DILocation(line: 7925, column: 7, scope: !9998)
!10006 = !DILocation(line: 7926, column: 4, scope: !10003)
!10007 = !DILocation(line: 7927, column: 2, scope: !9998)
!10008 = !DILocation(line: 7923, column: 29, scope: !9993)
!10009 = !DILocation(line: 7923, column: 2, scope: !9993)
!10010 = distinct !{!10010, !9996, !10011}
!10011 = !DILocation(line: 7927, column: 2, scope: !9990)
!10012 = !DILocation(line: 7928, column: 9, scope: !9978)
!10013 = !DILocation(line: 7928, column: 2, scope: !9978)
!10014 = distinct !DISubprogram(name: "AscPutReadySgListQueue", scope: !3, file: !3, line: 8000, type: !9726, scopeLine: 8001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10015 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !10014, file: !3, line: 8000, type: !6375)
!10016 = !DILocation(line: 8000, column: 37, scope: !10014)
!10017 = !DILocalVariable(name: "scsiq", arg: 2, scope: !10014, file: !3, line: 8000, type: !5267)
!10018 = !DILocation(line: 8000, column: 58, scope: !10014)
!10019 = !DILocalVariable(name: "q_no", arg: 3, scope: !10014, file: !3, line: 8000, type: !5245)
!10020 = !DILocation(line: 8000, column: 71, scope: !10014)
!10021 = !DILocalVariable(name: "sta", scope: !10014, file: !3, line: 8002, type: !245)
!10022 = !DILocation(line: 8002, column: 6, scope: !10014)
!10023 = !DILocalVariable(name: "i", scope: !10014, file: !3, line: 8003, type: !245)
!10024 = !DILocation(line: 8003, column: 6, scope: !10014)
!10025 = !DILocalVariable(name: "sg_head", scope: !10014, file: !3, line: 8004, type: !5299)
!10026 = !DILocation(line: 8004, column: 15, scope: !10014)
!10027 = !DILocalVariable(name: "scsi_sg_q", scope: !10014, file: !3, line: 8005, type: !10028)
!10028 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASC_SG_LIST_Q", file: !3, line: 358, baseType: !10029)
!10029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asc_sg_list_q", file: !3, line: 351, size: 48, elements: !10030)
!10030 = !{!10031, !10032, !10033, !10034, !10035, !10036}
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "seq_no", scope: !10029, file: !3, line: 352, baseType: !5245, size: 8)
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "q_no", scope: !10029, file: !3, line: 353, baseType: !5245, size: 8, offset: 8)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "cntl", scope: !10029, file: !3, line: 354, baseType: !5245, size: 8, offset: 16)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "sg_head_qp", scope: !10029, file: !3, line: 355, baseType: !5245, size: 8, offset: 24)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list_cnt", scope: !10029, file: !3, line: 356, baseType: !5245, size: 8, offset: 32)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "sg_cur_list_cnt", scope: !10029, file: !3, line: 357, baseType: !5245, size: 8, offset: 40)
!10037 = !DILocation(line: 8005, column: 16, scope: !10014)
!10038 = !DILocalVariable(name: "saved_data_addr", scope: !10014, file: !3, line: 8006, type: !5282)
!10039 = !DILocation(line: 8006, column: 9, scope: !10014)
!10040 = !DILocalVariable(name: "saved_data_cnt", scope: !10014, file: !3, line: 8007, type: !5282)
!10041 = !DILocation(line: 8007, column: 9, scope: !10014)
!10042 = !DILocalVariable(name: "iop_base", scope: !10014, file: !3, line: 8008, type: !7)
!10043 = !DILocation(line: 8008, column: 11, scope: !10014)
!10044 = !DILocalVariable(name: "sg_list_dwords", scope: !10014, file: !3, line: 8009, type: !5240)
!10045 = !DILocation(line: 8009, column: 9, scope: !10014)
!10046 = !DILocalVariable(name: "sg_index", scope: !10014, file: !3, line: 8010, type: !5240)
!10047 = !DILocation(line: 8010, column: 9, scope: !10014)
!10048 = !DILocalVariable(name: "sg_entry_cnt", scope: !10014, file: !3, line: 8011, type: !5240)
!10049 = !DILocation(line: 8011, column: 9, scope: !10014)
!10050 = !DILocalVariable(name: "q_addr", scope: !10014, file: !3, line: 8012, type: !5240)
!10051 = !DILocation(line: 8012, column: 9, scope: !10014)
!10052 = !DILocalVariable(name: "next_qp", scope: !10014, file: !3, line: 8013, type: !5245)
!10053 = !DILocation(line: 8013, column: 8, scope: !10014)
!10054 = !DILocation(line: 8015, column: 13, scope: !10014)
!10055 = !DILocation(line: 8015, column: 22, scope: !10014)
!10056 = !DILocation(line: 8015, column: 11, scope: !10014)
!10057 = !DILocation(line: 8016, column: 12, scope: !10014)
!10058 = !DILocation(line: 8016, column: 19, scope: !10014)
!10059 = !DILocation(line: 8016, column: 10, scope: !10014)
!10060 = !DILocation(line: 8017, column: 20, scope: !10014)
!10061 = !DILocation(line: 8017, column: 27, scope: !10014)
!10062 = !DILocation(line: 8017, column: 30, scope: !10014)
!10063 = !DILocation(line: 8017, column: 18, scope: !10014)
!10064 = !DILocation(line: 8018, column: 19, scope: !10014)
!10065 = !DILocation(line: 8018, column: 26, scope: !10014)
!10066 = !DILocation(line: 8018, column: 29, scope: !10014)
!10067 = !DILocation(line: 8018, column: 17, scope: !10014)
!10068 = !DILocation(line: 8019, column: 24, scope: !10014)
!10069 = !DILocation(line: 8019, column: 2, scope: !10014)
!10070 = !DILocation(line: 8019, column: 9, scope: !10014)
!10071 = !DILocation(line: 8019, column: 12, scope: !10014)
!10072 = !DILocation(line: 8019, column: 22, scope: !10014)
!10073 = !DILocation(line: 8020, column: 23, scope: !10014)
!10074 = !DILocation(line: 8020, column: 2, scope: !10014)
!10075 = !DILocation(line: 8020, column: 9, scope: !10014)
!10076 = !DILocation(line: 8020, column: 12, scope: !10014)
!10077 = !DILocation(line: 8020, column: 21, scope: !10014)
!10078 = !DILocation(line: 8026, column: 17, scope: !10014)
!10079 = !DILocation(line: 8026, column: 26, scope: !10014)
!10080 = !DILocation(line: 8026, column: 36, scope: !10014)
!10081 = !DILocation(line: 8026, column: 15, scope: !10014)
!10082 = !DILocation(line: 8028, column: 6, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 8028, column: 6)
!10084 = !DILocation(line: 8028, column: 19, scope: !10083)
!10085 = !DILocation(line: 8028, column: 6, scope: !10014)
!10086 = !DILocation(line: 8029, column: 3, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 8028, column: 25)
!10088 = !DILocation(line: 8029, column: 10, scope: !10087)
!10089 = !DILocation(line: 8029, column: 13, scope: !10087)
!10090 = !DILocation(line: 8029, column: 18, scope: !10087)
!10091 = !DILocation(line: 8030, column: 12, scope: !10087)
!10092 = !DILocation(line: 8030, column: 10, scope: !10087)
!10093 = !DILocation(line: 8031, column: 12, scope: !10087)
!10094 = !DILocation(line: 8032, column: 28, scope: !10087)
!10095 = !DILocation(line: 8032, column: 37, scope: !10087)
!10096 = !DILocation(line: 8032, column: 3, scope: !10087)
!10097 = !DILocation(line: 8032, column: 10, scope: !10087)
!10098 = !DILocation(line: 8032, column: 13, scope: !10087)
!10099 = !DILocation(line: 8032, column: 26, scope: !10087)
!10100 = !DILocation(line: 8033, column: 26, scope: !10087)
!10101 = !DILocation(line: 8033, column: 13, scope: !10087)
!10102 = !DILocation(line: 8033, column: 24, scope: !10087)
!10103 = !DILocation(line: 8034, column: 13, scope: !10087)
!10104 = !DILocation(line: 8034, column: 18, scope: !10087)
!10105 = !DILocation(line: 8035, column: 10, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 8035, column: 3)
!10107 = !DILocation(line: 8035, column: 8, scope: !10106)
!10108 = !DILocation(line: 8035, column: 15, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 8035, column: 3)
!10110 = !DILocation(line: 8035, column: 19, scope: !10109)
!10111 = !DILocation(line: 8035, column: 28, scope: !10109)
!10112 = !DILocation(line: 8035, column: 17, scope: !10109)
!10113 = !DILocation(line: 8035, column: 3, scope: !10106)
!10114 = !DILocation(line: 8036, column: 23, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 8035, column: 44)
!10116 = !DILocation(line: 8036, column: 25, scope: !10115)
!10117 = !DILocation(line: 8036, column: 14, scope: !10115)
!10118 = !DILocation(line: 8036, column: 21, scope: !10115)
!10119 = !DILocation(line: 8037, column: 8, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 8037, column: 8)
!10121 = !DILocation(line: 8037, column: 21, scope: !10120)
!10122 = !DILocation(line: 8037, column: 8, scope: !10115)
!10123 = !DILocation(line: 8038, column: 20, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 8037, column: 42)
!10125 = !DILocation(line: 8039, column: 18, scope: !10124)
!10126 = !DILocation(line: 8040, column: 9, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 8040, column: 9)
!10128 = !DILocation(line: 8040, column: 11, scope: !10127)
!10129 = !DILocation(line: 8040, column: 9, scope: !10124)
!10130 = !DILocation(line: 8041, column: 16, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 8040, column: 17)
!10132 = !DILocation(line: 8041, column: 28, scope: !10131)
!10133 = !DILocation(line: 8043, column: 16, scope: !10131)
!10134 = !DILocation(line: 8043, column: 32, scope: !10131)
!10135 = !DILocation(line: 8045, column: 5, scope: !10131)
!10136 = !DILocation(line: 8046, column: 16, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 8045, column: 12)
!10138 = !DILocation(line: 8046, column: 28, scope: !10137)
!10139 = !DILocation(line: 8048, column: 16, scope: !10137)
!10140 = !DILocation(line: 8048, column: 32, scope: !10137)
!10141 = !DILocation(line: 8051, column: 4, scope: !10124)
!10142 = !DILocation(line: 8052, column: 15, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 8051, column: 11)
!10144 = !DILocation(line: 8052, column: 20, scope: !10143)
!10145 = !DILocation(line: 8053, column: 22, scope: !10143)
!10146 = !DILocation(line: 8053, column: 35, scope: !10143)
!10147 = !DILocation(line: 8053, column: 20, scope: !10143)
!10148 = !DILocation(line: 8054, column: 9, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 8054, column: 9)
!10150 = !DILocation(line: 8054, column: 11, scope: !10149)
!10151 = !DILocation(line: 8054, column: 9, scope: !10143)
!10152 = !DILocation(line: 8055, column: 30, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 8054, column: 17)
!10154 = !DILocation(line: 8055, column: 16, scope: !10153)
!10155 = !DILocation(line: 8055, column: 28, scope: !10153)
!10156 = !DILocation(line: 8057, column: 10, scope: !10153)
!10157 = !DILocation(line: 8056, column: 16, scope: !10153)
!10158 = !DILocation(line: 8056, column: 32, scope: !10153)
!10159 = !DILocation(line: 8058, column: 5, scope: !10153)
!10160 = !DILocation(line: 8060, column: 10, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 8058, column: 12)
!10162 = !DILocation(line: 8060, column: 23, scope: !10161)
!10163 = !DILocation(line: 8059, column: 16, scope: !10161)
!10164 = !DILocation(line: 8059, column: 28, scope: !10161)
!10165 = !DILocation(line: 8062, column: 10, scope: !10161)
!10166 = !DILocation(line: 8062, column: 23, scope: !10161)
!10167 = !DILocation(line: 8061, column: 16, scope: !10161)
!10168 = !DILocation(line: 8061, column: 32, scope: !10161)
!10169 = !DILocation(line: 8064, column: 18, scope: !10143)
!10170 = !DILocation(line: 8066, column: 30, scope: !10115)
!10171 = !DILocation(line: 8067, column: 18, scope: !10115)
!10172 = !DILocation(line: 8067, column: 25, scope: !10115)
!10173 = !DILocation(line: 8067, column: 9, scope: !10115)
!10174 = !DILocation(line: 8066, column: 14, scope: !10115)
!10175 = !DILocation(line: 8066, column: 12, scope: !10115)
!10176 = !DILocation(line: 8069, column: 21, scope: !10115)
!10177 = !DILocation(line: 8069, column: 14, scope: !10115)
!10178 = !DILocation(line: 8069, column: 19, scope: !10115)
!10179 = !DILocation(line: 8070, column: 13, scope: !10115)
!10180 = !DILocation(line: 8070, column: 11, scope: !10115)
!10181 = !DILocation(line: 8071, column: 28, scope: !10115)
!10182 = !DILocation(line: 8072, column: 7, scope: !10115)
!10183 = !DILocation(line: 8072, column: 14, scope: !10115)
!10184 = !DILocation(line: 8073, column: 7, scope: !10115)
!10185 = !DILocation(line: 8071, column: 4, scope: !10115)
!10186 = !DILocation(line: 8075, column: 29, scope: !10115)
!10187 = !DILocation(line: 8076, column: 8, scope: !10115)
!10188 = !DILocation(line: 8076, column: 15, scope: !10115)
!10189 = !DILocation(line: 8077, column: 18, scope: !10115)
!10190 = !DILocation(line: 8078, column: 8, scope: !10115)
!10191 = !DILocation(line: 8078, column: 16, scope: !10115)
!10192 = !DILocation(line: 8077, column: 8, scope: !10115)
!10193 = !DILocation(line: 8079, column: 8, scope: !10115)
!10194 = !DILocation(line: 8075, column: 4, scope: !10115)
!10195 = !DILocation(line: 8080, column: 13, scope: !10115)
!10196 = !DILocation(line: 8081, column: 27, scope: !10115)
!10197 = !DILocation(line: 8081, column: 4, scope: !10115)
!10198 = !DILocation(line: 8081, column: 11, scope: !10115)
!10199 = !DILocation(line: 8081, column: 25, scope: !10115)
!10200 = !DILocation(line: 8082, column: 3, scope: !10115)
!10201 = !DILocation(line: 8035, column: 40, scope: !10109)
!10202 = !DILocation(line: 8035, column: 3, scope: !10109)
!10203 = distinct !{!10203, !10113, !10204}
!10204 = !DILocation(line: 8082, column: 3, scope: !10106)
!10205 = !DILocation(line: 8083, column: 2, scope: !10087)
!10206 = !DILocation(line: 8084, column: 3, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 8083, column: 9)
!10208 = !DILocation(line: 8084, column: 10, scope: !10207)
!10209 = !DILocation(line: 8084, column: 13, scope: !10207)
!10210 = !DILocation(line: 8084, column: 18, scope: !10207)
!10211 = !DILocation(line: 8086, column: 25, scope: !10014)
!10212 = !DILocation(line: 8086, column: 34, scope: !10014)
!10213 = !DILocation(line: 8086, column: 41, scope: !10014)
!10214 = !DILocation(line: 8086, column: 8, scope: !10014)
!10215 = !DILocation(line: 8086, column: 6, scope: !10014)
!10216 = !DILocation(line: 8087, column: 24, scope: !10014)
!10217 = !DILocation(line: 8087, column: 2, scope: !10014)
!10218 = !DILocation(line: 8087, column: 9, scope: !10014)
!10219 = !DILocation(line: 8087, column: 12, scope: !10014)
!10220 = !DILocation(line: 8087, column: 22, scope: !10014)
!10221 = !DILocation(line: 8088, column: 23, scope: !10014)
!10222 = !DILocation(line: 8088, column: 2, scope: !10014)
!10223 = !DILocation(line: 8088, column: 9, scope: !10014)
!10224 = !DILocation(line: 8088, column: 12, scope: !10014)
!10225 = !DILocation(line: 8088, column: 21, scope: !10014)
!10226 = !DILocation(line: 8089, column: 10, scope: !10014)
!10227 = !DILocation(line: 8089, column: 2, scope: !10014)
!10228 = distinct !DISubprogram(name: "AscAllocFreeQueue", scope: !3, file: !3, line: 7902, type: !10229, scopeLine: 7903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{!5245, !7, !5245}
!10231 = !DILocalVariable(name: "iop_base", arg: 1, scope: !10228, file: !3, line: 7902, type: !7)
!10232 = !DILocation(line: 7902, column: 41, scope: !10228)
!10233 = !DILocalVariable(name: "free_q_head", arg: 2, scope: !10228, file: !3, line: 7902, type: !5245)
!10234 = !DILocation(line: 7902, column: 57, scope: !10228)
!10235 = !DILocalVariable(name: "q_addr", scope: !10228, file: !3, line: 7904, type: !5240)
!10236 = !DILocation(line: 7904, column: 9, scope: !10228)
!10237 = !DILocalVariable(name: "next_qp", scope: !10228, file: !3, line: 7905, type: !5245)
!10238 = !DILocation(line: 7905, column: 8, scope: !10228)
!10239 = !DILocalVariable(name: "q_status", scope: !10228, file: !3, line: 7906, type: !5245)
!10240 = !DILocation(line: 7906, column: 8, scope: !10228)
!10241 = !DILocation(line: 7908, column: 11, scope: !10228)
!10242 = !DILocation(line: 7908, column: 9, scope: !10228)
!10243 = !DILocation(line: 7909, column: 36, scope: !10228)
!10244 = !DILocation(line: 7910, column: 17, scope: !10228)
!10245 = !DILocation(line: 7910, column: 24, scope: !10228)
!10246 = !DILocation(line: 7910, column: 8, scope: !10228)
!10247 = !DILocation(line: 7909, column: 20, scope: !10228)
!10248 = !DILocation(line: 7909, column: 11, scope: !10228)
!10249 = !DILocation(line: 7912, column: 28, scope: !10228)
!10250 = !DILocation(line: 7912, column: 47, scope: !10228)
!10251 = !DILocation(line: 7912, column: 54, scope: !10228)
!10252 = !DILocation(line: 7912, column: 38, scope: !10228)
!10253 = !DILocation(line: 7912, column: 12, scope: !10228)
!10254 = !DILocation(line: 7912, column: 10, scope: !10228)
!10255 = !DILocation(line: 7913, column: 8, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 7913, column: 6)
!10257 = !DILocation(line: 7913, column: 17, scope: !10256)
!10258 = !DILocation(line: 7913, column: 29, scope: !10256)
!10259 = !DILocation(line: 7913, column: 35, scope: !10256)
!10260 = !DILocation(line: 7913, column: 39, scope: !10256)
!10261 = !DILocation(line: 7913, column: 47, scope: !10256)
!10262 = !DILocation(line: 7913, column: 6, scope: !10228)
!10263 = !DILocation(line: 7914, column: 10, scope: !10256)
!10264 = !DILocation(line: 7914, column: 3, scope: !10256)
!10265 = !DILocation(line: 7915, column: 2, scope: !10228)
!10266 = !DILocation(line: 7916, column: 1, scope: !10228)
!10267 = distinct !DISubprogram(name: "AscPutReadyQueue", scope: !3, file: !3, line: 7957, type: !9726, scopeLine: 7958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10268 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !10267, file: !3, line: 7957, type: !6375)
!10269 = !DILocation(line: 7957, column: 42, scope: !10267)
!10270 = !DILocalVariable(name: "scsiq", arg: 2, scope: !10267, file: !3, line: 7957, type: !5267)
!10271 = !DILocation(line: 7957, column: 63, scope: !10267)
!10272 = !DILocalVariable(name: "q_no", arg: 3, scope: !10267, file: !3, line: 7957, type: !5245)
!10273 = !DILocation(line: 7957, column: 76, scope: !10267)
!10274 = !DILocalVariable(name: "q_addr", scope: !10267, file: !3, line: 7959, type: !5240)
!10275 = !DILocation(line: 7959, column: 9, scope: !10267)
!10276 = !DILocalVariable(name: "tid_no", scope: !10267, file: !3, line: 7960, type: !5245)
!10277 = !DILocation(line: 7960, column: 8, scope: !10267)
!10278 = !DILocalVariable(name: "sdtr_data", scope: !10267, file: !3, line: 7961, type: !5245)
!10279 = !DILocation(line: 7961, column: 8, scope: !10267)
!10280 = !DILocalVariable(name: "syn_period_ix", scope: !10267, file: !3, line: 7962, type: !5245)
!10281 = !DILocation(line: 7962, column: 8, scope: !10267)
!10282 = !DILocalVariable(name: "syn_offset", scope: !10267, file: !3, line: 7963, type: !5245)
!10283 = !DILocation(line: 7963, column: 8, scope: !10267)
!10284 = !DILocalVariable(name: "iop_base", scope: !10267, file: !3, line: 7964, type: !7)
!10285 = !DILocation(line: 7964, column: 11, scope: !10267)
!10286 = !DILocation(line: 7966, column: 13, scope: !10267)
!10287 = !DILocation(line: 7966, column: 22, scope: !10267)
!10288 = !DILocation(line: 7966, column: 11, scope: !10267)
!10289 = !DILocation(line: 7967, column: 8, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10267, file: !3, line: 7967, column: 6)
!10291 = !DILocation(line: 7967, column: 17, scope: !10290)
!10292 = !DILocation(line: 7967, column: 29, scope: !10290)
!10293 = !DILocation(line: 7967, column: 36, scope: !10290)
!10294 = !DILocation(line: 7967, column: 39, scope: !10290)
!10295 = !DILocation(line: 7967, column: 27, scope: !10290)
!10296 = !DILocation(line: 7967, column: 50, scope: !10290)
!10297 = !DILocation(line: 7967, column: 56, scope: !10290)
!10298 = !DILocation(line: 7968, column: 8, scope: !10290)
!10299 = !DILocation(line: 7968, column: 17, scope: !10290)
!10300 = !DILocation(line: 7968, column: 29, scope: !10290)
!10301 = !DILocation(line: 7968, column: 36, scope: !10290)
!10302 = !DILocation(line: 7968, column: 39, scope: !10290)
!10303 = !DILocation(line: 7968, column: 27, scope: !10290)
!10304 = !DILocation(line: 7968, column: 50, scope: !10290)
!10305 = !DILocation(line: 7967, column: 6, scope: !10267)
!10306 = !DILocation(line: 7969, column: 12, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 7968, column: 57)
!10308 = !DILocation(line: 7969, column: 10, scope: !10307)
!10309 = !DILocation(line: 7970, column: 15, scope: !10307)
!10310 = !DILocation(line: 7970, column: 13, scope: !10307)
!10311 = !DILocation(line: 7972, column: 8, scope: !10307)
!10312 = !DILocation(line: 7972, column: 18, scope: !10307)
!10313 = !DILocation(line: 7972, column: 27, scope: !10307)
!10314 = !DILocation(line: 7972, column: 36, scope: !10307)
!10315 = !DILocation(line: 7972, column: 51, scope: !10307)
!10316 = !DILocation(line: 7972, column: 24, scope: !10307)
!10317 = !DILocation(line: 7972, column: 7, scope: !10307)
!10318 = !DILocation(line: 7971, column: 17, scope: !10307)
!10319 = !DILocation(line: 7973, column: 16, scope: !10307)
!10320 = !DILocation(line: 7973, column: 26, scope: !10307)
!10321 = !DILocation(line: 7973, column: 14, scope: !10307)
!10322 = !DILocation(line: 7974, column: 17, scope: !10307)
!10323 = !DILocation(line: 7975, column: 10, scope: !10307)
!10324 = !DILocation(line: 7975, column: 19, scope: !10307)
!10325 = !DILocation(line: 7975, column: 35, scope: !10307)
!10326 = !DILocation(line: 7976, column: 10, scope: !10307)
!10327 = !DILocation(line: 7974, column: 3, scope: !10307)
!10328 = !DILocation(line: 7977, column: 3, scope: !10307)
!10329 = !DILocation(line: 7977, column: 10, scope: !10307)
!10330 = !DILocation(line: 7977, column: 13, scope: !10307)
!10331 = !DILocation(line: 7977, column: 18, scope: !10307)
!10332 = !DILocation(line: 7978, column: 2, scope: !10307)
!10333 = !DILocation(line: 7979, column: 11, scope: !10267)
!10334 = !DILocation(line: 7979, column: 9, scope: !10267)
!10335 = !DILocation(line: 7980, column: 7, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10267, file: !3, line: 7980, column: 6)
!10337 = !DILocation(line: 7980, column: 14, scope: !10336)
!10338 = !DILocation(line: 7980, column: 17, scope: !10336)
!10339 = !DILocation(line: 7980, column: 29, scope: !10336)
!10340 = !DILocation(line: 7980, column: 38, scope: !10336)
!10341 = !DILocation(line: 7980, column: 27, scope: !10336)
!10342 = !DILocation(line: 7980, column: 54, scope: !10336)
!10343 = !DILocation(line: 7980, column: 6, scope: !10267)
!10344 = !DILocation(line: 7981, column: 3, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 7980, column: 60)
!10346 = !DILocation(line: 7981, column: 10, scope: !10345)
!10347 = !DILocation(line: 7981, column: 13, scope: !10345)
!10348 = !DILocation(line: 7981, column: 22, scope: !10345)
!10349 = !DILocation(line: 7982, column: 2, scope: !10345)
!10350 = !DILocation(line: 7983, column: 2, scope: !10267)
!10351 = !DILocation(line: 7983, column: 9, scope: !10267)
!10352 = !DILocation(line: 7983, column: 12, scope: !10267)
!10353 = !DILocation(line: 7983, column: 19, scope: !10267)
!10354 = !DILocation(line: 7984, column: 26, scope: !10267)
!10355 = !DILocation(line: 7985, column: 5, scope: !10267)
!10356 = !DILocation(line: 7985, column: 12, scope: !10267)
!10357 = !DILocation(line: 7986, column: 14, scope: !10267)
!10358 = !DILocation(line: 7986, column: 21, scope: !10267)
!10359 = !DILocation(line: 7986, column: 29, scope: !10267)
!10360 = !DILocation(line: 7986, column: 36, scope: !10267)
!10361 = !DILocation(line: 7986, column: 39, scope: !10267)
!10362 = !DILocation(line: 7986, column: 47, scope: !10267)
!10363 = !DILocation(line: 7984, column: 2, scope: !10267)
!10364 = !DILocation(line: 7988, column: 14, scope: !10267)
!10365 = !DILocation(line: 7989, column: 7, scope: !10267)
!10366 = !DILocation(line: 7989, column: 14, scope: !10267)
!10367 = !DILocation(line: 7990, column: 17, scope: !10267)
!10368 = !DILocation(line: 7990, column: 24, scope: !10267)
!10369 = !DILocation(line: 7990, column: 27, scope: !10267)
!10370 = !DILocation(line: 7988, column: 2, scope: !10267)
!10371 = !DILocation(line: 7992, column: 19, scope: !10267)
!10372 = !DILocation(line: 7993, column: 14, scope: !10267)
!10373 = !DILocation(line: 7993, column: 21, scope: !10267)
!10374 = !DILocation(line: 7993, column: 5, scope: !10267)
!10375 = !DILocation(line: 7994, column: 23, scope: !10267)
!10376 = !DILocation(line: 7994, column: 30, scope: !10267)
!10377 = !DILocation(line: 7995, column: 8, scope: !10267)
!10378 = !DILocation(line: 7994, column: 15, scope: !10267)
!10379 = !DILocation(line: 7995, column: 13, scope: !10267)
!10380 = !DILocation(line: 7995, column: 19, scope: !10267)
!10381 = !DILocation(line: 7994, column: 5, scope: !10267)
!10382 = !DILocation(line: 7992, column: 2, scope: !10267)
!10383 = !DILocation(line: 7996, column: 2, scope: !10267)
!10384 = distinct !DISubprogram(name: "AscMemDWordCopyPtrToLram", scope: !3, file: !3, line: 3867, type: !10385, scopeLine: 3869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{null, !7, !5240, !5252, !245}
!10387 = !DILocalVariable(name: "iop_base", arg: 1, scope: !10384, file: !3, line: 3867, type: !7)
!10388 = !DILocation(line: 3867, column: 35, scope: !10384)
!10389 = !DILocalVariable(name: "s_addr", arg: 2, scope: !10384, file: !3, line: 3868, type: !5240)
!10390 = !DILocation(line: 3868, column: 12, scope: !10384)
!10391 = !DILocalVariable(name: "s_buffer", arg: 3, scope: !10384, file: !3, line: 3868, type: !5252)
!10392 = !DILocation(line: 3868, column: 27, scope: !10384)
!10393 = !DILocalVariable(name: "dwords", arg: 4, scope: !10384, file: !3, line: 3868, type: !245)
!10394 = !DILocation(line: 3868, column: 41, scope: !10384)
!10395 = !DILocalVariable(name: "i", scope: !10384, file: !3, line: 3870, type: !245)
!10396 = !DILocation(line: 3870, column: 6, scope: !10384)
!10397 = !DILocation(line: 3872, column: 2, scope: !10384)
!10398 = !DILocation(line: 3873, column: 9, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 3873, column: 2)
!10400 = !DILocation(line: 3873, column: 7, scope: !10399)
!10401 = !DILocation(line: 3873, column: 14, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 3873, column: 2)
!10403 = !DILocation(line: 3873, column: 22, scope: !10402)
!10404 = !DILocation(line: 3873, column: 20, scope: !10402)
!10405 = !DILocation(line: 3873, column: 16, scope: !10402)
!10406 = !DILocation(line: 3873, column: 2, scope: !10399)
!10407 = !DILocation(line: 3874, column: 3, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 3873, column: 38)
!10409 = !DILocation(line: 3875, column: 3, scope: !10408)
!10410 = !DILocation(line: 3876, column: 2, scope: !10408)
!10411 = !DILocation(line: 3873, column: 32, scope: !10402)
!10412 = !DILocation(line: 3873, column: 2, scope: !10402)
!10413 = distinct !{!10413, !10406, !10414}
!10414 = !DILocation(line: 3876, column: 2, scope: !10399)
!10415 = !DILocation(line: 3877, column: 1, scope: !10384)
!10416 = distinct !DISubprogram(name: "DvcPutScsiQ", scope: !3, file: !3, line: 7942, type: !10385, scopeLine: 7943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10417 = !DILocalVariable(name: "iop_base", arg: 1, scope: !10416, file: !3, line: 7942, type: !7)
!10418 = !DILocation(line: 7942, column: 22, scope: !10416)
!10419 = !DILocalVariable(name: "s_addr", arg: 2, scope: !10416, file: !3, line: 7942, type: !5240)
!10420 = !DILocation(line: 7942, column: 39, scope: !10416)
!10421 = !DILocalVariable(name: "outbuf", arg: 3, scope: !10416, file: !3, line: 7942, type: !5252)
!10422 = !DILocation(line: 7942, column: 54, scope: !10416)
!10423 = !DILocalVariable(name: "words", arg: 4, scope: !10416, file: !3, line: 7942, type: !245)
!10424 = !DILocation(line: 7942, column: 66, scope: !10416)
!10425 = !DILocalVariable(name: "i", scope: !10416, file: !3, line: 7944, type: !245)
!10426 = !DILocation(line: 7944, column: 6, scope: !10416)
!10427 = !DILocation(line: 7947, column: 2, scope: !10416)
!10428 = !DILocation(line: 7948, column: 9, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 7948, column: 2)
!10430 = !DILocation(line: 7948, column: 7, scope: !10429)
!10431 = !DILocation(line: 7948, column: 14, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 7948, column: 2)
!10433 = !DILocation(line: 7948, column: 22, scope: !10432)
!10434 = !DILocation(line: 7948, column: 20, scope: !10432)
!10435 = !DILocation(line: 7948, column: 16, scope: !10432)
!10436 = !DILocation(line: 7948, column: 2, scope: !10429)
!10437 = !DILocation(line: 7949, column: 7, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 7949, column: 7)
!10439 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 7948, column: 37)
!10440 = !DILocation(line: 7949, column: 9, scope: !10438)
!10441 = !DILocation(line: 7949, column: 14, scope: !10438)
!10442 = !DILocation(line: 7949, column: 17, scope: !10438)
!10443 = !DILocation(line: 7949, column: 19, scope: !10438)
!10444 = !DILocation(line: 7949, column: 7, scope: !10439)
!10445 = !DILocation(line: 7950, column: 4, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 7949, column: 26)
!10447 = !DILocation(line: 7952, column: 3, scope: !10439)
!10448 = !DILocation(line: 7954, column: 2, scope: !10439)
!10449 = !DILocation(line: 7948, column: 31, scope: !10432)
!10450 = !DILocation(line: 7948, column: 2, scope: !10432)
!10451 = distinct !{!10451, !10436, !10452}
!10452 = !DILocation(line: 7954, column: 2, scope: !10429)
!10453 = !DILocation(line: 7955, column: 1, scope: !10416)
!10454 = distinct !DISubprogram(name: "scsi_bufflen", scope: !4978, file: !4978, line: 189, type: !10455, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10455 = !DISubroutineType(types: !10456)
!10456 = !{!7, !4976}
!10457 = !DILocalVariable(name: "cmd", arg: 1, scope: !10454, file: !4978, line: 189, type: !4976)
!10458 = !DILocation(line: 189, column: 55, scope: !10454)
!10459 = !DILocation(line: 191, column: 9, scope: !10454)
!10460 = !DILocation(line: 191, column: 14, scope: !10454)
!10461 = !DILocation(line: 191, column: 18, scope: !10454)
!10462 = !DILocation(line: 191, column: 2, scope: !10454)
!10463 = distinct !DISubprogram(name: "adv_get_sglist", scope: !3, file: !3, line: 7626, type: !10464, scopeLine: 7628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!245, !190, !5630, !8617, !4976, !245}
!10466 = !DILocalVariable(name: "boardp", arg: 1, scope: !10463, file: !3, line: 7626, type: !190)
!10467 = !DILocation(line: 7626, column: 34, scope: !10463)
!10468 = !DILocalVariable(name: "reqp", arg: 2, scope: !10463, file: !3, line: 7626, type: !5630)
!10469 = !DILocation(line: 7626, column: 53, scope: !10463)
!10470 = !DILocalVariable(name: "scsiqp", arg: 3, scope: !10463, file: !3, line: 7627, type: !8617)
!10471 = !DILocation(line: 7627, column: 25, scope: !10463)
!10472 = !DILocalVariable(name: "scp", arg: 4, scope: !10463, file: !3, line: 7627, type: !4976)
!10473 = !DILocation(line: 7627, column: 51, scope: !10463)
!10474 = !DILocalVariable(name: "use_sg", arg: 5, scope: !10463, file: !3, line: 7627, type: !245)
!10475 = !DILocation(line: 7627, column: 60, scope: !10463)
!10476 = !DILocalVariable(name: "sgblkp", scope: !10463, file: !3, line: 7629, type: !5686)
!10477 = !DILocation(line: 7629, column: 15, scope: !10463)
!10478 = !DILocalVariable(name: "prev_sgblkp", scope: !10463, file: !3, line: 7629, type: !5686)
!10479 = !DILocation(line: 7629, column: 24, scope: !10463)
!10480 = !DILocalVariable(name: "slp", scope: !10463, file: !3, line: 7630, type: !5015)
!10481 = !DILocation(line: 7630, column: 22, scope: !10463)
!10482 = !DILocalVariable(name: "sg_elem_cnt", scope: !10463, file: !3, line: 7631, type: !245)
!10483 = !DILocation(line: 7631, column: 6, scope: !10463)
!10484 = !DILocalVariable(name: "sg_block", scope: !10463, file: !3, line: 7632, type: !5664)
!10485 = !DILocation(line: 7632, column: 16, scope: !10463)
!10486 = !DILocalVariable(name: "prev_sg_block", scope: !10463, file: !3, line: 7632, type: !5664)
!10487 = !DILocation(line: 7632, column: 27, scope: !10463)
!10488 = !DILocalVariable(name: "sgblk_paddr", scope: !10463, file: !3, line: 7633, type: !977)
!10489 = !DILocation(line: 7633, column: 13, scope: !10463)
!10490 = !DILocalVariable(name: "i", scope: !10463, file: !3, line: 7634, type: !245)
!10491 = !DILocation(line: 7634, column: 6, scope: !10463)
!10492 = !DILocation(line: 7636, column: 20, scope: !10463)
!10493 = !DILocation(line: 7636, column: 8, scope: !10463)
!10494 = !DILocation(line: 7636, column: 6, scope: !10463)
!10495 = !DILocation(line: 7637, column: 16, scope: !10463)
!10496 = !DILocation(line: 7637, column: 14, scope: !10463)
!10497 = !DILocation(line: 7638, column: 14, scope: !10463)
!10498 = !DILocation(line: 7639, column: 16, scope: !10463)
!10499 = !DILocation(line: 7640, column: 2, scope: !10463)
!10500 = !DILocation(line: 7640, column: 8, scope: !10463)
!10501 = !DILocation(line: 7640, column: 15, scope: !10463)
!10502 = !DILocation(line: 7642, column: 2, scope: !10463)
!10503 = !DILocation(line: 7648, column: 27, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 7642, column: 11)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 7642, column: 2)
!10506 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 7642, column: 2)
!10507 = !DILocation(line: 7648, column: 35, scope: !10504)
!10508 = !DILocation(line: 7648, column: 12, scope: !10504)
!10509 = !DILocation(line: 7648, column: 10, scope: !10504)
!10510 = !DILocation(line: 7650, column: 8, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 7650, column: 7)
!10512 = !DILocation(line: 7650, column: 7, scope: !10504)
!10513 = !DILocation(line: 7652, column: 4, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 7650, column: 16)
!10515 = !DILocation(line: 7658, column: 4, scope: !10514)
!10516 = !DILocation(line: 7658, column: 21, scope: !10514)
!10517 = !DILocation(line: 7658, column: 27, scope: !10514)
!10518 = !DILocation(line: 7658, column: 19, scope: !10514)
!10519 = !DILocation(line: 7658, column: 35, scope: !10514)
!10520 = !DILocation(line: 7660, column: 20, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10514, file: !3, line: 7658, column: 44)
!10522 = !DILocation(line: 7660, column: 28, scope: !10521)
!10523 = !DILocation(line: 7660, column: 5, scope: !10521)
!10524 = !DILocation(line: 7660, column: 11, scope: !10521)
!10525 = !DILocation(line: 7660, column: 18, scope: !10521)
!10526 = !DILocation(line: 7661, column: 5, scope: !10521)
!10527 = !DILocation(line: 7661, column: 13, scope: !10521)
!10528 = !DILocation(line: 7661, column: 25, scope: !10521)
!10529 = !DILocation(line: 7662, column: 19, scope: !10521)
!10530 = !DILocation(line: 7662, column: 27, scope: !10521)
!10531 = !DILocation(line: 7662, column: 43, scope: !10521)
!10532 = !DILocation(line: 7663, column: 12, scope: !10521)
!10533 = !DILocation(line: 7663, column: 20, scope: !10521)
!10534 = !DILocation(line: 7662, column: 5, scope: !10521)
!10535 = distinct !{!10535, !10515, !10536}
!10536 = !DILocation(line: 7664, column: 4, scope: !10514)
!10537 = !DILocation(line: 7665, column: 4, scope: !10514)
!10538 = !DILocation(line: 7668, column: 21, scope: !10504)
!10539 = !DILocation(line: 7668, column: 3, scope: !10504)
!10540 = !DILocation(line: 7668, column: 11, scope: !10504)
!10541 = !DILocation(line: 7668, column: 19, scope: !10504)
!10542 = !DILocation(line: 7669, column: 3, scope: !10504)
!10543 = !DILocation(line: 7669, column: 11, scope: !10504)
!10544 = !DILocation(line: 7669, column: 23, scope: !10504)
!10545 = !DILocation(line: 7670, column: 15, scope: !10504)
!10546 = !DILocation(line: 7670, column: 23, scope: !10504)
!10547 = !DILocation(line: 7670, column: 12, scope: !10504)
!10548 = !DILocation(line: 7676, column: 7, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 7676, column: 7)
!10550 = !DILocation(line: 7676, column: 13, scope: !10549)
!10551 = !DILocation(line: 7676, column: 20, scope: !10549)
!10552 = !DILocation(line: 7676, column: 7, scope: !10504)
!10553 = !DILocation(line: 7678, column: 19, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 7676, column: 29)
!10555 = !DILocation(line: 7678, column: 4, scope: !10554)
!10556 = !DILocation(line: 7678, column: 10, scope: !10554)
!10557 = !DILocation(line: 7678, column: 17, scope: !10554)
!10558 = !DILocation(line: 7684, column: 26, scope: !10554)
!10559 = !DILocation(line: 7684, column: 4, scope: !10554)
!10560 = !DILocation(line: 7684, column: 12, scope: !10554)
!10561 = !DILocation(line: 7684, column: 24, scope: !10554)
!10562 = !DILocation(line: 7685, column: 27, scope: !10554)
!10563 = !DILocation(line: 7685, column: 4, scope: !10554)
!10564 = !DILocation(line: 7685, column: 12, scope: !10554)
!10565 = !DILocation(line: 7685, column: 25, scope: !10554)
!10566 = !DILocation(line: 7686, column: 3, scope: !10554)
!10567 = !DILocation(line: 7688, column: 31, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 7686, column: 10)
!10569 = !DILocation(line: 7688, column: 4, scope: !10568)
!10570 = !DILocation(line: 7688, column: 17, scope: !10568)
!10571 = !DILocation(line: 7688, column: 29, scope: !10568)
!10572 = !DILocation(line: 7694, column: 28, scope: !10568)
!10573 = !DILocation(line: 7694, column: 4, scope: !10568)
!10574 = !DILocation(line: 7694, column: 19, scope: !10568)
!10575 = !DILocation(line: 7694, column: 26, scope: !10568)
!10576 = !DILocation(line: 7697, column: 10, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 7697, column: 3)
!10578 = !DILocation(line: 7697, column: 8, scope: !10577)
!10579 = !DILocation(line: 7697, column: 15, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 7697, column: 3)
!10581 = !DILocation(line: 7697, column: 17, scope: !10580)
!10582 = !DILocation(line: 7697, column: 3, scope: !10577)
!10583 = !DILocation(line: 7699, column: 6, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 7697, column: 44)
!10585 = !DILocation(line: 7698, column: 4, scope: !10584)
!10586 = !DILocation(line: 7698, column: 14, scope: !10584)
!10587 = !DILocation(line: 7698, column: 22, scope: !10584)
!10588 = !DILocation(line: 7698, column: 25, scope: !10584)
!10589 = !DILocation(line: 7698, column: 33, scope: !10584)
!10590 = !DILocation(line: 7701, column: 6, scope: !10584)
!10591 = !DILocation(line: 7700, column: 4, scope: !10584)
!10592 = !DILocation(line: 7700, column: 14, scope: !10584)
!10593 = !DILocation(line: 7700, column: 22, scope: !10584)
!10594 = !DILocation(line: 7700, column: 25, scope: !10584)
!10595 = !DILocation(line: 7700, column: 34, scope: !10584)
!10596 = !DILocation(line: 7702, column: 4, scope: !10584)
!10597 = !DILocation(line: 7705, column: 8, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 7705, column: 8)
!10599 = !DILocation(line: 7705, column: 22, scope: !10598)
!10600 = !DILocation(line: 7705, column: 8, scope: !10584)
!10601 = !DILocation(line: 7709, column: 24, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 7705, column: 28)
!10603 = !DILocation(line: 7709, column: 26, scope: !10602)
!10604 = !DILocation(line: 7709, column: 5, scope: !10602)
!10605 = !DILocation(line: 7709, column: 15, scope: !10602)
!10606 = !DILocation(line: 7709, column: 22, scope: !10602)
!10607 = !DILocation(line: 7710, column: 5, scope: !10602)
!10608 = !DILocation(line: 7710, column: 15, scope: !10602)
!10609 = !DILocation(line: 7710, column: 22, scope: !10602)
!10610 = !DILocation(line: 7711, column: 5, scope: !10602)
!10611 = !DILocation(line: 7713, column: 18, scope: !10584)
!10612 = !DILocation(line: 7713, column: 10, scope: !10584)
!10613 = !DILocation(line: 7713, column: 8, scope: !10584)
!10614 = !DILocation(line: 7714, column: 3, scope: !10584)
!10615 = !DILocation(line: 7697, column: 40, scope: !10580)
!10616 = !DILocation(line: 7697, column: 3, scope: !10580)
!10617 = distinct !{!10617, !10582, !10618}
!10618 = !DILocation(line: 7714, column: 3, scope: !10577)
!10619 = !DILocation(line: 7715, column: 3, scope: !10504)
!10620 = !DILocation(line: 7715, column: 13, scope: !10504)
!10621 = !DILocation(line: 7715, column: 20, scope: !10504)
!10622 = !DILocation(line: 7716, column: 19, scope: !10504)
!10623 = !DILocation(line: 7716, column: 17, scope: !10504)
!10624 = !DILocation(line: 7717, column: 17, scope: !10504)
!10625 = !DILocation(line: 7717, column: 15, scope: !10504)
!10626 = !DILocation(line: 7642, column: 2, scope: !10505)
!10627 = distinct !{!10627, !10628, !10629}
!10628 = !DILocation(line: 7642, column: 2, scope: !10506)
!10629 = !DILocation(line: 7718, column: 2, scope: !10506)
!10630 = !DILocation(line: 7719, column: 1, scope: !10463)
!10631 = distinct !DISubprogram(name: "adv_get_next_carrier", scope: !3, file: !3, line: 4246, type: !10632, scopeLine: 4247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10632 = !DISubroutineType(types: !10633)
!10633 = !{!5377, !10634}
!10634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!10635 = !DILocalVariable(name: "adv_dvc", arg: 1, scope: !10631, file: !3, line: 4246, type: !10634)
!10636 = !DILocation(line: 4246, column: 61, scope: !10631)
!10637 = !DILocalVariable(name: "carrp", scope: !10631, file: !3, line: 4248, type: !5377)
!10638 = !DILocation(line: 4248, column: 14, scope: !10631)
!10639 = !DILocation(line: 4248, column: 22, scope: !10631)
!10640 = !DILocation(line: 4248, column: 31, scope: !10631)
!10641 = !DILocalVariable(name: "next_vpa", scope: !10631, file: !3, line: 4249, type: !402)
!10642 = !DILocation(line: 4249, column: 6, scope: !10631)
!10643 = !DILocation(line: 4249, column: 17, scope: !10631)
!10644 = !DILocation(line: 4251, column: 6, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 4251, column: 6)
!10646 = !DILocation(line: 4251, column: 15, scope: !10645)
!10647 = !DILocation(line: 4251, column: 20, scope: !10645)
!10648 = !DILocation(line: 4251, column: 23, scope: !10645)
!10649 = !DILocation(line: 4251, column: 32, scope: !10645)
!10650 = !DILocation(line: 4251, column: 6, scope: !10631)
!10651 = !DILocation(line: 4253, column: 3, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 4251, column: 39)
!10653 = !DILocation(line: 4256, column: 43, scope: !10631)
!10654 = !DILocation(line: 4256, column: 52, scope: !10631)
!10655 = !DILocation(line: 4256, column: 27, scope: !10631)
!10656 = !DILocation(line: 4256, column: 2, scope: !10631)
!10657 = !DILocation(line: 4256, column: 11, scope: !10631)
!10658 = !DILocation(line: 4256, column: 25, scope: !10631)
!10659 = !DILocation(line: 4260, column: 2, scope: !10631)
!10660 = !DILocation(line: 4260, column: 9, scope: !10631)
!10661 = !DILocation(line: 4260, column: 18, scope: !10631)
!10662 = !DILocation(line: 4262, column: 9, scope: !10631)
!10663 = !DILocation(line: 4262, column: 2, scope: !10631)
!10664 = !DILocation(line: 4263, column: 1, scope: !10631)
!10665 = distinct !DISubprogram(name: "writeb", scope: !9839, file: !9839, line: 65, type: !10666, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10666 = !DISubroutineType(types: !10667)
!10667 = !{null, !414, !10668}
!10668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10669, size: 64)
!10669 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10670 = !DILocalVariable(name: "val", arg: 1, scope: !10665, file: !9839, line: 65, type: !414)
!10671 = !DILocation(line: 65, column: 1, scope: !10665)
!10672 = !DILocalVariable(name: "addr", arg: 2, scope: !10665, file: !9839, line: 65, type: !10668)
!10673 = !{i32 -2141389347}
!10674 = distinct !DISubprogram(name: "writel", scope: !9839, file: !9839, line: 67, type: !10675, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10675 = !DISubroutineType(types: !10676)
!10676 = !{null, !7, !10668}
!10677 = !DILocalVariable(name: "val", arg: 1, scope: !10674, file: !9839, line: 67, type: !7)
!10678 = !DILocation(line: 67, column: 1, scope: !10674)
!10679 = !DILocalVariable(name: "addr", arg: 2, scope: !10674, file: !9839, line: 67, type: !10668)
!10680 = !{i32 -2141388577}
!10681 = distinct !DISubprogram(name: "adv_get_carrier", scope: !3, file: !3, line: 4236, type: !10682, scopeLine: 4237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{!5377, !10634, !402}
!10684 = !DILocalVariable(name: "adv_dvc", arg: 1, scope: !10681, file: !3, line: 4236, type: !10634)
!10685 = !DILocation(line: 4236, column: 56, scope: !10681)
!10686 = !DILocalVariable(name: "offset", arg: 2, scope: !10681, file: !3, line: 4236, type: !402)
!10687 = !DILocation(line: 4236, column: 69, scope: !10681)
!10688 = !DILocalVariable(name: "index", scope: !10681, file: !3, line: 4238, type: !245)
!10689 = !DILocation(line: 4238, column: 6, scope: !10681)
!10690 = !DILocation(line: 4240, column: 2, scope: !10681)
!10691 = !DILocation(line: 4240, column: 2, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 4240, column: 2)
!10693 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 4240, column: 2)
!10694 = !DILocation(line: 4240, column: 2, scope: !10693)
!10695 = !DILocation(line: 4240, column: 2, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 4240, column: 2)
!10697 = !DILocation(line: 4240, column: 2, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 4240, column: 2)
!10699 = !DILocation(line: 4240, column: 2, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 4240, column: 2)
!10701 = !{i32 -2140688790, i32 -2140688761, i32 -2140688715, i32 -2140688657, i32 -2140688603, i32 -2140688549, i32 -2140688494, i32 -2140688463}
!10702 = !DILocation(line: 4240, column: 2, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 4240, column: 2)
!10704 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 4240, column: 2)
!10705 = !{i32 -2140688016, i32 -2140688009, i32 -2140687955, i32 -2140687924, i32 -2140687894}
!10706 = !DILocation(line: 4240, column: 2, scope: !10704)
!10707 = !DILocation(line: 4242, column: 10, scope: !10681)
!10708 = !DILocation(line: 4242, column: 17, scope: !10681)
!10709 = !DILocation(line: 4242, column: 8, scope: !10681)
!10710 = !DILocation(line: 4243, column: 10, scope: !10681)
!10711 = !DILocation(line: 4243, column: 19, scope: !10681)
!10712 = !DILocation(line: 4243, column: 27, scope: !10681)
!10713 = !DILocation(line: 4243, column: 2, scope: !10681)
!10714 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7692, file: !7692, line: 651, type: !10715, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10715 = !DISubroutineType(types: !10716)
!10716 = !{null, !189}
!10717 = !DILocalVariable(name: "f", arg: 1, scope: !10714, file: !7692, line: 651, type: !189)
!10718 = !DILocation(line: 651, column: 65, scope: !10714)
!10719 = !DILocalVariable(name: "__edi", scope: !10720, file: !7692, line: 653, type: !189)
!10720 = distinct !DILexicalBlock(scope: !10714, file: !7692, line: 653, column: 2)
!10721 = !DILocation(line: 653, column: 2, scope: !10720)
!10722 = !DILocalVariable(name: "__esi", scope: !10720, file: !7692, line: 653, type: !189)
!10723 = !DILocalVariable(name: "__edx", scope: !10720, file: !7692, line: 653, type: !189)
!10724 = !DILocalVariable(name: "__ecx", scope: !10720, file: !7692, line: 653, type: !189)
!10725 = !DILocalVariable(name: "__eax", scope: !10720, file: !7692, line: 653, type: !189)
!10726 = !{i32 -2145433080, i32 -2145432330, i32 -2145432096, i32 -2145432045, i32 -2145432017, i32 -2145431992, i32 -2145432308, i32 -2145432295, i32 -2145431857, i32 -2145431738, i32 -2145432203, i32 -2145432176, i32 -2145432148, i32 -2145432118}
!10727 = !DILocation(line: 654, column: 1, scope: !10714)
!10728 = distinct !DISubprogram(name: "AscInitAsc1000Driver", scope: !3, file: !3, line: 4078, type: !10729, scopeLine: 4079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10729 = !DISubroutineType(types: !10730)
!10730 = !{!245, !6375}
!10731 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !10728, file: !3, line: 4078, type: !6375)
!10732 = !DILocation(line: 4078, column: 46, scope: !10728)
!10733 = !DILocalVariable(name: "fw", scope: !10728, file: !3, line: 4080, type: !10734)
!10734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10735, size: 64)
!10735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10736)
!10736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !10737, line: 12, size: 192, elements: !10738)
!10737 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!10738 = !{!10739, !10740, !10743}
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10736, file: !10737, line: 13, baseType: !308, size: 64)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10736, file: !10737, line: 14, baseType: !10741, size: 64, offset: 64)
!10741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10742, size: 64)
!10742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !10736, file: !10737, line: 17, baseType: !334, size: 64, offset: 128)
!10744 = !DILocation(line: 4080, column: 25, scope: !10728)
!10745 = !DILocalVariable(name: "fwname", scope: !10728, file: !3, line: 4081, type: !10746)
!10746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 152, elements: !10747)
!10747 = !{!10748}
!10748 = !DISubrange(count: 19)
!10749 = !DILocation(line: 4081, column: 13, scope: !10728)
!10750 = !DILocalVariable(name: "err", scope: !10728, file: !3, line: 4082, type: !245)
!10751 = !DILocation(line: 4082, column: 6, scope: !10728)
!10752 = !DILocalVariable(name: "chksum", scope: !10728, file: !3, line: 4083, type: !189)
!10753 = !DILocation(line: 4083, column: 16, scope: !10728)
!10754 = !DILocalVariable(name: "warn_code", scope: !10728, file: !3, line: 4084, type: !245)
!10755 = !DILocation(line: 4084, column: 6, scope: !10728)
!10756 = !DILocalVariable(name: "iop_base", scope: !10728, file: !3, line: 4085, type: !7)
!10757 = !DILocation(line: 4085, column: 11, scope: !10728)
!10758 = !DILocation(line: 4087, column: 13, scope: !10728)
!10759 = !DILocation(line: 4087, column: 22, scope: !10728)
!10760 = !DILocation(line: 4087, column: 11, scope: !10728)
!10761 = !DILocation(line: 4088, column: 12, scope: !10728)
!10762 = !DILocation(line: 4089, column: 7, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4089, column: 6)
!10764 = !DILocation(line: 4089, column: 16, scope: !10763)
!10765 = !DILocation(line: 4089, column: 25, scope: !10763)
!10766 = !DILocation(line: 4089, column: 48, scope: !10763)
!10767 = !DILocation(line: 4090, column: 8, scope: !10763)
!10768 = !DILocation(line: 4090, column: 17, scope: !10763)
!10769 = !DILocation(line: 4090, column: 28, scope: !10763)
!10770 = !DILocation(line: 4089, column: 6, scope: !10728)
!10771 = !DILocation(line: 4091, column: 26, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 4090, column: 57)
!10773 = !DILocation(line: 4091, column: 3, scope: !10772)
!10774 = !DILocation(line: 4092, column: 3, scope: !10772)
!10775 = !DILocation(line: 4092, column: 3, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10777, file: !3, line: 4092, column: 3)
!10777 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 4092, column: 3)
!10778 = !DILocation(line: 4092, column: 3, scope: !10777)
!10779 = !DILocation(line: 4092, column: 3, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 4092, column: 3)
!10781 = distinct !DILexicalBlock(scope: !10776, file: !3, line: 4092, column: 3)
!10782 = !DILocation(line: 4092, column: 3, scope: !10781)
!10783 = !DILocation(line: 4092, column: 3, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10776, file: !3, line: 4092, column: 3)
!10785 = !DILocalVariable(name: "__ms", scope: !10786, file: !3, line: 4092, type: !189)
!10786 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 4092, column: 3)
!10787 = !DILocation(line: 4092, column: 3, scope: !10786)
!10788 = !DILocation(line: 4092, column: 3, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 4092, column: 3)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 4092, column: 3)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 4092, column: 3)
!10792 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 4092, column: 3)
!10793 = distinct !{!10793, !10787, !10787}
!10794 = !DILocation(line: 4093, column: 2, scope: !10772)
!10795 = !DILocation(line: 4094, column: 2, scope: !10728)
!10796 = !DILocation(line: 4094, column: 11, scope: !10728)
!10797 = !DILocation(line: 4094, column: 22, scope: !10728)
!10798 = !DILocation(line: 4095, column: 6, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4095, column: 6)
!10800 = !DILocation(line: 4095, column: 15, scope: !10799)
!10801 = !DILocation(line: 4095, column: 24, scope: !10799)
!10802 = !DILocation(line: 4095, column: 6, scope: !10728)
!10803 = !DILocation(line: 4096, column: 3, scope: !10799)
!10804 = !DILocation(line: 4097, column: 24, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4097, column: 6)
!10806 = !DILocation(line: 4097, column: 33, scope: !10805)
!10807 = !DILocation(line: 4097, column: 7, scope: !10805)
!10808 = !DILocation(line: 4097, column: 6, scope: !10728)
!10809 = !DILocation(line: 4098, column: 3, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 4097, column: 44)
!10811 = !DILocation(line: 4098, column: 12, scope: !10810)
!10812 = !DILocation(line: 4098, column: 21, scope: !10810)
!10813 = !DILocation(line: 4099, column: 10, scope: !10810)
!10814 = !DILocation(line: 4099, column: 3, scope: !10810)
!10815 = !DILocation(line: 4101, column: 22, scope: !10728)
!10816 = !DILocation(line: 4101, column: 2, scope: !10728)
!10817 = !DILocation(line: 4102, column: 14, scope: !10728)
!10818 = !DILocation(line: 4102, column: 2, scope: !10728)
!10819 = !DILocation(line: 4104, column: 30, scope: !10728)
!10820 = !DILocation(line: 4104, column: 38, scope: !10728)
!10821 = !DILocation(line: 4104, column: 47, scope: !10728)
!10822 = !DILocation(line: 4104, column: 56, scope: !10728)
!10823 = !DILocation(line: 4104, column: 8, scope: !10728)
!10824 = !DILocation(line: 4104, column: 6, scope: !10728)
!10825 = !DILocation(line: 4105, column: 6, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4105, column: 6)
!10827 = !DILocation(line: 4105, column: 6, scope: !10728)
!10828 = !DILocation(line: 4107, column: 10, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 4105, column: 11)
!10830 = !DILocation(line: 4107, column: 18, scope: !10829)
!10831 = !DILocation(line: 4106, column: 3, scope: !10829)
!10832 = !DILocation(line: 4108, column: 3, scope: !10829)
!10833 = !DILocation(line: 4108, column: 12, scope: !10829)
!10834 = !DILocation(line: 4108, column: 21, scope: !10829)
!10835 = !DILocation(line: 4109, column: 10, scope: !10829)
!10836 = !DILocation(line: 4109, column: 3, scope: !10829)
!10837 = !DILocation(line: 4111, column: 6, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4111, column: 6)
!10839 = !DILocation(line: 4111, column: 10, scope: !10838)
!10840 = !DILocation(line: 4111, column: 15, scope: !10838)
!10841 = !DILocation(line: 4111, column: 6, scope: !10728)
!10842 = !DILocation(line: 4113, column: 10, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 4111, column: 20)
!10844 = !DILocation(line: 4113, column: 14, scope: !10843)
!10845 = !DILocation(line: 4113, column: 20, scope: !10843)
!10846 = !DILocation(line: 4112, column: 3, scope: !10843)
!10847 = !DILocation(line: 4114, column: 20, scope: !10843)
!10848 = !DILocation(line: 4114, column: 3, scope: !10843)
!10849 = !DILocation(line: 4115, column: 3, scope: !10843)
!10850 = !DILocation(line: 4115, column: 12, scope: !10843)
!10851 = !DILocation(line: 4115, column: 21, scope: !10843)
!10852 = !DILocation(line: 4116, column: 3, scope: !10843)
!10853 = !DILocation(line: 4118, column: 12, scope: !10728)
!10854 = !DILocation(line: 4118, column: 16, scope: !10728)
!10855 = !DILocation(line: 4118, column: 24, scope: !10728)
!10856 = !DILocation(line: 4118, column: 34, scope: !10728)
!10857 = !DILocation(line: 4118, column: 38, scope: !10728)
!10858 = !DILocation(line: 4118, column: 46, scope: !10728)
!10859 = !DILocation(line: 4118, column: 31, scope: !10728)
!10860 = !DILocation(line: 4119, column: 5, scope: !10728)
!10861 = !DILocation(line: 4119, column: 9, scope: !10728)
!10862 = !DILocation(line: 4119, column: 17, scope: !10728)
!10863 = !DILocation(line: 4118, column: 53, scope: !10728)
!10864 = !DILocation(line: 4119, column: 25, scope: !10728)
!10865 = !DILocation(line: 4119, column: 29, scope: !10728)
!10866 = !DILocation(line: 4119, column: 23, scope: !10728)
!10867 = !DILocation(line: 4118, column: 11, scope: !10728)
!10868 = !DILocation(line: 4118, column: 9, scope: !10728)
!10869 = !DILocation(line: 4121, column: 23, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4121, column: 6)
!10871 = !DILocation(line: 4121, column: 37, scope: !10870)
!10872 = !DILocation(line: 4121, column: 41, scope: !10870)
!10873 = !DILocation(line: 4122, column: 9, scope: !10870)
!10874 = !DILocation(line: 4122, column: 13, scope: !10870)
!10875 = !DILocation(line: 4122, column: 18, scope: !10870)
!10876 = !DILocation(line: 4121, column: 6, scope: !10870)
!10877 = !DILocation(line: 4122, column: 26, scope: !10870)
!10878 = !DILocation(line: 4122, column: 23, scope: !10870)
!10879 = !DILocation(line: 4121, column: 6, scope: !10728)
!10880 = !DILocation(line: 4123, column: 3, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 4122, column: 34)
!10882 = !DILocation(line: 4123, column: 12, scope: !10881)
!10883 = !DILocation(line: 4123, column: 21, scope: !10881)
!10884 = !DILocation(line: 4124, column: 20, scope: !10881)
!10885 = !DILocation(line: 4124, column: 3, scope: !10881)
!10886 = !DILocation(line: 4125, column: 10, scope: !10881)
!10887 = !DILocation(line: 4125, column: 3, scope: !10881)
!10888 = !DILocation(line: 4127, column: 19, scope: !10728)
!10889 = !DILocation(line: 4127, column: 2, scope: !10728)
!10890 = !DILocation(line: 4128, column: 35, scope: !10728)
!10891 = !DILocation(line: 4128, column: 15, scope: !10728)
!10892 = !DILocation(line: 4128, column: 12, scope: !10728)
!10893 = !DILocation(line: 4129, column: 7, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 4129, column: 6)
!10895 = !DILocation(line: 4129, column: 16, scope: !10894)
!10896 = !DILocation(line: 4129, column: 6, scope: !10728)
!10897 = !DILocation(line: 4130, column: 10, scope: !10894)
!10898 = !DILocation(line: 4130, column: 3, scope: !10894)
!10899 = !DILocation(line: 4131, column: 2, scope: !10728)
!10900 = !DILocation(line: 4131, column: 11, scope: !10728)
!10901 = !DILocation(line: 4131, column: 22, scope: !10728)
!10902 = !DILocation(line: 4132, column: 21, scope: !10728)
!10903 = !DILocation(line: 4132, column: 2, scope: !10728)
!10904 = !DILocation(line: 4133, column: 9, scope: !10728)
!10905 = !DILocation(line: 4133, column: 2, scope: !10728)
!10906 = !DILocation(line: 4134, column: 1, scope: !10728)
!10907 = distinct !DISubprogram(name: "AdvResetChipAndSB", scope: !3, file: !3, line: 5819, type: !10908, scopeLine: 5820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!10908 = !DISubroutineType(types: !10909)
!10909 = !{!245, !6378}
!10910 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !10907, file: !3, line: 5819, type: !6378)
!10911 = !DILocation(line: 5819, column: 43, scope: !10907)
!10912 = !DILocalVariable(name: "status", scope: !10907, file: !3, line: 5821, type: !245)
!10913 = !DILocation(line: 5821, column: 6, scope: !10907)
!10914 = !DILocalVariable(name: "wdtr_able", scope: !10907, file: !3, line: 5822, type: !5240)
!10915 = !DILocation(line: 5822, column: 9, scope: !10907)
!10916 = !DILocalVariable(name: "sdtr_able", scope: !10907, file: !3, line: 5822, type: !5240)
!10917 = !DILocation(line: 5822, column: 20, scope: !10907)
!10918 = !DILocalVariable(name: "tagqng_able", scope: !10907, file: !3, line: 5822, type: !5240)
!10919 = !DILocation(line: 5822, column: 31, scope: !10907)
!10920 = !DILocalVariable(name: "ppr_able", scope: !10907, file: !3, line: 5823, type: !5240)
!10921 = !DILocation(line: 5823, column: 9, scope: !10907)
!10922 = !DILocalVariable(name: "tid", scope: !10907, file: !3, line: 5824, type: !5245)
!10923 = !DILocation(line: 5824, column: 8, scope: !10907)
!10924 = !DILocalVariable(name: "max_cmd", scope: !10907, file: !3, line: 5824, type: !5469)
!10925 = !DILocation(line: 5824, column: 13, scope: !10907)
!10926 = !DILocalVariable(name: "iop_base", scope: !10907, file: !3, line: 5825, type: !334)
!10927 = !DILocation(line: 5825, column: 14, scope: !10907)
!10928 = !DILocalVariable(name: "bios_sig", scope: !10907, file: !3, line: 5826, type: !5240)
!10929 = !DILocation(line: 5826, column: 9, scope: !10907)
!10930 = !DILocation(line: 5828, column: 13, scope: !10907)
!10931 = !DILocation(line: 5828, column: 22, scope: !10907)
!10932 = !DILocation(line: 5828, column: 11, scope: !10907)
!10933 = !DILocation(line: 5833, column: 2, scope: !10907)
!10934 = !DILocation(line: 5833, column: 2, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5833, column: 2)
!10936 = !DILocation(line: 5834, column: 2, scope: !10907)
!10937 = !DILocation(line: 5834, column: 2, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5834, column: 2)
!10939 = !DILocation(line: 5835, column: 6, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5835, column: 6)
!10941 = !DILocation(line: 5835, column: 15, scope: !10940)
!10942 = !DILocation(line: 5835, column: 25, scope: !10940)
!10943 = !DILocation(line: 5835, column: 6, scope: !10907)
!10944 = !DILocation(line: 5836, column: 3, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 5835, column: 49)
!10946 = !DILocation(line: 5836, column: 3, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 5836, column: 3)
!10948 = !DILocation(line: 5837, column: 2, scope: !10945)
!10949 = !DILocation(line: 5838, column: 2, scope: !10907)
!10950 = !DILocation(line: 5838, column: 2, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5838, column: 2)
!10952 = !DILocation(line: 5839, column: 11, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5839, column: 2)
!10954 = !DILocation(line: 5839, column: 7, scope: !10953)
!10955 = !DILocation(line: 5839, column: 16, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 5839, column: 2)
!10957 = !DILocation(line: 5839, column: 20, scope: !10956)
!10958 = !DILocation(line: 5839, column: 2, scope: !10953)
!10959 = !DILocation(line: 5840, column: 3, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10956, file: !3, line: 5839, column: 43)
!10961 = !DILocation(line: 5840, column: 3, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 5840, column: 3)
!10963 = !DILocation(line: 5842, column: 2, scope: !10960)
!10964 = !DILocation(line: 5839, column: 39, scope: !10956)
!10965 = !DILocation(line: 5839, column: 2, scope: !10956)
!10966 = distinct !{!10966, !10958, !10967}
!10967 = !DILocation(line: 5842, column: 2, scope: !10953)
!10968 = !DILocation(line: 5850, column: 2, scope: !10907)
!10969 = !DILocation(line: 5850, column: 2, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5850, column: 2)
!10971 = !DILocation(line: 5851, column: 2, scope: !10907)
!10972 = !DILocation(line: 5856, column: 2, scope: !10907)
!10973 = !DILocation(line: 5857, column: 2, scope: !10907)
!10974 = !DILocalVariable(name: "__ms", scope: !10975, file: !3, line: 5858, type: !189)
!10975 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5858, column: 2)
!10976 = !DILocation(line: 5858, column: 2, scope: !10975)
!10977 = !DILocation(line: 5858, column: 2, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 5858, column: 2)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 5858, column: 2)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 5858, column: 2)
!10981 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 5858, column: 2)
!10982 = distinct !{!10982, !10976, !10976}
!10983 = !DILocation(line: 5859, column: 2, scope: !10907)
!10984 = !DILocation(line: 5866, column: 2, scope: !10907)
!10985 = !DILocation(line: 5866, column: 11, scope: !10907)
!10986 = !DILocation(line: 5866, column: 20, scope: !10907)
!10987 = !DILocation(line: 5867, column: 6, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5867, column: 6)
!10989 = !DILocation(line: 5867, column: 15, scope: !10988)
!10990 = !DILocation(line: 5867, column: 25, scope: !10988)
!10991 = !DILocation(line: 5867, column: 6, scope: !10907)
!10992 = !DILocation(line: 5868, column: 36, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 5867, column: 49)
!10994 = !DILocation(line: 5868, column: 12, scope: !10993)
!10995 = !DILocation(line: 5868, column: 10, scope: !10993)
!10996 = !DILocation(line: 5869, column: 2, scope: !10993)
!10997 = !DILocation(line: 5869, column: 13, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 5869, column: 13)
!10999 = !DILocation(line: 5869, column: 22, scope: !10998)
!11000 = !DILocation(line: 5869, column: 32, scope: !10998)
!11001 = !DILocation(line: 5869, column: 13, scope: !10988)
!11002 = !DILocation(line: 5870, column: 36, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 5869, column: 56)
!11004 = !DILocation(line: 5870, column: 12, scope: !11003)
!11005 = !DILocation(line: 5870, column: 10, scope: !11003)
!11006 = !DILocation(line: 5871, column: 2, scope: !11003)
!11007 = !DILocation(line: 5872, column: 33, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 5871, column: 9)
!11009 = !DILocation(line: 5872, column: 12, scope: !11008)
!11010 = !DILocation(line: 5872, column: 10, scope: !11008)
!11011 = !DILocation(line: 5876, column: 6, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5876, column: 6)
!11013 = !DILocation(line: 5876, column: 13, scope: !11012)
!11014 = !DILocation(line: 5876, column: 6, scope: !10907)
!11015 = !DILocation(line: 5877, column: 10, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 5876, column: 19)
!11017 = !DILocation(line: 5878, column: 2, scope: !11016)
!11018 = !DILocation(line: 5879, column: 10, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 5878, column: 9)
!11020 = !DILocation(line: 5885, column: 2, scope: !10907)
!11021 = !DILocation(line: 5890, column: 2, scope: !10907)
!11022 = !DILocation(line: 5891, column: 2, scope: !10907)
!11023 = !DILocation(line: 5892, column: 6, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5892, column: 6)
!11025 = !DILocation(line: 5892, column: 15, scope: !11024)
!11026 = !DILocation(line: 5892, column: 25, scope: !11024)
!11027 = !DILocation(line: 5892, column: 6, scope: !10907)
!11028 = !DILocation(line: 5893, column: 3, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 5892, column: 49)
!11030 = !DILocation(line: 5894, column: 2, scope: !11029)
!11031 = !DILocation(line: 5895, column: 2, scope: !10907)
!11032 = !DILocation(line: 5896, column: 11, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 5896, column: 2)
!11034 = !DILocation(line: 5896, column: 7, scope: !11033)
!11035 = !DILocation(line: 5896, column: 16, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 5896, column: 2)
!11037 = !DILocation(line: 5896, column: 20, scope: !11036)
!11038 = !DILocation(line: 5896, column: 2, scope: !11033)
!11039 = !DILocation(line: 5897, column: 3, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 5896, column: 43)
!11041 = !DILocation(line: 5899, column: 2, scope: !11040)
!11042 = !DILocation(line: 5896, column: 39, scope: !11036)
!11043 = !DILocation(line: 5896, column: 2, scope: !11036)
!11044 = distinct !{!11044, !11038, !11045}
!11045 = !DILocation(line: 5899, column: 2, scope: !11033)
!11046 = !DILocation(line: 5901, column: 9, scope: !10907)
!11047 = !DILocation(line: 5901, column: 2, scope: !10907)
!11048 = distinct !DISubprogram(name: "AdvISR", scope: !3, file: !3, line: 6110, type: !10908, scopeLine: 6111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11049 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !11048, file: !3, line: 6110, type: !6378)
!11050 = !DILocation(line: 6110, column: 32, scope: !11048)
!11051 = !DILocalVariable(name: "iop_base", scope: !11048, file: !3, line: 6112, type: !334)
!11052 = !DILocation(line: 6112, column: 14, scope: !11048)
!11053 = !DILocalVariable(name: "int_stat", scope: !11048, file: !3, line: 6113, type: !5245)
!11054 = !DILocation(line: 6113, column: 8, scope: !11048)
!11055 = !DILocalVariable(name: "target_bit", scope: !11048, file: !3, line: 6114, type: !5240)
!11056 = !DILocation(line: 6114, column: 9, scope: !11048)
!11057 = !DILocalVariable(name: "free_carrp", scope: !11048, file: !3, line: 6115, type: !5377)
!11058 = !DILocation(line: 6115, column: 14, scope: !11048)
!11059 = !DILocalVariable(name: "irq_next_vpa", scope: !11048, file: !3, line: 6116, type: !5282)
!11060 = !DILocation(line: 6116, column: 9, scope: !11048)
!11061 = !DILocalVariable(name: "scsiq", scope: !11048, file: !3, line: 6117, type: !8617)
!11062 = !DILocation(line: 6117, column: 18, scope: !11048)
!11063 = !DILocalVariable(name: "reqp", scope: !11048, file: !3, line: 6118, type: !5630)
!11064 = !DILocation(line: 6118, column: 13, scope: !11048)
!11065 = !DILocation(line: 6120, column: 13, scope: !11048)
!11066 = !DILocation(line: 6120, column: 22, scope: !11048)
!11067 = !DILocation(line: 6120, column: 11, scope: !11048)
!11068 = !DILocation(line: 6123, column: 13, scope: !11048)
!11069 = !DILocation(line: 6123, column: 11, scope: !11048)
!11070 = !DILocation(line: 6125, column: 7, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 6125, column: 6)
!11072 = !DILocation(line: 6125, column: 16, scope: !11071)
!11073 = !DILocation(line: 6126, column: 29, scope: !11071)
!11074 = !DILocation(line: 6125, column: 6, scope: !11048)
!11075 = !DILocation(line: 6127, column: 3, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 6126, column: 35)
!11077 = !DILocation(line: 6135, column: 6, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 6135, column: 6)
!11079 = !DILocation(line: 6135, column: 15, scope: !11078)
!11080 = !DILocation(line: 6135, column: 6, scope: !11048)
!11081 = !DILocalVariable(name: "intrb_code", scope: !11082, file: !3, line: 6136, type: !5245)
!11082 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 6135, column: 40)
!11083 = !DILocation(line: 6136, column: 9, scope: !11082)
!11084 = !DILocation(line: 6138, column: 3, scope: !11082)
!11085 = !DILocation(line: 6138, column: 3, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 6138, column: 3)
!11087 = !DILocation(line: 6140, column: 7, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 6140, column: 7)
!11089 = !DILocation(line: 6140, column: 16, scope: !11088)
!11090 = !DILocation(line: 6140, column: 26, scope: !11088)
!11091 = !DILocation(line: 6140, column: 46, scope: !11088)
!11092 = !DILocation(line: 6141, column: 7, scope: !11088)
!11093 = !DILocation(line: 6141, column: 16, scope: !11088)
!11094 = !DILocation(line: 6141, column: 26, scope: !11088)
!11095 = !DILocation(line: 6140, column: 7, scope: !11082)
!11096 = !DILocation(line: 6142, column: 8, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 6142, column: 8)
!11098 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 6141, column: 50)
!11099 = !DILocation(line: 6142, column: 19, scope: !11097)
!11100 = !DILocation(line: 6142, column: 54, scope: !11097)
!11101 = !DILocation(line: 6143, column: 8, scope: !11097)
!11102 = !DILocation(line: 6143, column: 17, scope: !11097)
!11103 = !DILocation(line: 6143, column: 34, scope: !11097)
!11104 = !DILocation(line: 6142, column: 8, scope: !11098)
!11105 = !DILocation(line: 6144, column: 5, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 6143, column: 40)
!11107 = !DILocation(line: 6146, column: 9, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 6146, column: 9)
!11109 = !DILocation(line: 6146, column: 18, scope: !11108)
!11110 = !DILocation(line: 6146, column: 28, scope: !11108)
!11111 = !DILocation(line: 6146, column: 9, scope: !11106)
!11112 = !DILocation(line: 6147, column: 6, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 6146, column: 49)
!11114 = !DILocation(line: 6150, column: 5, scope: !11113)
!11115 = !DILocation(line: 6151, column: 4, scope: !11106)
!11116 = !DILocation(line: 6152, column: 3, scope: !11098)
!11117 = !DILocation(line: 6154, column: 22, scope: !11082)
!11118 = !DILocation(line: 6154, column: 31, scope: !11082)
!11119 = !DILocation(line: 6154, column: 3, scope: !11082)
!11120 = !DILocation(line: 6155, column: 2, scope: !11082)
!11121 = !DILocation(line: 6160, column: 2, scope: !11048)
!11122 = !DILocation(line: 6161, column: 4, scope: !11048)
!11123 = !DILocation(line: 6160, column: 24, scope: !11048)
!11124 = !DILocation(line: 6161, column: 44, scope: !11048)
!11125 = !DILocation(line: 6161, column: 59, scope: !11048)
!11126 = !DILocalVariable(name: "pa_offset", scope: !11127, file: !3, line: 6171, type: !402)
!11127 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 6161, column: 65)
!11128 = !DILocation(line: 6171, column: 7, scope: !11127)
!11129 = !DILocation(line: 6171, column: 19, scope: !11127)
!11130 = !DILocation(line: 6174, column: 23, scope: !11127)
!11131 = !DILocation(line: 6174, column: 32, scope: !11127)
!11132 = !DILocation(line: 6174, column: 10, scope: !11127)
!11133 = !DILocation(line: 6174, column: 8, scope: !11127)
!11134 = !DILocation(line: 6175, column: 12, scope: !11127)
!11135 = !DILocation(line: 6175, column: 18, scope: !11127)
!11136 = !DILocation(line: 6175, column: 9, scope: !11127)
!11137 = !DILocation(line: 6182, column: 8, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 6182, column: 7)
!11139 = !DILocation(line: 6182, column: 21, scope: !11138)
!11140 = !DILocation(line: 6182, column: 36, scope: !11138)
!11141 = !DILocation(line: 6182, column: 7, scope: !11127)
!11142 = !DILocation(line: 6183, column: 4, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 6182, column: 42)
!11144 = !DILocation(line: 6183, column: 11, scope: !11143)
!11145 = !DILocation(line: 6183, column: 23, scope: !11143)
!11146 = !DILocation(line: 6184, column: 25, scope: !11143)
!11147 = !DILocation(line: 6184, column: 32, scope: !11143)
!11148 = !DILocation(line: 6184, column: 44, scope: !11143)
!11149 = !DILocation(line: 6184, column: 4, scope: !11143)
!11150 = !DILocation(line: 6184, column: 11, scope: !11143)
!11151 = !DILocation(line: 6184, column: 23, scope: !11143)
!11152 = !DILocation(line: 6185, column: 4, scope: !11143)
!11153 = !DILocation(line: 6185, column: 11, scope: !11143)
!11154 = !DILocation(line: 6185, column: 20, scope: !11143)
!11155 = !DILocation(line: 6186, column: 3, scope: !11143)
!11156 = !DILocation(line: 6193, column: 16, scope: !11127)
!11157 = !DILocation(line: 6193, column: 25, scope: !11127)
!11158 = !DILocation(line: 6193, column: 14, scope: !11127)
!11159 = !DILocation(line: 6194, column: 37, scope: !11127)
!11160 = !DILocation(line: 6195, column: 9, scope: !11127)
!11161 = !DILocation(line: 6194, column: 21, scope: !11127)
!11162 = !DILocation(line: 6194, column: 3, scope: !11127)
!11163 = !DILocation(line: 6194, column: 12, scope: !11127)
!11164 = !DILocation(line: 6194, column: 19, scope: !11127)
!11165 = !DILocation(line: 6197, column: 26, scope: !11127)
!11166 = !DILocation(line: 6197, column: 35, scope: !11127)
!11167 = !DILocation(line: 6197, column: 50, scope: !11127)
!11168 = !DILocation(line: 6197, column: 3, scope: !11127)
!11169 = !DILocation(line: 6197, column: 15, scope: !11127)
!11170 = !DILocation(line: 6197, column: 24, scope: !11127)
!11171 = !DILocation(line: 6198, column: 28, scope: !11127)
!11172 = !DILocation(line: 6198, column: 3, scope: !11127)
!11173 = !DILocation(line: 6198, column: 12, scope: !11127)
!11174 = !DILocation(line: 6198, column: 26, scope: !11127)
!11175 = !DILocation(line: 6199, column: 3, scope: !11127)
!11176 = !DILocation(line: 6199, column: 12, scope: !11127)
!11177 = !DILocation(line: 6199, column: 28, scope: !11127)
!11178 = !DILocation(line: 6201, column: 16, scope: !11127)
!11179 = !DILocation(line: 6201, column: 14, scope: !11127)
!11180 = !DILocation(line: 6206, column: 3, scope: !11127)
!11181 = !DILocation(line: 6206, column: 10, scope: !11127)
!11182 = !DILocation(line: 6206, column: 15, scope: !11127)
!11183 = !DILocation(line: 6212, column: 20, scope: !11127)
!11184 = !DILocation(line: 6212, column: 29, scope: !11127)
!11185 = !DILocation(line: 6212, column: 3, scope: !11127)
!11186 = distinct !{!11186, !11121, !11187}
!11187 = !DILocation(line: 6220, column: 2, scope: !11048)
!11188 = !DILocation(line: 6221, column: 2, scope: !11048)
!11189 = !DILocation(line: 6222, column: 1, scope: !11048)
!11190 = distinct !DISubprogram(name: "AscResetChipAndScsiBus", scope: !3, file: !3, line: 3716, type: !11191, scopeLine: 3717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11191 = !DISubroutineType(types: !11192)
!11192 = !{!477, !6375}
!11193 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !11190, file: !3, line: 3716, type: !6375)
!11194 = !DILocation(line: 3716, column: 49, scope: !11190)
!11195 = !DILocalVariable(name: "iop_base", scope: !11190, file: !3, line: 3718, type: !7)
!11196 = !DILocation(line: 3718, column: 11, scope: !11190)
!11197 = !DILocalVariable(name: "i", scope: !11190, file: !3, line: 3719, type: !245)
!11198 = !DILocation(line: 3719, column: 6, scope: !11190)
!11199 = !DILocation(line: 3721, column: 13, scope: !11190)
!11200 = !DILocation(line: 3721, column: 22, scope: !11190)
!11201 = !DILocation(line: 3721, column: 11, scope: !11190)
!11202 = !DILocation(line: 3722, column: 2, scope: !11190)
!11203 = !DILocation(line: 3722, column: 10, scope: !11190)
!11204 = !DILocation(line: 3722, column: 37, scope: !11190)
!11205 = !DILocation(line: 3723, column: 9, scope: !11190)
!11206 = !DILocation(line: 3723, column: 14, scope: !11190)
!11207 = !DILocation(line: 3723, column: 17, scope: !11190)
!11208 = !DILocation(line: 0, scope: !11190)
!11209 = !DILocalVariable(name: "__ms", scope: !11210, file: !3, line: 3724, type: !189)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 3724, column: 3)
!11211 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 3723, column: 23)
!11212 = !DILocation(line: 3724, column: 3, scope: !11210)
!11213 = !DILocation(line: 3724, column: 3, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 3724, column: 3)
!11215 = distinct !DILexicalBlock(scope: !11216, file: !3, line: 3724, column: 3)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3724, column: 3)
!11217 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 3724, column: 3)
!11218 = distinct !{!11218, !11212, !11212}
!11219 = distinct !{!11219, !11202, !11220}
!11220 = !DILocation(line: 3725, column: 2, scope: !11190)
!11221 = !DILocation(line: 3726, column: 14, scope: !11190)
!11222 = !DILocation(line: 3726, column: 2, scope: !11190)
!11223 = !DILocation(line: 3727, column: 2, scope: !11190)
!11224 = !DILocation(line: 3728, column: 2, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 3728, column: 2)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 3728, column: 2)
!11227 = distinct !DILexicalBlock(scope: !11228, file: !3, line: 3728, column: 2)
!11228 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 3728, column: 2)
!11229 = !DILocation(line: 3729, column: 15, scope: !11190)
!11230 = !DILocation(line: 3729, column: 2, scope: !11190)
!11231 = !DILocation(line: 3730, column: 15, scope: !11190)
!11232 = !DILocation(line: 3730, column: 2, scope: !11190)
!11233 = !DILocation(line: 3731, column: 2, scope: !11190)
!11234 = !DILocation(line: 3732, column: 2, scope: !11190)
!11235 = !DILocalVariable(name: "__ms", scope: !11236, file: !3, line: 3733, type: !189)
!11236 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 3733, column: 2)
!11237 = !DILocation(line: 3733, column: 2, scope: !11236)
!11238 = !DILocation(line: 3733, column: 2, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11240, file: !3, line: 3733, column: 2)
!11240 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 3733, column: 2)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 3733, column: 2)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 3733, column: 2)
!11243 = distinct !{!11243, !11237, !11237}
!11244 = !DILocation(line: 3734, column: 2, scope: !11190)
!11245 = !DILocation(line: 3735, column: 2, scope: !11190)
!11246 = !DILocation(line: 3736, column: 26, scope: !11190)
!11247 = !DILocation(line: 3736, column: 10, scope: !11190)
!11248 = !DILocation(line: 3736, column: 2, scope: !11190)
!11249 = distinct !DISubprogram(name: "AscFindSignature", scope: !3, file: !3, line: 3739, type: !11250, scopeLine: 3740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11250 = !DISubroutineType(types: !11251)
!11251 = !{!245, !7}
!11252 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11249, file: !3, line: 3739, type: !7)
!11253 = !DILocation(line: 3739, column: 38, scope: !11249)
!11254 = !DILocalVariable(name: "sig_word", scope: !11249, file: !3, line: 3741, type: !5240)
!11255 = !DILocation(line: 3741, column: 9, scope: !11249)
!11256 = !DILocation(line: 3745, column: 6, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 3745, column: 6)
!11258 = !DILocation(line: 3745, column: 40, scope: !11257)
!11259 = !DILocation(line: 3745, column: 6, scope: !11249)
!11260 = !DILocation(line: 3748, column: 14, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 3745, column: 65)
!11262 = !DILocation(line: 3748, column: 12, scope: !11261)
!11263 = !DILocation(line: 3749, column: 8, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3749, column: 7)
!11265 = !DILocation(line: 3749, column: 17, scope: !11264)
!11266 = !DILocation(line: 3749, column: 43, scope: !11264)
!11267 = !DILocation(line: 3750, column: 8, scope: !11264)
!11268 = !DILocation(line: 3750, column: 17, scope: !11264)
!11269 = !DILocation(line: 3749, column: 7, scope: !11261)
!11270 = !DILocation(line: 3751, column: 4, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 3750, column: 48)
!11272 = !DILocation(line: 3753, column: 2, scope: !11261)
!11273 = !DILocation(line: 3754, column: 2, scope: !11249)
!11274 = !DILocation(line: 3755, column: 1, scope: !11249)
!11275 = distinct !DISubprogram(name: "AscDisableInterrupt", scope: !3, file: !3, line: 3765, type: !11276, scopeLine: 3766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{null, !7}
!11278 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11275, file: !3, line: 3765, type: !7)
!11279 = !DILocation(line: 3765, column: 42, scope: !11275)
!11280 = !DILocalVariable(name: "cfg", scope: !11275, file: !3, line: 3767, type: !5240)
!11281 = !DILocation(line: 3767, column: 9, scope: !11275)
!11282 = !DILocation(line: 3769, column: 8, scope: !11275)
!11283 = !DILocation(line: 3769, column: 6, scope: !11275)
!11284 = !DILocation(line: 3770, column: 2, scope: !11275)
!11285 = !DILocation(line: 3771, column: 1, scope: !11275)
!11286 = distinct !DISubprogram(name: "AscInitLram", scope: !3, file: !3, line: 3911, type: !11287, scopeLine: 3912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{null, !6375}
!11289 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !11286, file: !3, line: 3911, type: !6375)
!11290 = !DILocation(line: 3911, column: 38, scope: !11286)
!11291 = !DILocalVariable(name: "i", scope: !11286, file: !3, line: 3913, type: !5245)
!11292 = !DILocation(line: 3913, column: 8, scope: !11286)
!11293 = !DILocalVariable(name: "s_addr", scope: !11286, file: !3, line: 3914, type: !5240)
!11294 = !DILocation(line: 3914, column: 9, scope: !11286)
!11295 = !DILocalVariable(name: "iop_base", scope: !11286, file: !3, line: 3915, type: !7)
!11296 = !DILocation(line: 3915, column: 11, scope: !11286)
!11297 = !DILocation(line: 3917, column: 13, scope: !11286)
!11298 = !DILocation(line: 3917, column: 22, scope: !11286)
!11299 = !DILocation(line: 3917, column: 11, scope: !11286)
!11300 = !DILocation(line: 3918, column: 20, scope: !11286)
!11301 = !DILocation(line: 3919, column: 22, scope: !11286)
!11302 = !DILocation(line: 3919, column: 31, scope: !11286)
!11303 = !DILocation(line: 3919, column: 45, scope: !11286)
!11304 = !DILocation(line: 3919, column: 49, scope: !11286)
!11305 = !DILocation(line: 3919, column: 54, scope: !11286)
!11306 = !DILocation(line: 3920, column: 13, scope: !11286)
!11307 = !DILocation(line: 3919, column: 6, scope: !11286)
!11308 = !DILocation(line: 3918, column: 2, scope: !11286)
!11309 = !DILocation(line: 3921, column: 4, scope: !11286)
!11310 = !DILocation(line: 3922, column: 9, scope: !11286)
!11311 = !DILocation(line: 3923, column: 19, scope: !11286)
!11312 = !DILocation(line: 3923, column: 38, scope: !11286)
!11313 = !DILocation(line: 3923, column: 45, scope: !11286)
!11314 = !DILocation(line: 3923, column: 29, scope: !11286)
!11315 = !DILocation(line: 3924, column: 13, scope: !11286)
!11316 = !DILocation(line: 3924, column: 15, scope: !11286)
!11317 = !DILocation(line: 3924, column: 5, scope: !11286)
!11318 = !DILocation(line: 3923, column: 2, scope: !11286)
!11319 = !DILocation(line: 3925, column: 19, scope: !11286)
!11320 = !DILocation(line: 3925, column: 38, scope: !11286)
!11321 = !DILocation(line: 3925, column: 45, scope: !11286)
!11322 = !DILocation(line: 3925, column: 29, scope: !11286)
!11323 = !DILocation(line: 3926, column: 13, scope: !11286)
!11324 = !DILocation(line: 3926, column: 22, scope: !11286)
!11325 = !DILocation(line: 3925, column: 2, scope: !11286)
!11326 = !DILocation(line: 3927, column: 19, scope: !11286)
!11327 = !DILocation(line: 3927, column: 38, scope: !11286)
!11328 = !DILocation(line: 3927, column: 45, scope: !11286)
!11329 = !DILocation(line: 3927, column: 29, scope: !11286)
!11330 = !DILocation(line: 3928, column: 12, scope: !11286)
!11331 = !DILocation(line: 3927, column: 2, scope: !11286)
!11332 = !DILocation(line: 3929, column: 3, scope: !11286)
!11333 = !DILocation(line: 3930, column: 9, scope: !11286)
!11334 = !DILocation(line: 3931, column: 2, scope: !11286)
!11335 = !DILocation(line: 3931, column: 9, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 3931, column: 2)
!11337 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 3931, column: 2)
!11338 = !DILocation(line: 3931, column: 13, scope: !11336)
!11339 = !DILocation(line: 3931, column: 22, scope: !11336)
!11340 = !DILocation(line: 3931, column: 11, scope: !11336)
!11341 = !DILocation(line: 3931, column: 2, scope: !11337)
!11342 = !DILocation(line: 3932, column: 20, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 3931, column: 67)
!11344 = !DILocation(line: 3932, column: 39, scope: !11343)
!11345 = !DILocation(line: 3932, column: 46, scope: !11343)
!11346 = !DILocation(line: 3932, column: 30, scope: !11343)
!11347 = !DILocation(line: 3933, column: 14, scope: !11343)
!11348 = !DILocation(line: 3933, column: 16, scope: !11343)
!11349 = !DILocation(line: 3933, column: 6, scope: !11343)
!11350 = !DILocation(line: 3932, column: 3, scope: !11343)
!11351 = !DILocation(line: 3934, column: 20, scope: !11343)
!11352 = !DILocation(line: 3934, column: 39, scope: !11343)
!11353 = !DILocation(line: 3934, column: 46, scope: !11343)
!11354 = !DILocation(line: 3934, column: 30, scope: !11343)
!11355 = !DILocation(line: 3935, column: 14, scope: !11343)
!11356 = !DILocation(line: 3935, column: 16, scope: !11343)
!11357 = !DILocation(line: 3935, column: 6, scope: !11343)
!11358 = !DILocation(line: 3934, column: 3, scope: !11343)
!11359 = !DILocation(line: 3936, column: 20, scope: !11343)
!11360 = !DILocation(line: 3936, column: 39, scope: !11343)
!11361 = !DILocation(line: 3936, column: 46, scope: !11343)
!11362 = !DILocation(line: 3936, column: 30, scope: !11343)
!11363 = !DILocation(line: 3937, column: 13, scope: !11343)
!11364 = !DILocation(line: 3936, column: 3, scope: !11343)
!11365 = !DILocation(line: 3938, column: 2, scope: !11343)
!11366 = !DILocation(line: 3931, column: 38, scope: !11336)
!11367 = !DILocation(line: 3931, column: 49, scope: !11336)
!11368 = !DILocation(line: 3931, column: 2, scope: !11336)
!11369 = distinct !{!11369, !11341, !11370}
!11370 = !DILocation(line: 3938, column: 2, scope: !11337)
!11371 = !DILocation(line: 3939, column: 19, scope: !11286)
!11372 = !DILocation(line: 3939, column: 38, scope: !11286)
!11373 = !DILocation(line: 3939, column: 45, scope: !11286)
!11374 = !DILocation(line: 3939, column: 29, scope: !11286)
!11375 = !DILocation(line: 3939, column: 2, scope: !11286)
!11376 = !DILocation(line: 3941, column: 19, scope: !11286)
!11377 = !DILocation(line: 3941, column: 38, scope: !11286)
!11378 = !DILocation(line: 3941, column: 45, scope: !11286)
!11379 = !DILocation(line: 3941, column: 29, scope: !11286)
!11380 = !DILocation(line: 3942, column: 13, scope: !11286)
!11381 = !DILocation(line: 3942, column: 22, scope: !11286)
!11382 = !DILocation(line: 3942, column: 36, scope: !11286)
!11383 = !DILocation(line: 3942, column: 5, scope: !11286)
!11384 = !DILocation(line: 3941, column: 2, scope: !11286)
!11385 = !DILocation(line: 3943, column: 19, scope: !11286)
!11386 = !DILocation(line: 3943, column: 38, scope: !11286)
!11387 = !DILocation(line: 3943, column: 45, scope: !11286)
!11388 = !DILocation(line: 3943, column: 29, scope: !11286)
!11389 = !DILocation(line: 3944, column: 12, scope: !11286)
!11390 = !DILocation(line: 3944, column: 21, scope: !11286)
!11391 = !DILocation(line: 3943, column: 2, scope: !11286)
!11392 = !DILocation(line: 3945, column: 3, scope: !11286)
!11393 = !DILocation(line: 3946, column: 9, scope: !11286)
!11394 = !DILocation(line: 3947, column: 2, scope: !11286)
!11395 = !DILocation(line: 3947, column: 9, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3947, column: 2)
!11397 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 3947, column: 2)
!11398 = !DILocation(line: 3947, column: 22, scope: !11396)
!11399 = !DILocation(line: 3947, column: 31, scope: !11396)
!11400 = !DILocation(line: 3947, column: 45, scope: !11396)
!11401 = !DILocation(line: 3947, column: 14, scope: !11396)
!11402 = !DILocation(line: 3947, column: 11, scope: !11396)
!11403 = !DILocation(line: 3947, column: 2, scope: !11397)
!11404 = !DILocation(line: 3949, column: 20, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11396, file: !3, line: 3948, column: 37)
!11406 = !DILocation(line: 3950, column: 15, scope: !11405)
!11407 = !DILocation(line: 3950, column: 22, scope: !11405)
!11408 = !DILocation(line: 3950, column: 6, scope: !11405)
!11409 = !DILocation(line: 3950, column: 50, scope: !11405)
!11410 = !DILocation(line: 3949, column: 3, scope: !11405)
!11411 = !DILocation(line: 3951, column: 20, scope: !11405)
!11412 = !DILocation(line: 3952, column: 15, scope: !11405)
!11413 = !DILocation(line: 3952, column: 22, scope: !11405)
!11414 = !DILocation(line: 3952, column: 6, scope: !11405)
!11415 = !DILocation(line: 3952, column: 50, scope: !11405)
!11416 = !DILocation(line: 3951, column: 3, scope: !11405)
!11417 = !DILocation(line: 3953, column: 20, scope: !11405)
!11418 = !DILocation(line: 3954, column: 15, scope: !11405)
!11419 = !DILocation(line: 3954, column: 22, scope: !11405)
!11420 = !DILocation(line: 3954, column: 6, scope: !11405)
!11421 = !DILocation(line: 3954, column: 50, scope: !11405)
!11422 = !DILocation(line: 3953, column: 3, scope: !11405)
!11423 = !DILocation(line: 3955, column: 2, scope: !11405)
!11424 = !DILocation(line: 3948, column: 8, scope: !11396)
!11425 = !DILocation(line: 3948, column: 19, scope: !11396)
!11426 = !DILocation(line: 3947, column: 2, scope: !11396)
!11427 = distinct !{!11427, !11403, !11428}
!11428 = !DILocation(line: 3955, column: 2, scope: !11397)
!11429 = !DILocation(line: 3956, column: 1, scope: !11286)
!11430 = distinct !DISubprogram(name: "AscLoadMicroCode", scope: !3, file: !3, line: 3959, type: !11431, scopeLine: 3961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{!402, !7, !5240, !5318, !5240}
!11433 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11430, file: !3, line: 3959, type: !7)
!11434 = !DILocation(line: 3959, column: 27, scope: !11430)
!11435 = !DILocalVariable(name: "s_addr", arg: 2, scope: !11430, file: !3, line: 3959, type: !5240)
!11436 = !DILocation(line: 3959, column: 44, scope: !11430)
!11437 = !DILocalVariable(name: "mcode_buf", arg: 3, scope: !11430, file: !3, line: 3960, type: !5318)
!11438 = !DILocation(line: 3960, column: 17, scope: !11430)
!11439 = !DILocalVariable(name: "mcode_size", arg: 4, scope: !11430, file: !3, line: 3960, type: !5240)
!11440 = !DILocation(line: 3960, column: 35, scope: !11430)
!11441 = !DILocalVariable(name: "chksum", scope: !11430, file: !3, line: 3962, type: !402)
!11442 = !DILocation(line: 3962, column: 6, scope: !11430)
!11443 = !DILocalVariable(name: "mcode_word_size", scope: !11430, file: !3, line: 3963, type: !5240)
!11444 = !DILocation(line: 3963, column: 9, scope: !11430)
!11445 = !DILocalVariable(name: "mcode_chksum", scope: !11430, file: !3, line: 3964, type: !5240)
!11446 = !DILocation(line: 3964, column: 9, scope: !11430)
!11447 = !DILocation(line: 3967, column: 29, scope: !11430)
!11448 = !DILocation(line: 3967, column: 40, scope: !11430)
!11449 = !DILocation(line: 3967, column: 20, scope: !11430)
!11450 = !DILocation(line: 3967, column: 18, scope: !11430)
!11451 = !DILocation(line: 3968, column: 20, scope: !11430)
!11452 = !DILocation(line: 3968, column: 30, scope: !11430)
!11453 = !DILocation(line: 3968, column: 41, scope: !11430)
!11454 = !DILocation(line: 3968, column: 2, scope: !11430)
!11455 = !DILocation(line: 3969, column: 26, scope: !11430)
!11456 = !DILocation(line: 3969, column: 36, scope: !11430)
!11457 = !DILocation(line: 3969, column: 44, scope: !11430)
!11458 = !DILocation(line: 3969, column: 55, scope: !11430)
!11459 = !DILocation(line: 3969, column: 2, scope: !11430)
!11460 = !DILocation(line: 3971, column: 29, scope: !11430)
!11461 = !DILocation(line: 3971, column: 39, scope: !11430)
!11462 = !DILocation(line: 3971, column: 47, scope: !11430)
!11463 = !DILocation(line: 3971, column: 11, scope: !11430)
!11464 = !DILocation(line: 3971, column: 9, scope: !11430)
!11465 = !DILocation(line: 3973, column: 43, scope: !11430)
!11466 = !DILocation(line: 3975, column: 18, scope: !11430)
!11467 = !DILocation(line: 3976, column: 11, scope: !11430)
!11468 = !DILocation(line: 3975, column: 29, scope: !11430)
!11469 = !DILocation(line: 3976, column: 18, scope: !11430)
!11470 = !DILocation(line: 3977, column: 29, scope: !11430)
!11471 = !DILocation(line: 3975, column: 8, scope: !11430)
!11472 = !DILocation(line: 3973, column: 25, scope: !11430)
!11473 = !DILocation(line: 3973, column: 17, scope: !11430)
!11474 = !DILocation(line: 3973, column: 15, scope: !11430)
!11475 = !DILocation(line: 3980, column: 19, scope: !11430)
!11476 = !DILocation(line: 3980, column: 50, scope: !11430)
!11477 = !DILocation(line: 3980, column: 2, scope: !11430)
!11478 = !DILocation(line: 3981, column: 19, scope: !11430)
!11479 = !DILocation(line: 3981, column: 48, scope: !11430)
!11480 = !DILocation(line: 3981, column: 2, scope: !11430)
!11481 = !DILocation(line: 3982, column: 9, scope: !11430)
!11482 = !DILocation(line: 3982, column: 2, scope: !11430)
!11483 = distinct !DISubprogram(name: "AscInitMicroCodeVar", scope: !3, file: !3, line: 4014, type: !10729, scopeLine: 4015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11484 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !11483, file: !3, line: 4014, type: !6375)
!11485 = !DILocation(line: 4014, column: 45, scope: !11483)
!11486 = !DILocalVariable(name: "i", scope: !11483, file: !3, line: 4016, type: !245)
!11487 = !DILocation(line: 4016, column: 6, scope: !11483)
!11488 = !DILocalVariable(name: "warn_code", scope: !11483, file: !3, line: 4017, type: !245)
!11489 = !DILocation(line: 4017, column: 6, scope: !11483)
!11490 = !DILocalVariable(name: "iop_base", scope: !11483, file: !3, line: 4018, type: !7)
!11491 = !DILocation(line: 4018, column: 11, scope: !11483)
!11492 = !DILocalVariable(name: "phy_addr", scope: !11483, file: !3, line: 4019, type: !5282)
!11493 = !DILocation(line: 4019, column: 9, scope: !11483)
!11494 = !DILocalVariable(name: "phy_size", scope: !11483, file: !3, line: 4020, type: !5282)
!11495 = !DILocation(line: 4020, column: 9, scope: !11483)
!11496 = !DILocalVariable(name: "board", scope: !11483, file: !3, line: 4021, type: !190)
!11497 = !DILocation(line: 4021, column: 20, scope: !11483)
!11498 = !DILocalVariable(name: "__mptr", scope: !11499, file: !3, line: 4021, type: !334)
!11499 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 4021, column: 28)
!11500 = !DILocation(line: 4021, column: 28, scope: !11499)
!11501 = !DILocation(line: 4021, column: 28, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 4021, column: 28)
!11503 = !DILocation(line: 4023, column: 13, scope: !11483)
!11504 = !DILocation(line: 4023, column: 22, scope: !11483)
!11505 = !DILocation(line: 4023, column: 11, scope: !11483)
!11506 = !DILocation(line: 4024, column: 12, scope: !11483)
!11507 = !DILocation(line: 4025, column: 9, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 4025, column: 2)
!11509 = !DILocation(line: 4025, column: 7, scope: !11508)
!11510 = !DILocation(line: 4025, column: 14, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 4025, column: 2)
!11512 = !DILocation(line: 4025, column: 16, scope: !11511)
!11513 = !DILocation(line: 4025, column: 2, scope: !11508)
!11514 = !DILocation(line: 4026, column: 3, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 4025, column: 37)
!11516 = !DILocation(line: 4028, column: 2, scope: !11515)
!11517 = !DILocation(line: 4025, column: 33, scope: !11511)
!11518 = !DILocation(line: 4025, column: 2, scope: !11511)
!11519 = distinct !{!11519, !11513, !11520}
!11520 = !DILocation(line: 4028, column: 2, scope: !11508)
!11521 = !DILocation(line: 4030, column: 18, scope: !11483)
!11522 = !DILocation(line: 4030, column: 2, scope: !11483)
!11523 = !DILocation(line: 4031, column: 19, scope: !11483)
!11524 = !DILocation(line: 4032, column: 5, scope: !11483)
!11525 = !DILocation(line: 4032, column: 14, scope: !11483)
!11526 = !DILocation(line: 4032, column: 19, scope: !11483)
!11527 = !DILocation(line: 4031, column: 2, scope: !11483)
!11528 = !DILocation(line: 4033, column: 19, scope: !11483)
!11529 = !DILocation(line: 4034, column: 5, scope: !11483)
!11530 = !DILocation(line: 4033, column: 2, scope: !11483)
!11531 = !DILocation(line: 4037, column: 2, scope: !11483)
!11532 = !DILocation(line: 4037, column: 2, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 4037, column: 2)
!11534 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 4037, column: 2)
!11535 = !DILocation(line: 4037, column: 2, scope: !11534)
!11536 = !DILocation(line: 4037, column: 2, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 4037, column: 2)
!11538 = !DILocation(line: 4037, column: 2, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 4037, column: 2)
!11540 = !DILocation(line: 4037, column: 2, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 4037, column: 2)
!11542 = !{i32 -2140692824, i32 -2140692795, i32 -2140692749, i32 -2140692691, i32 -2140692637, i32 -2140692583, i32 -2140692528, i32 -2140692497}
!11543 = !DILocation(line: 4037, column: 2, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 4037, column: 2)
!11545 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 4037, column: 2)
!11546 = !{i32 -2140692050, i32 -2140692043, i32 -2140691989, i32 -2140691958, i32 -2140691928}
!11547 = !DILocation(line: 4037, column: 2, scope: !11545)
!11548 = !DILocation(line: 4038, column: 25, scope: !11483)
!11549 = !DILocation(line: 4038, column: 2, scope: !11483)
!11550 = !DILocation(line: 4038, column: 11, scope: !11483)
!11551 = !DILocation(line: 4038, column: 23, scope: !11483)
!11552 = !DILocation(line: 4040, column: 24, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 4040, column: 6)
!11554 = !DILocation(line: 4040, column: 31, scope: !11553)
!11555 = !DILocation(line: 4040, column: 36, scope: !11553)
!11556 = !DILocation(line: 4040, column: 45, scope: !11553)
!11557 = !DILocation(line: 4040, column: 6, scope: !11553)
!11558 = !DILocation(line: 4040, column: 6, scope: !11483)
!11559 = !DILocation(line: 4041, column: 13, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 4040, column: 59)
!11561 = !DILocation(line: 4042, column: 3, scope: !11560)
!11562 = !DILocation(line: 4044, column: 13, scope: !11483)
!11563 = !DILocation(line: 4044, column: 11, scope: !11483)
!11564 = !DILocation(line: 4045, column: 27, scope: !11483)
!11565 = !DILocation(line: 4046, column: 6, scope: !11483)
!11566 = !DILocation(line: 4045, column: 2, scope: !11483)
!11567 = !DILocation(line: 4047, column: 11, scope: !11483)
!11568 = !DILocation(line: 4048, column: 27, scope: !11483)
!11569 = !DILocation(line: 4049, column: 6, scope: !11483)
!11570 = !DILocation(line: 4048, column: 2, scope: !11483)
!11571 = !DILocation(line: 4052, column: 22, scope: !11483)
!11572 = !DILocation(line: 4052, column: 6, scope: !11483)
!11573 = !DILocation(line: 4051, column: 2, scope: !11483)
!11574 = !DILocation(line: 4051, column: 11, scope: !11483)
!11575 = !DILocation(line: 4051, column: 16, scope: !11483)
!11576 = !DILocation(line: 4051, column: 27, scope: !11483)
!11577 = !DILocation(line: 4054, column: 22, scope: !11483)
!11578 = !DILocation(line: 4054, column: 6, scope: !11483)
!11579 = !DILocation(line: 4053, column: 2, scope: !11483)
!11580 = !DILocation(line: 4053, column: 11, scope: !11483)
!11581 = !DILocation(line: 4053, column: 16, scope: !11483)
!11582 = !DILocation(line: 4053, column: 30, scope: !11483)
!11583 = !DILocation(line: 4056, column: 2, scope: !11483)
!11584 = !DILocation(line: 4057, column: 6, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 4057, column: 6)
!11586 = !DILocation(line: 4057, column: 29, scope: !11585)
!11587 = !DILocation(line: 4057, column: 6, scope: !11483)
!11588 = !DILocation(line: 4058, column: 3, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 4057, column: 54)
!11590 = !DILocation(line: 4058, column: 12, scope: !11589)
!11591 = !DILocation(line: 4058, column: 21, scope: !11589)
!11592 = !DILocation(line: 4059, column: 13, scope: !11589)
!11593 = !DILocation(line: 4060, column: 3, scope: !11589)
!11594 = !DILocation(line: 4062, column: 19, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 4062, column: 6)
!11596 = !DILocation(line: 4062, column: 6, scope: !11595)
!11597 = !DILocation(line: 4062, column: 29, scope: !11595)
!11598 = !DILocation(line: 4062, column: 6, scope: !11483)
!11599 = !DILocation(line: 4063, column: 3, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 4062, column: 35)
!11601 = !DILocation(line: 4063, column: 12, scope: !11600)
!11602 = !DILocation(line: 4063, column: 21, scope: !11600)
!11603 = !DILocation(line: 4064, column: 13, scope: !11600)
!11604 = !DILocation(line: 4065, column: 3, scope: !11600)
!11605 = !DILocation(line: 4068, column: 9, scope: !11483)
!11606 = !DILocation(line: 4068, column: 2, scope: !11483)
!11607 = !DILabel(scope: !11483, name: "err_mcode_start", file: !3, line: 4070)
!11608 = !DILocation(line: 4070, column: 1, scope: !11483)
!11609 = !DILocation(line: 4071, column: 2, scope: !11483)
!11610 = !DILabel(scope: !11483, name: "err_dma_map", file: !3, line: 4073)
!11611 = !DILocation(line: 4073, column: 1, scope: !11483)
!11612 = !DILocation(line: 4074, column: 2, scope: !11483)
!11613 = !DILocation(line: 4074, column: 11, scope: !11483)
!11614 = !DILocation(line: 4074, column: 23, scope: !11483)
!11615 = !DILocation(line: 4075, column: 9, scope: !11483)
!11616 = !DILocation(line: 4075, column: 2, scope: !11483)
!11617 = !DILocation(line: 4076, column: 1, scope: !11483)
!11618 = distinct !DISubprogram(name: "AscEnableInterrupt", scope: !3, file: !3, line: 3757, type: !11276, scopeLine: 3758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11619 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11618, file: !3, line: 3757, type: !7)
!11620 = !DILocation(line: 3757, column: 41, scope: !11618)
!11621 = !DILocalVariable(name: "cfg", scope: !11618, file: !3, line: 3759, type: !5240)
!11622 = !DILocation(line: 3759, column: 9, scope: !11618)
!11623 = !DILocation(line: 3761, column: 8, scope: !11618)
!11624 = !DILocation(line: 3761, column: 6, scope: !11618)
!11625 = !DILocation(line: 3762, column: 2, scope: !11618)
!11626 = !DILocation(line: 3763, column: 1, scope: !11618)
!11627 = distinct !DISubprogram(name: "AscStopChip", scope: !3, file: !3, line: 3690, type: !11628, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11628 = !DISubroutineType(types: !11629)
!11629 = !{!477, !7}
!11630 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11627, file: !3, line: 3690, type: !7)
!11631 = !DILocation(line: 3690, column: 34, scope: !11627)
!11632 = !DILocalVariable(name: "cc_val", scope: !11627, file: !3, line: 3692, type: !5245)
!11633 = !DILocation(line: 3692, column: 8, scope: !11627)
!11634 = !DILocation(line: 3695, column: 6, scope: !11627)
!11635 = !DILocation(line: 3695, column: 34, scope: !11627)
!11636 = !DILocation(line: 3694, column: 9, scope: !11627)
!11637 = !DILocation(line: 3697, column: 2, scope: !11627)
!11638 = !DILocation(line: 3698, column: 15, scope: !11627)
!11639 = !DILocation(line: 3698, column: 2, scope: !11627)
!11640 = !DILocation(line: 3699, column: 15, scope: !11627)
!11641 = !DILocation(line: 3699, column: 2, scope: !11627)
!11642 = !DILocation(line: 3700, column: 7, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 3700, column: 6)
!11644 = !DILocation(line: 3700, column: 34, scope: !11643)
!11645 = !DILocation(line: 3700, column: 48, scope: !11643)
!11646 = !DILocation(line: 3700, column: 6, scope: !11627)
!11647 = !DILocation(line: 3701, column: 3, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 3700, column: 54)
!11649 = !DILocation(line: 3703, column: 2, scope: !11627)
!11650 = !DILocation(line: 3704, column: 1, scope: !11627)
!11651 = distinct !DISubprogram(name: "outb", scope: !9839, file: !9839, line: 334, type: !11652, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11652 = !DISubroutineType(types: !11653)
!11653 = !{null, !414, !245}
!11654 = !DILocalVariable(name: "value", arg: 1, scope: !11651, file: !9839, line: 334, type: !414)
!11655 = !DILocation(line: 334, column: 1, scope: !11651)
!11656 = !DILocalVariable(name: "port", arg: 2, scope: !11651, file: !9839, line: 334, type: !245)
!11657 = !{i32 -2141378707}
!11658 = distinct !DISubprogram(name: "AscSetChipIH", scope: !3, file: !3, line: 3674, type: !11659, scopeLine: 3675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{null, !7, !5240}
!11661 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11658, file: !3, line: 3674, type: !7)
!11662 = !DILocation(line: 3674, column: 35, scope: !11658)
!11663 = !DILocalVariable(name: "ins_code", arg: 2, scope: !11658, file: !3, line: 3674, type: !5240)
!11664 = !DILocation(line: 3674, column: 52, scope: !11658)
!11665 = !DILocation(line: 3676, column: 13, scope: !11658)
!11666 = !DILocation(line: 3676, column: 2, scope: !11658)
!11667 = !DILocation(line: 3677, column: 2, scope: !11658)
!11668 = !DILocation(line: 3678, column: 13, scope: !11658)
!11669 = !DILocation(line: 3678, column: 2, scope: !11658)
!11670 = !DILocation(line: 3679, column: 1, scope: !11658)
!11671 = distinct !DISubprogram(name: "AscIsChipHalted", scope: !3, file: !3, line: 3706, type: !11628, scopeLine: 3707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11672 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11671, file: !3, line: 3706, type: !7)
!11673 = !DILocation(line: 3706, column: 38, scope: !11671)
!11674 = !DILocation(line: 3708, column: 7, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 3708, column: 6)
!11676 = !DILocation(line: 3708, column: 34, scope: !11675)
!11677 = !DILocation(line: 3708, column: 48, scope: !11675)
!11678 = !DILocation(line: 3708, column: 6, scope: !11671)
!11679 = !DILocation(line: 3709, column: 8, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 3709, column: 7)
!11681 = distinct !DILexicalBlock(scope: !11675, file: !3, line: 3708, column: 54)
!11682 = !DILocation(line: 3709, column: 36, scope: !11680)
!11683 = !DILocation(line: 3709, column: 47, scope: !11680)
!11684 = !DILocation(line: 3709, column: 7, scope: !11681)
!11685 = !DILocation(line: 3710, column: 4, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 3709, column: 53)
!11687 = !DILocation(line: 3712, column: 2, scope: !11681)
!11688 = !DILocation(line: 3713, column: 2, scope: !11671)
!11689 = !DILocation(line: 3714, column: 1, scope: !11671)
!11690 = distinct !DISubprogram(name: "inb", scope: !9839, file: !9839, line: 334, type: !11691, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11691 = !DISubroutineType(types: !11692)
!11692 = !{!414, !245}
!11693 = !DILocalVariable(name: "port", arg: 1, scope: !11690, file: !9839, line: 334, type: !245)
!11694 = !DILocation(line: 334, column: 1, scope: !11690)
!11695 = !DILocalVariable(name: "value", scope: !11690, file: !9839, line: 334, type: !414)
!11696 = !{i32 -2141378505}
!11697 = distinct !DISubprogram(name: "AscSetBank", scope: !3, file: !3, line: 3656, type: !11698, scopeLine: 3657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11698 = !DISubroutineType(types: !11699)
!11699 = !{null, !7, !5245}
!11700 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11697, file: !3, line: 3656, type: !7)
!11701 = !DILocation(line: 3656, column: 33, scope: !11697)
!11702 = !DILocalVariable(name: "bank", arg: 2, scope: !11697, file: !3, line: 3656, type: !5245)
!11703 = !DILocation(line: 3656, column: 49, scope: !11697)
!11704 = !DILocalVariable(name: "val", scope: !11697, file: !3, line: 3658, type: !5245)
!11705 = !DILocation(line: 3658, column: 8, scope: !11697)
!11706 = !DILocation(line: 3660, column: 8, scope: !11697)
!11707 = !DILocation(line: 3660, column: 36, scope: !11697)
!11708 = !DILocation(line: 3660, column: 6, scope: !11697)
!11709 = !DILocation(line: 3664, column: 6, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 3664, column: 6)
!11711 = !DILocation(line: 3664, column: 11, scope: !11710)
!11712 = !DILocation(line: 3664, column: 6, scope: !11697)
!11713 = !DILocation(line: 3665, column: 7, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 3664, column: 17)
!11715 = !DILocation(line: 3666, column: 2, scope: !11714)
!11716 = !DILocation(line: 3666, column: 13, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 3666, column: 13)
!11718 = !DILocation(line: 3666, column: 18, scope: !11717)
!11719 = !DILocation(line: 3666, column: 13, scope: !11710)
!11720 = !DILocation(line: 3667, column: 7, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 3666, column: 24)
!11722 = !DILocation(line: 3668, column: 2, scope: !11721)
!11723 = !DILocation(line: 3669, column: 7, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 3668, column: 9)
!11725 = !DILocation(line: 3671, column: 2, scope: !11697)
!11726 = !DILocation(line: 3672, column: 1, scope: !11697)
!11727 = distinct !DISubprogram(name: "AscMemWordSetLram", scope: !3, file: !3, line: 3800, type: !11728, scopeLine: 3801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{null, !7, !5240, !5240, !245}
!11730 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11727, file: !3, line: 3800, type: !7)
!11731 = !DILocation(line: 3800, column: 28, scope: !11727)
!11732 = !DILocalVariable(name: "s_addr", arg: 2, scope: !11727, file: !3, line: 3800, type: !5240)
!11733 = !DILocation(line: 3800, column: 45, scope: !11727)
!11734 = !DILocalVariable(name: "set_wval", arg: 3, scope: !11727, file: !3, line: 3800, type: !5240)
!11735 = !DILocation(line: 3800, column: 60, scope: !11727)
!11736 = !DILocalVariable(name: "words", arg: 4, scope: !11727, file: !3, line: 3800, type: !245)
!11737 = !DILocation(line: 3800, column: 74, scope: !11727)
!11738 = !DILocalVariable(name: "i", scope: !11727, file: !3, line: 3802, type: !245)
!11739 = !DILocation(line: 3802, column: 6, scope: !11727)
!11740 = !DILocation(line: 3804, column: 2, scope: !11727)
!11741 = !DILocation(line: 3805, column: 9, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 3805, column: 2)
!11743 = !DILocation(line: 3805, column: 7, scope: !11742)
!11744 = !DILocation(line: 3805, column: 14, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 3805, column: 2)
!11746 = !DILocation(line: 3805, column: 18, scope: !11745)
!11747 = !DILocation(line: 3805, column: 16, scope: !11745)
!11748 = !DILocation(line: 3805, column: 2, scope: !11742)
!11749 = !DILocation(line: 3806, column: 3, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 3805, column: 30)
!11751 = !DILocation(line: 3807, column: 2, scope: !11750)
!11752 = !DILocation(line: 3805, column: 26, scope: !11745)
!11753 = !DILocation(line: 3805, column: 2, scope: !11745)
!11754 = distinct !{!11754, !11748, !11755}
!11755 = !DILocation(line: 3807, column: 2, scope: !11742)
!11756 = !DILocation(line: 3808, column: 1, scope: !11727)
!11757 = distinct !DISubprogram(name: "AscWriteLramByte", scope: !3, file: !3, line: 3816, type: !11758, scopeLine: 3817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11758 = !DISubroutineType(types: !11759)
!11759 = !{null, !7, !5240, !5245}
!11760 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11757, file: !3, line: 3816, type: !7)
!11761 = !DILocation(line: 3816, column: 39, scope: !11757)
!11762 = !DILocalVariable(name: "addr", arg: 2, scope: !11757, file: !3, line: 3816, type: !5240)
!11763 = !DILocation(line: 3816, column: 56, scope: !11757)
!11764 = !DILocalVariable(name: "byte_val", arg: 3, scope: !11757, file: !3, line: 3816, type: !5245)
!11765 = !DILocation(line: 3816, column: 68, scope: !11757)
!11766 = !DILocalVariable(name: "word_data", scope: !11757, file: !3, line: 3818, type: !5240)
!11767 = !DILocation(line: 3818, column: 9, scope: !11757)
!11768 = !DILocation(line: 3820, column: 6, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 3820, column: 6)
!11770 = !DILocation(line: 3820, column: 6, scope: !11757)
!11771 = !DILocation(line: 3821, column: 7, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 3820, column: 24)
!11773 = !DILocation(line: 3822, column: 31, scope: !11772)
!11774 = !DILocation(line: 3822, column: 41, scope: !11772)
!11775 = !DILocation(line: 3822, column: 15, scope: !11772)
!11776 = !DILocation(line: 3822, column: 13, scope: !11772)
!11777 = !DILocation(line: 3823, column: 13, scope: !11772)
!11778 = !DILocation(line: 3824, column: 26, scope: !11772)
!11779 = !DILocation(line: 3824, column: 18, scope: !11772)
!11780 = !DILocation(line: 3824, column: 35, scope: !11772)
!11781 = !DILocation(line: 3824, column: 41, scope: !11772)
!11782 = !DILocation(line: 3824, column: 13, scope: !11772)
!11783 = !DILocation(line: 3825, column: 2, scope: !11772)
!11784 = !DILocation(line: 3826, column: 31, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 3825, column: 9)
!11786 = !DILocation(line: 3826, column: 41, scope: !11785)
!11787 = !DILocation(line: 3826, column: 15, scope: !11785)
!11788 = !DILocation(line: 3826, column: 13, scope: !11785)
!11789 = !DILocation(line: 3827, column: 13, scope: !11785)
!11790 = !DILocation(line: 3828, column: 25, scope: !11785)
!11791 = !DILocation(line: 3828, column: 17, scope: !11785)
!11792 = !DILocation(line: 3828, column: 34, scope: !11785)
!11793 = !DILocation(line: 3828, column: 13, scope: !11785)
!11794 = !DILocation(line: 3830, column: 19, scope: !11757)
!11795 = !DILocation(line: 3830, column: 29, scope: !11757)
!11796 = !DILocation(line: 3830, column: 35, scope: !11757)
!11797 = !DILocation(line: 3830, column: 2, scope: !11757)
!11798 = !DILocation(line: 3831, column: 1, scope: !11757)
!11799 = distinct !DISubprogram(name: "AscMemSumLramWord", scope: !3, file: !3, line: 3900, type: !11800, scopeLine: 3901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11800 = !DISubroutineType(types: !11801)
!11801 = !{!402, !7, !5240, !245}
!11802 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11799, file: !3, line: 3900, type: !7)
!11803 = !DILocation(line: 3900, column: 39, scope: !11799)
!11804 = !DILocalVariable(name: "s_addr", arg: 2, scope: !11799, file: !3, line: 3900, type: !5240)
!11805 = !DILocation(line: 3900, column: 56, scope: !11799)
!11806 = !DILocalVariable(name: "words", arg: 3, scope: !11799, file: !3, line: 3900, type: !245)
!11807 = !DILocation(line: 3900, column: 68, scope: !11799)
!11808 = !DILocalVariable(name: "sum", scope: !11799, file: !3, line: 3902, type: !402)
!11809 = !DILocation(line: 3902, column: 6, scope: !11799)
!11810 = !DILocalVariable(name: "i", scope: !11799, file: !3, line: 3903, type: !245)
!11811 = !DILocation(line: 3903, column: 6, scope: !11799)
!11812 = !DILocation(line: 3905, column: 9, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 3905, column: 2)
!11814 = !DILocation(line: 3905, column: 7, scope: !11813)
!11815 = !DILocation(line: 3905, column: 14, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 3905, column: 2)
!11817 = !DILocation(line: 3905, column: 18, scope: !11816)
!11818 = !DILocation(line: 3905, column: 16, scope: !11816)
!11819 = !DILocation(line: 3905, column: 2, scope: !11813)
!11820 = !DILocation(line: 3906, column: 26, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 3905, column: 43)
!11822 = !DILocation(line: 3906, column: 36, scope: !11821)
!11823 = !DILocation(line: 3906, column: 10, scope: !11821)
!11824 = !DILocation(line: 3906, column: 7, scope: !11821)
!11825 = !DILocation(line: 3907, column: 2, scope: !11821)
!11826 = !DILocation(line: 3905, column: 26, scope: !11816)
!11827 = !DILocation(line: 3905, column: 37, scope: !11816)
!11828 = !DILocation(line: 3905, column: 2, scope: !11816)
!11829 = distinct !{!11829, !11819, !11830}
!11830 = !DILocation(line: 3907, column: 2, scope: !11813)
!11831 = !DILocation(line: 3908, column: 10, scope: !11799)
!11832 = !DILocation(line: 3908, column: 2, scope: !11799)
!11833 = distinct !DISubprogram(name: "AscInitQLinkVar", scope: !3, file: !3, line: 3985, type: !11287, scopeLine: 3986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11834 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !11833, file: !3, line: 3985, type: !6375)
!11835 = !DILocation(line: 3985, column: 42, scope: !11833)
!11836 = !DILocalVariable(name: "iop_base", scope: !11833, file: !3, line: 3987, type: !7)
!11837 = !DILocation(line: 3987, column: 11, scope: !11833)
!11838 = !DILocalVariable(name: "i", scope: !11833, file: !3, line: 3988, type: !245)
!11839 = !DILocation(line: 3988, column: 6, scope: !11833)
!11840 = !DILocalVariable(name: "lram_addr", scope: !11833, file: !3, line: 3989, type: !5240)
!11841 = !DILocation(line: 3989, column: 9, scope: !11833)
!11842 = !DILocation(line: 3991, column: 13, scope: !11833)
!11843 = !DILocation(line: 3991, column: 22, scope: !11833)
!11844 = !DILocation(line: 3991, column: 11, scope: !11833)
!11845 = !DILocation(line: 3992, column: 2, scope: !11833)
!11846 = !DILocation(line: 3993, column: 2, scope: !11833)
!11847 = !DILocation(line: 3994, column: 2, scope: !11833)
!11848 = !DILocation(line: 3995, column: 2, scope: !11833)
!11849 = !DILocation(line: 3996, column: 19, scope: !11833)
!11850 = !DILocation(line: 3997, column: 18, scope: !11833)
!11851 = !DILocation(line: 3997, column: 27, scope: !11833)
!11852 = !DILocation(line: 3997, column: 13, scope: !11833)
!11853 = !DILocation(line: 3997, column: 41, scope: !11833)
!11854 = !DILocation(line: 3997, column: 5, scope: !11833)
!11855 = !DILocation(line: 3996, column: 2, scope: !11833)
!11856 = !DILocation(line: 3998, column: 19, scope: !11833)
!11857 = !DILocation(line: 3999, column: 18, scope: !11833)
!11858 = !DILocation(line: 3999, column: 27, scope: !11833)
!11859 = !DILocation(line: 3999, column: 13, scope: !11833)
!11860 = !DILocation(line: 3999, column: 41, scope: !11833)
!11861 = !DILocation(line: 3999, column: 5, scope: !11833)
!11862 = !DILocation(line: 3998, column: 2, scope: !11833)
!11863 = !DILocation(line: 4000, column: 19, scope: !11833)
!11864 = !DILocation(line: 4001, column: 5, scope: !11833)
!11865 = !DILocation(line: 4001, column: 14, scope: !11833)
!11866 = !DILocation(line: 4000, column: 2, scope: !11833)
!11867 = !DILocation(line: 4002, column: 19, scope: !11833)
!11868 = !DILocation(line: 4002, column: 2, scope: !11833)
!11869 = !DILocation(line: 4003, column: 19, scope: !11833)
!11870 = !DILocation(line: 4003, column: 2, scope: !11833)
!11871 = !DILocation(line: 4004, column: 19, scope: !11833)
!11872 = !DILocation(line: 4004, column: 2, scope: !11833)
!11873 = !DILocation(line: 4005, column: 19, scope: !11833)
!11874 = !DILocation(line: 4005, column: 2, scope: !11833)
!11875 = !DILocation(line: 4006, column: 19, scope: !11833)
!11876 = !DILocation(line: 4006, column: 2, scope: !11833)
!11877 = !DILocation(line: 4007, column: 2, scope: !11833)
!11878 = !DILocation(line: 4008, column: 12, scope: !11833)
!11879 = !DILocation(line: 4009, column: 9, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 4009, column: 2)
!11881 = !DILocation(line: 4009, column: 7, scope: !11880)
!11882 = !DILocation(line: 4009, column: 14, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 4009, column: 2)
!11884 = !DILocation(line: 4009, column: 16, scope: !11883)
!11885 = !DILocation(line: 4009, column: 2, scope: !11880)
!11886 = !DILocation(line: 4010, column: 20, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 4009, column: 43)
!11888 = !DILocation(line: 4010, column: 30, scope: !11887)
!11889 = !DILocation(line: 4010, column: 3, scope: !11887)
!11890 = !DILocation(line: 4011, column: 2, scope: !11887)
!11891 = !DILocation(line: 4009, column: 23, scope: !11883)
!11892 = !DILocation(line: 4009, column: 37, scope: !11883)
!11893 = !DILocation(line: 4009, column: 2, scope: !11883)
!11894 = distinct !{!11894, !11885, !11895}
!11895 = !DILocation(line: 4011, column: 2, scope: !11880)
!11896 = !DILocation(line: 4012, column: 1, scope: !11833)
!11897 = distinct !DISubprogram(name: "AscStartChip", scope: !3, file: !3, line: 3681, type: !11250, scopeLine: 3682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11898 = !DILocalVariable(name: "iop_base", arg: 1, scope: !11897, file: !3, line: 3681, type: !7)
!11899 = !DILocation(line: 3681, column: 34, scope: !11897)
!11900 = !DILocation(line: 3683, column: 2, scope: !11897)
!11901 = !DILocation(line: 3684, column: 7, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 3684, column: 6)
!11903 = !DILocation(line: 3684, column: 34, scope: !11902)
!11904 = !DILocation(line: 3684, column: 48, scope: !11902)
!11905 = !DILocation(line: 3684, column: 6, scope: !11897)
!11906 = !DILocation(line: 3685, column: 3, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 3684, column: 54)
!11908 = !DILocation(line: 3687, column: 2, scope: !11897)
!11909 = !DILocation(line: 3688, column: 1, scope: !11897)
!11910 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !6068, file: !6068, line: 283, type: !11911, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{null, !194, !977, !308, !146, !189}
!11913 = !DILocalVariable(name: "dev", arg: 1, scope: !11910, file: !6068, line: 283, type: !194)
!11914 = !DILocation(line: 283, column: 58, scope: !11910)
!11915 = !DILocalVariable(name: "addr", arg: 2, scope: !11910, file: !6068, line: 283, type: !977)
!11916 = !DILocation(line: 283, column: 74, scope: !11910)
!11917 = !DILocalVariable(name: "size", arg: 3, scope: !11910, file: !6068, line: 284, type: !308)
!11918 = !DILocation(line: 284, column: 10, scope: !11910)
!11919 = !DILocalVariable(name: "dir", arg: 4, scope: !11910, file: !6068, line: 284, type: !146)
!11920 = !DILocation(line: 284, column: 40, scope: !11910)
!11921 = !DILocalVariable(name: "attrs", arg: 5, scope: !11910, file: !6068, line: 284, type: !189)
!11922 = !DILocation(line: 284, column: 59, scope: !11910)
!11923 = !DILocation(line: 286, column: 30, scope: !11910)
!11924 = !DILocation(line: 286, column: 35, scope: !11910)
!11925 = !DILocation(line: 286, column: 41, scope: !11910)
!11926 = !DILocation(line: 286, column: 47, scope: !11910)
!11927 = !DILocation(line: 286, column: 52, scope: !11910)
!11928 = !DILocation(line: 286, column: 9, scope: !11910)
!11929 = !DILocation(line: 286, column: 2, scope: !11910)
!11930 = distinct !DISubprogram(name: "writew", scope: !9839, file: !9839, line: 66, type: !11931, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11931 = !DISubroutineType(types: !11932)
!11932 = !{null, !303, !10668}
!11933 = !DILocalVariable(name: "val", arg: 1, scope: !11930, file: !9839, line: 66, type: !303)
!11934 = !DILocation(line: 66, column: 1, scope: !11930)
!11935 = !DILocalVariable(name: "addr", arg: 2, scope: !11930, file: !9839, line: 66, type: !10668)
!11936 = !{i32 -2141388963}
!11937 = distinct !DISubprogram(name: "readw", scope: !9839, file: !9839, line: 58, type: !11938, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11938 = !DISubroutineType(types: !11939)
!11939 = !{!303, !11940}
!11940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11941, size: 64)
!11941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10669)
!11942 = !DILocalVariable(name: "addr", arg: 1, scope: !11937, file: !9839, line: 58, type: !11940)
!11943 = !DILocation(line: 58, column: 1, scope: !11937)
!11944 = !DILocalVariable(name: "ret", scope: !11937, file: !9839, line: 58, type: !303)
!11945 = !{i32 -2141391387}
!11946 = distinct !DISubprogram(name: "readb", scope: !9839, file: !9839, line: 57, type: !11947, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!414, !11940}
!11949 = !DILocalVariable(name: "addr", arg: 1, scope: !11946, file: !9839, line: 57, type: !11940)
!11950 = !DILocation(line: 57, column: 1, scope: !11946)
!11951 = !DILocalVariable(name: "ret", scope: !11946, file: !9839, line: 57, type: !414)
!11952 = !{i32 -2141391801}
!11953 = distinct !DISubprogram(name: "AdvInitAsc38C1600Driver", scope: !3, file: !3, line: 5328, type: !10908, scopeLine: 5329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!11954 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !11953, file: !3, line: 5328, type: !6378)
!11955 = !DILocation(line: 5328, column: 49, scope: !11953)
!11956 = !DILocalVariable(name: "fw", scope: !11953, file: !3, line: 5330, type: !10734)
!11957 = !DILocation(line: 5330, column: 25, scope: !11953)
!11958 = !DILocalVariable(name: "fwname", scope: !11953, file: !3, line: 5331, type: !6042)
!11959 = !DILocation(line: 5331, column: 13, scope: !11953)
!11960 = !DILocalVariable(name: "iop_base", scope: !11953, file: !3, line: 5332, type: !334)
!11961 = !DILocation(line: 5332, column: 14, scope: !11953)
!11962 = !DILocalVariable(name: "warn_code", scope: !11953, file: !3, line: 5333, type: !5240)
!11963 = !DILocation(line: 5333, column: 9, scope: !11953)
!11964 = !DILocalVariable(name: "begin_addr", scope: !11953, file: !3, line: 5334, type: !245)
!11965 = !DILocation(line: 5334, column: 6, scope: !11953)
!11966 = !DILocalVariable(name: "end_addr", scope: !11953, file: !3, line: 5335, type: !245)
!11967 = !DILocation(line: 5335, column: 6, scope: !11953)
!11968 = !DILocalVariable(name: "code_sum", scope: !11953, file: !3, line: 5336, type: !5240)
!11969 = !DILocation(line: 5336, column: 9, scope: !11953)
!11970 = !DILocalVariable(name: "word", scope: !11953, file: !3, line: 5337, type: !296)
!11971 = !DILocation(line: 5337, column: 7, scope: !11953)
!11972 = !DILocalVariable(name: "i", scope: !11953, file: !3, line: 5338, type: !245)
!11973 = !DILocation(line: 5338, column: 6, scope: !11953)
!11974 = !DILocalVariable(name: "err", scope: !11953, file: !3, line: 5339, type: !245)
!11975 = !DILocation(line: 5339, column: 6, scope: !11953)
!11976 = !DILocalVariable(name: "chksum", scope: !11953, file: !3, line: 5340, type: !189)
!11977 = !DILocation(line: 5340, column: 16, scope: !11953)
!11978 = !DILocalVariable(name: "scsi_cfg1", scope: !11953, file: !3, line: 5341, type: !5240)
!11979 = !DILocation(line: 5341, column: 9, scope: !11953)
!11980 = !DILocalVariable(name: "byte", scope: !11953, file: !3, line: 5342, type: !5245)
!11981 = !DILocation(line: 5342, column: 8, scope: !11953)
!11982 = !DILocalVariable(name: "tid", scope: !11953, file: !3, line: 5343, type: !5245)
!11983 = !DILocation(line: 5343, column: 8, scope: !11953)
!11984 = !DILocalVariable(name: "bios_mem", scope: !11953, file: !3, line: 5344, type: !11985)
!11985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5240, size: 640, elements: !11986)
!11986 = !{!11987}
!11987 = !DISubrange(count: 40)
!11988 = !DILocation(line: 5344, column: 9, scope: !11953)
!11989 = !DILocalVariable(name: "wdtr_able", scope: !11953, file: !3, line: 5345, type: !5240)
!11990 = !DILocation(line: 5345, column: 9, scope: !11953)
!11991 = !DILocalVariable(name: "sdtr_able", scope: !11953, file: !3, line: 5345, type: !5240)
!11992 = !DILocation(line: 5345, column: 20, scope: !11953)
!11993 = !DILocalVariable(name: "ppr_able", scope: !11953, file: !3, line: 5345, type: !5240)
!11994 = !DILocation(line: 5345, column: 31, scope: !11953)
!11995 = !DILocalVariable(name: "tagqng_able", scope: !11953, file: !3, line: 5345, type: !5240)
!11996 = !DILocation(line: 5345, column: 41, scope: !11953)
!11997 = !DILocalVariable(name: "max_cmd", scope: !11953, file: !3, line: 5346, type: !5263)
!11998 = !DILocation(line: 5346, column: 8, scope: !11953)
!11999 = !DILocation(line: 5349, column: 6, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5349, column: 6)
!12001 = !DILocation(line: 5349, column: 15, scope: !12000)
!12002 = !DILocation(line: 5349, column: 24, scope: !12000)
!12003 = !DILocation(line: 5349, column: 6, scope: !11953)
!12004 = !DILocation(line: 5350, column: 3, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12000, file: !3, line: 5349, column: 30)
!12006 = !DILocation(line: 5356, column: 6, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5356, column: 6)
!12008 = !DILocation(line: 5356, column: 15, scope: !12007)
!12009 = !DILocation(line: 5356, column: 25, scope: !12007)
!12010 = !DILocation(line: 5356, column: 6, scope: !11953)
!12011 = !DILocation(line: 5357, column: 3, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12007, file: !3, line: 5356, column: 49)
!12013 = !DILocation(line: 5357, column: 12, scope: !12012)
!12014 = !DILocation(line: 5357, column: 21, scope: !12012)
!12015 = !DILocation(line: 5358, column: 3, scope: !12012)
!12016 = !DILocation(line: 5361, column: 12, scope: !11953)
!12017 = !DILocation(line: 5362, column: 13, scope: !11953)
!12018 = !DILocation(line: 5362, column: 22, scope: !11953)
!12019 = !DILocation(line: 5362, column: 11, scope: !11953)
!12020 = !DILocation(line: 5372, column: 9, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5372, column: 2)
!12022 = !DILocation(line: 5372, column: 7, scope: !12021)
!12023 = !DILocation(line: 5372, column: 14, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 5372, column: 2)
!12025 = !DILocation(line: 5372, column: 16, scope: !12024)
!12026 = !DILocation(line: 5372, column: 2, scope: !12021)
!12027 = !DILocation(line: 5373, column: 3, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 5372, column: 43)
!12029 = !DILocation(line: 5373, column: 3, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 5373, column: 3)
!12031 = !DILocation(line: 5375, column: 2, scope: !12028)
!12032 = !DILocation(line: 5372, column: 39, scope: !12024)
!12033 = !DILocation(line: 5372, column: 2, scope: !12024)
!12034 = distinct !{!12034, !12026, !12035}
!12035 = !DILocation(line: 5375, column: 2, scope: !12021)
!12036 = !DILocation(line: 5380, column: 2, scope: !11953)
!12037 = !DILocation(line: 5380, column: 2, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5380, column: 2)
!12039 = !DILocation(line: 5381, column: 2, scope: !11953)
!12040 = !DILocation(line: 5381, column: 2, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5381, column: 2)
!12042 = !DILocation(line: 5382, column: 2, scope: !11953)
!12043 = !DILocation(line: 5382, column: 2, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5382, column: 2)
!12045 = !DILocation(line: 5383, column: 2, scope: !11953)
!12046 = !DILocation(line: 5383, column: 2, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5383, column: 2)
!12048 = !DILocation(line: 5384, column: 11, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5384, column: 2)
!12050 = !DILocation(line: 5384, column: 7, scope: !12049)
!12051 = !DILocation(line: 5384, column: 16, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 5384, column: 2)
!12053 = !DILocation(line: 5384, column: 20, scope: !12052)
!12054 = !DILocation(line: 5384, column: 2, scope: !12049)
!12055 = !DILocation(line: 5385, column: 3, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12052, file: !3, line: 5384, column: 43)
!12057 = !DILocation(line: 5385, column: 3, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 5385, column: 3)
!12059 = !DILocation(line: 5387, column: 2, scope: !12056)
!12060 = !DILocation(line: 5384, column: 39, scope: !12052)
!12061 = !DILocation(line: 5384, column: 2, scope: !12052)
!12062 = distinct !{!12062, !12054, !12063}
!12063 = !DILocation(line: 5387, column: 2, scope: !12049)
!12064 = !DILocation(line: 5418, column: 9, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5418, column: 2)
!12066 = !DILocation(line: 5418, column: 7, scope: !12065)
!12067 = !DILocation(line: 5418, column: 14, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 5418, column: 2)
!12069 = !DILocation(line: 5418, column: 16, scope: !12068)
!12070 = !DILocation(line: 5418, column: 2, scope: !12065)
!12071 = !DILocation(line: 5419, column: 3, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 5418, column: 26)
!12073 = !DILocalVariable(name: "__ms", scope: !12074, file: !3, line: 5420, type: !189)
!12074 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 5420, column: 3)
!12075 = !DILocation(line: 5420, column: 3, scope: !12074)
!12076 = !DILocation(line: 5420, column: 3, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !3, line: 5420, column: 3)
!12078 = distinct !DILexicalBlock(scope: !12079, file: !3, line: 5420, column: 3)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 5420, column: 3)
!12080 = distinct !DILexicalBlock(scope: !12074, file: !3, line: 5420, column: 3)
!12081 = distinct !{!12081, !12075, !12075}
!12082 = !DILocation(line: 5421, column: 10, scope: !12072)
!12083 = !DILocation(line: 5421, column: 8, scope: !12072)
!12084 = !DILocation(line: 5422, column: 8, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 5422, column: 7)
!12086 = !DILocation(line: 5422, column: 13, scope: !12085)
!12087 = !DILocation(line: 5422, column: 30, scope: !12085)
!12088 = !DILocation(line: 5423, column: 7, scope: !12085)
!12089 = !DILocation(line: 5423, column: 11, scope: !12085)
!12090 = !DILocation(line: 5423, column: 16, scope: !12085)
!12091 = !DILocation(line: 5423, column: 24, scope: !12085)
!12092 = !DILocation(line: 5422, column: 7, scope: !12072)
!12093 = !DILocation(line: 5424, column: 4, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12085, file: !3, line: 5423, column: 43)
!12095 = !DILocation(line: 5424, column: 13, scope: !12094)
!12096 = !DILocation(line: 5424, column: 22, scope: !12094)
!12097 = !DILocation(line: 5425, column: 4, scope: !12094)
!12098 = !DILocation(line: 5428, column: 3, scope: !12072)
!12099 = !DILocalVariable(name: "__ms", scope: !12100, file: !3, line: 5429, type: !189)
!12100 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 5429, column: 3)
!12101 = !DILocation(line: 5429, column: 3, scope: !12100)
!12102 = !DILocation(line: 5429, column: 3, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 5429, column: 3)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 5429, column: 3)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 5429, column: 3)
!12106 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 5429, column: 3)
!12107 = distinct !{!12107, !12101, !12101}
!12108 = !DILocation(line: 5430, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 5430, column: 7)
!12110 = !DILocation(line: 5431, column: 7, scope: !12109)
!12111 = !DILocation(line: 5430, column: 7, scope: !12072)
!12112 = !DILocation(line: 5432, column: 4, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 5431, column: 24)
!12114 = !DILocation(line: 5432, column: 13, scope: !12113)
!12115 = !DILocation(line: 5432, column: 22, scope: !12113)
!12116 = !DILocation(line: 5433, column: 4, scope: !12113)
!12117 = !DILocation(line: 5435, column: 2, scope: !12072)
!12118 = !DILocation(line: 5418, column: 22, scope: !12068)
!12119 = !DILocation(line: 5418, column: 2, scope: !12068)
!12120 = distinct !{!12120, !12070, !12121}
!12121 = !DILocation(line: 5435, column: 2, scope: !12065)
!12122 = !DILocation(line: 5444, column: 2, scope: !11953)
!12123 = !DILocalVariable(name: "__ms", scope: !12124, file: !3, line: 5445, type: !189)
!12124 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5445, column: 2)
!12125 = !DILocation(line: 5445, column: 2, scope: !12124)
!12126 = !DILocation(line: 5445, column: 2, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 5445, column: 2)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 5445, column: 2)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 5445, column: 2)
!12130 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 5445, column: 2)
!12131 = distinct !{!12131, !12125, !12125}
!12132 = !DILocation(line: 5447, column: 9, scope: !11953)
!12133 = !DILocation(line: 5447, column: 7, scope: !11953)
!12134 = !DILocation(line: 5448, column: 7, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5448, column: 6)
!12136 = !DILocation(line: 5448, column: 12, scope: !12135)
!12137 = !DILocation(line: 5448, column: 29, scope: !12135)
!12138 = !DILocation(line: 5448, column: 34, scope: !12135)
!12139 = !DILocation(line: 5448, column: 38, scope: !12135)
!12140 = !DILocation(line: 5448, column: 43, scope: !12135)
!12141 = !DILocation(line: 5448, column: 62, scope: !12135)
!12142 = !DILocation(line: 5448, column: 6, scope: !11953)
!12143 = !DILocation(line: 5450, column: 28, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 5448, column: 68)
!12145 = !DILocation(line: 5450, column: 3, scope: !12144)
!12146 = !DILocation(line: 5450, column: 12, scope: !12144)
!12147 = !DILocation(line: 5450, column: 26, scope: !12144)
!12148 = !DILocation(line: 5451, column: 3, scope: !12144)
!12149 = !DILocation(line: 5451, column: 12, scope: !12144)
!12150 = !DILocation(line: 5451, column: 21, scope: !12144)
!12151 = !DILocation(line: 5452, column: 3, scope: !12144)
!12152 = !DILocation(line: 5456, column: 2, scope: !11953)
!12153 = !DILocation(line: 5458, column: 30, scope: !11953)
!12154 = !DILocation(line: 5458, column: 38, scope: !11953)
!12155 = !DILocation(line: 5458, column: 47, scope: !11953)
!12156 = !DILocation(line: 5458, column: 56, scope: !11953)
!12157 = !DILocation(line: 5458, column: 8, scope: !11953)
!12158 = !DILocation(line: 5458, column: 6, scope: !11953)
!12159 = !DILocation(line: 5459, column: 6, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5459, column: 6)
!12161 = !DILocation(line: 5459, column: 6, scope: !11953)
!12162 = !DILocation(line: 5461, column: 10, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 5459, column: 11)
!12164 = !DILocation(line: 5461, column: 18, scope: !12163)
!12165 = !DILocation(line: 5460, column: 3, scope: !12163)
!12166 = !DILocation(line: 5462, column: 3, scope: !12163)
!12167 = !DILocation(line: 5462, column: 12, scope: !12163)
!12168 = !DILocation(line: 5462, column: 21, scope: !12163)
!12169 = !DILocation(line: 5463, column: 10, scope: !12163)
!12170 = !DILocation(line: 5463, column: 3, scope: !12163)
!12171 = !DILocation(line: 5465, column: 6, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5465, column: 6)
!12173 = !DILocation(line: 5465, column: 10, scope: !12172)
!12174 = !DILocation(line: 5465, column: 15, scope: !12172)
!12175 = !DILocation(line: 5465, column: 6, scope: !11953)
!12176 = !DILocation(line: 5467, column: 10, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12172, file: !3, line: 5465, column: 20)
!12178 = !DILocation(line: 5467, column: 14, scope: !12177)
!12179 = !DILocation(line: 5467, column: 20, scope: !12177)
!12180 = !DILocation(line: 5466, column: 3, scope: !12177)
!12181 = !DILocation(line: 5468, column: 20, scope: !12177)
!12182 = !DILocation(line: 5468, column: 3, scope: !12177)
!12183 = !DILocation(line: 5469, column: 3, scope: !12177)
!12184 = !DILocation(line: 5469, column: 12, scope: !12177)
!12185 = !DILocation(line: 5469, column: 21, scope: !12177)
!12186 = !DILocation(line: 5470, column: 3, scope: !12177)
!12187 = !DILocation(line: 5472, column: 12, scope: !11953)
!12188 = !DILocation(line: 5472, column: 16, scope: !11953)
!12189 = !DILocation(line: 5472, column: 24, scope: !11953)
!12190 = !DILocation(line: 5472, column: 34, scope: !11953)
!12191 = !DILocation(line: 5472, column: 38, scope: !11953)
!12192 = !DILocation(line: 5472, column: 46, scope: !11953)
!12193 = !DILocation(line: 5472, column: 31, scope: !11953)
!12194 = !DILocation(line: 5473, column: 5, scope: !11953)
!12195 = !DILocation(line: 5473, column: 9, scope: !11953)
!12196 = !DILocation(line: 5473, column: 17, scope: !11953)
!12197 = !DILocation(line: 5472, column: 53, scope: !11953)
!12198 = !DILocation(line: 5473, column: 25, scope: !11953)
!12199 = !DILocation(line: 5473, column: 29, scope: !11953)
!12200 = !DILocation(line: 5473, column: 23, scope: !11953)
!12201 = !DILocation(line: 5472, column: 11, scope: !11953)
!12202 = !DILocation(line: 5472, column: 9, scope: !11953)
!12203 = !DILocation(line: 5474, column: 39, scope: !11953)
!12204 = !DILocation(line: 5474, column: 50, scope: !11953)
!12205 = !DILocation(line: 5474, column: 54, scope: !11953)
!12206 = !DILocation(line: 5475, column: 11, scope: !11953)
!12207 = !DILocation(line: 5475, column: 15, scope: !11953)
!12208 = !DILocation(line: 5475, column: 20, scope: !11953)
!12209 = !DILocation(line: 5476, column: 11, scope: !11953)
!12210 = !DILocation(line: 5474, column: 22, scope: !11953)
!12211 = !DILocation(line: 5474, column: 2, scope: !11953)
!12212 = !DILocation(line: 5474, column: 11, scope: !11953)
!12213 = !DILocation(line: 5474, column: 20, scope: !11953)
!12214 = !DILocation(line: 5477, column: 19, scope: !11953)
!12215 = !DILocation(line: 5477, column: 2, scope: !11953)
!12216 = !DILocation(line: 5478, column: 6, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5478, column: 6)
!12218 = !DILocation(line: 5478, column: 15, scope: !12217)
!12219 = !DILocation(line: 5478, column: 6, scope: !11953)
!12220 = !DILocation(line: 5479, column: 3, scope: !12217)
!12221 = !DILocation(line: 5484, column: 9, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5484, column: 2)
!12223 = !DILocation(line: 5484, column: 7, scope: !12222)
!12224 = !DILocation(line: 5484, column: 14, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12222, file: !3, line: 5484, column: 2)
!12226 = !DILocation(line: 5484, column: 16, scope: !12225)
!12227 = !DILocation(line: 5484, column: 2, scope: !12222)
!12228 = !DILocation(line: 5485, column: 3, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 5484, column: 43)
!12230 = !DILocation(line: 5487, column: 2, scope: !12229)
!12231 = !DILocation(line: 5484, column: 39, scope: !12225)
!12232 = !DILocation(line: 5484, column: 2, scope: !12225)
!12233 = distinct !{!12233, !12227, !12234}
!12234 = !DILocation(line: 5487, column: 2, scope: !12222)
!12235 = !DILocation(line: 5493, column: 2, scope: !11953)
!12236 = !DILocation(line: 5493, column: 2, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5493, column: 2)
!12238 = !DILocation(line: 5494, column: 2, scope: !11953)
!12239 = !DILocation(line: 5494, column: 2, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5494, column: 2)
!12241 = !DILocation(line: 5495, column: 11, scope: !11953)
!12242 = !DILocation(line: 5496, column: 2, scope: !11953)
!12243 = !DILocation(line: 5497, column: 14, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5497, column: 2)
!12245 = !DILocation(line: 5497, column: 12, scope: !12244)
!12246 = !DILocation(line: 5497, column: 7, scope: !12244)
!12247 = !DILocation(line: 5497, column: 26, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 5497, column: 2)
!12249 = !DILocation(line: 5497, column: 33, scope: !12248)
!12250 = !DILocation(line: 5497, column: 31, scope: !12248)
!12251 = !DILocation(line: 5497, column: 2, scope: !12244)
!12252 = !DILocation(line: 5498, column: 15, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12248, file: !3, line: 5497, column: 54)
!12254 = !DILocation(line: 5498, column: 12, scope: !12253)
!12255 = !DILocation(line: 5499, column: 2, scope: !12253)
!12256 = !DILocation(line: 5497, column: 48, scope: !12248)
!12257 = !DILocation(line: 5497, column: 2, scope: !12248)
!12258 = distinct !{!12258, !12251, !12259}
!12259 = !DILocation(line: 5499, column: 2, scope: !12244)
!12260 = !DILocation(line: 5500, column: 2, scope: !11953)
!12261 = !DILocation(line: 5505, column: 2, scope: !11953)
!12262 = !DILocation(line: 5505, column: 2, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5505, column: 2)
!12264 = !DILocation(line: 5507, column: 2, scope: !11953)
!12265 = !DILocation(line: 5507, column: 2, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5507, column: 2)
!12267 = !DILocation(line: 5513, column: 2, scope: !11953)
!12268 = !DILocation(line: 5523, column: 14, scope: !11953)
!12269 = !DILocation(line: 5523, column: 12, scope: !11953)
!12270 = !DILocation(line: 5524, column: 2, scope: !11953)
!12271 = !DILocation(line: 5533, column: 6, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5533, column: 6)
!12273 = !DILocation(line: 5533, column: 15, scope: !12272)
!12274 = !DILocation(line: 5533, column: 20, scope: !12272)
!12275 = !DILocation(line: 5533, column: 33, scope: !12272)
!12276 = !DILocation(line: 5533, column: 6, scope: !11953)
!12277 = !DILocation(line: 5534, column: 3, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 5533, column: 61)
!12279 = !DILocation(line: 5534, column: 3, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 5534, column: 3)
!12281 = !DILocation(line: 5535, column: 8, scope: !12278)
!12282 = !DILocation(line: 5536, column: 3, scope: !12278)
!12283 = !DILocation(line: 5537, column: 2, scope: !12278)
!12284 = !DILocation(line: 5545, column: 7, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5545, column: 6)
!12286 = !DILocation(line: 5545, column: 16, scope: !12285)
!12287 = !DILocation(line: 5545, column: 26, scope: !12285)
!12288 = !DILocation(line: 5545, column: 48, scope: !12285)
!12289 = !DILocation(line: 5545, column: 6, scope: !11953)
!12290 = !DILocation(line: 5546, column: 3, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 5545, column: 54)
!12292 = !DILocation(line: 5546, column: 3, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 5546, column: 3)
!12294 = !DILocation(line: 5547, column: 8, scope: !12291)
!12295 = !DILocation(line: 5548, column: 3, scope: !12291)
!12296 = !DILocation(line: 5549, column: 2, scope: !12291)
!12297 = !DILocation(line: 5555, column: 2, scope: !11953)
!12298 = !DILocation(line: 5570, column: 7, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5570, column: 6)
!12300 = !DILocation(line: 5570, column: 16, scope: !12299)
!12301 = !DILocation(line: 5570, column: 26, scope: !12299)
!12302 = !DILocation(line: 5570, column: 54, scope: !12299)
!12303 = !DILocation(line: 5570, column: 6, scope: !11953)
!12304 = !DILocation(line: 5571, column: 3, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 5570, column: 60)
!12306 = !DILocation(line: 5573, column: 3, scope: !12305)
!12307 = !DILocation(line: 5575, column: 2, scope: !12305)
!12308 = !DILocation(line: 5586, column: 2, scope: !11953)
!12309 = !DILocation(line: 5588, column: 2, scope: !11953)
!12310 = !DILocation(line: 5589, column: 2, scope: !11953)
!12311 = !DILocation(line: 5590, column: 2, scope: !11953)
!12312 = !DILocation(line: 5591, column: 2, scope: !11953)
!12313 = !DILocation(line: 5599, column: 2, scope: !11953)
!12314 = !DILocation(line: 5612, column: 14, scope: !11953)
!12315 = !DILocation(line: 5612, column: 12, scope: !11953)
!12316 = !DILocation(line: 5619, column: 7, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5619, column: 6)
!12318 = !DILocation(line: 5619, column: 53, scope: !12317)
!12319 = !DILocation(line: 5619, column: 63, scope: !12317)
!12320 = !DILocation(line: 5619, column: 6, scope: !11953)
!12321 = !DILocation(line: 5620, column: 3, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12317, file: !3, line: 5619, column: 74)
!12323 = !DILocation(line: 5620, column: 12, scope: !12322)
!12324 = !DILocation(line: 5620, column: 21, scope: !12322)
!12325 = !DILocation(line: 5621, column: 3, scope: !12322)
!12326 = !DILocation(line: 5632, column: 6, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5632, column: 6)
!12328 = !DILocation(line: 5632, column: 16, scope: !12327)
!12329 = !DILocation(line: 5632, column: 6, scope: !11953)
!12330 = !DILocation(line: 5633, column: 3, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 5632, column: 23)
!12332 = !DILocation(line: 5633, column: 12, scope: !12331)
!12333 = !DILocation(line: 5633, column: 21, scope: !12331)
!12334 = !DILocation(line: 5634, column: 3, scope: !12331)
!12335 = !DILocation(line: 5650, column: 7, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5650, column: 6)
!12337 = !DILocation(line: 5650, column: 16, scope: !12336)
!12338 = !DILocation(line: 5650, column: 21, scope: !12336)
!12339 = !DILocation(line: 5650, column: 33, scope: !12336)
!12340 = !DILocation(line: 5650, column: 44, scope: !12336)
!12341 = !DILocation(line: 5650, column: 6, scope: !11953)
!12342 = !DILocalVariable(name: "pdev", scope: !12343, file: !3, line: 5651, type: !5710)
!12343 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 5650, column: 50)
!12344 = !DILocation(line: 5651, column: 19, scope: !12343)
!12345 = !DILocalVariable(name: "__mptr", scope: !12346, file: !3, line: 5651, type: !334)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 5651, column: 26)
!12347 = !DILocation(line: 5651, column: 26, scope: !12346)
!12348 = !DILocalVariable(name: "__mptr", scope: !12349, file: !3, line: 5651, type: !334)
!12349 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 5651, column: 26)
!12350 = !DILocation(line: 5651, column: 26, scope: !12349)
!12351 = !DILocation(line: 5651, column: 26, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 5651, column: 26)
!12353 = !DILocation(line: 5651, column: 26, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 5651, column: 26)
!12355 = !DILocation(line: 5653, column: 11, scope: !12343)
!12356 = !DILocation(line: 5653, column: 21, scope: !12343)
!12357 = !DILocation(line: 5653, column: 3, scope: !12343)
!12358 = !DILocation(line: 5658, column: 4, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 5653, column: 33)
!12360 = !DILocation(line: 5658, column: 13, scope: !12359)
!12361 = !DILocation(line: 5658, column: 18, scope: !12359)
!12362 = !DILocation(line: 5658, column: 30, scope: !12359)
!12363 = !DILocation(line: 5659, column: 4, scope: !12359)
!12364 = !DILocation(line: 5662, column: 8, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 5662, column: 8)
!12366 = !DILocation(line: 5662, column: 30, scope: !12365)
!12367 = !DILocation(line: 5662, column: 8, scope: !12359)
!12368 = !DILocation(line: 5664, column: 4, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12365, file: !3, line: 5662, column: 36)
!12370 = !DILocation(line: 5666, column: 5, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12365, file: !3, line: 5664, column: 11)
!12372 = !DILocation(line: 5666, column: 14, scope: !12371)
!12373 = !DILocation(line: 5666, column: 19, scope: !12371)
!12374 = !DILocation(line: 5666, column: 31, scope: !12371)
!12375 = !DILocation(line: 5668, column: 4, scope: !12359)
!12376 = !DILocation(line: 5670, column: 2, scope: !12343)
!12377 = !DILocation(line: 5675, column: 12, scope: !11953)
!12378 = !DILocation(line: 5680, column: 17, scope: !11953)
!12379 = !DILocation(line: 5680, column: 26, scope: !11953)
!12380 = !DILocation(line: 5680, column: 31, scope: !11953)
!12381 = !DILocation(line: 5680, column: 16, scope: !11953)
!12382 = !DILocation(line: 5680, column: 43, scope: !11953)
!12383 = !DILocation(line: 5680, column: 12, scope: !11953)
!12384 = !DILocation(line: 5689, column: 12, scope: !11953)
!12385 = !DILocation(line: 5700, column: 2, scope: !11953)
!12386 = !DILocation(line: 5721, column: 2, scope: !11953)
!12387 = !DILocation(line: 5730, column: 2, scope: !11953)
!12388 = !DILocation(line: 5733, column: 26, scope: !11953)
!12389 = !DILocation(line: 5733, column: 2, scope: !11953)
!12390 = !DILocation(line: 5738, column: 41, scope: !11953)
!12391 = !DILocation(line: 5738, column: 20, scope: !11953)
!12392 = !DILocation(line: 5738, column: 2, scope: !11953)
!12393 = !DILocation(line: 5738, column: 11, scope: !11953)
!12394 = !DILocation(line: 5738, column: 18, scope: !11953)
!12395 = !DILocation(line: 5739, column: 7, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5739, column: 6)
!12397 = !DILocation(line: 5739, column: 16, scope: !12396)
!12398 = !DILocation(line: 5739, column: 6, scope: !11953)
!12399 = !DILocation(line: 5740, column: 3, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12396, file: !3, line: 5739, column: 24)
!12401 = !DILocation(line: 5740, column: 12, scope: !12400)
!12402 = !DILocation(line: 5740, column: 21, scope: !12400)
!12403 = !DILocation(line: 5741, column: 3, scope: !12400)
!12404 = !DILocation(line: 5749, column: 2, scope: !11953)
!12405 = !DILocation(line: 5750, column: 2, scope: !11953)
!12406 = !DILocation(line: 5756, column: 41, scope: !11953)
!12407 = !DILocation(line: 5756, column: 20, scope: !11953)
!12408 = !DILocation(line: 5756, column: 2, scope: !11953)
!12409 = !DILocation(line: 5756, column: 11, scope: !11953)
!12410 = !DILocation(line: 5756, column: 18, scope: !11953)
!12411 = !DILocation(line: 5757, column: 7, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5757, column: 6)
!12413 = !DILocation(line: 5757, column: 16, scope: !12412)
!12414 = !DILocation(line: 5757, column: 6, scope: !11953)
!12415 = !DILocation(line: 5758, column: 3, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12412, file: !3, line: 5757, column: 24)
!12417 = !DILocation(line: 5758, column: 12, scope: !12416)
!12418 = !DILocation(line: 5758, column: 21, scope: !12416)
!12419 = !DILocation(line: 5759, column: 3, scope: !12416)
!12420 = !DILocation(line: 5765, column: 2, scope: !11953)
!12421 = !DILocation(line: 5766, column: 2, scope: !11953)
!12422 = !DILocation(line: 5766, column: 11, scope: !11953)
!12423 = !DILocation(line: 5766, column: 28, scope: !11953)
!12424 = !DILocation(line: 5768, column: 2, scope: !11953)
!12425 = !DILocation(line: 5771, column: 2, scope: !11953)
!12426 = !DILocation(line: 5771, column: 2, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5771, column: 2)
!12428 = !DILocation(line: 5772, column: 2, scope: !11953)
!12429 = !DILocation(line: 5775, column: 2, scope: !11953)
!12430 = !DILocation(line: 5782, column: 6, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5782, column: 6)
!12432 = !DILocation(line: 5782, column: 15, scope: !12431)
!12433 = !DILocation(line: 5782, column: 25, scope: !12431)
!12434 = !DILocation(line: 5782, column: 6, scope: !11953)
!12435 = !DILocation(line: 5787, column: 7, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !3, line: 5787, column: 7)
!12437 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 5782, column: 53)
!12438 = !DILocation(line: 5787, column: 62, scope: !12436)
!12439 = !DILocation(line: 5787, column: 7, scope: !12437)
!12440 = !DILocation(line: 5792, column: 4, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12436, file: !3, line: 5788, column: 15)
!12442 = !DILocation(line: 5793, column: 4, scope: !12441)
!12443 = !DILocation(line: 5794, column: 4, scope: !12441)
!12444 = !DILocation(line: 5795, column: 4, scope: !12441)
!12445 = !DILocation(line: 5797, column: 13, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 5797, column: 4)
!12447 = !DILocation(line: 5797, column: 9, scope: !12446)
!12448 = !DILocation(line: 5797, column: 18, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12446, file: !3, line: 5797, column: 4)
!12450 = !DILocation(line: 5797, column: 22, scope: !12449)
!12451 = !DILocation(line: 5797, column: 4, scope: !12446)
!12452 = !DILocation(line: 5798, column: 5, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12449, file: !3, line: 5797, column: 45)
!12454 = !DILocation(line: 5801, column: 4, scope: !12453)
!12455 = !DILocation(line: 5797, column: 41, scope: !12449)
!12456 = !DILocation(line: 5797, column: 4, scope: !12449)
!12457 = distinct !{!12457, !12451, !12458}
!12458 = !DILocation(line: 5801, column: 4, scope: !12446)
!12459 = !DILocation(line: 5802, column: 3, scope: !12441)
!12460 = !DILocation(line: 5803, column: 19, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !3, line: 5803, column: 8)
!12462 = distinct !DILexicalBlock(scope: !12436, file: !3, line: 5802, column: 10)
!12463 = !DILocation(line: 5803, column: 8, scope: !12461)
!12464 = !DILocation(line: 5803, column: 28, scope: !12461)
!12465 = !DILocation(line: 5803, column: 8, scope: !12462)
!12466 = !DILocation(line: 5804, column: 15, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 5803, column: 41)
!12468 = !DILocation(line: 5805, column: 4, scope: !12467)
!12469 = !DILocation(line: 5807, column: 2, scope: !12437)
!12470 = !DILocation(line: 5809, column: 9, scope: !11953)
!12471 = !DILocation(line: 5809, column: 2, scope: !11953)
!12472 = !DILocation(line: 5810, column: 1, scope: !11953)
!12473 = distinct !DISubprogram(name: "AdvInitAsc38C0800Driver", scope: !3, file: !3, line: 4842, type: !10908, scopeLine: 4843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!12474 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !12473, file: !3, line: 4842, type: !6378)
!12475 = !DILocation(line: 4842, column: 49, scope: !12473)
!12476 = !DILocalVariable(name: "fw", scope: !12473, file: !3, line: 4844, type: !10734)
!12477 = !DILocation(line: 4844, column: 25, scope: !12473)
!12478 = !DILocalVariable(name: "fwname", scope: !12473, file: !3, line: 4845, type: !6042)
!12479 = !DILocation(line: 4845, column: 13, scope: !12473)
!12480 = !DILocalVariable(name: "iop_base", scope: !12473, file: !3, line: 4846, type: !334)
!12481 = !DILocation(line: 4846, column: 14, scope: !12473)
!12482 = !DILocalVariable(name: "warn_code", scope: !12473, file: !3, line: 4847, type: !5240)
!12483 = !DILocation(line: 4847, column: 9, scope: !12473)
!12484 = !DILocalVariable(name: "begin_addr", scope: !12473, file: !3, line: 4848, type: !245)
!12485 = !DILocation(line: 4848, column: 6, scope: !12473)
!12486 = !DILocalVariable(name: "end_addr", scope: !12473, file: !3, line: 4849, type: !245)
!12487 = !DILocation(line: 4849, column: 6, scope: !12473)
!12488 = !DILocalVariable(name: "code_sum", scope: !12473, file: !3, line: 4850, type: !5240)
!12489 = !DILocation(line: 4850, column: 9, scope: !12473)
!12490 = !DILocalVariable(name: "word", scope: !12473, file: !3, line: 4851, type: !245)
!12491 = !DILocation(line: 4851, column: 6, scope: !12473)
!12492 = !DILocalVariable(name: "i", scope: !12473, file: !3, line: 4852, type: !245)
!12493 = !DILocation(line: 4852, column: 6, scope: !12473)
!12494 = !DILocalVariable(name: "err", scope: !12473, file: !3, line: 4853, type: !245)
!12495 = !DILocation(line: 4853, column: 6, scope: !12473)
!12496 = !DILocalVariable(name: "chksum", scope: !12473, file: !3, line: 4854, type: !189)
!12497 = !DILocation(line: 4854, column: 16, scope: !12473)
!12498 = !DILocalVariable(name: "scsi_cfg1", scope: !12473, file: !3, line: 4855, type: !5240)
!12499 = !DILocation(line: 4855, column: 9, scope: !12473)
!12500 = !DILocalVariable(name: "byte", scope: !12473, file: !3, line: 4856, type: !5245)
!12501 = !DILocation(line: 4856, column: 8, scope: !12473)
!12502 = !DILocalVariable(name: "tid", scope: !12473, file: !3, line: 4857, type: !5245)
!12503 = !DILocation(line: 4857, column: 8, scope: !12473)
!12504 = !DILocalVariable(name: "bios_mem", scope: !12473, file: !3, line: 4858, type: !11985)
!12505 = !DILocation(line: 4858, column: 9, scope: !12473)
!12506 = !DILocalVariable(name: "wdtr_able", scope: !12473, file: !3, line: 4859, type: !5240)
!12507 = !DILocation(line: 4859, column: 9, scope: !12473)
!12508 = !DILocalVariable(name: "sdtr_able", scope: !12473, file: !3, line: 4859, type: !5240)
!12509 = !DILocation(line: 4859, column: 20, scope: !12473)
!12510 = !DILocalVariable(name: "tagqng_able", scope: !12473, file: !3, line: 4859, type: !5240)
!12511 = !DILocation(line: 4859, column: 31, scope: !12473)
!12512 = !DILocalVariable(name: "max_cmd", scope: !12473, file: !3, line: 4860, type: !5469)
!12513 = !DILocation(line: 4860, column: 8, scope: !12473)
!12514 = !DILocation(line: 4863, column: 6, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4863, column: 6)
!12516 = !DILocation(line: 4863, column: 15, scope: !12515)
!12517 = !DILocation(line: 4863, column: 24, scope: !12515)
!12518 = !DILocation(line: 4863, column: 6, scope: !12473)
!12519 = !DILocation(line: 4864, column: 3, scope: !12515)
!12520 = !DILocation(line: 4869, column: 6, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4869, column: 6)
!12522 = !DILocation(line: 4869, column: 15, scope: !12521)
!12523 = !DILocation(line: 4869, column: 25, scope: !12521)
!12524 = !DILocation(line: 4869, column: 6, scope: !12473)
!12525 = !DILocation(line: 4870, column: 3, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 4869, column: 49)
!12527 = !DILocation(line: 4870, column: 12, scope: !12526)
!12528 = !DILocation(line: 4870, column: 21, scope: !12526)
!12529 = !DILocation(line: 4871, column: 3, scope: !12526)
!12530 = !DILocation(line: 4874, column: 12, scope: !12473)
!12531 = !DILocation(line: 4875, column: 13, scope: !12473)
!12532 = !DILocation(line: 4875, column: 22, scope: !12473)
!12533 = !DILocation(line: 4875, column: 11, scope: !12473)
!12534 = !DILocation(line: 4885, column: 9, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4885, column: 2)
!12536 = !DILocation(line: 4885, column: 7, scope: !12535)
!12537 = !DILocation(line: 4885, column: 14, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 4885, column: 2)
!12539 = !DILocation(line: 4885, column: 16, scope: !12538)
!12540 = !DILocation(line: 4885, column: 2, scope: !12535)
!12541 = !DILocation(line: 4886, column: 3, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12538, file: !3, line: 4885, column: 43)
!12543 = !DILocation(line: 4886, column: 3, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 4886, column: 3)
!12545 = !DILocation(line: 4888, column: 2, scope: !12542)
!12546 = !DILocation(line: 4885, column: 39, scope: !12538)
!12547 = !DILocation(line: 4885, column: 2, scope: !12538)
!12548 = distinct !{!12548, !12540, !12549}
!12549 = !DILocation(line: 4888, column: 2, scope: !12535)
!12550 = !DILocation(line: 4893, column: 2, scope: !12473)
!12551 = !DILocation(line: 4893, column: 2, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4893, column: 2)
!12553 = !DILocation(line: 4894, column: 2, scope: !12473)
!12554 = !DILocation(line: 4894, column: 2, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4894, column: 2)
!12556 = !DILocation(line: 4895, column: 2, scope: !12473)
!12557 = !DILocation(line: 4895, column: 2, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4895, column: 2)
!12559 = !DILocation(line: 4896, column: 11, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4896, column: 2)
!12561 = !DILocation(line: 4896, column: 7, scope: !12560)
!12562 = !DILocation(line: 4896, column: 16, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12560, file: !3, line: 4896, column: 2)
!12564 = !DILocation(line: 4896, column: 20, scope: !12563)
!12565 = !DILocation(line: 4896, column: 2, scope: !12560)
!12566 = !DILocation(line: 4897, column: 3, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 4896, column: 43)
!12568 = !DILocation(line: 4897, column: 3, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 4897, column: 3)
!12570 = !DILocation(line: 4899, column: 2, scope: !12567)
!12571 = !DILocation(line: 4896, column: 39, scope: !12563)
!12572 = !DILocation(line: 4896, column: 2, scope: !12563)
!12573 = distinct !{!12573, !12565, !12574}
!12574 = !DILocation(line: 4899, column: 2, scope: !12560)
!12575 = !DILocation(line: 4930, column: 9, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4930, column: 2)
!12577 = !DILocation(line: 4930, column: 7, scope: !12576)
!12578 = !DILocation(line: 4930, column: 14, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 4930, column: 2)
!12580 = !DILocation(line: 4930, column: 16, scope: !12579)
!12581 = !DILocation(line: 4930, column: 2, scope: !12576)
!12582 = !DILocation(line: 4931, column: 3, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12579, file: !3, line: 4930, column: 26)
!12584 = !DILocalVariable(name: "__ms", scope: !12585, file: !3, line: 4932, type: !189)
!12585 = distinct !DILexicalBlock(scope: !12583, file: !3, line: 4932, column: 3)
!12586 = !DILocation(line: 4932, column: 3, scope: !12585)
!12587 = !DILocation(line: 4932, column: 3, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 4932, column: 3)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 4932, column: 3)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 4932, column: 3)
!12591 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 4932, column: 3)
!12592 = distinct !{!12592, !12586, !12586}
!12593 = !DILocation(line: 4933, column: 10, scope: !12583)
!12594 = !DILocation(line: 4933, column: 8, scope: !12583)
!12595 = !DILocation(line: 4934, column: 8, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12583, file: !3, line: 4934, column: 7)
!12597 = !DILocation(line: 4934, column: 13, scope: !12596)
!12598 = !DILocation(line: 4934, column: 30, scope: !12596)
!12599 = !DILocation(line: 4935, column: 7, scope: !12596)
!12600 = !DILocation(line: 4935, column: 11, scope: !12596)
!12601 = !DILocation(line: 4935, column: 16, scope: !12596)
!12602 = !DILocation(line: 4935, column: 24, scope: !12596)
!12603 = !DILocation(line: 4934, column: 7, scope: !12583)
!12604 = !DILocation(line: 4936, column: 4, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 4935, column: 43)
!12606 = !DILocation(line: 4936, column: 13, scope: !12605)
!12607 = !DILocation(line: 4936, column: 22, scope: !12605)
!12608 = !DILocation(line: 4937, column: 4, scope: !12605)
!12609 = !DILocation(line: 4940, column: 3, scope: !12583)
!12610 = !DILocalVariable(name: "__ms", scope: !12611, file: !3, line: 4941, type: !189)
!12611 = distinct !DILexicalBlock(scope: !12583, file: !3, line: 4941, column: 3)
!12612 = !DILocation(line: 4941, column: 3, scope: !12611)
!12613 = !DILocation(line: 4941, column: 3, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 4941, column: 3)
!12615 = distinct !DILexicalBlock(scope: !12616, file: !3, line: 4941, column: 3)
!12616 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 4941, column: 3)
!12617 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 4941, column: 3)
!12618 = distinct !{!12618, !12612, !12612}
!12619 = !DILocation(line: 4942, column: 7, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12583, file: !3, line: 4942, column: 7)
!12621 = !DILocation(line: 4943, column: 7, scope: !12620)
!12622 = !DILocation(line: 4942, column: 7, scope: !12583)
!12623 = !DILocation(line: 4944, column: 4, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 4943, column: 24)
!12625 = !DILocation(line: 4944, column: 13, scope: !12624)
!12626 = !DILocation(line: 4944, column: 22, scope: !12624)
!12627 = !DILocation(line: 4945, column: 4, scope: !12624)
!12628 = !DILocation(line: 4947, column: 2, scope: !12583)
!12629 = !DILocation(line: 4930, column: 22, scope: !12579)
!12630 = !DILocation(line: 4930, column: 2, scope: !12579)
!12631 = distinct !{!12631, !12581, !12632}
!12632 = !DILocation(line: 4947, column: 2, scope: !12576)
!12633 = !DILocation(line: 4956, column: 2, scope: !12473)
!12634 = !DILocalVariable(name: "__ms", scope: !12635, file: !3, line: 4957, type: !189)
!12635 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4957, column: 2)
!12636 = !DILocation(line: 4957, column: 2, scope: !12635)
!12637 = !DILocation(line: 4957, column: 2, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12639, file: !3, line: 4957, column: 2)
!12639 = distinct !DILexicalBlock(scope: !12640, file: !3, line: 4957, column: 2)
!12640 = distinct !DILexicalBlock(scope: !12641, file: !3, line: 4957, column: 2)
!12641 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 4957, column: 2)
!12642 = distinct !{!12642, !12636, !12636}
!12643 = !DILocation(line: 4959, column: 9, scope: !12473)
!12644 = !DILocation(line: 4959, column: 7, scope: !12473)
!12645 = !DILocation(line: 4960, column: 7, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4960, column: 6)
!12647 = !DILocation(line: 4960, column: 12, scope: !12646)
!12648 = !DILocation(line: 4960, column: 29, scope: !12646)
!12649 = !DILocation(line: 4960, column: 34, scope: !12646)
!12650 = !DILocation(line: 4960, column: 38, scope: !12646)
!12651 = !DILocation(line: 4960, column: 43, scope: !12646)
!12652 = !DILocation(line: 4960, column: 62, scope: !12646)
!12653 = !DILocation(line: 4960, column: 6, scope: !12473)
!12654 = !DILocation(line: 4962, column: 28, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12646, file: !3, line: 4960, column: 68)
!12656 = !DILocation(line: 4962, column: 3, scope: !12655)
!12657 = !DILocation(line: 4962, column: 12, scope: !12655)
!12658 = !DILocation(line: 4962, column: 26, scope: !12655)
!12659 = !DILocation(line: 4963, column: 3, scope: !12655)
!12660 = !DILocation(line: 4963, column: 12, scope: !12655)
!12661 = !DILocation(line: 4963, column: 21, scope: !12655)
!12662 = !DILocation(line: 4964, column: 3, scope: !12655)
!12663 = !DILocation(line: 4968, column: 2, scope: !12473)
!12664 = !DILocation(line: 4970, column: 30, scope: !12473)
!12665 = !DILocation(line: 4970, column: 38, scope: !12473)
!12666 = !DILocation(line: 4970, column: 47, scope: !12473)
!12667 = !DILocation(line: 4970, column: 56, scope: !12473)
!12668 = !DILocation(line: 4970, column: 8, scope: !12473)
!12669 = !DILocation(line: 4970, column: 6, scope: !12473)
!12670 = !DILocation(line: 4971, column: 6, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4971, column: 6)
!12672 = !DILocation(line: 4971, column: 6, scope: !12473)
!12673 = !DILocation(line: 4973, column: 10, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 4971, column: 11)
!12675 = !DILocation(line: 4973, column: 18, scope: !12674)
!12676 = !DILocation(line: 4972, column: 3, scope: !12674)
!12677 = !DILocation(line: 4974, column: 3, scope: !12674)
!12678 = !DILocation(line: 4974, column: 12, scope: !12674)
!12679 = !DILocation(line: 4974, column: 21, scope: !12674)
!12680 = !DILocation(line: 4975, column: 10, scope: !12674)
!12681 = !DILocation(line: 4975, column: 3, scope: !12674)
!12682 = !DILocation(line: 4977, column: 6, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4977, column: 6)
!12684 = !DILocation(line: 4977, column: 10, scope: !12683)
!12685 = !DILocation(line: 4977, column: 15, scope: !12683)
!12686 = !DILocation(line: 4977, column: 6, scope: !12473)
!12687 = !DILocation(line: 4979, column: 10, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 4977, column: 20)
!12689 = !DILocation(line: 4979, column: 14, scope: !12688)
!12690 = !DILocation(line: 4979, column: 20, scope: !12688)
!12691 = !DILocation(line: 4978, column: 3, scope: !12688)
!12692 = !DILocation(line: 4980, column: 20, scope: !12688)
!12693 = !DILocation(line: 4980, column: 3, scope: !12688)
!12694 = !DILocation(line: 4981, column: 3, scope: !12688)
!12695 = !DILocation(line: 4981, column: 12, scope: !12688)
!12696 = !DILocation(line: 4981, column: 21, scope: !12688)
!12697 = !DILocation(line: 4982, column: 3, scope: !12688)
!12698 = !DILocation(line: 4984, column: 12, scope: !12473)
!12699 = !DILocation(line: 4984, column: 16, scope: !12473)
!12700 = !DILocation(line: 4984, column: 24, scope: !12473)
!12701 = !DILocation(line: 4984, column: 34, scope: !12473)
!12702 = !DILocation(line: 4984, column: 38, scope: !12473)
!12703 = !DILocation(line: 4984, column: 46, scope: !12473)
!12704 = !DILocation(line: 4984, column: 31, scope: !12473)
!12705 = !DILocation(line: 4985, column: 5, scope: !12473)
!12706 = !DILocation(line: 4985, column: 9, scope: !12473)
!12707 = !DILocation(line: 4985, column: 17, scope: !12473)
!12708 = !DILocation(line: 4984, column: 53, scope: !12473)
!12709 = !DILocation(line: 4985, column: 25, scope: !12473)
!12710 = !DILocation(line: 4985, column: 29, scope: !12473)
!12711 = !DILocation(line: 4985, column: 23, scope: !12473)
!12712 = !DILocation(line: 4984, column: 11, scope: !12473)
!12713 = !DILocation(line: 4984, column: 9, scope: !12473)
!12714 = !DILocation(line: 4986, column: 39, scope: !12473)
!12715 = !DILocation(line: 4986, column: 50, scope: !12473)
!12716 = !DILocation(line: 4986, column: 54, scope: !12473)
!12717 = !DILocation(line: 4987, column: 11, scope: !12473)
!12718 = !DILocation(line: 4987, column: 15, scope: !12473)
!12719 = !DILocation(line: 4987, column: 20, scope: !12473)
!12720 = !DILocation(line: 4988, column: 11, scope: !12473)
!12721 = !DILocation(line: 4986, column: 22, scope: !12473)
!12722 = !DILocation(line: 4986, column: 2, scope: !12473)
!12723 = !DILocation(line: 4986, column: 11, scope: !12473)
!12724 = !DILocation(line: 4986, column: 20, scope: !12473)
!12725 = !DILocation(line: 4989, column: 19, scope: !12473)
!12726 = !DILocation(line: 4989, column: 2, scope: !12473)
!12727 = !DILocation(line: 4990, column: 6, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4990, column: 6)
!12729 = !DILocation(line: 4990, column: 15, scope: !12728)
!12730 = !DILocation(line: 4990, column: 6, scope: !12473)
!12731 = !DILocation(line: 4991, column: 3, scope: !12728)
!12732 = !DILocation(line: 4996, column: 9, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 4996, column: 2)
!12734 = !DILocation(line: 4996, column: 7, scope: !12733)
!12735 = !DILocation(line: 4996, column: 14, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 4996, column: 2)
!12737 = !DILocation(line: 4996, column: 16, scope: !12736)
!12738 = !DILocation(line: 4996, column: 2, scope: !12733)
!12739 = !DILocation(line: 4997, column: 3, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12736, file: !3, line: 4996, column: 43)
!12741 = !DILocation(line: 4999, column: 2, scope: !12740)
!12742 = !DILocation(line: 4996, column: 39, scope: !12736)
!12743 = !DILocation(line: 4996, column: 2, scope: !12736)
!12744 = distinct !{!12744, !12738, !12745}
!12745 = !DILocation(line: 4999, column: 2, scope: !12733)
!12746 = !DILocation(line: 5005, column: 2, scope: !12473)
!12747 = !DILocation(line: 5005, column: 2, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5005, column: 2)
!12749 = !DILocation(line: 5006, column: 2, scope: !12473)
!12750 = !DILocation(line: 5006, column: 2, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5006, column: 2)
!12752 = !DILocation(line: 5007, column: 11, scope: !12473)
!12753 = !DILocation(line: 5008, column: 2, scope: !12473)
!12754 = !DILocation(line: 5009, column: 14, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5009, column: 2)
!12756 = !DILocation(line: 5009, column: 12, scope: !12755)
!12757 = !DILocation(line: 5009, column: 7, scope: !12755)
!12758 = !DILocation(line: 5009, column: 26, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 5009, column: 2)
!12760 = !DILocation(line: 5009, column: 33, scope: !12759)
!12761 = !DILocation(line: 5009, column: 31, scope: !12759)
!12762 = !DILocation(line: 5009, column: 2, scope: !12755)
!12763 = !DILocation(line: 5010, column: 15, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 5009, column: 54)
!12765 = !DILocation(line: 5010, column: 12, scope: !12764)
!12766 = !DILocation(line: 5011, column: 2, scope: !12764)
!12767 = !DILocation(line: 5009, column: 48, scope: !12759)
!12768 = !DILocation(line: 5009, column: 2, scope: !12759)
!12769 = distinct !{!12769, !12762, !12770}
!12770 = !DILocation(line: 5011, column: 2, scope: !12755)
!12771 = !DILocation(line: 5012, column: 2, scope: !12473)
!12772 = !DILocation(line: 5017, column: 2, scope: !12473)
!12773 = !DILocation(line: 5017, column: 2, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5017, column: 2)
!12775 = !DILocation(line: 5019, column: 2, scope: !12473)
!12776 = !DILocation(line: 5019, column: 2, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5019, column: 2)
!12778 = !DILocation(line: 5025, column: 2, scope: !12473)
!12779 = !DILocation(line: 5035, column: 14, scope: !12473)
!12780 = !DILocation(line: 5035, column: 12, scope: !12473)
!12781 = !DILocation(line: 5036, column: 2, scope: !12473)
!12782 = !DILocation(line: 5045, column: 6, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5045, column: 6)
!12784 = !DILocation(line: 5045, column: 15, scope: !12783)
!12785 = !DILocation(line: 5045, column: 20, scope: !12783)
!12786 = !DILocation(line: 5045, column: 33, scope: !12783)
!12787 = !DILocation(line: 5045, column: 6, scope: !12473)
!12788 = !DILocation(line: 5046, column: 3, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 5045, column: 61)
!12790 = !DILocation(line: 5046, column: 3, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 5046, column: 3)
!12792 = !DILocation(line: 5047, column: 8, scope: !12789)
!12793 = !DILocation(line: 5048, column: 3, scope: !12789)
!12794 = !DILocation(line: 5049, column: 2, scope: !12789)
!12795 = !DILocation(line: 5059, column: 2, scope: !12473)
!12796 = !DILocation(line: 5075, column: 7, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5075, column: 6)
!12798 = !DILocation(line: 5075, column: 16, scope: !12797)
!12799 = !DILocation(line: 5075, column: 26, scope: !12797)
!12800 = !DILocation(line: 5075, column: 54, scope: !12797)
!12801 = !DILocation(line: 5075, column: 6, scope: !12473)
!12802 = !DILocation(line: 5076, column: 3, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12797, file: !3, line: 5075, column: 60)
!12804 = !DILocation(line: 5078, column: 3, scope: !12803)
!12805 = !DILocation(line: 5080, column: 2, scope: !12803)
!12806 = !DILocation(line: 5091, column: 2, scope: !12473)
!12807 = !DILocation(line: 5093, column: 2, scope: !12473)
!12808 = !DILocation(line: 5094, column: 2, scope: !12473)
!12809 = !DILocation(line: 5095, column: 2, scope: !12473)
!12810 = !DILocation(line: 5096, column: 2, scope: !12473)
!12811 = !DILocation(line: 5104, column: 2, scope: !12473)
!12812 = !DILocation(line: 5116, column: 14, scope: !12473)
!12813 = !DILocation(line: 5116, column: 12, scope: !12473)
!12814 = !DILocation(line: 5123, column: 7, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5123, column: 6)
!12816 = !DILocation(line: 5123, column: 53, scope: !12815)
!12817 = !DILocation(line: 5123, column: 63, scope: !12815)
!12818 = !DILocation(line: 5123, column: 6, scope: !12473)
!12819 = !DILocation(line: 5124, column: 3, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 5123, column: 74)
!12821 = !DILocation(line: 5124, column: 12, scope: !12820)
!12822 = !DILocation(line: 5124, column: 21, scope: !12820)
!12823 = !DILocation(line: 5125, column: 3, scope: !12820)
!12824 = !DILocation(line: 5139, column: 6, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5139, column: 6)
!12826 = !DILocation(line: 5139, column: 16, scope: !12825)
!12827 = !DILocation(line: 5139, column: 6, scope: !12473)
!12828 = !DILocation(line: 5140, column: 3, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 5139, column: 23)
!12830 = !DILocation(line: 5140, column: 12, scope: !12829)
!12831 = !DILocation(line: 5140, column: 21, scope: !12829)
!12832 = !DILocation(line: 5141, column: 3, scope: !12829)
!12833 = !DILocation(line: 5152, column: 7, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5152, column: 6)
!12835 = !DILocation(line: 5152, column: 16, scope: !12834)
!12836 = !DILocation(line: 5152, column: 21, scope: !12834)
!12837 = !DILocation(line: 5152, column: 33, scope: !12834)
!12838 = !DILocation(line: 5152, column: 44, scope: !12834)
!12839 = !DILocation(line: 5152, column: 6, scope: !12473)
!12840 = !DILocation(line: 5154, column: 11, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12834, file: !3, line: 5152, column: 50)
!12842 = !DILocation(line: 5154, column: 21, scope: !12841)
!12843 = !DILocation(line: 5154, column: 3, scope: !12841)
!12844 = !DILocation(line: 5159, column: 4, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 5154, column: 33)
!12846 = !DILocation(line: 5159, column: 13, scope: !12845)
!12847 = !DILocation(line: 5159, column: 18, scope: !12845)
!12848 = !DILocation(line: 5159, column: 30, scope: !12845)
!12849 = !DILocation(line: 5160, column: 4, scope: !12845)
!12850 = !DILocation(line: 5164, column: 4, scope: !12845)
!12851 = !DILocation(line: 5164, column: 13, scope: !12845)
!12852 = !DILocation(line: 5164, column: 18, scope: !12845)
!12853 = !DILocation(line: 5164, column: 30, scope: !12845)
!12854 = !DILocation(line: 5165, column: 4, scope: !12845)
!12855 = !DILocation(line: 5167, column: 2, scope: !12841)
!12856 = !DILocation(line: 5169, column: 7, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5169, column: 6)
!12858 = !DILocation(line: 5169, column: 16, scope: !12857)
!12859 = !DILocation(line: 5169, column: 21, scope: !12857)
!12860 = !DILocation(line: 5169, column: 33, scope: !12857)
!12861 = !DILocation(line: 5169, column: 45, scope: !12857)
!12862 = !DILocation(line: 5169, column: 6, scope: !12473)
!12863 = !DILocation(line: 5171, column: 11, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 5169, column: 51)
!12865 = !DILocation(line: 5171, column: 21, scope: !12864)
!12866 = !DILocation(line: 5171, column: 3, scope: !12864)
!12867 = !DILocation(line: 5176, column: 4, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 5171, column: 34)
!12869 = !DILocation(line: 5176, column: 13, scope: !12868)
!12870 = !DILocation(line: 5176, column: 18, scope: !12868)
!12871 = !DILocation(line: 5176, column: 30, scope: !12868)
!12872 = !DILocation(line: 5177, column: 4, scope: !12868)
!12873 = !DILocation(line: 5181, column: 4, scope: !12868)
!12874 = !DILocation(line: 5183, column: 2, scope: !12864)
!12875 = !DILocation(line: 5188, column: 12, scope: !12473)
!12876 = !DILocation(line: 5193, column: 17, scope: !12473)
!12877 = !DILocation(line: 5193, column: 26, scope: !12473)
!12878 = !DILocation(line: 5193, column: 31, scope: !12473)
!12879 = !DILocation(line: 5193, column: 16, scope: !12473)
!12880 = !DILocation(line: 5193, column: 43, scope: !12473)
!12881 = !DILocation(line: 5193, column: 12, scope: !12473)
!12882 = !DILocation(line: 5200, column: 12, scope: !12473)
!12883 = !DILocation(line: 5211, column: 2, scope: !12473)
!12884 = !DILocation(line: 5224, column: 2, scope: !12473)
!12885 = !DILocation(line: 5233, column: 2, scope: !12473)
!12886 = !DILocation(line: 5236, column: 26, scope: !12473)
!12887 = !DILocation(line: 5236, column: 2, scope: !12473)
!12888 = !DILocation(line: 5242, column: 41, scope: !12473)
!12889 = !DILocation(line: 5242, column: 20, scope: !12473)
!12890 = !DILocation(line: 5242, column: 2, scope: !12473)
!12891 = !DILocation(line: 5242, column: 11, scope: !12473)
!12892 = !DILocation(line: 5242, column: 18, scope: !12473)
!12893 = !DILocation(line: 5243, column: 7, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5243, column: 6)
!12895 = !DILocation(line: 5243, column: 16, scope: !12894)
!12896 = !DILocation(line: 5243, column: 6, scope: !12473)
!12897 = !DILocation(line: 5245, column: 3, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 5243, column: 24)
!12899 = !DILocation(line: 5245, column: 12, scope: !12898)
!12900 = !DILocation(line: 5245, column: 21, scope: !12898)
!12901 = !DILocation(line: 5246, column: 3, scope: !12898)
!12902 = !DILocation(line: 5253, column: 2, scope: !12473)
!12903 = !DILocation(line: 5258, column: 41, scope: !12473)
!12904 = !DILocation(line: 5258, column: 20, scope: !12473)
!12905 = !DILocation(line: 5258, column: 2, scope: !12473)
!12906 = !DILocation(line: 5258, column: 11, scope: !12473)
!12907 = !DILocation(line: 5258, column: 18, scope: !12473)
!12908 = !DILocation(line: 5259, column: 7, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5259, column: 6)
!12910 = !DILocation(line: 5259, column: 16, scope: !12909)
!12911 = !DILocation(line: 5259, column: 6, scope: !12473)
!12912 = !DILocation(line: 5261, column: 3, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 5259, column: 24)
!12914 = !DILocation(line: 5261, column: 12, scope: !12913)
!12915 = !DILocation(line: 5261, column: 21, scope: !12913)
!12916 = !DILocation(line: 5262, column: 3, scope: !12913)
!12917 = !DILocation(line: 5270, column: 2, scope: !12473)
!12918 = !DILocation(line: 5271, column: 2, scope: !12473)
!12919 = !DILocation(line: 5271, column: 11, scope: !12473)
!12920 = !DILocation(line: 5271, column: 28, scope: !12473)
!12921 = !DILocation(line: 5273, column: 2, scope: !12473)
!12922 = !DILocation(line: 5277, column: 2, scope: !12473)
!12923 = !DILocation(line: 5277, column: 2, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5277, column: 2)
!12925 = !DILocation(line: 5278, column: 2, scope: !12473)
!12926 = !DILocation(line: 5281, column: 2, scope: !12473)
!12927 = !DILocation(line: 5288, column: 6, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 5288, column: 6)
!12929 = !DILocation(line: 5288, column: 15, scope: !12928)
!12930 = !DILocation(line: 5288, column: 25, scope: !12928)
!12931 = !DILocation(line: 5288, column: 6, scope: !12473)
!12932 = !DILocation(line: 5294, column: 7, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 5294, column: 7)
!12934 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 5288, column: 53)
!12935 = !DILocation(line: 5294, column: 62, scope: !12933)
!12936 = !DILocation(line: 5294, column: 7, scope: !12934)
!12937 = !DILocation(line: 5299, column: 4, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 5295, column: 15)
!12939 = !DILocation(line: 5300, column: 4, scope: !12938)
!12940 = !DILocation(line: 5301, column: 4, scope: !12938)
!12941 = !DILocation(line: 5303, column: 13, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 5303, column: 4)
!12943 = !DILocation(line: 5303, column: 9, scope: !12942)
!12944 = !DILocation(line: 5303, column: 18, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5303, column: 4)
!12946 = !DILocation(line: 5303, column: 22, scope: !12945)
!12947 = !DILocation(line: 5303, column: 4, scope: !12942)
!12948 = !DILocation(line: 5304, column: 5, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 5303, column: 45)
!12950 = !DILocation(line: 5307, column: 4, scope: !12949)
!12951 = !DILocation(line: 5303, column: 41, scope: !12945)
!12952 = !DILocation(line: 5303, column: 4, scope: !12945)
!12953 = distinct !{!12953, !12947, !12954}
!12954 = !DILocation(line: 5307, column: 4, scope: !12942)
!12955 = !DILocation(line: 5308, column: 3, scope: !12938)
!12956 = !DILocation(line: 5309, column: 19, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 5309, column: 8)
!12958 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 5308, column: 10)
!12959 = !DILocation(line: 5309, column: 8, scope: !12957)
!12960 = !DILocation(line: 5309, column: 28, scope: !12957)
!12961 = !DILocation(line: 5309, column: 8, scope: !12958)
!12962 = !DILocation(line: 5310, column: 15, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 5309, column: 41)
!12964 = !DILocation(line: 5311, column: 4, scope: !12963)
!12965 = !DILocation(line: 5313, column: 2, scope: !12934)
!12966 = !DILocation(line: 5315, column: 9, scope: !12473)
!12967 = !DILocation(line: 5315, column: 2, scope: !12473)
!12968 = !DILocation(line: 5316, column: 1, scope: !12473)
!12969 = distinct !DISubprogram(name: "AdvInitAsc3550Driver", scope: !3, file: !3, line: 4399, type: !10908, scopeLine: 4400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!12970 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !12969, file: !3, line: 4399, type: !6378)
!12971 = !DILocation(line: 4399, column: 46, scope: !12969)
!12972 = !DILocalVariable(name: "fw", scope: !12969, file: !3, line: 4401, type: !10734)
!12973 = !DILocation(line: 4401, column: 25, scope: !12969)
!12974 = !DILocalVariable(name: "fwname", scope: !12969, file: !3, line: 4402, type: !12975)
!12975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 144, elements: !12976)
!12976 = !{!12977}
!12977 = !DISubrange(count: 18)
!12978 = !DILocation(line: 4402, column: 13, scope: !12969)
!12979 = !DILocalVariable(name: "iop_base", scope: !12969, file: !3, line: 4403, type: !334)
!12980 = !DILocation(line: 4403, column: 14, scope: !12969)
!12981 = !DILocalVariable(name: "warn_code", scope: !12969, file: !3, line: 4404, type: !5240)
!12982 = !DILocation(line: 4404, column: 9, scope: !12969)
!12983 = !DILocalVariable(name: "begin_addr", scope: !12969, file: !3, line: 4405, type: !245)
!12984 = !DILocation(line: 4405, column: 6, scope: !12969)
!12985 = !DILocalVariable(name: "end_addr", scope: !12969, file: !3, line: 4406, type: !245)
!12986 = !DILocation(line: 4406, column: 6, scope: !12969)
!12987 = !DILocalVariable(name: "code_sum", scope: !12969, file: !3, line: 4407, type: !5240)
!12988 = !DILocation(line: 4407, column: 9, scope: !12969)
!12989 = !DILocalVariable(name: "word", scope: !12969, file: !3, line: 4408, type: !245)
!12990 = !DILocation(line: 4408, column: 6, scope: !12969)
!12991 = !DILocalVariable(name: "i", scope: !12969, file: !3, line: 4409, type: !245)
!12992 = !DILocation(line: 4409, column: 6, scope: !12969)
!12993 = !DILocalVariable(name: "err", scope: !12969, file: !3, line: 4410, type: !245)
!12994 = !DILocation(line: 4410, column: 6, scope: !12969)
!12995 = !DILocalVariable(name: "chksum", scope: !12969, file: !3, line: 4411, type: !189)
!12996 = !DILocation(line: 4411, column: 16, scope: !12969)
!12997 = !DILocalVariable(name: "scsi_cfg1", scope: !12969, file: !3, line: 4412, type: !5240)
!12998 = !DILocation(line: 4412, column: 9, scope: !12969)
!12999 = !DILocalVariable(name: "tid", scope: !12969, file: !3, line: 4413, type: !5245)
!13000 = !DILocation(line: 4413, column: 8, scope: !12969)
!13001 = !DILocalVariable(name: "bios_mem", scope: !12969, file: !3, line: 4414, type: !11985)
!13002 = !DILocation(line: 4414, column: 9, scope: !12969)
!13003 = !DILocalVariable(name: "wdtr_able", scope: !12969, file: !3, line: 4415, type: !5240)
!13004 = !DILocation(line: 4415, column: 9, scope: !12969)
!13005 = !DILocalVariable(name: "sdtr_able", scope: !12969, file: !3, line: 4415, type: !5240)
!13006 = !DILocation(line: 4415, column: 24, scope: !12969)
!13007 = !DILocalVariable(name: "tagqng_able", scope: !12969, file: !3, line: 4415, type: !5240)
!13008 = !DILocation(line: 4415, column: 35, scope: !12969)
!13009 = !DILocalVariable(name: "max_cmd", scope: !12969, file: !3, line: 4416, type: !5469)
!13010 = !DILocation(line: 4416, column: 8, scope: !12969)
!13011 = !DILocation(line: 4419, column: 6, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4419, column: 6)
!13013 = !DILocation(line: 4419, column: 15, scope: !13012)
!13014 = !DILocation(line: 4419, column: 24, scope: !13012)
!13015 = !DILocation(line: 4419, column: 6, scope: !12969)
!13016 = !DILocation(line: 4420, column: 3, scope: !13012)
!13017 = !DILocation(line: 4425, column: 6, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4425, column: 6)
!13019 = !DILocation(line: 4425, column: 15, scope: !13018)
!13020 = !DILocation(line: 4425, column: 25, scope: !13018)
!13021 = !DILocation(line: 4425, column: 6, scope: !12969)
!13022 = !DILocation(line: 4426, column: 3, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13018, file: !3, line: 4425, column: 46)
!13024 = !DILocation(line: 4426, column: 12, scope: !13023)
!13025 = !DILocation(line: 4426, column: 21, scope: !13023)
!13026 = !DILocation(line: 4427, column: 3, scope: !13023)
!13027 = !DILocation(line: 4430, column: 12, scope: !12969)
!13028 = !DILocation(line: 4431, column: 13, scope: !12969)
!13029 = !DILocation(line: 4431, column: 22, scope: !12969)
!13030 = !DILocation(line: 4431, column: 11, scope: !12969)
!13031 = !DILocation(line: 4441, column: 9, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4441, column: 2)
!13033 = !DILocation(line: 4441, column: 7, scope: !13032)
!13034 = !DILocation(line: 4441, column: 14, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 4441, column: 2)
!13036 = !DILocation(line: 4441, column: 16, scope: !13035)
!13037 = !DILocation(line: 4441, column: 2, scope: !13032)
!13038 = !DILocation(line: 4442, column: 3, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 4441, column: 43)
!13040 = !DILocation(line: 4442, column: 3, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 4442, column: 3)
!13042 = !DILocation(line: 4444, column: 2, scope: !13039)
!13043 = !DILocation(line: 4441, column: 39, scope: !13035)
!13044 = !DILocation(line: 4441, column: 2, scope: !13035)
!13045 = distinct !{!13045, !13037, !13046}
!13046 = !DILocation(line: 4444, column: 2, scope: !13032)
!13047 = !DILocation(line: 4449, column: 6, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4449, column: 6)
!13049 = !DILocation(line: 4449, column: 61, scope: !13048)
!13050 = !DILocation(line: 4449, column: 6, scope: !12969)
!13051 = !DILocalVariable(name: "bios_version", scope: !13052, file: !3, line: 4450, type: !5240)
!13052 = distinct !DILexicalBlock(scope: !13048, file: !3, line: 4449, column: 72)
!13053 = !DILocation(line: 4450, column: 10, scope: !13052)
!13054 = !DILocalVariable(name: "major", scope: !13052, file: !3, line: 4450, type: !5240)
!13055 = !DILocation(line: 4450, column: 24, scope: !13052)
!13056 = !DILocalVariable(name: "minor", scope: !13052, file: !3, line: 4450, type: !5240)
!13057 = !DILocation(line: 4450, column: 31, scope: !13052)
!13058 = !DILocation(line: 4453, column: 7, scope: !13052)
!13059 = !DILocation(line: 4452, column: 16, scope: !13052)
!13060 = !DILocation(line: 4454, column: 12, scope: !13052)
!13061 = !DILocation(line: 4454, column: 25, scope: !13052)
!13062 = !DILocation(line: 4454, column: 32, scope: !13052)
!13063 = !DILocation(line: 4454, column: 11, scope: !13052)
!13064 = !DILocation(line: 4454, column: 9, scope: !13052)
!13065 = !DILocation(line: 4455, column: 12, scope: !13052)
!13066 = !DILocation(line: 4455, column: 25, scope: !13052)
!13067 = !DILocation(line: 4455, column: 31, scope: !13052)
!13068 = !DILocation(line: 4455, column: 11, scope: !13052)
!13069 = !DILocation(line: 4455, column: 9, scope: !13052)
!13070 = !DILocation(line: 4456, column: 7, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13052, file: !3, line: 4456, column: 7)
!13072 = !DILocation(line: 4456, column: 13, scope: !13071)
!13073 = !DILocation(line: 4456, column: 17, scope: !13071)
!13074 = !DILocation(line: 4456, column: 21, scope: !13071)
!13075 = !DILocation(line: 4456, column: 27, scope: !13071)
!13076 = !DILocation(line: 4456, column: 32, scope: !13071)
!13077 = !DILocation(line: 4456, column: 35, scope: !13071)
!13078 = !DILocation(line: 4456, column: 41, scope: !13071)
!13079 = !DILocation(line: 4456, column: 7, scope: !13052)
!13080 = !DILocation(line: 4458, column: 4, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 4456, column: 48)
!13082 = !DILocation(line: 4458, column: 4, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 4458, column: 4)
!13084 = !DILocation(line: 4459, column: 3, scope: !13081)
!13085 = !DILocation(line: 4460, column: 4, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 4459, column: 10)
!13087 = !DILocation(line: 4460, column: 4, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 4460, column: 4)
!13089 = !DILocation(line: 4462, column: 2, scope: !13052)
!13090 = !DILocation(line: 4463, column: 2, scope: !12969)
!13091 = !DILocation(line: 4463, column: 2, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4463, column: 2)
!13093 = !DILocation(line: 4464, column: 2, scope: !12969)
!13094 = !DILocation(line: 4464, column: 2, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4464, column: 2)
!13096 = !DILocation(line: 4465, column: 11, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4465, column: 2)
!13098 = !DILocation(line: 4465, column: 7, scope: !13097)
!13099 = !DILocation(line: 4465, column: 16, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13097, file: !3, line: 4465, column: 2)
!13101 = !DILocation(line: 4465, column: 20, scope: !13100)
!13102 = !DILocation(line: 4465, column: 2, scope: !13097)
!13103 = !DILocation(line: 4466, column: 3, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 4465, column: 43)
!13105 = !DILocation(line: 4466, column: 3, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13104, file: !3, line: 4466, column: 3)
!13107 = !DILocation(line: 4468, column: 2, scope: !13104)
!13108 = !DILocation(line: 4465, column: 39, scope: !13100)
!13109 = !DILocation(line: 4465, column: 2, scope: !13100)
!13110 = distinct !{!13110, !13102, !13111}
!13111 = !DILocation(line: 4468, column: 2, scope: !13097)
!13112 = !DILocation(line: 4470, column: 30, scope: !12969)
!13113 = !DILocation(line: 4470, column: 38, scope: !12969)
!13114 = !DILocation(line: 4470, column: 47, scope: !12969)
!13115 = !DILocation(line: 4470, column: 56, scope: !12969)
!13116 = !DILocation(line: 4470, column: 8, scope: !12969)
!13117 = !DILocation(line: 4470, column: 6, scope: !12969)
!13118 = !DILocation(line: 4471, column: 6, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4471, column: 6)
!13120 = !DILocation(line: 4471, column: 6, scope: !12969)
!13121 = !DILocation(line: 4473, column: 10, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 4471, column: 11)
!13123 = !DILocation(line: 4473, column: 18, scope: !13122)
!13124 = !DILocation(line: 4472, column: 3, scope: !13122)
!13125 = !DILocation(line: 4474, column: 3, scope: !13122)
!13126 = !DILocation(line: 4474, column: 12, scope: !13122)
!13127 = !DILocation(line: 4474, column: 21, scope: !13122)
!13128 = !DILocation(line: 4475, column: 10, scope: !13122)
!13129 = !DILocation(line: 4475, column: 3, scope: !13122)
!13130 = !DILocation(line: 4477, column: 6, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4477, column: 6)
!13132 = !DILocation(line: 4477, column: 10, scope: !13131)
!13133 = !DILocation(line: 4477, column: 15, scope: !13131)
!13134 = !DILocation(line: 4477, column: 6, scope: !12969)
!13135 = !DILocation(line: 4479, column: 10, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 4477, column: 20)
!13137 = !DILocation(line: 4479, column: 14, scope: !13136)
!13138 = !DILocation(line: 4479, column: 20, scope: !13136)
!13139 = !DILocation(line: 4478, column: 3, scope: !13136)
!13140 = !DILocation(line: 4480, column: 20, scope: !13136)
!13141 = !DILocation(line: 4480, column: 3, scope: !13136)
!13142 = !DILocation(line: 4481, column: 3, scope: !13136)
!13143 = !DILocation(line: 4481, column: 12, scope: !13136)
!13144 = !DILocation(line: 4481, column: 21, scope: !13136)
!13145 = !DILocation(line: 4482, column: 3, scope: !13136)
!13146 = !DILocation(line: 4484, column: 12, scope: !12969)
!13147 = !DILocation(line: 4484, column: 16, scope: !12969)
!13148 = !DILocation(line: 4484, column: 24, scope: !12969)
!13149 = !DILocation(line: 4484, column: 34, scope: !12969)
!13150 = !DILocation(line: 4484, column: 38, scope: !12969)
!13151 = !DILocation(line: 4484, column: 46, scope: !12969)
!13152 = !DILocation(line: 4484, column: 31, scope: !12969)
!13153 = !DILocation(line: 4485, column: 5, scope: !12969)
!13154 = !DILocation(line: 4485, column: 9, scope: !12969)
!13155 = !DILocation(line: 4485, column: 17, scope: !12969)
!13156 = !DILocation(line: 4484, column: 53, scope: !12969)
!13157 = !DILocation(line: 4485, column: 25, scope: !12969)
!13158 = !DILocation(line: 4485, column: 29, scope: !12969)
!13159 = !DILocation(line: 4485, column: 23, scope: !12969)
!13160 = !DILocation(line: 4484, column: 11, scope: !12969)
!13161 = !DILocation(line: 4484, column: 9, scope: !12969)
!13162 = !DILocation(line: 4486, column: 39, scope: !12969)
!13163 = !DILocation(line: 4486, column: 50, scope: !12969)
!13164 = !DILocation(line: 4486, column: 54, scope: !12969)
!13165 = !DILocation(line: 4487, column: 11, scope: !12969)
!13166 = !DILocation(line: 4487, column: 15, scope: !12969)
!13167 = !DILocation(line: 4487, column: 20, scope: !12969)
!13168 = !DILocation(line: 4488, column: 11, scope: !12969)
!13169 = !DILocation(line: 4486, column: 22, scope: !12969)
!13170 = !DILocation(line: 4486, column: 2, scope: !12969)
!13171 = !DILocation(line: 4486, column: 11, scope: !12969)
!13172 = !DILocation(line: 4486, column: 20, scope: !12969)
!13173 = !DILocation(line: 4489, column: 19, scope: !12969)
!13174 = !DILocation(line: 4489, column: 2, scope: !12969)
!13175 = !DILocation(line: 4490, column: 6, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4490, column: 6)
!13177 = !DILocation(line: 4490, column: 15, scope: !13176)
!13178 = !DILocation(line: 4490, column: 6, scope: !12969)
!13179 = !DILocation(line: 4491, column: 3, scope: !13176)
!13180 = !DILocation(line: 4496, column: 9, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4496, column: 2)
!13182 = !DILocation(line: 4496, column: 7, scope: !13181)
!13183 = !DILocation(line: 4496, column: 14, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13181, file: !3, line: 4496, column: 2)
!13185 = !DILocation(line: 4496, column: 16, scope: !13184)
!13186 = !DILocation(line: 4496, column: 2, scope: !13181)
!13187 = !DILocation(line: 4497, column: 3, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 4496, column: 43)
!13189 = !DILocation(line: 4499, column: 2, scope: !13188)
!13190 = !DILocation(line: 4496, column: 39, scope: !13184)
!13191 = !DILocation(line: 4496, column: 2, scope: !13184)
!13192 = distinct !{!13192, !13186, !13193}
!13193 = !DILocation(line: 4499, column: 2, scope: !13181)
!13194 = !DILocation(line: 4505, column: 2, scope: !12969)
!13195 = !DILocation(line: 4505, column: 2, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4505, column: 2)
!13197 = !DILocation(line: 4506, column: 2, scope: !12969)
!13198 = !DILocation(line: 4506, column: 2, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4506, column: 2)
!13200 = !DILocation(line: 4507, column: 11, scope: !12969)
!13201 = !DILocation(line: 4508, column: 2, scope: !12969)
!13202 = !DILocation(line: 4509, column: 14, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4509, column: 2)
!13204 = !DILocation(line: 4509, column: 12, scope: !13203)
!13205 = !DILocation(line: 4509, column: 7, scope: !13203)
!13206 = !DILocation(line: 4509, column: 26, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 4509, column: 2)
!13208 = !DILocation(line: 4509, column: 33, scope: !13207)
!13209 = !DILocation(line: 4509, column: 31, scope: !13207)
!13210 = !DILocation(line: 4509, column: 2, scope: !13203)
!13211 = !DILocation(line: 4510, column: 15, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 4509, column: 54)
!13213 = !DILocation(line: 4510, column: 12, scope: !13212)
!13214 = !DILocation(line: 4511, column: 2, scope: !13212)
!13215 = !DILocation(line: 4509, column: 48, scope: !13207)
!13216 = !DILocation(line: 4509, column: 2, scope: !13207)
!13217 = distinct !{!13217, !13210, !13218}
!13218 = !DILocation(line: 4511, column: 2, scope: !13203)
!13219 = !DILocation(line: 4512, column: 2, scope: !12969)
!13220 = !DILocation(line: 4517, column: 2, scope: !12969)
!13221 = !DILocation(line: 4517, column: 2, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4517, column: 2)
!13223 = !DILocation(line: 4519, column: 2, scope: !12969)
!13224 = !DILocation(line: 4519, column: 2, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4519, column: 2)
!13226 = !DILocation(line: 4525, column: 2, scope: !12969)
!13227 = !DILocation(line: 4533, column: 6, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4533, column: 6)
!13229 = !DILocation(line: 4533, column: 15, scope: !13228)
!13230 = !DILocation(line: 4533, column: 20, scope: !13228)
!13231 = !DILocation(line: 4533, column: 33, scope: !13228)
!13232 = !DILocation(line: 4533, column: 6, scope: !12969)
!13233 = !DILocation(line: 4534, column: 3, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 4533, column: 61)
!13235 = !DILocation(line: 4534, column: 3, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13234, file: !3, line: 4534, column: 3)
!13237 = !DILocation(line: 4535, column: 8, scope: !13234)
!13238 = !DILocation(line: 4536, column: 3, scope: !13234)
!13239 = !DILocation(line: 4537, column: 2, scope: !13234)
!13240 = !DILocation(line: 4543, column: 2, scope: !12969)
!13241 = !DILocation(line: 4558, column: 7, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4558, column: 6)
!13243 = !DILocation(line: 4558, column: 16, scope: !13242)
!13244 = !DILocation(line: 4558, column: 26, scope: !13242)
!13245 = !DILocation(line: 4558, column: 54, scope: !13242)
!13246 = !DILocation(line: 4558, column: 6, scope: !12969)
!13247 = !DILocation(line: 4559, column: 3, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 4558, column: 60)
!13249 = !DILocation(line: 4561, column: 3, scope: !13248)
!13250 = !DILocation(line: 4563, column: 2, scope: !13248)
!13251 = !DILocation(line: 4587, column: 7, scope: !12969)
!13252 = !DILocation(line: 4588, column: 11, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4588, column: 2)
!13254 = !DILocation(line: 4588, column: 7, scope: !13253)
!13255 = !DILocation(line: 4588, column: 16, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 4588, column: 2)
!13257 = !DILocation(line: 4588, column: 20, scope: !13256)
!13258 = !DILocation(line: 4588, column: 2, scope: !13253)
!13259 = !DILocation(line: 4589, column: 7, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 4589, column: 7)
!13261 = distinct !DILexicalBlock(scope: !13256, file: !3, line: 4588, column: 43)
!13262 = !DILocation(line: 4589, column: 33, scope: !13260)
!13263 = !DILocation(line: 4589, column: 42, scope: !13260)
!13264 = !DILocation(line: 4589, column: 31, scope: !13260)
!13265 = !DILocation(line: 4589, column: 7, scope: !13261)
!13266 = !DILocation(line: 4591, column: 26, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 4589, column: 54)
!13268 = !DILocation(line: 4591, column: 30, scope: !13267)
!13269 = !DILocation(line: 4591, column: 23, scope: !13267)
!13270 = !DILocation(line: 4591, column: 17, scope: !13267)
!13271 = !DILocation(line: 4591, column: 9, scope: !13267)
!13272 = !DILocation(line: 4592, column: 3, scope: !13267)
!13273 = !DILocation(line: 4594, column: 26, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 4592, column: 10)
!13275 = !DILocation(line: 4594, column: 30, scope: !13274)
!13276 = !DILocation(line: 4594, column: 23, scope: !13274)
!13277 = !DILocation(line: 4594, column: 17, scope: !13274)
!13278 = !DILocation(line: 4594, column: 9, scope: !13274)
!13279 = !DILocation(line: 4596, column: 7, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 4596, column: 7)
!13281 = !DILocation(line: 4596, column: 11, scope: !13280)
!13282 = !DILocation(line: 4596, column: 7, scope: !13261)
!13283 = !DILocation(line: 4597, column: 4, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 4596, column: 17)
!13285 = !DILocation(line: 4598, column: 9, scope: !13284)
!13286 = !DILocation(line: 4599, column: 3, scope: !13284)
!13287 = !DILocation(line: 4599, column: 14, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 4599, column: 14)
!13289 = !DILocation(line: 4599, column: 18, scope: !13288)
!13290 = !DILocation(line: 4599, column: 14, scope: !13280)
!13291 = !DILocation(line: 4600, column: 4, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13288, file: !3, line: 4599, column: 24)
!13293 = !DILocation(line: 4601, column: 9, scope: !13292)
!13294 = !DILocation(line: 4602, column: 3, scope: !13292)
!13295 = !DILocation(line: 4602, column: 14, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13288, file: !3, line: 4602, column: 14)
!13297 = !DILocation(line: 4602, column: 18, scope: !13296)
!13298 = !DILocation(line: 4602, column: 14, scope: !13288)
!13299 = !DILocation(line: 4603, column: 4, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13296, file: !3, line: 4602, column: 25)
!13301 = !DILocation(line: 4604, column: 9, scope: !13300)
!13302 = !DILocation(line: 4605, column: 3, scope: !13300)
!13303 = !DILocation(line: 4605, column: 14, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13296, file: !3, line: 4605, column: 14)
!13305 = !DILocation(line: 4605, column: 18, scope: !13304)
!13306 = !DILocation(line: 4605, column: 14, scope: !13296)
!13307 = !DILocation(line: 4606, column: 4, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13304, file: !3, line: 4605, column: 25)
!13309 = !DILocation(line: 4608, column: 3, scope: !13308)
!13310 = !DILocation(line: 4609, column: 2, scope: !13261)
!13311 = !DILocation(line: 4588, column: 39, scope: !13256)
!13312 = !DILocation(line: 4588, column: 2, scope: !13256)
!13313 = distinct !{!13313, !13258, !13314}
!13314 = !DILocation(line: 4609, column: 2, scope: !13253)
!13315 = !DILocation(line: 4614, column: 2, scope: !12969)
!13316 = !DILocation(line: 4623, column: 2, scope: !12969)
!13317 = !DILocation(line: 4635, column: 14, scope: !12969)
!13318 = !DILocation(line: 4635, column: 12, scope: !12969)
!13319 = !DILocation(line: 4640, column: 7, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4640, column: 6)
!13321 = !DILocation(line: 4640, column: 17, scope: !13320)
!13322 = !DILocation(line: 4640, column: 36, scope: !13320)
!13323 = !DILocation(line: 4640, column: 41, scope: !13320)
!13324 = !DILocation(line: 4641, column: 7, scope: !13320)
!13325 = !DILocation(line: 4641, column: 17, scope: !13320)
!13326 = !DILocation(line: 4641, column: 36, scope: !13320)
!13327 = !DILocation(line: 4640, column: 6, scope: !12969)
!13328 = !DILocation(line: 4642, column: 3, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13320, file: !3, line: 4641, column: 42)
!13330 = !DILocation(line: 4642, column: 12, scope: !13329)
!13331 = !DILocation(line: 4642, column: 21, scope: !13329)
!13332 = !DILocation(line: 4643, column: 3, scope: !13329)
!13333 = !DILocation(line: 4651, column: 7, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4651, column: 6)
!13335 = !DILocation(line: 4651, column: 53, scope: !13334)
!13336 = !DILocation(line: 4651, column: 63, scope: !13334)
!13337 = !DILocation(line: 4651, column: 6, scope: !12969)
!13338 = !DILocation(line: 4652, column: 3, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13334, file: !3, line: 4651, column: 74)
!13340 = !DILocation(line: 4652, column: 12, scope: !13339)
!13341 = !DILocation(line: 4652, column: 21, scope: !13339)
!13342 = !DILocation(line: 4653, column: 3, scope: !13339)
!13343 = !DILocation(line: 4660, column: 7, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4660, column: 6)
!13345 = !DILocation(line: 4660, column: 17, scope: !13344)
!13346 = !DILocation(line: 4660, column: 30, scope: !13344)
!13347 = !DILocation(line: 4660, column: 34, scope: !13344)
!13348 = !DILocation(line: 4660, column: 44, scope: !13344)
!13349 = !DILocation(line: 4660, column: 58, scope: !13344)
!13350 = !DILocation(line: 4660, column: 6, scope: !12969)
!13351 = !DILocation(line: 4661, column: 3, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 4660, column: 64)
!13353 = !DILocation(line: 4661, column: 12, scope: !13352)
!13354 = !DILocation(line: 4661, column: 21, scope: !13352)
!13355 = !DILocation(line: 4662, column: 3, scope: !13352)
!13356 = !DILocation(line: 4673, column: 6, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4673, column: 6)
!13358 = !DILocation(line: 4673, column: 15, scope: !13357)
!13359 = !DILocation(line: 4673, column: 20, scope: !13357)
!13360 = !DILocation(line: 4673, column: 32, scope: !13357)
!13361 = !DILocation(line: 4673, column: 6, scope: !12969)
!13362 = !DILocation(line: 4678, column: 3, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13357, file: !3, line: 4673, column: 38)
!13364 = !DILocation(line: 4678, column: 12, scope: !13363)
!13365 = !DILocation(line: 4678, column: 17, scope: !13363)
!13366 = !DILocation(line: 4678, column: 29, scope: !13363)
!13367 = !DILocation(line: 4680, column: 11, scope: !13363)
!13368 = !DILocation(line: 4680, column: 21, scope: !13363)
!13369 = !DILocation(line: 4680, column: 3, scope: !13363)
!13370 = !DILocation(line: 4688, column: 4, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13363, file: !3, line: 4680, column: 37)
!13372 = !DILocation(line: 4688, column: 13, scope: !13371)
!13373 = !DILocation(line: 4688, column: 18, scope: !13371)
!13374 = !DILocation(line: 4688, column: 30, scope: !13371)
!13375 = !DILocation(line: 4689, column: 4, scope: !13371)
!13376 = !DILocation(line: 4697, column: 4, scope: !13371)
!13377 = !DILocation(line: 4697, column: 13, scope: !13371)
!13378 = !DILocation(line: 4697, column: 18, scope: !13371)
!13379 = !DILocation(line: 4697, column: 30, scope: !13371)
!13380 = !DILocation(line: 4698, column: 4, scope: !13371)
!13381 = !DILocation(line: 4703, column: 4, scope: !13371)
!13382 = !DILocation(line: 4705, column: 2, scope: !13363)
!13383 = !DILocation(line: 4710, column: 12, scope: !12969)
!13384 = !DILocation(line: 4718, column: 33, scope: !12969)
!13385 = !DILocation(line: 4718, column: 42, scope: !12969)
!13386 = !DILocation(line: 4718, column: 47, scope: !12969)
!13387 = !DILocation(line: 4718, column: 32, scope: !12969)
!13388 = !DILocation(line: 4718, column: 59, scope: !12969)
!13389 = !DILocation(line: 4718, column: 29, scope: !12969)
!13390 = !DILocation(line: 4718, column: 12, scope: !12969)
!13391 = !DILocation(line: 4729, column: 2, scope: !12969)
!13392 = !DILocation(line: 4743, column: 2, scope: !12969)
!13393 = !DILocation(line: 4752, column: 2, scope: !12969)
!13394 = !DILocation(line: 4755, column: 26, scope: !12969)
!13395 = !DILocation(line: 4755, column: 2, scope: !12969)
!13396 = !DILocation(line: 4761, column: 41, scope: !12969)
!13397 = !DILocation(line: 4761, column: 20, scope: !12969)
!13398 = !DILocation(line: 4761, column: 2, scope: !12969)
!13399 = !DILocation(line: 4761, column: 11, scope: !12969)
!13400 = !DILocation(line: 4761, column: 18, scope: !12969)
!13401 = !DILocation(line: 4762, column: 7, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4762, column: 6)
!13403 = !DILocation(line: 4762, column: 16, scope: !13402)
!13404 = !DILocation(line: 4762, column: 6, scope: !12969)
!13405 = !DILocation(line: 4763, column: 3, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 4762, column: 24)
!13407 = !DILocation(line: 4763, column: 12, scope: !13406)
!13408 = !DILocation(line: 4763, column: 21, scope: !13406)
!13409 = !DILocation(line: 4764, column: 3, scope: !13406)
!13410 = !DILocation(line: 4770, column: 2, scope: !12969)
!13411 = !DILocation(line: 4775, column: 41, scope: !12969)
!13412 = !DILocation(line: 4775, column: 20, scope: !12969)
!13413 = !DILocation(line: 4775, column: 2, scope: !12969)
!13414 = !DILocation(line: 4775, column: 11, scope: !12969)
!13415 = !DILocation(line: 4775, column: 18, scope: !12969)
!13416 = !DILocation(line: 4776, column: 7, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4776, column: 6)
!13418 = !DILocation(line: 4776, column: 16, scope: !13417)
!13419 = !DILocation(line: 4776, column: 6, scope: !12969)
!13420 = !DILocation(line: 4777, column: 3, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13417, file: !3, line: 4776, column: 24)
!13422 = !DILocation(line: 4777, column: 12, scope: !13421)
!13423 = !DILocation(line: 4777, column: 21, scope: !13421)
!13424 = !DILocation(line: 4778, column: 3, scope: !13421)
!13425 = !DILocation(line: 4784, column: 2, scope: !12969)
!13426 = !DILocation(line: 4785, column: 2, scope: !12969)
!13427 = !DILocation(line: 4785, column: 11, scope: !12969)
!13428 = !DILocation(line: 4785, column: 28, scope: !12969)
!13429 = !DILocation(line: 4787, column: 2, scope: !12969)
!13430 = !DILocation(line: 4791, column: 2, scope: !12969)
!13431 = !DILocation(line: 4791, column: 2, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4791, column: 2)
!13433 = !DILocation(line: 4792, column: 2, scope: !12969)
!13434 = !DILocation(line: 4795, column: 2, scope: !12969)
!13435 = !DILocation(line: 4802, column: 6, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 4802, column: 6)
!13437 = !DILocation(line: 4802, column: 15, scope: !13436)
!13438 = !DILocation(line: 4802, column: 25, scope: !13436)
!13439 = !DILocation(line: 4802, column: 6, scope: !12969)
!13440 = !DILocation(line: 4808, column: 7, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 4808, column: 7)
!13442 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 4802, column: 53)
!13443 = !DILocation(line: 4808, column: 62, scope: !13441)
!13444 = !DILocation(line: 4808, column: 7, scope: !13442)
!13445 = !DILocation(line: 4813, column: 4, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13441, file: !3, line: 4809, column: 15)
!13447 = !DILocation(line: 4814, column: 4, scope: !13446)
!13448 = !DILocation(line: 4815, column: 4, scope: !13446)
!13449 = !DILocation(line: 4817, column: 13, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 4817, column: 4)
!13451 = !DILocation(line: 4817, column: 9, scope: !13450)
!13452 = !DILocation(line: 4817, column: 18, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 4817, column: 4)
!13454 = !DILocation(line: 4817, column: 22, scope: !13453)
!13455 = !DILocation(line: 4817, column: 4, scope: !13450)
!13456 = !DILocation(line: 4818, column: 5, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13453, file: !3, line: 4817, column: 45)
!13458 = !DILocation(line: 4821, column: 4, scope: !13457)
!13459 = !DILocation(line: 4817, column: 41, scope: !13453)
!13460 = !DILocation(line: 4817, column: 4, scope: !13453)
!13461 = distinct !{!13461, !13455, !13462}
!13462 = !DILocation(line: 4821, column: 4, scope: !13450)
!13463 = !DILocation(line: 4822, column: 3, scope: !13446)
!13464 = !DILocation(line: 4823, column: 19, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !3, line: 4823, column: 8)
!13466 = distinct !DILexicalBlock(scope: !13441, file: !3, line: 4822, column: 10)
!13467 = !DILocation(line: 4823, column: 8, scope: !13465)
!13468 = !DILocation(line: 4823, column: 28, scope: !13465)
!13469 = !DILocation(line: 4823, column: 8, scope: !13466)
!13470 = !DILocation(line: 4824, column: 15, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13465, file: !3, line: 4823, column: 41)
!13472 = !DILocation(line: 4825, column: 4, scope: !13471)
!13473 = !DILocation(line: 4827, column: 2, scope: !13442)
!13474 = !DILocation(line: 4829, column: 9, scope: !12969)
!13475 = !DILocation(line: 4829, column: 2, scope: !12969)
!13476 = !DILocation(line: 4830, column: 1, scope: !12969)
!13477 = distinct !DISubprogram(name: "AdvLoadMicrocode", scope: !3, file: !3, line: 4158, type: !13478, scopeLine: 4160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13478 = !DISubroutineType(types: !13479)
!13479 = !{!245, !334, !412, !245, !245, !245}
!13480 = !DILocalVariable(name: "iop_base", arg: 1, scope: !13477, file: !3, line: 4158, type: !334)
!13481 = !DILocation(line: 4158, column: 41, scope: !13477)
!13482 = !DILocalVariable(name: "buf", arg: 2, scope: !13477, file: !3, line: 4158, type: !412)
!13483 = !DILocation(line: 4158, column: 72, scope: !13477)
!13484 = !DILocalVariable(name: "size", arg: 3, scope: !13477, file: !3, line: 4159, type: !245)
!13485 = !DILocation(line: 4159, column: 12, scope: !13477)
!13486 = !DILocalVariable(name: "memsize", arg: 4, scope: !13477, file: !3, line: 4159, type: !245)
!13487 = !DILocation(line: 4159, column: 22, scope: !13477)
!13488 = !DILocalVariable(name: "chksum", arg: 5, scope: !13477, file: !3, line: 4159, type: !245)
!13489 = !DILocation(line: 4159, column: 35, scope: !13477)
!13490 = !DILocalVariable(name: "i", scope: !13477, file: !3, line: 4161, type: !245)
!13491 = !DILocation(line: 4161, column: 6, scope: !13477)
!13492 = !DILocalVariable(name: "j", scope: !13477, file: !3, line: 4161, type: !245)
!13493 = !DILocation(line: 4161, column: 9, scope: !13477)
!13494 = !DILocalVariable(name: "end", scope: !13477, file: !3, line: 4161, type: !245)
!13495 = !DILocation(line: 4161, column: 12, scope: !13477)
!13496 = !DILocalVariable(name: "len", scope: !13477, file: !3, line: 4161, type: !245)
!13497 = !DILocation(line: 4161, column: 17, scope: !13477)
!13498 = !DILocalVariable(name: "sum", scope: !13477, file: !3, line: 4162, type: !402)
!13499 = !DILocation(line: 4162, column: 6, scope: !13477)
!13500 = !DILocation(line: 4164, column: 2, scope: !13477)
!13501 = !DILocation(line: 4166, column: 9, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 4166, column: 2)
!13503 = !DILocation(line: 4166, column: 7, scope: !13502)
!13504 = !DILocation(line: 4166, column: 20, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13502, file: !3, line: 4166, column: 2)
!13506 = !DILocation(line: 4166, column: 24, scope: !13505)
!13507 = !DILocation(line: 4166, column: 22, scope: !13505)
!13508 = !DILocation(line: 4166, column: 2, scope: !13502)
!13509 = !DILocation(line: 4167, column: 7, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 4167, column: 7)
!13511 = distinct !DILexicalBlock(scope: !13505, file: !3, line: 4166, column: 35)
!13512 = !DILocation(line: 4167, column: 11, scope: !13510)
!13513 = !DILocation(line: 4167, column: 14, scope: !13510)
!13514 = !DILocation(line: 4167, column: 7, scope: !13511)
!13515 = !DILocalVariable(name: "word", scope: !13516, file: !3, line: 4168, type: !303)
!13516 = distinct !DILexicalBlock(scope: !13510, file: !3, line: 4167, column: 23)
!13517 = !DILocation(line: 4168, column: 19, scope: !13516)
!13518 = !DILocation(line: 4168, column: 27, scope: !13516)
!13519 = !DILocation(line: 4168, column: 31, scope: !13516)
!13520 = !DILocation(line: 4168, column: 33, scope: !13516)
!13521 = !DILocation(line: 4168, column: 38, scope: !13516)
!13522 = !DILocation(line: 4168, column: 46, scope: !13516)
!13523 = !DILocation(line: 4168, column: 50, scope: !13516)
!13524 = !DILocation(line: 4168, column: 52, scope: !13516)
!13525 = !DILocation(line: 4168, column: 44, scope: !13516)
!13526 = !DILocation(line: 4168, column: 26, scope: !13516)
!13527 = !DILocation(line: 4169, column: 11, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 4169, column: 4)
!13529 = !DILocation(line: 4169, column: 9, scope: !13528)
!13530 = !DILocation(line: 4169, column: 16, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13528, file: !3, line: 4169, column: 4)
!13532 = !DILocation(line: 4169, column: 20, scope: !13531)
!13533 = !DILocation(line: 4169, column: 24, scope: !13531)
!13534 = !DILocation(line: 4169, column: 26, scope: !13531)
!13535 = !DILocation(line: 4169, column: 18, scope: !13531)
!13536 = !DILocation(line: 4169, column: 4, scope: !13528)
!13537 = !DILocation(line: 4170, column: 5, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 4169, column: 37)
!13539 = !DILocation(line: 4171, column: 9, scope: !13538)
!13540 = !DILocation(line: 4172, column: 4, scope: !13538)
!13541 = !DILocation(line: 4169, column: 33, scope: !13531)
!13542 = !DILocation(line: 4169, column: 4, scope: !13531)
!13543 = distinct !{!13543, !13536, !13544}
!13544 = !DILocation(line: 4172, column: 4, scope: !13528)
!13545 = !DILocation(line: 4173, column: 6, scope: !13516)
!13546 = !DILocation(line: 4174, column: 3, scope: !13516)
!13547 = !DILocation(line: 4174, column: 14, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13510, file: !3, line: 4174, column: 14)
!13549 = !DILocation(line: 4174, column: 18, scope: !13548)
!13550 = !DILocation(line: 4174, column: 21, scope: !13548)
!13551 = !DILocation(line: 4174, column: 14, scope: !13510)
!13552 = !DILocalVariable(name: "word", scope: !13553, file: !3, line: 4175, type: !303)
!13553 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 4174, column: 30)
!13554 = !DILocation(line: 4175, column: 19, scope: !13553)
!13555 = !DILocation(line: 4175, column: 27, scope: !13553)
!13556 = !DILocation(line: 4175, column: 31, scope: !13553)
!13557 = !DILocation(line: 4175, column: 33, scope: !13553)
!13558 = !DILocation(line: 4175, column: 38, scope: !13553)
!13559 = !DILocation(line: 4175, column: 46, scope: !13553)
!13560 = !DILocation(line: 4175, column: 50, scope: !13553)
!13561 = !DILocation(line: 4175, column: 52, scope: !13553)
!13562 = !DILocation(line: 4175, column: 44, scope: !13553)
!13563 = !DILocation(line: 4175, column: 26, scope: !13553)
!13564 = !DILocation(line: 4176, column: 4, scope: !13553)
!13565 = !DILocation(line: 4177, column: 6, scope: !13553)
!13566 = !DILocation(line: 4178, column: 8, scope: !13553)
!13567 = !DILocation(line: 4179, column: 3, scope: !13553)
!13568 = !DILocalVariable(name: "off", scope: !13569, file: !3, line: 4180, type: !7)
!13569 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 4179, column: 10)
!13570 = !DILocation(line: 4180, column: 17, scope: !13569)
!13571 = !DILocation(line: 4180, column: 23, scope: !13569)
!13572 = !DILocation(line: 4180, column: 27, scope: !13569)
!13573 = !DILocation(line: 4180, column: 30, scope: !13569)
!13574 = !DILocalVariable(name: "word", scope: !13569, file: !3, line: 4181, type: !303)
!13575 = !DILocation(line: 4181, column: 19, scope: !13569)
!13576 = !DILocation(line: 4181, column: 27, scope: !13569)
!13577 = !DILocation(line: 4181, column: 31, scope: !13569)
!13578 = !DILocation(line: 4181, column: 35, scope: !13569)
!13579 = !DILocation(line: 4181, column: 40, scope: !13569)
!13580 = !DILocation(line: 4181, column: 48, scope: !13569)
!13581 = !DILocation(line: 4181, column: 52, scope: !13569)
!13582 = !DILocation(line: 4181, column: 46, scope: !13569)
!13583 = !DILocation(line: 4181, column: 26, scope: !13569)
!13584 = !DILocation(line: 4182, column: 4, scope: !13569)
!13585 = !DILocation(line: 4183, column: 8, scope: !13569)
!13586 = !DILocation(line: 4185, column: 2, scope: !13511)
!13587 = !DILocation(line: 4166, column: 31, scope: !13505)
!13588 = !DILocation(line: 4166, column: 2, scope: !13505)
!13589 = distinct !{!13589, !13508, !13590}
!13590 = !DILocation(line: 4185, column: 2, scope: !13502)
!13591 = !DILocation(line: 4187, column: 8, scope: !13477)
!13592 = !DILocation(line: 4187, column: 6, scope: !13477)
!13593 = !DILocation(line: 4189, column: 2, scope: !13477)
!13594 = !DILocation(line: 4189, column: 9, scope: !13477)
!13595 = !DILocation(line: 4189, column: 15, scope: !13477)
!13596 = !DILocation(line: 4189, column: 13, scope: !13477)
!13597 = !DILocation(line: 4190, column: 3, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 4189, column: 24)
!13599 = !DILocation(line: 4191, column: 7, scope: !13598)
!13600 = distinct !{!13600, !13593, !13601}
!13601 = !DILocation(line: 4192, column: 2, scope: !13477)
!13602 = !DILocation(line: 4195, column: 6, scope: !13477)
!13603 = !DILocation(line: 4196, column: 2, scope: !13477)
!13604 = !DILocation(line: 4198, column: 11, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 4198, column: 2)
!13606 = !DILocation(line: 4198, column: 7, scope: !13605)
!13607 = !DILocation(line: 4198, column: 16, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13605, file: !3, line: 4198, column: 2)
!13609 = !DILocation(line: 4198, column: 22, scope: !13608)
!13610 = !DILocation(line: 4198, column: 20, scope: !13608)
!13611 = !DILocation(line: 4198, column: 2, scope: !13605)
!13612 = !DILocation(line: 4199, column: 10, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13608, file: !3, line: 4198, column: 37)
!13614 = !DILocation(line: 4199, column: 7, scope: !13613)
!13615 = !DILocation(line: 4200, column: 2, scope: !13613)
!13616 = !DILocation(line: 4198, column: 31, scope: !13608)
!13617 = !DILocation(line: 4198, column: 2, scope: !13608)
!13618 = distinct !{!13618, !13611, !13619}
!13619 = !DILocation(line: 4200, column: 2, scope: !13605)
!13620 = !DILocation(line: 4202, column: 6, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 4202, column: 6)
!13622 = !DILocation(line: 4202, column: 13, scope: !13621)
!13623 = !DILocation(line: 4202, column: 10, scope: !13621)
!13624 = !DILocation(line: 4202, column: 6, scope: !13477)
!13625 = !DILocation(line: 4203, column: 3, scope: !13621)
!13626 = !DILocation(line: 4205, column: 2, scope: !13477)
!13627 = !DILocation(line: 4206, column: 1, scope: !13477)
!13628 = distinct !DISubprogram(name: "AdvBuildCarrierFreelist", scope: !3, file: !3, line: 4208, type: !13629, scopeLine: 4209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{null, !10634}
!13631 = !DILocalVariable(name: "adv_dvc", arg: 1, scope: !13628, file: !3, line: 4208, type: !10634)
!13632 = !DILocation(line: 4208, column: 57, scope: !13628)
!13633 = !DILocalVariable(name: "carr_offset", scope: !13628, file: !3, line: 4210, type: !13634)
!13634 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !188, line: 21, baseType: !13635)
!13635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_off_t", file: !294, line: 87, baseType: !295)
!13636 = !DILocation(line: 4210, column: 8, scope: !13628)
!13637 = !DILocalVariable(name: "next_offset", scope: !13628, file: !3, line: 4210, type: !13634)
!13638 = !DILocation(line: 4210, column: 25, scope: !13628)
!13639 = !DILocalVariable(name: "carr_paddr", scope: !13628, file: !3, line: 4211, type: !977)
!13640 = !DILocation(line: 4211, column: 13, scope: !13628)
!13641 = !DILocalVariable(name: "carr_num", scope: !13628, file: !3, line: 4212, type: !245)
!13642 = !DILocation(line: 4212, column: 6, scope: !13628)
!13643 = !DILocalVariable(name: "i", scope: !13628, file: !3, line: 4212, type: !245)
!13644 = !DILocation(line: 4212, column: 59, scope: !13628)
!13645 = !DILocation(line: 4214, column: 9, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 4214, column: 2)
!13647 = !DILocation(line: 4214, column: 7, scope: !13646)
!13648 = !DILocation(line: 4214, column: 14, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13646, file: !3, line: 4214, column: 2)
!13650 = !DILocation(line: 4214, column: 18, scope: !13649)
!13651 = !DILocation(line: 4214, column: 16, scope: !13649)
!13652 = !DILocation(line: 4214, column: 2, scope: !13646)
!13653 = !DILocation(line: 4215, column: 17, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 4214, column: 33)
!13655 = !DILocation(line: 4215, column: 19, scope: !13654)
!13656 = !DILocation(line: 4215, column: 15, scope: !13654)
!13657 = !DILocation(line: 4217, column: 16, scope: !13654)
!13658 = !DILocation(line: 4217, column: 25, scope: !13654)
!13659 = !DILocation(line: 4217, column: 40, scope: !13654)
!13660 = !DILocation(line: 4217, column: 38, scope: !13654)
!13661 = !DILocation(line: 4217, column: 14, scope: !13654)
!13662 = !DILocation(line: 4219, column: 33, scope: !13654)
!13663 = !DILocation(line: 4219, column: 3, scope: !13654)
!13664 = !DILocation(line: 4219, column: 12, scope: !13654)
!13665 = !DILocation(line: 4219, column: 20, scope: !13654)
!13666 = !DILocation(line: 4219, column: 23, scope: !13654)
!13667 = !DILocation(line: 4219, column: 31, scope: !13654)
!13668 = !DILocation(line: 4220, column: 33, scope: !13654)
!13669 = !DILocation(line: 4220, column: 3, scope: !13654)
!13670 = !DILocation(line: 4220, column: 12, scope: !13654)
!13671 = !DILocation(line: 4220, column: 20, scope: !13654)
!13672 = !DILocation(line: 4220, column: 23, scope: !13654)
!13673 = !DILocation(line: 4220, column: 31, scope: !13654)
!13674 = !DILocation(line: 4221, column: 3, scope: !13654)
!13675 = !DILocation(line: 4221, column: 12, scope: !13654)
!13676 = !DILocation(line: 4221, column: 20, scope: !13654)
!13677 = !DILocation(line: 4221, column: 23, scope: !13654)
!13678 = !DILocation(line: 4221, column: 32, scope: !13654)
!13679 = !DILocation(line: 4222, column: 17, scope: !13654)
!13680 = !DILocation(line: 4222, column: 29, scope: !13654)
!13681 = !DILocation(line: 4222, column: 15, scope: !13654)
!13682 = !DILocation(line: 4223, column: 7, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13654, file: !3, line: 4223, column: 7)
!13684 = !DILocation(line: 4223, column: 12, scope: !13683)
!13685 = !DILocation(line: 4223, column: 9, scope: !13683)
!13686 = !DILocation(line: 4223, column: 7, scope: !13654)
!13687 = !DILocation(line: 4224, column: 16, scope: !13683)
!13688 = !DILocation(line: 4224, column: 4, scope: !13683)
!13689 = !DILocation(line: 4225, column: 34, scope: !13654)
!13690 = !DILocation(line: 4225, column: 3, scope: !13654)
!13691 = !DILocation(line: 4225, column: 12, scope: !13654)
!13692 = !DILocation(line: 4225, column: 20, scope: !13654)
!13693 = !DILocation(line: 4225, column: 23, scope: !13654)
!13694 = !DILocation(line: 4225, column: 32, scope: !13654)
!13695 = !DILocation(line: 4226, column: 2, scope: !13654)
!13696 = !DILocation(line: 4214, column: 29, scope: !13649)
!13697 = !DILocation(line: 4214, column: 2, scope: !13649)
!13698 = distinct !{!13698, !13652, !13699}
!13699 = !DILocation(line: 4226, column: 2, scope: !13646)
!13700 = !DILocation(line: 4233, column: 28, scope: !13628)
!13701 = !DILocation(line: 4233, column: 37, scope: !13628)
!13702 = !DILocation(line: 4233, column: 2, scope: !13628)
!13703 = !DILocation(line: 4233, column: 11, scope: !13628)
!13704 = !DILocation(line: 4233, column: 25, scope: !13628)
!13705 = !DILocation(line: 4234, column: 1, scope: !13628)
!13706 = distinct !DISubprogram(name: "AdvResetSB", scope: !3, file: !3, line: 4354, type: !10908, scopeLine: 4355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13707 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !13706, file: !3, line: 4354, type: !6378)
!13708 = !DILocation(line: 4354, column: 36, scope: !13706)
!13709 = !DILocalVariable(name: "status", scope: !13706, file: !3, line: 4356, type: !245)
!13710 = !DILocation(line: 4356, column: 6, scope: !13706)
!13711 = !DILocation(line: 4362, column: 26, scope: !13706)
!13712 = !DILocation(line: 4362, column: 11, scope: !13706)
!13713 = !DILocation(line: 4362, column: 9, scope: !13706)
!13714 = !DILocation(line: 4363, column: 6, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 4363, column: 6)
!13716 = !DILocation(line: 4363, column: 13, scope: !13715)
!13717 = !DILocation(line: 4363, column: 6, scope: !13706)
!13718 = !DILocation(line: 4364, column: 10, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13715, file: !3, line: 4363, column: 26)
!13720 = !DILocation(line: 4364, column: 3, scope: !13719)
!13721 = !DILocation(line: 4373, column: 2, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !3, line: 4373, column: 2)
!13723 = distinct !DILexicalBlock(scope: !13724, file: !3, line: 4373, column: 2)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !3, line: 4373, column: 2)
!13725 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 4373, column: 2)
!13726 = !DILocation(line: 4379, column: 26, scope: !13706)
!13727 = !DILocation(line: 4379, column: 11, scope: !13706)
!13728 = !DILocation(line: 4379, column: 9, scope: !13706)
!13729 = !DILocation(line: 4380, column: 6, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 4380, column: 6)
!13731 = !DILocation(line: 4380, column: 13, scope: !13730)
!13732 = !DILocation(line: 4380, column: 6, scope: !13706)
!13733 = !DILocation(line: 4381, column: 10, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 4380, column: 26)
!13735 = !DILocation(line: 4381, column: 3, scope: !13734)
!13736 = !DILocation(line: 4384, column: 2, scope: !13706)
!13737 = !DILocation(line: 4384, column: 2, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !3, line: 4384, column: 2)
!13739 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 4384, column: 2)
!13740 = !DILocation(line: 4384, column: 2, scope: !13739)
!13741 = !DILocation(line: 4384, column: 2, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 4384, column: 2)
!13743 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 4384, column: 2)
!13744 = !DILocation(line: 4384, column: 2, scope: !13743)
!13745 = !DILocation(line: 4384, column: 2, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 4384, column: 2)
!13747 = !DILocalVariable(name: "__ms", scope: !13748, file: !3, line: 4384, type: !189)
!13748 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 4384, column: 2)
!13749 = !DILocation(line: 4384, column: 2, scope: !13748)
!13750 = !DILocation(line: 4384, column: 2, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13752, file: !3, line: 4384, column: 2)
!13752 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 4384, column: 2)
!13753 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 4384, column: 2)
!13754 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 4384, column: 2)
!13755 = distinct !{!13755, !13749, !13749}
!13756 = !DILocation(line: 4386, column: 9, scope: !13706)
!13757 = !DILocation(line: 4386, column: 2, scope: !13706)
!13758 = !DILocation(line: 4387, column: 1, scope: !13706)
!13759 = distinct !DISubprogram(name: "AdvSendIdleCmd", scope: !3, file: !3, line: 4291, type: !13760, scopeLine: 4293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13760 = !DISubroutineType(types: !13761)
!13761 = !{!245, !6378, !5240, !402}
!13762 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !13759, file: !3, line: 4291, type: !6378)
!13763 = !DILocation(line: 4291, column: 29, scope: !13759)
!13764 = !DILocalVariable(name: "idle_cmd", arg: 2, scope: !13759, file: !3, line: 4292, type: !5240)
!13765 = !DILocation(line: 4292, column: 16, scope: !13759)
!13766 = !DILocalVariable(name: "idle_cmd_parameter", arg: 3, scope: !13759, file: !3, line: 4292, type: !402)
!13767 = !DILocation(line: 4292, column: 30, scope: !13759)
!13768 = !DILocalVariable(name: "result", scope: !13759, file: !3, line: 4294, type: !245)
!13769 = !DILocation(line: 4294, column: 6, scope: !13759)
!13770 = !DILocalVariable(name: "i", scope: !13759, file: !3, line: 4294, type: !245)
!13771 = !DILocation(line: 4294, column: 14, scope: !13759)
!13772 = !DILocalVariable(name: "j", scope: !13759, file: !3, line: 4294, type: !245)
!13773 = !DILocation(line: 4294, column: 17, scope: !13759)
!13774 = !DILocalVariable(name: "iop_base", scope: !13759, file: !3, line: 4295, type: !334)
!13775 = !DILocation(line: 4295, column: 14, scope: !13759)
!13776 = !DILocation(line: 4297, column: 13, scope: !13759)
!13777 = !DILocation(line: 4297, column: 22, scope: !13759)
!13778 = !DILocation(line: 4297, column: 11, scope: !13759)
!13779 = !DILocation(line: 4304, column: 2, scope: !13759)
!13780 = !DILocation(line: 4312, column: 2, scope: !13759)
!13781 = !DILocation(line: 4314, column: 2, scope: !13759)
!13782 = !DILocation(line: 4319, column: 2, scope: !13759)
!13783 = !DILocation(line: 4320, column: 6, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 4320, column: 6)
!13785 = !DILocation(line: 4320, column: 15, scope: !13784)
!13786 = !DILocation(line: 4320, column: 25, scope: !13784)
!13787 = !DILocation(line: 4320, column: 6, scope: !13759)
!13788 = !DILocation(line: 4326, column: 3, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 4320, column: 46)
!13790 = !DILocation(line: 4327, column: 2, scope: !13789)
!13791 = !DILocation(line: 4330, column: 9, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 4330, column: 2)
!13793 = !DILocation(line: 4330, column: 7, scope: !13792)
!13794 = !DILocation(line: 4330, column: 14, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13792, file: !3, line: 4330, column: 2)
!13796 = !DILocation(line: 4330, column: 16, scope: !13795)
!13797 = !DILocation(line: 4330, column: 2, scope: !13792)
!13798 = !DILocation(line: 4332, column: 10, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !3, line: 4332, column: 3)
!13800 = distinct !DILexicalBlock(scope: !13795, file: !3, line: 4330, column: 43)
!13801 = !DILocation(line: 4332, column: 8, scope: !13799)
!13802 = !DILocation(line: 4332, column: 15, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13799, file: !3, line: 4332, column: 3)
!13804 = !DILocation(line: 4332, column: 17, scope: !13803)
!13805 = !DILocation(line: 4332, column: 3, scope: !13799)
!13806 = !DILocation(line: 4333, column: 4, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 4332, column: 42)
!13808 = !DILocation(line: 4333, column: 4, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 4333, column: 4)
!13810 = !DILocation(line: 4335, column: 8, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 4335, column: 8)
!13812 = !DILocation(line: 4335, column: 15, scope: !13811)
!13813 = !DILocation(line: 4335, column: 8, scope: !13807)
!13814 = !DILocation(line: 4336, column: 12, scope: !13811)
!13815 = !DILocation(line: 4336, column: 5, scope: !13811)
!13816 = !DILocation(line: 4337, column: 4, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 4337, column: 4)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 4337, column: 4)
!13819 = distinct !DILexicalBlock(scope: !13820, file: !3, line: 4337, column: 4)
!13820 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 4337, column: 4)
!13821 = !DILocation(line: 4338, column: 3, scope: !13807)
!13822 = !DILocation(line: 4332, column: 38, scope: !13803)
!13823 = !DILocation(line: 4332, column: 3, scope: !13803)
!13824 = distinct !{!13824, !13805, !13825}
!13825 = !DILocation(line: 4338, column: 3, scope: !13799)
!13826 = !DILocation(line: 4339, column: 2, scope: !13800)
!13827 = !DILocation(line: 4330, column: 39, scope: !13795)
!13828 = !DILocation(line: 4330, column: 2, scope: !13795)
!13829 = distinct !{!13829, !13797, !13830}
!13830 = !DILocation(line: 4339, column: 2, scope: !13792)
!13831 = !DILocation(line: 4341, column: 2, scope: !13759)
!13832 = !DILocation(line: 4341, column: 2, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 4341, column: 2)
!13834 = !DILocation(line: 4341, column: 2, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13833, file: !3, line: 4341, column: 2)
!13836 = !DILocation(line: 4341, column: 2, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13833, file: !3, line: 4341, column: 2)
!13838 = !{i32 -2140683696, i32 -2140683667, i32 -2140683621, i32 -2140683563, i32 -2140683509, i32 -2140683455, i32 -2140683400, i32 -2140683369}
!13839 = !DILocation(line: 4341, column: 2, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 4341, column: 2)
!13841 = distinct !DILexicalBlock(scope: !13833, file: !3, line: 4341, column: 2)
!13842 = !{i32 -2140682922, i32 -2140682915, i32 -2140682861, i32 -2140682830, i32 -2140682800}
!13843 = !DILocation(line: 4341, column: 2, scope: !13841)
!13844 = !DILocation(line: 4342, column: 2, scope: !13759)
!13845 = !DILocation(line: 4343, column: 1, scope: !13759)
!13846 = distinct !DISubprogram(name: "adv_async_callback", scope: !3, file: !3, line: 5907, type: !13847, scopeLine: 5908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{null, !6378, !5245}
!13849 = !DILocalVariable(name: "adv_dvc_varp", arg: 1, scope: !13846, file: !3, line: 5907, type: !6378)
!13850 = !DILocation(line: 5907, column: 45, scope: !13846)
!13851 = !DILocalVariable(name: "code", arg: 2, scope: !13846, file: !3, line: 5907, type: !5245)
!13852 = !DILocation(line: 5907, column: 65, scope: !13846)
!13853 = !DILocation(line: 5909, column: 10, scope: !13846)
!13854 = !DILocation(line: 5909, column: 2, scope: !13846)
!13855 = !DILocation(line: 5915, column: 3, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 5909, column: 16)
!13857 = !DILocation(line: 5924, column: 21, scope: !13856)
!13858 = !DILocation(line: 5924, column: 3, scope: !13856)
!13859 = !DILocation(line: 5925, column: 3, scope: !13856)
!13860 = !DILocation(line: 5932, column: 3, scope: !13856)
!13861 = !DILocation(line: 5936, column: 3, scope: !13856)
!13862 = !DILocation(line: 5938, column: 1, scope: !13846)
!13863 = distinct !DISubprogram(name: "adv_get_reqp", scope: !3, file: !3, line: 4268, type: !13864, scopeLine: 4269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{!5630, !10634, !402}
!13866 = !DILocalVariable(name: "adv_dvc", arg: 1, scope: !13863, file: !3, line: 4268, type: !10634)
!13867 = !DILocation(line: 4268, column: 53, scope: !13863)
!13868 = !DILocalVariable(name: "offset", arg: 2, scope: !13863, file: !3, line: 4268, type: !402)
!13869 = !DILocation(line: 4268, column: 66, scope: !13863)
!13870 = !DILocalVariable(name: "boardp", scope: !13863, file: !3, line: 4270, type: !190)
!13871 = !DILocation(line: 4270, column: 20, scope: !13863)
!13872 = !DILocation(line: 4270, column: 29, scope: !13863)
!13873 = !DILocation(line: 4270, column: 38, scope: !13863)
!13874 = !DILocation(line: 4272, column: 2, scope: !13863)
!13875 = !DILocation(line: 4272, column: 2, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !3, line: 4272, column: 2)
!13877 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 4272, column: 2)
!13878 = !DILocation(line: 4272, column: 2, scope: !13877)
!13879 = !DILocation(line: 4272, column: 2, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 4272, column: 2)
!13881 = !DILocation(line: 4272, column: 2, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 4272, column: 2)
!13883 = !DILocation(line: 4272, column: 2, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 4272, column: 2)
!13885 = !{i32 -2140687415, i32 -2140687386, i32 -2140687340, i32 -2140687282, i32 -2140687228, i32 -2140687174, i32 -2140687119, i32 -2140687088}
!13886 = !DILocation(line: 4272, column: 2, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 4272, column: 2)
!13888 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 4272, column: 2)
!13889 = !{i32 -2140686641, i32 -2140686634, i32 -2140686580, i32 -2140686549, i32 -2140686519}
!13890 = !DILocation(line: 4272, column: 2, scope: !13888)
!13891 = !DILocation(line: 4273, column: 10, scope: !13863)
!13892 = !DILocation(line: 4273, column: 18, scope: !13863)
!13893 = !DILocation(line: 4273, column: 27, scope: !13863)
!13894 = !DILocation(line: 4273, column: 2, scope: !13863)
!13895 = distinct !DISubprogram(name: "adv_isr_callback", scope: !3, file: !3, line: 5945, type: !13896, scopeLine: 5946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!13896 = !DISubroutineType(types: !13897)
!13897 = !{null, !6378, !8617}
!13898 = !DILocalVariable(name: "adv_dvc_varp", arg: 1, scope: !13895, file: !3, line: 5945, type: !6378)
!13899 = !DILocation(line: 5945, column: 43, scope: !13895)
!13900 = !DILocalVariable(name: "scsiqp", arg: 2, scope: !13895, file: !3, line: 5945, type: !8617)
!13901 = !DILocation(line: 5945, column: 73, scope: !13895)
!13902 = !DILocalVariable(name: "boardp", scope: !13895, file: !3, line: 5947, type: !190)
!13903 = !DILocation(line: 5947, column: 20, scope: !13895)
!13904 = !DILocation(line: 5947, column: 29, scope: !13895)
!13905 = !DILocation(line: 5947, column: 43, scope: !13895)
!13906 = !DILocalVariable(name: "reqp", scope: !13895, file: !3, line: 5948, type: !5630)
!13907 = !DILocation(line: 5948, column: 13, scope: !13895)
!13908 = !DILocalVariable(name: "sgblkp", scope: !13895, file: !3, line: 5949, type: !5686)
!13909 = !DILocation(line: 5949, column: 15, scope: !13895)
!13910 = !DILocalVariable(name: "scp", scope: !13895, file: !3, line: 5950, type: !4976)
!13911 = !DILocation(line: 5950, column: 20, scope: !13895)
!13912 = !DILocalVariable(name: "resid_cnt", scope: !13895, file: !3, line: 5951, type: !402)
!13913 = !DILocation(line: 5951, column: 6, scope: !13895)
!13914 = !DILocalVariable(name: "sense_addr", scope: !13895, file: !3, line: 5952, type: !977)
!13915 = !DILocation(line: 5952, column: 13, scope: !13895)
!13916 = !DILocation(line: 5963, column: 27, scope: !13895)
!13917 = !DILocation(line: 5963, column: 35, scope: !13895)
!13918 = !DILocation(line: 5963, column: 42, scope: !13895)
!13919 = !DILocation(line: 5963, column: 50, scope: !13895)
!13920 = !DILocation(line: 5963, column: 8, scope: !13895)
!13921 = !DILocation(line: 5963, column: 6, scope: !13895)
!13922 = !DILocation(line: 5966, column: 6, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 5966, column: 6)
!13924 = !DILocation(line: 5966, column: 10, scope: !13923)
!13925 = !DILocation(line: 5966, column: 6, scope: !13895)
!13926 = !DILocation(line: 5967, column: 3, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 5967, column: 3)
!13928 = distinct !DILexicalBlock(scope: !13923, file: !3, line: 5966, column: 19)
!13929 = !DILocation(line: 5969, column: 3, scope: !13928)
!13930 = !DILocation(line: 5973, column: 22, scope: !13895)
!13931 = !DILocation(line: 5973, column: 27, scope: !13895)
!13932 = !DILocation(line: 5973, column: 9, scope: !13895)
!13933 = !DILocation(line: 5973, column: 7, scope: !13895)
!13934 = !DILocation(line: 5975, column: 6, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 5975, column: 6)
!13936 = !DILocation(line: 5975, column: 11, scope: !13935)
!13937 = !DILocation(line: 5975, column: 6, scope: !13895)
!13938 = !DILocation(line: 5976, column: 3, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !3, line: 5976, column: 3)
!13940 = distinct !DILexicalBlock(scope: !13935, file: !3, line: 5975, column: 20)
!13941 = !DILocation(line: 5977, column: 3, scope: !13940)
!13942 = !DILocation(line: 5983, column: 2, scope: !13895)
!13943 = !DILocation(line: 5983, column: 7, scope: !13895)
!13944 = !DILocation(line: 5983, column: 21, scope: !13895)
!13945 = !DILocation(line: 5984, column: 2, scope: !13895)
!13946 = !DILocation(line: 5984, column: 8, scope: !13895)
!13947 = !DILocation(line: 5984, column: 14, scope: !13895)
!13948 = !DILocation(line: 5986, column: 2, scope: !13895)
!13949 = !DILocation(line: 5989, column: 15, scope: !13895)
!13950 = !DILocation(line: 5989, column: 13, scope: !13895)
!13951 = !DILocation(line: 5990, column: 2, scope: !13895)
!13952 = !DILocation(line: 5996, column: 10, scope: !13895)
!13953 = !DILocation(line: 5996, column: 18, scope: !13895)
!13954 = !DILocation(line: 5996, column: 2, scope: !13895)
!13955 = !DILocation(line: 5999, column: 3, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 5996, column: 31)
!13957 = !DILocation(line: 5999, column: 8, scope: !13956)
!13958 = !DILocation(line: 5999, column: 15, scope: !13956)
!13959 = !DILocation(line: 6007, column: 15, scope: !13956)
!13960 = !DILocation(line: 6007, column: 13, scope: !13956)
!13961 = !DILocation(line: 6008, column: 20, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 6008, column: 7)
!13963 = !DILocation(line: 6008, column: 7, scope: !13962)
!13964 = !DILocation(line: 6008, column: 25, scope: !13962)
!13965 = !DILocation(line: 6008, column: 30, scope: !13962)
!13966 = !DILocation(line: 6008, column: 33, scope: !13962)
!13967 = !DILocation(line: 6008, column: 43, scope: !13962)
!13968 = !DILocation(line: 6008, column: 48, scope: !13962)
!13969 = !DILocation(line: 6009, column: 7, scope: !13962)
!13970 = !DILocation(line: 6009, column: 33, scope: !13962)
!13971 = !DILocation(line: 6009, column: 20, scope: !13962)
!13972 = !DILocation(line: 6009, column: 17, scope: !13962)
!13973 = !DILocation(line: 6008, column: 7, scope: !13956)
!13974 = !DILocation(line: 6012, column: 19, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13962, file: !3, line: 6009, column: 39)
!13976 = !DILocation(line: 6012, column: 24, scope: !13975)
!13977 = !DILocation(line: 6012, column: 4, scope: !13975)
!13978 = !DILocation(line: 6013, column: 3, scope: !13975)
!13979 = !DILocation(line: 6014, column: 3, scope: !13956)
!13980 = !DILocation(line: 6018, column: 11, scope: !13956)
!13981 = !DILocation(line: 6018, column: 19, scope: !13956)
!13982 = !DILocation(line: 6018, column: 3, scope: !13956)
!13983 = !DILocation(line: 6020, column: 8, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13985, file: !3, line: 6020, column: 8)
!13985 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 6018, column: 32)
!13986 = !DILocation(line: 6020, column: 16, scope: !13984)
!13987 = !DILocation(line: 6020, column: 28, scope: !13984)
!13988 = !DILocation(line: 6020, column: 8, scope: !13985)
!13989 = !DILocation(line: 6037, column: 9, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13984, file: !3, line: 6020, column: 57)
!13991 = !DILocation(line: 6036, column: 45, scope: !13990)
!13992 = !DILocation(line: 6036, column: 5, scope: !13990)
!13993 = !DILocation(line: 6036, column: 10, scope: !13990)
!13994 = !DILocation(line: 6036, column: 17, scope: !13990)
!13995 = !DILocation(line: 6038, column: 4, scope: !13990)
!13996 = !DILocation(line: 6039, column: 19, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13984, file: !3, line: 6038, column: 11)
!13998 = !DILocation(line: 6039, column: 5, scope: !13997)
!13999 = !DILocation(line: 6039, column: 10, scope: !13997)
!14000 = !DILocation(line: 6039, column: 17, scope: !13997)
!14001 = !DILocation(line: 6041, column: 4, scope: !13985)
!14002 = !DILocation(line: 6046, column: 4, scope: !13985)
!14003 = !DILocation(line: 6046, column: 9, scope: !13985)
!14004 = !DILocation(line: 6046, column: 16, scope: !13985)
!14005 = !DILocation(line: 6047, column: 4, scope: !13985)
!14006 = !DILocation(line: 6049, column: 3, scope: !13956)
!14007 = !DILocation(line: 6054, column: 30, scope: !13956)
!14008 = !DILocation(line: 6054, column: 28, scope: !13956)
!14009 = !DILocation(line: 6053, column: 3, scope: !13956)
!14010 = !DILocation(line: 6053, column: 8, scope: !13956)
!14011 = !DILocation(line: 6053, column: 15, scope: !13956)
!14012 = !DILocation(line: 6055, column: 3, scope: !13956)
!14013 = !DILocation(line: 6060, column: 30, scope: !13956)
!14014 = !DILocation(line: 6060, column: 28, scope: !13956)
!14015 = !DILocation(line: 6059, column: 3, scope: !13956)
!14016 = !DILocation(line: 6059, column: 8, scope: !13956)
!14017 = !DILocation(line: 6059, column: 15, scope: !13956)
!14018 = !DILocation(line: 6061, column: 3, scope: !13956)
!14019 = !DILocation(line: 6069, column: 7, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 6069, column: 6)
!14021 = !DILocation(line: 6069, column: 15, scope: !14020)
!14022 = !DILocation(line: 6069, column: 30, scope: !14020)
!14023 = !DILocation(line: 6069, column: 28, scope: !14020)
!14024 = !DILocation(line: 6069, column: 67, scope: !14020)
!14025 = !DILocation(line: 6069, column: 72, scope: !14020)
!14026 = !DILocation(line: 6070, column: 6, scope: !14020)
!14027 = !DILocation(line: 6070, column: 14, scope: !14020)
!14028 = !DILocation(line: 6070, column: 26, scope: !14020)
!14029 = !DILocation(line: 6070, column: 41, scope: !14020)
!14030 = !DILocation(line: 6071, column: 6, scope: !14020)
!14031 = !DILocation(line: 6071, column: 14, scope: !14020)
!14032 = !DILocation(line: 6071, column: 26, scope: !14020)
!14033 = !DILocation(line: 6069, column: 6, scope: !13895)
!14034 = !DILocation(line: 6072, column: 27, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 6071, column: 45)
!14036 = !DILocation(line: 6072, column: 3, scope: !14035)
!14037 = !DILocation(line: 6072, column: 11, scope: !14035)
!14038 = !DILocation(line: 6072, column: 24, scope: !14035)
!14039 = !DILocation(line: 6073, column: 2, scope: !14035)
!14040 = !DILocation(line: 6075, column: 16, scope: !13895)
!14041 = !DILocation(line: 6075, column: 2, scope: !13895)
!14042 = !DILocation(line: 6080, column: 2, scope: !13895)
!14043 = !DILocation(line: 6080, column: 19, scope: !13895)
!14044 = !DILocation(line: 6080, column: 25, scope: !13895)
!14045 = !DILocation(line: 6080, column: 17, scope: !13895)
!14046 = !DILocation(line: 6080, column: 33, scope: !13895)
!14047 = !DILocation(line: 6082, column: 18, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 6080, column: 42)
!14049 = !DILocation(line: 6082, column: 26, scope: !14048)
!14050 = !DILocation(line: 6082, column: 3, scope: !14048)
!14051 = !DILocation(line: 6082, column: 9, scope: !14048)
!14052 = !DILocation(line: 6082, column: 16, scope: !14048)
!14053 = !DILocation(line: 6084, column: 17, scope: !14048)
!14054 = !DILocation(line: 6084, column: 25, scope: !14048)
!14055 = !DILocation(line: 6084, column: 41, scope: !14048)
!14056 = !DILocation(line: 6085, column: 10, scope: !14048)
!14057 = !DILocation(line: 6085, column: 18, scope: !14048)
!14058 = !DILocation(line: 6084, column: 3, scope: !14048)
!14059 = distinct !{!14059, !14042, !14060}
!14060 = !DILocation(line: 6086, column: 2, scope: !13895)
!14061 = !DILocation(line: 6089, column: 1, scope: !13895)
!14062 = distinct !DISubprogram(name: "scsi_host_find_tag", scope: !14063, file: !14063, line: 22, type: !14064, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14063 = !DIFile(filename: "./include/scsi/scsi_tcq.h", directory: "/home/lizy2001/genbc/linux")
!14064 = !DISubroutineType(types: !14065)
!14065 = !{!4976, !4796, !245}
!14066 = !DILocalVariable(name: "shost", arg: 1, scope: !14062, file: !14063, line: 22, type: !4796)
!14067 = !DILocation(line: 22, column: 70, scope: !14062)
!14068 = !DILocalVariable(name: "tag", arg: 2, scope: !14062, file: !14063, line: 23, type: !245)
!14069 = !DILocation(line: 23, column: 7, scope: !14062)
!14070 = !DILocalVariable(name: "req", scope: !14062, file: !14063, line: 25, type: !2260)
!14071 = !DILocation(line: 25, column: 18, scope: !14062)
!14072 = !DILocalVariable(name: "hwq", scope: !14062, file: !14063, line: 26, type: !899)
!14073 = !DILocation(line: 26, column: 6, scope: !14062)
!14074 = !DILocation(line: 28, column: 6, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14062, file: !14063, line: 28, column: 6)
!14076 = !DILocation(line: 28, column: 10, scope: !14075)
!14077 = !DILocation(line: 28, column: 6, scope: !14062)
!14078 = !DILocation(line: 29, column: 3, scope: !14075)
!14079 = !DILocation(line: 31, column: 33, scope: !14062)
!14080 = !DILocation(line: 31, column: 8, scope: !14062)
!14081 = !DILocation(line: 31, column: 6, scope: !14062)
!14082 = !DILocation(line: 32, column: 6, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14062, file: !14063, line: 32, column: 6)
!14084 = !DILocation(line: 32, column: 12, scope: !14083)
!14085 = !DILocation(line: 32, column: 19, scope: !14083)
!14086 = !DILocation(line: 32, column: 27, scope: !14083)
!14087 = !DILocation(line: 32, column: 10, scope: !14083)
!14088 = !DILocation(line: 32, column: 6, scope: !14062)
!14089 = !DILocation(line: 33, column: 26, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14083, file: !14063, line: 32, column: 41)
!14091 = !DILocation(line: 33, column: 33, scope: !14090)
!14092 = !DILocation(line: 33, column: 41, scope: !14090)
!14093 = !DILocation(line: 33, column: 46, scope: !14090)
!14094 = !DILocation(line: 34, column: 31, scope: !14090)
!14095 = !DILocation(line: 34, column: 6, scope: !14090)
!14096 = !DILocation(line: 33, column: 9, scope: !14090)
!14097 = !DILocation(line: 33, column: 7, scope: !14090)
!14098 = !DILocation(line: 35, column: 2, scope: !14090)
!14099 = !DILocation(line: 37, column: 7, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14062, file: !14063, line: 37, column: 6)
!14101 = !DILocation(line: 37, column: 11, scope: !14100)
!14102 = !DILocation(line: 37, column: 38, scope: !14100)
!14103 = !DILocation(line: 37, column: 15, scope: !14100)
!14104 = !DILocation(line: 37, column: 6, scope: !14062)
!14105 = !DILocation(line: 38, column: 3, scope: !14100)
!14106 = !DILocation(line: 39, column: 26, scope: !14062)
!14107 = !DILocation(line: 39, column: 9, scope: !14062)
!14108 = !DILocation(line: 39, column: 2, scope: !14062)
!14109 = !DILocation(line: 40, column: 1, scope: !14062)
!14110 = distinct !DISubprogram(name: "scsi_set_resid", scope: !4978, file: !4978, line: 194, type: !14111, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{null, !4976, !7}
!14113 = !DILocalVariable(name: "cmd", arg: 1, scope: !14110, file: !4978, line: 194, type: !4976)
!14114 = !DILocation(line: 194, column: 53, scope: !14110)
!14115 = !DILocalVariable(name: "resid", arg: 2, scope: !14110, file: !4978, line: 194, type: !7)
!14116 = !DILocation(line: 194, column: 71, scope: !14110)
!14117 = !DILocation(line: 196, column: 23, scope: !14110)
!14118 = !DILocation(line: 196, column: 2, scope: !14110)
!14119 = !DILocation(line: 196, column: 7, scope: !14110)
!14120 = !DILocation(line: 196, column: 11, scope: !14110)
!14121 = !DILocation(line: 196, column: 21, scope: !14110)
!14122 = !DILocation(line: 197, column: 1, scope: !14110)
!14123 = distinct !DISubprogram(name: "blk_mq_unique_tag_to_hwq", scope: !176, file: !176, line: 467, type: !14124, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14124 = !DISubroutineType(types: !14125)
!14125 = !{!899, !402}
!14126 = !DILocalVariable(name: "unique_tag", arg: 1, scope: !14123, file: !176, line: 467, type: !402)
!14127 = !DILocation(line: 467, column: 48, scope: !14123)
!14128 = !DILocation(line: 469, column: 9, scope: !14123)
!14129 = !DILocation(line: 469, column: 20, scope: !14123)
!14130 = !DILocation(line: 469, column: 2, scope: !14123)
!14131 = distinct !DISubprogram(name: "blk_mq_unique_tag_to_tag", scope: !176, file: !176, line: 472, type: !14124, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14132 = !DILocalVariable(name: "unique_tag", arg: 1, scope: !14131, file: !176, line: 472, type: !402)
!14133 = !DILocation(line: 472, column: 48, scope: !14131)
!14134 = !DILocation(line: 474, column: 9, scope: !14131)
!14135 = !DILocation(line: 474, column: 20, scope: !14131)
!14136 = !DILocation(line: 474, column: 2, scope: !14131)
!14137 = distinct !DISubprogram(name: "blk_mq_request_started", scope: !176, file: !176, line: 486, type: !14138, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14138 = !DISubroutineType(types: !14139)
!14139 = !{!245, !2260}
!14140 = !DILocalVariable(name: "rq", arg: 1, scope: !14137, file: !176, line: 486, type: !2260)
!14141 = !DILocation(line: 486, column: 58, scope: !14137)
!14142 = !DILocation(line: 488, column: 25, scope: !14137)
!14143 = !DILocation(line: 488, column: 9, scope: !14137)
!14144 = !DILocation(line: 488, column: 29, scope: !14137)
!14145 = !DILocation(line: 488, column: 2, scope: !14137)
!14146 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !176, file: !176, line: 567, type: !14147, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!334, !2260}
!14149 = !DILocalVariable(name: "rq", arg: 1, scope: !14146, file: !176, line: 567, type: !2260)
!14150 = !DILocation(line: 567, column: 54, scope: !14146)
!14151 = !DILocation(line: 569, column: 9, scope: !14146)
!14152 = !DILocation(line: 569, column: 12, scope: !14146)
!14153 = !DILocation(line: 569, column: 2, scope: !14146)
!14154 = distinct !DISubprogram(name: "blk_mq_rq_state", scope: !176, file: !176, line: 481, type: !14155, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!42, !2260}
!14157 = !DILocalVariable(name: "rq", arg: 1, scope: !14154, file: !176, line: 481, type: !2260)
!14158 = !DILocation(line: 481, column: 64, scope: !14154)
!14159 = !DILocation(line: 483, column: 9, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14154, file: !176, line: 483, column: 9)
!14161 = !DILocation(line: 483, column: 9, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14160, file: !176, line: 483, column: 9)
!14163 = !DILocation(line: 483, column: 2, scope: !14154)
!14164 = distinct !DISubprogram(name: "advansys_narrow_slave_configure", scope: !3, file: !3, line: 7308, type: !14165, scopeLine: 7309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{null, !4823, !6375}
!14167 = !DILocalVariable(name: "sdev", arg: 1, scope: !14164, file: !3, line: 7308, type: !4823)
!14168 = !DILocation(line: 7308, column: 53, scope: !14164)
!14169 = !DILocalVariable(name: "asc_dvc", arg: 2, scope: !14164, file: !3, line: 7308, type: !6375)
!14170 = !DILocation(line: 7308, column: 72, scope: !14164)
!14171 = !DILocalVariable(name: "tid_bit", scope: !14164, file: !3, line: 7310, type: !5245)
!14172 = !DILocation(line: 7310, column: 23, scope: !14164)
!14173 = !DILocation(line: 7310, column: 38, scope: !14164)
!14174 = !DILocation(line: 7310, column: 44, scope: !14164)
!14175 = !DILocation(line: 7310, column: 35, scope: !14164)
!14176 = !DILocation(line: 7310, column: 33, scope: !14164)
!14177 = !DILocalVariable(name: "orig_use_tagged_qng", scope: !14164, file: !3, line: 7311, type: !5245)
!14178 = !DILocation(line: 7311, column: 23, scope: !14164)
!14179 = !DILocation(line: 7311, column: 45, scope: !14164)
!14180 = !DILocation(line: 7311, column: 54, scope: !14164)
!14181 = !DILocation(line: 7313, column: 6, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 7313, column: 6)
!14183 = !DILocation(line: 7313, column: 12, scope: !14182)
!14184 = !DILocation(line: 7313, column: 16, scope: !14182)
!14185 = !DILocation(line: 7313, column: 6, scope: !14164)
!14186 = !DILocalVariable(name: "orig_init_sdtr", scope: !14187, file: !3, line: 7314, type: !5245)
!14187 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 7313, column: 22)
!14188 = !DILocation(line: 7314, column: 24, scope: !14187)
!14189 = !DILocation(line: 7314, column: 41, scope: !14187)
!14190 = !DILocation(line: 7314, column: 50, scope: !14187)
!14191 = !DILocation(line: 7315, column: 8, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 7315, column: 7)
!14193 = !DILocation(line: 7315, column: 17, scope: !14192)
!14194 = !DILocation(line: 7315, column: 22, scope: !14192)
!14195 = !DILocation(line: 7315, column: 36, scope: !14192)
!14196 = !DILocation(line: 7315, column: 34, scope: !14192)
!14197 = !DILocation(line: 7315, column: 45, scope: !14192)
!14198 = !DILocation(line: 7315, column: 48, scope: !14192)
!14199 = !DILocation(line: 7315, column: 54, scope: !14192)
!14200 = !DILocation(line: 7315, column: 7, scope: !14187)
!14201 = !DILocation(line: 7316, column: 26, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 7315, column: 60)
!14203 = !DILocation(line: 7316, column: 4, scope: !14202)
!14204 = !DILocation(line: 7316, column: 13, scope: !14202)
!14205 = !DILocation(line: 7316, column: 23, scope: !14202)
!14206 = !DILocation(line: 7317, column: 3, scope: !14202)
!14207 = !DILocation(line: 7318, column: 27, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 7317, column: 10)
!14209 = !DILocation(line: 7318, column: 26, scope: !14208)
!14210 = !DILocation(line: 7318, column: 4, scope: !14208)
!14211 = !DILocation(line: 7318, column: 13, scope: !14208)
!14212 = !DILocation(line: 7318, column: 23, scope: !14208)
!14213 = !DILocation(line: 7321, column: 7, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 7321, column: 7)
!14215 = !DILocation(line: 7321, column: 25, scope: !14214)
!14216 = !DILocation(line: 7321, column: 34, scope: !14214)
!14217 = !DILocation(line: 7321, column: 22, scope: !14214)
!14218 = !DILocation(line: 7321, column: 7, scope: !14187)
!14219 = !DILocation(line: 7322, column: 16, scope: !14214)
!14220 = !DILocation(line: 7322, column: 25, scope: !14214)
!14221 = !DILocation(line: 7322, column: 4, scope: !14214)
!14222 = !DILocation(line: 7323, column: 2, scope: !14187)
!14223 = !DILocation(line: 7325, column: 6, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 7325, column: 6)
!14225 = !DILocation(line: 7325, column: 12, scope: !14224)
!14226 = !DILocation(line: 7325, column: 6, scope: !14164)
!14227 = !DILocation(line: 7326, column: 7, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14229, file: !3, line: 7326, column: 7)
!14229 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 7325, column: 30)
!14230 = !DILocation(line: 7326, column: 16, scope: !14228)
!14231 = !DILocation(line: 7326, column: 21, scope: !14228)
!14232 = !DILocation(line: 7326, column: 39, scope: !14228)
!14233 = !DILocation(line: 7326, column: 37, scope: !14228)
!14234 = !DILocation(line: 7326, column: 7, scope: !14229)
!14235 = !DILocation(line: 7327, column: 8, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 7327, column: 8)
!14237 = distinct !DILexicalBlock(scope: !14228, file: !3, line: 7326, column: 48)
!14238 = !DILocation(line: 7327, column: 14, scope: !14236)
!14239 = !DILocation(line: 7327, column: 18, scope: !14236)
!14240 = !DILocation(line: 7327, column: 8, scope: !14237)
!14241 = !DILocation(line: 7328, column: 37, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14236, file: !3, line: 7327, column: 24)
!14243 = !DILocation(line: 7328, column: 5, scope: !14242)
!14244 = !DILocation(line: 7328, column: 14, scope: !14242)
!14245 = !DILocation(line: 7328, column: 19, scope: !14242)
!14246 = !DILocation(line: 7328, column: 34, scope: !14242)
!14247 = !DILocation(line: 7329, column: 32, scope: !14242)
!14248 = !DILocation(line: 7329, column: 5, scope: !14242)
!14249 = !DILocation(line: 7329, column: 14, scope: !14242)
!14250 = !DILocation(line: 7329, column: 29, scope: !14242)
!14251 = !DILocation(line: 7330, column: 4, scope: !14242)
!14252 = !DILocation(line: 7331, column: 28, scope: !14237)
!14253 = !DILocation(line: 7332, column: 7, scope: !14237)
!14254 = !DILocation(line: 7332, column: 16, scope: !14237)
!14255 = !DILocation(line: 7332, column: 28, scope: !14237)
!14256 = !DILocation(line: 7332, column: 34, scope: !14237)
!14257 = !DILocation(line: 7331, column: 4, scope: !14237)
!14258 = !DILocation(line: 7333, column: 3, scope: !14237)
!14259 = !DILocation(line: 7334, column: 2, scope: !14229)
!14260 = !DILocation(line: 7335, column: 7, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14262, file: !3, line: 7335, column: 7)
!14262 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 7334, column: 9)
!14263 = !DILocation(line: 7335, column: 13, scope: !14261)
!14264 = !DILocation(line: 7335, column: 17, scope: !14261)
!14265 = !DILocation(line: 7335, column: 7, scope: !14262)
!14266 = !DILocation(line: 7336, column: 37, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14261, file: !3, line: 7335, column: 23)
!14268 = !DILocation(line: 7336, column: 36, scope: !14267)
!14269 = !DILocation(line: 7336, column: 4, scope: !14267)
!14270 = !DILocation(line: 7336, column: 13, scope: !14267)
!14271 = !DILocation(line: 7336, column: 18, scope: !14267)
!14272 = !DILocation(line: 7336, column: 33, scope: !14267)
!14273 = !DILocation(line: 7337, column: 32, scope: !14267)
!14274 = !DILocation(line: 7337, column: 31, scope: !14267)
!14275 = !DILocation(line: 7337, column: 4, scope: !14267)
!14276 = !DILocation(line: 7337, column: 13, scope: !14267)
!14277 = !DILocation(line: 7337, column: 28, scope: !14267)
!14278 = !DILocation(line: 7338, column: 3, scope: !14267)
!14279 = !DILocation(line: 7341, column: 7, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 7341, column: 6)
!14281 = !DILocation(line: 7341, column: 13, scope: !14280)
!14282 = !DILocation(line: 7341, column: 17, scope: !14280)
!14283 = !DILocation(line: 7341, column: 23, scope: !14280)
!14284 = !DILocation(line: 7342, column: 7, scope: !14280)
!14285 = !DILocation(line: 7342, column: 30, scope: !14280)
!14286 = !DILocation(line: 7342, column: 39, scope: !14280)
!14287 = !DILocation(line: 7342, column: 27, scope: !14280)
!14288 = !DILocation(line: 7341, column: 6, scope: !14164)
!14289 = !DILocation(line: 7343, column: 20, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 7342, column: 56)
!14291 = !DILocation(line: 7343, column: 29, scope: !14290)
!14292 = !DILocation(line: 7344, column: 6, scope: !14290)
!14293 = !DILocation(line: 7344, column: 15, scope: !14290)
!14294 = !DILocation(line: 7344, column: 20, scope: !14290)
!14295 = !DILocation(line: 7343, column: 3, scope: !14290)
!14296 = !DILocation(line: 7345, column: 20, scope: !14290)
!14297 = !DILocation(line: 7345, column: 29, scope: !14290)
!14298 = !DILocation(line: 7346, column: 6, scope: !14290)
!14299 = !DILocation(line: 7346, column: 15, scope: !14290)
!14300 = !DILocation(line: 7345, column: 3, scope: !14290)
!14301 = !DILocation(line: 7347, column: 20, scope: !14290)
!14302 = !DILocation(line: 7347, column: 29, scope: !14290)
!14303 = !DILocation(line: 7348, column: 6, scope: !14290)
!14304 = !DILocation(line: 7348, column: 15, scope: !14290)
!14305 = !DILocation(line: 7348, column: 20, scope: !14290)
!14306 = !DILocation(line: 7347, column: 3, scope: !14290)
!14307 = !DILocation(line: 7351, column: 6, scope: !14290)
!14308 = !DILocation(line: 7351, column: 15, scope: !14290)
!14309 = !DILocation(line: 7351, column: 20, scope: !14290)
!14310 = !DILocation(line: 7351, column: 32, scope: !14290)
!14311 = !DILocation(line: 7351, column: 38, scope: !14290)
!14312 = !DILocation(line: 7350, column: 3, scope: !14290)
!14313 = !DILocation(line: 7350, column: 12, scope: !14290)
!14314 = !DILocation(line: 7350, column: 24, scope: !14290)
!14315 = !DILocation(line: 7350, column: 30, scope: !14290)
!14316 = !DILocation(line: 7350, column: 34, scope: !14290)
!14317 = !DILocation(line: 7352, column: 20, scope: !14290)
!14318 = !DILocation(line: 7352, column: 29, scope: !14290)
!14319 = !DILocation(line: 7353, column: 38, scope: !14290)
!14320 = !DILocation(line: 7353, column: 44, scope: !14290)
!14321 = !DILocation(line: 7353, column: 36, scope: !14290)
!14322 = !DILocation(line: 7353, column: 6, scope: !14290)
!14323 = !DILocation(line: 7354, column: 6, scope: !14290)
!14324 = !DILocation(line: 7354, column: 15, scope: !14290)
!14325 = !DILocation(line: 7354, column: 27, scope: !14290)
!14326 = !DILocation(line: 7354, column: 33, scope: !14290)
!14327 = !DILocation(line: 7352, column: 3, scope: !14290)
!14328 = !DILocation(line: 7355, column: 2, scope: !14290)
!14329 = !DILocation(line: 7356, column: 1, scope: !14164)
!14330 = distinct !DISubprogram(name: "advansys_wide_slave_configure", scope: !3, file: !3, line: 7434, type: !14331, scopeLine: 7435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{null, !4823, !6378}
!14333 = !DILocalVariable(name: "sdev", arg: 1, scope: !14330, file: !3, line: 7434, type: !4823)
!14334 = !DILocation(line: 7434, column: 51, scope: !14330)
!14335 = !DILocalVariable(name: "adv_dvc", arg: 2, scope: !14330, file: !3, line: 7434, type: !6378)
!14336 = !DILocation(line: 7434, column: 70, scope: !14330)
!14337 = !DILocalVariable(name: "iop_base", scope: !14330, file: !3, line: 7436, type: !334)
!14338 = !DILocation(line: 7436, column: 14, scope: !14330)
!14339 = !DILocation(line: 7436, column: 25, scope: !14330)
!14340 = !DILocation(line: 7436, column: 34, scope: !14330)
!14341 = !DILocalVariable(name: "tidmask", scope: !14330, file: !3, line: 7437, type: !303)
!14342 = !DILocation(line: 7437, column: 17, scope: !14330)
!14343 = !DILocation(line: 7437, column: 32, scope: !14330)
!14344 = !DILocation(line: 7437, column: 38, scope: !14330)
!14345 = !DILocation(line: 7437, column: 29, scope: !14330)
!14346 = !DILocation(line: 7437, column: 27, scope: !14330)
!14347 = !DILocation(line: 7439, column: 6, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 7439, column: 6)
!14349 = !DILocation(line: 7439, column: 12, scope: !14348)
!14350 = !DILocation(line: 7439, column: 16, scope: !14348)
!14351 = !DILocation(line: 7439, column: 6, scope: !14330)
!14352 = !DILocation(line: 7446, column: 8, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 7446, column: 7)
!14354 = distinct !DILexicalBlock(scope: !14348, file: !3, line: 7439, column: 22)
!14355 = !DILocation(line: 7446, column: 17, scope: !14353)
!14356 = !DILocation(line: 7446, column: 29, scope: !14353)
!14357 = !DILocation(line: 7446, column: 27, scope: !14353)
!14358 = !DILocation(line: 7446, column: 38, scope: !14353)
!14359 = !DILocation(line: 7446, column: 41, scope: !14353)
!14360 = !DILocation(line: 7446, column: 47, scope: !14353)
!14361 = !DILocation(line: 7446, column: 7, scope: !14354)
!14362 = !DILocation(line: 7447, column: 30, scope: !14353)
!14363 = !DILocation(line: 7447, column: 40, scope: !14353)
!14364 = !DILocation(line: 7447, column: 4, scope: !14353)
!14365 = !DILocation(line: 7448, column: 8, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 7448, column: 7)
!14367 = !DILocation(line: 7448, column: 17, scope: !14366)
!14368 = !DILocation(line: 7448, column: 29, scope: !14366)
!14369 = !DILocation(line: 7448, column: 27, scope: !14366)
!14370 = !DILocation(line: 7448, column: 38, scope: !14366)
!14371 = !DILocation(line: 7448, column: 41, scope: !14366)
!14372 = !DILocation(line: 7448, column: 47, scope: !14366)
!14373 = !DILocation(line: 7448, column: 7, scope: !14354)
!14374 = !DILocation(line: 7449, column: 30, scope: !14366)
!14375 = !DILocation(line: 7449, column: 40, scope: !14366)
!14376 = !DILocation(line: 7449, column: 4, scope: !14366)
!14377 = !DILocation(line: 7450, column: 7, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 7450, column: 7)
!14379 = !DILocation(line: 7450, column: 16, scope: !14378)
!14380 = !DILocation(line: 7450, column: 26, scope: !14378)
!14381 = !DILocation(line: 7450, column: 49, scope: !14378)
!14382 = !DILocation(line: 7450, column: 52, scope: !14378)
!14383 = !DILocation(line: 7450, column: 58, scope: !14378)
!14384 = !DILocation(line: 7450, column: 7, scope: !14354)
!14385 = !DILocation(line: 7451, column: 29, scope: !14378)
!14386 = !DILocation(line: 7451, column: 38, scope: !14378)
!14387 = !DILocation(line: 7451, column: 48, scope: !14378)
!14388 = !DILocation(line: 7451, column: 4, scope: !14378)
!14389 = !DILocation(line: 7459, column: 8, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 7459, column: 7)
!14391 = !DILocation(line: 7459, column: 17, scope: !14390)
!14392 = !DILocation(line: 7459, column: 31, scope: !14390)
!14393 = !DILocation(line: 7459, column: 29, scope: !14390)
!14394 = !DILocation(line: 7459, column: 40, scope: !14390)
!14395 = !DILocation(line: 7460, column: 7, scope: !14390)
!14396 = !DILocation(line: 7460, column: 13, scope: !14390)
!14397 = !DILocation(line: 7459, column: 7, scope: !14354)
!14398 = !DILocalVariable(name: "cfg_word", scope: !14399, file: !3, line: 7461, type: !303)
!14399 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 7460, column: 31)
!14400 = !DILocation(line: 7461, column: 19, scope: !14399)
!14401 = !DILocation(line: 7462, column: 4, scope: !14399)
!14402 = !DILocation(line: 7462, column: 4, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14399, file: !3, line: 7462, column: 4)
!14404 = !DILocation(line: 7463, column: 16, scope: !14399)
!14405 = !DILocation(line: 7463, column: 13, scope: !14399)
!14406 = !DILocation(line: 7464, column: 4, scope: !14399)
!14407 = !DILocation(line: 7466, column: 4, scope: !14399)
!14408 = !DILocation(line: 7469, column: 3, scope: !14399)
!14409 = !DILocation(line: 7470, column: 2, scope: !14354)
!14410 = !DILocation(line: 7472, column: 7, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 7472, column: 6)
!14412 = !DILocation(line: 7472, column: 16, scope: !14411)
!14413 = !DILocation(line: 7472, column: 30, scope: !14411)
!14414 = !DILocation(line: 7472, column: 28, scope: !14411)
!14415 = !DILocation(line: 7472, column: 39, scope: !14411)
!14416 = !DILocation(line: 7472, column: 42, scope: !14411)
!14417 = !DILocation(line: 7472, column: 48, scope: !14411)
!14418 = !DILocation(line: 7472, column: 6, scope: !14330)
!14419 = !DILocation(line: 7473, column: 27, scope: !14411)
!14420 = !DILocation(line: 7473, column: 33, scope: !14411)
!14421 = !DILocation(line: 7473, column: 42, scope: !14411)
!14422 = !DILocation(line: 7473, column: 3, scope: !14411)
!14423 = !DILocation(line: 7474, column: 1, scope: !14330)
!14424 = distinct !DISubprogram(name: "AscAsyncFix", scope: !3, file: !3, line: 7284, type: !14425, scopeLine: 7285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{null, !6375, !4823}
!14427 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !14424, file: !3, line: 7284, type: !6375)
!14428 = !DILocation(line: 7284, column: 38, scope: !14424)
!14429 = !DILocalVariable(name: "sdev", arg: 2, scope: !14424, file: !3, line: 7284, type: !4823)
!14430 = !DILocation(line: 7284, column: 67, scope: !14424)
!14431 = !DILocalVariable(name: "type", scope: !14424, file: !3, line: 7286, type: !204)
!14432 = !DILocation(line: 7286, column: 7, scope: !14424)
!14433 = !DILocation(line: 7286, column: 14, scope: !14424)
!14434 = !DILocation(line: 7286, column: 20, scope: !14424)
!14435 = !DILocalVariable(name: "tid_bits", scope: !14424, file: !3, line: 7287, type: !5245)
!14436 = !DILocation(line: 7287, column: 23, scope: !14424)
!14437 = !DILocation(line: 7287, column: 39, scope: !14424)
!14438 = !DILocation(line: 7287, column: 45, scope: !14424)
!14439 = !DILocation(line: 7287, column: 36, scope: !14424)
!14440 = !DILocation(line: 7287, column: 34, scope: !14424)
!14441 = !DILocation(line: 7289, column: 8, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 7289, column: 6)
!14443 = !DILocation(line: 7289, column: 17, scope: !14442)
!14444 = !DILocation(line: 7289, column: 30, scope: !14442)
!14445 = !DILocation(line: 7289, column: 6, scope: !14424)
!14446 = !DILocation(line: 7290, column: 3, scope: !14442)
!14447 = !DILocation(line: 7291, column: 6, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 7291, column: 6)
!14449 = !DILocation(line: 7291, column: 15, scope: !14448)
!14450 = !DILocation(line: 7291, column: 27, scope: !14448)
!14451 = !DILocation(line: 7291, column: 25, scope: !14448)
!14452 = !DILocation(line: 7291, column: 6, scope: !14424)
!14453 = !DILocation(line: 7292, column: 3, scope: !14448)
!14454 = !DILocation(line: 7294, column: 7, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 7294, column: 6)
!14456 = !DILocation(line: 7294, column: 12, scope: !14455)
!14457 = !DILocation(line: 7294, column: 25, scope: !14455)
!14458 = !DILocation(line: 7294, column: 37, scope: !14455)
!14459 = !DILocation(line: 7294, column: 43, scope: !14455)
!14460 = !DILocation(line: 7294, column: 29, scope: !14455)
!14461 = !DILocation(line: 7294, column: 61, scope: !14455)
!14462 = !DILocation(line: 7294, column: 6, scope: !14424)
!14463 = !DILocation(line: 7295, column: 40, scope: !14455)
!14464 = !DILocation(line: 7295, column: 3, scope: !14455)
!14465 = !DILocation(line: 7295, column: 12, scope: !14455)
!14466 = !DILocation(line: 7295, column: 37, scope: !14455)
!14467 = !DILocation(line: 7297, column: 32, scope: !14424)
!14468 = !DILocation(line: 7297, column: 2, scope: !14424)
!14469 = !DILocation(line: 7297, column: 11, scope: !14424)
!14470 = !DILocation(line: 7297, column: 29, scope: !14424)
!14471 = !DILocation(line: 7298, column: 7, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 7298, column: 6)
!14473 = !DILocation(line: 7298, column: 12, scope: !14472)
!14474 = !DILocation(line: 7298, column: 31, scope: !14472)
!14475 = !DILocation(line: 7298, column: 35, scope: !14472)
!14476 = !DILocation(line: 7298, column: 40, scope: !14472)
!14477 = !DILocation(line: 7298, column: 57, scope: !14472)
!14478 = !DILocation(line: 7299, column: 7, scope: !14472)
!14479 = !DILocation(line: 7299, column: 12, scope: !14472)
!14480 = !DILocation(line: 7299, column: 25, scope: !14472)
!14481 = !DILocation(line: 7299, column: 29, scope: !14472)
!14482 = !DILocation(line: 7299, column: 34, scope: !14472)
!14483 = !DILocation(line: 7298, column: 6, scope: !14424)
!14484 = !DILocation(line: 7300, column: 34, scope: !14472)
!14485 = !DILocation(line: 7300, column: 33, scope: !14472)
!14486 = !DILocation(line: 7300, column: 3, scope: !14472)
!14487 = !DILocation(line: 7300, column: 12, scope: !14472)
!14488 = !DILocation(line: 7300, column: 30, scope: !14472)
!14489 = !DILocation(line: 7302, column: 6, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 7302, column: 6)
!14491 = !DILocation(line: 7302, column: 15, scope: !14490)
!14492 = !DILocation(line: 7302, column: 35, scope: !14490)
!14493 = !DILocation(line: 7302, column: 33, scope: !14490)
!14494 = !DILocation(line: 7302, column: 6, scope: !14424)
!14495 = !DILocation(line: 7303, column: 27, scope: !14490)
!14496 = !DILocation(line: 7303, column: 36, scope: !14490)
!14497 = !DILocation(line: 7303, column: 46, scope: !14490)
!14498 = !DILocation(line: 7303, column: 52, scope: !14490)
!14499 = !DILocation(line: 7303, column: 3, scope: !14490)
!14500 = !DILocation(line: 7305, column: 1, scope: !14424)
!14501 = distinct !DISubprogram(name: "AscSetRunChipSynRegAtID", scope: !3, file: !3, line: 7273, type: !14502, scopeLine: 7274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14502 = !DISubroutineType(types: !14503)
!14503 = !{!477, !7, !5245, !5245}
!14504 = !DILocalVariable(name: "iop_base", arg: 1, scope: !14501, file: !3, line: 7273, type: !7)
!14505 = !DILocation(line: 7273, column: 34, scope: !14501)
!14506 = !DILocalVariable(name: "tid_no", arg: 2, scope: !14501, file: !3, line: 7273, type: !5245)
!14507 = !DILocation(line: 7273, column: 50, scope: !14501)
!14508 = !DILocalVariable(name: "sdtr_data", arg: 3, scope: !14501, file: !3, line: 7273, type: !5245)
!14509 = !DILocation(line: 7273, column: 64, scope: !14501)
!14510 = !DILocalVariable(name: "sta", scope: !14501, file: !3, line: 7275, type: !477)
!14511 = !DILocation(line: 7275, column: 7, scope: !14501)
!14512 = !DILocation(line: 7277, column: 25, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14501, file: !3, line: 7277, column: 6)
!14514 = !DILocation(line: 7277, column: 6, scope: !14513)
!14515 = !DILocation(line: 7277, column: 6, scope: !14501)
!14516 = !DILocation(line: 7278, column: 30, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 7277, column: 36)
!14518 = !DILocation(line: 7278, column: 40, scope: !14517)
!14519 = !DILocation(line: 7278, column: 48, scope: !14517)
!14520 = !DILocation(line: 7278, column: 9, scope: !14517)
!14521 = !DILocation(line: 7278, column: 7, scope: !14517)
!14522 = !DILocation(line: 7279, column: 16, scope: !14517)
!14523 = !DILocation(line: 7279, column: 3, scope: !14517)
!14524 = !DILocation(line: 7280, column: 2, scope: !14517)
!14525 = !DILocation(line: 7281, column: 9, scope: !14501)
!14526 = !DILocation(line: 7281, column: 2, scope: !14501)
!14527 = distinct !DISubprogram(name: "AscHostReqRiscHalt", scope: !3, file: !3, line: 7250, type: !11628, scopeLine: 7251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14528 = !DILocalVariable(name: "iop_base", arg: 1, scope: !14527, file: !3, line: 7250, type: !7)
!14529 = !DILocation(line: 7250, column: 41, scope: !14527)
!14530 = !DILocalVariable(name: "count", scope: !14527, file: !3, line: 7252, type: !245)
!14531 = !DILocation(line: 7252, column: 6, scope: !14527)
!14532 = !DILocalVariable(name: "sta", scope: !14527, file: !3, line: 7253, type: !477)
!14533 = !DILocation(line: 7253, column: 7, scope: !14527)
!14534 = !DILocalVariable(name: "saved_stop_code", scope: !14527, file: !3, line: 7254, type: !5245)
!14535 = !DILocation(line: 7254, column: 8, scope: !14527)
!14536 = !DILocation(line: 7256, column: 22, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14527, file: !3, line: 7256, column: 6)
!14538 = !DILocation(line: 7256, column: 6, scope: !14537)
!14539 = !DILocation(line: 7256, column: 6, scope: !14527)
!14540 = !DILocation(line: 7257, column: 3, scope: !14537)
!14541 = !DILocation(line: 7258, column: 36, scope: !14527)
!14542 = !DILocation(line: 7258, column: 20, scope: !14527)
!14543 = !DILocation(line: 7258, column: 18, scope: !14527)
!14544 = !DILocation(line: 7259, column: 19, scope: !14527)
!14545 = !DILocation(line: 7259, column: 2, scope: !14527)
!14546 = !DILocation(line: 7261, column: 2, scope: !14527)
!14547 = !DILocation(line: 7262, column: 23, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !3, line: 7262, column: 7)
!14549 = distinct !DILexicalBlock(scope: !14527, file: !3, line: 7261, column: 5)
!14550 = !DILocation(line: 7262, column: 7, scope: !14548)
!14551 = !DILocation(line: 7262, column: 7, scope: !14549)
!14552 = !DILocation(line: 7263, column: 8, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14548, file: !3, line: 7262, column: 34)
!14554 = !DILocation(line: 7264, column: 4, scope: !14553)
!14555 = !DILocalVariable(name: "__ms", scope: !14556, file: !3, line: 7266, type: !189)
!14556 = distinct !DILexicalBlock(scope: !14549, file: !3, line: 7266, column: 3)
!14557 = !DILocation(line: 7266, column: 3, scope: !14556)
!14558 = !DILocation(line: 7266, column: 3, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !3, line: 7266, column: 3)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 7266, column: 3)
!14561 = distinct !DILexicalBlock(scope: !14562, file: !3, line: 7266, column: 3)
!14562 = distinct !DILexicalBlock(scope: !14556, file: !3, line: 7266, column: 3)
!14563 = distinct !{!14563, !14557, !14557}
!14564 = !DILocation(line: 7267, column: 2, scope: !14549)
!14565 = !DILocation(line: 7267, column: 16, scope: !14527)
!14566 = !DILocation(line: 7267, column: 19, scope: !14527)
!14567 = distinct !{!14567, !14546, !14568}
!14568 = !DILocation(line: 7267, column: 23, scope: !14527)
!14569 = !DILocation(line: 7268, column: 19, scope: !14527)
!14570 = !DILocation(line: 7268, column: 47, scope: !14527)
!14571 = !DILocation(line: 7268, column: 2, scope: !14527)
!14572 = !DILocation(line: 7269, column: 9, scope: !14527)
!14573 = !DILocation(line: 7269, column: 2, scope: !14527)
!14574 = !DILocation(line: 7270, column: 1, scope: !14527)
!14575 = distinct !DISubprogram(name: "AscSetChipSynRegAtID", scope: !3, file: !3, line: 6326, type: !14502, scopeLine: 6327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14576 = !DILocalVariable(name: "iop_base", arg: 1, scope: !14575, file: !3, line: 6326, type: !7)
!14577 = !DILocation(line: 6326, column: 43, scope: !14575)
!14578 = !DILocalVariable(name: "id", arg: 2, scope: !14575, file: !3, line: 6326, type: !5245)
!14579 = !DILocation(line: 6326, column: 59, scope: !14575)
!14580 = !DILocalVariable(name: "sdtr_data", arg: 3, scope: !14575, file: !3, line: 6326, type: !5245)
!14581 = !DILocation(line: 6326, column: 69, scope: !14575)
!14582 = !DILocalVariable(name: "org_id", scope: !14575, file: !3, line: 6328, type: !5245)
!14583 = !DILocation(line: 6328, column: 23, scope: !14575)
!14584 = !DILocalVariable(name: "i", scope: !14575, file: !3, line: 6329, type: !245)
!14585 = !DILocation(line: 6329, column: 6, scope: !14575)
!14586 = !DILocalVariable(name: "sta", scope: !14575, file: !3, line: 6330, type: !477)
!14587 = !DILocation(line: 6330, column: 7, scope: !14575)
!14588 = !DILocation(line: 6332, column: 13, scope: !14575)
!14589 = !DILocation(line: 6332, column: 2, scope: !14575)
!14590 = !DILocation(line: 6333, column: 11, scope: !14575)
!14591 = !DILocation(line: 6333, column: 9, scope: !14575)
!14592 = !DILocation(line: 6334, column: 9, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 6334, column: 2)
!14594 = !DILocation(line: 6334, column: 7, scope: !14593)
!14595 = !DILocation(line: 6334, column: 14, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14593, file: !3, line: 6334, column: 2)
!14597 = !DILocation(line: 6334, column: 16, scope: !14596)
!14598 = !DILocation(line: 6334, column: 2, scope: !14593)
!14599 = !DILocation(line: 6335, column: 7, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14601, file: !3, line: 6335, column: 7)
!14601 = distinct !DILexicalBlock(scope: !14596, file: !3, line: 6334, column: 37)
!14602 = !DILocation(line: 6335, column: 26, scope: !14600)
!14603 = !DILocation(line: 6335, column: 23, scope: !14600)
!14604 = !DILocation(line: 6335, column: 14, scope: !14600)
!14605 = !DILocation(line: 6335, column: 7, scope: !14601)
!14606 = !DILocation(line: 6336, column: 4, scope: !14600)
!14607 = !DILocation(line: 6337, column: 2, scope: !14601)
!14608 = !DILocation(line: 6334, column: 33, scope: !14596)
!14609 = !DILocation(line: 6334, column: 2, scope: !14596)
!14610 = distinct !{!14610, !14598, !14611}
!14611 = !DILocation(line: 6337, column: 2, scope: !14593)
!14612 = !DILocation(line: 6338, column: 34, scope: !14575)
!14613 = !DILocation(line: 6338, column: 11, scope: !14575)
!14614 = !DILocation(line: 6338, column: 9, scope: !14575)
!14615 = !DILocation(line: 6339, column: 2, scope: !14575)
!14616 = !DILocation(line: 6340, column: 6, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 6340, column: 6)
!14618 = !DILocation(line: 6340, column: 45, scope: !14617)
!14619 = !DILocation(line: 6340, column: 42, scope: !14617)
!14620 = !DILocation(line: 6340, column: 33, scope: !14617)
!14621 = !DILocation(line: 6340, column: 6, scope: !14575)
!14622 = !DILocation(line: 6341, column: 14, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 6340, column: 50)
!14624 = !DILocation(line: 6341, column: 3, scope: !14623)
!14625 = !DILocation(line: 6342, column: 3, scope: !14623)
!14626 = !DILocation(line: 6343, column: 7, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 6343, column: 7)
!14628 = !DILocation(line: 6343, column: 34, scope: !14627)
!14629 = !DILocation(line: 6343, column: 31, scope: !14627)
!14630 = !DILocation(line: 6343, column: 7, scope: !14623)
!14631 = !DILocation(line: 6344, column: 8, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 6343, column: 45)
!14633 = !DILocation(line: 6345, column: 3, scope: !14632)
!14634 = !DILocation(line: 6346, column: 2, scope: !14623)
!14635 = !DILocation(line: 6347, column: 7, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 6346, column: 9)
!14637 = !DILocation(line: 6349, column: 13, scope: !14575)
!14638 = !DILocation(line: 6349, column: 2, scope: !14575)
!14639 = !DILocation(line: 6350, column: 2, scope: !14575)
!14640 = !DILocation(line: 6351, column: 13, scope: !14575)
!14641 = !DILocation(line: 6351, column: 2, scope: !14575)
!14642 = !DILocation(line: 6352, column: 10, scope: !14575)
!14643 = !DILocation(line: 6352, column: 2, scope: !14575)
!14644 = distinct !DISubprogram(name: "advansys_wide_enable_wdtr", scope: !3, file: !3, line: 7366, type: !14645, scopeLine: 7367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14645 = !DISubroutineType(types: !14646)
!14646 = !{null, !334, !303}
!14647 = !DILocalVariable(name: "iop_base", arg: 1, scope: !14644, file: !3, line: 7366, type: !334)
!14648 = !DILocation(line: 7366, column: 39, scope: !14644)
!14649 = !DILocalVariable(name: "tidmask", arg: 2, scope: !14644, file: !3, line: 7366, type: !303)
!14650 = !DILocation(line: 7366, column: 64, scope: !14644)
!14651 = !DILocalVariable(name: "cfg_word", scope: !14644, file: !3, line: 7368, type: !303)
!14652 = !DILocation(line: 7368, column: 17, scope: !14644)
!14653 = !DILocation(line: 7369, column: 2, scope: !14644)
!14654 = !DILocation(line: 7369, column: 2, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 7369, column: 2)
!14656 = !DILocation(line: 7370, column: 7, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 7370, column: 6)
!14658 = !DILocation(line: 7370, column: 18, scope: !14657)
!14659 = !DILocation(line: 7370, column: 16, scope: !14657)
!14660 = !DILocation(line: 7370, column: 27, scope: !14657)
!14661 = !DILocation(line: 7370, column: 6, scope: !14644)
!14662 = !DILocation(line: 7371, column: 3, scope: !14657)
!14663 = !DILocation(line: 7373, column: 14, scope: !14644)
!14664 = !DILocation(line: 7373, column: 11, scope: !14644)
!14665 = !DILocation(line: 7374, column: 2, scope: !14644)
!14666 = !DILocation(line: 7382, column: 2, scope: !14644)
!14667 = !DILocation(line: 7382, column: 2, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 7382, column: 2)
!14669 = !DILocation(line: 7383, column: 15, scope: !14644)
!14670 = !DILocation(line: 7383, column: 14, scope: !14644)
!14671 = !DILocation(line: 7383, column: 11, scope: !14644)
!14672 = !DILocation(line: 7384, column: 2, scope: !14644)
!14673 = !DILocation(line: 7385, column: 2, scope: !14644)
!14674 = !DILocation(line: 7385, column: 2, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 7385, column: 2)
!14676 = !DILocation(line: 7386, column: 15, scope: !14644)
!14677 = !DILocation(line: 7386, column: 14, scope: !14644)
!14678 = !DILocation(line: 7386, column: 11, scope: !14644)
!14679 = !DILocation(line: 7387, column: 2, scope: !14644)
!14680 = !DILocation(line: 7388, column: 1, scope: !14644)
!14681 = distinct !DISubprogram(name: "advansys_wide_enable_sdtr", scope: !3, file: !3, line: 7398, type: !14645, scopeLine: 7399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14682 = !DILocalVariable(name: "iop_base", arg: 1, scope: !14681, file: !3, line: 7398, type: !334)
!14683 = !DILocation(line: 7398, column: 39, scope: !14681)
!14684 = !DILocalVariable(name: "tidmask", arg: 2, scope: !14681, file: !3, line: 7398, type: !303)
!14685 = !DILocation(line: 7398, column: 64, scope: !14681)
!14686 = !DILocalVariable(name: "cfg_word", scope: !14681, file: !3, line: 7400, type: !303)
!14687 = !DILocation(line: 7400, column: 17, scope: !14681)
!14688 = !DILocation(line: 7401, column: 2, scope: !14681)
!14689 = !DILocation(line: 7401, column: 2, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 7401, column: 2)
!14691 = !DILocation(line: 7402, column: 7, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 7402, column: 6)
!14693 = !DILocation(line: 7402, column: 18, scope: !14692)
!14694 = !DILocation(line: 7402, column: 16, scope: !14692)
!14695 = !DILocation(line: 7402, column: 27, scope: !14692)
!14696 = !DILocation(line: 7402, column: 6, scope: !14681)
!14697 = !DILocation(line: 7403, column: 3, scope: !14692)
!14698 = !DILocation(line: 7405, column: 14, scope: !14681)
!14699 = !DILocation(line: 7405, column: 11, scope: !14681)
!14700 = !DILocation(line: 7406, column: 2, scope: !14681)
!14701 = !DILocation(line: 7412, column: 2, scope: !14681)
!14702 = !DILocation(line: 7412, column: 2, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 7412, column: 2)
!14704 = !DILocation(line: 7413, column: 15, scope: !14681)
!14705 = !DILocation(line: 7413, column: 14, scope: !14681)
!14706 = !DILocation(line: 7413, column: 11, scope: !14681)
!14707 = !DILocation(line: 7414, column: 2, scope: !14681)
!14708 = !DILocation(line: 7415, column: 1, scope: !14681)
!14709 = distinct !DISubprogram(name: "advansys_wide_enable_ppr", scope: !3, file: !3, line: 7425, type: !14710, scopeLine: 7427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14710 = !DISubroutineType(types: !14711)
!14711 = !{null, !6378, !334, !303}
!14712 = !DILocalVariable(name: "adv_dvc", arg: 1, scope: !14709, file: !3, line: 7425, type: !6378)
!14713 = !DILocation(line: 7425, column: 51, scope: !14709)
!14714 = !DILocalVariable(name: "iop_base", arg: 2, scope: !14709, file: !3, line: 7426, type: !334)
!14715 = !DILocation(line: 7426, column: 17, scope: !14709)
!14716 = !DILocalVariable(name: "tidmask", arg: 3, scope: !14709, file: !3, line: 7426, type: !303)
!14717 = !DILocation(line: 7426, column: 42, scope: !14709)
!14718 = !DILocation(line: 7428, column: 2, scope: !14709)
!14719 = !DILocation(line: 7428, column: 2, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14709, file: !3, line: 7428, column: 2)
!14721 = !DILocation(line: 7429, column: 23, scope: !14709)
!14722 = !DILocation(line: 7429, column: 2, scope: !14709)
!14723 = !DILocation(line: 7429, column: 11, scope: !14709)
!14724 = !DILocation(line: 7429, column: 20, scope: !14709)
!14725 = !DILocation(line: 7430, column: 2, scope: !14709)
!14726 = !DILocation(line: 7431, column: 1, scope: !14709)
!14727 = distinct !DISubprogram(name: "asc_prt_adv_bios", scope: !3, file: !3, line: 2737, type: !14728, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14728 = !DISubroutineType(types: !14729)
!14729 = !{null, !701, !4796}
!14730 = !DILocalVariable(name: "m", arg: 1, scope: !14727, file: !3, line: 2737, type: !701)
!14731 = !DILocation(line: 2737, column: 47, scope: !14727)
!14732 = !DILocalVariable(name: "shost", arg: 2, scope: !14727, file: !3, line: 2737, type: !4796)
!14733 = !DILocation(line: 2737, column: 68, scope: !14727)
!14734 = !DILocalVariable(name: "boardp", scope: !14727, file: !3, line: 2739, type: !190)
!14735 = !DILocation(line: 2739, column: 20, scope: !14727)
!14736 = !DILocation(line: 2739, column: 40, scope: !14727)
!14737 = !DILocation(line: 2739, column: 29, scope: !14727)
!14738 = !DILocalVariable(name: "major", scope: !14727, file: !3, line: 2740, type: !5240)
!14739 = !DILocation(line: 2740, column: 9, scope: !14727)
!14740 = !DILocalVariable(name: "minor", scope: !14727, file: !3, line: 2740, type: !5240)
!14741 = !DILocation(line: 2740, column: 16, scope: !14727)
!14742 = !DILocalVariable(name: "letter", scope: !14727, file: !3, line: 2740, type: !5240)
!14743 = !DILocation(line: 2740, column: 23, scope: !14727)
!14744 = !DILocation(line: 2742, column: 11, scope: !14727)
!14745 = !DILocation(line: 2742, column: 2, scope: !14727)
!14746 = !DILocation(line: 2748, column: 6, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14727, file: !3, line: 2748, column: 6)
!14748 = !DILocation(line: 2748, column: 14, scope: !14747)
!14749 = !DILocation(line: 2748, column: 29, scope: !14747)
!14750 = !DILocation(line: 2748, column: 6, scope: !14727)
!14751 = !DILocation(line: 2749, column: 12, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14747, file: !3, line: 2748, column: 40)
!14753 = !DILocation(line: 2749, column: 3, scope: !14752)
!14754 = !DILocation(line: 2752, column: 2, scope: !14752)
!14755 = !DILocation(line: 2753, column: 12, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14747, file: !3, line: 2752, column: 9)
!14757 = !DILocation(line: 2753, column: 20, scope: !14756)
!14758 = !DILocation(line: 2753, column: 33, scope: !14756)
!14759 = !DILocation(line: 2753, column: 40, scope: !14756)
!14760 = !DILocation(line: 2753, column: 11, scope: !14756)
!14761 = !DILocation(line: 2753, column: 9, scope: !14756)
!14762 = !DILocation(line: 2754, column: 12, scope: !14756)
!14763 = !DILocation(line: 2754, column: 20, scope: !14756)
!14764 = !DILocation(line: 2754, column: 33, scope: !14756)
!14765 = !DILocation(line: 2754, column: 39, scope: !14756)
!14766 = !DILocation(line: 2754, column: 11, scope: !14756)
!14767 = !DILocation(line: 2754, column: 9, scope: !14756)
!14768 = !DILocation(line: 2755, column: 13, scope: !14756)
!14769 = !DILocation(line: 2755, column: 21, scope: !14756)
!14770 = !DILocation(line: 2755, column: 34, scope: !14756)
!14771 = !DILocation(line: 2755, column: 12, scope: !14756)
!14772 = !DILocation(line: 2755, column: 10, scope: !14756)
!14773 = !DILocation(line: 2757, column: 14, scope: !14756)
!14774 = !DILocation(line: 2758, column: 8, scope: !14756)
!14775 = !DILocation(line: 2758, column: 15, scope: !14756)
!14776 = !DILocation(line: 2759, column: 8, scope: !14756)
!14777 = !DILocation(line: 2759, column: 15, scope: !14756)
!14778 = !DILocation(line: 2759, column: 29, scope: !14756)
!14779 = !DILocation(line: 2759, column: 36, scope: !14756)
!14780 = !DILocation(line: 2757, column: 3, scope: !14756)
!14781 = !DILocation(line: 2765, column: 7, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14756, file: !3, line: 2765, column: 7)
!14783 = !DILocation(line: 2765, column: 13, scope: !14782)
!14784 = !DILocation(line: 2765, column: 17, scope: !14782)
!14785 = !DILocation(line: 2765, column: 21, scope: !14782)
!14786 = !DILocation(line: 2765, column: 27, scope: !14782)
!14787 = !DILocation(line: 2765, column: 32, scope: !14782)
!14788 = !DILocation(line: 2765, column: 35, scope: !14782)
!14789 = !DILocation(line: 2765, column: 41, scope: !14782)
!14790 = !DILocation(line: 2765, column: 46, scope: !14782)
!14791 = !DILocation(line: 2766, column: 8, scope: !14782)
!14792 = !DILocation(line: 2766, column: 14, scope: !14782)
!14793 = !DILocation(line: 2766, column: 19, scope: !14782)
!14794 = !DILocation(line: 2766, column: 22, scope: !14782)
!14795 = !DILocation(line: 2766, column: 28, scope: !14782)
!14796 = !DILocation(line: 2766, column: 33, scope: !14782)
!14797 = !DILocation(line: 2766, column: 36, scope: !14782)
!14798 = !DILocation(line: 2766, column: 43, scope: !14782)
!14799 = !DILocation(line: 2765, column: 7, scope: !14756)
!14800 = !DILocation(line: 2767, column: 13, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14782, file: !3, line: 2766, column: 59)
!14802 = !DILocation(line: 2767, column: 4, scope: !14801)
!14803 = !DILocation(line: 2769, column: 3, scope: !14801)
!14804 = !DILocation(line: 2771, column: 1, scope: !14727)
!14805 = distinct !DISubprogram(name: "asc_prt_board_devices", scope: !3, file: !3, line: 2710, type: !14728, scopeLine: 2711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14806 = !DILocalVariable(name: "m", arg: 1, scope: !14805, file: !3, line: 2710, type: !701)
!14807 = !DILocation(line: 2710, column: 52, scope: !14805)
!14808 = !DILocalVariable(name: "shost", arg: 2, scope: !14805, file: !3, line: 2710, type: !4796)
!14809 = !DILocation(line: 2710, column: 73, scope: !14805)
!14810 = !DILocalVariable(name: "boardp", scope: !14805, file: !3, line: 2712, type: !190)
!14811 = !DILocation(line: 2712, column: 20, scope: !14805)
!14812 = !DILocation(line: 2712, column: 40, scope: !14805)
!14813 = !DILocation(line: 2712, column: 29, scope: !14805)
!14814 = !DILocalVariable(name: "chip_scsi_id", scope: !14805, file: !3, line: 2713, type: !245)
!14815 = !DILocation(line: 2713, column: 6, scope: !14805)
!14816 = !DILocalVariable(name: "i", scope: !14805, file: !3, line: 2714, type: !245)
!14817 = !DILocation(line: 2714, column: 6, scope: !14805)
!14818 = !DILocation(line: 2716, column: 13, scope: !14805)
!14819 = !DILocation(line: 2718, column: 6, scope: !14805)
!14820 = !DILocation(line: 2718, column: 13, scope: !14805)
!14821 = !DILocation(line: 2716, column: 2, scope: !14805)
!14822 = !DILocation(line: 2720, column: 6, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 2720, column: 6)
!14824 = !DILocation(line: 2720, column: 6, scope: !14805)
!14825 = !DILocation(line: 2721, column: 18, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 2720, column: 32)
!14827 = !DILocation(line: 2721, column: 26, scope: !14826)
!14828 = !DILocation(line: 2721, column: 34, scope: !14826)
!14829 = !DILocation(line: 2721, column: 46, scope: !14826)
!14830 = !DILocation(line: 2721, column: 16, scope: !14826)
!14831 = !DILocation(line: 2722, column: 2, scope: !14826)
!14832 = !DILocation(line: 2723, column: 18, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 2722, column: 9)
!14834 = !DILocation(line: 2723, column: 26, scope: !14833)
!14835 = !DILocation(line: 2723, column: 34, scope: !14833)
!14836 = !DILocation(line: 2723, column: 46, scope: !14833)
!14837 = !DILocation(line: 2723, column: 16, scope: !14833)
!14838 = !DILocation(line: 2726, column: 11, scope: !14805)
!14839 = !DILocation(line: 2726, column: 2, scope: !14805)
!14840 = !DILocation(line: 2727, column: 9, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 2727, column: 2)
!14842 = !DILocation(line: 2727, column: 7, scope: !14841)
!14843 = !DILocation(line: 2727, column: 14, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14841, file: !3, line: 2727, column: 2)
!14845 = !DILocation(line: 2727, column: 16, scope: !14844)
!14846 = !DILocation(line: 2727, column: 2, scope: !14841)
!14847 = !DILocation(line: 2728, column: 7, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !3, line: 2728, column: 7)
!14849 = distinct !DILexicalBlock(scope: !14844, file: !3, line: 2727, column: 37)
!14850 = !DILocation(line: 2728, column: 15, scope: !14848)
!14851 = !DILocation(line: 2728, column: 30, scope: !14848)
!14852 = !DILocation(line: 2728, column: 28, scope: !14848)
!14853 = !DILocation(line: 2728, column: 7, scope: !14849)
!14854 = !DILocation(line: 2729, column: 15, scope: !14848)
!14855 = !DILocation(line: 2729, column: 26, scope: !14848)
!14856 = !DILocation(line: 2729, column: 4, scope: !14848)
!14857 = !DILocation(line: 2730, column: 2, scope: !14849)
!14858 = !DILocation(line: 2727, column: 33, scope: !14844)
!14859 = !DILocation(line: 2727, column: 2, scope: !14844)
!14860 = distinct !{!14860, !14846, !14861}
!14861 = !DILocation(line: 2730, column: 2, scope: !14841)
!14862 = !DILocation(line: 2731, column: 13, scope: !14805)
!14863 = !DILocation(line: 2731, column: 40, scope: !14805)
!14864 = !DILocation(line: 2731, column: 2, scope: !14805)
!14865 = !DILocation(line: 2732, column: 1, scope: !14805)
!14866 = distinct !DISubprogram(name: "asc_prt_asc_board_eeprom", scope: !3, file: !3, line: 2876, type: !14728, scopeLine: 2877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!14867 = !DILocalVariable(name: "m", arg: 1, scope: !14866, file: !3, line: 2876, type: !701)
!14868 = !DILocation(line: 2876, column: 55, scope: !14866)
!14869 = !DILocalVariable(name: "shost", arg: 2, scope: !14866, file: !3, line: 2876, type: !4796)
!14870 = !DILocation(line: 2876, column: 76, scope: !14866)
!14871 = !DILocalVariable(name: "boardp", scope: !14866, file: !3, line: 2878, type: !190)
!14872 = !DILocation(line: 2878, column: 20, scope: !14866)
!14873 = !DILocation(line: 2878, column: 40, scope: !14866)
!14874 = !DILocation(line: 2878, column: 29, scope: !14866)
!14875 = !DILocalVariable(name: "asc_dvc_varp", scope: !14866, file: !3, line: 2879, type: !6375)
!14876 = !DILocation(line: 2879, column: 15, scope: !14866)
!14877 = !DILocalVariable(name: "ep", scope: !14866, file: !3, line: 2880, type: !5990)
!14878 = !DILocation(line: 2880, column: 17, scope: !14866)
!14879 = !DILocalVariable(name: "i", scope: !14866, file: !3, line: 2881, type: !245)
!14880 = !DILocation(line: 2881, column: 6, scope: !14866)
!14881 = !DILocalVariable(name: "serialstr", scope: !14866, file: !3, line: 2885, type: !14882)
!14882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 104, elements: !14883)
!14883 = !{!14884}
!14884 = !DISubrange(count: 13)
!14885 = !DILocation(line: 2885, column: 8, scope: !14866)
!14886 = !DILocation(line: 2887, column: 18, scope: !14866)
!14887 = !DILocation(line: 2887, column: 26, scope: !14866)
!14888 = !DILocation(line: 2887, column: 34, scope: !14866)
!14889 = !DILocation(line: 2887, column: 15, scope: !14866)
!14890 = !DILocation(line: 2888, column: 8, scope: !14866)
!14891 = !DILocation(line: 2888, column: 16, scope: !14866)
!14892 = !DILocation(line: 2888, column: 27, scope: !14866)
!14893 = !DILocation(line: 2888, column: 5, scope: !14866)
!14894 = !DILocation(line: 2890, column: 13, scope: !14866)
!14895 = !DILocation(line: 2892, column: 6, scope: !14866)
!14896 = !DILocation(line: 2892, column: 13, scope: !14866)
!14897 = !DILocation(line: 2890, column: 2, scope: !14866)
!14898 = !DILocation(line: 2894, column: 39, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2894, column: 6)
!14900 = !DILocation(line: 2894, column: 43, scope: !14899)
!14901 = !DILocation(line: 2894, column: 28, scope: !14899)
!14902 = !DILocation(line: 2894, column: 60, scope: !14899)
!14903 = !DILocation(line: 2894, column: 6, scope: !14899)
!14904 = !DILocation(line: 2895, column: 6, scope: !14899)
!14905 = !DILocation(line: 2894, column: 6, scope: !14866)
!14906 = !DILocation(line: 2896, column: 14, scope: !14899)
!14907 = !DILocation(line: 2896, column: 41, scope: !14899)
!14908 = !DILocation(line: 2896, column: 3, scope: !14899)
!14909 = !DILocation(line: 2897, column: 11, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14899, file: !3, line: 2897, column: 11)
!14911 = !DILocation(line: 2897, column: 15, scope: !14910)
!14912 = !DILocation(line: 2897, column: 31, scope: !14910)
!14913 = !DILocation(line: 2897, column: 11, scope: !14899)
!14914 = !DILocation(line: 2898, column: 12, scope: !14910)
!14915 = !DILocation(line: 2898, column: 3, scope: !14910)
!14916 = !DILocation(line: 2901, column: 12, scope: !14910)
!14917 = !DILocation(line: 2901, column: 3, scope: !14910)
!14918 = !DILocation(line: 2903, column: 13, scope: !14866)
!14919 = !DILocation(line: 2905, column: 6, scope: !14866)
!14920 = !DILocation(line: 2905, column: 31, scope: !14866)
!14921 = !DILocation(line: 2905, column: 35, scope: !14866)
!14922 = !DILocation(line: 2906, column: 6, scope: !14866)
!14923 = !DILocation(line: 2906, column: 10, scope: !14866)
!14924 = !DILocation(line: 2903, column: 2, scope: !14866)
!14925 = !DILocation(line: 2908, column: 13, scope: !14866)
!14926 = !DILocation(line: 2909, column: 36, scope: !14866)
!14927 = !DILocation(line: 2909, column: 40, scope: !14866)
!14928 = !DILocation(line: 2909, column: 46, scope: !14866)
!14929 = !DILocation(line: 2909, column: 50, scope: !14866)
!14930 = !DILocation(line: 2908, column: 2, scope: !14866)
!14931 = !DILocation(line: 2911, column: 11, scope: !14866)
!14932 = !DILocation(line: 2911, column: 2, scope: !14866)
!14933 = !DILocation(line: 2912, column: 9, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2912, column: 2)
!14935 = !DILocation(line: 2912, column: 7, scope: !14934)
!14936 = !DILocation(line: 2912, column: 14, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14934, file: !3, line: 2912, column: 2)
!14938 = !DILocation(line: 2912, column: 16, scope: !14937)
!14939 = !DILocation(line: 2912, column: 2, scope: !14934)
!14940 = !DILocation(line: 2913, column: 14, scope: !14937)
!14941 = !DILocation(line: 2913, column: 24, scope: !14937)
!14942 = !DILocation(line: 2913, column: 3, scope: !14937)
!14943 = !DILocation(line: 2912, column: 33, scope: !14937)
!14944 = !DILocation(line: 2912, column: 2, scope: !14937)
!14945 = distinct !{!14945, !14939, !14946}
!14946 = !DILocation(line: 2913, column: 25, scope: !14934)
!14947 = !DILocation(line: 2915, column: 11, scope: !14866)
!14948 = !DILocation(line: 2915, column: 2, scope: !14866)
!14949 = !DILocation(line: 2916, column: 9, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2916, column: 2)
!14951 = !DILocation(line: 2916, column: 7, scope: !14950)
!14952 = !DILocation(line: 2916, column: 14, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 2916, column: 2)
!14954 = !DILocation(line: 2916, column: 16, scope: !14953)
!14955 = !DILocation(line: 2916, column: 2, scope: !14950)
!14956 = !DILocation(line: 2917, column: 14, scope: !14953)
!14957 = !DILocation(line: 2918, column: 8, scope: !14953)
!14958 = !DILocation(line: 2918, column: 12, scope: !14953)
!14959 = !DILocation(line: 2918, column: 26, scope: !14953)
!14960 = !DILocation(line: 2918, column: 24, scope: !14953)
!14961 = !DILocation(line: 2918, column: 7, scope: !14953)
!14962 = !DILocation(line: 2917, column: 3, scope: !14953)
!14963 = !DILocation(line: 2916, column: 33, scope: !14953)
!14964 = !DILocation(line: 2916, column: 2, scope: !14953)
!14965 = distinct !{!14965, !14955, !14966}
!14966 = !DILocation(line: 2918, column: 60, scope: !14950)
!14967 = !DILocation(line: 2920, column: 11, scope: !14866)
!14968 = !DILocation(line: 2920, column: 2, scope: !14866)
!14969 = !DILocation(line: 2921, column: 9, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2921, column: 2)
!14971 = !DILocation(line: 2921, column: 7, scope: !14970)
!14972 = !DILocation(line: 2921, column: 14, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 2921, column: 2)
!14974 = !DILocation(line: 2921, column: 16, scope: !14973)
!14975 = !DILocation(line: 2921, column: 2, scope: !14970)
!14976 = !DILocation(line: 2922, column: 14, scope: !14973)
!14977 = !DILocation(line: 2923, column: 8, scope: !14973)
!14978 = !DILocation(line: 2923, column: 12, scope: !14973)
!14979 = !DILocation(line: 2923, column: 26, scope: !14973)
!14980 = !DILocation(line: 2923, column: 24, scope: !14973)
!14981 = !DILocation(line: 2923, column: 7, scope: !14973)
!14982 = !DILocation(line: 2922, column: 3, scope: !14973)
!14983 = !DILocation(line: 2921, column: 33, scope: !14973)
!14984 = !DILocation(line: 2921, column: 2, scope: !14973)
!14985 = distinct !{!14985, !14975, !14986}
!14986 = !DILocation(line: 2923, column: 60, scope: !14970)
!14987 = !DILocation(line: 2925, column: 11, scope: !14866)
!14988 = !DILocation(line: 2925, column: 2, scope: !14866)
!14989 = !DILocation(line: 2926, column: 9, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2926, column: 2)
!14991 = !DILocation(line: 2926, column: 7, scope: !14990)
!14992 = !DILocation(line: 2926, column: 14, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 2926, column: 2)
!14994 = !DILocation(line: 2926, column: 16, scope: !14993)
!14995 = !DILocation(line: 2926, column: 2, scope: !14990)
!14996 = !DILocation(line: 2927, column: 14, scope: !14993)
!14997 = !DILocation(line: 2928, column: 8, scope: !14993)
!14998 = !DILocation(line: 2928, column: 12, scope: !14993)
!14999 = !DILocation(line: 2928, column: 26, scope: !14993)
!15000 = !DILocation(line: 2928, column: 24, scope: !14993)
!15001 = !DILocation(line: 2928, column: 7, scope: !14993)
!15002 = !DILocation(line: 2927, column: 3, scope: !14993)
!15003 = !DILocation(line: 2926, column: 33, scope: !14993)
!15004 = !DILocation(line: 2926, column: 2, scope: !14993)
!15005 = distinct !{!15005, !14995, !15006}
!15006 = !DILocation(line: 2928, column: 60, scope: !14990)
!15007 = !DILocation(line: 2930, column: 11, scope: !14866)
!15008 = !DILocation(line: 2930, column: 2, scope: !14866)
!15009 = !DILocation(line: 2931, column: 9, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2931, column: 2)
!15011 = !DILocation(line: 2931, column: 7, scope: !15010)
!15012 = !DILocation(line: 2931, column: 14, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 2931, column: 2)
!15014 = !DILocation(line: 2931, column: 16, scope: !15013)
!15015 = !DILocation(line: 2931, column: 2, scope: !15010)
!15016 = !DILocation(line: 2932, column: 14, scope: !15013)
!15017 = !DILocation(line: 2933, column: 8, scope: !15013)
!15018 = !DILocation(line: 2933, column: 12, scope: !15013)
!15019 = !DILocation(line: 2933, column: 24, scope: !15013)
!15020 = !DILocation(line: 2933, column: 22, scope: !15013)
!15021 = !DILocation(line: 2933, column: 7, scope: !15013)
!15022 = !DILocation(line: 2932, column: 3, scope: !15013)
!15023 = !DILocation(line: 2931, column: 33, scope: !15013)
!15024 = !DILocation(line: 2931, column: 2, scope: !15013)
!15025 = distinct !{!15025, !15015, !15026}
!15026 = !DILocation(line: 2933, column: 58, scope: !15010)
!15027 = !DILocation(line: 2934, column: 11, scope: !14866)
!15028 = !DILocation(line: 2934, column: 2, scope: !14866)
!15029 = !DILocation(line: 2943, column: 1, scope: !14866)
!15030 = distinct !DISubprogram(name: "asc_prt_adv_board_eeprom", scope: !3, file: !3, line: 2950, type: !14728, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!15031 = !DILocalVariable(name: "m", arg: 1, scope: !15030, file: !3, line: 2950, type: !701)
!15032 = !DILocation(line: 2950, column: 55, scope: !15030)
!15033 = !DILocalVariable(name: "shost", arg: 2, scope: !15030, file: !3, line: 2950, type: !4796)
!15034 = !DILocation(line: 2950, column: 76, scope: !15030)
!15035 = !DILocalVariable(name: "boardp", scope: !15030, file: !3, line: 2952, type: !190)
!15036 = !DILocation(line: 2952, column: 20, scope: !15030)
!15037 = !DILocation(line: 2952, column: 40, scope: !15030)
!15038 = !DILocation(line: 2952, column: 29, scope: !15030)
!15039 = !DILocalVariable(name: "adv_dvc_varp", scope: !15030, file: !3, line: 2953, type: !6378)
!15040 = !DILocation(line: 2953, column: 15, scope: !15030)
!15041 = !DILocalVariable(name: "i", scope: !15030, file: !3, line: 2954, type: !245)
!15042 = !DILocation(line: 2954, column: 6, scope: !15030)
!15043 = !DILocalVariable(name: "termstr", scope: !15030, file: !3, line: 2955, type: !261)
!15044 = !DILocation(line: 2955, column: 8, scope: !15030)
!15045 = !DILocalVariable(name: "serialstr", scope: !15030, file: !3, line: 2956, type: !14882)
!15046 = !DILocation(line: 2956, column: 8, scope: !15030)
!15047 = !DILocalVariable(name: "ep_3550", scope: !15030, file: !3, line: 2957, type: !6630)
!15048 = !DILocation(line: 2957, column: 22, scope: !15030)
!15049 = !DILocalVariable(name: "ep_38C0800", scope: !15030, file: !3, line: 2958, type: !6633)
!15050 = !DILocation(line: 2958, column: 25, scope: !15030)
!15051 = !DILocalVariable(name: "ep_38C1600", scope: !15030, file: !3, line: 2959, type: !6636)
!15052 = !DILocation(line: 2959, column: 25, scope: !15030)
!15053 = !DILocalVariable(name: "word", scope: !15030, file: !3, line: 2960, type: !5240)
!15054 = !DILocation(line: 2960, column: 9, scope: !15030)
!15055 = !DILocalVariable(name: "wordp", scope: !15030, file: !3, line: 2961, type: !5989)
!15056 = !DILocation(line: 2961, column: 10, scope: !15030)
!15057 = !DILocalVariable(name: "sdtr_speed", scope: !15030, file: !3, line: 2962, type: !5240)
!15058 = !DILocation(line: 2962, column: 9, scope: !15030)
!15059 = !DILocation(line: 2964, column: 18, scope: !15030)
!15060 = !DILocation(line: 2964, column: 26, scope: !15030)
!15061 = !DILocation(line: 2964, column: 34, scope: !15030)
!15062 = !DILocation(line: 2964, column: 15, scope: !15030)
!15063 = !DILocation(line: 2965, column: 6, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 2965, column: 6)
!15065 = !DILocation(line: 2965, column: 20, scope: !15064)
!15066 = !DILocation(line: 2965, column: 30, scope: !15064)
!15067 = !DILocation(line: 2965, column: 6, scope: !15030)
!15068 = !DILocation(line: 2966, column: 14, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15064, file: !3, line: 2965, column: 51)
!15070 = !DILocation(line: 2966, column: 22, scope: !15069)
!15071 = !DILocation(line: 2966, column: 33, scope: !15069)
!15072 = !DILocation(line: 2966, column: 11, scope: !15069)
!15073 = !DILocation(line: 2967, column: 2, scope: !15069)
!15074 = !DILocation(line: 2967, column: 13, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15064, file: !3, line: 2967, column: 13)
!15076 = !DILocation(line: 2967, column: 27, scope: !15075)
!15077 = !DILocation(line: 2967, column: 37, scope: !15075)
!15078 = !DILocation(line: 2967, column: 13, scope: !15064)
!15079 = !DILocation(line: 2968, column: 17, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 2967, column: 61)
!15081 = !DILocation(line: 2968, column: 25, scope: !15080)
!15082 = !DILocation(line: 2968, column: 36, scope: !15080)
!15083 = !DILocation(line: 2968, column: 14, scope: !15080)
!15084 = !DILocation(line: 2969, column: 2, scope: !15080)
!15085 = !DILocation(line: 2970, column: 17, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 2969, column: 9)
!15087 = !DILocation(line: 2970, column: 25, scope: !15086)
!15088 = !DILocation(line: 2970, column: 36, scope: !15086)
!15089 = !DILocation(line: 2970, column: 14, scope: !15086)
!15090 = !DILocation(line: 2973, column: 13, scope: !15030)
!15091 = !DILocation(line: 2975, column: 6, scope: !15030)
!15092 = !DILocation(line: 2975, column: 13, scope: !15030)
!15093 = !DILocation(line: 2973, column: 2, scope: !15030)
!15094 = !DILocation(line: 2977, column: 6, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 2977, column: 6)
!15096 = !DILocation(line: 2977, column: 20, scope: !15095)
!15097 = !DILocation(line: 2977, column: 30, scope: !15095)
!15098 = !DILocation(line: 2977, column: 6, scope: !15030)
!15099 = !DILocation(line: 2978, column: 12, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 2977, column: 51)
!15101 = !DILocation(line: 2978, column: 21, scope: !15100)
!15102 = !DILocation(line: 2978, column: 9, scope: !15100)
!15103 = !DILocation(line: 2979, column: 2, scope: !15100)
!15104 = !DILocation(line: 2979, column: 13, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 2979, column: 13)
!15106 = !DILocation(line: 2979, column: 27, scope: !15105)
!15107 = !DILocation(line: 2979, column: 37, scope: !15105)
!15108 = !DILocation(line: 2979, column: 13, scope: !15095)
!15109 = !DILocation(line: 2980, column: 12, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2979, column: 61)
!15111 = !DILocation(line: 2980, column: 24, scope: !15110)
!15112 = !DILocation(line: 2980, column: 9, scope: !15110)
!15113 = !DILocation(line: 2981, column: 2, scope: !15110)
!15114 = !DILocation(line: 2982, column: 12, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2981, column: 9)
!15116 = !DILocation(line: 2982, column: 24, scope: !15115)
!15117 = !DILocation(line: 2982, column: 9, scope: !15115)
!15118 = !DILocation(line: 2985, column: 28, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 2985, column: 6)
!15120 = !DILocation(line: 2985, column: 35, scope: !15119)
!15121 = !DILocation(line: 2985, column: 6, scope: !15119)
!15122 = !DILocation(line: 2985, column: 46, scope: !15119)
!15123 = !DILocation(line: 2985, column: 6, scope: !15030)
!15124 = !DILocation(line: 2986, column: 14, scope: !15119)
!15125 = !DILocation(line: 2986, column: 41, scope: !15119)
!15126 = !DILocation(line: 2986, column: 3, scope: !15119)
!15127 = !DILocation(line: 2988, column: 12, scope: !15119)
!15128 = !DILocation(line: 2988, column: 3, scope: !15119)
!15129 = !DILocation(line: 2990, column: 6, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 2990, column: 6)
!15131 = !DILocation(line: 2990, column: 20, scope: !15130)
!15132 = !DILocation(line: 2990, column: 30, scope: !15130)
!15133 = !DILocation(line: 2990, column: 6, scope: !15030)
!15134 = !DILocation(line: 2991, column: 14, scope: !15130)
!15135 = !DILocation(line: 2993, column: 7, scope: !15130)
!15136 = !DILocation(line: 2993, column: 16, scope: !15130)
!15137 = !DILocation(line: 2994, column: 7, scope: !15130)
!15138 = !DILocation(line: 2994, column: 16, scope: !15130)
!15139 = !DILocation(line: 2994, column: 30, scope: !15130)
!15140 = !DILocation(line: 2994, column: 39, scope: !15130)
!15141 = !DILocation(line: 2991, column: 3, scope: !15130)
!15142 = !DILocation(line: 2995, column: 11, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15130, file: !3, line: 2995, column: 11)
!15144 = !DILocation(line: 2995, column: 25, scope: !15143)
!15145 = !DILocation(line: 2995, column: 35, scope: !15143)
!15146 = !DILocation(line: 2995, column: 11, scope: !15130)
!15147 = !DILocation(line: 2996, column: 14, scope: !15143)
!15148 = !DILocation(line: 2998, column: 7, scope: !15143)
!15149 = !DILocation(line: 2998, column: 19, scope: !15143)
!15150 = !DILocation(line: 2999, column: 7, scope: !15143)
!15151 = !DILocation(line: 2999, column: 19, scope: !15143)
!15152 = !DILocation(line: 3000, column: 7, scope: !15143)
!15153 = !DILocation(line: 3000, column: 19, scope: !15143)
!15154 = !DILocation(line: 2996, column: 3, scope: !15143)
!15155 = !DILocation(line: 3002, column: 14, scope: !15143)
!15156 = !DILocation(line: 3004, column: 7, scope: !15143)
!15157 = !DILocation(line: 3004, column: 19, scope: !15143)
!15158 = !DILocation(line: 3005, column: 7, scope: !15143)
!15159 = !DILocation(line: 3005, column: 19, scope: !15143)
!15160 = !DILocation(line: 3006, column: 7, scope: !15143)
!15161 = !DILocation(line: 3006, column: 19, scope: !15143)
!15162 = !DILocation(line: 3002, column: 3, scope: !15143)
!15163 = !DILocation(line: 3007, column: 6, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3007, column: 6)
!15165 = !DILocation(line: 3007, column: 20, scope: !15164)
!15166 = !DILocation(line: 3007, column: 30, scope: !15164)
!15167 = !DILocation(line: 3007, column: 6, scope: !15030)
!15168 = !DILocation(line: 3008, column: 10, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !3, line: 3007, column: 51)
!15170 = !DILocation(line: 3008, column: 19, scope: !15169)
!15171 = !DILocation(line: 3008, column: 8, scope: !15169)
!15172 = !DILocation(line: 3009, column: 2, scope: !15169)
!15173 = !DILocation(line: 3009, column: 13, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15164, file: !3, line: 3009, column: 13)
!15175 = !DILocation(line: 3009, column: 27, scope: !15174)
!15176 = !DILocation(line: 3009, column: 37, scope: !15174)
!15177 = !DILocation(line: 3009, column: 13, scope: !15164)
!15178 = !DILocation(line: 3010, column: 10, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15174, file: !3, line: 3009, column: 61)
!15180 = !DILocation(line: 3010, column: 22, scope: !15179)
!15181 = !DILocation(line: 3010, column: 8, scope: !15179)
!15182 = !DILocation(line: 3011, column: 2, scope: !15179)
!15183 = !DILocation(line: 3012, column: 10, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15174, file: !3, line: 3011, column: 9)
!15185 = !DILocation(line: 3012, column: 22, scope: !15184)
!15186 = !DILocation(line: 3012, column: 8, scope: !15184)
!15187 = !DILocation(line: 3014, column: 10, scope: !15030)
!15188 = !DILocation(line: 3014, column: 2, scope: !15030)
!15189 = !DILocation(line: 3016, column: 11, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3014, column: 16)
!15191 = !DILocation(line: 3017, column: 3, scope: !15190)
!15192 = !DILocation(line: 3019, column: 11, scope: !15190)
!15193 = !DILocation(line: 3020, column: 3, scope: !15190)
!15194 = !DILocation(line: 3022, column: 11, scope: !15190)
!15195 = !DILocation(line: 3023, column: 3, scope: !15190)
!15196 = !DILocation(line: 3026, column: 11, scope: !15190)
!15197 = !DILocation(line: 3027, column: 3, scope: !15190)
!15198 = !DILocation(line: 3030, column: 6, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3030, column: 6)
!15200 = !DILocation(line: 3030, column: 20, scope: !15199)
!15201 = !DILocation(line: 3030, column: 30, scope: !15199)
!15202 = !DILocation(line: 3030, column: 6, scope: !15030)
!15203 = !DILocation(line: 3031, column: 14, scope: !15199)
!15204 = !DILocation(line: 3033, column: 7, scope: !15199)
!15205 = !DILocation(line: 3033, column: 16, scope: !15199)
!15206 = !DILocation(line: 3033, column: 29, scope: !15199)
!15207 = !DILocation(line: 3034, column: 7, scope: !15199)
!15208 = !DILocation(line: 3034, column: 16, scope: !15199)
!15209 = !DILocation(line: 3031, column: 3, scope: !15199)
!15210 = !DILocation(line: 3035, column: 11, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15199, file: !3, line: 3035, column: 11)
!15212 = !DILocation(line: 3035, column: 25, scope: !15211)
!15213 = !DILocation(line: 3035, column: 35, scope: !15211)
!15214 = !DILocation(line: 3035, column: 11, scope: !15199)
!15215 = !DILocation(line: 3036, column: 14, scope: !15211)
!15216 = !DILocation(line: 3038, column: 7, scope: !15211)
!15217 = !DILocation(line: 3038, column: 19, scope: !15211)
!15218 = !DILocation(line: 3038, column: 36, scope: !15211)
!15219 = !DILocation(line: 3039, column: 7, scope: !15211)
!15220 = !DILocation(line: 3039, column: 19, scope: !15211)
!15221 = !DILocation(line: 3036, column: 3, scope: !15211)
!15222 = !DILocation(line: 3041, column: 14, scope: !15211)
!15223 = !DILocation(line: 3043, column: 7, scope: !15211)
!15224 = !DILocation(line: 3043, column: 19, scope: !15211)
!15225 = !DILocation(line: 3043, column: 36, scope: !15211)
!15226 = !DILocation(line: 3044, column: 7, scope: !15211)
!15227 = !DILocation(line: 3044, column: 19, scope: !15211)
!15228 = !DILocation(line: 3041, column: 3, scope: !15211)
!15229 = !DILocation(line: 3046, column: 11, scope: !15030)
!15230 = !DILocation(line: 3046, column: 2, scope: !15030)
!15231 = !DILocation(line: 3047, column: 9, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3047, column: 2)
!15233 = !DILocation(line: 3047, column: 7, scope: !15232)
!15234 = !DILocation(line: 3047, column: 14, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 3047, column: 2)
!15236 = !DILocation(line: 3047, column: 16, scope: !15235)
!15237 = !DILocation(line: 3047, column: 2, scope: !15232)
!15238 = !DILocation(line: 3048, column: 14, scope: !15235)
!15239 = !DILocation(line: 3048, column: 24, scope: !15235)
!15240 = !DILocation(line: 3048, column: 3, scope: !15235)
!15241 = !DILocation(line: 3047, column: 33, scope: !15235)
!15242 = !DILocation(line: 3047, column: 2, scope: !15235)
!15243 = distinct !{!15243, !15237, !15244}
!15244 = !DILocation(line: 3048, column: 25, scope: !15232)
!15245 = !DILocation(line: 3049, column: 11, scope: !15030)
!15246 = !DILocation(line: 3049, column: 2, scope: !15030)
!15247 = !DILocation(line: 3051, column: 6, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3051, column: 6)
!15249 = !DILocation(line: 3051, column: 20, scope: !15248)
!15250 = !DILocation(line: 3051, column: 30, scope: !15248)
!15251 = !DILocation(line: 3051, column: 6, scope: !15030)
!15252 = !DILocation(line: 3052, column: 10, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 3051, column: 51)
!15254 = !DILocation(line: 3052, column: 19, scope: !15253)
!15255 = !DILocation(line: 3052, column: 8, scope: !15253)
!15256 = !DILocation(line: 3053, column: 2, scope: !15253)
!15257 = !DILocation(line: 3053, column: 13, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 3053, column: 13)
!15259 = !DILocation(line: 3053, column: 27, scope: !15258)
!15260 = !DILocation(line: 3053, column: 37, scope: !15258)
!15261 = !DILocation(line: 3053, column: 13, scope: !15248)
!15262 = !DILocation(line: 3054, column: 10, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 3053, column: 61)
!15264 = !DILocation(line: 3054, column: 22, scope: !15263)
!15265 = !DILocation(line: 3054, column: 8, scope: !15263)
!15266 = !DILocation(line: 3055, column: 2, scope: !15263)
!15267 = !DILocation(line: 3056, column: 10, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 3055, column: 9)
!15269 = !DILocation(line: 3056, column: 22, scope: !15268)
!15270 = !DILocation(line: 3056, column: 8, scope: !15268)
!15271 = !DILocation(line: 3058, column: 11, scope: !15030)
!15272 = !DILocation(line: 3058, column: 2, scope: !15030)
!15273 = !DILocation(line: 3059, column: 9, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3059, column: 2)
!15275 = !DILocation(line: 3059, column: 7, scope: !15274)
!15276 = !DILocation(line: 3059, column: 14, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15274, file: !3, line: 3059, column: 2)
!15278 = !DILocation(line: 3059, column: 16, scope: !15277)
!15279 = !DILocation(line: 3059, column: 2, scope: !15274)
!15280 = !DILocation(line: 3060, column: 14, scope: !15277)
!15281 = !DILocation(line: 3061, column: 8, scope: !15277)
!15282 = !DILocation(line: 3061, column: 15, scope: !15277)
!15283 = !DILocation(line: 3061, column: 13, scope: !15277)
!15284 = !DILocation(line: 3061, column: 7, scope: !15277)
!15285 = !DILocation(line: 3060, column: 3, scope: !15277)
!15286 = !DILocation(line: 3059, column: 33, scope: !15277)
!15287 = !DILocation(line: 3059, column: 2, scope: !15277)
!15288 = distinct !{!15288, !15279, !15289}
!15289 = !DILocation(line: 3061, column: 49, scope: !15274)
!15290 = !DILocation(line: 3062, column: 11, scope: !15030)
!15291 = !DILocation(line: 3062, column: 2, scope: !15030)
!15292 = !DILocation(line: 3064, column: 6, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3064, column: 6)
!15294 = !DILocation(line: 3064, column: 20, scope: !15293)
!15295 = !DILocation(line: 3064, column: 30, scope: !15293)
!15296 = !DILocation(line: 3064, column: 6, scope: !15030)
!15297 = !DILocation(line: 3065, column: 10, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 3064, column: 51)
!15299 = !DILocation(line: 3065, column: 19, scope: !15298)
!15300 = !DILocation(line: 3065, column: 8, scope: !15298)
!15301 = !DILocation(line: 3066, column: 2, scope: !15298)
!15302 = !DILocation(line: 3066, column: 13, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 3066, column: 13)
!15304 = !DILocation(line: 3066, column: 27, scope: !15303)
!15305 = !DILocation(line: 3066, column: 37, scope: !15303)
!15306 = !DILocation(line: 3066, column: 13, scope: !15293)
!15307 = !DILocation(line: 3067, column: 10, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15303, file: !3, line: 3066, column: 61)
!15309 = !DILocation(line: 3067, column: 22, scope: !15308)
!15310 = !DILocation(line: 3067, column: 8, scope: !15308)
!15311 = !DILocation(line: 3068, column: 2, scope: !15308)
!15312 = !DILocation(line: 3069, column: 10, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15303, file: !3, line: 3068, column: 9)
!15314 = !DILocation(line: 3069, column: 22, scope: !15313)
!15315 = !DILocation(line: 3069, column: 8, scope: !15313)
!15316 = !DILocation(line: 3071, column: 11, scope: !15030)
!15317 = !DILocation(line: 3071, column: 2, scope: !15030)
!15318 = !DILocation(line: 3072, column: 9, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3072, column: 2)
!15320 = !DILocation(line: 3072, column: 7, scope: !15319)
!15321 = !DILocation(line: 3072, column: 14, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15319, file: !3, line: 3072, column: 2)
!15323 = !DILocation(line: 3072, column: 16, scope: !15322)
!15324 = !DILocation(line: 3072, column: 2, scope: !15319)
!15325 = !DILocation(line: 3073, column: 14, scope: !15322)
!15326 = !DILocation(line: 3074, column: 8, scope: !15322)
!15327 = !DILocation(line: 3074, column: 15, scope: !15322)
!15328 = !DILocation(line: 3074, column: 13, scope: !15322)
!15329 = !DILocation(line: 3074, column: 7, scope: !15322)
!15330 = !DILocation(line: 3073, column: 3, scope: !15322)
!15331 = !DILocation(line: 3072, column: 33, scope: !15322)
!15332 = !DILocation(line: 3072, column: 2, scope: !15322)
!15333 = distinct !{!15333, !15324, !15334}
!15334 = !DILocation(line: 3074, column: 49, scope: !15319)
!15335 = !DILocation(line: 3075, column: 11, scope: !15030)
!15336 = !DILocation(line: 3075, column: 2, scope: !15030)
!15337 = !DILocation(line: 3077, column: 6, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3077, column: 6)
!15339 = !DILocation(line: 3077, column: 20, scope: !15338)
!15340 = !DILocation(line: 3077, column: 30, scope: !15338)
!15341 = !DILocation(line: 3077, column: 6, scope: !15030)
!15342 = !DILocation(line: 3078, column: 10, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15338, file: !3, line: 3077, column: 51)
!15344 = !DILocation(line: 3078, column: 19, scope: !15343)
!15345 = !DILocation(line: 3078, column: 8, scope: !15343)
!15346 = !DILocation(line: 3079, column: 2, scope: !15343)
!15347 = !DILocation(line: 3079, column: 13, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15338, file: !3, line: 3079, column: 13)
!15349 = !DILocation(line: 3079, column: 27, scope: !15348)
!15350 = !DILocation(line: 3079, column: 37, scope: !15348)
!15351 = !DILocation(line: 3079, column: 13, scope: !15338)
!15352 = !DILocation(line: 3080, column: 10, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15348, file: !3, line: 3079, column: 61)
!15354 = !DILocation(line: 3080, column: 22, scope: !15353)
!15355 = !DILocation(line: 3080, column: 8, scope: !15353)
!15356 = !DILocation(line: 3081, column: 2, scope: !15353)
!15357 = !DILocation(line: 3082, column: 10, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15348, file: !3, line: 3081, column: 9)
!15359 = !DILocation(line: 3082, column: 22, scope: !15358)
!15360 = !DILocation(line: 3082, column: 8, scope: !15358)
!15361 = !DILocation(line: 3084, column: 11, scope: !15030)
!15362 = !DILocation(line: 3084, column: 2, scope: !15030)
!15363 = !DILocation(line: 3085, column: 9, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3085, column: 2)
!15365 = !DILocation(line: 3085, column: 7, scope: !15364)
!15366 = !DILocation(line: 3085, column: 14, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 3085, column: 2)
!15368 = !DILocation(line: 3085, column: 16, scope: !15367)
!15369 = !DILocation(line: 3085, column: 2, scope: !15364)
!15370 = !DILocation(line: 3086, column: 14, scope: !15367)
!15371 = !DILocation(line: 3087, column: 8, scope: !15367)
!15372 = !DILocation(line: 3087, column: 15, scope: !15367)
!15373 = !DILocation(line: 3087, column: 13, scope: !15367)
!15374 = !DILocation(line: 3087, column: 7, scope: !15367)
!15375 = !DILocation(line: 3086, column: 3, scope: !15367)
!15376 = !DILocation(line: 3085, column: 33, scope: !15367)
!15377 = !DILocation(line: 3085, column: 2, scope: !15367)
!15378 = distinct !{!15378, !15369, !15379}
!15379 = !DILocation(line: 3087, column: 49, scope: !15364)
!15380 = !DILocation(line: 3088, column: 11, scope: !15030)
!15381 = !DILocation(line: 3088, column: 2, scope: !15030)
!15382 = !DILocation(line: 3090, column: 6, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3090, column: 6)
!15384 = !DILocation(line: 3090, column: 20, scope: !15383)
!15385 = !DILocation(line: 3090, column: 30, scope: !15383)
!15386 = !DILocation(line: 3090, column: 6, scope: !15030)
!15387 = !DILocation(line: 3091, column: 12, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15383, file: !3, line: 3090, column: 51)
!15389 = !DILocation(line: 3091, column: 3, scope: !15388)
!15390 = !DILocation(line: 3092, column: 10, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15388, file: !3, line: 3092, column: 3)
!15392 = !DILocation(line: 3092, column: 8, scope: !15391)
!15393 = !DILocation(line: 3092, column: 15, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15391, file: !3, line: 3092, column: 3)
!15395 = !DILocation(line: 3092, column: 17, scope: !15394)
!15396 = !DILocation(line: 3092, column: 3, scope: !15391)
!15397 = !DILocation(line: 3093, column: 15, scope: !15394)
!15398 = !DILocation(line: 3094, column: 9, scope: !15394)
!15399 = !DILocation(line: 3094, column: 18, scope: !15394)
!15400 = !DILocation(line: 3094, column: 30, scope: !15394)
!15401 = !DILocation(line: 3094, column: 28, scope: !15394)
!15402 = !DILocation(line: 3094, column: 8, scope: !15394)
!15403 = !DILocation(line: 3093, column: 4, scope: !15394)
!15404 = !DILocation(line: 3092, column: 34, scope: !15394)
!15405 = !DILocation(line: 3092, column: 3, scope: !15394)
!15406 = distinct !{!15406, !15396, !15407}
!15407 = !DILocation(line: 3095, column: 17, scope: !15391)
!15408 = !DILocation(line: 3096, column: 12, scope: !15388)
!15409 = !DILocation(line: 3096, column: 3, scope: !15388)
!15410 = !DILocation(line: 3097, column: 2, scope: !15388)
!15411 = !DILocation(line: 3099, column: 6, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3099, column: 6)
!15413 = !DILocation(line: 3099, column: 20, scope: !15412)
!15414 = !DILocation(line: 3099, column: 30, scope: !15412)
!15415 = !DILocation(line: 3099, column: 6, scope: !15030)
!15416 = !DILocation(line: 3100, column: 12, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15412, file: !3, line: 3099, column: 51)
!15418 = !DILocation(line: 3100, column: 3, scope: !15417)
!15419 = !DILocation(line: 3101, column: 10, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15417, file: !3, line: 3101, column: 3)
!15421 = !DILocation(line: 3101, column: 8, scope: !15420)
!15422 = !DILocation(line: 3101, column: 15, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 3101, column: 3)
!15424 = !DILocation(line: 3101, column: 17, scope: !15423)
!15425 = !DILocation(line: 3101, column: 3, scope: !15420)
!15426 = !DILocation(line: 3102, column: 15, scope: !15423)
!15427 = !DILocation(line: 3103, column: 9, scope: !15423)
!15428 = !DILocation(line: 3103, column: 18, scope: !15423)
!15429 = !DILocation(line: 3103, column: 31, scope: !15423)
!15430 = !DILocation(line: 3103, column: 29, scope: !15423)
!15431 = !DILocation(line: 3103, column: 8, scope: !15423)
!15432 = !DILocation(line: 3102, column: 4, scope: !15423)
!15433 = !DILocation(line: 3101, column: 34, scope: !15423)
!15434 = !DILocation(line: 3101, column: 3, scope: !15423)
!15435 = distinct !{!15435, !15425, !15436}
!15436 = !DILocation(line: 3104, column: 19, scope: !15420)
!15437 = !DILocation(line: 3105, column: 12, scope: !15417)
!15438 = !DILocation(line: 3105, column: 3, scope: !15417)
!15439 = !DILocation(line: 3106, column: 2, scope: !15417)
!15440 = !DILocation(line: 3108, column: 6, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3108, column: 6)
!15442 = !DILocation(line: 3108, column: 20, scope: !15441)
!15443 = !DILocation(line: 3108, column: 30, scope: !15441)
!15444 = !DILocation(line: 3108, column: 6, scope: !15030)
!15445 = !DILocation(line: 3109, column: 10, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15441, file: !3, line: 3108, column: 51)
!15447 = !DILocation(line: 3109, column: 19, scope: !15446)
!15448 = !DILocation(line: 3109, column: 8, scope: !15446)
!15449 = !DILocation(line: 3110, column: 2, scope: !15446)
!15450 = !DILocation(line: 3110, column: 13, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15441, file: !3, line: 3110, column: 13)
!15452 = !DILocation(line: 3110, column: 27, scope: !15451)
!15453 = !DILocation(line: 3110, column: 37, scope: !15451)
!15454 = !DILocation(line: 3110, column: 13, scope: !15441)
!15455 = !DILocation(line: 3111, column: 10, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15451, file: !3, line: 3110, column: 61)
!15457 = !DILocation(line: 3111, column: 22, scope: !15456)
!15458 = !DILocation(line: 3111, column: 8, scope: !15456)
!15459 = !DILocation(line: 3112, column: 2, scope: !15456)
!15460 = !DILocation(line: 3113, column: 10, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15451, file: !3, line: 3112, column: 9)
!15462 = !DILocation(line: 3113, column: 22, scope: !15461)
!15463 = !DILocation(line: 3113, column: 8, scope: !15461)
!15464 = !DILocation(line: 3115, column: 11, scope: !15030)
!15465 = !DILocation(line: 3115, column: 2, scope: !15030)
!15466 = !DILocation(line: 3116, column: 9, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3116, column: 2)
!15468 = !DILocation(line: 3116, column: 7, scope: !15467)
!15469 = !DILocation(line: 3116, column: 14, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15467, file: !3, line: 3116, column: 2)
!15471 = !DILocation(line: 3116, column: 16, scope: !15470)
!15472 = !DILocation(line: 3116, column: 2, scope: !15467)
!15473 = !DILocation(line: 3117, column: 14, scope: !15470)
!15474 = !DILocation(line: 3118, column: 8, scope: !15470)
!15475 = !DILocation(line: 3118, column: 15, scope: !15470)
!15476 = !DILocation(line: 3118, column: 13, scope: !15470)
!15477 = !DILocation(line: 3118, column: 7, scope: !15470)
!15478 = !DILocation(line: 3117, column: 3, scope: !15470)
!15479 = !DILocation(line: 3116, column: 33, scope: !15470)
!15480 = !DILocation(line: 3116, column: 2, scope: !15470)
!15481 = distinct !{!15481, !15472, !15482}
!15482 = !DILocation(line: 3118, column: 49, scope: !15467)
!15483 = !DILocation(line: 3119, column: 11, scope: !15030)
!15484 = !DILocation(line: 3119, column: 2, scope: !15030)
!15485 = !DILocation(line: 3121, column: 6, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3121, column: 6)
!15487 = !DILocation(line: 3121, column: 20, scope: !15486)
!15488 = !DILocation(line: 3121, column: 30, scope: !15486)
!15489 = !DILocation(line: 3121, column: 53, scope: !15486)
!15490 = !DILocation(line: 3122, column: 6, scope: !15486)
!15491 = !DILocation(line: 3122, column: 20, scope: !15486)
!15492 = !DILocation(line: 3122, column: 30, scope: !15486)
!15493 = !DILocation(line: 3121, column: 6, scope: !15030)
!15494 = !DILocation(line: 3123, column: 12, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15486, file: !3, line: 3122, column: 54)
!15496 = !DILocation(line: 3123, column: 3, scope: !15495)
!15497 = !DILocation(line: 3124, column: 10, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15495, file: !3, line: 3124, column: 3)
!15499 = !DILocation(line: 3124, column: 8, scope: !15498)
!15500 = !DILocation(line: 3124, column: 15, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 3124, column: 3)
!15502 = !DILocation(line: 3124, column: 17, scope: !15501)
!15503 = !DILocation(line: 3124, column: 3, scope: !15498)
!15504 = !DILocalVariable(name: "speed_str", scope: !15505, file: !3, line: 3125, type: !261)
!15505 = distinct !DILexicalBlock(scope: !15501, file: !3, line: 3124, column: 38)
!15506 = !DILocation(line: 3125, column: 10, scope: !15505)
!15507 = !DILocation(line: 3127, column: 8, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15505, file: !3, line: 3127, column: 8)
!15509 = !DILocation(line: 3127, column: 10, scope: !15508)
!15510 = !DILocation(line: 3127, column: 8, scope: !15505)
!15511 = !DILocation(line: 3128, column: 18, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15508, file: !3, line: 3127, column: 16)
!15513 = !DILocation(line: 3128, column: 32, scope: !15512)
!15514 = !DILocation(line: 3128, column: 16, scope: !15512)
!15515 = !DILocation(line: 3129, column: 4, scope: !15512)
!15516 = !DILocation(line: 3129, column: 15, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15508, file: !3, line: 3129, column: 15)
!15518 = !DILocation(line: 3129, column: 17, scope: !15517)
!15519 = !DILocation(line: 3129, column: 15, scope: !15508)
!15520 = !DILocation(line: 3130, column: 18, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 3129, column: 23)
!15522 = !DILocation(line: 3130, column: 32, scope: !15521)
!15523 = !DILocation(line: 3130, column: 16, scope: !15521)
!15524 = !DILocation(line: 3131, column: 4, scope: !15521)
!15525 = !DILocation(line: 3131, column: 15, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 3131, column: 15)
!15527 = !DILocation(line: 3131, column: 17, scope: !15526)
!15528 = !DILocation(line: 3131, column: 15, scope: !15517)
!15529 = !DILocation(line: 3132, column: 18, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15526, file: !3, line: 3131, column: 23)
!15531 = !DILocation(line: 3132, column: 32, scope: !15530)
!15532 = !DILocation(line: 3132, column: 16, scope: !15530)
!15533 = !DILocation(line: 3133, column: 4, scope: !15530)
!15534 = !DILocation(line: 3133, column: 15, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15526, file: !3, line: 3133, column: 15)
!15536 = !DILocation(line: 3133, column: 17, scope: !15535)
!15537 = !DILocation(line: 3133, column: 15, scope: !15526)
!15538 = !DILocation(line: 3134, column: 18, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15535, file: !3, line: 3133, column: 24)
!15540 = !DILocation(line: 3134, column: 32, scope: !15539)
!15541 = !DILocation(line: 3134, column: 16, scope: !15539)
!15542 = !DILocation(line: 3135, column: 4, scope: !15539)
!15543 = !DILocation(line: 3136, column: 12, scope: !15505)
!15544 = !DILocation(line: 3136, column: 23, scope: !15505)
!15545 = !DILocation(line: 3136, column: 4, scope: !15505)
!15546 = !DILocation(line: 3138, column: 15, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15505, file: !3, line: 3136, column: 38)
!15548 = !DILocation(line: 3139, column: 5, scope: !15547)
!15549 = !DILocation(line: 3141, column: 15, scope: !15547)
!15550 = !DILocation(line: 3142, column: 5, scope: !15547)
!15551 = !DILocation(line: 3144, column: 15, scope: !15547)
!15552 = !DILocation(line: 3145, column: 5, scope: !15547)
!15553 = !DILocation(line: 3147, column: 15, scope: !15547)
!15554 = !DILocation(line: 3148, column: 5, scope: !15547)
!15555 = !DILocation(line: 3150, column: 15, scope: !15547)
!15556 = !DILocation(line: 3151, column: 5, scope: !15547)
!15557 = !DILocation(line: 3153, column: 15, scope: !15547)
!15558 = !DILocation(line: 3154, column: 5, scope: !15547)
!15559 = !DILocation(line: 3156, column: 15, scope: !15547)
!15560 = !DILocation(line: 3157, column: 5, scope: !15547)
!15561 = !DILocation(line: 3159, column: 15, scope: !15505)
!15562 = !DILocation(line: 3159, column: 28, scope: !15505)
!15563 = !DILocation(line: 3159, column: 31, scope: !15505)
!15564 = !DILocation(line: 3159, column: 4, scope: !15505)
!15565 = !DILocation(line: 3160, column: 8, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15505, file: !3, line: 3160, column: 8)
!15567 = !DILocation(line: 3160, column: 10, scope: !15566)
!15568 = !DILocation(line: 3160, column: 8, scope: !15505)
!15569 = !DILocation(line: 3161, column: 14, scope: !15566)
!15570 = !DILocation(line: 3161, column: 5, scope: !15566)
!15571 = !DILocation(line: 3162, column: 15, scope: !15505)
!15572 = !DILocation(line: 3163, column: 3, scope: !15505)
!15573 = !DILocation(line: 3124, column: 34, scope: !15501)
!15574 = !DILocation(line: 3124, column: 3, scope: !15501)
!15575 = distinct !{!15575, !15503, !15576}
!15576 = !DILocation(line: 3163, column: 3, scope: !15498)
!15577 = !DILocation(line: 3164, column: 12, scope: !15495)
!15578 = !DILocation(line: 3164, column: 3, scope: !15495)
!15579 = !DILocation(line: 3165, column: 2, scope: !15495)
!15580 = !DILocation(line: 3166, column: 1, scope: !15030)
!15581 = distinct !DISubprogram(name: "asc_prt_driver_conf", scope: !3, file: !3, line: 3171, type: !14728, scopeLine: 3172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!15582 = !DILocalVariable(name: "m", arg: 1, scope: !15581, file: !3, line: 3171, type: !701)
!15583 = !DILocation(line: 3171, column: 50, scope: !15581)
!15584 = !DILocalVariable(name: "shost", arg: 2, scope: !15581, file: !3, line: 3171, type: !4796)
!15585 = !DILocation(line: 3171, column: 71, scope: !15581)
!15586 = !DILocalVariable(name: "boardp", scope: !15581, file: !3, line: 3173, type: !190)
!15587 = !DILocation(line: 3173, column: 20, scope: !15581)
!15588 = !DILocation(line: 3173, column: 40, scope: !15581)
!15589 = !DILocation(line: 3173, column: 29, scope: !15581)
!15590 = !DILocalVariable(name: "chip_scsi_id", scope: !15581, file: !3, line: 3174, type: !245)
!15591 = !DILocation(line: 3174, column: 6, scope: !15581)
!15592 = !DILocation(line: 3176, column: 13, scope: !15581)
!15593 = !DILocation(line: 3178, column: 3, scope: !15581)
!15594 = !DILocation(line: 3178, column: 10, scope: !15581)
!15595 = !DILocation(line: 3176, column: 2, scope: !15581)
!15596 = !DILocation(line: 3180, column: 13, scope: !15581)
!15597 = !DILocation(line: 3182, column: 21, scope: !15581)
!15598 = !DILocation(line: 3182, column: 6, scope: !15581)
!15599 = !DILocation(line: 3182, column: 29, scope: !15581)
!15600 = !DILocation(line: 3182, column: 36, scope: !15581)
!15601 = !DILocation(line: 3183, column: 6, scope: !15581)
!15602 = !DILocation(line: 3183, column: 13, scope: !15581)
!15603 = !DILocation(line: 3183, column: 22, scope: !15581)
!15604 = !DILocation(line: 3183, column: 29, scope: !15581)
!15605 = !DILocation(line: 3180, column: 2, scope: !15581)
!15606 = !DILocation(line: 3185, column: 13, scope: !15581)
!15607 = !DILocation(line: 3187, column: 6, scope: !15581)
!15608 = !DILocation(line: 3187, column: 13, scope: !15581)
!15609 = !DILocation(line: 3187, column: 24, scope: !15581)
!15610 = !DILocation(line: 3187, column: 31, scope: !15581)
!15611 = !DILocation(line: 3187, column: 42, scope: !15581)
!15612 = !DILocation(line: 3187, column: 49, scope: !15581)
!15613 = !DILocation(line: 3188, column: 6, scope: !15581)
!15614 = !DILocation(line: 3188, column: 13, scope: !15581)
!15615 = !DILocation(line: 3188, column: 27, scope: !15581)
!15616 = !DILocation(line: 3188, column: 34, scope: !15581)
!15617 = !DILocation(line: 3185, column: 2, scope: !15581)
!15618 = !DILocation(line: 3190, column: 13, scope: !15581)
!15619 = !DILocation(line: 3192, column: 6, scope: !15581)
!15620 = !DILocation(line: 3192, column: 13, scope: !15581)
!15621 = !DILocation(line: 3190, column: 2, scope: !15581)
!15622 = !DILocation(line: 3194, column: 13, scope: !15581)
!15623 = !DILocation(line: 3196, column: 6, scope: !15581)
!15624 = !DILocation(line: 3196, column: 14, scope: !15581)
!15625 = !DILocation(line: 3196, column: 21, scope: !15581)
!15626 = !DILocation(line: 3196, column: 28, scope: !15581)
!15627 = !DILocation(line: 3196, column: 40, scope: !15581)
!15628 = !DILocation(line: 3197, column: 6, scope: !15581)
!15629 = !DILocation(line: 3197, column: 14, scope: !15581)
!15630 = !DILocation(line: 3194, column: 2, scope: !15581)
!15631 = !DILocation(line: 3199, column: 13, scope: !15581)
!15632 = !DILocation(line: 3199, column: 36, scope: !15581)
!15633 = !DILocation(line: 3199, column: 43, scope: !15581)
!15634 = !DILocation(line: 3199, column: 2, scope: !15581)
!15635 = !DILocation(line: 3201, column: 6, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15581, file: !3, line: 3201, column: 6)
!15637 = !DILocation(line: 3201, column: 6, scope: !15581)
!15638 = !DILocation(line: 3202, column: 18, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 3201, column: 32)
!15640 = !DILocation(line: 3202, column: 26, scope: !15639)
!15641 = !DILocation(line: 3202, column: 34, scope: !15639)
!15642 = !DILocation(line: 3202, column: 46, scope: !15639)
!15643 = !DILocation(line: 3202, column: 16, scope: !15639)
!15644 = !DILocation(line: 3203, column: 2, scope: !15639)
!15645 = !DILocation(line: 3204, column: 18, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 3203, column: 9)
!15647 = !DILocation(line: 3204, column: 26, scope: !15646)
!15648 = !DILocation(line: 3204, column: 34, scope: !15646)
!15649 = !DILocation(line: 3204, column: 46, scope: !15646)
!15650 = !DILocation(line: 3204, column: 16, scope: !15646)
!15651 = !DILocation(line: 3206, column: 1, scope: !15581)
!15652 = distinct !DISubprogram(name: "asc_prt_board_stats", scope: !3, file: !3, line: 3529, type: !14728, scopeLine: 3530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!15653 = !DILocalVariable(name: "m", arg: 1, scope: !15652, file: !3, line: 3529, type: !701)
!15654 = !DILocation(line: 3529, column: 50, scope: !15652)
!15655 = !DILocalVariable(name: "shost", arg: 2, scope: !15652, file: !3, line: 3529, type: !4796)
!15656 = !DILocation(line: 3529, column: 71, scope: !15652)
!15657 = !DILocalVariable(name: "boardp", scope: !15652, file: !3, line: 3531, type: !190)
!15658 = !DILocation(line: 3531, column: 20, scope: !15652)
!15659 = !DILocation(line: 3531, column: 40, scope: !15652)
!15660 = !DILocation(line: 3531, column: 29, scope: !15652)
!15661 = !DILocalVariable(name: "s", scope: !15652, file: !3, line: 3532, type: !15662)
!15662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5608, size: 64)
!15663 = !DILocation(line: 3532, column: 20, scope: !15652)
!15664 = !DILocation(line: 3532, column: 25, scope: !15652)
!15665 = !DILocation(line: 3532, column: 33, scope: !15652)
!15666 = !DILocation(line: 3534, column: 13, scope: !15652)
!15667 = !DILocation(line: 3536, column: 6, scope: !15652)
!15668 = !DILocation(line: 3536, column: 13, scope: !15652)
!15669 = !DILocation(line: 3534, column: 2, scope: !15652)
!15670 = !DILocation(line: 3538, column: 13, scope: !15652)
!15671 = !DILocation(line: 3540, column: 6, scope: !15652)
!15672 = !DILocation(line: 3540, column: 9, scope: !15652)
!15673 = !DILocation(line: 3540, column: 23, scope: !15652)
!15674 = !DILocation(line: 3540, column: 26, scope: !15652)
!15675 = !DILocation(line: 3540, column: 33, scope: !15652)
!15676 = !DILocation(line: 3540, column: 36, scope: !15652)
!15677 = !DILocation(line: 3541, column: 6, scope: !15652)
!15678 = !DILocation(line: 3541, column: 9, scope: !15652)
!15679 = !DILocation(line: 3538, column: 2, scope: !15652)
!15680 = !DILocation(line: 3543, column: 13, scope: !15652)
!15681 = !DILocation(line: 3545, column: 6, scope: !15652)
!15682 = !DILocation(line: 3545, column: 9, scope: !15652)
!15683 = !DILocation(line: 3545, column: 19, scope: !15652)
!15684 = !DILocation(line: 3545, column: 22, scope: !15652)
!15685 = !DILocation(line: 3545, column: 28, scope: !15652)
!15686 = !DILocation(line: 3545, column: 31, scope: !15652)
!15687 = !DILocation(line: 3546, column: 6, scope: !15652)
!15688 = !DILocation(line: 3546, column: 9, scope: !15652)
!15689 = !DILocation(line: 3546, column: 26, scope: !15652)
!15690 = !DILocation(line: 3546, column: 29, scope: !15652)
!15691 = !DILocation(line: 3543, column: 2, scope: !15652)
!15692 = !DILocation(line: 3548, column: 13, scope: !15652)
!15693 = !DILocation(line: 3550, column: 6, scope: !15652)
!15694 = !DILocation(line: 3550, column: 9, scope: !15652)
!15695 = !DILocation(line: 3550, column: 22, scope: !15652)
!15696 = !DILocation(line: 3550, column: 25, scope: !15652)
!15697 = !DILocation(line: 3550, column: 35, scope: !15652)
!15698 = !DILocation(line: 3550, column: 38, scope: !15652)
!15699 = !DILocation(line: 3551, column: 6, scope: !15652)
!15700 = !DILocation(line: 3551, column: 9, scope: !15652)
!15701 = !DILocation(line: 3548, column: 2, scope: !15652)
!15702 = !DILocation(line: 3556, column: 6, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 3556, column: 6)
!15704 = !DILocation(line: 3556, column: 9, scope: !15703)
!15705 = !DILocation(line: 3556, column: 18, scope: !15703)
!15706 = !DILocation(line: 3556, column: 6, scope: !15652)
!15707 = !DILocation(line: 3557, column: 14, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15703, file: !3, line: 3556, column: 23)
!15709 = !DILocation(line: 3558, column: 7, scope: !15708)
!15710 = !DILocation(line: 3558, column: 10, scope: !15708)
!15711 = !DILocation(line: 3558, column: 20, scope: !15708)
!15712 = !DILocation(line: 3558, column: 23, scope: !15708)
!15713 = !DILocation(line: 3557, column: 3, scope: !15708)
!15714 = !DILocation(line: 3560, column: 14, scope: !15708)
!15715 = !DILocation(line: 3561, column: 7, scope: !15708)
!15716 = !DILocation(line: 3561, column: 10, scope: !15708)
!15717 = !DILocation(line: 3561, column: 20, scope: !15708)
!15718 = !DILocation(line: 3561, column: 25, scope: !15708)
!15719 = !DILocation(line: 3560, column: 3, scope: !15708)
!15720 = !DILocation(line: 3564, column: 14, scope: !15708)
!15721 = !DILocation(line: 3565, column: 7, scope: !15708)
!15722 = !DILocation(line: 3565, column: 10, scope: !15708)
!15723 = !DILocation(line: 3565, column: 22, scope: !15708)
!15724 = !DILocation(line: 3565, column: 25, scope: !15708)
!15725 = !DILocation(line: 3565, column: 20, scope: !15708)
!15726 = !DILocation(line: 3566, column: 7, scope: !15708)
!15727 = !DILocation(line: 3564, column: 3, scope: !15708)
!15728 = !DILocation(line: 3568, column: 14, scope: !15708)
!15729 = !DILocation(line: 3569, column: 8, scope: !15708)
!15730 = !DILocation(line: 3569, column: 11, scope: !15708)
!15731 = !DILocation(line: 3569, column: 21, scope: !15708)
!15732 = !DILocation(line: 3569, column: 28, scope: !15708)
!15733 = !DILocation(line: 3569, column: 31, scope: !15708)
!15734 = !DILocation(line: 3569, column: 26, scope: !15708)
!15735 = !DILocation(line: 3570, column: 7, scope: !15708)
!15736 = !DILocation(line: 3568, column: 3, scope: !15708)
!15737 = !DILocation(line: 3572, column: 14, scope: !15708)
!15738 = !DILocation(line: 3573, column: 8, scope: !15708)
!15739 = !DILocation(line: 3573, column: 11, scope: !15708)
!15740 = !DILocation(line: 3573, column: 21, scope: !15708)
!15741 = !DILocation(line: 3573, column: 28, scope: !15708)
!15742 = !DILocation(line: 3573, column: 31, scope: !15708)
!15743 = !DILocation(line: 3573, column: 26, scope: !15708)
!15744 = !DILocation(line: 3574, column: 7, scope: !15708)
!15745 = !DILocation(line: 3572, column: 3, scope: !15708)
!15746 = !DILocation(line: 3575, column: 2, scope: !15708)
!15747 = !DILocation(line: 3576, column: 1, scope: !15652)
!15748 = distinct !DISubprogram(name: "asc_prt_asc_board_info", scope: !3, file: !3, line: 3213, type: !14728, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!15749 = !DILocalVariable(name: "m", arg: 1, scope: !15748, file: !3, line: 3213, type: !701)
!15750 = !DILocation(line: 3213, column: 53, scope: !15748)
!15751 = !DILocalVariable(name: "shost", arg: 2, scope: !15748, file: !3, line: 3213, type: !4796)
!15752 = !DILocation(line: 3213, column: 74, scope: !15748)
!15753 = !DILocalVariable(name: "boardp", scope: !15748, file: !3, line: 3215, type: !190)
!15754 = !DILocation(line: 3215, column: 20, scope: !15748)
!15755 = !DILocation(line: 3215, column: 40, scope: !15748)
!15756 = !DILocation(line: 3215, column: 29, scope: !15748)
!15757 = !DILocalVariable(name: "chip_scsi_id", scope: !15748, file: !3, line: 3216, type: !245)
!15758 = !DILocation(line: 3216, column: 6, scope: !15748)
!15759 = !DILocalVariable(name: "v", scope: !15748, file: !3, line: 3217, type: !6375)
!15760 = !DILocation(line: 3217, column: 15, scope: !15748)
!15761 = !DILocalVariable(name: "c", scope: !15748, file: !3, line: 3218, type: !5321)
!15762 = !DILocation(line: 3218, column: 15, scope: !15748)
!15763 = !DILocalVariable(name: "i", scope: !15748, file: !3, line: 3219, type: !245)
!15764 = !DILocation(line: 3219, column: 6, scope: !15748)
!15765 = !DILocalVariable(name: "renegotiate", scope: !15748, file: !3, line: 3220, type: !245)
!15766 = !DILocation(line: 3220, column: 6, scope: !15748)
!15767 = !DILocation(line: 3222, column: 7, scope: !15748)
!15768 = !DILocation(line: 3222, column: 15, scope: !15748)
!15769 = !DILocation(line: 3222, column: 23, scope: !15748)
!15770 = !DILocation(line: 3222, column: 4, scope: !15748)
!15771 = !DILocation(line: 3223, column: 7, scope: !15748)
!15772 = !DILocation(line: 3223, column: 15, scope: !15748)
!15773 = !DILocation(line: 3223, column: 23, scope: !15748)
!15774 = !DILocation(line: 3223, column: 4, scope: !15748)
!15775 = !DILocation(line: 3224, column: 17, scope: !15748)
!15776 = !DILocation(line: 3224, column: 20, scope: !15748)
!15777 = !DILocation(line: 3224, column: 15, scope: !15748)
!15778 = !DILocation(line: 3226, column: 13, scope: !15748)
!15779 = !DILocation(line: 3228, column: 6, scope: !15748)
!15780 = !DILocation(line: 3228, column: 13, scope: !15748)
!15781 = !DILocation(line: 3226, column: 2, scope: !15748)
!15782 = !DILocation(line: 3230, column: 13, scope: !15748)
!15783 = !DILocation(line: 3232, column: 6, scope: !15748)
!15784 = !DILocation(line: 3232, column: 9, scope: !15748)
!15785 = !DILocation(line: 3232, column: 23, scope: !15748)
!15786 = !DILocation(line: 3232, column: 26, scope: !15748)
!15787 = !DILocation(line: 3232, column: 38, scope: !15748)
!15788 = !DILocation(line: 3232, column: 41, scope: !15748)
!15789 = !DILocation(line: 3233, column: 6, scope: !15748)
!15790 = !DILocation(line: 3233, column: 9, scope: !15748)
!15791 = !DILocation(line: 3230, column: 2, scope: !15748)
!15792 = !DILocation(line: 3236, column: 13, scope: !15748)
!15793 = !DILocation(line: 3237, column: 38, scope: !15748)
!15794 = !DILocation(line: 3237, column: 41, scope: !15748)
!15795 = !DILocation(line: 3236, column: 2, scope: !15748)
!15796 = !DILocation(line: 3239, column: 11, scope: !15748)
!15797 = !DILocation(line: 3239, column: 2, scope: !15748)
!15798 = !DILocation(line: 3240, column: 9, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3240, column: 2)
!15800 = !DILocation(line: 3240, column: 7, scope: !15799)
!15801 = !DILocation(line: 3240, column: 14, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15799, file: !3, line: 3240, column: 2)
!15803 = !DILocation(line: 3240, column: 16, scope: !15802)
!15804 = !DILocation(line: 3240, column: 2, scope: !15799)
!15805 = !DILocation(line: 3241, column: 8, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !3, line: 3241, column: 7)
!15807 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 3240, column: 37)
!15808 = !DILocation(line: 3241, column: 24, scope: !15806)
!15809 = !DILocation(line: 3241, column: 21, scope: !15806)
!15810 = !DILocation(line: 3241, column: 27, scope: !15806)
!15811 = !DILocation(line: 3242, column: 9, scope: !15806)
!15812 = !DILocation(line: 3242, column: 17, scope: !15806)
!15813 = !DILocation(line: 3242, column: 32, scope: !15806)
!15814 = !DILocation(line: 3242, column: 30, scope: !15806)
!15815 = !DILocation(line: 3242, column: 55, scope: !15806)
!15816 = !DILocation(line: 3241, column: 7, scope: !15807)
!15817 = !DILocation(line: 3243, column: 4, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15806, file: !3, line: 3242, column: 62)
!15819 = !DILocation(line: 3245, column: 14, scope: !15807)
!15820 = !DILocation(line: 3246, column: 7, scope: !15807)
!15821 = !DILocation(line: 3247, column: 8, scope: !15807)
!15822 = !DILocation(line: 3247, column: 11, scope: !15807)
!15823 = !DILocation(line: 3247, column: 28, scope: !15807)
!15824 = !DILocation(line: 3247, column: 26, scope: !15807)
!15825 = !DILocation(line: 3247, column: 7, scope: !15807)
!15826 = !DILocation(line: 3245, column: 3, scope: !15807)
!15827 = !DILocation(line: 3248, column: 2, scope: !15807)
!15828 = !DILocation(line: 3240, column: 33, scope: !15802)
!15829 = !DILocation(line: 3240, column: 2, scope: !15802)
!15830 = distinct !{!15830, !15804, !15831}
!15831 = !DILocation(line: 3248, column: 2, scope: !15799)
!15832 = !DILocation(line: 3251, column: 11, scope: !15748)
!15833 = !DILocation(line: 3251, column: 2, scope: !15748)
!15834 = !DILocation(line: 3252, column: 9, scope: !15835)
!15835 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3252, column: 2)
!15836 = !DILocation(line: 3252, column: 7, scope: !15835)
!15837 = !DILocation(line: 3252, column: 14, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15835, file: !3, line: 3252, column: 2)
!15839 = !DILocation(line: 3252, column: 16, scope: !15838)
!15840 = !DILocation(line: 3252, column: 2, scope: !15835)
!15841 = !DILocation(line: 3253, column: 8, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !3, line: 3253, column: 7)
!15843 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 3252, column: 37)
!15844 = !DILocation(line: 3253, column: 24, scope: !15842)
!15845 = !DILocation(line: 3253, column: 21, scope: !15842)
!15846 = !DILocation(line: 3253, column: 27, scope: !15842)
!15847 = !DILocation(line: 3254, column: 9, scope: !15842)
!15848 = !DILocation(line: 3254, column: 17, scope: !15842)
!15849 = !DILocation(line: 3254, column: 32, scope: !15842)
!15850 = !DILocation(line: 3254, column: 30, scope: !15842)
!15851 = !DILocation(line: 3254, column: 55, scope: !15842)
!15852 = !DILocation(line: 3253, column: 7, scope: !15843)
!15853 = !DILocation(line: 3255, column: 4, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15842, file: !3, line: 3254, column: 62)
!15855 = !DILocation(line: 3257, column: 14, scope: !15843)
!15856 = !DILocation(line: 3257, column: 27, scope: !15843)
!15857 = !DILocation(line: 3257, column: 30, scope: !15843)
!15858 = !DILocation(line: 3257, column: 33, scope: !15843)
!15859 = !DILocation(line: 3257, column: 45, scope: !15843)
!15860 = !DILocation(line: 3257, column: 3, scope: !15843)
!15861 = !DILocation(line: 3258, column: 2, scope: !15843)
!15862 = !DILocation(line: 3252, column: 33, scope: !15838)
!15863 = !DILocation(line: 3252, column: 2, scope: !15838)
!15864 = distinct !{!15864, !15840, !15865}
!15865 = !DILocation(line: 3258, column: 2, scope: !15835)
!15866 = !DILocation(line: 3261, column: 11, scope: !15748)
!15867 = !DILocation(line: 3261, column: 2, scope: !15748)
!15868 = !DILocation(line: 3262, column: 9, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3262, column: 2)
!15870 = !DILocation(line: 3262, column: 7, scope: !15869)
!15871 = !DILocation(line: 3262, column: 14, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15869, file: !3, line: 3262, column: 2)
!15873 = !DILocation(line: 3262, column: 16, scope: !15872)
!15874 = !DILocation(line: 3262, column: 2, scope: !15869)
!15875 = !DILocation(line: 3263, column: 8, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15877, file: !3, line: 3263, column: 7)
!15877 = distinct !DILexicalBlock(scope: !15872, file: !3, line: 3262, column: 37)
!15878 = !DILocation(line: 3263, column: 24, scope: !15876)
!15879 = !DILocation(line: 3263, column: 21, scope: !15876)
!15880 = !DILocation(line: 3263, column: 27, scope: !15876)
!15881 = !DILocation(line: 3264, column: 9, scope: !15876)
!15882 = !DILocation(line: 3264, column: 17, scope: !15876)
!15883 = !DILocation(line: 3264, column: 32, scope: !15876)
!15884 = !DILocation(line: 3264, column: 30, scope: !15876)
!15885 = !DILocation(line: 3264, column: 55, scope: !15876)
!15886 = !DILocation(line: 3263, column: 7, scope: !15877)
!15887 = !DILocation(line: 3265, column: 4, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15876, file: !3, line: 3264, column: 62)
!15889 = !DILocation(line: 3267, column: 14, scope: !15877)
!15890 = !DILocation(line: 3267, column: 27, scope: !15877)
!15891 = !DILocation(line: 3267, column: 30, scope: !15877)
!15892 = !DILocation(line: 3267, column: 33, scope: !15877)
!15893 = !DILocation(line: 3267, column: 45, scope: !15877)
!15894 = !DILocation(line: 3267, column: 3, scope: !15877)
!15895 = !DILocation(line: 3268, column: 2, scope: !15877)
!15896 = !DILocation(line: 3262, column: 33, scope: !15872)
!15897 = !DILocation(line: 3262, column: 2, scope: !15872)
!15898 = distinct !{!15898, !15874, !15899}
!15899 = !DILocation(line: 3268, column: 2, scope: !15869)
!15900 = !DILocation(line: 3271, column: 11, scope: !15748)
!15901 = !DILocation(line: 3271, column: 2, scope: !15748)
!15902 = !DILocation(line: 3272, column: 9, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3272, column: 2)
!15904 = !DILocation(line: 3272, column: 7, scope: !15903)
!15905 = !DILocation(line: 3272, column: 14, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15903, file: !3, line: 3272, column: 2)
!15907 = !DILocation(line: 3272, column: 16, scope: !15906)
!15908 = !DILocation(line: 3272, column: 2, scope: !15903)
!15909 = !DILocation(line: 3273, column: 8, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 3273, column: 7)
!15911 = distinct !DILexicalBlock(scope: !15906, file: !3, line: 3272, column: 37)
!15912 = !DILocation(line: 3273, column: 24, scope: !15910)
!15913 = !DILocation(line: 3273, column: 21, scope: !15910)
!15914 = !DILocation(line: 3273, column: 27, scope: !15910)
!15915 = !DILocation(line: 3274, column: 9, scope: !15910)
!15916 = !DILocation(line: 3274, column: 17, scope: !15910)
!15917 = !DILocation(line: 3274, column: 32, scope: !15910)
!15918 = !DILocation(line: 3274, column: 30, scope: !15910)
!15919 = !DILocation(line: 3274, column: 55, scope: !15910)
!15920 = !DILocation(line: 3273, column: 7, scope: !15911)
!15921 = !DILocation(line: 3275, column: 4, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 3274, column: 62)
!15923 = !DILocation(line: 3277, column: 7, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 3277, column: 7)
!15925 = !DILocation(line: 3277, column: 15, scope: !15924)
!15926 = !DILocation(line: 3277, column: 28, scope: !15924)
!15927 = !DILocation(line: 3277, column: 26, scope: !15924)
!15928 = !DILocation(line: 3277, column: 7, scope: !15911)
!15929 = !DILocation(line: 3278, column: 15, scope: !15924)
!15930 = !DILocation(line: 3279, column: 8, scope: !15924)
!15931 = !DILocation(line: 3279, column: 11, scope: !15924)
!15932 = !DILocation(line: 3279, column: 19, scope: !15924)
!15933 = !DILocation(line: 3279, column: 34, scope: !15924)
!15934 = !DILocation(line: 3278, column: 4, scope: !15924)
!15935 = !DILocation(line: 3281, column: 15, scope: !15924)
!15936 = !DILocation(line: 3281, column: 27, scope: !15924)
!15937 = !DILocation(line: 3281, column: 4, scope: !15924)
!15938 = !DILocation(line: 3282, column: 2, scope: !15911)
!15939 = !DILocation(line: 3272, column: 33, scope: !15906)
!15940 = !DILocation(line: 3272, column: 2, scope: !15906)
!15941 = distinct !{!15941, !15908, !15942}
!15942 = !DILocation(line: 3282, column: 2, scope: !15903)
!15943 = !DILocation(line: 3284, column: 11, scope: !15748)
!15944 = !DILocation(line: 3284, column: 2, scope: !15748)
!15945 = !DILocation(line: 3285, column: 9, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3285, column: 2)
!15947 = !DILocation(line: 3285, column: 7, scope: !15946)
!15948 = !DILocation(line: 3285, column: 14, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15946, file: !3, line: 3285, column: 2)
!15950 = !DILocation(line: 3285, column: 16, scope: !15949)
!15951 = !DILocation(line: 3285, column: 2, scope: !15946)
!15952 = !DILocation(line: 3286, column: 8, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15954, file: !3, line: 3286, column: 7)
!15954 = distinct !DILexicalBlock(scope: !15949, file: !3, line: 3285, column: 37)
!15955 = !DILocation(line: 3286, column: 24, scope: !15953)
!15956 = !DILocation(line: 3286, column: 21, scope: !15953)
!15957 = !DILocation(line: 3286, column: 27, scope: !15953)
!15958 = !DILocation(line: 3287, column: 9, scope: !15953)
!15959 = !DILocation(line: 3287, column: 17, scope: !15953)
!15960 = !DILocation(line: 3287, column: 32, scope: !15953)
!15961 = !DILocation(line: 3287, column: 30, scope: !15953)
!15962 = !DILocation(line: 3287, column: 55, scope: !15953)
!15963 = !DILocation(line: 3286, column: 7, scope: !15954)
!15964 = !DILocation(line: 3288, column: 4, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15953, file: !3, line: 3287, column: 62)
!15966 = !DILocation(line: 3290, column: 14, scope: !15954)
!15967 = !DILocation(line: 3291, column: 7, scope: !15954)
!15968 = !DILocation(line: 3292, column: 8, scope: !15954)
!15969 = !DILocation(line: 3292, column: 11, scope: !15954)
!15970 = !DILocation(line: 3292, column: 23, scope: !15954)
!15971 = !DILocation(line: 3292, column: 21, scope: !15954)
!15972 = !DILocation(line: 3292, column: 7, scope: !15954)
!15973 = !DILocation(line: 3290, column: 3, scope: !15954)
!15974 = !DILocation(line: 3293, column: 2, scope: !15954)
!15975 = !DILocation(line: 3285, column: 33, scope: !15949)
!15976 = !DILocation(line: 3285, column: 2, scope: !15949)
!15977 = distinct !{!15977, !15951, !15978}
!15978 = !DILocation(line: 3293, column: 2, scope: !15946)
!15979 = !DILocation(line: 3294, column: 11, scope: !15748)
!15980 = !DILocation(line: 3294, column: 2, scope: !15748)
!15981 = !DILocation(line: 3296, column: 9, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3296, column: 2)
!15983 = !DILocation(line: 3296, column: 7, scope: !15982)
!15984 = !DILocation(line: 3296, column: 14, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15982, file: !3, line: 3296, column: 2)
!15986 = !DILocation(line: 3296, column: 16, scope: !15985)
!15987 = !DILocation(line: 3296, column: 2, scope: !15982)
!15988 = !DILocalVariable(name: "syn_period_ix", scope: !15989, file: !3, line: 3297, type: !5245)
!15989 = distinct !DILexicalBlock(scope: !15985, file: !3, line: 3296, column: 37)
!15990 = !DILocation(line: 3297, column: 9, scope: !15989)
!15991 = !DILocation(line: 3299, column: 8, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15989, file: !3, line: 3299, column: 7)
!15993 = !DILocation(line: 3299, column: 24, scope: !15992)
!15994 = !DILocation(line: 3299, column: 21, scope: !15992)
!15995 = !DILocation(line: 3299, column: 27, scope: !15992)
!15996 = !DILocation(line: 3300, column: 9, scope: !15992)
!15997 = !DILocation(line: 3300, column: 17, scope: !15992)
!15998 = !DILocation(line: 3300, column: 32, scope: !15992)
!15999 = !DILocation(line: 3300, column: 30, scope: !15992)
!16000 = !DILocation(line: 3300, column: 55, scope: !15992)
!16001 = !DILocation(line: 3300, column: 61, scope: !15992)
!16002 = !DILocation(line: 3301, column: 9, scope: !15992)
!16003 = !DILocation(line: 3301, column: 12, scope: !15992)
!16004 = !DILocation(line: 3301, column: 24, scope: !15992)
!16005 = !DILocation(line: 3301, column: 22, scope: !15992)
!16006 = !DILocation(line: 3301, column: 47, scope: !15992)
!16007 = !DILocation(line: 3299, column: 7, scope: !15989)
!16008 = !DILocation(line: 3302, column: 4, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !15992, file: !3, line: 3301, column: 54)
!16010 = !DILocation(line: 3305, column: 14, scope: !15989)
!16011 = !DILocation(line: 3305, column: 26, scope: !15989)
!16012 = !DILocation(line: 3305, column: 3, scope: !15989)
!16013 = !DILocation(line: 3307, column: 8, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !15989, file: !3, line: 3307, column: 7)
!16015 = !DILocation(line: 3307, column: 16, scope: !16014)
!16016 = !DILocation(line: 3307, column: 26, scope: !16014)
!16017 = !DILocation(line: 3307, column: 29, scope: !16014)
!16018 = !DILocation(line: 3307, column: 51, scope: !16014)
!16019 = !DILocation(line: 3307, column: 7, scope: !15989)
!16020 = !DILocation(line: 3308, column: 13, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16014, file: !3, line: 3307, column: 57)
!16022 = !DILocation(line: 3308, column: 4, scope: !16021)
!16023 = !DILocation(line: 3309, column: 3, scope: !16021)
!16024 = !DILocation(line: 3311, column: 9, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16014, file: !3, line: 3309, column: 10)
!16026 = !DILocation(line: 3311, column: 17, scope: !16025)
!16027 = !DILocation(line: 3311, column: 27, scope: !16025)
!16028 = !DILocation(line: 3311, column: 30, scope: !16025)
!16029 = !DILocation(line: 3311, column: 39, scope: !16025)
!16030 = !DILocation(line: 3311, column: 42, scope: !16025)
!16031 = !DILocation(line: 3311, column: 57, scope: !16025)
!16032 = !DILocation(line: 3311, column: 36, scope: !16025)
!16033 = !DILocation(line: 3311, column: 8, scope: !16025)
!16034 = !DILocation(line: 3310, column: 18, scope: !16025)
!16035 = !DILocation(line: 3314, column: 15, scope: !16025)
!16036 = !DILocation(line: 3316, column: 8, scope: !16025)
!16037 = !DILocation(line: 3316, column: 11, scope: !16025)
!16038 = !DILocation(line: 3316, column: 27, scope: !16025)
!16039 = !DILocation(line: 3317, column: 14, scope: !16025)
!16040 = !DILocation(line: 3317, column: 17, scope: !16025)
!16041 = !DILocation(line: 3317, column: 33, scope: !16025)
!16042 = !DILocation(line: 3317, column: 12, scope: !16025)
!16043 = !DILocation(line: 3318, column: 8, scope: !16025)
!16044 = !DILocation(line: 3314, column: 4, scope: !16025)
!16045 = !DILocation(line: 3321, column: 15, scope: !16025)
!16046 = !DILocation(line: 3322, column: 8, scope: !16025)
!16047 = !DILocation(line: 3322, column: 16, scope: !16025)
!16048 = !DILocation(line: 3322, column: 26, scope: !16025)
!16049 = !DILocation(line: 3322, column: 29, scope: !16025)
!16050 = !DILocation(line: 3321, column: 4, scope: !16025)
!16051 = !DILocation(line: 3325, column: 8, scope: !16052)
!16052 = distinct !DILexicalBlock(scope: !15989, file: !3, line: 3325, column: 7)
!16053 = !DILocation(line: 3325, column: 11, scope: !16052)
!16054 = !DILocation(line: 3325, column: 23, scope: !16052)
!16055 = !DILocation(line: 3325, column: 21, scope: !16052)
!16056 = !DILocation(line: 3325, column: 46, scope: !16052)
!16057 = !DILocation(line: 3325, column: 7, scope: !15989)
!16058 = !DILocation(line: 3326, column: 13, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16052, file: !3, line: 3325, column: 52)
!16060 = !DILocation(line: 3326, column: 4, scope: !16059)
!16061 = !DILocation(line: 3327, column: 16, scope: !16059)
!16062 = !DILocation(line: 3328, column: 3, scope: !16059)
!16063 = !DILocation(line: 3329, column: 13, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16052, file: !3, line: 3328, column: 10)
!16065 = !DILocation(line: 3329, column: 4, scope: !16064)
!16066 = !DILocation(line: 3331, column: 2, scope: !15989)
!16067 = !DILocation(line: 3296, column: 33, scope: !15985)
!16068 = !DILocation(line: 3296, column: 2, scope: !15985)
!16069 = distinct !{!16069, !15987, !16070}
!16070 = !DILocation(line: 3331, column: 2, scope: !15982)
!16071 = !DILocation(line: 3333, column: 6, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3333, column: 6)
!16073 = !DILocation(line: 3333, column: 6, scope: !15748)
!16074 = !DILocation(line: 3334, column: 12, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 3333, column: 19)
!16076 = !DILocation(line: 3334, column: 3, scope: !16075)
!16077 = !DILocation(line: 3335, column: 2, scope: !16075)
!16078 = !DILocation(line: 3336, column: 1, scope: !15748)
!16079 = distinct !DISubprogram(name: "asc_prt_adv_board_info", scope: !3, file: !3, line: 3343, type: !14728, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!16080 = !DILocalVariable(name: "m", arg: 1, scope: !16079, file: !3, line: 3343, type: !701)
!16081 = !DILocation(line: 3343, column: 53, scope: !16079)
!16082 = !DILocalVariable(name: "shost", arg: 2, scope: !16079, file: !3, line: 3343, type: !4796)
!16083 = !DILocation(line: 3343, column: 74, scope: !16079)
!16084 = !DILocalVariable(name: "boardp", scope: !16079, file: !3, line: 3345, type: !190)
!16085 = !DILocation(line: 3345, column: 20, scope: !16079)
!16086 = !DILocation(line: 3345, column: 40, scope: !16079)
!16087 = !DILocation(line: 3345, column: 29, scope: !16079)
!16088 = !DILocalVariable(name: "i", scope: !16079, file: !3, line: 3346, type: !245)
!16089 = !DILocation(line: 3346, column: 6, scope: !16079)
!16090 = !DILocalVariable(name: "v", scope: !16079, file: !3, line: 3347, type: !6378)
!16091 = !DILocation(line: 3347, column: 15, scope: !16079)
!16092 = !DILocalVariable(name: "c", scope: !16079, file: !3, line: 3348, type: !5391)
!16093 = !DILocation(line: 3348, column: 15, scope: !16079)
!16094 = !DILocalVariable(name: "iop_base", scope: !16079, file: !3, line: 3349, type: !334)
!16095 = !DILocation(line: 3349, column: 14, scope: !16079)
!16096 = !DILocalVariable(name: "chip_scsi_id", scope: !16079, file: !3, line: 3350, type: !5240)
!16097 = !DILocation(line: 3350, column: 9, scope: !16079)
!16098 = !DILocalVariable(name: "lramword", scope: !16079, file: !3, line: 3351, type: !5240)
!16099 = !DILocation(line: 3351, column: 9, scope: !16079)
!16100 = !DILocalVariable(name: "lrambyte", scope: !16079, file: !3, line: 3352, type: !5245)
!16101 = !DILocation(line: 3352, column: 8, scope: !16079)
!16102 = !DILocalVariable(name: "tagqng_able", scope: !16079, file: !3, line: 3353, type: !5240)
!16103 = !DILocation(line: 3353, column: 9, scope: !16079)
!16104 = !DILocalVariable(name: "sdtr_able", scope: !16079, file: !3, line: 3354, type: !5240)
!16105 = !DILocation(line: 3354, column: 9, scope: !16079)
!16106 = !DILocalVariable(name: "wdtr_able", scope: !16079, file: !3, line: 3354, type: !5240)
!16107 = !DILocation(line: 3354, column: 20, scope: !16079)
!16108 = !DILocalVariable(name: "wdtr_done", scope: !16079, file: !3, line: 3355, type: !5240)
!16109 = !DILocation(line: 3355, column: 9, scope: !16079)
!16110 = !DILocalVariable(name: "sdtr_done", scope: !16079, file: !3, line: 3355, type: !5240)
!16111 = !DILocation(line: 3355, column: 20, scope: !16079)
!16112 = !DILocalVariable(name: "period", scope: !16079, file: !3, line: 3356, type: !5240)
!16113 = !DILocation(line: 3356, column: 9, scope: !16079)
!16114 = !DILocalVariable(name: "renegotiate", scope: !16079, file: !3, line: 3357, type: !245)
!16115 = !DILocation(line: 3357, column: 6, scope: !16079)
!16116 = !DILocation(line: 3359, column: 7, scope: !16079)
!16117 = !DILocation(line: 3359, column: 15, scope: !16079)
!16118 = !DILocation(line: 3359, column: 23, scope: !16079)
!16119 = !DILocation(line: 3359, column: 4, scope: !16079)
!16120 = !DILocation(line: 3360, column: 7, scope: !16079)
!16121 = !DILocation(line: 3360, column: 15, scope: !16079)
!16122 = !DILocation(line: 3360, column: 23, scope: !16079)
!16123 = !DILocation(line: 3360, column: 4, scope: !16079)
!16124 = !DILocation(line: 3361, column: 13, scope: !16079)
!16125 = !DILocation(line: 3361, column: 16, scope: !16079)
!16126 = !DILocation(line: 3361, column: 11, scope: !16079)
!16127 = !DILocation(line: 3362, column: 17, scope: !16079)
!16128 = !DILocation(line: 3362, column: 20, scope: !16079)
!16129 = !DILocation(line: 3362, column: 15, scope: !16079)
!16130 = !DILocation(line: 3364, column: 13, scope: !16079)
!16131 = !DILocation(line: 3366, column: 6, scope: !16079)
!16132 = !DILocation(line: 3366, column: 13, scope: !16079)
!16133 = !DILocation(line: 3364, column: 2, scope: !16079)
!16134 = !DILocation(line: 3368, column: 13, scope: !16079)
!16135 = !DILocation(line: 3370, column: 21, scope: !16079)
!16136 = !DILocation(line: 3370, column: 24, scope: !16079)
!16137 = !DILocation(line: 3370, column: 6, scope: !16079)
!16138 = !DILocation(line: 3371, column: 6, scope: !16079)
!16139 = !DILocation(line: 3371, column: 51, scope: !16079)
!16140 = !DILocation(line: 3372, column: 6, scope: !16079)
!16141 = !DILocation(line: 3372, column: 9, scope: !16079)
!16142 = !DILocation(line: 3368, column: 2, scope: !16079)
!16143 = !DILocation(line: 3374, column: 13, scope: !16079)
!16144 = !DILocation(line: 3375, column: 30, scope: !16079)
!16145 = !DILocation(line: 3375, column: 33, scope: !16079)
!16146 = !DILocation(line: 3376, column: 6, scope: !16079)
!16147 = !DILocation(line: 3376, column: 9, scope: !16079)
!16148 = !DILocation(line: 3376, column: 21, scope: !16079)
!16149 = !DILocation(line: 3376, column: 24, scope: !16079)
!16150 = !DILocation(line: 3374, column: 2, scope: !16079)
!16151 = !DILocation(line: 3378, column: 2, scope: !16079)
!16152 = !DILocation(line: 3378, column: 2, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3378, column: 2)
!16154 = !DILocation(line: 3379, column: 11, scope: !16079)
!16155 = !DILocation(line: 3379, column: 2, scope: !16079)
!16156 = !DILocation(line: 3380, column: 9, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3380, column: 2)
!16158 = !DILocation(line: 3380, column: 7, scope: !16157)
!16159 = !DILocation(line: 3380, column: 14, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16157, file: !3, line: 3380, column: 2)
!16161 = !DILocation(line: 3380, column: 16, scope: !16160)
!16162 = !DILocation(line: 3380, column: 2, scope: !16157)
!16163 = !DILocation(line: 3381, column: 8, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 3381, column: 7)
!16165 = distinct !DILexicalBlock(scope: !16160, file: !3, line: 3380, column: 37)
!16166 = !DILocation(line: 3381, column: 24, scope: !16164)
!16167 = !DILocation(line: 3381, column: 21, scope: !16164)
!16168 = !DILocation(line: 3381, column: 27, scope: !16164)
!16169 = !DILocation(line: 3382, column: 9, scope: !16164)
!16170 = !DILocation(line: 3382, column: 17, scope: !16164)
!16171 = !DILocation(line: 3382, column: 32, scope: !16164)
!16172 = !DILocation(line: 3382, column: 30, scope: !16164)
!16173 = !DILocation(line: 3382, column: 55, scope: !16164)
!16174 = !DILocation(line: 3381, column: 7, scope: !16165)
!16175 = !DILocation(line: 3383, column: 4, scope: !16176)
!16176 = distinct !DILexicalBlock(scope: !16164, file: !3, line: 3382, column: 62)
!16177 = !DILocation(line: 3386, column: 14, scope: !16165)
!16178 = !DILocation(line: 3387, column: 7, scope: !16165)
!16179 = !DILocation(line: 3388, column: 8, scope: !16165)
!16180 = !DILocation(line: 3388, column: 22, scope: !16165)
!16181 = !DILocation(line: 3388, column: 20, scope: !16165)
!16182 = !DILocation(line: 3388, column: 7, scope: !16165)
!16183 = !DILocation(line: 3386, column: 3, scope: !16165)
!16184 = !DILocation(line: 3389, column: 2, scope: !16165)
!16185 = !DILocation(line: 3380, column: 33, scope: !16160)
!16186 = !DILocation(line: 3380, column: 2, scope: !16160)
!16187 = distinct !{!16187, !16162, !16188}
!16188 = !DILocation(line: 3389, column: 2, scope: !16157)
!16189 = !DILocation(line: 3391, column: 11, scope: !16079)
!16190 = !DILocation(line: 3391, column: 2, scope: !16079)
!16191 = !DILocation(line: 3392, column: 9, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3392, column: 2)
!16193 = !DILocation(line: 3392, column: 7, scope: !16192)
!16194 = !DILocation(line: 3392, column: 14, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16192, file: !3, line: 3392, column: 2)
!16196 = !DILocation(line: 3392, column: 16, scope: !16195)
!16197 = !DILocation(line: 3392, column: 2, scope: !16192)
!16198 = !DILocation(line: 3393, column: 8, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16200, file: !3, line: 3393, column: 7)
!16200 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 3392, column: 37)
!16201 = !DILocation(line: 3393, column: 24, scope: !16199)
!16202 = !DILocation(line: 3393, column: 21, scope: !16199)
!16203 = !DILocation(line: 3393, column: 27, scope: !16199)
!16204 = !DILocation(line: 3394, column: 9, scope: !16199)
!16205 = !DILocation(line: 3394, column: 17, scope: !16199)
!16206 = !DILocation(line: 3394, column: 32, scope: !16199)
!16207 = !DILocation(line: 3394, column: 30, scope: !16199)
!16208 = !DILocation(line: 3394, column: 55, scope: !16199)
!16209 = !DILocation(line: 3393, column: 7, scope: !16200)
!16210 = !DILocation(line: 3395, column: 4, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16199, file: !3, line: 3394, column: 62)
!16212 = !DILocation(line: 3398, column: 3, scope: !16200)
!16213 = !DILocation(line: 3398, column: 3, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16200, file: !3, line: 3398, column: 3)
!16215 = !DILocation(line: 3401, column: 14, scope: !16200)
!16216 = !DILocation(line: 3401, column: 27, scope: !16200)
!16217 = !DILocation(line: 3401, column: 30, scope: !16200)
!16218 = !DILocation(line: 3401, column: 3, scope: !16200)
!16219 = !DILocation(line: 3402, column: 2, scope: !16200)
!16220 = !DILocation(line: 3392, column: 33, scope: !16195)
!16221 = !DILocation(line: 3392, column: 2, scope: !16195)
!16222 = distinct !{!16222, !16197, !16223}
!16223 = !DILocation(line: 3402, column: 2, scope: !16192)
!16224 = !DILocation(line: 3404, column: 11, scope: !16079)
!16225 = !DILocation(line: 3404, column: 2, scope: !16079)
!16226 = !DILocation(line: 3405, column: 9, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3405, column: 2)
!16228 = !DILocation(line: 3405, column: 7, scope: !16227)
!16229 = !DILocation(line: 3405, column: 14, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16227, file: !3, line: 3405, column: 2)
!16231 = !DILocation(line: 3405, column: 16, scope: !16230)
!16232 = !DILocation(line: 3405, column: 2, scope: !16227)
!16233 = !DILocation(line: 3406, column: 8, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16235, file: !3, line: 3406, column: 7)
!16235 = distinct !DILexicalBlock(scope: !16230, file: !3, line: 3405, column: 37)
!16236 = !DILocation(line: 3406, column: 24, scope: !16234)
!16237 = !DILocation(line: 3406, column: 21, scope: !16234)
!16238 = !DILocation(line: 3406, column: 27, scope: !16234)
!16239 = !DILocation(line: 3407, column: 9, scope: !16234)
!16240 = !DILocation(line: 3407, column: 17, scope: !16234)
!16241 = !DILocation(line: 3407, column: 32, scope: !16234)
!16242 = !DILocation(line: 3407, column: 30, scope: !16234)
!16243 = !DILocation(line: 3407, column: 55, scope: !16234)
!16244 = !DILocation(line: 3406, column: 7, scope: !16235)
!16245 = !DILocation(line: 3408, column: 4, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16234, file: !3, line: 3407, column: 62)
!16247 = !DILocation(line: 3411, column: 3, scope: !16235)
!16248 = !DILocation(line: 3411, column: 3, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16235, file: !3, line: 3411, column: 3)
!16250 = !DILocation(line: 3414, column: 14, scope: !16235)
!16251 = !DILocation(line: 3414, column: 27, scope: !16235)
!16252 = !DILocation(line: 3414, column: 30, scope: !16235)
!16253 = !DILocation(line: 3414, column: 3, scope: !16235)
!16254 = !DILocation(line: 3415, column: 2, scope: !16235)
!16255 = !DILocation(line: 3405, column: 33, scope: !16230)
!16256 = !DILocation(line: 3405, column: 2, scope: !16230)
!16257 = distinct !{!16257, !16232, !16258}
!16258 = !DILocation(line: 3415, column: 2, scope: !16227)
!16259 = !DILocation(line: 3416, column: 11, scope: !16079)
!16260 = !DILocation(line: 3416, column: 2, scope: !16079)
!16261 = !DILocation(line: 3418, column: 2, scope: !16079)
!16262 = !DILocation(line: 3418, column: 2, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3418, column: 2)
!16264 = !DILocation(line: 3419, column: 11, scope: !16079)
!16265 = !DILocation(line: 3419, column: 2, scope: !16079)
!16266 = !DILocation(line: 3420, column: 9, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3420, column: 2)
!16268 = !DILocation(line: 3420, column: 7, scope: !16267)
!16269 = !DILocation(line: 3420, column: 14, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 3420, column: 2)
!16271 = !DILocation(line: 3420, column: 16, scope: !16270)
!16272 = !DILocation(line: 3420, column: 2, scope: !16267)
!16273 = !DILocation(line: 3421, column: 8, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16275, file: !3, line: 3421, column: 7)
!16275 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3420, column: 37)
!16276 = !DILocation(line: 3421, column: 24, scope: !16274)
!16277 = !DILocation(line: 3421, column: 21, scope: !16274)
!16278 = !DILocation(line: 3421, column: 27, scope: !16274)
!16279 = !DILocation(line: 3422, column: 9, scope: !16274)
!16280 = !DILocation(line: 3422, column: 17, scope: !16274)
!16281 = !DILocation(line: 3422, column: 32, scope: !16274)
!16282 = !DILocation(line: 3422, column: 30, scope: !16274)
!16283 = !DILocation(line: 3422, column: 55, scope: !16274)
!16284 = !DILocation(line: 3421, column: 7, scope: !16275)
!16285 = !DILocation(line: 3423, column: 4, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16274, file: !3, line: 3422, column: 62)
!16287 = !DILocation(line: 3426, column: 14, scope: !16275)
!16288 = !DILocation(line: 3427, column: 7, scope: !16275)
!16289 = !DILocation(line: 3428, column: 8, scope: !16275)
!16290 = !DILocation(line: 3428, column: 20, scope: !16275)
!16291 = !DILocation(line: 3428, column: 18, scope: !16275)
!16292 = !DILocation(line: 3428, column: 7, scope: !16275)
!16293 = !DILocation(line: 3426, column: 3, scope: !16275)
!16294 = !DILocation(line: 3429, column: 2, scope: !16275)
!16295 = !DILocation(line: 3420, column: 33, scope: !16270)
!16296 = !DILocation(line: 3420, column: 2, scope: !16270)
!16297 = distinct !{!16297, !16272, !16298}
!16298 = !DILocation(line: 3429, column: 2, scope: !16267)
!16299 = !DILocation(line: 3430, column: 11, scope: !16079)
!16300 = !DILocation(line: 3430, column: 2, scope: !16079)
!16301 = !DILocation(line: 3432, column: 2, scope: !16079)
!16302 = !DILocation(line: 3432, column: 2, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3432, column: 2)
!16304 = !DILocation(line: 3433, column: 11, scope: !16079)
!16305 = !DILocation(line: 3433, column: 2, scope: !16079)
!16306 = !DILocation(line: 3434, column: 9, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3434, column: 2)
!16308 = !DILocation(line: 3434, column: 7, scope: !16307)
!16309 = !DILocation(line: 3434, column: 14, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 3434, column: 2)
!16311 = !DILocation(line: 3434, column: 16, scope: !16310)
!16312 = !DILocation(line: 3434, column: 2, scope: !16307)
!16313 = !DILocation(line: 3435, column: 8, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 3435, column: 7)
!16315 = distinct !DILexicalBlock(scope: !16310, file: !3, line: 3434, column: 37)
!16316 = !DILocation(line: 3435, column: 24, scope: !16314)
!16317 = !DILocation(line: 3435, column: 21, scope: !16314)
!16318 = !DILocation(line: 3435, column: 27, scope: !16314)
!16319 = !DILocation(line: 3436, column: 9, scope: !16314)
!16320 = !DILocation(line: 3436, column: 17, scope: !16314)
!16321 = !DILocation(line: 3436, column: 32, scope: !16314)
!16322 = !DILocation(line: 3436, column: 30, scope: !16314)
!16323 = !DILocation(line: 3436, column: 55, scope: !16314)
!16324 = !DILocation(line: 3435, column: 7, scope: !16315)
!16325 = !DILocation(line: 3437, column: 4, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 3436, column: 62)
!16327 = !DILocation(line: 3440, column: 3, scope: !16315)
!16328 = !DILocation(line: 3440, column: 3, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 3440, column: 3)
!16330 = !DILocation(line: 3444, column: 14, scope: !16315)
!16331 = !DILocation(line: 3445, column: 7, scope: !16315)
!16332 = !DILocation(line: 3445, column: 11, scope: !16315)
!16333 = !DILocation(line: 3445, column: 20, scope: !16315)
!16334 = !DILocation(line: 3445, column: 10, scope: !16315)
!16335 = !DILocation(line: 3444, column: 3, scope: !16315)
!16336 = !DILocation(line: 3447, column: 8, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 3447, column: 7)
!16338 = !DILocation(line: 3447, column: 20, scope: !16337)
!16339 = !DILocation(line: 3447, column: 18, scope: !16337)
!16340 = !DILocation(line: 3447, column: 43, scope: !16337)
!16341 = !DILocation(line: 3448, column: 8, scope: !16337)
!16342 = !DILocation(line: 3448, column: 20, scope: !16337)
!16343 = !DILocation(line: 3448, column: 18, scope: !16337)
!16344 = !DILocation(line: 3448, column: 43, scope: !16337)
!16345 = !DILocation(line: 3447, column: 7, scope: !16315)
!16346 = !DILocation(line: 3449, column: 13, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16337, file: !3, line: 3448, column: 49)
!16348 = !DILocation(line: 3449, column: 4, scope: !16347)
!16349 = !DILocation(line: 3450, column: 16, scope: !16347)
!16350 = !DILocation(line: 3451, column: 3, scope: !16347)
!16351 = !DILocation(line: 3452, column: 2, scope: !16315)
!16352 = !DILocation(line: 3434, column: 33, scope: !16310)
!16353 = !DILocation(line: 3434, column: 2, scope: !16310)
!16354 = distinct !{!16354, !16312, !16355}
!16355 = !DILocation(line: 3452, column: 2, scope: !16307)
!16356 = !DILocation(line: 3453, column: 11, scope: !16079)
!16357 = !DILocation(line: 3453, column: 2, scope: !16079)
!16358 = !DILocation(line: 3455, column: 2, scope: !16079)
!16359 = !DILocation(line: 3455, column: 2, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3455, column: 2)
!16361 = !DILocation(line: 3456, column: 11, scope: !16079)
!16362 = !DILocation(line: 3456, column: 2, scope: !16079)
!16363 = !DILocation(line: 3457, column: 9, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3457, column: 2)
!16365 = !DILocation(line: 3457, column: 7, scope: !16364)
!16366 = !DILocation(line: 3457, column: 14, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 3457, column: 2)
!16368 = !DILocation(line: 3457, column: 16, scope: !16367)
!16369 = !DILocation(line: 3457, column: 2, scope: !16364)
!16370 = !DILocation(line: 3458, column: 8, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16372, file: !3, line: 3458, column: 7)
!16372 = distinct !DILexicalBlock(scope: !16367, file: !3, line: 3457, column: 37)
!16373 = !DILocation(line: 3458, column: 24, scope: !16371)
!16374 = !DILocation(line: 3458, column: 21, scope: !16371)
!16375 = !DILocation(line: 3458, column: 27, scope: !16371)
!16376 = !DILocation(line: 3459, column: 9, scope: !16371)
!16377 = !DILocation(line: 3459, column: 17, scope: !16371)
!16378 = !DILocation(line: 3459, column: 32, scope: !16371)
!16379 = !DILocation(line: 3459, column: 30, scope: !16371)
!16380 = !DILocation(line: 3459, column: 55, scope: !16371)
!16381 = !DILocation(line: 3458, column: 7, scope: !16372)
!16382 = !DILocation(line: 3460, column: 4, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16371, file: !3, line: 3459, column: 62)
!16384 = !DILocation(line: 3463, column: 14, scope: !16372)
!16385 = !DILocation(line: 3464, column: 7, scope: !16372)
!16386 = !DILocation(line: 3465, column: 8, scope: !16372)
!16387 = !DILocation(line: 3465, column: 20, scope: !16372)
!16388 = !DILocation(line: 3465, column: 18, scope: !16372)
!16389 = !DILocation(line: 3465, column: 7, scope: !16372)
!16390 = !DILocation(line: 3463, column: 3, scope: !16372)
!16391 = !DILocation(line: 3466, column: 2, scope: !16372)
!16392 = !DILocation(line: 3457, column: 33, scope: !16367)
!16393 = !DILocation(line: 3457, column: 2, scope: !16367)
!16394 = distinct !{!16394, !16369, !16395}
!16395 = !DILocation(line: 3466, column: 2, scope: !16364)
!16396 = !DILocation(line: 3467, column: 11, scope: !16079)
!16397 = !DILocation(line: 3467, column: 2, scope: !16079)
!16398 = !DILocation(line: 3469, column: 2, scope: !16079)
!16399 = !DILocation(line: 3469, column: 2, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3469, column: 2)
!16401 = !DILocation(line: 3470, column: 9, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3470, column: 2)
!16403 = !DILocation(line: 3470, column: 7, scope: !16402)
!16404 = !DILocation(line: 3470, column: 14, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16402, file: !3, line: 3470, column: 2)
!16406 = !DILocation(line: 3470, column: 16, scope: !16405)
!16407 = !DILocation(line: 3470, column: 2, scope: !16402)
!16408 = !DILocation(line: 3472, column: 3, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16405, file: !3, line: 3470, column: 37)
!16410 = !DILocation(line: 3472, column: 3, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16409, file: !3, line: 3472, column: 3)
!16412 = !DILocation(line: 3475, column: 12, scope: !16409)
!16413 = !DILocation(line: 3477, column: 8, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16409, file: !3, line: 3477, column: 7)
!16415 = !DILocation(line: 3477, column: 24, scope: !16414)
!16416 = !DILocation(line: 3477, column: 21, scope: !16414)
!16417 = !DILocation(line: 3477, column: 27, scope: !16414)
!16418 = !DILocation(line: 3478, column: 9, scope: !16414)
!16419 = !DILocation(line: 3478, column: 17, scope: !16414)
!16420 = !DILocation(line: 3478, column: 32, scope: !16414)
!16421 = !DILocation(line: 3478, column: 30, scope: !16414)
!16422 = !DILocation(line: 3478, column: 55, scope: !16414)
!16423 = !DILocation(line: 3478, column: 61, scope: !16414)
!16424 = !DILocation(line: 3479, column: 9, scope: !16414)
!16425 = !DILocation(line: 3479, column: 21, scope: !16414)
!16426 = !DILocation(line: 3479, column: 19, scope: !16414)
!16427 = !DILocation(line: 3479, column: 44, scope: !16414)
!16428 = !DILocation(line: 3477, column: 7, scope: !16409)
!16429 = !DILocation(line: 3480, column: 4, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16414, file: !3, line: 3479, column: 51)
!16431 = !DILocation(line: 3483, column: 14, scope: !16409)
!16432 = !DILocation(line: 3483, column: 26, scope: !16409)
!16433 = !DILocation(line: 3483, column: 3, scope: !16409)
!16434 = !DILocation(line: 3485, column: 8, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16409, file: !3, line: 3485, column: 7)
!16436 = !DILocation(line: 3485, column: 17, scope: !16435)
!16437 = !DILocation(line: 3485, column: 25, scope: !16435)
!16438 = !DILocation(line: 3485, column: 7, scope: !16409)
!16439 = !DILocation(line: 3486, column: 13, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16435, file: !3, line: 3485, column: 31)
!16441 = !DILocation(line: 3486, column: 4, scope: !16440)
!16442 = !DILocation(line: 3487, column: 3, scope: !16440)
!16443 = !DILocation(line: 3488, column: 13, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16435, file: !3, line: 3487, column: 10)
!16445 = !DILocation(line: 3488, column: 4, scope: !16444)
!16446 = !DILocation(line: 3490, column: 9, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16444, file: !3, line: 3490, column: 8)
!16448 = !DILocation(line: 3490, column: 18, scope: !16447)
!16449 = !DILocation(line: 3490, column: 28, scope: !16447)
!16450 = !DILocation(line: 3490, column: 8, scope: !16444)
!16451 = !DILocation(line: 3491, column: 14, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16447, file: !3, line: 3490, column: 39)
!16453 = !DILocation(line: 3491, column: 5, scope: !16452)
!16454 = !DILocation(line: 3492, column: 4, scope: !16452)
!16455 = !DILocation(line: 3492, column: 16, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16447, file: !3, line: 3492, column: 15)
!16457 = !DILocation(line: 3492, column: 25, scope: !16456)
!16458 = !DILocation(line: 3492, column: 35, scope: !16456)
!16459 = !DILocation(line: 3492, column: 15, scope: !16447)
!16460 = !DILocation(line: 3493, column: 14, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16456, file: !3, line: 3492, column: 46)
!16462 = !DILocation(line: 3493, column: 5, scope: !16461)
!16463 = !DILocation(line: 3494, column: 4, scope: !16461)
!16464 = !DILocation(line: 3496, column: 17, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16456, file: !3, line: 3494, column: 11)
!16466 = !DILocation(line: 3496, column: 26, scope: !16465)
!16467 = !DILocation(line: 3496, column: 32, scope: !16465)
!16468 = !DILocation(line: 3496, column: 38, scope: !16465)
!16469 = !DILocation(line: 3496, column: 44, scope: !16465)
!16470 = !DILocation(line: 3496, column: 14, scope: !16465)
!16471 = !DILocation(line: 3496, column: 12, scope: !16465)
!16472 = !DILocation(line: 3498, column: 9, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16465, file: !3, line: 3498, column: 9)
!16474 = !DILocation(line: 3498, column: 16, scope: !16473)
!16475 = !DILocation(line: 3498, column: 9, scope: !16465)
!16476 = !DILocation(line: 3499, column: 17, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16473, file: !3, line: 3498, column: 22)
!16478 = !DILocation(line: 3499, column: 36, scope: !16477)
!16479 = !DILocation(line: 3499, column: 6, scope: !16477)
!16480 = !DILocation(line: 3500, column: 5, scope: !16477)
!16481 = !DILocation(line: 3501, column: 17, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16473, file: !3, line: 3500, column: 12)
!16483 = !DILocation(line: 3503, column: 10, scope: !16482)
!16484 = !DILocation(line: 3503, column: 24, scope: !16482)
!16485 = !DILocation(line: 3503, column: 22, scope: !16482)
!16486 = !DILocation(line: 3504, column: 10, scope: !16482)
!16487 = !DILocation(line: 3501, column: 6, scope: !16482)
!16488 = !DILocation(line: 3508, column: 15, scope: !16444)
!16489 = !DILocation(line: 3509, column: 8, scope: !16444)
!16490 = !DILocation(line: 3509, column: 17, scope: !16444)
!16491 = !DILocation(line: 3508, column: 4, scope: !16444)
!16492 = !DILocation(line: 3512, column: 8, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16409, file: !3, line: 3512, column: 7)
!16494 = !DILocation(line: 3512, column: 20, scope: !16493)
!16495 = !DILocation(line: 3512, column: 18, scope: !16493)
!16496 = !DILocation(line: 3512, column: 43, scope: !16493)
!16497 = !DILocation(line: 3512, column: 7, scope: !16409)
!16498 = !DILocation(line: 3513, column: 13, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16493, file: !3, line: 3512, column: 49)
!16500 = !DILocation(line: 3513, column: 4, scope: !16499)
!16501 = !DILocation(line: 3514, column: 16, scope: !16499)
!16502 = !DILocation(line: 3515, column: 3, scope: !16499)
!16503 = !DILocation(line: 3516, column: 13, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16493, file: !3, line: 3515, column: 10)
!16505 = !DILocation(line: 3516, column: 4, scope: !16504)
!16506 = !DILocation(line: 3518, column: 2, scope: !16409)
!16507 = !DILocation(line: 3470, column: 33, scope: !16405)
!16508 = !DILocation(line: 3470, column: 2, scope: !16405)
!16509 = distinct !{!16509, !16407, !16510}
!16510 = !DILocation(line: 3518, column: 2, scope: !16402)
!16511 = !DILocation(line: 3520, column: 6, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 3520, column: 6)
!16513 = !DILocation(line: 3520, column: 6, scope: !16079)
!16514 = !DILocation(line: 3521, column: 12, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16512, file: !3, line: 3520, column: 19)
!16516 = !DILocation(line: 3521, column: 3, scope: !16515)
!16517 = !DILocation(line: 3522, column: 2, scope: !16515)
!16518 = !DILocation(line: 3523, column: 1, scope: !16079)
!16519 = distinct !DISubprogram(name: "asc_get_eeprom_string", scope: !3, file: !3, line: 2796, type: !16520, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!16520 = !DISubroutineType(types: !16521)
!16521 = !{!245, !5989, !5252}
!16522 = !DILocalVariable(name: "serialnum", arg: 1, scope: !16519, file: !3, line: 2796, type: !5989)
!16523 = !DILocation(line: 2796, column: 42, scope: !16519)
!16524 = !DILocalVariable(name: "cp", arg: 2, scope: !16519, file: !3, line: 2796, type: !5252)
!16525 = !DILocation(line: 2796, column: 60, scope: !16519)
!16526 = !DILocalVariable(name: "w", scope: !16519, file: !3, line: 2798, type: !5240)
!16527 = !DILocation(line: 2798, column: 9, scope: !16519)
!16528 = !DILocalVariable(name: "num", scope: !16519, file: !3, line: 2798, type: !5240)
!16529 = !DILocation(line: 2798, column: 12, scope: !16519)
!16530 = !DILocation(line: 2800, column: 7, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 2800, column: 6)
!16532 = !DILocation(line: 2800, column: 20, scope: !16531)
!16533 = !DILocation(line: 2800, column: 30, scope: !16531)
!16534 = !DILocation(line: 2800, column: 6, scope: !16519)
!16535 = !DILocation(line: 2801, column: 3, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16531, file: !3, line: 2800, column: 54)
!16537 = !DILocation(line: 2806, column: 7, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16531, file: !3, line: 2802, column: 9)
!16539 = !DILocation(line: 2806, column: 5, scope: !16538)
!16540 = !DILocation(line: 2809, column: 22, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 2809, column: 7)
!16542 = !DILocation(line: 2809, column: 24, scope: !16541)
!16543 = !DILocation(line: 2809, column: 34, scope: !16541)
!16544 = !DILocation(line: 2809, column: 18, scope: !16541)
!16545 = !DILocation(line: 2809, column: 14, scope: !16541)
!16546 = !DILocation(line: 2809, column: 9, scope: !16541)
!16547 = !DILocation(line: 2809, column: 12, scope: !16541)
!16548 = !DILocation(line: 2809, column: 7, scope: !16541)
!16549 = !DILocation(line: 2809, column: 42, scope: !16541)
!16550 = !DILocation(line: 2809, column: 7, scope: !16538)
!16551 = !DILocation(line: 2811, column: 5, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16541, file: !3, line: 2809, column: 50)
!16553 = !DILocation(line: 2811, column: 8, scope: !16552)
!16554 = !DILocation(line: 2812, column: 3, scope: !16552)
!16555 = !DILocation(line: 2813, column: 5, scope: !16538)
!16556 = !DILocation(line: 2816, column: 19, scope: !16538)
!16557 = !DILocation(line: 2816, column: 21, scope: !16538)
!16558 = !DILocation(line: 2816, column: 31, scope: !16538)
!16559 = !DILocation(line: 2816, column: 15, scope: !16538)
!16560 = !DILocation(line: 2816, column: 11, scope: !16538)
!16561 = !DILocation(line: 2816, column: 6, scope: !16538)
!16562 = !DILocation(line: 2816, column: 9, scope: !16538)
!16563 = !DILocation(line: 2819, column: 9, scope: !16538)
!16564 = !DILocation(line: 2819, column: 11, scope: !16538)
!16565 = !DILocation(line: 2819, column: 7, scope: !16538)
!16566 = !DILocation(line: 2820, column: 18, scope: !16538)
!16567 = !DILocation(line: 2820, column: 22, scope: !16538)
!16568 = !DILocation(line: 2820, column: 15, scope: !16538)
!16569 = !DILocation(line: 2820, column: 11, scope: !16538)
!16570 = !DILocation(line: 2820, column: 6, scope: !16538)
!16571 = !DILocation(line: 2820, column: 9, scope: !16538)
!16572 = !DILocation(line: 2821, column: 7, scope: !16538)
!16573 = !DILocation(line: 2822, column: 18, scope: !16538)
!16574 = !DILocation(line: 2822, column: 22, scope: !16538)
!16575 = !DILocation(line: 2822, column: 15, scope: !16538)
!16576 = !DILocation(line: 2822, column: 11, scope: !16538)
!16577 = !DILocation(line: 2822, column: 6, scope: !16538)
!16578 = !DILocation(line: 2822, column: 9, scope: !16538)
!16579 = !DILocation(line: 2825, column: 18, scope: !16538)
!16580 = !DILocation(line: 2825, column: 22, scope: !16538)
!16581 = !DILocation(line: 2825, column: 15, scope: !16538)
!16582 = !DILocation(line: 2825, column: 11, scope: !16538)
!16583 = !DILocation(line: 2825, column: 6, scope: !16538)
!16584 = !DILocation(line: 2825, column: 9, scope: !16538)
!16585 = !DILocation(line: 2830, column: 7, scope: !16538)
!16586 = !DILocation(line: 2830, column: 5, scope: !16538)
!16587 = !DILocation(line: 2838, column: 7, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 2838, column: 7)
!16589 = !DILocation(line: 2838, column: 20, scope: !16588)
!16590 = !DILocation(line: 2838, column: 7, scope: !16538)
!16591 = !DILocation(line: 2839, column: 20, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16588, file: !3, line: 2838, column: 30)
!16593 = !DILocation(line: 2839, column: 22, scope: !16592)
!16594 = !DILocation(line: 2839, column: 31, scope: !16592)
!16595 = !DILocation(line: 2839, column: 16, scope: !16592)
!16596 = !DILocation(line: 2839, column: 12, scope: !16592)
!16597 = !DILocation(line: 2839, column: 7, scope: !16592)
!16598 = !DILocation(line: 2839, column: 10, scope: !16592)
!16599 = !DILocation(line: 2840, column: 3, scope: !16592)
!16600 = !DILocation(line: 2841, column: 20, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16588, file: !3, line: 2840, column: 10)
!16602 = !DILocation(line: 2841, column: 22, scope: !16601)
!16603 = !DILocation(line: 2841, column: 31, scope: !16601)
!16604 = !DILocation(line: 2841, column: 16, scope: !16601)
!16605 = !DILocation(line: 2841, column: 12, scope: !16601)
!16606 = !DILocation(line: 2841, column: 7, scope: !16601)
!16607 = !DILocation(line: 2841, column: 10, scope: !16601)
!16608 = !DILocation(line: 2845, column: 9, scope: !16538)
!16609 = !DILocation(line: 2845, column: 11, scope: !16538)
!16610 = !DILocation(line: 2845, column: 7, scope: !16538)
!16611 = !DILocation(line: 2846, column: 17, scope: !16538)
!16612 = !DILocation(line: 2846, column: 21, scope: !16538)
!16613 = !DILocation(line: 2846, column: 15, scope: !16538)
!16614 = !DILocation(line: 2846, column: 11, scope: !16538)
!16615 = !DILocation(line: 2846, column: 6, scope: !16538)
!16616 = !DILocation(line: 2846, column: 9, scope: !16538)
!16617 = !DILocation(line: 2847, column: 7, scope: !16538)
!16618 = !DILocation(line: 2848, column: 17, scope: !16538)
!16619 = !DILocation(line: 2848, column: 15, scope: !16538)
!16620 = !DILocation(line: 2848, column: 11, scope: !16538)
!16621 = !DILocation(line: 2848, column: 6, scope: !16538)
!16622 = !DILocation(line: 2848, column: 9, scope: !16538)
!16623 = !DILocation(line: 2853, column: 7, scope: !16538)
!16624 = !DILocation(line: 2853, column: 20, scope: !16538)
!16625 = !DILocation(line: 2853, column: 5, scope: !16538)
!16626 = !DILocation(line: 2856, column: 18, scope: !16538)
!16627 = !DILocation(line: 2856, column: 20, scope: !16538)
!16628 = !DILocation(line: 2856, column: 15, scope: !16538)
!16629 = !DILocation(line: 2856, column: 11, scope: !16538)
!16630 = !DILocation(line: 2856, column: 6, scope: !16538)
!16631 = !DILocation(line: 2856, column: 9, scope: !16538)
!16632 = !DILocation(line: 2859, column: 9, scope: !16538)
!16633 = !DILocation(line: 2859, column: 11, scope: !16538)
!16634 = !DILocation(line: 2859, column: 7, scope: !16538)
!16635 = !DILocation(line: 2860, column: 17, scope: !16538)
!16636 = !DILocation(line: 2860, column: 21, scope: !16538)
!16637 = !DILocation(line: 2860, column: 15, scope: !16538)
!16638 = !DILocation(line: 2860, column: 11, scope: !16538)
!16639 = !DILocation(line: 2860, column: 6, scope: !16538)
!16640 = !DILocation(line: 2860, column: 9, scope: !16538)
!16641 = !DILocation(line: 2861, column: 7, scope: !16538)
!16642 = !DILocation(line: 2862, column: 17, scope: !16538)
!16643 = !DILocation(line: 2862, column: 21, scope: !16538)
!16644 = !DILocation(line: 2862, column: 15, scope: !16538)
!16645 = !DILocation(line: 2862, column: 11, scope: !16538)
!16646 = !DILocation(line: 2862, column: 6, scope: !16538)
!16647 = !DILocation(line: 2862, column: 9, scope: !16538)
!16648 = !DILocation(line: 2863, column: 7, scope: !16538)
!16649 = !DILocation(line: 2864, column: 17, scope: !16538)
!16650 = !DILocation(line: 2864, column: 15, scope: !16538)
!16651 = !DILocation(line: 2864, column: 11, scope: !16538)
!16652 = !DILocation(line: 2864, column: 6, scope: !16538)
!16653 = !DILocation(line: 2864, column: 9, scope: !16538)
!16654 = !DILocation(line: 2866, column: 4, scope: !16538)
!16655 = !DILocation(line: 2866, column: 7, scope: !16538)
!16656 = !DILocation(line: 2867, column: 3, scope: !16538)
!16657 = !DILocation(line: 2869, column: 1, scope: !16519)
!16658 = distinct !DISubprogram(name: "AscInitGetConfig", scope: !3, file: !3, line: 9264, type: !5101, scopeLine: 9265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!16659 = !DILocalVariable(name: "shost", arg: 1, scope: !16658, file: !3, line: 9264, type: !4796)
!16660 = !DILocation(line: 9264, column: 47, scope: !16658)
!16661 = !DILocalVariable(name: "board", scope: !16658, file: !3, line: 9266, type: !190)
!16662 = !DILocation(line: 9266, column: 20, scope: !16658)
!16663 = !DILocation(line: 9266, column: 39, scope: !16658)
!16664 = !DILocation(line: 9266, column: 28, scope: !16658)
!16665 = !DILocalVariable(name: "asc_dvc", scope: !16658, file: !3, line: 9267, type: !6375)
!16666 = !DILocation(line: 9267, column: 15, scope: !16658)
!16667 = !DILocation(line: 9267, column: 26, scope: !16658)
!16668 = !DILocation(line: 9267, column: 33, scope: !16658)
!16669 = !DILocation(line: 9267, column: 41, scope: !16658)
!16670 = !DILocalVariable(name: "warn_code", scope: !16658, file: !3, line: 9268, type: !303)
!16671 = !DILocation(line: 9268, column: 17, scope: !16658)
!16672 = !DILocation(line: 9270, column: 2, scope: !16658)
!16673 = !DILocation(line: 9270, column: 11, scope: !16658)
!16674 = !DILocation(line: 9270, column: 22, scope: !16658)
!16675 = !DILocation(line: 9271, column: 6, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 9271, column: 6)
!16677 = !DILocation(line: 9271, column: 15, scope: !16676)
!16678 = !DILocation(line: 9271, column: 24, scope: !16676)
!16679 = !DILocation(line: 9271, column: 6, scope: !16658)
!16680 = !DILocation(line: 9272, column: 10, scope: !16676)
!16681 = !DILocation(line: 9272, column: 19, scope: !16676)
!16682 = !DILocation(line: 9272, column: 3, scope: !16676)
!16683 = !DILocation(line: 9274, column: 23, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 9274, column: 6)
!16685 = !DILocation(line: 9274, column: 32, scope: !16684)
!16686 = !DILocation(line: 9274, column: 6, scope: !16684)
!16687 = !DILocation(line: 9274, column: 6, scope: !16658)
!16688 = !DILocation(line: 9275, column: 20, scope: !16689)
!16689 = distinct !DILexicalBlock(scope: !16684, file: !3, line: 9274, column: 43)
!16690 = !DILocation(line: 9275, column: 3, scope: !16689)
!16691 = !DILocation(line: 9276, column: 30, scope: !16689)
!16692 = !DILocation(line: 9276, column: 15, scope: !16689)
!16693 = !DILocation(line: 9276, column: 13, scope: !16689)
!16694 = !DILocation(line: 9277, column: 3, scope: !16689)
!16695 = !DILocation(line: 9277, column: 12, scope: !16689)
!16696 = !DILocation(line: 9277, column: 23, scope: !16689)
!16697 = !DILocation(line: 9278, column: 7, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16689, file: !3, line: 9278, column: 7)
!16699 = !DILocation(line: 9278, column: 16, scope: !16698)
!16700 = !DILocation(line: 9278, column: 32, scope: !16698)
!16701 = !DILocation(line: 9278, column: 7, scope: !16689)
!16702 = !DILocation(line: 9279, column: 4, scope: !16698)
!16703 = !DILocation(line: 9279, column: 13, scope: !16698)
!16704 = !DILocation(line: 9279, column: 29, scope: !16698)
!16705 = !DILocation(line: 9280, column: 2, scope: !16689)
!16706 = !DILocation(line: 9281, column: 3, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16684, file: !3, line: 9280, column: 9)
!16708 = !DILocation(line: 9281, column: 12, scope: !16707)
!16709 = !DILocation(line: 9281, column: 21, scope: !16707)
!16710 = !DILocation(line: 9284, column: 10, scope: !16658)
!16711 = !DILocation(line: 9284, column: 2, scope: !16658)
!16712 = !DILocation(line: 9286, column: 3, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 9284, column: 21)
!16714 = !DILocation(line: 9288, column: 3, scope: !16713)
!16715 = !DILocation(line: 9290, column: 3, scope: !16713)
!16716 = !DILocation(line: 9292, column: 3, scope: !16713)
!16717 = !DILocation(line: 9294, column: 3, scope: !16713)
!16718 = !DILocation(line: 9296, column: 3, scope: !16713)
!16719 = !DILocation(line: 9297, column: 3, scope: !16713)
!16720 = !DILocation(line: 9299, column: 3, scope: !16713)
!16721 = !DILocation(line: 9300, column: 3, scope: !16713)
!16722 = !DILocation(line: 9302, column: 3, scope: !16713)
!16723 = !DILocation(line: 9304, column: 3, scope: !16713)
!16724 = !DILocation(line: 9306, column: 3, scope: !16713)
!16725 = !DILocation(line: 9308, column: 3, scope: !16713)
!16726 = !DILocation(line: 9311, column: 6, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 9311, column: 6)
!16728 = !DILocation(line: 9311, column: 15, scope: !16727)
!16729 = !DILocation(line: 9311, column: 24, scope: !16727)
!16730 = !DILocation(line: 9311, column: 6, scope: !16658)
!16731 = !DILocation(line: 9312, column: 3, scope: !16727)
!16732 = !DILocation(line: 9315, column: 9, scope: !16658)
!16733 = !DILocation(line: 9315, column: 18, scope: !16658)
!16734 = !DILocation(line: 9315, column: 2, scope: !16658)
!16735 = !DILocation(line: 9316, column: 1, scope: !16658)
!16736 = distinct !DISubprogram(name: "AdvInitGetConfig", scope: !3, file: !3, line: 10710, type: !16737, scopeLine: 10711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!16737 = !DISubroutineType(types: !16738)
!16738 = !{!245, !5710, !4796}
!16739 = !DILocalVariable(name: "pdev", arg: 1, scope: !16736, file: !3, line: 10710, type: !5710)
!16740 = !DILocation(line: 10710, column: 45, scope: !16736)
!16741 = !DILocalVariable(name: "shost", arg: 2, scope: !16736, file: !3, line: 10710, type: !4796)
!16742 = !DILocation(line: 10710, column: 69, scope: !16736)
!16743 = !DILocalVariable(name: "board", scope: !16736, file: !3, line: 10712, type: !190)
!16744 = !DILocation(line: 10712, column: 20, scope: !16736)
!16745 = !DILocation(line: 10712, column: 39, scope: !16736)
!16746 = !DILocation(line: 10712, column: 28, scope: !16736)
!16747 = !DILocalVariable(name: "asc_dvc", scope: !16736, file: !3, line: 10713, type: !6378)
!16748 = !DILocation(line: 10713, column: 15, scope: !16736)
!16749 = !DILocation(line: 10713, column: 26, scope: !16736)
!16750 = !DILocation(line: 10713, column: 33, scope: !16736)
!16751 = !DILocation(line: 10713, column: 41, scope: !16736)
!16752 = !DILocalVariable(name: "warn_code", scope: !16736, file: !3, line: 10714, type: !303)
!16753 = !DILocation(line: 10714, column: 17, scope: !16736)
!16754 = !DILocalVariable(name: "iop_base", scope: !16736, file: !3, line: 10715, type: !334)
!16755 = !DILocation(line: 10715, column: 14, scope: !16736)
!16756 = !DILocation(line: 10715, column: 25, scope: !16736)
!16757 = !DILocation(line: 10715, column: 34, scope: !16736)
!16758 = !DILocalVariable(name: "cmd", scope: !16736, file: !3, line: 10716, type: !899)
!16759 = !DILocation(line: 10716, column: 6, scope: !16736)
!16760 = !DILocalVariable(name: "status", scope: !16736, file: !3, line: 10717, type: !245)
!16761 = !DILocation(line: 10717, column: 6, scope: !16736)
!16762 = !DILocation(line: 10719, column: 2, scope: !16736)
!16763 = !DILocation(line: 10719, column: 11, scope: !16736)
!16764 = !DILocation(line: 10719, column: 20, scope: !16736)
!16765 = !DILocation(line: 10727, column: 2, scope: !16736)
!16766 = !DILocation(line: 10727, column: 11, scope: !16736)
!16767 = !DILocation(line: 10727, column: 16, scope: !16736)
!16768 = !DILocation(line: 10727, column: 29, scope: !16736)
!16769 = !DILocation(line: 10728, column: 23, scope: !16736)
!16770 = !DILocation(line: 10728, column: 2, scope: !16736)
!16771 = !DILocation(line: 10729, column: 7, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16736, file: !3, line: 10729, column: 6)
!16773 = !DILocation(line: 10729, column: 11, scope: !16772)
!16774 = !DILocation(line: 10729, column: 33, scope: !16772)
!16775 = !DILocation(line: 10729, column: 6, scope: !16736)
!16776 = !DILocation(line: 10730, column: 3, scope: !16772)
!16777 = !DILocation(line: 10730, column: 12, scope: !16772)
!16778 = !DILocation(line: 10730, column: 17, scope: !16772)
!16779 = !DILocation(line: 10730, column: 30, scope: !16772)
!16780 = !DILocation(line: 10733, column: 6, scope: !16736)
!16781 = !DILocation(line: 10732, column: 2, scope: !16736)
!16782 = !DILocation(line: 10732, column: 11, scope: !16736)
!16783 = !DILocation(line: 10732, column: 16, scope: !16736)
!16784 = !DILocation(line: 10732, column: 29, scope: !16736)
!16785 = !DILocation(line: 10746, column: 6, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16736, file: !3, line: 10746, column: 6)
!16787 = !DILocation(line: 0, scope: !16786)
!16788 = !DILocation(line: 10746, column: 33, scope: !16786)
!16789 = !DILocation(line: 10746, column: 6, scope: !16736)
!16790 = !DILocation(line: 10747, column: 3, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16786, file: !3, line: 10746, column: 39)
!16792 = !DILocation(line: 10747, column: 12, scope: !16791)
!16793 = !DILocation(line: 10747, column: 21, scope: !16791)
!16794 = !DILocation(line: 10748, column: 3, scope: !16791)
!16795 = !DILocation(line: 10753, column: 7, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16797, file: !3, line: 10753, column: 7)
!16797 = distinct !DILexicalBlock(scope: !16786, file: !3, line: 10749, column: 9)
!16798 = !DILocation(line: 10753, column: 16, scope: !16796)
!16799 = !DILocation(line: 10753, column: 26, scope: !16796)
!16800 = !DILocation(line: 10753, column: 46, scope: !16796)
!16801 = !DILocation(line: 10754, column: 7, scope: !16796)
!16802 = !DILocation(line: 10754, column: 16, scope: !16796)
!16803 = !DILocation(line: 10754, column: 26, scope: !16796)
!16804 = !DILocation(line: 10754, column: 49, scope: !16796)
!16805 = !DILocation(line: 10755, column: 7, scope: !16796)
!16806 = !DILocation(line: 10755, column: 16, scope: !16796)
!16807 = !DILocation(line: 10755, column: 26, scope: !16796)
!16808 = !DILocation(line: 10753, column: 7, scope: !16797)
!16809 = !DILocation(line: 10756, column: 4, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16796, file: !3, line: 10755, column: 50)
!16811 = !DILocation(line: 10756, column: 13, scope: !16810)
!16812 = !DILocation(line: 10756, column: 22, scope: !16810)
!16813 = !DILocation(line: 10757, column: 4, scope: !16810)
!16814 = !DILocation(line: 10763, column: 3, scope: !16797)
!16815 = !DILocalVariable(name: "__ms", scope: !16816, file: !3, line: 10765, type: !189)
!16816 = distinct !DILexicalBlock(scope: !16797, file: !3, line: 10765, column: 3)
!16817 = !DILocation(line: 10765, column: 3, scope: !16816)
!16818 = !DILocation(line: 10765, column: 3, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !3, line: 10765, column: 3)
!16820 = distinct !DILexicalBlock(scope: !16821, file: !3, line: 10765, column: 3)
!16821 = distinct !DILexicalBlock(scope: !16822, file: !3, line: 10765, column: 3)
!16822 = distinct !DILexicalBlock(scope: !16816, file: !3, line: 10765, column: 3)
!16823 = distinct !{!16823, !16817, !16817}
!16824 = !DILocation(line: 10766, column: 3, scope: !16797)
!16825 = !DILocation(line: 10769, column: 7, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16797, file: !3, line: 10769, column: 7)
!16827 = !DILocation(line: 10769, column: 16, scope: !16826)
!16828 = !DILocation(line: 10769, column: 26, scope: !16826)
!16829 = !DILocation(line: 10769, column: 7, scope: !16797)
!16830 = !DILocation(line: 10770, column: 35, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16826, file: !3, line: 10769, column: 50)
!16832 = !DILocation(line: 10770, column: 13, scope: !16831)
!16833 = !DILocation(line: 10770, column: 11, scope: !16831)
!16834 = !DILocation(line: 10771, column: 3, scope: !16831)
!16835 = !DILocation(line: 10771, column: 14, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16826, file: !3, line: 10771, column: 14)
!16837 = !DILocation(line: 10771, column: 23, scope: !16836)
!16838 = !DILocation(line: 10771, column: 33, scope: !16836)
!16839 = !DILocation(line: 10771, column: 14, scope: !16826)
!16840 = !DILocation(line: 10772, column: 35, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 10771, column: 57)
!16842 = !DILocation(line: 10772, column: 13, scope: !16841)
!16843 = !DILocation(line: 10772, column: 11, scope: !16841)
!16844 = !DILocation(line: 10773, column: 3, scope: !16841)
!16845 = !DILocation(line: 10774, column: 32, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 10773, column: 10)
!16847 = !DILocation(line: 10774, column: 13, scope: !16846)
!16848 = !DILocation(line: 10774, column: 11, scope: !16846)
!16849 = !DILocation(line: 10776, column: 16, scope: !16797)
!16850 = !DILocation(line: 10776, column: 13, scope: !16797)
!16851 = !DILocation(line: 10779, column: 6, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16736, file: !3, line: 10779, column: 6)
!16853 = !DILocation(line: 10779, column: 16, scope: !16852)
!16854 = !DILocation(line: 10779, column: 6, scope: !16736)
!16855 = !DILocation(line: 10780, column: 3, scope: !16852)
!16856 = !DILocation(line: 10782, column: 6, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16736, file: !3, line: 10782, column: 6)
!16858 = !DILocation(line: 10782, column: 15, scope: !16857)
!16859 = !DILocation(line: 10782, column: 6, scope: !16736)
!16860 = !DILocation(line: 10783, column: 3, scope: !16857)
!16861 = !DILocation(line: 10786, column: 9, scope: !16736)
!16862 = !DILocation(line: 10786, column: 18, scope: !16736)
!16863 = !DILocation(line: 10786, column: 2, scope: !16736)
!16864 = !DILocation(line: 10787, column: 1, scope: !16736)
!16865 = distinct !DISubprogram(name: "AscInitSetConfig", scope: !3, file: !3, line: 9318, type: !16737, scopeLine: 9319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!16866 = !DILocalVariable(name: "pdev", arg: 1, scope: !16865, file: !3, line: 9318, type: !5710)
!16867 = !DILocation(line: 9318, column: 45, scope: !16865)
!16868 = !DILocalVariable(name: "shost", arg: 2, scope: !16865, file: !3, line: 9318, type: !4796)
!16869 = !DILocation(line: 9318, column: 69, scope: !16865)
!16870 = !DILocalVariable(name: "board", scope: !16865, file: !3, line: 9320, type: !190)
!16871 = !DILocation(line: 9320, column: 20, scope: !16865)
!16872 = !DILocation(line: 9320, column: 39, scope: !16865)
!16873 = !DILocation(line: 9320, column: 28, scope: !16865)
!16874 = !DILocalVariable(name: "asc_dvc", scope: !16865, file: !3, line: 9321, type: !6375)
!16875 = !DILocation(line: 9321, column: 15, scope: !16865)
!16876 = !DILocation(line: 9321, column: 26, scope: !16865)
!16877 = !DILocation(line: 9321, column: 33, scope: !16865)
!16878 = !DILocation(line: 9321, column: 41, scope: !16865)
!16879 = !DILocalVariable(name: "iop_base", scope: !16865, file: !3, line: 9322, type: !7)
!16880 = !DILocation(line: 9322, column: 11, scope: !16865)
!16881 = !DILocation(line: 9322, column: 22, scope: !16865)
!16882 = !DILocation(line: 9322, column: 31, scope: !16865)
!16883 = !DILocalVariable(name: "cfg_msw", scope: !16865, file: !3, line: 9323, type: !303)
!16884 = !DILocation(line: 9323, column: 17, scope: !16865)
!16885 = !DILocalVariable(name: "warn_code", scope: !16865, file: !3, line: 9324, type: !303)
!16886 = !DILocation(line: 9324, column: 17, scope: !16865)
!16887 = !DILocation(line: 9326, column: 2, scope: !16865)
!16888 = !DILocation(line: 9326, column: 11, scope: !16865)
!16889 = !DILocation(line: 9326, column: 22, scope: !16865)
!16890 = !DILocation(line: 9327, column: 6, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9327, column: 6)
!16892 = !DILocation(line: 9327, column: 15, scope: !16891)
!16893 = !DILocation(line: 9327, column: 24, scope: !16891)
!16894 = !DILocation(line: 9327, column: 6, scope: !16865)
!16895 = !DILocation(line: 9328, column: 10, scope: !16891)
!16896 = !DILocation(line: 9328, column: 19, scope: !16891)
!16897 = !DILocation(line: 9328, column: 3, scope: !16891)
!16898 = !DILocation(line: 9329, column: 24, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9329, column: 6)
!16900 = !DILocation(line: 9329, column: 33, scope: !16899)
!16901 = !DILocation(line: 9329, column: 7, scope: !16899)
!16902 = !DILocation(line: 9329, column: 6, scope: !16865)
!16903 = !DILocation(line: 9330, column: 3, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16899, file: !3, line: 9329, column: 44)
!16905 = !DILocation(line: 9330, column: 12, scope: !16904)
!16906 = !DILocation(line: 9330, column: 21, scope: !16904)
!16907 = !DILocation(line: 9331, column: 10, scope: !16904)
!16908 = !DILocation(line: 9331, column: 19, scope: !16904)
!16909 = !DILocation(line: 9331, column: 3, scope: !16904)
!16910 = !DILocation(line: 9334, column: 12, scope: !16865)
!16911 = !DILocation(line: 9334, column: 10, scope: !16865)
!16912 = !DILocation(line: 9335, column: 7, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9335, column: 6)
!16914 = !DILocation(line: 9335, column: 15, scope: !16913)
!16915 = !DILocation(line: 9335, column: 39, scope: !16913)
!16916 = !DILocation(line: 9335, column: 6, scope: !16865)
!16917 = !DILocation(line: 9336, column: 11, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16913, file: !3, line: 9335, column: 45)
!16919 = !DILocation(line: 9337, column: 13, scope: !16918)
!16920 = !DILocation(line: 9338, column: 3, scope: !16918)
!16921 = !DILocation(line: 9339, column: 2, scope: !16918)
!16922 = !DILocation(line: 9340, column: 7, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9340, column: 6)
!16924 = !DILocation(line: 9340, column: 16, scope: !16923)
!16925 = !DILocation(line: 9340, column: 21, scope: !16923)
!16926 = !DILocation(line: 9340, column: 39, scope: !16923)
!16927 = !DILocation(line: 9340, column: 48, scope: !16923)
!16928 = !DILocation(line: 9340, column: 53, scope: !16923)
!16929 = !DILocation(line: 9340, column: 37, scope: !16923)
!16930 = !DILocation(line: 9341, column: 6, scope: !16923)
!16931 = !DILocation(line: 9341, column: 15, scope: !16923)
!16932 = !DILocation(line: 9341, column: 20, scope: !16923)
!16933 = !DILocation(line: 9340, column: 66, scope: !16923)
!16934 = !DILocation(line: 9340, column: 6, scope: !16865)
!16935 = !DILocation(line: 9342, column: 31, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !16923, file: !3, line: 9341, column: 37)
!16937 = !DILocation(line: 9342, column: 40, scope: !16936)
!16938 = !DILocation(line: 9342, column: 45, scope: !16936)
!16939 = !DILocation(line: 9342, column: 3, scope: !16936)
!16940 = !DILocation(line: 9342, column: 12, scope: !16936)
!16941 = !DILocation(line: 9342, column: 17, scope: !16936)
!16942 = !DILocation(line: 9342, column: 29, scope: !16936)
!16943 = !DILocation(line: 9343, column: 13, scope: !16936)
!16944 = !DILocation(line: 9344, column: 2, scope: !16936)
!16945 = !DILocation(line: 9345, column: 6, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9345, column: 6)
!16947 = !DILocation(line: 9345, column: 33, scope: !16946)
!16948 = !DILocation(line: 9345, column: 6, scope: !16865)
!16949 = !DILocation(line: 9346, column: 13, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16946, file: !3, line: 9345, column: 52)
!16951 = !DILocation(line: 9347, column: 2, scope: !16950)
!16952 = !DILocation(line: 9349, column: 6, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9349, column: 6)
!16954 = !DILocation(line: 9349, column: 15, scope: !16953)
!16955 = !DILocation(line: 9349, column: 24, scope: !16953)
!16956 = !DILocation(line: 9349, column: 6, scope: !16865)
!16957 = !DILocation(line: 9350, column: 11, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16953, file: !3, line: 9349, column: 38)
!16959 = !DILocation(line: 9351, column: 3, scope: !16958)
!16960 = !DILocation(line: 9352, column: 8, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16958, file: !3, line: 9352, column: 7)
!16962 = !DILocation(line: 9352, column: 17, scope: !16961)
!16963 = !DILocation(line: 9352, column: 26, scope: !16961)
!16964 = !DILocation(line: 9352, column: 46, scope: !16961)
!16965 = !DILocation(line: 9352, column: 7, scope: !16958)
!16966 = !DILocation(line: 9353, column: 3, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 9352, column: 67)
!16968 = !DILocation(line: 9354, column: 9, scope: !16969)
!16969 = distinct !DILexicalBlock(scope: !16970, file: !3, line: 9354, column: 8)
!16970 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 9353, column: 10)
!16971 = !DILocation(line: 9354, column: 15, scope: !16969)
!16972 = !DILocation(line: 9354, column: 22, scope: !16969)
!16973 = !DILocation(line: 9354, column: 50, scope: !16969)
!16974 = !DILocation(line: 9355, column: 9, scope: !16969)
!16975 = !DILocation(line: 9355, column: 15, scope: !16969)
!16976 = !DILocation(line: 9355, column: 22, scope: !16969)
!16977 = !DILocation(line: 9354, column: 8, scope: !16970)
!16978 = !DILocation(line: 9356, column: 5, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16969, file: !3, line: 9355, column: 52)
!16980 = !DILocation(line: 9356, column: 14, scope: !16979)
!16981 = !DILocation(line: 9356, column: 27, scope: !16979)
!16982 = !DILocation(line: 9357, column: 5, scope: !16979)
!16983 = !DILocation(line: 9357, column: 14, scope: !16979)
!16984 = !DILocation(line: 9357, column: 27, scope: !16979)
!16985 = !DILocation(line: 9359, column: 4, scope: !16979)
!16986 = !DILocation(line: 9361, column: 2, scope: !16958)
!16987 = !DILocation(line: 9363, column: 6, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16953, file: !3, line: 9363, column: 6)
!16989 = !DILocation(line: 9363, column: 15, scope: !16988)
!16990 = !DILocation(line: 9363, column: 24, scope: !16988)
!16991 = !DILocation(line: 9363, column: 6, scope: !16953)
!16992 = !DILocation(line: 9364, column: 25, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16994, file: !3, line: 9364, column: 7)
!16994 = distinct !DILexicalBlock(scope: !16988, file: !3, line: 9363, column: 42)
!16995 = !DILocation(line: 9364, column: 35, scope: !16993)
!16996 = !DILocation(line: 9364, column: 44, scope: !16993)
!16997 = !DILocation(line: 9364, column: 7, scope: !16993)
!16998 = !DILocation(line: 9365, column: 7, scope: !16993)
!16999 = !DILocation(line: 9364, column: 7, scope: !16994)
!17000 = !DILocation(line: 9366, column: 4, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16993, file: !3, line: 9365, column: 33)
!17002 = !DILocation(line: 9366, column: 13, scope: !17001)
!17003 = !DILocation(line: 9366, column: 26, scope: !17001)
!17004 = !DILocation(line: 9367, column: 3, scope: !17001)
!17005 = !DILocation(line: 9368, column: 2, scope: !16994)
!17006 = !DILocation(line: 9369, column: 23, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9369, column: 6)
!17008 = !DILocation(line: 9369, column: 33, scope: !17007)
!17009 = !DILocation(line: 9369, column: 42, scope: !17007)
!17010 = !DILocation(line: 9369, column: 47, scope: !17007)
!17011 = !DILocation(line: 9369, column: 6, scope: !17007)
!17012 = !DILocation(line: 9370, column: 6, scope: !17007)
!17013 = !DILocation(line: 9370, column: 15, scope: !17007)
!17014 = !DILocation(line: 9370, column: 20, scope: !17007)
!17015 = !DILocation(line: 9369, column: 61, scope: !17007)
!17016 = !DILocation(line: 9369, column: 6, scope: !16865)
!17017 = !DILocation(line: 9371, column: 3, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17007, file: !3, line: 9370, column: 34)
!17019 = !DILocation(line: 9371, column: 12, scope: !17018)
!17020 = !DILocation(line: 9371, column: 21, scope: !17018)
!17021 = !DILocation(line: 9372, column: 2, scope: !17018)
!17022 = !DILocation(line: 9380, column: 2, scope: !16865)
!17023 = !DILocation(line: 9380, column: 11, scope: !16865)
!17024 = !DILocation(line: 9380, column: 22, scope: !16865)
!17025 = !DILocation(line: 9382, column: 10, scope: !16865)
!17026 = !DILocation(line: 9382, column: 2, scope: !16865)
!17027 = !DILocation(line: 9384, column: 3, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9382, column: 21)
!17029 = !DILocation(line: 9386, column: 3, scope: !17028)
!17030 = !DILocation(line: 9388, column: 3, scope: !17028)
!17031 = !DILocation(line: 9390, column: 3, scope: !17028)
!17032 = !DILocation(line: 9392, column: 3, scope: !17028)
!17033 = !DILocation(line: 9394, column: 3, scope: !17028)
!17034 = !DILocation(line: 9395, column: 3, scope: !17028)
!17035 = !DILocation(line: 9397, column: 3, scope: !17028)
!17036 = !DILocation(line: 9398, column: 3, scope: !17028)
!17037 = !DILocation(line: 9400, column: 3, scope: !17028)
!17038 = !DILocation(line: 9402, column: 3, scope: !17028)
!17039 = !DILocation(line: 9404, column: 3, scope: !17028)
!17040 = !DILocation(line: 9406, column: 3, scope: !17028)
!17041 = !DILocation(line: 9409, column: 6, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 9409, column: 6)
!17043 = !DILocation(line: 9409, column: 15, scope: !17042)
!17044 = !DILocation(line: 9409, column: 24, scope: !17042)
!17045 = !DILocation(line: 9409, column: 6, scope: !16865)
!17046 = !DILocation(line: 9410, column: 3, scope: !17042)
!17047 = !DILocation(line: 9413, column: 9, scope: !16865)
!17048 = !DILocation(line: 9413, column: 18, scope: !16865)
!17049 = !DILocation(line: 9413, column: 2, scope: !16865)
!17050 = !DILocation(line: 9414, column: 1, scope: !16865)
!17051 = distinct !DISubprogram(name: "AscGetChipBiosAddress", scope: !3, file: !3, line: 8590, type: !17052, scopeLine: 8592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17052 = !DISubroutineType(types: !17053)
!17053 = !{!303, !7, !303}
!17054 = !DILocalVariable(name: "iop_base", arg: 1, scope: !17051, file: !3, line: 8590, type: !7)
!17055 = !DILocation(line: 8590, column: 54, scope: !17051)
!17056 = !DILocalVariable(name: "bus_type", arg: 2, scope: !17051, file: !3, line: 8591, type: !303)
!17057 = !DILocation(line: 8591, column: 25, scope: !17051)
!17058 = !DILocalVariable(name: "cfg_lsw", scope: !17051, file: !3, line: 8593, type: !303)
!17059 = !DILocation(line: 8593, column: 17, scope: !17051)
!17060 = !DILocalVariable(name: "bios_addr", scope: !17051, file: !3, line: 8594, type: !303)
!17061 = !DILocation(line: 8594, column: 17, scope: !17051)
!17062 = !DILocation(line: 8601, column: 6, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 8601, column: 6)
!17064 = !DILocation(line: 8601, column: 15, scope: !17063)
!17065 = !DILocation(line: 8601, column: 6, scope: !17051)
!17066 = !DILocation(line: 8602, column: 3, scope: !17063)
!17067 = !DILocation(line: 8604, column: 7, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 8604, column: 6)
!17069 = !DILocation(line: 8604, column: 16, scope: !17068)
!17070 = !DILocation(line: 8604, column: 31, scope: !17068)
!17071 = !DILocation(line: 8604, column: 6, scope: !17051)
!17072 = !DILocation(line: 8605, column: 31, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17068, file: !3, line: 8604, column: 37)
!17074 = !DILocation(line: 8605, column: 13, scope: !17073)
!17075 = !DILocation(line: 8605, column: 11, scope: !17073)
!17076 = !DILocation(line: 8606, column: 11, scope: !17073)
!17077 = !DILocation(line: 8607, column: 35, scope: !17073)
!17078 = !DILocation(line: 8607, column: 43, scope: !17073)
!17079 = !DILocation(line: 8607, column: 33, scope: !17073)
!17080 = !DILocation(line: 8607, column: 15, scope: !17073)
!17081 = !DILocation(line: 8607, column: 13, scope: !17073)
!17082 = !DILocation(line: 8608, column: 10, scope: !17073)
!17083 = !DILocation(line: 8608, column: 3, scope: !17073)
!17084 = !DILocation(line: 8611, column: 12, scope: !17051)
!17085 = !DILocation(line: 8611, column: 10, scope: !17051)
!17086 = !DILocation(line: 8616, column: 6, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 8616, column: 6)
!17088 = !DILocation(line: 8616, column: 15, scope: !17087)
!17089 = !DILocation(line: 8616, column: 6, scope: !17051)
!17090 = !DILocation(line: 8617, column: 11, scope: !17087)
!17091 = !DILocation(line: 8617, column: 3, scope: !17087)
!17092 = !DILocation(line: 8618, column: 35, scope: !17051)
!17093 = !DILocation(line: 8618, column: 43, scope: !17051)
!17094 = !DILocation(line: 8618, column: 50, scope: !17051)
!17095 = !DILocation(line: 8618, column: 32, scope: !17051)
!17096 = !DILocation(line: 8618, column: 14, scope: !17051)
!17097 = !DILocation(line: 8618, column: 12, scope: !17051)
!17098 = !DILocation(line: 8619, column: 9, scope: !17051)
!17099 = !DILocation(line: 8619, column: 2, scope: !17051)
!17100 = !DILocation(line: 8620, column: 1, scope: !17051)
!17101 = distinct !DISubprogram(name: "request_irq", scope: !5132, file: !5132, line: 157, type: !17102, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17102 = !DISubroutineType(types: !17103)
!17103 = !{!245, !7, !17104, !189, !202, !334}
!17104 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !5132, line: 92, baseType: !17105)
!17105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17106, size: 64)
!17106 = !DISubroutineType(types: !17107)
!17107 = !{!17108, !245, !334}
!17108 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !181, line: 17, baseType: !180)
!17109 = !DILocalVariable(name: "irq", arg: 1, scope: !17101, file: !5132, line: 157, type: !7)
!17110 = !DILocation(line: 157, column: 26, scope: !17101)
!17111 = !DILocalVariable(name: "handler", arg: 2, scope: !17101, file: !5132, line: 157, type: !17104)
!17112 = !DILocation(line: 157, column: 45, scope: !17101)
!17113 = !DILocalVariable(name: "flags", arg: 3, scope: !17101, file: !5132, line: 157, type: !189)
!17114 = !DILocation(line: 157, column: 68, scope: !17101)
!17115 = !DILocalVariable(name: "name", arg: 4, scope: !17101, file: !5132, line: 158, type: !202)
!17116 = !DILocation(line: 158, column: 18, scope: !17101)
!17117 = !DILocalVariable(name: "dev", arg: 5, scope: !17101, file: !5132, line: 158, type: !334)
!17118 = !DILocation(line: 158, column: 30, scope: !17101)
!17119 = !DILocation(line: 160, column: 30, scope: !17101)
!17120 = !DILocation(line: 160, column: 35, scope: !17101)
!17121 = !DILocation(line: 160, column: 50, scope: !17101)
!17122 = !DILocation(line: 160, column: 57, scope: !17101)
!17123 = !DILocation(line: 160, column: 63, scope: !17101)
!17124 = !DILocation(line: 160, column: 9, scope: !17101)
!17125 = !DILocation(line: 160, column: 2, scope: !17101)
!17126 = distinct !DISubprogram(name: "advansys_interrupt", scope: !3, file: !3, line: 7221, type: !17106, scopeLine: 7222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17127 = !DILocation(line: 407, column: 64, scope: !7366, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 7244, column: 2, scope: !17126)
!17129 = !DILocation(line: 407, column: 84, scope: !7366, inlinedAt: !17128)
!17130 = !DILocation(line: 327, column: 67, scope: !7375, inlinedAt: !17131)
!17131 = distinct !DILocation(line: 7229, column: 2, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17133, file: !3, line: 7229, column: 2)
!17133 = distinct !DILexicalBlock(scope: !17134, file: !3, line: 7229, column: 2)
!17134 = distinct !DILexicalBlock(scope: !17135, file: !3, line: 7229, column: 2)
!17135 = distinct !DILexicalBlock(scope: !17136, file: !3, line: 7229, column: 2)
!17136 = distinct !DILexicalBlock(scope: !17126, file: !3, line: 7229, column: 2)
!17137 = !DILocalVariable(name: "irq", arg: 1, scope: !17126, file: !3, line: 7221, type: !245)
!17138 = !DILocation(line: 7221, column: 43, scope: !17126)
!17139 = !DILocalVariable(name: "dev_id", arg: 2, scope: !17126, file: !3, line: 7221, type: !334)
!17140 = !DILocation(line: 7221, column: 54, scope: !17126)
!17141 = !DILocalVariable(name: "shost", scope: !17126, file: !3, line: 7223, type: !4796)
!17142 = !DILocation(line: 7223, column: 20, scope: !17126)
!17143 = !DILocation(line: 7223, column: 28, scope: !17126)
!17144 = !DILocalVariable(name: "boardp", scope: !17126, file: !3, line: 7224, type: !190)
!17145 = !DILocation(line: 7224, column: 20, scope: !17126)
!17146 = !DILocation(line: 7224, column: 40, scope: !17126)
!17147 = !DILocation(line: 7224, column: 29, scope: !17126)
!17148 = !DILocalVariable(name: "result", scope: !17126, file: !3, line: 7225, type: !17108)
!17149 = !DILocation(line: 7225, column: 14, scope: !17126)
!17150 = !DILocalVariable(name: "flags", scope: !17126, file: !3, line: 7226, type: !189)
!17151 = !DILocation(line: 7226, column: 16, scope: !17126)
!17152 = !DILocation(line: 7229, column: 2, scope: !17126)
!17153 = !DILocation(line: 7229, column: 2, scope: !17136)
!17154 = !DILocalVariable(name: "__dummy", scope: !17155, file: !3, line: 7229, type: !189)
!17155 = distinct !DILexicalBlock(scope: !17135, file: !3, line: 7229, column: 2)
!17156 = !DILocation(line: 7229, column: 2, scope: !17155)
!17157 = !DILocalVariable(name: "__dummy2", scope: !17155, file: !3, line: 7229, type: !189)
!17158 = !DILocation(line: 7229, column: 2, scope: !17135)
!17159 = !DILocation(line: 7229, column: 2, scope: !17134)
!17160 = !DILocation(line: 7229, column: 2, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17134, file: !3, line: 7229, column: 2)
!17162 = !DILocalVariable(name: "__dummy", scope: !17163, file: !3, line: 7229, type: !189)
!17163 = distinct !DILexicalBlock(scope: !17164, file: !3, line: 7229, column: 2)
!17164 = distinct !DILexicalBlock(scope: !17161, file: !3, line: 7229, column: 2)
!17165 = !DILocation(line: 7229, column: 2, scope: !17163)
!17166 = !DILocalVariable(name: "__dummy2", scope: !17163, file: !3, line: 7229, type: !189)
!17167 = !DILocation(line: 7229, column: 2, scope: !17164)
!17168 = !DILocation(line: 7229, column: 2, scope: !17133)
!17169 = !{i32 -2140612372}
!17170 = !DILocation(line: 7229, column: 2, scope: !17132)
!17171 = !DILocation(line: 329, column: 10, scope: !7375, inlinedAt: !17131)
!17172 = !DILocation(line: 329, column: 16, scope: !7375, inlinedAt: !17131)
!17173 = !DILocation(line: 7230, column: 6, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17126, file: !3, line: 7230, column: 6)
!17175 = !DILocation(line: 7230, column: 6, scope: !17126)
!17176 = !DILocation(line: 7231, column: 7, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17178, file: !3, line: 7231, column: 7)
!17178 = distinct !DILexicalBlock(scope: !17174, file: !3, line: 7230, column: 32)
!17179 = !DILocation(line: 7231, column: 7, scope: !17178)
!17180 = !DILocation(line: 7232, column: 11, scope: !17181)
!17181 = distinct !DILexicalBlock(scope: !17177, file: !3, line: 7231, column: 40)
!17182 = !DILocation(line: 7233, column: 4, scope: !17181)
!17183 = !DILocation(line: 7235, column: 12, scope: !17181)
!17184 = !DILocation(line: 7235, column: 20, scope: !17181)
!17185 = !DILocation(line: 7235, column: 28, scope: !17181)
!17186 = !DILocation(line: 7235, column: 4, scope: !17181)
!17187 = !DILocation(line: 7236, column: 3, scope: !17181)
!17188 = !DILocation(line: 7237, column: 2, scope: !17178)
!17189 = !DILocation(line: 7239, column: 15, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17191, file: !3, line: 7239, column: 7)
!17191 = distinct !DILexicalBlock(scope: !17174, file: !3, line: 7237, column: 9)
!17192 = !DILocation(line: 7239, column: 23, scope: !17190)
!17193 = !DILocation(line: 7239, column: 31, scope: !17190)
!17194 = !DILocation(line: 7239, column: 7, scope: !17190)
!17195 = !DILocation(line: 7239, column: 7, scope: !17191)
!17196 = !DILocation(line: 7240, column: 11, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17190, file: !3, line: 7239, column: 45)
!17198 = !DILocation(line: 7241, column: 4, scope: !17197)
!17199 = !DILocation(line: 7242, column: 3, scope: !17197)
!17200 = !DILocation(line: 7244, column: 25, scope: !17126)
!17201 = !DILocation(line: 7244, column: 32, scope: !17126)
!17202 = !DILocation(line: 7244, column: 43, scope: !17126)
!17203 = !DILocation(line: 409, column: 2, scope: !7412, inlinedAt: !17128)
!17204 = !DILocation(line: 409, column: 2, scope: !7417, inlinedAt: !17128)
!17205 = !DILocation(line: 409, column: 2, scope: !7418, inlinedAt: !17128)
!17206 = !DILocation(line: 409, column: 2, scope: !7425, inlinedAt: !17128)
!17207 = !DILocation(line: 409, column: 2, scope: !7428, inlinedAt: !17128)
!17208 = !DILocation(line: 7247, column: 9, scope: !17126)
!17209 = !DILocation(line: 7247, column: 2, scope: !17126)
!17210 = distinct !DISubprogram(name: "advansys_wide_init_chip", scope: !3, file: !3, line: 10809, type: !5101, scopeLine: 10810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17211 = !DILocalVariable(name: "shost", arg: 1, scope: !17210, file: !3, line: 10809, type: !4796)
!17212 = !DILocation(line: 10809, column: 54, scope: !17210)
!17213 = !DILocalVariable(name: "board", scope: !17210, file: !3, line: 10811, type: !190)
!17214 = !DILocation(line: 10811, column: 20, scope: !17210)
!17215 = !DILocation(line: 10811, column: 39, scope: !17210)
!17216 = !DILocation(line: 10811, column: 28, scope: !17210)
!17217 = !DILocalVariable(name: "adv_dvc", scope: !17210, file: !3, line: 10812, type: !10634)
!17218 = !DILocation(line: 10812, column: 22, scope: !17210)
!17219 = !DILocation(line: 10812, column: 33, scope: !17210)
!17220 = !DILocation(line: 10812, column: 40, scope: !17210)
!17221 = !DILocation(line: 10812, column: 48, scope: !17210)
!17222 = !DILocalVariable(name: "sgblk_pool_size", scope: !17210, file: !3, line: 10813, type: !308)
!17223 = !DILocation(line: 10813, column: 9, scope: !17210)
!17224 = !DILocalVariable(name: "warn_code", scope: !17210, file: !3, line: 10814, type: !245)
!17225 = !DILocation(line: 10814, column: 6, scope: !17210)
!17226 = !DILocalVariable(name: "err_code", scope: !17210, file: !3, line: 10814, type: !245)
!17227 = !DILocation(line: 10814, column: 17, scope: !17210)
!17228 = !DILocation(line: 10820, column: 40, scope: !17210)
!17229 = !DILocation(line: 10820, column: 47, scope: !17210)
!17230 = !DILocation(line: 10821, column: 25, scope: !17210)
!17231 = !DILocation(line: 10821, column: 34, scope: !17210)
!17232 = !DILocation(line: 10820, column: 21, scope: !17210)
!17233 = !DILocation(line: 10820, column: 2, scope: !17210)
!17234 = !DILocation(line: 10820, column: 11, scope: !17210)
!17235 = !DILocation(line: 10820, column: 19, scope: !17210)
!17236 = !DILocation(line: 10824, column: 7, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 10824, column: 6)
!17238 = !DILocation(line: 10824, column: 16, scope: !17237)
!17239 = !DILocation(line: 10824, column: 6, scope: !17210)
!17240 = !DILocation(line: 10825, column: 3, scope: !17237)
!17241 = !DILocation(line: 10832, column: 25, scope: !17210)
!17242 = !DILocation(line: 10832, column: 34, scope: !17210)
!17243 = !DILocation(line: 10832, column: 47, scope: !17210)
!17244 = !DILocation(line: 10832, column: 2, scope: !17210)
!17245 = !DILocation(line: 10832, column: 9, scope: !17210)
!17246 = !DILocation(line: 10832, column: 23, scope: !17210)
!17247 = !DILocation(line: 10833, column: 6, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 10833, column: 6)
!17249 = !DILocation(line: 10833, column: 13, scope: !17248)
!17250 = !DILocation(line: 10833, column: 27, scope: !17248)
!17251 = !DILocation(line: 10833, column: 6, scope: !17210)
!17252 = !DILocation(line: 10835, column: 26, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17248, file: !3, line: 10833, column: 35)
!17254 = !DILocation(line: 10835, column: 3, scope: !17253)
!17255 = !DILocation(line: 10835, column: 10, scope: !17253)
!17256 = !DILocation(line: 10835, column: 24, scope: !17253)
!17257 = !DILocation(line: 10836, column: 2, scope: !17253)
!17258 = !DILocation(line: 10837, column: 39, scope: !17210)
!17259 = !DILocation(line: 10837, column: 46, scope: !17210)
!17260 = !DILocation(line: 10837, column: 51, scope: !17210)
!17261 = !DILocation(line: 10837, column: 58, scope: !17210)
!17262 = !DILocation(line: 10838, column: 4, scope: !17210)
!17263 = !DILocation(line: 10838, column: 11, scope: !17210)
!17264 = !DILocation(line: 10837, column: 20, scope: !17210)
!17265 = !DILocation(line: 10837, column: 2, scope: !17210)
!17266 = !DILocation(line: 10837, column: 9, scope: !17210)
!17267 = !DILocation(line: 10837, column: 18, scope: !17210)
!17268 = !DILocation(line: 10840, column: 7, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 10840, column: 6)
!17270 = !DILocation(line: 10840, column: 14, scope: !17269)
!17271 = !DILocation(line: 10840, column: 6, scope: !17210)
!17272 = !DILocation(line: 10841, column: 3, scope: !17269)
!17273 = !DILocation(line: 10850, column: 18, scope: !17210)
!17274 = !DILocation(line: 10851, column: 55, scope: !17210)
!17275 = !DILocation(line: 10851, column: 62, scope: !17210)
!17276 = !DILocation(line: 10852, column: 7, scope: !17210)
!17277 = !DILocation(line: 10851, column: 26, scope: !17210)
!17278 = !DILocation(line: 10851, column: 2, scope: !17210)
!17279 = !DILocation(line: 10851, column: 9, scope: !17210)
!17280 = !DILocation(line: 10851, column: 24, scope: !17210)
!17281 = !DILocation(line: 10857, column: 7, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 10857, column: 6)
!17283 = !DILocation(line: 10857, column: 14, scope: !17282)
!17284 = !DILocation(line: 10857, column: 6, scope: !17210)
!17285 = !DILocation(line: 10858, column: 3, scope: !17282)
!17286 = !DILocation(line: 10860, column: 6, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 10860, column: 6)
!17288 = !DILocation(line: 10860, column: 15, scope: !17287)
!17289 = !DILocation(line: 10860, column: 25, scope: !17287)
!17290 = !DILocation(line: 10860, column: 6, scope: !17210)
!17291 = !DILocation(line: 10862, column: 36, scope: !17292)
!17292 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 10860, column: 46)
!17293 = !DILocation(line: 10862, column: 15, scope: !17292)
!17294 = !DILocation(line: 10862, column: 13, scope: !17292)
!17295 = !DILocation(line: 10863, column: 2, scope: !17292)
!17296 = !DILocation(line: 10863, column: 13, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 10863, column: 13)
!17298 = !DILocation(line: 10863, column: 22, scope: !17297)
!17299 = !DILocation(line: 10863, column: 32, scope: !17297)
!17300 = !DILocation(line: 10863, column: 13, scope: !17287)
!17301 = !DILocation(line: 10865, column: 39, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17297, file: !3, line: 10863, column: 56)
!17303 = !DILocation(line: 10865, column: 15, scope: !17302)
!17304 = !DILocation(line: 10865, column: 13, scope: !17302)
!17305 = !DILocation(line: 10866, column: 2, scope: !17302)
!17306 = !DILocation(line: 10868, column: 39, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17297, file: !3, line: 10866, column: 9)
!17308 = !DILocation(line: 10868, column: 15, scope: !17307)
!17309 = !DILocation(line: 10868, column: 13, scope: !17307)
!17310 = !DILocation(line: 10870, column: 13, scope: !17210)
!17311 = !DILocation(line: 10870, column: 22, scope: !17210)
!17312 = !DILocation(line: 10870, column: 11, scope: !17210)
!17313 = !DILocation(line: 10872, column: 6, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 10872, column: 6)
!17315 = !DILocation(line: 10872, column: 16, scope: !17314)
!17316 = !DILocation(line: 10872, column: 19, scope: !17314)
!17317 = !DILocation(line: 10872, column: 6, scope: !17210)
!17318 = !DILocation(line: 10873, column: 3, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17314, file: !3, line: 10872, column: 29)
!17320 = !DILocation(line: 10875, column: 2, scope: !17319)
!17321 = !DILocation(line: 10877, column: 2, scope: !17210)
!17322 = !DILabel(scope: !17210, name: "kmalloc_failed", file: !3, line: 10879)
!17323 = !DILocation(line: 10879, column: 2, scope: !17210)
!17324 = !DILocation(line: 10880, column: 2, scope: !17210)
!17325 = !DILocation(line: 10881, column: 11, scope: !17210)
!17326 = !DILocation(line: 10881, column: 2, scope: !17210)
!17327 = !DILabel(scope: !17210, name: "exit", file: !3, line: 10882)
!17328 = !DILocation(line: 10882, column: 2, scope: !17210)
!17329 = !DILocation(line: 10883, column: 9, scope: !17210)
!17330 = !DILocation(line: 10883, column: 2, scope: !17210)
!17331 = distinct !DISubprogram(name: "scsi_add_host", scope: !154, file: !154, line: 753, type: !17332, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17332 = !DISubroutineType(types: !17333)
!17333 = !{!245, !4796, !194}
!17334 = !DILocalVariable(name: "host", arg: 1, scope: !17331, file: !154, line: 753, type: !4796)
!17335 = !DILocation(line: 753, column: 64, scope: !17331)
!17336 = !DILocalVariable(name: "dev", arg: 2, scope: !17331, file: !154, line: 754, type: !194)
!17337 = !DILocation(line: 754, column: 26, scope: !17331)
!17338 = !DILocation(line: 756, column: 32, scope: !17331)
!17339 = !DILocation(line: 756, column: 38, scope: !17331)
!17340 = !DILocation(line: 756, column: 43, scope: !17331)
!17341 = !DILocation(line: 756, column: 9, scope: !17331)
!17342 = !DILocation(line: 756, column: 2, scope: !17331)
!17343 = distinct !DISubprogram(name: "advansys_wide_free_mem", scope: !3, file: !3, line: 10886, type: !17344, scopeLine: 10887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17344 = !DISubroutineType(types: !17345)
!17345 = !{null, !190}
!17346 = !DILocalVariable(name: "board", arg: 1, scope: !17343, file: !3, line: 10886, type: !190)
!17347 = !DILocation(line: 10886, column: 54, scope: !17343)
!17348 = !DILocalVariable(name: "adv_dvc", scope: !17343, file: !3, line: 10888, type: !10634)
!17349 = !DILocation(line: 10888, column: 22, scope: !17343)
!17350 = !DILocation(line: 10888, column: 33, scope: !17343)
!17351 = !DILocation(line: 10888, column: 40, scope: !17343)
!17352 = !DILocation(line: 10888, column: 48, scope: !17343)
!17353 = !DILocation(line: 10890, column: 6, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17343, file: !3, line: 10890, column: 6)
!17355 = !DILocation(line: 10890, column: 15, scope: !17354)
!17356 = !DILocation(line: 10890, column: 6, scope: !17343)
!17357 = !DILocation(line: 10891, column: 21, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17354, file: !3, line: 10890, column: 24)
!17359 = !DILocation(line: 10891, column: 28, scope: !17358)
!17360 = !DILocation(line: 10892, column: 7, scope: !17358)
!17361 = !DILocation(line: 10892, column: 16, scope: !17358)
!17362 = !DILocation(line: 10892, column: 25, scope: !17358)
!17363 = !DILocation(line: 10892, column: 34, scope: !17358)
!17364 = !DILocation(line: 10891, column: 3, scope: !17358)
!17365 = !DILocation(line: 10893, column: 3, scope: !17358)
!17366 = !DILocation(line: 10893, column: 12, scope: !17358)
!17367 = !DILocation(line: 10893, column: 20, scope: !17358)
!17368 = !DILocation(line: 10894, column: 2, scope: !17358)
!17369 = !DILocation(line: 10895, column: 6, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17343, file: !3, line: 10895, column: 6)
!17371 = !DILocation(line: 10895, column: 13, scope: !17370)
!17372 = !DILocation(line: 10895, column: 6, scope: !17343)
!17373 = !DILocation(line: 10896, column: 21, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17370, file: !3, line: 10895, column: 23)
!17375 = !DILocation(line: 10896, column: 28, scope: !17374)
!17376 = !DILocation(line: 10896, column: 33, scope: !17374)
!17377 = !DILocation(line: 10896, column: 40, scope: !17374)
!17378 = !DILocation(line: 10897, column: 7, scope: !17374)
!17379 = !DILocation(line: 10897, column: 14, scope: !17374)
!17380 = !DILocation(line: 10897, column: 24, scope: !17374)
!17381 = !DILocation(line: 10897, column: 31, scope: !17374)
!17382 = !DILocation(line: 10896, column: 3, scope: !17374)
!17383 = !DILocation(line: 10898, column: 3, scope: !17374)
!17384 = !DILocation(line: 10898, column: 10, scope: !17374)
!17385 = !DILocation(line: 10898, column: 19, scope: !17374)
!17386 = !DILocation(line: 10899, column: 2, scope: !17374)
!17387 = !DILocation(line: 10900, column: 6, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17343, file: !3, line: 10900, column: 6)
!17389 = !DILocation(line: 10900, column: 13, scope: !17388)
!17390 = !DILocation(line: 10900, column: 6, scope: !17343)
!17391 = !DILocation(line: 10901, column: 20, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17388, file: !3, line: 10900, column: 29)
!17393 = !DILocation(line: 10901, column: 27, scope: !17392)
!17394 = !DILocation(line: 10901, column: 3, scope: !17392)
!17395 = !DILocation(line: 10902, column: 3, scope: !17392)
!17396 = !DILocation(line: 10902, column: 10, scope: !17392)
!17397 = !DILocation(line: 10902, column: 25, scope: !17392)
!17398 = !DILocation(line: 10903, column: 2, scope: !17392)
!17399 = !DILocation(line: 10904, column: 1, scope: !17343)
!17400 = distinct !DISubprogram(name: "AscInitAscDvcVar", scope: !3, file: !3, line: 8752, type: !11287, scopeLine: 8753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17401 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !17400, file: !3, line: 8752, type: !6375)
!17402 = !DILocation(line: 8752, column: 43, scope: !17400)
!17403 = !DILocalVariable(name: "i", scope: !17400, file: !3, line: 8754, type: !245)
!17404 = !DILocation(line: 8754, column: 6, scope: !17400)
!17405 = !DILocalVariable(name: "iop_base", scope: !17400, file: !3, line: 8755, type: !7)
!17406 = !DILocation(line: 8755, column: 11, scope: !17400)
!17407 = !DILocalVariable(name: "chip_version", scope: !17400, file: !3, line: 8756, type: !5245)
!17408 = !DILocation(line: 8756, column: 8, scope: !17400)
!17409 = !DILocation(line: 8758, column: 13, scope: !17400)
!17410 = !DILocation(line: 8758, column: 22, scope: !17400)
!17411 = !DILocation(line: 8758, column: 11, scope: !17400)
!17412 = !DILocation(line: 8759, column: 2, scope: !17400)
!17413 = !DILocation(line: 8759, column: 11, scope: !17400)
!17414 = !DILocation(line: 8759, column: 20, scope: !17400)
!17415 = !DILocation(line: 8760, column: 7, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17400, file: !3, line: 8760, column: 6)
!17417 = !DILocation(line: 8760, column: 16, scope: !17416)
!17418 = !DILocation(line: 8760, column: 25, scope: !17416)
!17419 = !DILocation(line: 8761, column: 60, scope: !17416)
!17420 = !DILocation(line: 8760, column: 6, scope: !17400)
!17421 = !DILocation(line: 8762, column: 3, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17416, file: !3, line: 8761, column: 66)
!17423 = !DILocation(line: 8762, column: 12, scope: !17422)
!17424 = !DILocation(line: 8762, column: 21, scope: !17422)
!17425 = !DILocation(line: 8763, column: 2, scope: !17422)
!17426 = !DILocation(line: 8764, column: 2, scope: !17400)
!17427 = !DILocation(line: 8765, column: 2, scope: !17400)
!17428 = !DILocation(line: 8766, column: 2, scope: !17400)
!17429 = !DILocation(line: 8766, column: 11, scope: !17400)
!17430 = !DILocation(line: 8766, column: 24, scope: !17400)
!17431 = !DILocation(line: 8767, column: 2, scope: !17400)
!17432 = !DILocation(line: 8767, column: 11, scope: !17400)
!17433 = !DILocation(line: 8767, column: 29, scope: !17400)
!17434 = !DILocation(line: 8768, column: 2, scope: !17400)
!17435 = !DILocation(line: 8768, column: 11, scope: !17400)
!17436 = !DILocation(line: 8768, column: 36, scope: !17400)
!17437 = !DILocation(line: 8770, column: 2, scope: !17400)
!17438 = !DILocation(line: 8770, column: 11, scope: !17400)
!17439 = !DILocation(line: 8770, column: 21, scope: !17400)
!17440 = !DILocation(line: 8771, column: 2, scope: !17400)
!17441 = !DILocation(line: 8771, column: 11, scope: !17400)
!17442 = !DILocation(line: 8771, column: 25, scope: !17400)
!17443 = !DILocation(line: 8772, column: 2, scope: !17400)
!17444 = !DILocation(line: 8772, column: 11, scope: !17400)
!17445 = !DILocation(line: 8772, column: 21, scope: !17400)
!17446 = !DILocation(line: 8773, column: 2, scope: !17400)
!17447 = !DILocation(line: 8773, column: 11, scope: !17400)
!17448 = !DILocation(line: 8773, column: 27, scope: !17400)
!17449 = !DILocation(line: 8774, column: 2, scope: !17400)
!17450 = !DILocation(line: 8774, column: 11, scope: !17400)
!17451 = !DILocation(line: 8774, column: 27, scope: !17400)
!17452 = !DILocation(line: 8775, column: 2, scope: !17400)
!17453 = !DILocation(line: 8775, column: 11, scope: !17400)
!17454 = !DILocation(line: 8775, column: 26, scope: !17400)
!17455 = !DILocation(line: 8776, column: 2, scope: !17400)
!17456 = !DILocation(line: 8776, column: 11, scope: !17400)
!17457 = !DILocation(line: 8776, column: 19, scope: !17400)
!17458 = !DILocation(line: 8777, column: 2, scope: !17400)
!17459 = !DILocation(line: 8777, column: 11, scope: !17400)
!17460 = !DILocation(line: 8777, column: 26, scope: !17400)
!17461 = !DILocation(line: 8778, column: 2, scope: !17400)
!17462 = !DILocation(line: 8778, column: 11, scope: !17400)
!17463 = !DILocation(line: 8778, column: 30, scope: !17400)
!17464 = !DILocation(line: 8779, column: 2, scope: !17400)
!17465 = !DILocation(line: 8779, column: 11, scope: !17400)
!17466 = !DILocation(line: 8779, column: 21, scope: !17400)
!17467 = !DILocation(line: 8780, column: 2, scope: !17400)
!17468 = !DILocation(line: 8780, column: 11, scope: !17400)
!17469 = !DILocation(line: 8780, column: 16, scope: !17400)
!17470 = !DILocation(line: 8781, column: 2, scope: !17400)
!17471 = !DILocation(line: 8781, column: 11, scope: !17400)
!17472 = !DILocation(line: 8781, column: 26, scope: !17400)
!17473 = !DILocation(line: 8782, column: 2, scope: !17400)
!17474 = !DILocation(line: 8782, column: 11, scope: !17400)
!17475 = !DILocation(line: 8782, column: 16, scope: !17400)
!17476 = !DILocation(line: 8782, column: 31, scope: !17400)
!17477 = !DILocation(line: 8783, column: 2, scope: !17400)
!17478 = !DILocation(line: 8783, column: 11, scope: !17400)
!17479 = !DILocation(line: 8783, column: 16, scope: !17400)
!17480 = !DILocation(line: 8783, column: 32, scope: !17400)
!17481 = !DILocation(line: 8784, column: 2, scope: !17400)
!17482 = !DILocation(line: 8784, column: 11, scope: !17400)
!17483 = !DILocation(line: 8784, column: 20, scope: !17400)
!17484 = !DILocation(line: 8785, column: 2, scope: !17400)
!17485 = !DILocation(line: 8785, column: 11, scope: !17400)
!17486 = !DILocation(line: 8785, column: 21, scope: !17400)
!17487 = !DILocation(line: 8786, column: 2, scope: !17400)
!17488 = !DILocation(line: 8786, column: 11, scope: !17400)
!17489 = !DILocation(line: 8786, column: 25, scope: !17400)
!17490 = !DILocation(line: 8787, column: 2, scope: !17400)
!17491 = !DILocation(line: 8787, column: 11, scope: !17400)
!17492 = !DILocation(line: 8787, column: 27, scope: !17400)
!17493 = !DILocation(line: 8788, column: 2, scope: !17400)
!17494 = !DILocation(line: 8788, column: 11, scope: !17400)
!17495 = !DILocation(line: 8788, column: 23, scope: !17400)
!17496 = !DILocation(line: 8789, column: 45, scope: !17400)
!17497 = !DILocation(line: 8789, column: 54, scope: !17400)
!17498 = !DILocation(line: 8789, column: 27, scope: !17400)
!17499 = !DILocation(line: 8789, column: 2, scope: !17400)
!17500 = !DILocation(line: 8789, column: 11, scope: !17400)
!17501 = !DILocation(line: 8789, column: 25, scope: !17400)
!17502 = !DILocation(line: 8790, column: 2, scope: !17400)
!17503 = !DILocation(line: 8790, column: 11, scope: !17400)
!17504 = !DILocation(line: 8790, column: 16, scope: !17400)
!17505 = !DILocation(line: 8790, column: 28, scope: !17400)
!17506 = !DILocation(line: 8791, column: 2, scope: !17400)
!17507 = !DILocation(line: 8791, column: 11, scope: !17400)
!17508 = !DILocation(line: 8791, column: 16, scope: !17400)
!17509 = !DILocation(line: 8791, column: 28, scope: !17400)
!17510 = !DILocation(line: 8792, column: 2, scope: !17400)
!17511 = !DILocation(line: 8792, column: 11, scope: !17400)
!17512 = !DILocation(line: 8792, column: 16, scope: !17400)
!17513 = !DILocation(line: 8792, column: 29, scope: !17400)
!17514 = !DILocation(line: 8793, column: 35, scope: !17400)
!17515 = !DILocation(line: 8793, column: 45, scope: !17400)
!17516 = !DILocation(line: 8793, column: 54, scope: !17400)
!17517 = !DILocation(line: 8793, column: 17, scope: !17400)
!17518 = !DILocation(line: 8793, column: 15, scope: !17400)
!17519 = !DILocation(line: 8794, column: 31, scope: !17400)
!17520 = !DILocation(line: 8794, column: 2, scope: !17400)
!17521 = !DILocation(line: 8794, column: 11, scope: !17400)
!17522 = !DILocation(line: 8794, column: 16, scope: !17400)
!17523 = !DILocation(line: 8794, column: 29, scope: !17400)
!17524 = !DILocation(line: 8795, column: 2, scope: !17400)
!17525 = !DILocation(line: 8795, column: 11, scope: !17400)
!17526 = !DILocation(line: 8795, column: 27, scope: !17400)
!17527 = !DILocation(line: 8796, column: 2, scope: !17400)
!17528 = !DILocation(line: 8796, column: 11, scope: !17400)
!17529 = !DILocation(line: 8796, column: 26, scope: !17400)
!17530 = !DILocation(line: 8797, column: 7, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17400, file: !3, line: 8797, column: 6)
!17532 = !DILocation(line: 8797, column: 16, scope: !17531)
!17533 = !DILocation(line: 8797, column: 25, scope: !17531)
!17534 = !DILocation(line: 8797, column: 39, scope: !17531)
!17535 = !DILocation(line: 8798, column: 7, scope: !17531)
!17536 = !DILocation(line: 8798, column: 20, scope: !17531)
!17537 = !DILocation(line: 8797, column: 6, scope: !17400)
!17538 = !DILocation(line: 8799, column: 3, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17531, file: !3, line: 8798, column: 53)
!17540 = !DILocation(line: 8799, column: 12, scope: !17539)
!17541 = !DILocation(line: 8799, column: 21, scope: !17539)
!17542 = !DILocation(line: 8800, column: 3, scope: !17539)
!17543 = !DILocation(line: 8800, column: 12, scope: !17539)
!17544 = !DILocation(line: 8800, column: 28, scope: !17539)
!17545 = !DILocation(line: 8801, column: 3, scope: !17539)
!17546 = !DILocation(line: 8801, column: 12, scope: !17539)
!17547 = !DILocation(line: 8801, column: 27, scope: !17539)
!17548 = !DILocation(line: 8802, column: 7, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17539, file: !3, line: 8802, column: 7)
!17550 = !DILocation(line: 8802, column: 20, scope: !17549)
!17551 = !DILocation(line: 8802, column: 7, scope: !17539)
!17552 = !DILocation(line: 8803, column: 4, scope: !17553)
!17553 = distinct !DILexicalBlock(scope: !17549, file: !3, line: 8802, column: 52)
!17554 = !DILocation(line: 8805, column: 3, scope: !17553)
!17555 = !DILocation(line: 8805, column: 14, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17549, file: !3, line: 8805, column: 14)
!17557 = !DILocation(line: 8805, column: 27, scope: !17556)
!17558 = !DILocation(line: 8805, column: 14, scope: !17549)
!17559 = !DILocation(line: 8806, column: 4, scope: !17560)
!17560 = distinct !DILexicalBlock(scope: !17556, file: !3, line: 8805, column: 59)
!17561 = !DILocation(line: 8809, column: 3, scope: !17560)
!17562 = !DILocation(line: 8810, column: 2, scope: !17539)
!17563 = !DILocation(line: 8811, column: 6, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17400, file: !3, line: 8811, column: 6)
!17565 = !DILocation(line: 8811, column: 15, scope: !17564)
!17566 = !DILocation(line: 8811, column: 24, scope: !17564)
!17567 = !DILocation(line: 8811, column: 6, scope: !17400)
!17568 = !DILocation(line: 8812, column: 3, scope: !17569)
!17569 = distinct !DILexicalBlock(scope: !17564, file: !3, line: 8811, column: 39)
!17570 = !DILocation(line: 8814, column: 2, scope: !17569)
!17571 = !DILocation(line: 8816, column: 2, scope: !17400)
!17572 = !DILocation(line: 8816, column: 11, scope: !17400)
!17573 = !DILocation(line: 8816, column: 16, scope: !17400)
!17574 = !DILocation(line: 8816, column: 30, scope: !17400)
!17575 = !DILocation(line: 8827, column: 9, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17400, file: !3, line: 8827, column: 2)
!17577 = !DILocation(line: 8827, column: 7, scope: !17576)
!17578 = !DILocation(line: 8827, column: 14, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17576, file: !3, line: 8827, column: 2)
!17580 = !DILocation(line: 8827, column: 16, scope: !17579)
!17581 = !DILocation(line: 8827, column: 2, scope: !17576)
!17582 = !DILocation(line: 8828, column: 3, scope: !17583)
!17583 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 8827, column: 37)
!17584 = !DILocation(line: 8828, column: 12, scope: !17583)
!17585 = !DILocation(line: 8828, column: 24, scope: !17583)
!17586 = !DILocation(line: 8828, column: 27, scope: !17583)
!17587 = !DILocation(line: 8829, column: 3, scope: !17583)
!17588 = !DILocation(line: 8829, column: 12, scope: !17583)
!17589 = !DILocation(line: 8829, column: 24, scope: !17583)
!17590 = !DILocation(line: 8829, column: 27, scope: !17583)
!17591 = !DILocation(line: 8830, column: 3, scope: !17583)
!17592 = !DILocation(line: 8830, column: 12, scope: !17583)
!17593 = !DILocation(line: 8830, column: 28, scope: !17583)
!17594 = !DILocation(line: 8830, column: 31, scope: !17583)
!17595 = !DILocation(line: 8831, column: 3, scope: !17583)
!17596 = !DILocation(line: 8831, column: 12, scope: !17583)
!17597 = !DILocation(line: 8831, column: 28, scope: !17583)
!17598 = !DILocation(line: 8831, column: 31, scope: !17583)
!17599 = !DILocation(line: 8832, column: 3, scope: !17583)
!17600 = !DILocation(line: 8832, column: 12, scope: !17583)
!17601 = !DILocation(line: 8832, column: 17, scope: !17583)
!17602 = !DILocation(line: 8832, column: 29, scope: !17583)
!17603 = !DILocation(line: 8832, column: 32, scope: !17583)
!17604 = !DILocation(line: 8833, column: 2, scope: !17583)
!17605 = !DILocation(line: 8827, column: 33, scope: !17579)
!17606 = !DILocation(line: 8827, column: 2, scope: !17579)
!17607 = distinct !{!17607, !17581, !17608}
!17608 = !DILocation(line: 8833, column: 2, scope: !17576)
!17609 = !DILocation(line: 8834, column: 1, scope: !17400)
!17610 = distinct !DISubprogram(name: "AscInitFromEEP", scope: !3, file: !3, line: 9099, type: !10729, scopeLine: 9100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!17611 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !17610, file: !3, line: 9099, type: !6375)
!17612 = !DILocation(line: 9099, column: 40, scope: !17610)
!17613 = !DILocalVariable(name: "eep_config_buf", scope: !17610, file: !3, line: 9101, type: !5419)
!17614 = !DILocation(line: 9101, column: 16, scope: !17610)
!17615 = !DILocalVariable(name: "eep_config", scope: !17610, file: !3, line: 9102, type: !5990)
!17616 = !DILocation(line: 9102, column: 17, scope: !17610)
!17617 = !DILocalVariable(name: "iop_base", scope: !17610, file: !3, line: 9103, type: !7)
!17618 = !DILocation(line: 9103, column: 11, scope: !17610)
!17619 = !DILocalVariable(name: "chksum", scope: !17610, file: !3, line: 9104, type: !5240)
!17620 = !DILocation(line: 9104, column: 9, scope: !17610)
!17621 = !DILocalVariable(name: "warn_code", scope: !17610, file: !3, line: 9105, type: !5240)
!17622 = !DILocation(line: 9105, column: 9, scope: !17610)
!17623 = !DILocalVariable(name: "cfg_msw", scope: !17610, file: !3, line: 9106, type: !5240)
!17624 = !DILocation(line: 9106, column: 9, scope: !17610)
!17625 = !DILocalVariable(name: "cfg_lsw", scope: !17610, file: !3, line: 9106, type: !5240)
!17626 = !DILocation(line: 9106, column: 18, scope: !17610)
!17627 = !DILocalVariable(name: "i", scope: !17610, file: !3, line: 9107, type: !245)
!17628 = !DILocation(line: 9107, column: 6, scope: !17610)
!17629 = !DILocalVariable(name: "write_eep", scope: !17610, file: !3, line: 9108, type: !245)
!17630 = !DILocation(line: 9108, column: 6, scope: !17610)
!17631 = !DILocation(line: 9110, column: 13, scope: !17610)
!17632 = !DILocation(line: 9110, column: 22, scope: !17610)
!17633 = !DILocation(line: 9110, column: 11, scope: !17610)
!17634 = !DILocation(line: 9111, column: 12, scope: !17610)
!17635 = !DILocation(line: 9112, column: 19, scope: !17610)
!17636 = !DILocation(line: 9112, column: 2, scope: !17610)
!17637 = !DILocation(line: 9113, column: 18, scope: !17610)
!17638 = !DILocation(line: 9113, column: 2, scope: !17610)
!17639 = !DILocation(line: 9114, column: 19, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9114, column: 6)
!17641 = !DILocation(line: 9114, column: 7, scope: !17640)
!17642 = !DILocation(line: 9114, column: 30, scope: !17640)
!17643 = !DILocation(line: 9115, column: 26, scope: !17640)
!17644 = !DILocation(line: 9115, column: 7, scope: !17640)
!17645 = !DILocation(line: 9115, column: 36, scope: !17640)
!17646 = !DILocation(line: 9114, column: 6, scope: !17610)
!17647 = !DILocation(line: 9116, column: 3, scope: !17648)
!17648 = distinct !DILexicalBlock(scope: !17640, file: !3, line: 9115, column: 43)
!17649 = !DILocation(line: 9116, column: 12, scope: !17648)
!17650 = !DILocation(line: 9116, column: 23, scope: !17648)
!17651 = !DILocation(line: 9117, column: 26, scope: !17648)
!17652 = !DILocation(line: 9117, column: 3, scope: !17648)
!17653 = !DILocation(line: 9118, column: 3, scope: !17648)
!17654 = !DILocation(line: 9118, column: 3, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17656, file: !3, line: 9118, column: 3)
!17656 = distinct !DILexicalBlock(scope: !17648, file: !3, line: 9118, column: 3)
!17657 = !DILocation(line: 9118, column: 3, scope: !17656)
!17658 = !DILocation(line: 9118, column: 3, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17660, file: !3, line: 9118, column: 3)
!17660 = distinct !DILexicalBlock(scope: !17655, file: !3, line: 9118, column: 3)
!17661 = !DILocation(line: 9118, column: 3, scope: !17660)
!17662 = !DILocation(line: 9118, column: 3, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17655, file: !3, line: 9118, column: 3)
!17664 = !DILocalVariable(name: "__ms", scope: !17665, file: !3, line: 9118, type: !189)
!17665 = distinct !DILexicalBlock(scope: !17648, file: !3, line: 9118, column: 3)
!17666 = !DILocation(line: 9118, column: 3, scope: !17665)
!17667 = !DILocation(line: 9118, column: 3, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17669, file: !3, line: 9118, column: 3)
!17669 = distinct !DILexicalBlock(scope: !17670, file: !3, line: 9118, column: 3)
!17670 = distinct !DILexicalBlock(scope: !17671, file: !3, line: 9118, column: 3)
!17671 = distinct !DILexicalBlock(scope: !17665, file: !3, line: 9118, column: 3)
!17672 = distinct !{!17672, !17666, !17666}
!17673 = !DILocation(line: 9119, column: 2, scope: !17648)
!17674 = !DILocation(line: 9120, column: 23, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9120, column: 6)
!17676 = !DILocation(line: 9120, column: 7, scope: !17675)
!17677 = !DILocation(line: 9120, column: 6, scope: !17610)
!17678 = !DILocation(line: 9121, column: 3, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17675, file: !3, line: 9120, column: 34)
!17680 = !DILocation(line: 9121, column: 12, scope: !17679)
!17681 = !DILocation(line: 9121, column: 21, scope: !17679)
!17682 = !DILocation(line: 9122, column: 11, scope: !17679)
!17683 = !DILocation(line: 9122, column: 10, scope: !17679)
!17684 = !DILocation(line: 9122, column: 3, scope: !17679)
!17685 = !DILocation(line: 9124, column: 2, scope: !17610)
!17686 = !DILocation(line: 9125, column: 6, scope: !17687)
!17687 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9125, column: 6)
!17688 = !DILocation(line: 9125, column: 29, scope: !17687)
!17689 = !DILocation(line: 9125, column: 6, scope: !17610)
!17690 = !DILocation(line: 9126, column: 3, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17687, file: !3, line: 9125, column: 54)
!17692 = !DILocation(line: 9126, column: 12, scope: !17691)
!17693 = !DILocation(line: 9126, column: 21, scope: !17691)
!17694 = !DILocation(line: 9127, column: 11, scope: !17691)
!17695 = !DILocation(line: 9127, column: 10, scope: !17691)
!17696 = !DILocation(line: 9127, column: 3, scope: !17691)
!17697 = !DILocation(line: 9129, column: 13, scope: !17610)
!17698 = !DILocation(line: 9130, column: 12, scope: !17610)
!17699 = !DILocation(line: 9130, column: 10, scope: !17610)
!17700 = !DILocation(line: 9131, column: 12, scope: !17610)
!17701 = !DILocation(line: 9131, column: 10, scope: !17610)
!17702 = !DILocation(line: 9132, column: 7, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9132, column: 6)
!17704 = !DILocation(line: 9132, column: 15, scope: !17703)
!17705 = !DILocation(line: 9132, column: 39, scope: !17703)
!17706 = !DILocation(line: 9132, column: 6, scope: !17610)
!17707 = !DILocation(line: 9133, column: 11, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17703, file: !3, line: 9132, column: 45)
!17709 = !DILocation(line: 9134, column: 13, scope: !17708)
!17710 = !DILocation(line: 9135, column: 3, scope: !17708)
!17711 = !DILocation(line: 9136, column: 2, scope: !17708)
!17712 = !DILocation(line: 9137, column: 27, scope: !17610)
!17713 = !DILocation(line: 9137, column: 37, scope: !17610)
!17714 = !DILocation(line: 9137, column: 49, scope: !17610)
!17715 = !DILocation(line: 9137, column: 58, scope: !17610)
!17716 = !DILocation(line: 9137, column: 11, scope: !17610)
!17717 = !DILocation(line: 9137, column: 9, scope: !17610)
!17718 = !DILocation(line: 9139, column: 6, scope: !17719)
!17719 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9139, column: 6)
!17720 = !DILocation(line: 9139, column: 13, scope: !17719)
!17721 = !DILocation(line: 9139, column: 6, scope: !17610)
!17722 = !DILocation(line: 9140, column: 10, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17719, file: !3, line: 9139, column: 19)
!17724 = !DILocation(line: 9141, column: 2, scope: !17723)
!17725 = !DILocation(line: 9142, column: 6, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9142, column: 6)
!17727 = !DILocation(line: 9142, column: 33, scope: !17726)
!17728 = !DILocation(line: 9142, column: 6, scope: !17610)
!17729 = !DILocation(line: 9143, column: 13, scope: !17730)
!17730 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 9142, column: 52)
!17731 = !DILocation(line: 9144, column: 7, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17730, file: !3, line: 9144, column: 7)
!17733 = !DILocation(line: 9144, column: 16, scope: !17732)
!17734 = !DILocation(line: 9144, column: 21, scope: !17732)
!17735 = !DILocation(line: 9144, column: 34, scope: !17732)
!17736 = !DILocation(line: 9144, column: 7, scope: !17730)
!17737 = !DILocation(line: 9145, column: 8, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17739, file: !3, line: 9145, column: 8)
!17739 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 9144, column: 40)
!17740 = !DILocation(line: 9145, column: 20, scope: !17738)
!17741 = !DILocation(line: 9145, column: 31, scope: !17738)
!17742 = !DILocation(line: 9145, column: 28, scope: !17738)
!17743 = !DILocation(line: 9145, column: 8, scope: !17739)
!17744 = !DILocation(line: 9146, column: 15, scope: !17745)
!17745 = distinct !DILexicalBlock(scope: !17738, file: !3, line: 9145, column: 40)
!17746 = !DILocation(line: 9148, column: 9, scope: !17745)
!17747 = !DILocation(line: 9147, column: 5, scope: !17745)
!17748 = !DILocation(line: 9147, column: 17, scope: !17745)
!17749 = !DILocation(line: 9147, column: 25, scope: !17745)
!17750 = !DILocation(line: 9149, column: 4, scope: !17745)
!17751 = !DILocation(line: 9150, column: 8, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17739, file: !3, line: 9150, column: 8)
!17753 = !DILocation(line: 9150, column: 20, scope: !17752)
!17754 = !DILocation(line: 9150, column: 31, scope: !17752)
!17755 = !DILocation(line: 9150, column: 28, scope: !17752)
!17756 = !DILocation(line: 9150, column: 8, scope: !17739)
!17757 = !DILocation(line: 9151, column: 15, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17752, file: !3, line: 9150, column: 40)
!17759 = !DILocation(line: 9153, column: 9, scope: !17758)
!17760 = !DILocation(line: 9152, column: 5, scope: !17758)
!17761 = !DILocation(line: 9152, column: 17, scope: !17758)
!17762 = !DILocation(line: 9152, column: 25, scope: !17758)
!17763 = !DILocation(line: 9154, column: 4, scope: !17758)
!17764 = !DILocation(line: 9155, column: 3, scope: !17739)
!17765 = !DILocation(line: 9156, column: 2, scope: !17730)
!17766 = !DILocation(line: 9157, column: 2, scope: !17610)
!17767 = !DILocation(line: 9157, column: 14, scope: !17610)
!17768 = !DILocation(line: 9157, column: 22, scope: !17610)
!17769 = !DILocation(line: 9158, column: 2, scope: !17610)
!17770 = !DILocation(line: 9158, column: 14, scope: !17610)
!17771 = !DILocation(line: 9158, column: 22, scope: !17610)
!17772 = !DILocation(line: 9160, column: 6, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9160, column: 6)
!17774 = !DILocation(line: 9160, column: 16, scope: !17773)
!17775 = !DILocation(line: 9160, column: 28, scope: !17773)
!17776 = !DILocation(line: 9160, column: 13, scope: !17773)
!17777 = !DILocation(line: 9160, column: 6, scope: !17610)
!17778 = !DILocation(line: 9161, column: 25, scope: !17779)
!17779 = distinct !DILexicalBlock(scope: !17780, file: !3, line: 9161, column: 7)
!17780 = distinct !DILexicalBlock(scope: !17773, file: !3, line: 9160, column: 36)
!17781 = !DILocation(line: 9161, column: 35, scope: !17779)
!17782 = !DILocation(line: 9161, column: 44, scope: !17779)
!17783 = !DILocation(line: 9161, column: 7, scope: !17779)
!17784 = !DILocation(line: 9161, column: 54, scope: !17779)
!17785 = !DILocation(line: 9161, column: 7, scope: !17780)
!17786 = !DILocation(line: 9164, column: 4, scope: !17787)
!17787 = distinct !DILexicalBlock(scope: !17779, file: !3, line: 9162, column: 36)
!17788 = !DILocation(line: 9164, column: 16, scope: !17787)
!17789 = !DILocation(line: 9164, column: 26, scope: !17787)
!17790 = !DILocation(line: 9165, column: 4, scope: !17787)
!17791 = !DILocation(line: 9165, column: 16, scope: !17787)
!17792 = !DILocation(line: 9165, column: 28, scope: !17787)
!17793 = !DILocation(line: 9166, column: 4, scope: !17787)
!17794 = !DILocation(line: 9166, column: 16, scope: !17787)
!17795 = !DILocation(line: 9166, column: 28, scope: !17787)
!17796 = !DILocation(line: 9167, column: 4, scope: !17787)
!17797 = !DILocation(line: 9167, column: 16, scope: !17787)
!17798 = !DILocation(line: 9167, column: 28, scope: !17787)
!17799 = !DILocation(line: 9168, column: 4, scope: !17787)
!17800 = !DILocation(line: 9168, column: 16, scope: !17787)
!17801 = !DILocation(line: 9168, column: 30, scope: !17787)
!17802 = !DILocation(line: 9169, column: 4, scope: !17787)
!17803 = !DILocation(line: 9169, column: 16, scope: !17787)
!17804 = !DILocation(line: 9169, column: 28, scope: !17787)
!17805 = !DILocation(line: 9170, column: 4, scope: !17787)
!17806 = !DILocation(line: 9170, column: 16, scope: !17787)
!17807 = !DILocation(line: 9170, column: 21, scope: !17787)
!17808 = !DILocation(line: 9171, column: 4, scope: !17787)
!17809 = !DILocation(line: 9172, column: 4, scope: !17787)
!17810 = !DILocation(line: 9172, column: 16, scope: !17787)
!17811 = !DILocation(line: 9172, column: 24, scope: !17787)
!17812 = !DILocation(line: 9173, column: 4, scope: !17787)
!17813 = !DILocation(line: 9173, column: 16, scope: !17787)
!17814 = !DILocation(line: 9173, column: 32, scope: !17787)
!17815 = !DILocation(line: 9174, column: 4, scope: !17787)
!17816 = !DILocation(line: 9174, column: 16, scope: !17787)
!17817 = !DILocation(line: 9174, column: 32, scope: !17787)
!17818 = !DILocation(line: 9175, column: 4, scope: !17787)
!17819 = !DILocation(line: 9175, column: 16, scope: !17787)
!17820 = !DILocation(line: 9175, column: 32, scope: !17787)
!17821 = !DILocation(line: 9176, column: 4, scope: !17787)
!17822 = !DILocation(line: 9176, column: 16, scope: !17787)
!17823 = !DILocation(line: 9176, column: 32, scope: !17787)
!17824 = !DILocation(line: 9177, column: 4, scope: !17787)
!17825 = !DILocation(line: 9177, column: 16, scope: !17787)
!17826 = !DILocation(line: 9177, column: 32, scope: !17787)
!17827 = !DILocation(line: 9179, column: 4, scope: !17787)
!17828 = !DILocation(line: 9179, column: 16, scope: !17787)
!17829 = !DILocation(line: 9179, column: 32, scope: !17787)
!17830 = !DILocation(line: 9180, column: 3, scope: !17787)
!17831 = !DILocation(line: 9181, column: 4, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17833, file: !3, line: 9181, column: 4)
!17833 = distinct !DILexicalBlock(scope: !17779, file: !3, line: 9180, column: 10)
!17834 = !DILocation(line: 9183, column: 14, scope: !17833)
!17835 = !DILocation(line: 9184, column: 14, scope: !17833)
!17836 = !DILocation(line: 9186, column: 2, scope: !17780)
!17837 = !DILocation(line: 9187, column: 30, scope: !17610)
!17838 = !DILocation(line: 9187, column: 42, scope: !17610)
!17839 = !DILocation(line: 9187, column: 2, scope: !17610)
!17840 = !DILocation(line: 9187, column: 11, scope: !17610)
!17841 = !DILocation(line: 9187, column: 16, scope: !17610)
!17842 = !DILocation(line: 9187, column: 28, scope: !17610)
!17843 = !DILocation(line: 9188, column: 30, scope: !17610)
!17844 = !DILocation(line: 9188, column: 42, scope: !17610)
!17845 = !DILocation(line: 9188, column: 2, scope: !17610)
!17846 = !DILocation(line: 9188, column: 11, scope: !17610)
!17847 = !DILocation(line: 9188, column: 16, scope: !17610)
!17848 = !DILocation(line: 9188, column: 28, scope: !17610)
!17849 = !DILocation(line: 9189, column: 34, scope: !17610)
!17850 = !DILocation(line: 9189, column: 46, scope: !17610)
!17851 = !DILocation(line: 9189, column: 2, scope: !17610)
!17852 = !DILocation(line: 9189, column: 11, scope: !17610)
!17853 = !DILocation(line: 9189, column: 16, scope: !17610)
!17854 = !DILocation(line: 9189, column: 32, scope: !17610)
!17855 = !DILocation(line: 9190, column: 32, scope: !17610)
!17856 = !DILocation(line: 9190, column: 2, scope: !17610)
!17857 = !DILocation(line: 9190, column: 11, scope: !17610)
!17858 = !DILocation(line: 9190, column: 16, scope: !17610)
!17859 = !DILocation(line: 9190, column: 30, scope: !17610)
!17860 = !DILocation(line: 9191, column: 25, scope: !17610)
!17861 = !DILocation(line: 9191, column: 37, scope: !17610)
!17862 = !DILocation(line: 9191, column: 2, scope: !17610)
!17863 = !DILocation(line: 9191, column: 11, scope: !17610)
!17864 = !DILocation(line: 9191, column: 23, scope: !17610)
!17865 = !DILocation(line: 9192, column: 22, scope: !17610)
!17866 = !DILocation(line: 9192, column: 34, scope: !17610)
!17867 = !DILocation(line: 9192, column: 2, scope: !17610)
!17868 = !DILocation(line: 9192, column: 11, scope: !17610)
!17869 = !DILocation(line: 9192, column: 20, scope: !17610)
!17870 = !DILocation(line: 9193, column: 21, scope: !17610)
!17871 = !DILocation(line: 9193, column: 33, scope: !17610)
!17872 = !DILocation(line: 9193, column: 2, scope: !17610)
!17873 = !DILocation(line: 9193, column: 11, scope: !17610)
!17874 = !DILocation(line: 9193, column: 19, scope: !17610)
!17875 = !DILocation(line: 9194, column: 34, scope: !17610)
!17876 = !DILocation(line: 9194, column: 46, scope: !17610)
!17877 = !DILocation(line: 9194, column: 2, scope: !17610)
!17878 = !DILocation(line: 9194, column: 11, scope: !17610)
!17879 = !DILocation(line: 9194, column: 16, scope: !17610)
!17880 = !DILocation(line: 9194, column: 32, scope: !17610)
!17881 = !DILocation(line: 9195, column: 34, scope: !17610)
!17882 = !DILocation(line: 9195, column: 46, scope: !17610)
!17883 = !DILocation(line: 9195, column: 2, scope: !17610)
!17884 = !DILocation(line: 9195, column: 11, scope: !17610)
!17885 = !DILocation(line: 9195, column: 16, scope: !17610)
!17886 = !DILocation(line: 9195, column: 32, scope: !17610)
!17887 = !DILocation(line: 9196, column: 34, scope: !17610)
!17888 = !DILocation(line: 9196, column: 46, scope: !17610)
!17889 = !DILocation(line: 9196, column: 2, scope: !17610)
!17890 = !DILocation(line: 9196, column: 11, scope: !17610)
!17891 = !DILocation(line: 9196, column: 16, scope: !17610)
!17892 = !DILocation(line: 9196, column: 32, scope: !17610)
!17893 = !DILocation(line: 9197, column: 34, scope: !17610)
!17894 = !DILocation(line: 9197, column: 46, scope: !17610)
!17895 = !DILocation(line: 9197, column: 2, scope: !17610)
!17896 = !DILocation(line: 9197, column: 11, scope: !17610)
!17897 = !DILocation(line: 9197, column: 16, scope: !17610)
!17898 = !DILocation(line: 9197, column: 32, scope: !17610)
!17899 = !DILocation(line: 9198, column: 34, scope: !17610)
!17900 = !DILocation(line: 9198, column: 46, scope: !17610)
!17901 = !DILocation(line: 9198, column: 2, scope: !17610)
!17902 = !DILocation(line: 9198, column: 11, scope: !17610)
!17903 = !DILocation(line: 9198, column: 16, scope: !17610)
!17904 = !DILocation(line: 9198, column: 32, scope: !17610)
!17905 = !DILocation(line: 9199, column: 34, scope: !17610)
!17906 = !DILocation(line: 9199, column: 46, scope: !17610)
!17907 = !DILocation(line: 9199, column: 2, scope: !17610)
!17908 = !DILocation(line: 9199, column: 11, scope: !17610)
!17909 = !DILocation(line: 9199, column: 16, scope: !17610)
!17910 = !DILocation(line: 9199, column: 32, scope: !17610)
!17911 = !DILocation(line: 9200, column: 27, scope: !17912)
!17912 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9200, column: 6)
!17913 = !DILocation(line: 9200, column: 7, scope: !17912)
!17914 = !DILocation(line: 9200, column: 6, scope: !17610)
!17915 = !DILocation(line: 9201, column: 9, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17917, file: !3, line: 9201, column: 7)
!17917 = distinct !DILexicalBlock(scope: !17912, file: !3, line: 9200, column: 37)
!17918 = !DILocation(line: 9201, column: 18, scope: !17916)
!17919 = !DILocation(line: 9201, column: 27, scope: !17916)
!17920 = !DILocation(line: 9201, column: 47, scope: !17916)
!17921 = !DILocation(line: 9201, column: 7, scope: !17917)
!17922 = !DILocation(line: 9203, column: 4, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17916, file: !3, line: 9202, column: 27)
!17924 = !DILocation(line: 9203, column: 16, scope: !17923)
!17925 = !DILocation(line: 9203, column: 30, scope: !17923)
!17926 = !DILocation(line: 9205, column: 4, scope: !17923)
!17927 = !DILocation(line: 9205, column: 16, scope: !17923)
!17928 = !DILocation(line: 9205, column: 28, scope: !17923)
!17929 = !DILocation(line: 9207, column: 3, scope: !17923)
!17930 = !DILocation(line: 9208, column: 4, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !17916, file: !3, line: 9207, column: 10)
!17932 = !DILocation(line: 9208, column: 16, scope: !17931)
!17933 = !DILocation(line: 9208, column: 24, scope: !17931)
!17934 = !DILocation(line: 9209, column: 12, scope: !17931)
!17935 = !DILocation(line: 9210, column: 4, scope: !17931)
!17936 = !DILocation(line: 9211, column: 4, scope: !17931)
!17937 = !DILocation(line: 9211, column: 16, scope: !17931)
!17938 = !DILocation(line: 9211, column: 30, scope: !17931)
!17939 = !DILocation(line: 9212, column: 4, scope: !17931)
!17940 = !DILocation(line: 9212, column: 16, scope: !17931)
!17941 = !DILocation(line: 9212, column: 28, scope: !17931)
!17942 = !DILocation(line: 9214, column: 2, scope: !17917)
!17943 = !DILocation(line: 9216, column: 6, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9216, column: 6)
!17945 = !DILocation(line: 9216, column: 18, scope: !17944)
!17946 = !DILocation(line: 9216, column: 32, scope: !17944)
!17947 = !DILocation(line: 9216, column: 6, scope: !17610)
!17948 = !DILocation(line: 9217, column: 3, scope: !17949)
!17949 = distinct !DILexicalBlock(scope: !17944, file: !3, line: 9216, column: 53)
!17950 = !DILocation(line: 9217, column: 15, scope: !17949)
!17951 = !DILocation(line: 9217, column: 29, scope: !17949)
!17952 = !DILocation(line: 9218, column: 2, scope: !17949)
!17953 = !DILocation(line: 9219, column: 6, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9219, column: 6)
!17955 = !DILocation(line: 9219, column: 18, scope: !17954)
!17956 = !DILocation(line: 9219, column: 32, scope: !17954)
!17957 = !DILocation(line: 9219, column: 6, scope: !17610)
!17958 = !DILocation(line: 9220, column: 3, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17954, file: !3, line: 9219, column: 53)
!17960 = !DILocation(line: 9220, column: 15, scope: !17959)
!17961 = !DILocation(line: 9220, column: 29, scope: !17959)
!17962 = !DILocation(line: 9221, column: 2, scope: !17959)
!17963 = !DILocation(line: 9222, column: 6, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9222, column: 6)
!17965 = !DILocation(line: 9222, column: 18, scope: !17964)
!17966 = !DILocation(line: 9222, column: 32, scope: !17964)
!17967 = !DILocation(line: 9222, column: 44, scope: !17964)
!17968 = !DILocation(line: 9222, column: 30, scope: !17964)
!17969 = !DILocation(line: 9222, column: 6, scope: !17610)
!17970 = !DILocation(line: 9223, column: 29, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17964, file: !3, line: 9222, column: 59)
!17972 = !DILocation(line: 9223, column: 41, scope: !17971)
!17973 = !DILocation(line: 9223, column: 3, scope: !17971)
!17974 = !DILocation(line: 9223, column: 15, scope: !17971)
!17975 = !DILocation(line: 9223, column: 27, scope: !17971)
!17976 = !DILocation(line: 9224, column: 2, scope: !17971)
!17977 = !DILocation(line: 9225, column: 6, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9225, column: 6)
!17979 = !DILocation(line: 9225, column: 18, scope: !17978)
!17980 = !DILocation(line: 9225, column: 30, scope: !17978)
!17981 = !DILocation(line: 9225, column: 6, scope: !17610)
!17982 = !DILocation(line: 9226, column: 3, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17978, file: !3, line: 9225, column: 55)
!17984 = !DILocation(line: 9226, column: 15, scope: !17983)
!17985 = !DILocation(line: 9226, column: 27, scope: !17983)
!17986 = !DILocation(line: 9227, column: 2, scope: !17983)
!17987 = !DILocation(line: 9228, column: 27, scope: !17610)
!17988 = !DILocation(line: 9228, column: 39, scope: !17610)
!17989 = !DILocation(line: 9228, column: 2, scope: !17610)
!17990 = !DILocation(line: 9228, column: 11, scope: !17610)
!17991 = !DILocation(line: 9228, column: 25, scope: !17610)
!17992 = !DILocation(line: 9229, column: 7, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9229, column: 6)
!17994 = !DILocation(line: 9229, column: 19, scope: !17993)
!17995 = !DILocation(line: 9229, column: 33, scope: !17993)
!17996 = !DILocation(line: 9229, column: 45, scope: !17993)
!17997 = !DILocation(line: 9229, column: 31, scope: !17993)
!17998 = !DILocation(line: 9230, column: 6, scope: !17993)
!17999 = !DILocation(line: 9230, column: 18, scope: !17993)
!18000 = !DILocation(line: 9229, column: 58, scope: !17993)
!18001 = !DILocation(line: 9229, column: 6, scope: !17610)
!18002 = !DILocation(line: 9231, column: 29, scope: !18003)
!18003 = distinct !DILexicalBlock(scope: !17993, file: !3, line: 9230, column: 31)
!18004 = !DILocation(line: 9231, column: 41, scope: !18003)
!18005 = !DILocation(line: 9231, column: 3, scope: !18003)
!18006 = !DILocation(line: 9231, column: 15, scope: !18003)
!18007 = !DILocation(line: 9231, column: 27, scope: !18003)
!18008 = !DILocation(line: 9232, column: 13, scope: !18003)
!18009 = !DILocation(line: 9233, column: 2, scope: !18003)
!18010 = !DILocation(line: 9234, column: 2, scope: !17610)
!18011 = !DILocation(line: 9236, column: 31, scope: !17610)
!18012 = !DILocation(line: 9236, column: 2, scope: !17610)
!18013 = !DILocation(line: 9236, column: 11, scope: !17610)
!18014 = !DILocation(line: 9236, column: 16, scope: !17610)
!18015 = !DILocation(line: 9236, column: 29, scope: !17610)
!18016 = !DILocation(line: 9237, column: 8, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9237, column: 6)
!18018 = !DILocation(line: 9237, column: 17, scope: !18017)
!18019 = !DILocation(line: 9237, column: 26, scope: !18017)
!18020 = !DILocation(line: 9237, column: 46, scope: !18017)
!18021 = !DILocation(line: 9237, column: 67, scope: !18017)
!18022 = !DILocation(line: 9238, column: 8, scope: !18017)
!18023 = !DILocation(line: 9238, column: 17, scope: !18017)
!18024 = !DILocation(line: 9238, column: 26, scope: !18017)
!18025 = !DILocation(line: 9237, column: 6, scope: !17610)
!18026 = !DILocation(line: 9239, column: 3, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18017, file: !3, line: 9238, column: 57)
!18028 = !DILocation(line: 9239, column: 12, scope: !18027)
!18029 = !DILocation(line: 9239, column: 27, scope: !18027)
!18030 = !DILocation(line: 9240, column: 2, scope: !18027)
!18031 = !DILocation(line: 9242, column: 9, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9242, column: 2)
!18033 = !DILocation(line: 9242, column: 7, scope: !18032)
!18034 = !DILocation(line: 9242, column: 14, scope: !18035)
!18035 = distinct !DILexicalBlock(scope: !18032, file: !3, line: 9242, column: 2)
!18036 = !DILocation(line: 9242, column: 16, scope: !18035)
!18037 = !DILocation(line: 9242, column: 2, scope: !18032)
!18038 = !DILocation(line: 9243, column: 33, scope: !18039)
!18039 = distinct !DILexicalBlock(scope: !18035, file: !3, line: 9242, column: 37)
!18040 = !DILocation(line: 9243, column: 45, scope: !18039)
!18041 = !DILocation(line: 9243, column: 61, scope: !18039)
!18042 = !DILocation(line: 9243, column: 3, scope: !18039)
!18043 = !DILocation(line: 9243, column: 12, scope: !18039)
!18044 = !DILocation(line: 9243, column: 28, scope: !18039)
!18045 = !DILocation(line: 9243, column: 31, scope: !18039)
!18046 = !DILocation(line: 9244, column: 34, scope: !18039)
!18047 = !DILocation(line: 9244, column: 46, scope: !18039)
!18048 = !DILocation(line: 9244, column: 3, scope: !18039)
!18049 = !DILocation(line: 9244, column: 12, scope: !18039)
!18050 = !DILocation(line: 9244, column: 17, scope: !18039)
!18051 = !DILocation(line: 9244, column: 29, scope: !18039)
!18052 = !DILocation(line: 9244, column: 32, scope: !18039)
!18053 = !DILocation(line: 9247, column: 9, scope: !18039)
!18054 = !DILocation(line: 9247, column: 18, scope: !18039)
!18055 = !DILocation(line: 9247, column: 33, scope: !18039)
!18056 = !DILocation(line: 9246, column: 35, scope: !18039)
!18057 = !DILocation(line: 9246, column: 7, scope: !18039)
!18058 = !DILocation(line: 9245, column: 3, scope: !18039)
!18059 = !DILocation(line: 9245, column: 12, scope: !18039)
!18060 = !DILocation(line: 9245, column: 17, scope: !18039)
!18061 = !DILocation(line: 9245, column: 36, scope: !18039)
!18062 = !DILocation(line: 9245, column: 39, scope: !18039)
!18063 = !DILocation(line: 9248, column: 2, scope: !18039)
!18064 = !DILocation(line: 9242, column: 33, scope: !18035)
!18065 = !DILocation(line: 9242, column: 2, scope: !18035)
!18066 = distinct !{!18066, !18037, !18067}
!18067 = !DILocation(line: 9248, column: 2, scope: !18032)
!18068 = !DILocation(line: 9249, column: 24, scope: !17610)
!18069 = !DILocation(line: 9249, column: 2, scope: !17610)
!18070 = !DILocation(line: 9249, column: 14, scope: !17610)
!18071 = !DILocation(line: 9249, column: 22, scope: !17610)
!18072 = !DILocation(line: 9250, column: 6, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 9250, column: 6)
!18074 = !DILocation(line: 9250, column: 6, scope: !17610)
!18075 = !DILocation(line: 9251, column: 28, scope: !18076)
!18076 = distinct !DILexicalBlock(scope: !18077, file: !3, line: 9251, column: 7)
!18077 = distinct !DILexicalBlock(scope: !18073, file: !3, line: 9250, column: 17)
!18078 = !DILocation(line: 9251, column: 38, scope: !18076)
!18079 = !DILocation(line: 9252, column: 10, scope: !18076)
!18080 = !DILocation(line: 9252, column: 19, scope: !18076)
!18081 = !DILocation(line: 9251, column: 12, scope: !18076)
!18082 = !DILocation(line: 9251, column: 10, scope: !18076)
!18083 = !DILocation(line: 9252, column: 30, scope: !18076)
!18084 = !DILocation(line: 9251, column: 7, scope: !18077)
!18085 = !DILocation(line: 9253, column: 4, scope: !18086)
!18086 = distinct !DILexicalBlock(scope: !18087, file: !3, line: 9253, column: 4)
!18087 = distinct !DILexicalBlock(scope: !18076, file: !3, line: 9252, column: 36)
!18088 = !DILocation(line: 9256, column: 3, scope: !18087)
!18089 = !DILocation(line: 9257, column: 4, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18091, file: !3, line: 9257, column: 4)
!18091 = distinct !DILexicalBlock(scope: !18076, file: !3, line: 9256, column: 10)
!18092 = !DILocation(line: 9260, column: 2, scope: !18077)
!18093 = !DILocation(line: 9261, column: 10, scope: !17610)
!18094 = !DILocation(line: 9261, column: 9, scope: !17610)
!18095 = !DILocation(line: 9261, column: 2, scope: !17610)
!18096 = !DILocation(line: 9262, column: 1, scope: !17610)
!18097 = distinct !DISubprogram(name: "AscGetMaxDmaCount", scope: !3, file: !3, line: 8691, type: !18098, scopeLine: 8692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18098 = !DISubroutineType(types: !18099)
!18099 = !{!7, !5240}
!18100 = !DILocalVariable(name: "bus_type", arg: 1, scope: !18097, file: !3, line: 8691, type: !5240)
!18101 = !DILocation(line: 8691, column: 46, scope: !18097)
!18102 = !DILocation(line: 8693, column: 6, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18097, file: !3, line: 8693, column: 6)
!18104 = !DILocation(line: 8693, column: 15, scope: !18103)
!18105 = !DILocation(line: 8693, column: 6, scope: !18097)
!18106 = !DILocation(line: 8694, column: 3, scope: !18103)
!18107 = !DILocation(line: 8695, column: 11, scope: !18108)
!18108 = distinct !DILexicalBlock(scope: !18103, file: !3, line: 8695, column: 11)
!18109 = !DILocation(line: 8695, column: 20, scope: !18108)
!18110 = !DILocation(line: 8695, column: 11, scope: !18103)
!18111 = !DILocation(line: 8696, column: 3, scope: !18108)
!18112 = !DILocation(line: 8697, column: 2, scope: !18097)
!18113 = !DILocation(line: 8698, column: 1, scope: !18097)
!18114 = distinct !DISubprogram(name: "AscGetChipVersion", scope: !3, file: !3, line: 8646, type: !18115, scopeLine: 8648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18115 = !DISubroutineType(types: !18116)
!18116 = !{!414, !7, !303}
!18117 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18114, file: !3, line: 8646, type: !7)
!18118 = !DILocation(line: 8646, column: 49, scope: !18114)
!18119 = !DILocalVariable(name: "bus_type", arg: 2, scope: !18114, file: !3, line: 8647, type: !303)
!18120 = !DILocation(line: 8647, column: 27, scope: !18114)
!18121 = !DILocation(line: 8649, column: 6, scope: !18122)
!18122 = distinct !DILexicalBlock(scope: !18114, file: !3, line: 8649, column: 6)
!18123 = !DILocation(line: 8649, column: 15, scope: !18122)
!18124 = !DILocation(line: 8649, column: 6, scope: !18114)
!18125 = !DILocalVariable(name: "eisa_iop", scope: !18126, file: !3, line: 8650, type: !7)
!18126 = distinct !DILexicalBlock(scope: !18122, file: !3, line: 8649, column: 30)
!18127 = !DILocation(line: 8650, column: 12, scope: !18126)
!18128 = !DILocalVariable(name: "revision", scope: !18126, file: !3, line: 8651, type: !414)
!18129 = !DILocation(line: 8651, column: 17, scope: !18126)
!18130 = !DILocation(line: 8652, column: 25, scope: !18126)
!18131 = !DILocation(line: 8652, column: 53, scope: !18126)
!18132 = !DILocation(line: 8652, column: 12, scope: !18126)
!18133 = !DILocation(line: 8654, column: 14, scope: !18126)
!18134 = !DILocation(line: 8654, column: 12, scope: !18126)
!18135 = !DILocation(line: 8655, column: 38, scope: !18126)
!18136 = !DILocation(line: 8655, column: 36, scope: !18126)
!18137 = !DILocation(line: 8655, column: 10, scope: !18126)
!18138 = !DILocation(line: 8655, column: 3, scope: !18126)
!18139 = !DILocation(line: 8657, column: 9, scope: !18114)
!18140 = !DILocation(line: 8657, column: 2, scope: !18114)
!18141 = !DILocation(line: 8658, column: 1, scope: !18114)
!18142 = distinct !DISubprogram(name: "AscStopQueueExe", scope: !3, file: !3, line: 8673, type: !11250, scopeLine: 8674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18143 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18142, file: !3, line: 8673, type: !7)
!18144 = !DILocation(line: 8673, column: 37, scope: !18142)
!18145 = !DILocalVariable(name: "count", scope: !18142, file: !3, line: 8675, type: !245)
!18146 = !DILocation(line: 8675, column: 6, scope: !18142)
!18147 = !DILocation(line: 8677, column: 22, scope: !18148)
!18148 = distinct !DILexicalBlock(scope: !18142, file: !3, line: 8677, column: 6)
!18149 = !DILocation(line: 8677, column: 6, scope: !18148)
!18150 = !DILocation(line: 8677, column: 50, scope: !18148)
!18151 = !DILocation(line: 8677, column: 6, scope: !18142)
!18152 = !DILocation(line: 8678, column: 20, scope: !18153)
!18153 = distinct !DILexicalBlock(scope: !18148, file: !3, line: 8677, column: 56)
!18154 = !DILocation(line: 8678, column: 3, scope: !18153)
!18155 = !DILocation(line: 8680, column: 3, scope: !18153)
!18156 = !DILocation(line: 8681, column: 24, scope: !18157)
!18157 = distinct !DILexicalBlock(scope: !18158, file: !3, line: 8681, column: 8)
!18158 = distinct !DILexicalBlock(scope: !18153, file: !3, line: 8680, column: 6)
!18159 = !DILocation(line: 8681, column: 8, scope: !18157)
!18160 = !DILocation(line: 8681, column: 52, scope: !18157)
!18161 = !DILocation(line: 8681, column: 8, scope: !18158)
!18162 = !DILocation(line: 8683, column: 5, scope: !18163)
!18163 = distinct !DILexicalBlock(scope: !18157, file: !3, line: 8682, column: 32)
!18164 = !DILocalVariable(name: "__ms", scope: !18165, file: !3, line: 8685, type: !189)
!18165 = distinct !DILexicalBlock(scope: !18158, file: !3, line: 8685, column: 4)
!18166 = !DILocation(line: 8685, column: 4, scope: !18165)
!18167 = !DILocation(line: 8685, column: 4, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18169, file: !3, line: 8685, column: 4)
!18169 = distinct !DILexicalBlock(scope: !18170, file: !3, line: 8685, column: 4)
!18170 = distinct !DILexicalBlock(scope: !18171, file: !3, line: 8685, column: 4)
!18171 = distinct !DILexicalBlock(scope: !18165, file: !3, line: 8685, column: 4)
!18172 = distinct !{!18172, !18166, !18166}
!18173 = !DILocation(line: 8686, column: 3, scope: !18158)
!18174 = !DILocation(line: 8686, column: 17, scope: !18153)
!18175 = !DILocation(line: 8686, column: 20, scope: !18153)
!18176 = distinct !{!18176, !18155, !18177}
!18177 = !DILocation(line: 8686, column: 24, scope: !18153)
!18178 = !DILocation(line: 8687, column: 2, scope: !18153)
!18179 = !DILocation(line: 8688, column: 2, scope: !18142)
!18180 = !DILocation(line: 8689, column: 1, scope: !18142)
!18181 = distinct !DISubprogram(name: "AscGetChipScsiCtrl", scope: !3, file: !3, line: 8636, type: !18182, scopeLine: 8637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18182 = !DISubroutineType(types: !18183)
!18183 = !{!414, !7}
!18184 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18181, file: !3, line: 8636, type: !7)
!18185 = !DILocation(line: 8636, column: 50, scope: !18181)
!18186 = !DILocalVariable(name: "sc", scope: !18181, file: !3, line: 8638, type: !414)
!18187 = !DILocation(line: 8638, column: 16, scope: !18181)
!18188 = !DILocation(line: 8640, column: 13, scope: !18181)
!18189 = !DILocation(line: 8640, column: 2, scope: !18181)
!18190 = !DILocation(line: 8641, column: 7, scope: !18181)
!18191 = !DILocation(line: 8641, column: 5, scope: !18181)
!18192 = !DILocation(line: 8642, column: 13, scope: !18181)
!18193 = !DILocation(line: 8642, column: 2, scope: !18181)
!18194 = !DILocation(line: 8643, column: 9, scope: !18181)
!18195 = !DILocation(line: 8643, column: 2, scope: !18181)
!18196 = distinct !DISubprogram(name: "AscGetEEPConfig", scope: !3, file: !3, line: 8871, type: !18197, scopeLine: 8873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{!5240, !7, !5990, !5240}
!18199 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18196, file: !3, line: 8871, type: !7)
!18200 = !DILocation(line: 8871, column: 40, scope: !18196)
!18201 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !18196, file: !3, line: 8871, type: !5990)
!18202 = !DILocation(line: 8871, column: 65, scope: !18196)
!18203 = !DILocalVariable(name: "bus_type", arg: 3, scope: !18196, file: !3, line: 8872, type: !5240)
!18204 = !DILocation(line: 8872, column: 17, scope: !18196)
!18205 = !DILocalVariable(name: "wval", scope: !18196, file: !3, line: 8874, type: !5240)
!18206 = !DILocation(line: 8874, column: 9, scope: !18196)
!18207 = !DILocalVariable(name: "sum", scope: !18196, file: !3, line: 8875, type: !5240)
!18208 = !DILocation(line: 8875, column: 9, scope: !18196)
!18209 = !DILocalVariable(name: "wbuf", scope: !18196, file: !3, line: 8876, type: !5989)
!18210 = !DILocation(line: 8876, column: 10, scope: !18196)
!18211 = !DILocalVariable(name: "cfg_beg", scope: !18196, file: !3, line: 8877, type: !245)
!18212 = !DILocation(line: 8877, column: 6, scope: !18196)
!18213 = !DILocalVariable(name: "cfg_end", scope: !18196, file: !3, line: 8878, type: !245)
!18214 = !DILocation(line: 8878, column: 6, scope: !18196)
!18215 = !DILocalVariable(name: "uchar_end_in_config", scope: !18196, file: !3, line: 8879, type: !245)
!18216 = !DILocation(line: 8879, column: 6, scope: !18196)
!18217 = !DILocalVariable(name: "s_addr", scope: !18196, file: !3, line: 8880, type: !245)
!18218 = !DILocation(line: 8880, column: 6, scope: !18196)
!18219 = !DILocation(line: 8882, column: 19, scope: !18196)
!18220 = !DILocation(line: 8882, column: 9, scope: !18196)
!18221 = !DILocation(line: 8882, column: 7, scope: !18196)
!18222 = !DILocation(line: 8883, column: 6, scope: !18196)
!18223 = !DILocation(line: 8885, column: 14, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !18196, file: !3, line: 8885, column: 2)
!18225 = !DILocation(line: 8885, column: 7, scope: !18224)
!18226 = !DILocation(line: 8885, column: 19, scope: !18227)
!18227 = distinct !DILexicalBlock(scope: !18224, file: !3, line: 8885, column: 2)
!18228 = !DILocation(line: 8885, column: 26, scope: !18227)
!18229 = !DILocation(line: 8885, column: 2, scope: !18224)
!18230 = !DILocation(line: 8886, column: 26, scope: !18231)
!18231 = distinct !DILexicalBlock(scope: !18227, file: !3, line: 8885, column: 49)
!18232 = !DILocation(line: 8886, column: 43, scope: !18231)
!18233 = !DILocation(line: 8886, column: 36, scope: !18231)
!18234 = !DILocation(line: 8886, column: 11, scope: !18231)
!18235 = !DILocation(line: 8886, column: 4, scope: !18231)
!18236 = !DILocation(line: 8886, column: 9, scope: !18231)
!18237 = !DILocation(line: 8887, column: 11, scope: !18231)
!18238 = !DILocation(line: 8887, column: 10, scope: !18231)
!18239 = !DILocation(line: 8887, column: 7, scope: !18231)
!18240 = !DILocation(line: 8888, column: 2, scope: !18231)
!18241 = !DILocation(line: 8885, column: 37, scope: !18227)
!18242 = !DILocation(line: 8885, column: 45, scope: !18227)
!18243 = !DILocation(line: 8885, column: 2, scope: !18227)
!18244 = distinct !{!18244, !18229, !18245}
!18245 = !DILocation(line: 8888, column: 2, scope: !18224)
!18246 = !DILocation(line: 8889, column: 6, scope: !18247)
!18247 = distinct !DILexicalBlock(scope: !18196, file: !3, line: 8889, column: 6)
!18248 = !DILocation(line: 8889, column: 15, scope: !18247)
!18249 = !DILocation(line: 8889, column: 6, scope: !18196)
!18250 = !DILocation(line: 8890, column: 11, scope: !18251)
!18251 = distinct !DILexicalBlock(scope: !18247, file: !3, line: 8889, column: 28)
!18252 = !DILocation(line: 8891, column: 11, scope: !18251)
!18253 = !DILocation(line: 8892, column: 2, scope: !18251)
!18254 = !DILocation(line: 8893, column: 11, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18247, file: !3, line: 8892, column: 9)
!18256 = !DILocation(line: 8894, column: 11, scope: !18255)
!18257 = !DILocation(line: 8896, column: 16, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18196, file: !3, line: 8896, column: 2)
!18259 = !DILocation(line: 8896, column: 14, scope: !18258)
!18260 = !DILocation(line: 8896, column: 7, scope: !18258)
!18261 = !DILocation(line: 8896, column: 25, scope: !18262)
!18262 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 8896, column: 2)
!18263 = !DILocation(line: 8896, column: 36, scope: !18262)
!18264 = !DILocation(line: 8896, column: 44, scope: !18262)
!18265 = !DILocation(line: 8896, column: 32, scope: !18262)
!18266 = !DILocation(line: 8896, column: 2, scope: !18258)
!18267 = !DILocation(line: 8897, column: 25, scope: !18268)
!18268 = distinct !DILexicalBlock(scope: !18262, file: !3, line: 8896, column: 68)
!18269 = !DILocation(line: 8897, column: 42, scope: !18268)
!18270 = !DILocation(line: 8897, column: 35, scope: !18268)
!18271 = !DILocation(line: 8897, column: 10, scope: !18268)
!18272 = !DILocation(line: 8897, column: 8, scope: !18268)
!18273 = !DILocation(line: 8898, column: 7, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !18268, file: !3, line: 8898, column: 7)
!18275 = !DILocation(line: 8898, column: 17, scope: !18274)
!18276 = !DILocation(line: 8898, column: 14, scope: !18274)
!18277 = !DILocation(line: 8898, column: 7, scope: !18268)
!18278 = !DILocation(line: 8903, column: 12, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18274, file: !3, line: 8898, column: 38)
!18280 = !DILocation(line: 8903, column: 5, scope: !18279)
!18281 = !DILocation(line: 8903, column: 10, scope: !18279)
!18282 = !DILocation(line: 8904, column: 3, scope: !18279)
!18283 = !DILocation(line: 8906, column: 12, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18274, file: !3, line: 8904, column: 10)
!18285 = !DILocation(line: 8906, column: 5, scope: !18284)
!18286 = !DILocation(line: 8906, column: 10, scope: !18284)
!18287 = !DILocation(line: 8908, column: 10, scope: !18268)
!18288 = !DILocation(line: 8908, column: 7, scope: !18268)
!18289 = !DILocation(line: 8909, column: 2, scope: !18268)
!18290 = !DILocation(line: 8896, column: 56, scope: !18262)
!18291 = !DILocation(line: 8896, column: 64, scope: !18262)
!18292 = !DILocation(line: 8896, column: 2, scope: !18262)
!18293 = distinct !{!18293, !18266, !18294}
!18294 = !DILocation(line: 8909, column: 2, scope: !18258)
!18295 = !DILocation(line: 8914, column: 25, scope: !18196)
!18296 = !DILocation(line: 8914, column: 42, scope: !18196)
!18297 = !DILocation(line: 8914, column: 35, scope: !18196)
!18298 = !DILocation(line: 8914, column: 10, scope: !18196)
!18299 = !DILocation(line: 8914, column: 3, scope: !18196)
!18300 = !DILocation(line: 8914, column: 8, scope: !18196)
!18301 = !DILocation(line: 8915, column: 9, scope: !18196)
!18302 = !DILocation(line: 8915, column: 2, scope: !18196)
!18303 = distinct !DISubprogram(name: "AscTestExternalLram", scope: !3, file: !3, line: 8918, type: !10729, scopeLine: 8919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18304 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !18303, file: !3, line: 8918, type: !6375)
!18305 = !DILocation(line: 8918, column: 45, scope: !18303)
!18306 = !DILocalVariable(name: "iop_base", scope: !18303, file: !3, line: 8920, type: !7)
!18307 = !DILocation(line: 8920, column: 11, scope: !18303)
!18308 = !DILocalVariable(name: "q_addr", scope: !18303, file: !3, line: 8921, type: !5240)
!18309 = !DILocation(line: 8921, column: 9, scope: !18303)
!18310 = !DILocalVariable(name: "saved_word", scope: !18303, file: !3, line: 8922, type: !5240)
!18311 = !DILocation(line: 8922, column: 9, scope: !18303)
!18312 = !DILocalVariable(name: "sta", scope: !18303, file: !3, line: 8923, type: !245)
!18313 = !DILocation(line: 8923, column: 6, scope: !18303)
!18314 = !DILocation(line: 8925, column: 13, scope: !18303)
!18315 = !DILocation(line: 8925, column: 22, scope: !18303)
!18316 = !DILocation(line: 8925, column: 11, scope: !18303)
!18317 = !DILocation(line: 8926, column: 6, scope: !18303)
!18318 = !DILocation(line: 8927, column: 9, scope: !18303)
!18319 = !DILocation(line: 8928, column: 31, scope: !18303)
!18320 = !DILocation(line: 8928, column: 41, scope: !18303)
!18321 = !DILocation(line: 8928, column: 15, scope: !18303)
!18322 = !DILocation(line: 8928, column: 13, scope: !18303)
!18323 = !DILocation(line: 8929, column: 2, scope: !18303)
!18324 = !DILocation(line: 8930, column: 2, scope: !18303)
!18325 = !DILocalVariable(name: "__ms", scope: !18326, file: !3, line: 8931, type: !189)
!18326 = distinct !DILexicalBlock(scope: !18303, file: !3, line: 8931, column: 2)
!18327 = !DILocation(line: 8931, column: 2, scope: !18326)
!18328 = !DILocation(line: 8931, column: 2, scope: !18329)
!18329 = distinct !DILexicalBlock(scope: !18330, file: !3, line: 8931, column: 2)
!18330 = distinct !DILexicalBlock(scope: !18331, file: !3, line: 8931, column: 2)
!18331 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 8931, column: 2)
!18332 = distinct !DILexicalBlock(scope: !18326, file: !3, line: 8931, column: 2)
!18333 = distinct !{!18333, !18327, !18327}
!18334 = !DILocation(line: 8932, column: 2, scope: !18303)
!18335 = !DILocation(line: 8933, column: 6, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18303, file: !3, line: 8933, column: 6)
!18337 = !DILocation(line: 8933, column: 35, scope: !18336)
!18338 = !DILocation(line: 8933, column: 6, scope: !18303)
!18339 = !DILocation(line: 8934, column: 7, scope: !18340)
!18340 = distinct !DILexicalBlock(scope: !18336, file: !3, line: 8933, column: 46)
!18341 = !DILocation(line: 8935, column: 20, scope: !18340)
!18342 = !DILocation(line: 8935, column: 30, scope: !18340)
!18343 = !DILocation(line: 8935, column: 38, scope: !18340)
!18344 = !DILocation(line: 8935, column: 3, scope: !18340)
!18345 = !DILocation(line: 8936, column: 2, scope: !18340)
!18346 = !DILocation(line: 8937, column: 10, scope: !18303)
!18347 = !DILocation(line: 8937, column: 2, scope: !18303)
!18348 = distinct !DISubprogram(name: "AscSetEEPConfig", scope: !3, file: !3, line: 9080, type: !18349, scopeLine: 9082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18349 = !DISubroutineType(types: !18350)
!18350 = !{!245, !7, !5990, !5240}
!18351 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18348, file: !3, line: 9080, type: !7)
!18352 = !DILocation(line: 9080, column: 37, scope: !18348)
!18353 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !18348, file: !3, line: 9080, type: !5990)
!18354 = !DILocation(line: 9080, column: 62, scope: !18348)
!18355 = !DILocalVariable(name: "bus_type", arg: 3, scope: !18348, file: !3, line: 9081, type: !5240)
!18356 = !DILocation(line: 9081, column: 14, scope: !18348)
!18357 = !DILocalVariable(name: "retry", scope: !18348, file: !3, line: 9083, type: !245)
!18358 = !DILocation(line: 9083, column: 6, scope: !18348)
!18359 = !DILocalVariable(name: "n_error", scope: !18348, file: !3, line: 9084, type: !245)
!18360 = !DILocation(line: 9084, column: 6, scope: !18348)
!18361 = !DILocation(line: 9086, column: 8, scope: !18348)
!18362 = !DILocation(line: 9087, column: 2, scope: !18348)
!18363 = !DILocation(line: 9088, column: 38, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18365, file: !3, line: 9088, column: 7)
!18365 = distinct !DILexicalBlock(scope: !18348, file: !3, line: 9087, column: 15)
!18366 = !DILocation(line: 9088, column: 48, scope: !18364)
!18367 = !DILocation(line: 9089, column: 10, scope: !18364)
!18368 = !DILocation(line: 9088, column: 18, scope: !18364)
!18369 = !DILocation(line: 9088, column: 16, scope: !18364)
!18370 = !DILocation(line: 9089, column: 21, scope: !18364)
!18371 = !DILocation(line: 9088, column: 7, scope: !18365)
!18372 = !DILocation(line: 9090, column: 4, scope: !18373)
!18373 = distinct !DILexicalBlock(scope: !18364, file: !3, line: 9089, column: 27)
!18374 = !DILocation(line: 9092, column: 7, scope: !18375)
!18375 = distinct !DILexicalBlock(scope: !18365, file: !3, line: 9092, column: 7)
!18376 = !DILocation(line: 9092, column: 15, scope: !18375)
!18377 = !DILocation(line: 9092, column: 7, scope: !18365)
!18378 = !DILocation(line: 9093, column: 4, scope: !18379)
!18379 = distinct !DILexicalBlock(scope: !18375, file: !3, line: 9092, column: 36)
!18380 = distinct !{!18380, !18362, !18381}
!18381 = !DILocation(line: 9095, column: 2, scope: !18348)
!18382 = !DILocation(line: 9096, column: 9, scope: !18348)
!18383 = !DILocation(line: 9096, column: 2, scope: !18348)
!18384 = distinct !DISubprogram(name: "AscReadEEPWord", scope: !3, file: !3, line: 8856, type: !18385, scopeLine: 8857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18385 = !DISubroutineType(types: !18386)
!18386 = !{!5240, !7, !5245}
!18387 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18384, file: !3, line: 8856, type: !7)
!18388 = !DILocation(line: 8856, column: 39, scope: !18384)
!18389 = !DILocalVariable(name: "addr", arg: 2, scope: !18384, file: !3, line: 8856, type: !5245)
!18390 = !DILocation(line: 8856, column: 55, scope: !18384)
!18391 = !DILocalVariable(name: "read_wval", scope: !18384, file: !3, line: 8858, type: !5240)
!18392 = !DILocation(line: 8858, column: 9, scope: !18384)
!18393 = !DILocalVariable(name: "cmd_reg", scope: !18384, file: !3, line: 8859, type: !5245)
!18394 = !DILocation(line: 8859, column: 8, scope: !18384)
!18395 = !DILocation(line: 8861, column: 20, scope: !18384)
!18396 = !DILocation(line: 8861, column: 2, scope: !18384)
!18397 = !DILocation(line: 8862, column: 2, scope: !18384)
!18398 = !DILocation(line: 8863, column: 12, scope: !18384)
!18399 = !DILocation(line: 8863, column: 17, scope: !18384)
!18400 = !DILocation(line: 8863, column: 10, scope: !18384)
!18401 = !DILocation(line: 8864, column: 20, scope: !18384)
!18402 = !DILocation(line: 8864, column: 30, scope: !18384)
!18403 = !DILocation(line: 8864, column: 2, scope: !18384)
!18404 = !DILocation(line: 8865, column: 2, scope: !18384)
!18405 = !DILocation(line: 8866, column: 14, scope: !18384)
!18406 = !DILocation(line: 8866, column: 12, scope: !18384)
!18407 = !DILocation(line: 8867, column: 2, scope: !18384)
!18408 = !DILocation(line: 8868, column: 9, scope: !18384)
!18409 = !DILocation(line: 8868, column: 2, scope: !18384)
!18410 = distinct !DISubprogram(name: "AscWriteEEPCmdReg", scope: !3, file: !3, line: 8836, type: !18411, scopeLine: 8837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18411 = !DISubroutineType(types: !18412)
!18412 = !{!245, !7, !5245}
!18413 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18410, file: !3, line: 8836, type: !7)
!18414 = !DILocation(line: 8836, column: 39, scope: !18410)
!18415 = !DILocalVariable(name: "cmd_reg", arg: 2, scope: !18410, file: !3, line: 8836, type: !5245)
!18416 = !DILocation(line: 8836, column: 55, scope: !18410)
!18417 = !DILocalVariable(name: "retry", scope: !18410, file: !3, line: 8838, type: !245)
!18418 = !DILocation(line: 8838, column: 6, scope: !18410)
!18419 = !DILocation(line: 8840, column: 13, scope: !18420)
!18420 = distinct !DILexicalBlock(scope: !18410, file: !3, line: 8840, column: 2)
!18421 = !DILocation(line: 8840, column: 7, scope: !18420)
!18422 = !DILocation(line: 8840, column: 18, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18420, file: !3, line: 8840, column: 2)
!18424 = !DILocation(line: 8840, column: 24, scope: !18423)
!18425 = !DILocation(line: 8840, column: 2, scope: !18420)
!18426 = !DILocalVariable(name: "read_back", scope: !18427, file: !3, line: 8841, type: !414)
!18427 = distinct !DILexicalBlock(scope: !18423, file: !3, line: 8840, column: 54)
!18428 = !DILocation(line: 8841, column: 17, scope: !18427)
!18429 = !DILocation(line: 8842, column: 3, scope: !18427)
!18430 = !DILocation(line: 8843, column: 3, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 8843, column: 3)
!18432 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 8843, column: 3)
!18433 = distinct !DILexicalBlock(scope: !18434, file: !3, line: 8843, column: 3)
!18434 = distinct !DILexicalBlock(scope: !18427, file: !3, line: 8843, column: 3)
!18435 = !DILocation(line: 8844, column: 15, scope: !18427)
!18436 = !DILocation(line: 8844, column: 13, scope: !18427)
!18437 = !DILocation(line: 8845, column: 7, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18427, file: !3, line: 8845, column: 7)
!18439 = !DILocation(line: 8845, column: 20, scope: !18438)
!18440 = !DILocation(line: 8845, column: 17, scope: !18438)
!18441 = !DILocation(line: 8845, column: 7, scope: !18427)
!18442 = !DILocation(line: 8846, column: 4, scope: !18438)
!18443 = !DILocation(line: 8847, column: 2, scope: !18427)
!18444 = !DILocation(line: 8840, column: 50, scope: !18423)
!18445 = !DILocation(line: 8840, column: 2, scope: !18423)
!18446 = distinct !{!18446, !18425, !18447}
!18447 = !DILocation(line: 8847, column: 2, scope: !18420)
!18448 = !DILocation(line: 8848, column: 2, scope: !18410)
!18449 = !DILocation(line: 8849, column: 1, scope: !18410)
!18450 = distinct !DISubprogram(name: "AscWaitEEPRead", scope: !3, file: !3, line: 8851, type: !1931, scopeLine: 8852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18451 = !DILocation(line: 8853, column: 2, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !18453, file: !3, line: 8853, column: 2)
!18453 = distinct !DILexicalBlock(scope: !18454, file: !3, line: 8853, column: 2)
!18454 = distinct !DILexicalBlock(scope: !18455, file: !3, line: 8853, column: 2)
!18455 = distinct !DILexicalBlock(scope: !18450, file: !3, line: 8853, column: 2)
!18456 = !DILocation(line: 8854, column: 1, scope: !18450)
!18457 = distinct !DISubprogram(name: "AscSetEEPConfigOnce", scope: !3, file: !3, line: 8984, type: !18349, scopeLine: 8986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18458 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18457, file: !3, line: 8984, type: !7)
!18459 = !DILocation(line: 8984, column: 41, scope: !18457)
!18460 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !18457, file: !3, line: 8984, type: !5990)
!18461 = !DILocation(line: 8984, column: 66, scope: !18457)
!18462 = !DILocalVariable(name: "bus_type", arg: 3, scope: !18457, file: !3, line: 8985, type: !5240)
!18463 = !DILocation(line: 8985, column: 18, scope: !18457)
!18464 = !DILocalVariable(name: "n_error", scope: !18457, file: !3, line: 8987, type: !245)
!18465 = !DILocation(line: 8987, column: 6, scope: !18457)
!18466 = !DILocalVariable(name: "wbuf", scope: !18457, file: !3, line: 8988, type: !5989)
!18467 = !DILocation(line: 8988, column: 10, scope: !18457)
!18468 = !DILocalVariable(name: "word", scope: !18457, file: !3, line: 8989, type: !5240)
!18469 = !DILocation(line: 8989, column: 9, scope: !18457)
!18470 = !DILocalVariable(name: "sum", scope: !18457, file: !3, line: 8990, type: !5240)
!18471 = !DILocation(line: 8990, column: 9, scope: !18457)
!18472 = !DILocalVariable(name: "s_addr", scope: !18457, file: !3, line: 8991, type: !245)
!18473 = !DILocation(line: 8991, column: 6, scope: !18457)
!18474 = !DILocalVariable(name: "cfg_beg", scope: !18457, file: !3, line: 8992, type: !245)
!18475 = !DILocation(line: 8992, column: 6, scope: !18457)
!18476 = !DILocalVariable(name: "cfg_end", scope: !18457, file: !3, line: 8993, type: !245)
!18477 = !DILocation(line: 8993, column: 6, scope: !18457)
!18478 = !DILocalVariable(name: "uchar_end_in_config", scope: !18457, file: !3, line: 8994, type: !245)
!18479 = !DILocation(line: 8994, column: 6, scope: !18457)
!18480 = !DILocation(line: 8996, column: 19, scope: !18457)
!18481 = !DILocation(line: 8996, column: 9, scope: !18457)
!18482 = !DILocation(line: 8996, column: 7, scope: !18457)
!18483 = !DILocation(line: 8997, column: 10, scope: !18457)
!18484 = !DILocation(line: 8998, column: 6, scope: !18457)
!18485 = !DILocation(line: 9000, column: 14, scope: !18486)
!18486 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9000, column: 2)
!18487 = !DILocation(line: 9000, column: 7, scope: !18486)
!18488 = !DILocation(line: 9000, column: 19, scope: !18489)
!18489 = distinct !DILexicalBlock(scope: !18486, file: !3, line: 9000, column: 2)
!18490 = !DILocation(line: 9000, column: 26, scope: !18489)
!18491 = !DILocation(line: 9000, column: 2, scope: !18486)
!18492 = !DILocation(line: 9001, column: 11, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18489, file: !3, line: 9000, column: 49)
!18494 = !DILocation(line: 9001, column: 10, scope: !18493)
!18495 = !DILocation(line: 9001, column: 7, scope: !18493)
!18496 = !DILocation(line: 9002, column: 8, scope: !18497)
!18497 = distinct !DILexicalBlock(scope: !18493, file: !3, line: 9002, column: 7)
!18498 = !DILocation(line: 9002, column: 7, scope: !18497)
!18499 = !DILocation(line: 9002, column: 32, scope: !18497)
!18500 = !DILocation(line: 9002, column: 49, scope: !18497)
!18501 = !DILocation(line: 9002, column: 42, scope: !18497)
!18502 = !DILocation(line: 9002, column: 58, scope: !18497)
!18503 = !DILocation(line: 9002, column: 57, scope: !18497)
!18504 = !DILocation(line: 9002, column: 16, scope: !18497)
!18505 = !DILocation(line: 9002, column: 13, scope: !18497)
!18506 = !DILocation(line: 9002, column: 7, scope: !18493)
!18507 = !DILocation(line: 9003, column: 11, scope: !18508)
!18508 = distinct !DILexicalBlock(scope: !18497, file: !3, line: 9002, column: 65)
!18509 = !DILocation(line: 9004, column: 3, scope: !18508)
!18510 = !DILocation(line: 9005, column: 2, scope: !18493)
!18511 = !DILocation(line: 9000, column: 37, scope: !18489)
!18512 = !DILocation(line: 9000, column: 45, scope: !18489)
!18513 = !DILocation(line: 9000, column: 2, scope: !18489)
!18514 = distinct !{!18514, !18491, !18515}
!18515 = !DILocation(line: 9005, column: 2, scope: !18486)
!18516 = !DILocation(line: 9006, column: 6, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9006, column: 6)
!18518 = !DILocation(line: 9006, column: 15, scope: !18517)
!18519 = !DILocation(line: 9006, column: 6, scope: !18457)
!18520 = !DILocation(line: 9007, column: 11, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18517, file: !3, line: 9006, column: 28)
!18522 = !DILocation(line: 9008, column: 11, scope: !18521)
!18523 = !DILocation(line: 9009, column: 2, scope: !18521)
!18524 = !DILocation(line: 9010, column: 11, scope: !18525)
!18525 = distinct !DILexicalBlock(scope: !18517, file: !3, line: 9009, column: 9)
!18526 = !DILocation(line: 9011, column: 11, scope: !18525)
!18527 = !DILocation(line: 9013, column: 16, scope: !18528)
!18528 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9013, column: 2)
!18529 = !DILocation(line: 9013, column: 14, scope: !18528)
!18530 = !DILocation(line: 9013, column: 7, scope: !18528)
!18531 = !DILocation(line: 9013, column: 25, scope: !18532)
!18532 = distinct !DILexicalBlock(scope: !18528, file: !3, line: 9013, column: 2)
!18533 = !DILocation(line: 9013, column: 36, scope: !18532)
!18534 = !DILocation(line: 9013, column: 44, scope: !18532)
!18535 = !DILocation(line: 9013, column: 32, scope: !18532)
!18536 = !DILocation(line: 9013, column: 2, scope: !18528)
!18537 = !DILocation(line: 9014, column: 7, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18539, file: !3, line: 9014, column: 7)
!18539 = distinct !DILexicalBlock(scope: !18532, file: !3, line: 9013, column: 68)
!18540 = !DILocation(line: 9014, column: 17, scope: !18538)
!18541 = !DILocation(line: 9014, column: 14, scope: !18538)
!18542 = !DILocation(line: 9014, column: 7, scope: !18539)
!18543 = !DILocation(line: 9019, column: 11, scope: !18544)
!18544 = distinct !DILexicalBlock(scope: !18538, file: !3, line: 9014, column: 38)
!18545 = !DILocation(line: 9019, column: 9, scope: !18544)
!18546 = !DILocation(line: 9020, column: 8, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18544, file: !3, line: 9020, column: 8)
!18548 = !DILocation(line: 9021, column: 24, scope: !18547)
!18549 = !DILocation(line: 9021, column: 41, scope: !18547)
!18550 = !DILocation(line: 9021, column: 34, scope: !18547)
!18551 = !DILocation(line: 9021, column: 49, scope: !18547)
!18552 = !DILocation(line: 9021, column: 8, scope: !18547)
!18553 = !DILocation(line: 9020, column: 13, scope: !18547)
!18554 = !DILocation(line: 9020, column: 8, scope: !18544)
!18555 = !DILocation(line: 9022, column: 12, scope: !18556)
!18556 = distinct !DILexicalBlock(scope: !18547, file: !3, line: 9021, column: 56)
!18557 = !DILocation(line: 9023, column: 4, scope: !18556)
!18558 = !DILocation(line: 9024, column: 3, scope: !18544)
!18559 = !DILocation(line: 9026, column: 9, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18561, file: !3, line: 9026, column: 8)
!18561 = distinct !DILexicalBlock(scope: !18538, file: !3, line: 9024, column: 10)
!18562 = !DILocation(line: 9026, column: 8, scope: !18560)
!18563 = !DILocation(line: 9027, column: 24, scope: !18560)
!18564 = !DILocation(line: 9027, column: 41, scope: !18560)
!18565 = !DILocation(line: 9027, column: 34, scope: !18560)
!18566 = !DILocation(line: 9027, column: 50, scope: !18560)
!18567 = !DILocation(line: 9027, column: 49, scope: !18560)
!18568 = !DILocation(line: 9027, column: 8, scope: !18560)
!18569 = !DILocation(line: 9026, column: 14, scope: !18560)
!18570 = !DILocation(line: 9026, column: 8, scope: !18561)
!18571 = !DILocation(line: 9028, column: 12, scope: !18572)
!18572 = distinct !DILexicalBlock(scope: !18560, file: !3, line: 9027, column: 57)
!18573 = !DILocation(line: 9029, column: 4, scope: !18572)
!18574 = !DILocation(line: 9031, column: 11, scope: !18539)
!18575 = !DILocation(line: 9031, column: 10, scope: !18539)
!18576 = !DILocation(line: 9031, column: 7, scope: !18539)
!18577 = !DILocation(line: 9032, column: 2, scope: !18539)
!18578 = !DILocation(line: 9013, column: 56, scope: !18532)
!18579 = !DILocation(line: 9013, column: 64, scope: !18532)
!18580 = !DILocation(line: 9013, column: 2, scope: !18532)
!18581 = distinct !{!18581, !18536, !18582}
!18582 = !DILocation(line: 9032, column: 2, scope: !18528)
!18583 = !DILocation(line: 9034, column: 10, scope: !18457)
!18584 = !DILocation(line: 9034, column: 3, scope: !18457)
!18585 = !DILocation(line: 9034, column: 8, scope: !18457)
!18586 = !DILocation(line: 9035, column: 6, scope: !18587)
!18587 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9035, column: 6)
!18588 = !DILocation(line: 9035, column: 29, scope: !18587)
!18589 = !DILocation(line: 9035, column: 46, scope: !18587)
!18590 = !DILocation(line: 9035, column: 39, scope: !18587)
!18591 = !DILocation(line: 9035, column: 54, scope: !18587)
!18592 = !DILocation(line: 9035, column: 13, scope: !18587)
!18593 = !DILocation(line: 9035, column: 10, scope: !18587)
!18594 = !DILocation(line: 9035, column: 6, scope: !18457)
!18595 = !DILocation(line: 9036, column: 10, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18587, file: !3, line: 9035, column: 60)
!18597 = !DILocation(line: 9037, column: 2, scope: !18596)
!18598 = !DILocation(line: 9040, column: 19, scope: !18457)
!18599 = !DILocation(line: 9040, column: 9, scope: !18457)
!18600 = !DILocation(line: 9040, column: 7, scope: !18457)
!18601 = !DILocation(line: 9044, column: 14, scope: !18602)
!18602 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9044, column: 2)
!18603 = !DILocation(line: 9044, column: 7, scope: !18602)
!18604 = !DILocation(line: 9044, column: 19, scope: !18605)
!18605 = distinct !DILexicalBlock(scope: !18602, file: !3, line: 9044, column: 2)
!18606 = !DILocation(line: 9044, column: 26, scope: !18605)
!18607 = !DILocation(line: 9044, column: 2, scope: !18602)
!18608 = !DILocation(line: 9045, column: 8, scope: !18609)
!18609 = distinct !DILexicalBlock(scope: !18610, file: !3, line: 9045, column: 7)
!18610 = distinct !DILexicalBlock(scope: !18605, file: !3, line: 9044, column: 49)
!18611 = !DILocation(line: 9045, column: 7, scope: !18609)
!18612 = !DILocation(line: 9045, column: 31, scope: !18609)
!18613 = !DILocation(line: 9045, column: 48, scope: !18609)
!18614 = !DILocation(line: 9045, column: 41, scope: !18609)
!18615 = !DILocation(line: 9045, column: 16, scope: !18609)
!18616 = !DILocation(line: 9045, column: 13, scope: !18609)
!18617 = !DILocation(line: 9045, column: 7, scope: !18610)
!18618 = !DILocation(line: 9046, column: 11, scope: !18619)
!18619 = distinct !DILexicalBlock(scope: !18609, file: !3, line: 9045, column: 57)
!18620 = !DILocation(line: 9047, column: 3, scope: !18619)
!18621 = !DILocation(line: 9048, column: 2, scope: !18610)
!18622 = !DILocation(line: 9044, column: 37, scope: !18605)
!18623 = !DILocation(line: 9044, column: 45, scope: !18605)
!18624 = !DILocation(line: 9044, column: 2, scope: !18605)
!18625 = distinct !{!18625, !18607, !18626}
!18626 = !DILocation(line: 9048, column: 2, scope: !18602)
!18627 = !DILocation(line: 9049, column: 6, scope: !18628)
!18628 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9049, column: 6)
!18629 = !DILocation(line: 9049, column: 15, scope: !18628)
!18630 = !DILocation(line: 9049, column: 6, scope: !18457)
!18631 = !DILocation(line: 9050, column: 11, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18628, file: !3, line: 9049, column: 28)
!18633 = !DILocation(line: 9051, column: 11, scope: !18632)
!18634 = !DILocation(line: 9052, column: 2, scope: !18632)
!18635 = !DILocation(line: 9053, column: 11, scope: !18636)
!18636 = distinct !DILexicalBlock(scope: !18628, file: !3, line: 9052, column: 9)
!18637 = !DILocation(line: 9054, column: 11, scope: !18636)
!18638 = !DILocation(line: 9056, column: 16, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9056, column: 2)
!18640 = !DILocation(line: 9056, column: 14, scope: !18639)
!18641 = !DILocation(line: 9056, column: 7, scope: !18639)
!18642 = !DILocation(line: 9056, column: 25, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 9056, column: 2)
!18644 = !DILocation(line: 9056, column: 36, scope: !18643)
!18645 = !DILocation(line: 9056, column: 44, scope: !18643)
!18646 = !DILocation(line: 9056, column: 32, scope: !18643)
!18647 = !DILocation(line: 9056, column: 2, scope: !18639)
!18648 = !DILocation(line: 9057, column: 7, scope: !18649)
!18649 = distinct !DILexicalBlock(scope: !18650, file: !3, line: 9057, column: 7)
!18650 = distinct !DILexicalBlock(scope: !18643, file: !3, line: 9056, column: 68)
!18651 = !DILocation(line: 9057, column: 17, scope: !18649)
!18652 = !DILocation(line: 9057, column: 14, scope: !18649)
!18653 = !DILocation(line: 9057, column: 7, scope: !18650)
!18654 = !DILocation(line: 9063, column: 8, scope: !18655)
!18655 = distinct !DILexicalBlock(scope: !18649, file: !3, line: 9057, column: 38)
!18656 = !DILocation(line: 9062, column: 9, scope: !18655)
!18657 = !DILocation(line: 9065, column: 3, scope: !18655)
!18658 = !DILocation(line: 9067, column: 26, scope: !18659)
!18659 = distinct !DILexicalBlock(scope: !18649, file: !3, line: 9065, column: 10)
!18660 = !DILocation(line: 9067, column: 43, scope: !18659)
!18661 = !DILocation(line: 9067, column: 36, scope: !18659)
!18662 = !DILocation(line: 9067, column: 11, scope: !18659)
!18663 = !DILocation(line: 9067, column: 9, scope: !18659)
!18664 = !DILocation(line: 9069, column: 8, scope: !18665)
!18665 = distinct !DILexicalBlock(scope: !18650, file: !3, line: 9069, column: 7)
!18666 = !DILocation(line: 9069, column: 7, scope: !18665)
!18667 = !DILocation(line: 9069, column: 16, scope: !18665)
!18668 = !DILocation(line: 9069, column: 13, scope: !18665)
!18669 = !DILocation(line: 9069, column: 7, scope: !18650)
!18670 = !DILocation(line: 9070, column: 11, scope: !18671)
!18671 = distinct !DILexicalBlock(scope: !18665, file: !3, line: 9069, column: 22)
!18672 = !DILocation(line: 9071, column: 3, scope: !18671)
!18673 = !DILocation(line: 9072, column: 2, scope: !18650)
!18674 = !DILocation(line: 9056, column: 56, scope: !18643)
!18675 = !DILocation(line: 9056, column: 64, scope: !18643)
!18676 = !DILocation(line: 9056, column: 2, scope: !18643)
!18677 = distinct !{!18677, !18647, !18678}
!18678 = !DILocation(line: 9072, column: 2, scope: !18639)
!18679 = !DILocation(line: 9074, column: 21, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 9074, column: 6)
!18681 = !DILocation(line: 9074, column: 38, scope: !18680)
!18682 = !DILocation(line: 9074, column: 31, scope: !18680)
!18683 = !DILocation(line: 9074, column: 6, scope: !18680)
!18684 = !DILocation(line: 9074, column: 49, scope: !18680)
!18685 = !DILocation(line: 9074, column: 46, scope: !18680)
!18686 = !DILocation(line: 9074, column: 6, scope: !18457)
!18687 = !DILocation(line: 9075, column: 10, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18680, file: !3, line: 9074, column: 54)
!18689 = !DILocation(line: 9076, column: 2, scope: !18688)
!18690 = !DILocation(line: 9077, column: 9, scope: !18457)
!18691 = !DILocation(line: 9077, column: 2, scope: !18457)
!18692 = distinct !DISubprogram(name: "AscWriteEEPWord", scope: !3, file: !3, line: 8964, type: !18693, scopeLine: 8965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18693 = !DISubroutineType(types: !18694)
!18694 = !{!5240, !7, !5245, !5240}
!18695 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18692, file: !3, line: 8964, type: !7)
!18696 = !DILocation(line: 8964, column: 40, scope: !18692)
!18697 = !DILocalVariable(name: "addr", arg: 2, scope: !18692, file: !3, line: 8964, type: !5245)
!18698 = !DILocation(line: 8964, column: 56, scope: !18692)
!18699 = !DILocalVariable(name: "word_val", arg: 3, scope: !18692, file: !3, line: 8964, type: !5240)
!18700 = !DILocation(line: 8964, column: 69, scope: !18692)
!18701 = !DILocalVariable(name: "read_wval", scope: !18692, file: !3, line: 8966, type: !5240)
!18702 = !DILocation(line: 8966, column: 9, scope: !18692)
!18703 = !DILocation(line: 8968, column: 29, scope: !18692)
!18704 = !DILocation(line: 8968, column: 39, scope: !18692)
!18705 = !DILocation(line: 8968, column: 14, scope: !18692)
!18706 = !DILocation(line: 8968, column: 12, scope: !18692)
!18707 = !DILocation(line: 8969, column: 6, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18692, file: !3, line: 8969, column: 6)
!18709 = !DILocation(line: 8969, column: 19, scope: !18708)
!18710 = !DILocation(line: 8969, column: 16, scope: !18708)
!18711 = !DILocation(line: 8969, column: 6, scope: !18692)
!18712 = !DILocation(line: 8970, column: 21, scope: !18713)
!18713 = distinct !DILexicalBlock(scope: !18708, file: !3, line: 8969, column: 29)
!18714 = !DILocation(line: 8970, column: 3, scope: !18713)
!18715 = !DILocation(line: 8971, column: 3, scope: !18713)
!18716 = !DILocation(line: 8972, column: 22, scope: !18713)
!18717 = !DILocation(line: 8972, column: 32, scope: !18713)
!18718 = !DILocation(line: 8972, column: 3, scope: !18713)
!18719 = !DILocation(line: 8973, column: 3, scope: !18713)
!18720 = !DILocation(line: 8974, column: 21, scope: !18713)
!18721 = !DILocation(line: 8975, column: 42, scope: !18713)
!18722 = !DILocation(line: 8975, column: 40, scope: !18713)
!18723 = !DILocation(line: 8975, column: 7, scope: !18713)
!18724 = !DILocation(line: 8974, column: 3, scope: !18713)
!18725 = !DILocation(line: 8976, column: 3, scope: !18713)
!18726 = !DILocation(line: 8977, column: 21, scope: !18713)
!18727 = !DILocation(line: 8977, column: 3, scope: !18713)
!18728 = !DILocation(line: 8978, column: 3, scope: !18713)
!18729 = !DILocation(line: 8979, column: 26, scope: !18713)
!18730 = !DILocation(line: 8979, column: 36, scope: !18713)
!18731 = !DILocation(line: 8979, column: 11, scope: !18713)
!18732 = !DILocation(line: 8979, column: 3, scope: !18713)
!18733 = !DILocation(line: 8981, column: 10, scope: !18692)
!18734 = !DILocation(line: 8981, column: 2, scope: !18692)
!18735 = !DILocation(line: 8982, column: 1, scope: !18692)
!18736 = distinct !DISubprogram(name: "AscWriteEEPDataReg", scope: !3, file: !3, line: 8945, type: !18737, scopeLine: 8946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18737 = !DISubroutineType(types: !18738)
!18738 = !{!245, !7, !5240}
!18739 = !DILocalVariable(name: "iop_base", arg: 1, scope: !18736, file: !3, line: 8945, type: !7)
!18740 = !DILocation(line: 8945, column: 40, scope: !18736)
!18741 = !DILocalVariable(name: "data_reg", arg: 2, scope: !18736, file: !3, line: 8945, type: !5240)
!18742 = !DILocation(line: 8945, column: 57, scope: !18736)
!18743 = !DILocalVariable(name: "read_back", scope: !18736, file: !3, line: 8947, type: !5240)
!18744 = !DILocation(line: 8947, column: 9, scope: !18736)
!18745 = !DILocalVariable(name: "retry", scope: !18736, file: !3, line: 8948, type: !245)
!18746 = !DILocation(line: 8948, column: 6, scope: !18736)
!18747 = !DILocation(line: 8950, column: 8, scope: !18736)
!18748 = !DILocation(line: 8951, column: 2, scope: !18736)
!18749 = !DILocation(line: 8952, column: 3, scope: !18750)
!18750 = distinct !DILexicalBlock(scope: !18736, file: !3, line: 8951, column: 15)
!18751 = !DILocation(line: 8953, column: 3, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18753, file: !3, line: 8953, column: 3)
!18753 = distinct !DILexicalBlock(scope: !18754, file: !3, line: 8953, column: 3)
!18754 = distinct !DILexicalBlock(scope: !18755, file: !3, line: 8953, column: 3)
!18755 = distinct !DILexicalBlock(scope: !18750, file: !3, line: 8953, column: 3)
!18756 = !DILocation(line: 8954, column: 15, scope: !18750)
!18757 = !DILocation(line: 8954, column: 13, scope: !18750)
!18758 = !DILocation(line: 8955, column: 7, scope: !18759)
!18759 = distinct !DILexicalBlock(scope: !18750, file: !3, line: 8955, column: 7)
!18760 = !DILocation(line: 8955, column: 20, scope: !18759)
!18761 = !DILocation(line: 8955, column: 17, scope: !18759)
!18762 = !DILocation(line: 8955, column: 7, scope: !18750)
!18763 = !DILocation(line: 8956, column: 4, scope: !18764)
!18764 = distinct !DILexicalBlock(scope: !18759, file: !3, line: 8955, column: 30)
!18765 = !DILocation(line: 8958, column: 12, scope: !18766)
!18766 = distinct !DILexicalBlock(scope: !18750, file: !3, line: 8958, column: 7)
!18767 = !DILocation(line: 8958, column: 15, scope: !18766)
!18768 = !DILocation(line: 8958, column: 7, scope: !18750)
!18769 = !DILocation(line: 8959, column: 4, scope: !18770)
!18770 = distinct !DILexicalBlock(scope: !18766, file: !3, line: 8958, column: 36)
!18771 = distinct !{!18771, !18748, !18772}
!18772 = !DILocation(line: 8961, column: 2, scope: !18736)
!18773 = !DILocation(line: 8962, column: 1, scope: !18736)
!18774 = distinct !DISubprogram(name: "AscWaitEEPWrite", scope: !3, file: !3, line: 8940, type: !1931, scopeLine: 8941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18775 = !DILocalVariable(name: "__ms", scope: !18776, file: !3, line: 8942, type: !189)
!18776 = distinct !DILexicalBlock(scope: !18774, file: !3, line: 8942, column: 2)
!18777 = !DILocation(line: 8942, column: 2, scope: !18776)
!18778 = !DILocation(line: 8942, column: 2, scope: !18779)
!18779 = distinct !DILexicalBlock(scope: !18780, file: !3, line: 8942, column: 2)
!18780 = distinct !DILexicalBlock(scope: !18781, file: !3, line: 8942, column: 2)
!18781 = distinct !DILexicalBlock(scope: !18782, file: !3, line: 8942, column: 2)
!18782 = distinct !DILexicalBlock(scope: !18776, file: !3, line: 8942, column: 2)
!18783 = distinct !{!18783, !18777, !18777}
!18784 = !DILocation(line: 8943, column: 1, scope: !18774)
!18785 = distinct !DISubprogram(name: "AdvInitFrom38C1600EEP", scope: !3, file: !3, line: 10490, type: !10908, scopeLine: 10491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!18786 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !18785, file: !3, line: 10490, type: !6378)
!18787 = !DILocation(line: 10490, column: 47, scope: !18785)
!18788 = !DILocalVariable(name: "iop_base", scope: !18785, file: !3, line: 10492, type: !334)
!18789 = !DILocation(line: 10492, column: 14, scope: !18785)
!18790 = !DILocalVariable(name: "warn_code", scope: !18785, file: !3, line: 10493, type: !5240)
!18791 = !DILocation(line: 10493, column: 9, scope: !18785)
!18792 = !DILocalVariable(name: "eep_config", scope: !18785, file: !3, line: 10494, type: !5543)
!18793 = !DILocation(line: 10494, column: 24, scope: !18785)
!18794 = !DILocalVariable(name: "tid", scope: !18785, file: !3, line: 10495, type: !5245)
!18795 = !DILocation(line: 10495, column: 8, scope: !18785)
!18796 = !DILocalVariable(name: "termination", scope: !18785, file: !3, line: 10495, type: !5245)
!18797 = !DILocation(line: 10495, column: 13, scope: !18785)
!18798 = !DILocalVariable(name: "sdtr_speed", scope: !18785, file: !3, line: 10496, type: !5240)
!18799 = !DILocation(line: 10496, column: 9, scope: !18785)
!18800 = !DILocation(line: 10498, column: 13, scope: !18785)
!18801 = !DILocation(line: 10498, column: 22, scope: !18785)
!18802 = !DILocation(line: 10498, column: 11, scope: !18785)
!18803 = !DILocation(line: 10500, column: 12, scope: !18785)
!18804 = !DILocation(line: 10507, column: 29, scope: !18805)
!18805 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10507, column: 6)
!18806 = !DILocation(line: 10507, column: 6, scope: !18805)
!18807 = !DILocation(line: 10508, column: 17, scope: !18805)
!18808 = !DILocation(line: 10508, column: 6, scope: !18805)
!18809 = !DILocation(line: 10507, column: 52, scope: !18805)
!18810 = !DILocation(line: 10507, column: 6, scope: !18785)
!18811 = !DILocalVariable(name: "pdev", scope: !18812, file: !3, line: 10509, type: !5710)
!18812 = distinct !DILexicalBlock(scope: !18805, file: !3, line: 10508, column: 28)
!18813 = !DILocation(line: 10509, column: 19, scope: !18812)
!18814 = !DILocalVariable(name: "__mptr", scope: !18815, file: !3, line: 10509, type: !334)
!18815 = distinct !DILexicalBlock(scope: !18812, file: !3, line: 10509, column: 26)
!18816 = !DILocation(line: 10509, column: 26, scope: !18815)
!18817 = !DILocalVariable(name: "__mptr", scope: !18818, file: !3, line: 10509, type: !334)
!18818 = distinct !DILexicalBlock(scope: !18815, file: !3, line: 10509, column: 26)
!18819 = !DILocation(line: 10509, column: 26, scope: !18818)
!18820 = !DILocation(line: 10509, column: 26, scope: !18821)
!18821 = distinct !DILexicalBlock(scope: !18818, file: !3, line: 10509, column: 26)
!18822 = !DILocation(line: 10509, column: 26, scope: !18823)
!18823 = distinct !DILexicalBlock(scope: !18815, file: !3, line: 10509, column: 26)
!18824 = !DILocation(line: 10510, column: 13, scope: !18812)
!18825 = !DILocation(line: 10515, column: 3, scope: !18812)
!18826 = !DILocation(line: 10518, column: 7, scope: !18827)
!18827 = distinct !DILexicalBlock(scope: !18812, file: !3, line: 10518, column: 7)
!18828 = !DILocation(line: 10518, column: 29, scope: !18827)
!18829 = !DILocation(line: 10518, column: 7, scope: !18812)
!18830 = !DILocalVariable(name: "ints", scope: !18831, file: !3, line: 10519, type: !1404)
!18831 = distinct !DILexicalBlock(scope: !18827, file: !3, line: 10518, column: 35)
!18832 = !DILocation(line: 10519, column: 7, scope: !18831)
!18833 = !DILocation(line: 10525, column: 15, scope: !18831)
!18834 = !DILocation(line: 10525, column: 23, scope: !18831)
!18835 = !DILocation(line: 10539, column: 4, scope: !18831)
!18836 = !DILocation(line: 10540, column: 11, scope: !18831)
!18837 = !DILocation(line: 10540, column: 9, scope: !18831)
!18838 = !DILocation(line: 10541, column: 9, scope: !18839)
!18839 = distinct !DILexicalBlock(scope: !18831, file: !3, line: 10541, column: 8)
!18840 = !DILocation(line: 10541, column: 14, scope: !18839)
!18841 = !DILocation(line: 10541, column: 22, scope: !18839)
!18842 = !DILocation(line: 10541, column: 8, scope: !18831)
!18843 = !DILocation(line: 10542, column: 16, scope: !18839)
!18844 = !DILocation(line: 10542, column: 24, scope: !18839)
!18845 = !DILocation(line: 10542, column: 5, scope: !18839)
!18846 = !DILocation(line: 10543, column: 3, scope: !18831)
!18847 = !DILocation(line: 10550, column: 19, scope: !18812)
!18848 = !DILocation(line: 10550, column: 4, scope: !18812)
!18849 = !DILocation(line: 10549, column: 14, scope: !18812)
!18850 = !DILocation(line: 10549, column: 34, scope: !18812)
!18851 = !DILocation(line: 10552, column: 19, scope: !18812)
!18852 = !DILocation(line: 10552, column: 4, scope: !18812)
!18853 = !DILocation(line: 10551, column: 14, scope: !18812)
!18854 = !DILocation(line: 10551, column: 34, scope: !18812)
!18855 = !DILocation(line: 10554, column: 19, scope: !18812)
!18856 = !DILocation(line: 10554, column: 4, scope: !18812)
!18857 = !DILocation(line: 10553, column: 14, scope: !18812)
!18858 = !DILocation(line: 10553, column: 34, scope: !18812)
!18859 = !DILocation(line: 10556, column: 26, scope: !18812)
!18860 = !DILocation(line: 10556, column: 3, scope: !18812)
!18861 = !DILocation(line: 10557, column: 2, scope: !18812)
!18862 = !DILocation(line: 10565, column: 34, scope: !18785)
!18863 = !DILocation(line: 10565, column: 2, scope: !18785)
!18864 = !DILocation(line: 10565, column: 11, scope: !18785)
!18865 = !DILocation(line: 10565, column: 21, scope: !18785)
!18866 = !DILocation(line: 10566, column: 36, scope: !18785)
!18867 = !DILocation(line: 10566, column: 2, scope: !18785)
!18868 = !DILocation(line: 10566, column: 11, scope: !18785)
!18869 = !DILocation(line: 10566, column: 23, scope: !18785)
!18870 = !DILocation(line: 10567, column: 36, scope: !18785)
!18871 = !DILocation(line: 10567, column: 2, scope: !18785)
!18872 = !DILocation(line: 10567, column: 11, scope: !18785)
!18873 = !DILocation(line: 10567, column: 23, scope: !18785)
!18874 = !DILocation(line: 10568, column: 36, scope: !18785)
!18875 = !DILocation(line: 10568, column: 2, scope: !18785)
!18876 = !DILocation(line: 10568, column: 11, scope: !18785)
!18877 = !DILocation(line: 10568, column: 23, scope: !18785)
!18878 = !DILocation(line: 10569, column: 36, scope: !18785)
!18879 = !DILocation(line: 10569, column: 2, scope: !18785)
!18880 = !DILocation(line: 10569, column: 11, scope: !18785)
!18881 = !DILocation(line: 10569, column: 23, scope: !18785)
!18882 = !DILocation(line: 10570, column: 2, scope: !18785)
!18883 = !DILocation(line: 10570, column: 11, scope: !18785)
!18884 = !DILocation(line: 10570, column: 20, scope: !18785)
!18885 = !DILocation(line: 10571, column: 36, scope: !18785)
!18886 = !DILocation(line: 10571, column: 2, scope: !18785)
!18887 = !DILocation(line: 10571, column: 11, scope: !18785)
!18888 = !DILocation(line: 10571, column: 23, scope: !18785)
!18889 = !DILocation(line: 10572, column: 41, scope: !18785)
!18890 = !DILocation(line: 10572, column: 2, scope: !18785)
!18891 = !DILocation(line: 10572, column: 11, scope: !18785)
!18892 = !DILocation(line: 10572, column: 16, scope: !18785)
!18893 = !DILocation(line: 10572, column: 28, scope: !18785)
!18894 = !DILocation(line: 10573, column: 37, scope: !18785)
!18895 = !DILocation(line: 10573, column: 2, scope: !18785)
!18896 = !DILocation(line: 10573, column: 11, scope: !18785)
!18897 = !DILocation(line: 10573, column: 24, scope: !18785)
!18898 = !DILocation(line: 10574, column: 36, scope: !18785)
!18899 = !DILocation(line: 10574, column: 2, scope: !18785)
!18900 = !DILocation(line: 10574, column: 11, scope: !18785)
!18901 = !DILocation(line: 10574, column: 23, scope: !18785)
!18902 = !DILocation(line: 10575, column: 38, scope: !18785)
!18903 = !DILocation(line: 10575, column: 27, scope: !18785)
!18904 = !DILocation(line: 10575, column: 54, scope: !18785)
!18905 = !DILocation(line: 10575, column: 26, scope: !18785)
!18906 = !DILocation(line: 10575, column: 2, scope: !18785)
!18907 = !DILocation(line: 10575, column: 11, scope: !18785)
!18908 = !DILocation(line: 10575, column: 24, scope: !18785)
!18909 = !DILocation(line: 10576, column: 36, scope: !18785)
!18910 = !DILocation(line: 10576, column: 2, scope: !18785)
!18911 = !DILocation(line: 10576, column: 11, scope: !18785)
!18912 = !DILocation(line: 10576, column: 23, scope: !18785)
!18913 = !DILocation(line: 10577, column: 40, scope: !18785)
!18914 = !DILocation(line: 10577, column: 2, scope: !18785)
!18915 = !DILocation(line: 10577, column: 11, scope: !18785)
!18916 = !DILocation(line: 10577, column: 27, scope: !18785)
!18917 = !DILocation(line: 10578, column: 34, scope: !18785)
!18918 = !DILocation(line: 10578, column: 2, scope: !18785)
!18919 = !DILocation(line: 10578, column: 11, scope: !18785)
!18920 = !DILocation(line: 10578, column: 21, scope: !18785)
!18921 = !DILocation(line: 10579, column: 32, scope: !18785)
!18922 = !DILocation(line: 10579, column: 2, scope: !18785)
!18923 = !DILocation(line: 10579, column: 11, scope: !18785)
!18924 = !DILocation(line: 10579, column: 19, scope: !18785)
!18925 = !DILocation(line: 10585, column: 2, scope: !18785)
!18926 = !DILocation(line: 10585, column: 11, scope: !18785)
!18927 = !DILocation(line: 10585, column: 21, scope: !18785)
!18928 = !DILocation(line: 10586, column: 11, scope: !18929)
!18929 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10586, column: 2)
!18930 = !DILocation(line: 10586, column: 7, scope: !18929)
!18931 = !DILocation(line: 10586, column: 16, scope: !18932)
!18932 = distinct !DILexicalBlock(scope: !18929, file: !3, line: 10586, column: 2)
!18933 = !DILocation(line: 10586, column: 20, scope: !18932)
!18934 = !DILocation(line: 10586, column: 2, scope: !18929)
!18935 = !DILocation(line: 10587, column: 7, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18937, file: !3, line: 10587, column: 7)
!18937 = distinct !DILexicalBlock(scope: !18932, file: !3, line: 10586, column: 43)
!18938 = !DILocation(line: 10587, column: 11, scope: !18936)
!18939 = !DILocation(line: 10587, column: 7, scope: !18937)
!18940 = !DILocation(line: 10588, column: 17, scope: !18941)
!18941 = distinct !DILexicalBlock(scope: !18936, file: !3, line: 10587, column: 17)
!18942 = !DILocation(line: 10588, column: 26, scope: !18941)
!18943 = !DILocation(line: 10588, column: 15, scope: !18941)
!18944 = !DILocation(line: 10589, column: 3, scope: !18941)
!18945 = !DILocation(line: 10589, column: 14, scope: !18946)
!18946 = distinct !DILexicalBlock(scope: !18936, file: !3, line: 10589, column: 14)
!18947 = !DILocation(line: 10589, column: 18, scope: !18946)
!18948 = !DILocation(line: 10589, column: 14, scope: !18936)
!18949 = !DILocation(line: 10590, column: 17, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18946, file: !3, line: 10589, column: 24)
!18951 = !DILocation(line: 10590, column: 26, scope: !18950)
!18952 = !DILocation(line: 10590, column: 15, scope: !18950)
!18953 = !DILocation(line: 10591, column: 3, scope: !18950)
!18954 = !DILocation(line: 10591, column: 14, scope: !18955)
!18955 = distinct !DILexicalBlock(scope: !18946, file: !3, line: 10591, column: 14)
!18956 = !DILocation(line: 10591, column: 18, scope: !18955)
!18957 = !DILocation(line: 10591, column: 14, scope: !18946)
!18958 = !DILocation(line: 10592, column: 17, scope: !18959)
!18959 = distinct !DILexicalBlock(scope: !18955, file: !3, line: 10591, column: 24)
!18960 = !DILocation(line: 10592, column: 26, scope: !18959)
!18961 = !DILocation(line: 10592, column: 15, scope: !18959)
!18962 = !DILocation(line: 10593, column: 3, scope: !18959)
!18963 = !DILocation(line: 10593, column: 14, scope: !18964)
!18964 = distinct !DILexicalBlock(scope: !18955, file: !3, line: 10593, column: 14)
!18965 = !DILocation(line: 10593, column: 18, scope: !18964)
!18966 = !DILocation(line: 10593, column: 14, scope: !18955)
!18967 = !DILocation(line: 10594, column: 17, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18964, file: !3, line: 10593, column: 25)
!18969 = !DILocation(line: 10594, column: 26, scope: !18968)
!18970 = !DILocation(line: 10594, column: 15, scope: !18968)
!18971 = !DILocation(line: 10595, column: 3, scope: !18968)
!18972 = !DILocation(line: 10596, column: 7, scope: !18973)
!18973 = distinct !DILexicalBlock(scope: !18937, file: !3, line: 10596, column: 7)
!18974 = !DILocation(line: 10596, column: 18, scope: !18973)
!18975 = !DILocation(line: 10596, column: 7, scope: !18937)
!18976 = !DILocation(line: 10597, column: 32, scope: !18977)
!18977 = distinct !DILexicalBlock(scope: !18973, file: !3, line: 10596, column: 33)
!18978 = !DILocation(line: 10597, column: 29, scope: !18977)
!18979 = !DILocation(line: 10597, column: 4, scope: !18977)
!18980 = !DILocation(line: 10597, column: 13, scope: !18977)
!18981 = !DILocation(line: 10597, column: 23, scope: !18977)
!18982 = !DILocation(line: 10598, column: 3, scope: !18977)
!18983 = !DILocation(line: 10599, column: 14, scope: !18937)
!18984 = !DILocation(line: 10600, column: 2, scope: !18937)
!18985 = !DILocation(line: 10586, column: 39, scope: !18932)
!18986 = !DILocation(line: 10586, column: 2, scope: !18932)
!18987 = distinct !{!18987, !18934, !18988}
!18988 = !DILocation(line: 10600, column: 2, scope: !18929)
!18989 = !DILocation(line: 10606, column: 17, scope: !18990)
!18990 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10606, column: 6)
!18991 = !DILocation(line: 10606, column: 6, scope: !18990)
!18992 = !DILocation(line: 10606, column: 30, scope: !18990)
!18993 = !DILocation(line: 10606, column: 6, scope: !18785)
!18994 = !DILocation(line: 10607, column: 14, scope: !18995)
!18995 = distinct !DILexicalBlock(scope: !18990, file: !3, line: 10606, column: 54)
!18996 = !DILocation(line: 10607, column: 27, scope: !18995)
!18997 = !DILocation(line: 10608, column: 2, scope: !18995)
!18998 = !DILocation(line: 10608, column: 24, scope: !18999)
!18999 = distinct !DILexicalBlock(scope: !18990, file: !3, line: 10608, column: 13)
!19000 = !DILocation(line: 10608, column: 13, scope: !18999)
!19001 = !DILocation(line: 10608, column: 37, scope: !18999)
!19002 = !DILocation(line: 10608, column: 13, scope: !18990)
!19003 = !DILocation(line: 10610, column: 18, scope: !19004)
!19004 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 10610, column: 7)
!19005 = distinct !DILexicalBlock(scope: !18999, file: !3, line: 10608, column: 61)
!19006 = !DILocation(line: 10610, column: 7, scope: !19004)
!19007 = !DILocation(line: 10610, column: 31, scope: !19004)
!19008 = !DILocation(line: 10610, column: 7, scope: !19005)
!19009 = !DILocation(line: 10611, column: 15, scope: !19010)
!19010 = distinct !DILexicalBlock(scope: !19004, file: !3, line: 10610, column: 37)
!19011 = !DILocation(line: 10611, column: 28, scope: !19010)
!19012 = !DILocation(line: 10612, column: 3, scope: !19010)
!19013 = !DILocation(line: 10613, column: 15, scope: !19014)
!19014 = distinct !DILexicalBlock(scope: !19004, file: !3, line: 10612, column: 10)
!19015 = !DILocation(line: 10613, column: 28, scope: !19014)
!19016 = !DILocation(line: 10615, column: 2, scope: !19005)
!19017 = !DILocation(line: 10617, column: 17, scope: !19018)
!19018 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10617, column: 6)
!19019 = !DILocation(line: 10617, column: 6, scope: !19018)
!19020 = !DILocation(line: 10617, column: 29, scope: !19018)
!19021 = !DILocation(line: 10617, column: 6, scope: !18785)
!19022 = !DILocation(line: 10618, column: 14, scope: !19023)
!19023 = distinct !DILexicalBlock(scope: !19018, file: !3, line: 10617, column: 52)
!19024 = !DILocation(line: 10618, column: 26, scope: !19023)
!19025 = !DILocation(line: 10619, column: 2, scope: !19023)
!19026 = !DILocation(line: 10619, column: 24, scope: !19027)
!19027 = distinct !DILexicalBlock(scope: !19018, file: !3, line: 10619, column: 13)
!19028 = !DILocation(line: 10619, column: 13, scope: !19027)
!19029 = !DILocation(line: 10619, column: 36, scope: !19027)
!19030 = !DILocation(line: 10619, column: 13, scope: !19018)
!19031 = !DILocation(line: 10621, column: 18, scope: !19032)
!19032 = distinct !DILexicalBlock(scope: !19033, file: !3, line: 10621, column: 7)
!19033 = distinct !DILexicalBlock(scope: !19027, file: !3, line: 10619, column: 59)
!19034 = !DILocation(line: 10621, column: 7, scope: !19032)
!19035 = !DILocation(line: 10621, column: 30, scope: !19032)
!19036 = !DILocation(line: 10621, column: 7, scope: !19033)
!19037 = !DILocation(line: 10622, column: 15, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19032, file: !3, line: 10621, column: 36)
!19039 = !DILocation(line: 10622, column: 27, scope: !19038)
!19040 = !DILocation(line: 10623, column: 3, scope: !19038)
!19041 = !DILocation(line: 10624, column: 15, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !19032, file: !3, line: 10623, column: 10)
!19043 = !DILocation(line: 10624, column: 27, scope: !19042)
!19044 = !DILocation(line: 10626, column: 2, scope: !19033)
!19045 = !DILocation(line: 10632, column: 17, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10632, column: 6)
!19047 = !DILocation(line: 10632, column: 6, scope: !19046)
!19048 = !DILocation(line: 10632, column: 42, scope: !19046)
!19049 = !DILocation(line: 10632, column: 31, scope: !19046)
!19050 = !DILocation(line: 10632, column: 29, scope: !19046)
!19051 = !DILocation(line: 10632, column: 6, scope: !18785)
!19052 = !DILocation(line: 10633, column: 39, scope: !19053)
!19053 = distinct !DILexicalBlock(scope: !19046, file: !3, line: 10632, column: 56)
!19054 = !DILocation(line: 10633, column: 14, scope: !19053)
!19055 = !DILocation(line: 10633, column: 26, scope: !19053)
!19056 = !DILocation(line: 10634, column: 2, scope: !19053)
!19057 = !DILocation(line: 10640, column: 37, scope: !18785)
!19058 = !DILocation(line: 10640, column: 2, scope: !18785)
!19059 = !DILocation(line: 10640, column: 11, scope: !18785)
!19060 = !DILocation(line: 10640, column: 24, scope: !18785)
!19061 = !DILocation(line: 10641, column: 36, scope: !18785)
!19062 = !DILocation(line: 10641, column: 2, scope: !18785)
!19063 = !DILocation(line: 10641, column: 11, scope: !18785)
!19064 = !DILocation(line: 10641, column: 23, scope: !18785)
!19065 = !DILocation(line: 10651, column: 17, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10651, column: 6)
!19067 = !DILocation(line: 10651, column: 6, scope: !19066)
!19068 = !DILocation(line: 10651, column: 32, scope: !19066)
!19069 = !DILocation(line: 10651, column: 6, scope: !18785)
!19070 = !DILocation(line: 10652, column: 15, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !19066, file: !3, line: 10651, column: 38)
!19072 = !DILocation(line: 10653, column: 2, scope: !19071)
!19073 = !DILocation(line: 10655, column: 18, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19075, file: !3, line: 10655, column: 7)
!19075 = distinct !DILexicalBlock(scope: !19066, file: !3, line: 10653, column: 9)
!19076 = !DILocation(line: 10655, column: 7, scope: !19074)
!19077 = !DILocation(line: 10655, column: 33, scope: !19074)
!19078 = !DILocation(line: 10655, column: 7, scope: !19075)
!19079 = !DILocation(line: 10656, column: 16, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19074, file: !3, line: 10655, column: 39)
!19081 = !DILocation(line: 10659, column: 3, scope: !19080)
!19082 = !DILocation(line: 10659, column: 25, scope: !19083)
!19083 = distinct !DILexicalBlock(scope: !19074, file: !3, line: 10659, column: 14)
!19084 = !DILocation(line: 10659, column: 14, scope: !19083)
!19085 = !DILocation(line: 10659, column: 40, scope: !19083)
!19086 = !DILocation(line: 10659, column: 14, scope: !19074)
!19087 = !DILocation(line: 10660, column: 16, scope: !19088)
!19088 = distinct !DILexicalBlock(scope: !19083, file: !3, line: 10659, column: 46)
!19089 = !DILocation(line: 10663, column: 3, scope: !19088)
!19090 = !DILocation(line: 10663, column: 25, scope: !19091)
!19091 = distinct !DILexicalBlock(scope: !19083, file: !3, line: 10663, column: 14)
!19092 = !DILocation(line: 10663, column: 14, scope: !19091)
!19093 = !DILocation(line: 10663, column: 40, scope: !19091)
!19094 = !DILocation(line: 10663, column: 14, scope: !19083)
!19095 = !DILocation(line: 10664, column: 16, scope: !19096)
!19096 = distinct !DILexicalBlock(scope: !19091, file: !3, line: 10663, column: 46)
!19097 = !DILocation(line: 10665, column: 3, scope: !19096)
!19098 = !DILocation(line: 10670, column: 16, scope: !19099)
!19099 = distinct !DILexicalBlock(scope: !19091, file: !3, line: 10665, column: 10)
!19100 = !DILocation(line: 10671, column: 14, scope: !19099)
!19101 = !DILocation(line: 10675, column: 17, scope: !19102)
!19102 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 10675, column: 6)
!19103 = !DILocation(line: 10675, column: 6, scope: !19102)
!19104 = !DILocation(line: 10675, column: 33, scope: !19102)
!19105 = !DILocation(line: 10675, column: 6, scope: !18785)
!19106 = !DILocation(line: 10676, column: 31, scope: !19107)
!19107 = distinct !DILexicalBlock(scope: !19102, file: !3, line: 10675, column: 39)
!19108 = !DILocation(line: 10676, column: 3, scope: !19107)
!19109 = !DILocation(line: 10676, column: 12, scope: !19107)
!19110 = !DILocation(line: 10676, column: 17, scope: !19107)
!19111 = !DILocation(line: 10676, column: 29, scope: !19107)
!19112 = !DILocation(line: 10677, column: 2, scope: !19107)
!19113 = !DILocation(line: 10679, column: 18, scope: !19114)
!19114 = distinct !DILexicalBlock(scope: !19115, file: !3, line: 10679, column: 7)
!19115 = distinct !DILexicalBlock(scope: !19102, file: !3, line: 10677, column: 9)
!19116 = !DILocation(line: 10679, column: 7, scope: !19114)
!19117 = !DILocation(line: 10679, column: 34, scope: !19114)
!19118 = !DILocation(line: 10679, column: 7, scope: !19115)
!19119 = !DILocation(line: 10680, column: 32, scope: !19120)
!19120 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 10679, column: 40)
!19121 = !DILocation(line: 10680, column: 4, scope: !19120)
!19122 = !DILocation(line: 10680, column: 13, scope: !19120)
!19123 = !DILocation(line: 10680, column: 18, scope: !19120)
!19124 = !DILocation(line: 10680, column: 30, scope: !19120)
!19125 = !DILocation(line: 10683, column: 3, scope: !19120)
!19126 = !DILocation(line: 10683, column: 25, scope: !19127)
!19127 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 10683, column: 14)
!19128 = !DILocation(line: 10683, column: 14, scope: !19127)
!19129 = !DILocation(line: 10683, column: 41, scope: !19127)
!19130 = !DILocation(line: 10683, column: 14, scope: !19114)
!19131 = !DILocation(line: 10684, column: 32, scope: !19132)
!19132 = distinct !DILexicalBlock(scope: !19127, file: !3, line: 10683, column: 47)
!19133 = !DILocation(line: 10684, column: 44, scope: !19132)
!19134 = !DILocation(line: 10684, column: 4, scope: !19132)
!19135 = !DILocation(line: 10684, column: 13, scope: !19132)
!19136 = !DILocation(line: 10684, column: 18, scope: !19132)
!19137 = !DILocation(line: 10684, column: 30, scope: !19132)
!19138 = !DILocation(line: 10687, column: 3, scope: !19132)
!19139 = !DILocation(line: 10687, column: 25, scope: !19140)
!19140 = distinct !DILexicalBlock(scope: !19127, file: !3, line: 10687, column: 14)
!19141 = !DILocation(line: 10687, column: 14, scope: !19140)
!19142 = !DILocation(line: 10687, column: 41, scope: !19140)
!19143 = !DILocation(line: 10687, column: 14, scope: !19127)
!19144 = !DILocation(line: 10688, column: 32, scope: !19145)
!19145 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 10687, column: 47)
!19146 = !DILocation(line: 10688, column: 44, scope: !19145)
!19147 = !DILocation(line: 10688, column: 4, scope: !19145)
!19148 = !DILocation(line: 10688, column: 13, scope: !19145)
!19149 = !DILocation(line: 10688, column: 18, scope: !19145)
!19150 = !DILocation(line: 10688, column: 30, scope: !19145)
!19151 = !DILocation(line: 10689, column: 3, scope: !19145)
!19152 = !DILocation(line: 10694, column: 32, scope: !19153)
!19153 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 10689, column: 10)
!19154 = !DILocation(line: 10694, column: 4, scope: !19153)
!19155 = !DILocation(line: 10694, column: 13, scope: !19153)
!19156 = !DILocation(line: 10694, column: 18, scope: !19153)
!19157 = !DILocation(line: 10694, column: 30, scope: !19153)
!19158 = !DILocation(line: 10695, column: 14, scope: !19153)
!19159 = !DILocation(line: 10699, column: 9, scope: !18785)
!19160 = !DILocation(line: 10699, column: 2, scope: !18785)
!19161 = distinct !DISubprogram(name: "AdvInitFrom38C0800EEP", scope: !3, file: !3, line: 10291, type: !10908, scopeLine: 10292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!19162 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !19161, file: !3, line: 10291, type: !6378)
!19163 = !DILocation(line: 10291, column: 47, scope: !19161)
!19164 = !DILocalVariable(name: "iop_base", scope: !19161, file: !3, line: 10293, type: !334)
!19165 = !DILocation(line: 10293, column: 14, scope: !19161)
!19166 = !DILocalVariable(name: "warn_code", scope: !19161, file: !3, line: 10294, type: !5240)
!19167 = !DILocation(line: 10294, column: 9, scope: !19161)
!19168 = !DILocalVariable(name: "eep_config", scope: !19161, file: !3, line: 10295, type: !5478)
!19169 = !DILocation(line: 10295, column: 24, scope: !19161)
!19170 = !DILocalVariable(name: "tid", scope: !19161, file: !3, line: 10296, type: !5245)
!19171 = !DILocation(line: 10296, column: 8, scope: !19161)
!19172 = !DILocalVariable(name: "termination", scope: !19161, file: !3, line: 10296, type: !5245)
!19173 = !DILocation(line: 10296, column: 13, scope: !19161)
!19174 = !DILocalVariable(name: "sdtr_speed", scope: !19161, file: !3, line: 10297, type: !5240)
!19175 = !DILocation(line: 10297, column: 9, scope: !19161)
!19176 = !DILocation(line: 10299, column: 13, scope: !19161)
!19177 = !DILocation(line: 10299, column: 22, scope: !19161)
!19178 = !DILocation(line: 10299, column: 11, scope: !19161)
!19179 = !DILocation(line: 10301, column: 12, scope: !19161)
!19180 = !DILocation(line: 10308, column: 29, scope: !19181)
!19181 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10308, column: 6)
!19182 = !DILocation(line: 10308, column: 6, scope: !19181)
!19183 = !DILocation(line: 10309, column: 17, scope: !19181)
!19184 = !DILocation(line: 10309, column: 6, scope: !19181)
!19185 = !DILocation(line: 10308, column: 52, scope: !19181)
!19186 = !DILocation(line: 10308, column: 6, scope: !19161)
!19187 = !DILocation(line: 10310, column: 13, scope: !19188)
!19188 = distinct !DILexicalBlock(scope: !19181, file: !3, line: 10309, column: 28)
!19189 = !DILocation(line: 10315, column: 3, scope: !19188)
!19190 = !DILocation(line: 10323, column: 22, scope: !19188)
!19191 = !DILocation(line: 10323, column: 7, scope: !19188)
!19192 = !DILocation(line: 10322, column: 14, scope: !19188)
!19193 = !DILocation(line: 10322, column: 34, scope: !19188)
!19194 = !DILocation(line: 10326, column: 22, scope: !19188)
!19195 = !DILocation(line: 10326, column: 7, scope: !19188)
!19196 = !DILocation(line: 10325, column: 14, scope: !19188)
!19197 = !DILocation(line: 10325, column: 34, scope: !19188)
!19198 = !DILocation(line: 10329, column: 22, scope: !19188)
!19199 = !DILocation(line: 10329, column: 7, scope: !19188)
!19200 = !DILocation(line: 10328, column: 14, scope: !19188)
!19201 = !DILocation(line: 10328, column: 34, scope: !19188)
!19202 = !DILocation(line: 10331, column: 26, scope: !19188)
!19203 = !DILocation(line: 10331, column: 3, scope: !19188)
!19204 = !DILocation(line: 10332, column: 2, scope: !19188)
!19205 = !DILocation(line: 10339, column: 34, scope: !19161)
!19206 = !DILocation(line: 10339, column: 2, scope: !19161)
!19207 = !DILocation(line: 10339, column: 11, scope: !19161)
!19208 = !DILocation(line: 10339, column: 21, scope: !19161)
!19209 = !DILocation(line: 10340, column: 36, scope: !19161)
!19210 = !DILocation(line: 10340, column: 2, scope: !19161)
!19211 = !DILocation(line: 10340, column: 11, scope: !19161)
!19212 = !DILocation(line: 10340, column: 23, scope: !19161)
!19213 = !DILocation(line: 10341, column: 36, scope: !19161)
!19214 = !DILocation(line: 10341, column: 2, scope: !19161)
!19215 = !DILocation(line: 10341, column: 11, scope: !19161)
!19216 = !DILocation(line: 10341, column: 23, scope: !19161)
!19217 = !DILocation(line: 10342, column: 36, scope: !19161)
!19218 = !DILocation(line: 10342, column: 2, scope: !19161)
!19219 = !DILocation(line: 10342, column: 11, scope: !19161)
!19220 = !DILocation(line: 10342, column: 23, scope: !19161)
!19221 = !DILocation(line: 10343, column: 36, scope: !19161)
!19222 = !DILocation(line: 10343, column: 2, scope: !19161)
!19223 = !DILocation(line: 10343, column: 11, scope: !19161)
!19224 = !DILocation(line: 10343, column: 23, scope: !19161)
!19225 = !DILocation(line: 10344, column: 36, scope: !19161)
!19226 = !DILocation(line: 10344, column: 2, scope: !19161)
!19227 = !DILocation(line: 10344, column: 11, scope: !19161)
!19228 = !DILocation(line: 10344, column: 23, scope: !19161)
!19229 = !DILocation(line: 10345, column: 41, scope: !19161)
!19230 = !DILocation(line: 10345, column: 2, scope: !19161)
!19231 = !DILocation(line: 10345, column: 11, scope: !19161)
!19232 = !DILocation(line: 10345, column: 16, scope: !19161)
!19233 = !DILocation(line: 10345, column: 28, scope: !19161)
!19234 = !DILocation(line: 10346, column: 37, scope: !19161)
!19235 = !DILocation(line: 10346, column: 2, scope: !19161)
!19236 = !DILocation(line: 10346, column: 11, scope: !19161)
!19237 = !DILocation(line: 10346, column: 24, scope: !19161)
!19238 = !DILocation(line: 10347, column: 36, scope: !19161)
!19239 = !DILocation(line: 10347, column: 2, scope: !19161)
!19240 = !DILocation(line: 10347, column: 11, scope: !19161)
!19241 = !DILocation(line: 10347, column: 23, scope: !19161)
!19242 = !DILocation(line: 10348, column: 38, scope: !19161)
!19243 = !DILocation(line: 10348, column: 27, scope: !19161)
!19244 = !DILocation(line: 10348, column: 54, scope: !19161)
!19245 = !DILocation(line: 10348, column: 26, scope: !19161)
!19246 = !DILocation(line: 10348, column: 2, scope: !19161)
!19247 = !DILocation(line: 10348, column: 11, scope: !19161)
!19248 = !DILocation(line: 10348, column: 24, scope: !19161)
!19249 = !DILocation(line: 10349, column: 36, scope: !19161)
!19250 = !DILocation(line: 10349, column: 2, scope: !19161)
!19251 = !DILocation(line: 10349, column: 11, scope: !19161)
!19252 = !DILocation(line: 10349, column: 23, scope: !19161)
!19253 = !DILocation(line: 10350, column: 40, scope: !19161)
!19254 = !DILocation(line: 10350, column: 2, scope: !19161)
!19255 = !DILocation(line: 10350, column: 11, scope: !19161)
!19256 = !DILocation(line: 10350, column: 27, scope: !19161)
!19257 = !DILocation(line: 10351, column: 34, scope: !19161)
!19258 = !DILocation(line: 10351, column: 2, scope: !19161)
!19259 = !DILocation(line: 10351, column: 11, scope: !19161)
!19260 = !DILocation(line: 10351, column: 21, scope: !19161)
!19261 = !DILocation(line: 10352, column: 32, scope: !19161)
!19262 = !DILocation(line: 10352, column: 2, scope: !19161)
!19263 = !DILocation(line: 10352, column: 11, scope: !19161)
!19264 = !DILocation(line: 10352, column: 19, scope: !19161)
!19265 = !DILocation(line: 10353, column: 37, scope: !19161)
!19266 = !DILocation(line: 10353, column: 2, scope: !19161)
!19267 = !DILocation(line: 10353, column: 11, scope: !19161)
!19268 = !DILocation(line: 10353, column: 16, scope: !19161)
!19269 = !DILocation(line: 10353, column: 24, scope: !19161)
!19270 = !DILocation(line: 10354, column: 37, scope: !19161)
!19271 = !DILocation(line: 10354, column: 2, scope: !19161)
!19272 = !DILocation(line: 10354, column: 11, scope: !19161)
!19273 = !DILocation(line: 10354, column: 16, scope: !19161)
!19274 = !DILocation(line: 10354, column: 24, scope: !19161)
!19275 = !DILocation(line: 10355, column: 37, scope: !19161)
!19276 = !DILocation(line: 10355, column: 2, scope: !19161)
!19277 = !DILocation(line: 10355, column: 11, scope: !19161)
!19278 = !DILocation(line: 10355, column: 16, scope: !19161)
!19279 = !DILocation(line: 10355, column: 24, scope: !19161)
!19280 = !DILocation(line: 10361, column: 2, scope: !19161)
!19281 = !DILocation(line: 10361, column: 11, scope: !19161)
!19282 = !DILocation(line: 10361, column: 21, scope: !19161)
!19283 = !DILocation(line: 10362, column: 11, scope: !19284)
!19284 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10362, column: 2)
!19285 = !DILocation(line: 10362, column: 7, scope: !19284)
!19286 = !DILocation(line: 10362, column: 16, scope: !19287)
!19287 = distinct !DILexicalBlock(scope: !19284, file: !3, line: 10362, column: 2)
!19288 = !DILocation(line: 10362, column: 20, scope: !19287)
!19289 = !DILocation(line: 10362, column: 2, scope: !19284)
!19290 = !DILocation(line: 10363, column: 7, scope: !19291)
!19291 = distinct !DILexicalBlock(scope: !19292, file: !3, line: 10363, column: 7)
!19292 = distinct !DILexicalBlock(scope: !19287, file: !3, line: 10362, column: 43)
!19293 = !DILocation(line: 10363, column: 11, scope: !19291)
!19294 = !DILocation(line: 10363, column: 7, scope: !19292)
!19295 = !DILocation(line: 10364, column: 17, scope: !19296)
!19296 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 10363, column: 17)
!19297 = !DILocation(line: 10364, column: 26, scope: !19296)
!19298 = !DILocation(line: 10364, column: 15, scope: !19296)
!19299 = !DILocation(line: 10365, column: 3, scope: !19296)
!19300 = !DILocation(line: 10365, column: 14, scope: !19301)
!19301 = distinct !DILexicalBlock(scope: !19291, file: !3, line: 10365, column: 14)
!19302 = !DILocation(line: 10365, column: 18, scope: !19301)
!19303 = !DILocation(line: 10365, column: 14, scope: !19291)
!19304 = !DILocation(line: 10366, column: 17, scope: !19305)
!19305 = distinct !DILexicalBlock(scope: !19301, file: !3, line: 10365, column: 24)
!19306 = !DILocation(line: 10366, column: 26, scope: !19305)
!19307 = !DILocation(line: 10366, column: 15, scope: !19305)
!19308 = !DILocation(line: 10367, column: 3, scope: !19305)
!19309 = !DILocation(line: 10367, column: 14, scope: !19310)
!19310 = distinct !DILexicalBlock(scope: !19301, file: !3, line: 10367, column: 14)
!19311 = !DILocation(line: 10367, column: 18, scope: !19310)
!19312 = !DILocation(line: 10367, column: 14, scope: !19301)
!19313 = !DILocation(line: 10368, column: 17, scope: !19314)
!19314 = distinct !DILexicalBlock(scope: !19310, file: !3, line: 10367, column: 24)
!19315 = !DILocation(line: 10368, column: 26, scope: !19314)
!19316 = !DILocation(line: 10368, column: 15, scope: !19314)
!19317 = !DILocation(line: 10369, column: 3, scope: !19314)
!19318 = !DILocation(line: 10369, column: 14, scope: !19319)
!19319 = distinct !DILexicalBlock(scope: !19310, file: !3, line: 10369, column: 14)
!19320 = !DILocation(line: 10369, column: 18, scope: !19319)
!19321 = !DILocation(line: 10369, column: 14, scope: !19310)
!19322 = !DILocation(line: 10370, column: 17, scope: !19323)
!19323 = distinct !DILexicalBlock(scope: !19319, file: !3, line: 10369, column: 25)
!19324 = !DILocation(line: 10370, column: 26, scope: !19323)
!19325 = !DILocation(line: 10370, column: 15, scope: !19323)
!19326 = !DILocation(line: 10371, column: 3, scope: !19323)
!19327 = !DILocation(line: 10372, column: 7, scope: !19328)
!19328 = distinct !DILexicalBlock(scope: !19292, file: !3, line: 10372, column: 7)
!19329 = !DILocation(line: 10372, column: 18, scope: !19328)
!19330 = !DILocation(line: 10372, column: 7, scope: !19292)
!19331 = !DILocation(line: 10373, column: 32, scope: !19332)
!19332 = distinct !DILexicalBlock(scope: !19328, file: !3, line: 10372, column: 33)
!19333 = !DILocation(line: 10373, column: 29, scope: !19332)
!19334 = !DILocation(line: 10373, column: 4, scope: !19332)
!19335 = !DILocation(line: 10373, column: 13, scope: !19332)
!19336 = !DILocation(line: 10373, column: 23, scope: !19332)
!19337 = !DILocation(line: 10374, column: 3, scope: !19332)
!19338 = !DILocation(line: 10375, column: 14, scope: !19292)
!19339 = !DILocation(line: 10376, column: 2, scope: !19292)
!19340 = !DILocation(line: 10362, column: 39, scope: !19287)
!19341 = !DILocation(line: 10362, column: 2, scope: !19287)
!19342 = distinct !{!19342, !19289, !19343}
!19343 = !DILocation(line: 10376, column: 2, scope: !19284)
!19344 = !DILocation(line: 10382, column: 17, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10382, column: 6)
!19346 = !DILocation(line: 10382, column: 6, scope: !19345)
!19347 = !DILocation(line: 10382, column: 30, scope: !19345)
!19348 = !DILocation(line: 10382, column: 6, scope: !19161)
!19349 = !DILocation(line: 10383, column: 14, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 10382, column: 54)
!19351 = !DILocation(line: 10383, column: 27, scope: !19350)
!19352 = !DILocation(line: 10384, column: 2, scope: !19350)
!19353 = !DILocation(line: 10384, column: 24, scope: !19354)
!19354 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 10384, column: 13)
!19355 = !DILocation(line: 10384, column: 13, scope: !19354)
!19356 = !DILocation(line: 10384, column: 37, scope: !19354)
!19357 = !DILocation(line: 10384, column: 13, scope: !19345)
!19358 = !DILocation(line: 10386, column: 18, scope: !19359)
!19359 = distinct !DILexicalBlock(scope: !19360, file: !3, line: 10386, column: 7)
!19360 = distinct !DILexicalBlock(scope: !19354, file: !3, line: 10384, column: 61)
!19361 = !DILocation(line: 10386, column: 7, scope: !19359)
!19362 = !DILocation(line: 10386, column: 31, scope: !19359)
!19363 = !DILocation(line: 10386, column: 7, scope: !19360)
!19364 = !DILocation(line: 10387, column: 15, scope: !19365)
!19365 = distinct !DILexicalBlock(scope: !19359, file: !3, line: 10386, column: 37)
!19366 = !DILocation(line: 10387, column: 28, scope: !19365)
!19367 = !DILocation(line: 10388, column: 3, scope: !19365)
!19368 = !DILocation(line: 10389, column: 15, scope: !19369)
!19369 = distinct !DILexicalBlock(scope: !19359, file: !3, line: 10388, column: 10)
!19370 = !DILocation(line: 10389, column: 28, scope: !19369)
!19371 = !DILocation(line: 10391, column: 2, scope: !19360)
!19372 = !DILocation(line: 10393, column: 17, scope: !19373)
!19373 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10393, column: 6)
!19374 = !DILocation(line: 10393, column: 6, scope: !19373)
!19375 = !DILocation(line: 10393, column: 29, scope: !19373)
!19376 = !DILocation(line: 10393, column: 6, scope: !19161)
!19377 = !DILocation(line: 10394, column: 14, scope: !19378)
!19378 = distinct !DILexicalBlock(scope: !19373, file: !3, line: 10393, column: 52)
!19379 = !DILocation(line: 10394, column: 26, scope: !19378)
!19380 = !DILocation(line: 10395, column: 2, scope: !19378)
!19381 = !DILocation(line: 10395, column: 24, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !19373, file: !3, line: 10395, column: 13)
!19383 = !DILocation(line: 10395, column: 13, scope: !19382)
!19384 = !DILocation(line: 10395, column: 36, scope: !19382)
!19385 = !DILocation(line: 10395, column: 13, scope: !19373)
!19386 = !DILocation(line: 10397, column: 18, scope: !19387)
!19387 = distinct !DILexicalBlock(scope: !19388, file: !3, line: 10397, column: 7)
!19388 = distinct !DILexicalBlock(scope: !19382, file: !3, line: 10395, column: 59)
!19389 = !DILocation(line: 10397, column: 7, scope: !19387)
!19390 = !DILocation(line: 10397, column: 30, scope: !19387)
!19391 = !DILocation(line: 10397, column: 7, scope: !19388)
!19392 = !DILocation(line: 10398, column: 15, scope: !19393)
!19393 = distinct !DILexicalBlock(scope: !19387, file: !3, line: 10397, column: 36)
!19394 = !DILocation(line: 10398, column: 27, scope: !19393)
!19395 = !DILocation(line: 10399, column: 3, scope: !19393)
!19396 = !DILocation(line: 10400, column: 15, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19387, file: !3, line: 10399, column: 10)
!19398 = !DILocation(line: 10400, column: 27, scope: !19397)
!19399 = !DILocation(line: 10402, column: 2, scope: !19388)
!19400 = !DILocation(line: 10408, column: 17, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10408, column: 6)
!19402 = !DILocation(line: 10408, column: 6, scope: !19401)
!19403 = !DILocation(line: 10408, column: 42, scope: !19401)
!19404 = !DILocation(line: 10408, column: 31, scope: !19401)
!19405 = !DILocation(line: 10408, column: 29, scope: !19401)
!19406 = !DILocation(line: 10408, column: 6, scope: !19161)
!19407 = !DILocation(line: 10409, column: 39, scope: !19408)
!19408 = distinct !DILexicalBlock(scope: !19401, file: !3, line: 10408, column: 56)
!19409 = !DILocation(line: 10409, column: 14, scope: !19408)
!19410 = !DILocation(line: 10409, column: 26, scope: !19408)
!19411 = !DILocation(line: 10410, column: 2, scope: !19408)
!19412 = !DILocation(line: 10416, column: 37, scope: !19161)
!19413 = !DILocation(line: 10416, column: 2, scope: !19161)
!19414 = !DILocation(line: 10416, column: 11, scope: !19161)
!19415 = !DILocation(line: 10416, column: 24, scope: !19161)
!19416 = !DILocation(line: 10417, column: 36, scope: !19161)
!19417 = !DILocation(line: 10417, column: 2, scope: !19161)
!19418 = !DILocation(line: 10417, column: 11, scope: !19161)
!19419 = !DILocation(line: 10417, column: 23, scope: !19161)
!19420 = !DILocation(line: 10427, column: 17, scope: !19421)
!19421 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10427, column: 6)
!19422 = !DILocation(line: 10427, column: 6, scope: !19421)
!19423 = !DILocation(line: 10427, column: 32, scope: !19421)
!19424 = !DILocation(line: 10427, column: 6, scope: !19161)
!19425 = !DILocation(line: 10428, column: 15, scope: !19426)
!19426 = distinct !DILexicalBlock(scope: !19421, file: !3, line: 10427, column: 38)
!19427 = !DILocation(line: 10429, column: 2, scope: !19426)
!19428 = !DILocation(line: 10431, column: 18, scope: !19429)
!19429 = distinct !DILexicalBlock(scope: !19430, file: !3, line: 10431, column: 7)
!19430 = distinct !DILexicalBlock(scope: !19421, file: !3, line: 10429, column: 9)
!19431 = !DILocation(line: 10431, column: 7, scope: !19429)
!19432 = !DILocation(line: 10431, column: 33, scope: !19429)
!19433 = !DILocation(line: 10431, column: 7, scope: !19430)
!19434 = !DILocation(line: 10432, column: 16, scope: !19435)
!19435 = distinct !DILexicalBlock(scope: !19429, file: !3, line: 10431, column: 39)
!19436 = !DILocation(line: 10435, column: 3, scope: !19435)
!19437 = !DILocation(line: 10435, column: 25, scope: !19438)
!19438 = distinct !DILexicalBlock(scope: !19429, file: !3, line: 10435, column: 14)
!19439 = !DILocation(line: 10435, column: 14, scope: !19438)
!19440 = !DILocation(line: 10435, column: 40, scope: !19438)
!19441 = !DILocation(line: 10435, column: 14, scope: !19429)
!19442 = !DILocation(line: 10436, column: 16, scope: !19443)
!19443 = distinct !DILexicalBlock(scope: !19438, file: !3, line: 10435, column: 46)
!19444 = !DILocation(line: 10439, column: 3, scope: !19443)
!19445 = !DILocation(line: 10439, column: 25, scope: !19446)
!19446 = distinct !DILexicalBlock(scope: !19438, file: !3, line: 10439, column: 14)
!19447 = !DILocation(line: 10439, column: 14, scope: !19446)
!19448 = !DILocation(line: 10439, column: 40, scope: !19446)
!19449 = !DILocation(line: 10439, column: 14, scope: !19438)
!19450 = !DILocation(line: 10440, column: 16, scope: !19451)
!19451 = distinct !DILexicalBlock(scope: !19446, file: !3, line: 10439, column: 46)
!19452 = !DILocation(line: 10441, column: 3, scope: !19451)
!19453 = !DILocation(line: 10446, column: 16, scope: !19454)
!19454 = distinct !DILexicalBlock(scope: !19446, file: !3, line: 10441, column: 10)
!19455 = !DILocation(line: 10447, column: 14, scope: !19454)
!19456 = !DILocation(line: 10451, column: 17, scope: !19457)
!19457 = distinct !DILexicalBlock(scope: !19161, file: !3, line: 10451, column: 6)
!19458 = !DILocation(line: 10451, column: 6, scope: !19457)
!19459 = !DILocation(line: 10451, column: 33, scope: !19457)
!19460 = !DILocation(line: 10451, column: 6, scope: !19161)
!19461 = !DILocation(line: 10452, column: 31, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19457, file: !3, line: 10451, column: 39)
!19463 = !DILocation(line: 10452, column: 3, scope: !19462)
!19464 = !DILocation(line: 10452, column: 12, scope: !19462)
!19465 = !DILocation(line: 10452, column: 17, scope: !19462)
!19466 = !DILocation(line: 10452, column: 29, scope: !19462)
!19467 = !DILocation(line: 10453, column: 2, scope: !19462)
!19468 = !DILocation(line: 10455, column: 18, scope: !19469)
!19469 = distinct !DILexicalBlock(scope: !19470, file: !3, line: 10455, column: 7)
!19470 = distinct !DILexicalBlock(scope: !19457, file: !3, line: 10453, column: 9)
!19471 = !DILocation(line: 10455, column: 7, scope: !19469)
!19472 = !DILocation(line: 10455, column: 34, scope: !19469)
!19473 = !DILocation(line: 10455, column: 7, scope: !19470)
!19474 = !DILocation(line: 10456, column: 32, scope: !19475)
!19475 = distinct !DILexicalBlock(scope: !19469, file: !3, line: 10455, column: 40)
!19476 = !DILocation(line: 10456, column: 4, scope: !19475)
!19477 = !DILocation(line: 10456, column: 13, scope: !19475)
!19478 = !DILocation(line: 10456, column: 18, scope: !19475)
!19479 = !DILocation(line: 10456, column: 30, scope: !19475)
!19480 = !DILocation(line: 10459, column: 3, scope: !19475)
!19481 = !DILocation(line: 10459, column: 25, scope: !19482)
!19482 = distinct !DILexicalBlock(scope: !19469, file: !3, line: 10459, column: 14)
!19483 = !DILocation(line: 10459, column: 14, scope: !19482)
!19484 = !DILocation(line: 10459, column: 41, scope: !19482)
!19485 = !DILocation(line: 10459, column: 14, scope: !19469)
!19486 = !DILocation(line: 10460, column: 32, scope: !19487)
!19487 = distinct !DILexicalBlock(scope: !19482, file: !3, line: 10459, column: 47)
!19488 = !DILocation(line: 10460, column: 44, scope: !19487)
!19489 = !DILocation(line: 10460, column: 4, scope: !19487)
!19490 = !DILocation(line: 10460, column: 13, scope: !19487)
!19491 = !DILocation(line: 10460, column: 18, scope: !19487)
!19492 = !DILocation(line: 10460, column: 30, scope: !19487)
!19493 = !DILocation(line: 10463, column: 3, scope: !19487)
!19494 = !DILocation(line: 10463, column: 25, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19482, file: !3, line: 10463, column: 14)
!19496 = !DILocation(line: 10463, column: 14, scope: !19495)
!19497 = !DILocation(line: 10463, column: 41, scope: !19495)
!19498 = !DILocation(line: 10463, column: 14, scope: !19482)
!19499 = !DILocation(line: 10464, column: 32, scope: !19500)
!19500 = distinct !DILexicalBlock(scope: !19495, file: !3, line: 10463, column: 47)
!19501 = !DILocation(line: 10464, column: 44, scope: !19500)
!19502 = !DILocation(line: 10464, column: 4, scope: !19500)
!19503 = !DILocation(line: 10464, column: 13, scope: !19500)
!19504 = !DILocation(line: 10464, column: 18, scope: !19500)
!19505 = !DILocation(line: 10464, column: 30, scope: !19500)
!19506 = !DILocation(line: 10465, column: 3, scope: !19500)
!19507 = !DILocation(line: 10470, column: 32, scope: !19508)
!19508 = distinct !DILexicalBlock(scope: !19495, file: !3, line: 10465, column: 10)
!19509 = !DILocation(line: 10470, column: 4, scope: !19508)
!19510 = !DILocation(line: 10470, column: 13, scope: !19508)
!19511 = !DILocation(line: 10470, column: 18, scope: !19508)
!19512 = !DILocation(line: 10470, column: 30, scope: !19508)
!19513 = !DILocation(line: 10471, column: 14, scope: !19508)
!19514 = !DILocation(line: 10475, column: 9, scope: !19161)
!19515 = !DILocation(line: 10475, column: 2, scope: !19161)
!19516 = distinct !DISubprogram(name: "AdvInitFrom3550EEP", scope: !3, file: !3, line: 10141, type: !10908, scopeLine: 10142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!19517 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !19516, file: !3, line: 10141, type: !6378)
!19518 = !DILocation(line: 10141, column: 44, scope: !19516)
!19519 = !DILocalVariable(name: "iop_base", scope: !19516, file: !3, line: 10143, type: !334)
!19520 = !DILocation(line: 10143, column: 14, scope: !19516)
!19521 = !DILocalVariable(name: "warn_code", scope: !19516, file: !3, line: 10144, type: !5240)
!19522 = !DILocation(line: 10144, column: 9, scope: !19516)
!19523 = !DILocalVariable(name: "eep_config", scope: !19516, file: !3, line: 10145, type: !5439)
!19524 = !DILocation(line: 10145, column: 21, scope: !19516)
!19525 = !DILocation(line: 10147, column: 13, scope: !19516)
!19526 = !DILocation(line: 10147, column: 22, scope: !19516)
!19527 = !DILocation(line: 10147, column: 11, scope: !19516)
!19528 = !DILocation(line: 10149, column: 12, scope: !19516)
!19529 = !DILocation(line: 10156, column: 26, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 10156, column: 6)
!19531 = !DILocation(line: 10156, column: 6, scope: !19530)
!19532 = !DILocation(line: 10156, column: 63, scope: !19530)
!19533 = !DILocation(line: 10156, column: 52, scope: !19530)
!19534 = !DILocation(line: 10156, column: 49, scope: !19530)
!19535 = !DILocation(line: 10156, column: 6, scope: !19516)
!19536 = !DILocation(line: 10157, column: 13, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19530, file: !3, line: 10156, column: 74)
!19538 = !DILocation(line: 10162, column: 3, scope: !19537)
!19539 = !DILocation(line: 10170, column: 22, scope: !19537)
!19540 = !DILocation(line: 10170, column: 7, scope: !19537)
!19541 = !DILocation(line: 10169, column: 14, scope: !19537)
!19542 = !DILocation(line: 10169, column: 34, scope: !19537)
!19543 = !DILocation(line: 10173, column: 22, scope: !19537)
!19544 = !DILocation(line: 10173, column: 7, scope: !19537)
!19545 = !DILocation(line: 10172, column: 14, scope: !19537)
!19546 = !DILocation(line: 10172, column: 34, scope: !19537)
!19547 = !DILocation(line: 10176, column: 22, scope: !19537)
!19548 = !DILocation(line: 10176, column: 7, scope: !19537)
!19549 = !DILocation(line: 10175, column: 14, scope: !19537)
!19550 = !DILocation(line: 10175, column: 34, scope: !19537)
!19551 = !DILocation(line: 10178, column: 23, scope: !19537)
!19552 = !DILocation(line: 10178, column: 3, scope: !19537)
!19553 = !DILocation(line: 10179, column: 2, scope: !19537)
!19554 = !DILocation(line: 10186, column: 34, scope: !19516)
!19555 = !DILocation(line: 10186, column: 2, scope: !19516)
!19556 = !DILocation(line: 10186, column: 11, scope: !19516)
!19557 = !DILocation(line: 10186, column: 21, scope: !19516)
!19558 = !DILocation(line: 10187, column: 34, scope: !19516)
!19559 = !DILocation(line: 10187, column: 2, scope: !19516)
!19560 = !DILocation(line: 10187, column: 11, scope: !19516)
!19561 = !DILocation(line: 10187, column: 21, scope: !19516)
!19562 = !DILocation(line: 10188, column: 35, scope: !19516)
!19563 = !DILocation(line: 10188, column: 2, scope: !19516)
!19564 = !DILocation(line: 10188, column: 11, scope: !19516)
!19565 = !DILocation(line: 10188, column: 22, scope: !19516)
!19566 = !DILocation(line: 10189, column: 36, scope: !19516)
!19567 = !DILocation(line: 10189, column: 2, scope: !19516)
!19568 = !DILocation(line: 10189, column: 11, scope: !19516)
!19569 = !DILocation(line: 10189, column: 23, scope: !19516)
!19570 = !DILocation(line: 10190, column: 41, scope: !19516)
!19571 = !DILocation(line: 10190, column: 2, scope: !19516)
!19572 = !DILocation(line: 10190, column: 11, scope: !19516)
!19573 = !DILocation(line: 10190, column: 16, scope: !19516)
!19574 = !DILocation(line: 10190, column: 28, scope: !19516)
!19575 = !DILocation(line: 10191, column: 37, scope: !19516)
!19576 = !DILocation(line: 10191, column: 2, scope: !19516)
!19577 = !DILocation(line: 10191, column: 11, scope: !19516)
!19578 = !DILocation(line: 10191, column: 24, scope: !19516)
!19579 = !DILocation(line: 10192, column: 36, scope: !19516)
!19580 = !DILocation(line: 10192, column: 2, scope: !19516)
!19581 = !DILocation(line: 10192, column: 11, scope: !19516)
!19582 = !DILocation(line: 10192, column: 23, scope: !19516)
!19583 = !DILocation(line: 10193, column: 38, scope: !19516)
!19584 = !DILocation(line: 10193, column: 27, scope: !19516)
!19585 = !DILocation(line: 10193, column: 54, scope: !19516)
!19586 = !DILocation(line: 10193, column: 26, scope: !19516)
!19587 = !DILocation(line: 10193, column: 2, scope: !19516)
!19588 = !DILocation(line: 10193, column: 11, scope: !19516)
!19589 = !DILocation(line: 10193, column: 24, scope: !19516)
!19590 = !DILocation(line: 10194, column: 36, scope: !19516)
!19591 = !DILocation(line: 10194, column: 2, scope: !19516)
!19592 = !DILocation(line: 10194, column: 11, scope: !19516)
!19593 = !DILocation(line: 10194, column: 23, scope: !19516)
!19594 = !DILocation(line: 10195, column: 40, scope: !19516)
!19595 = !DILocation(line: 10195, column: 2, scope: !19516)
!19596 = !DILocation(line: 10195, column: 11, scope: !19516)
!19597 = !DILocation(line: 10195, column: 27, scope: !19516)
!19598 = !DILocation(line: 10196, column: 34, scope: !19516)
!19599 = !DILocation(line: 10196, column: 2, scope: !19516)
!19600 = !DILocation(line: 10196, column: 11, scope: !19516)
!19601 = !DILocation(line: 10196, column: 21, scope: !19516)
!19602 = !DILocation(line: 10197, column: 32, scope: !19516)
!19603 = !DILocation(line: 10197, column: 2, scope: !19516)
!19604 = !DILocation(line: 10197, column: 11, scope: !19516)
!19605 = !DILocation(line: 10197, column: 19, scope: !19516)
!19606 = !DILocation(line: 10198, column: 37, scope: !19516)
!19607 = !DILocation(line: 10198, column: 2, scope: !19516)
!19608 = !DILocation(line: 10198, column: 11, scope: !19516)
!19609 = !DILocation(line: 10198, column: 16, scope: !19516)
!19610 = !DILocation(line: 10198, column: 24, scope: !19516)
!19611 = !DILocation(line: 10199, column: 37, scope: !19516)
!19612 = !DILocation(line: 10199, column: 2, scope: !19516)
!19613 = !DILocation(line: 10199, column: 11, scope: !19516)
!19614 = !DILocation(line: 10199, column: 16, scope: !19516)
!19615 = !DILocation(line: 10199, column: 24, scope: !19516)
!19616 = !DILocation(line: 10200, column: 37, scope: !19516)
!19617 = !DILocation(line: 10200, column: 2, scope: !19516)
!19618 = !DILocation(line: 10200, column: 11, scope: !19516)
!19619 = !DILocation(line: 10200, column: 16, scope: !19516)
!19620 = !DILocation(line: 10200, column: 24, scope: !19516)
!19621 = !DILocation(line: 10206, column: 17, scope: !19622)
!19622 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 10206, column: 6)
!19623 = !DILocation(line: 10206, column: 6, scope: !19622)
!19624 = !DILocation(line: 10206, column: 30, scope: !19622)
!19625 = !DILocation(line: 10206, column: 6, scope: !19516)
!19626 = !DILocation(line: 10207, column: 14, scope: !19627)
!19627 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 10206, column: 54)
!19628 = !DILocation(line: 10207, column: 27, scope: !19627)
!19629 = !DILocation(line: 10208, column: 2, scope: !19627)
!19630 = !DILocation(line: 10208, column: 24, scope: !19631)
!19631 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 10208, column: 13)
!19632 = !DILocation(line: 10208, column: 13, scope: !19631)
!19633 = !DILocation(line: 10208, column: 37, scope: !19631)
!19634 = !DILocation(line: 10208, column: 13, scope: !19622)
!19635 = !DILocation(line: 10210, column: 18, scope: !19636)
!19636 = distinct !DILexicalBlock(scope: !19637, file: !3, line: 10210, column: 7)
!19637 = distinct !DILexicalBlock(scope: !19631, file: !3, line: 10208, column: 61)
!19638 = !DILocation(line: 10210, column: 7, scope: !19636)
!19639 = !DILocation(line: 10210, column: 31, scope: !19636)
!19640 = !DILocation(line: 10210, column: 7, scope: !19637)
!19641 = !DILocation(line: 10211, column: 15, scope: !19642)
!19642 = distinct !DILexicalBlock(scope: !19636, file: !3, line: 10210, column: 37)
!19643 = !DILocation(line: 10211, column: 28, scope: !19642)
!19644 = !DILocation(line: 10212, column: 3, scope: !19642)
!19645 = !DILocation(line: 10213, column: 15, scope: !19646)
!19646 = distinct !DILexicalBlock(scope: !19636, file: !3, line: 10212, column: 10)
!19647 = !DILocation(line: 10213, column: 28, scope: !19646)
!19648 = !DILocation(line: 10215, column: 2, scope: !19637)
!19649 = !DILocation(line: 10217, column: 17, scope: !19650)
!19650 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 10217, column: 6)
!19651 = !DILocation(line: 10217, column: 6, scope: !19650)
!19652 = !DILocation(line: 10217, column: 29, scope: !19650)
!19653 = !DILocation(line: 10217, column: 6, scope: !19516)
!19654 = !DILocation(line: 10218, column: 14, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19650, file: !3, line: 10217, column: 52)
!19656 = !DILocation(line: 10218, column: 26, scope: !19655)
!19657 = !DILocation(line: 10219, column: 2, scope: !19655)
!19658 = !DILocation(line: 10219, column: 24, scope: !19659)
!19659 = distinct !DILexicalBlock(scope: !19650, file: !3, line: 10219, column: 13)
!19660 = !DILocation(line: 10219, column: 13, scope: !19659)
!19661 = !DILocation(line: 10219, column: 36, scope: !19659)
!19662 = !DILocation(line: 10219, column: 13, scope: !19650)
!19663 = !DILocation(line: 10221, column: 18, scope: !19664)
!19664 = distinct !DILexicalBlock(scope: !19665, file: !3, line: 10221, column: 7)
!19665 = distinct !DILexicalBlock(scope: !19659, file: !3, line: 10219, column: 59)
!19666 = !DILocation(line: 10221, column: 7, scope: !19664)
!19667 = !DILocation(line: 10221, column: 30, scope: !19664)
!19668 = !DILocation(line: 10221, column: 7, scope: !19665)
!19669 = !DILocation(line: 10222, column: 15, scope: !19670)
!19670 = distinct !DILexicalBlock(scope: !19664, file: !3, line: 10221, column: 36)
!19671 = !DILocation(line: 10222, column: 27, scope: !19670)
!19672 = !DILocation(line: 10223, column: 3, scope: !19670)
!19673 = !DILocation(line: 10224, column: 15, scope: !19674)
!19674 = distinct !DILexicalBlock(scope: !19664, file: !3, line: 10223, column: 10)
!19675 = !DILocation(line: 10224, column: 27, scope: !19674)
!19676 = !DILocation(line: 10226, column: 2, scope: !19665)
!19677 = !DILocation(line: 10232, column: 17, scope: !19678)
!19678 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 10232, column: 6)
!19679 = !DILocation(line: 10232, column: 6, scope: !19678)
!19680 = !DILocation(line: 10232, column: 42, scope: !19678)
!19681 = !DILocation(line: 10232, column: 31, scope: !19678)
!19682 = !DILocation(line: 10232, column: 29, scope: !19678)
!19683 = !DILocation(line: 10232, column: 6, scope: !19516)
!19684 = !DILocation(line: 10233, column: 39, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19678, file: !3, line: 10232, column: 56)
!19686 = !DILocation(line: 10233, column: 14, scope: !19685)
!19687 = !DILocation(line: 10233, column: 26, scope: !19685)
!19688 = !DILocation(line: 10234, column: 2, scope: !19685)
!19689 = !DILocation(line: 10240, column: 37, scope: !19516)
!19690 = !DILocation(line: 10240, column: 2, scope: !19516)
!19691 = !DILocation(line: 10240, column: 11, scope: !19516)
!19692 = !DILocation(line: 10240, column: 24, scope: !19516)
!19693 = !DILocation(line: 10241, column: 36, scope: !19516)
!19694 = !DILocation(line: 10241, column: 2, scope: !19516)
!19695 = !DILocation(line: 10241, column: 11, scope: !19516)
!19696 = !DILocation(line: 10241, column: 23, scope: !19516)
!19697 = !DILocation(line: 10251, column: 17, scope: !19698)
!19698 = distinct !DILexicalBlock(scope: !19516, file: !3, line: 10251, column: 6)
!19699 = !DILocation(line: 10251, column: 6, scope: !19698)
!19700 = !DILocation(line: 10251, column: 29, scope: !19698)
!19701 = !DILocation(line: 10251, column: 6, scope: !19516)
!19702 = !DILocation(line: 10252, column: 3, scope: !19703)
!19703 = distinct !DILexicalBlock(scope: !19698, file: !3, line: 10251, column: 35)
!19704 = !DILocation(line: 10252, column: 12, scope: !19703)
!19705 = !DILocation(line: 10252, column: 17, scope: !19703)
!19706 = !DILocation(line: 10252, column: 29, scope: !19703)
!19707 = !DILocation(line: 10253, column: 2, scope: !19703)
!19708 = !DILocation(line: 10255, column: 18, scope: !19709)
!19709 = distinct !DILexicalBlock(scope: !19710, file: !3, line: 10255, column: 7)
!19710 = distinct !DILexicalBlock(scope: !19698, file: !3, line: 10253, column: 9)
!19711 = !DILocation(line: 10255, column: 7, scope: !19709)
!19712 = !DILocation(line: 10255, column: 30, scope: !19709)
!19713 = !DILocation(line: 10255, column: 7, scope: !19710)
!19714 = !DILocation(line: 10256, column: 4, scope: !19715)
!19715 = distinct !DILexicalBlock(scope: !19709, file: !3, line: 10255, column: 36)
!19716 = !DILocation(line: 10256, column: 13, scope: !19715)
!19717 = !DILocation(line: 10256, column: 18, scope: !19715)
!19718 = !DILocation(line: 10256, column: 30, scope: !19715)
!19719 = !DILocation(line: 10259, column: 3, scope: !19715)
!19720 = !DILocation(line: 10259, column: 25, scope: !19721)
!19721 = distinct !DILexicalBlock(scope: !19709, file: !3, line: 10259, column: 14)
!19722 = !DILocation(line: 10259, column: 14, scope: !19721)
!19723 = !DILocation(line: 10259, column: 37, scope: !19721)
!19724 = !DILocation(line: 10259, column: 14, scope: !19709)
!19725 = !DILocation(line: 10260, column: 4, scope: !19726)
!19726 = distinct !DILexicalBlock(scope: !19721, file: !3, line: 10259, column: 43)
!19727 = !DILocation(line: 10260, column: 13, scope: !19726)
!19728 = !DILocation(line: 10260, column: 18, scope: !19726)
!19729 = !DILocation(line: 10260, column: 30, scope: !19726)
!19730 = !DILocation(line: 10263, column: 3, scope: !19726)
!19731 = !DILocation(line: 10263, column: 25, scope: !19732)
!19732 = distinct !DILexicalBlock(scope: !19721, file: !3, line: 10263, column: 14)
!19733 = !DILocation(line: 10263, column: 14, scope: !19732)
!19734 = !DILocation(line: 10263, column: 37, scope: !19732)
!19735 = !DILocation(line: 10263, column: 14, scope: !19721)
!19736 = !DILocation(line: 10264, column: 4, scope: !19737)
!19737 = distinct !DILexicalBlock(scope: !19732, file: !3, line: 10263, column: 43)
!19738 = !DILocation(line: 10264, column: 13, scope: !19737)
!19739 = !DILocation(line: 10264, column: 18, scope: !19737)
!19740 = !DILocation(line: 10264, column: 30, scope: !19737)
!19741 = !DILocation(line: 10266, column: 3, scope: !19737)
!19742 = !DILocation(line: 10271, column: 4, scope: !19743)
!19743 = distinct !DILexicalBlock(scope: !19732, file: !3, line: 10266, column: 10)
!19744 = !DILocation(line: 10271, column: 13, scope: !19743)
!19745 = !DILocation(line: 10271, column: 18, scope: !19743)
!19746 = !DILocation(line: 10271, column: 30, scope: !19743)
!19747 = !DILocation(line: 10272, column: 14, scope: !19743)
!19748 = !DILocation(line: 10276, column: 9, scope: !19516)
!19749 = !DILocation(line: 10276, column: 2, scope: !19516)
!19750 = distinct !DISubprogram(name: "AdvGet38C1600EEPConfig", scope: !3, file: !3, line: 10091, type: !19751, scopeLine: 10093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!19751 = !DISubroutineType(types: !19752)
!19752 = !{!5240, !334, !6636}
!19753 = !DILocalVariable(name: "iop_base", arg: 1, scope: !19750, file: !3, line: 10091, type: !334)
!19754 = !DILocation(line: 10091, column: 50, scope: !19750)
!19755 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !19750, file: !3, line: 10092, type: !6636)
!19756 = !DILocation(line: 10092, column: 33, scope: !19750)
!19757 = !DILocalVariable(name: "wval", scope: !19750, file: !3, line: 10094, type: !5240)
!19758 = !DILocation(line: 10094, column: 9, scope: !19750)
!19759 = !DILocalVariable(name: "chksum", scope: !19750, file: !3, line: 10094, type: !5240)
!19760 = !DILocation(line: 10094, column: 15, scope: !19750)
!19761 = !DILocalVariable(name: "wbuf", scope: !19750, file: !3, line: 10095, type: !5989)
!19762 = !DILocation(line: 10095, column: 10, scope: !19750)
!19763 = !DILocalVariable(name: "eep_addr", scope: !19750, file: !3, line: 10096, type: !245)
!19764 = !DILocation(line: 10096, column: 6, scope: !19750)
!19765 = !DILocalVariable(name: "charfields", scope: !19750, file: !3, line: 10097, type: !5989)
!19766 = !DILocation(line: 10097, column: 10, scope: !19750)
!19767 = !DILocation(line: 10099, column: 13, scope: !19750)
!19768 = !DILocation(line: 10100, column: 19, scope: !19750)
!19769 = !DILocation(line: 10100, column: 9, scope: !19750)
!19770 = !DILocation(line: 10100, column: 7, scope: !19750)
!19771 = !DILocation(line: 10101, column: 9, scope: !19750)
!19772 = !DILocation(line: 10103, column: 16, scope: !19773)
!19773 = distinct !DILexicalBlock(scope: !19750, file: !3, line: 10103, column: 2)
!19774 = !DILocation(line: 10103, column: 7, scope: !19773)
!19775 = !DILocation(line: 10104, column: 7, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19773, file: !3, line: 10103, column: 2)
!19777 = !DILocation(line: 10104, column: 16, scope: !19776)
!19778 = !DILocation(line: 10103, column: 2, scope: !19773)
!19779 = !DILocation(line: 10105, column: 25, scope: !19780)
!19780 = distinct !DILexicalBlock(scope: !19776, file: !3, line: 10104, column: 59)
!19781 = !DILocation(line: 10105, column: 35, scope: !19780)
!19782 = !DILocation(line: 10105, column: 10, scope: !19780)
!19783 = !DILocation(line: 10105, column: 8, scope: !19780)
!19784 = !DILocation(line: 10106, column: 13, scope: !19780)
!19785 = !DILocation(line: 10106, column: 10, scope: !19780)
!19786 = !DILocation(line: 10107, column: 18, scope: !19787)
!19787 = distinct !DILexicalBlock(scope: !19780, file: !3, line: 10107, column: 7)
!19788 = !DILocation(line: 10107, column: 7, scope: !19787)
!19789 = !DILocation(line: 10107, column: 7, scope: !19780)
!19790 = !DILocation(line: 10108, column: 12, scope: !19791)
!19791 = distinct !DILexicalBlock(scope: !19787, file: !3, line: 10107, column: 22)
!19792 = !DILocation(line: 10108, column: 5, scope: !19791)
!19793 = !DILocation(line: 10108, column: 10, scope: !19791)
!19794 = !DILocation(line: 10109, column: 3, scope: !19791)
!19795 = !DILocation(line: 10110, column: 12, scope: !19796)
!19796 = distinct !DILexicalBlock(scope: !19787, file: !3, line: 10109, column: 10)
!19797 = !DILocation(line: 10110, column: 5, scope: !19796)
!19798 = !DILocation(line: 10110, column: 10, scope: !19796)
!19799 = !DILocation(line: 10112, column: 2, scope: !19780)
!19800 = !DILocation(line: 10104, column: 47, scope: !19776)
!19801 = !DILocation(line: 10104, column: 55, scope: !19776)
!19802 = !DILocation(line: 10103, column: 2, scope: !19776)
!19803 = distinct !{!19803, !19778, !19804}
!19804 = !DILocation(line: 10112, column: 2, scope: !19773)
!19805 = !DILocation(line: 10114, column: 25, scope: !19750)
!19806 = !DILocation(line: 10114, column: 35, scope: !19750)
!19807 = !DILocation(line: 10114, column: 10, scope: !19750)
!19808 = !DILocation(line: 10114, column: 3, scope: !19750)
!19809 = !DILocation(line: 10114, column: 8, scope: !19750)
!19810 = !DILocation(line: 10115, column: 6, scope: !19750)
!19811 = !DILocation(line: 10116, column: 12, scope: !19750)
!19812 = !DILocation(line: 10119, column: 16, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19750, file: !3, line: 10119, column: 2)
!19814 = !DILocation(line: 10119, column: 7, scope: !19813)
!19815 = !DILocation(line: 10120, column: 7, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19813, file: !3, line: 10119, column: 2)
!19817 = !DILocation(line: 10120, column: 16, scope: !19816)
!19818 = !DILocation(line: 10119, column: 2, scope: !19813)
!19819 = !DILocation(line: 10121, column: 26, scope: !19820)
!19820 = distinct !DILexicalBlock(scope: !19816, file: !3, line: 10120, column: 61)
!19821 = !DILocation(line: 10121, column: 36, scope: !19820)
!19822 = !DILocation(line: 10121, column: 11, scope: !19820)
!19823 = !DILocation(line: 10121, column: 4, scope: !19820)
!19824 = !DILocation(line: 10121, column: 9, scope: !19820)
!19825 = !DILocation(line: 10122, column: 18, scope: !19826)
!19826 = distinct !DILexicalBlock(scope: !19820, file: !3, line: 10122, column: 7)
!19827 = !DILocation(line: 10122, column: 7, scope: !19826)
!19828 = !DILocation(line: 10122, column: 7, scope: !19820)
!19829 = !DILocation(line: 10123, column: 12, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19826, file: !3, line: 10122, column: 22)
!19831 = !DILocation(line: 10123, column: 5, scope: !19830)
!19832 = !DILocation(line: 10123, column: 10, scope: !19830)
!19833 = !DILocation(line: 10124, column: 3, scope: !19830)
!19834 = !DILocation(line: 10125, column: 2, scope: !19820)
!19835 = !DILocation(line: 10120, column: 49, scope: !19816)
!19836 = !DILocation(line: 10120, column: 57, scope: !19816)
!19837 = !DILocation(line: 10119, column: 2, scope: !19816)
!19838 = distinct !{!19838, !19818, !19839}
!19839 = !DILocation(line: 10125, column: 2, scope: !19813)
!19840 = !DILocation(line: 10126, column: 9, scope: !19750)
!19841 = !DILocation(line: 10126, column: 2, scope: !19750)
!19842 = distinct !DISubprogram(name: "AdvReadEEPWord", scope: !3, file: !3, line: 9791, type: !19843, scopeLine: 9792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!19843 = !DISubroutineType(types: !19844)
!19844 = !{!5240, !334, !245}
!19845 = !DILocalVariable(name: "iop_base", arg: 1, scope: !19842, file: !3, line: 9791, type: !334)
!19846 = !DILocation(line: 9791, column: 42, scope: !19842)
!19847 = !DILocalVariable(name: "eep_word_addr", arg: 2, scope: !19842, file: !3, line: 9791, type: !245)
!19848 = !DILocation(line: 9791, column: 56, scope: !19842)
!19849 = !DILocation(line: 9793, column: 2, scope: !19842)
!19850 = !DILocation(line: 9795, column: 16, scope: !19842)
!19851 = !DILocation(line: 9795, column: 2, scope: !19842)
!19852 = !DILocation(line: 9796, column: 9, scope: !19842)
!19853 = !DILocation(line: 9796, column: 2, scope: !19842)
!19854 = distinct !DISubprogram(name: "AdvSet38C1600EEPConfig", scope: !3, file: !3, line: 9936, type: !19855, scopeLine: 9938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!19855 = !DISubroutineType(types: !19856)
!19856 = !{null, !334, !6636}
!19857 = !DILocalVariable(name: "iop_base", arg: 1, scope: !19854, file: !3, line: 9936, type: !334)
!19858 = !DILocation(line: 9936, column: 48, scope: !19854)
!19859 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !19854, file: !3, line: 9937, type: !6636)
!19860 = !DILocation(line: 9937, column: 31, scope: !19854)
!19861 = !DILocalVariable(name: "wbuf", scope: !19854, file: !3, line: 9939, type: !5989)
!19862 = !DILocation(line: 9939, column: 10, scope: !19854)
!19863 = !DILocalVariable(name: "charfields", scope: !19854, file: !3, line: 9940, type: !5989)
!19864 = !DILocation(line: 9940, column: 10, scope: !19854)
!19865 = !DILocalVariable(name: "addr", scope: !19854, file: !3, line: 9941, type: !5240)
!19866 = !DILocation(line: 9941, column: 9, scope: !19854)
!19867 = !DILocalVariable(name: "chksum", scope: !19854, file: !3, line: 9941, type: !5240)
!19868 = !DILocation(line: 9941, column: 15, scope: !19854)
!19869 = !DILocation(line: 9943, column: 19, scope: !19854)
!19870 = !DILocation(line: 9943, column: 9, scope: !19854)
!19871 = !DILocation(line: 9943, column: 7, scope: !19854)
!19872 = !DILocation(line: 9944, column: 13, scope: !19854)
!19873 = !DILocation(line: 9945, column: 9, scope: !19854)
!19874 = !DILocation(line: 9947, column: 2, scope: !19854)
!19875 = !DILocation(line: 9948, column: 16, scope: !19854)
!19876 = !DILocation(line: 9948, column: 2, scope: !19854)
!19877 = !DILocation(line: 9953, column: 12, scope: !19878)
!19878 = distinct !DILexicalBlock(scope: !19854, file: !3, line: 9953, column: 2)
!19879 = !DILocation(line: 9953, column: 7, scope: !19878)
!19880 = !DILocation(line: 9954, column: 7, scope: !19881)
!19881 = distinct !DILexicalBlock(scope: !19878, file: !3, line: 9953, column: 2)
!19882 = !DILocation(line: 9954, column: 12, scope: !19881)
!19883 = !DILocation(line: 9953, column: 2, scope: !19878)
!19884 = !DILocalVariable(name: "word", scope: !19885, file: !3, line: 9955, type: !5240)
!19885 = distinct !DILexicalBlock(scope: !19881, file: !3, line: 9954, column: 51)
!19886 = !DILocation(line: 9955, column: 10, scope: !19885)
!19887 = !DILocation(line: 9957, column: 18, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19885, file: !3, line: 9957, column: 7)
!19889 = !DILocation(line: 9957, column: 7, scope: !19888)
!19890 = !DILocation(line: 9957, column: 7, scope: !19885)
!19891 = !DILocation(line: 9958, column: 11, scope: !19892)
!19892 = distinct !DILexicalBlock(scope: !19888, file: !3, line: 9957, column: 22)
!19893 = !DILocation(line: 9958, column: 9, scope: !19892)
!19894 = !DILocation(line: 9959, column: 3, scope: !19892)
!19895 = !DILocation(line: 9960, column: 12, scope: !19896)
!19896 = distinct !DILexicalBlock(scope: !19888, file: !3, line: 9959, column: 10)
!19897 = !DILocation(line: 9960, column: 11, scope: !19896)
!19898 = !DILocation(line: 9960, column: 9, scope: !19896)
!19899 = !DILocation(line: 9962, column: 14, scope: !19885)
!19900 = !DILocation(line: 9962, column: 13, scope: !19885)
!19901 = !DILocation(line: 9962, column: 10, scope: !19885)
!19902 = !DILocation(line: 9963, column: 3, scope: !19885)
!19903 = !DILocation(line: 9964, column: 3, scope: !19885)
!19904 = !DILocation(line: 9966, column: 17, scope: !19885)
!19905 = !DILocation(line: 9966, column: 3, scope: !19885)
!19906 = !DILocalVariable(name: "__ms", scope: !19907, file: !3, line: 9967, type: !189)
!19907 = distinct !DILexicalBlock(scope: !19885, file: !3, line: 9967, column: 3)
!19908 = !DILocation(line: 9967, column: 3, scope: !19907)
!19909 = !DILocation(line: 9967, column: 3, scope: !19910)
!19910 = distinct !DILexicalBlock(scope: !19911, file: !3, line: 9967, column: 3)
!19911 = distinct !DILexicalBlock(scope: !19912, file: !3, line: 9967, column: 3)
!19912 = distinct !DILexicalBlock(scope: !19913, file: !3, line: 9967, column: 3)
!19913 = distinct !DILexicalBlock(scope: !19907, file: !3, line: 9967, column: 3)
!19914 = distinct !{!19914, !19908, !19908}
!19915 = !DILocation(line: 9968, column: 2, scope: !19885)
!19916 = !DILocation(line: 9954, column: 39, scope: !19881)
!19917 = !DILocation(line: 9954, column: 47, scope: !19881)
!19918 = !DILocation(line: 9953, column: 2, scope: !19881)
!19919 = distinct !{!19919, !19883, !19920}
!19920 = !DILocation(line: 9968, column: 2, scope: !19878)
!19921 = !DILocation(line: 9973, column: 2, scope: !19854)
!19922 = !DILocation(line: 9974, column: 2, scope: !19854)
!19923 = !DILocation(line: 9975, column: 16, scope: !19854)
!19924 = !DILocation(line: 9975, column: 2, scope: !19854)
!19925 = !DILocation(line: 9976, column: 6, scope: !19854)
!19926 = !DILocation(line: 9977, column: 12, scope: !19854)
!19927 = !DILocation(line: 9982, column: 12, scope: !19928)
!19928 = distinct !DILexicalBlock(scope: !19854, file: !3, line: 9982, column: 2)
!19929 = !DILocation(line: 9982, column: 7, scope: !19928)
!19930 = !DILocation(line: 9983, column: 7, scope: !19931)
!19931 = distinct !DILexicalBlock(scope: !19928, file: !3, line: 9982, column: 2)
!19932 = !DILocation(line: 9983, column: 12, scope: !19931)
!19933 = !DILocation(line: 9982, column: 2, scope: !19928)
!19934 = !DILocalVariable(name: "word", scope: !19935, file: !3, line: 9984, type: !5240)
!19935 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 9983, column: 53)
!19936 = !DILocation(line: 9984, column: 10, scope: !19935)
!19937 = !DILocation(line: 9986, column: 18, scope: !19938)
!19938 = distinct !DILexicalBlock(scope: !19935, file: !3, line: 9986, column: 7)
!19939 = !DILocation(line: 9986, column: 7, scope: !19938)
!19940 = !DILocation(line: 9986, column: 7, scope: !19935)
!19941 = !DILocation(line: 9987, column: 11, scope: !19942)
!19942 = distinct !DILexicalBlock(scope: !19938, file: !3, line: 9986, column: 22)
!19943 = !DILocation(line: 9987, column: 9, scope: !19942)
!19944 = !DILocation(line: 9988, column: 3, scope: !19942)
!19945 = !DILocation(line: 9989, column: 12, scope: !19946)
!19946 = distinct !DILexicalBlock(scope: !19938, file: !3, line: 9988, column: 10)
!19947 = !DILocation(line: 9989, column: 11, scope: !19946)
!19948 = !DILocation(line: 9989, column: 9, scope: !19946)
!19949 = !DILocation(line: 9991, column: 3, scope: !19935)
!19950 = !DILocation(line: 9992, column: 3, scope: !19935)
!19951 = !DILocation(line: 9994, column: 17, scope: !19935)
!19952 = !DILocation(line: 9994, column: 3, scope: !19935)
!19953 = !DILocation(line: 9995, column: 2, scope: !19935)
!19954 = !DILocation(line: 9983, column: 41, scope: !19931)
!19955 = !DILocation(line: 9983, column: 49, scope: !19931)
!19956 = !DILocation(line: 9982, column: 2, scope: !19931)
!19957 = distinct !{!19957, !19933, !19958}
!19958 = !DILocation(line: 9995, column: 2, scope: !19928)
!19959 = !DILocation(line: 9996, column: 2, scope: !19854)
!19960 = !DILocation(line: 9997, column: 16, scope: !19854)
!19961 = !DILocation(line: 9997, column: 2, scope: !19854)
!19962 = !DILocation(line: 9998, column: 1, scope: !19854)
!19963 = distinct !DISubprogram(name: "AdvWaitEEPCmd", scope: !3, file: !3, line: 9772, type: !456, scopeLine: 9773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!19964 = !DILocalVariable(name: "iop_base", arg: 1, scope: !19963, file: !3, line: 9772, type: !334)
!19965 = !DILocation(line: 9772, column: 39, scope: !19963)
!19966 = !DILocalVariable(name: "eep_delay_ms", scope: !19963, file: !3, line: 9774, type: !245)
!19967 = !DILocation(line: 9774, column: 6, scope: !19963)
!19968 = !DILocation(line: 9776, column: 20, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19963, file: !3, line: 9776, column: 2)
!19970 = !DILocation(line: 9776, column: 7, scope: !19969)
!19971 = !DILocation(line: 9776, column: 25, scope: !19972)
!19972 = distinct !DILexicalBlock(scope: !19969, file: !3, line: 9776, column: 2)
!19973 = !DILocation(line: 9776, column: 38, scope: !19972)
!19974 = !DILocation(line: 9776, column: 2, scope: !19969)
!19975 = !DILocation(line: 9777, column: 7, scope: !19976)
!19976 = distinct !DILexicalBlock(scope: !19977, file: !3, line: 9777, column: 7)
!19977 = distinct !DILexicalBlock(scope: !19972, file: !3, line: 9776, column: 74)
!19978 = !DILocation(line: 9777, column: 50, scope: !19976)
!19979 = !DILocation(line: 9777, column: 7, scope: !19977)
!19980 = !DILocation(line: 9779, column: 4, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !19976, file: !3, line: 9778, column: 25)
!19982 = !DILocation(line: 9781, column: 3, scope: !19983)
!19983 = distinct !DILexicalBlock(scope: !19984, file: !3, line: 9781, column: 3)
!19984 = distinct !DILexicalBlock(scope: !19985, file: !3, line: 9781, column: 3)
!19985 = distinct !DILexicalBlock(scope: !19986, file: !3, line: 9781, column: 3)
!19986 = distinct !DILexicalBlock(scope: !19977, file: !3, line: 9781, column: 3)
!19987 = !DILocation(line: 9782, column: 2, scope: !19977)
!19988 = !DILocation(line: 9776, column: 70, scope: !19972)
!19989 = !DILocation(line: 9776, column: 2, scope: !19972)
!19990 = distinct !{!19990, !19974, !19991}
!19991 = !DILocation(line: 9782, column: 2, scope: !19969)
!19992 = !DILocation(line: 9783, column: 7, scope: !19993)
!19993 = distinct !DILexicalBlock(scope: !19963, file: !3, line: 9783, column: 6)
!19994 = !DILocation(line: 9783, column: 50, scope: !19993)
!19995 = !DILocation(line: 9783, column: 70, scope: !19993)
!19996 = !DILocation(line: 9783, column: 6, scope: !19963)
!19997 = !DILocation(line: 9785, column: 3, scope: !19993)
!19998 = !DILocation(line: 9785, column: 3, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !19993, file: !3, line: 9785, column: 3)
!20000 = !DILocation(line: 9785, column: 3, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19999, file: !3, line: 9785, column: 3)
!20002 = !DILocation(line: 9785, column: 3, scope: !20003)
!20003 = distinct !DILexicalBlock(scope: !19999, file: !3, line: 9785, column: 3)
!20004 = !{i32 -2140582474, i32 -2140582445, i32 -2140582399, i32 -2140582341, i32 -2140582287, i32 -2140582233, i32 -2140582178, i32 -2140582147}
!20005 = !DILocation(line: 9785, column: 3, scope: !20006)
!20006 = distinct !DILexicalBlock(scope: !20007, file: !3, line: 9785, column: 3)
!20007 = distinct !DILexicalBlock(scope: !19999, file: !3, line: 9785, column: 3)
!20008 = !{i32 -2140581700, i32 -2140581693, i32 -2140581639, i32 -2140581608, i32 -2140581578}
!20009 = !DILocation(line: 9785, column: 3, scope: !20007)
!20010 = !DILocation(line: 9786, column: 1, scope: !19963)
!20011 = distinct !DISubprogram(name: "AdvGet38C0800EEPConfig", scope: !3, file: !3, line: 10048, type: !20012, scopeLine: 10050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20012 = !DISubroutineType(types: !20013)
!20013 = !{!5240, !334, !6633}
!20014 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20011, file: !3, line: 10048, type: !334)
!20015 = !DILocation(line: 10048, column: 50, scope: !20011)
!20016 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !20011, file: !3, line: 10049, type: !6633)
!20017 = !DILocation(line: 10049, column: 33, scope: !20011)
!20018 = !DILocalVariable(name: "wval", scope: !20011, file: !3, line: 10051, type: !5240)
!20019 = !DILocation(line: 10051, column: 9, scope: !20011)
!20020 = !DILocalVariable(name: "chksum", scope: !20011, file: !3, line: 10051, type: !5240)
!20021 = !DILocation(line: 10051, column: 15, scope: !20011)
!20022 = !DILocalVariable(name: "wbuf", scope: !20011, file: !3, line: 10052, type: !5989)
!20023 = !DILocation(line: 10052, column: 10, scope: !20011)
!20024 = !DILocalVariable(name: "eep_addr", scope: !20011, file: !3, line: 10053, type: !245)
!20025 = !DILocation(line: 10053, column: 6, scope: !20011)
!20026 = !DILocalVariable(name: "charfields", scope: !20011, file: !3, line: 10054, type: !5989)
!20027 = !DILocation(line: 10054, column: 10, scope: !20011)
!20028 = !DILocation(line: 10056, column: 13, scope: !20011)
!20029 = !DILocation(line: 10057, column: 19, scope: !20011)
!20030 = !DILocation(line: 10057, column: 9, scope: !20011)
!20031 = !DILocation(line: 10057, column: 7, scope: !20011)
!20032 = !DILocation(line: 10058, column: 9, scope: !20011)
!20033 = !DILocation(line: 10060, column: 16, scope: !20034)
!20034 = distinct !DILexicalBlock(scope: !20011, file: !3, line: 10060, column: 2)
!20035 = !DILocation(line: 10060, column: 7, scope: !20034)
!20036 = !DILocation(line: 10061, column: 7, scope: !20037)
!20037 = distinct !DILexicalBlock(scope: !20034, file: !3, line: 10060, column: 2)
!20038 = !DILocation(line: 10061, column: 16, scope: !20037)
!20039 = !DILocation(line: 10060, column: 2, scope: !20034)
!20040 = !DILocation(line: 10062, column: 25, scope: !20041)
!20041 = distinct !DILexicalBlock(scope: !20037, file: !3, line: 10061, column: 59)
!20042 = !DILocation(line: 10062, column: 35, scope: !20041)
!20043 = !DILocation(line: 10062, column: 10, scope: !20041)
!20044 = !DILocation(line: 10062, column: 8, scope: !20041)
!20045 = !DILocation(line: 10063, column: 13, scope: !20041)
!20046 = !DILocation(line: 10063, column: 10, scope: !20041)
!20047 = !DILocation(line: 10064, column: 18, scope: !20048)
!20048 = distinct !DILexicalBlock(scope: !20041, file: !3, line: 10064, column: 7)
!20049 = !DILocation(line: 10064, column: 7, scope: !20048)
!20050 = !DILocation(line: 10064, column: 7, scope: !20041)
!20051 = !DILocation(line: 10065, column: 12, scope: !20052)
!20052 = distinct !DILexicalBlock(scope: !20048, file: !3, line: 10064, column: 22)
!20053 = !DILocation(line: 10065, column: 5, scope: !20052)
!20054 = !DILocation(line: 10065, column: 10, scope: !20052)
!20055 = !DILocation(line: 10066, column: 3, scope: !20052)
!20056 = !DILocation(line: 10067, column: 12, scope: !20057)
!20057 = distinct !DILexicalBlock(scope: !20048, file: !3, line: 10066, column: 10)
!20058 = !DILocation(line: 10067, column: 5, scope: !20057)
!20059 = !DILocation(line: 10067, column: 10, scope: !20057)
!20060 = !DILocation(line: 10069, column: 2, scope: !20041)
!20061 = !DILocation(line: 10061, column: 47, scope: !20037)
!20062 = !DILocation(line: 10061, column: 55, scope: !20037)
!20063 = !DILocation(line: 10060, column: 2, scope: !20037)
!20064 = distinct !{!20064, !20039, !20065}
!20065 = !DILocation(line: 10069, column: 2, scope: !20034)
!20066 = !DILocation(line: 10071, column: 25, scope: !20011)
!20067 = !DILocation(line: 10071, column: 35, scope: !20011)
!20068 = !DILocation(line: 10071, column: 10, scope: !20011)
!20069 = !DILocation(line: 10071, column: 3, scope: !20011)
!20070 = !DILocation(line: 10071, column: 8, scope: !20011)
!20071 = !DILocation(line: 10072, column: 6, scope: !20011)
!20072 = !DILocation(line: 10073, column: 12, scope: !20011)
!20073 = !DILocation(line: 10076, column: 16, scope: !20074)
!20074 = distinct !DILexicalBlock(scope: !20011, file: !3, line: 10076, column: 2)
!20075 = !DILocation(line: 10076, column: 7, scope: !20074)
!20076 = !DILocation(line: 10077, column: 7, scope: !20077)
!20077 = distinct !DILexicalBlock(scope: !20074, file: !3, line: 10076, column: 2)
!20078 = !DILocation(line: 10077, column: 16, scope: !20077)
!20079 = !DILocation(line: 10076, column: 2, scope: !20074)
!20080 = !DILocation(line: 10078, column: 26, scope: !20081)
!20081 = distinct !DILexicalBlock(scope: !20077, file: !3, line: 10077, column: 61)
!20082 = !DILocation(line: 10078, column: 36, scope: !20081)
!20083 = !DILocation(line: 10078, column: 11, scope: !20081)
!20084 = !DILocation(line: 10078, column: 4, scope: !20081)
!20085 = !DILocation(line: 10078, column: 9, scope: !20081)
!20086 = !DILocation(line: 10079, column: 18, scope: !20087)
!20087 = distinct !DILexicalBlock(scope: !20081, file: !3, line: 10079, column: 7)
!20088 = !DILocation(line: 10079, column: 7, scope: !20087)
!20089 = !DILocation(line: 10079, column: 7, scope: !20081)
!20090 = !DILocation(line: 10080, column: 12, scope: !20091)
!20091 = distinct !DILexicalBlock(scope: !20087, file: !3, line: 10079, column: 22)
!20092 = !DILocation(line: 10080, column: 5, scope: !20091)
!20093 = !DILocation(line: 10080, column: 10, scope: !20091)
!20094 = !DILocation(line: 10081, column: 3, scope: !20091)
!20095 = !DILocation(line: 10082, column: 2, scope: !20081)
!20096 = !DILocation(line: 10077, column: 49, scope: !20077)
!20097 = !DILocation(line: 10077, column: 57, scope: !20077)
!20098 = !DILocation(line: 10076, column: 2, scope: !20077)
!20099 = distinct !{!20099, !20079, !20100}
!20100 = !DILocation(line: 10082, column: 2, scope: !20074)
!20101 = !DILocation(line: 10083, column: 9, scope: !20011)
!20102 = !DILocation(line: 10083, column: 2, scope: !20011)
!20103 = distinct !DISubprogram(name: "AdvSet38C0800EEPConfig", scope: !3, file: !3, line: 9869, type: !20104, scopeLine: 9871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20104 = !DISubroutineType(types: !20105)
!20105 = !{null, !334, !6633}
!20106 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20103, file: !3, line: 9869, type: !334)
!20107 = !DILocation(line: 9869, column: 48, scope: !20103)
!20108 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !20103, file: !3, line: 9870, type: !6633)
!20109 = !DILocation(line: 9870, column: 31, scope: !20103)
!20110 = !DILocalVariable(name: "wbuf", scope: !20103, file: !3, line: 9872, type: !5989)
!20111 = !DILocation(line: 9872, column: 10, scope: !20103)
!20112 = !DILocalVariable(name: "charfields", scope: !20103, file: !3, line: 9873, type: !5989)
!20113 = !DILocation(line: 9873, column: 10, scope: !20103)
!20114 = !DILocalVariable(name: "addr", scope: !20103, file: !3, line: 9874, type: !5240)
!20115 = !DILocation(line: 9874, column: 9, scope: !20103)
!20116 = !DILocalVariable(name: "chksum", scope: !20103, file: !3, line: 9874, type: !5240)
!20117 = !DILocation(line: 9874, column: 15, scope: !20103)
!20118 = !DILocation(line: 9876, column: 19, scope: !20103)
!20119 = !DILocation(line: 9876, column: 9, scope: !20103)
!20120 = !DILocation(line: 9876, column: 7, scope: !20103)
!20121 = !DILocation(line: 9877, column: 13, scope: !20103)
!20122 = !DILocation(line: 9878, column: 9, scope: !20103)
!20123 = !DILocation(line: 9880, column: 2, scope: !20103)
!20124 = !DILocation(line: 9881, column: 16, scope: !20103)
!20125 = !DILocation(line: 9881, column: 2, scope: !20103)
!20126 = !DILocation(line: 9886, column: 12, scope: !20127)
!20127 = distinct !DILexicalBlock(scope: !20103, file: !3, line: 9886, column: 2)
!20128 = !DILocation(line: 9886, column: 7, scope: !20127)
!20129 = !DILocation(line: 9887, column: 7, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !20127, file: !3, line: 9886, column: 2)
!20131 = !DILocation(line: 9887, column: 12, scope: !20130)
!20132 = !DILocation(line: 9886, column: 2, scope: !20127)
!20133 = !DILocalVariable(name: "word", scope: !20134, file: !3, line: 9888, type: !5240)
!20134 = distinct !DILexicalBlock(scope: !20130, file: !3, line: 9887, column: 51)
!20135 = !DILocation(line: 9888, column: 10, scope: !20134)
!20136 = !DILocation(line: 9890, column: 18, scope: !20137)
!20137 = distinct !DILexicalBlock(scope: !20134, file: !3, line: 9890, column: 7)
!20138 = !DILocation(line: 9890, column: 7, scope: !20137)
!20139 = !DILocation(line: 9890, column: 7, scope: !20134)
!20140 = !DILocation(line: 9891, column: 11, scope: !20141)
!20141 = distinct !DILexicalBlock(scope: !20137, file: !3, line: 9890, column: 22)
!20142 = !DILocation(line: 9891, column: 9, scope: !20141)
!20143 = !DILocation(line: 9892, column: 3, scope: !20141)
!20144 = !DILocation(line: 9893, column: 12, scope: !20145)
!20145 = distinct !DILexicalBlock(scope: !20137, file: !3, line: 9892, column: 10)
!20146 = !DILocation(line: 9893, column: 11, scope: !20145)
!20147 = !DILocation(line: 9893, column: 9, scope: !20145)
!20148 = !DILocation(line: 9895, column: 14, scope: !20134)
!20149 = !DILocation(line: 9895, column: 13, scope: !20134)
!20150 = !DILocation(line: 9895, column: 10, scope: !20134)
!20151 = !DILocation(line: 9896, column: 3, scope: !20134)
!20152 = !DILocation(line: 9897, column: 3, scope: !20134)
!20153 = !DILocation(line: 9899, column: 17, scope: !20134)
!20154 = !DILocation(line: 9899, column: 3, scope: !20134)
!20155 = !DILocalVariable(name: "__ms", scope: !20156, file: !3, line: 9900, type: !189)
!20156 = distinct !DILexicalBlock(scope: !20134, file: !3, line: 9900, column: 3)
!20157 = !DILocation(line: 9900, column: 3, scope: !20156)
!20158 = !DILocation(line: 9900, column: 3, scope: !20159)
!20159 = distinct !DILexicalBlock(scope: !20160, file: !3, line: 9900, column: 3)
!20160 = distinct !DILexicalBlock(scope: !20161, file: !3, line: 9900, column: 3)
!20161 = distinct !DILexicalBlock(scope: !20162, file: !3, line: 9900, column: 3)
!20162 = distinct !DILexicalBlock(scope: !20156, file: !3, line: 9900, column: 3)
!20163 = distinct !{!20163, !20157, !20157}
!20164 = !DILocation(line: 9901, column: 2, scope: !20134)
!20165 = !DILocation(line: 9887, column: 39, scope: !20130)
!20166 = !DILocation(line: 9887, column: 47, scope: !20130)
!20167 = !DILocation(line: 9886, column: 2, scope: !20130)
!20168 = distinct !{!20168, !20132, !20169}
!20169 = !DILocation(line: 9901, column: 2, scope: !20127)
!20170 = !DILocation(line: 9906, column: 2, scope: !20103)
!20171 = !DILocation(line: 9907, column: 2, scope: !20103)
!20172 = !DILocation(line: 9908, column: 16, scope: !20103)
!20173 = !DILocation(line: 9908, column: 2, scope: !20103)
!20174 = !DILocation(line: 9909, column: 6, scope: !20103)
!20175 = !DILocation(line: 9910, column: 12, scope: !20103)
!20176 = !DILocation(line: 9915, column: 12, scope: !20177)
!20177 = distinct !DILexicalBlock(scope: !20103, file: !3, line: 9915, column: 2)
!20178 = !DILocation(line: 9915, column: 7, scope: !20177)
!20179 = !DILocation(line: 9916, column: 7, scope: !20180)
!20180 = distinct !DILexicalBlock(scope: !20177, file: !3, line: 9915, column: 2)
!20181 = !DILocation(line: 9916, column: 12, scope: !20180)
!20182 = !DILocation(line: 9915, column: 2, scope: !20177)
!20183 = !DILocalVariable(name: "word", scope: !20184, file: !3, line: 9917, type: !5240)
!20184 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 9916, column: 53)
!20185 = !DILocation(line: 9917, column: 10, scope: !20184)
!20186 = !DILocation(line: 9919, column: 18, scope: !20187)
!20187 = distinct !DILexicalBlock(scope: !20184, file: !3, line: 9919, column: 7)
!20188 = !DILocation(line: 9919, column: 7, scope: !20187)
!20189 = !DILocation(line: 9919, column: 7, scope: !20184)
!20190 = !DILocation(line: 9920, column: 11, scope: !20191)
!20191 = distinct !DILexicalBlock(scope: !20187, file: !3, line: 9919, column: 22)
!20192 = !DILocation(line: 9920, column: 9, scope: !20191)
!20193 = !DILocation(line: 9921, column: 3, scope: !20191)
!20194 = !DILocation(line: 9922, column: 12, scope: !20195)
!20195 = distinct !DILexicalBlock(scope: !20187, file: !3, line: 9921, column: 10)
!20196 = !DILocation(line: 9922, column: 11, scope: !20195)
!20197 = !DILocation(line: 9922, column: 9, scope: !20195)
!20198 = !DILocation(line: 9924, column: 3, scope: !20184)
!20199 = !DILocation(line: 9925, column: 3, scope: !20184)
!20200 = !DILocation(line: 9927, column: 17, scope: !20184)
!20201 = !DILocation(line: 9927, column: 3, scope: !20184)
!20202 = !DILocation(line: 9928, column: 2, scope: !20184)
!20203 = !DILocation(line: 9916, column: 41, scope: !20180)
!20204 = !DILocation(line: 9916, column: 49, scope: !20180)
!20205 = !DILocation(line: 9915, column: 2, scope: !20180)
!20206 = distinct !{!20206, !20182, !20207}
!20207 = !DILocation(line: 9928, column: 2, scope: !20177)
!20208 = !DILocation(line: 9929, column: 2, scope: !20103)
!20209 = !DILocation(line: 9930, column: 16, scope: !20103)
!20210 = !DILocation(line: 9930, column: 2, scope: !20103)
!20211 = !DILocation(line: 9931, column: 1, scope: !20103)
!20212 = distinct !DISubprogram(name: "AdvGet3550EEPConfig", scope: !3, file: !3, line: 10005, type: !20213, scopeLine: 10007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20213 = !DISubroutineType(types: !20214)
!20214 = !{!5240, !334, !6630}
!20215 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20212, file: !3, line: 10005, type: !334)
!20216 = !DILocation(line: 10005, column: 47, scope: !20212)
!20217 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !20212, file: !3, line: 10006, type: !6630)
!20218 = !DILocation(line: 10006, column: 27, scope: !20212)
!20219 = !DILocalVariable(name: "wval", scope: !20212, file: !3, line: 10008, type: !5240)
!20220 = !DILocation(line: 10008, column: 9, scope: !20212)
!20221 = !DILocalVariable(name: "chksum", scope: !20212, file: !3, line: 10008, type: !5240)
!20222 = !DILocation(line: 10008, column: 15, scope: !20212)
!20223 = !DILocalVariable(name: "wbuf", scope: !20212, file: !3, line: 10009, type: !5989)
!20224 = !DILocation(line: 10009, column: 10, scope: !20212)
!20225 = !DILocalVariable(name: "eep_addr", scope: !20212, file: !3, line: 10010, type: !245)
!20226 = !DILocation(line: 10010, column: 6, scope: !20212)
!20227 = !DILocalVariable(name: "charfields", scope: !20212, file: !3, line: 10011, type: !5989)
!20228 = !DILocation(line: 10011, column: 10, scope: !20212)
!20229 = !DILocation(line: 10013, column: 13, scope: !20212)
!20230 = !DILocation(line: 10014, column: 19, scope: !20212)
!20231 = !DILocation(line: 10014, column: 9, scope: !20212)
!20232 = !DILocation(line: 10014, column: 7, scope: !20212)
!20233 = !DILocation(line: 10015, column: 9, scope: !20212)
!20234 = !DILocation(line: 10017, column: 16, scope: !20235)
!20235 = distinct !DILexicalBlock(scope: !20212, file: !3, line: 10017, column: 2)
!20236 = !DILocation(line: 10017, column: 7, scope: !20235)
!20237 = !DILocation(line: 10018, column: 7, scope: !20238)
!20238 = distinct !DILexicalBlock(scope: !20235, file: !3, line: 10017, column: 2)
!20239 = !DILocation(line: 10018, column: 16, scope: !20238)
!20240 = !DILocation(line: 10017, column: 2, scope: !20235)
!20241 = !DILocation(line: 10019, column: 25, scope: !20242)
!20242 = distinct !DILexicalBlock(scope: !20238, file: !3, line: 10018, column: 59)
!20243 = !DILocation(line: 10019, column: 35, scope: !20242)
!20244 = !DILocation(line: 10019, column: 10, scope: !20242)
!20245 = !DILocation(line: 10019, column: 8, scope: !20242)
!20246 = !DILocation(line: 10020, column: 13, scope: !20242)
!20247 = !DILocation(line: 10020, column: 10, scope: !20242)
!20248 = !DILocation(line: 10021, column: 18, scope: !20249)
!20249 = distinct !DILexicalBlock(scope: !20242, file: !3, line: 10021, column: 7)
!20250 = !DILocation(line: 10021, column: 7, scope: !20249)
!20251 = !DILocation(line: 10021, column: 7, scope: !20242)
!20252 = !DILocation(line: 10022, column: 12, scope: !20253)
!20253 = distinct !DILexicalBlock(scope: !20249, file: !3, line: 10021, column: 22)
!20254 = !DILocation(line: 10022, column: 5, scope: !20253)
!20255 = !DILocation(line: 10022, column: 10, scope: !20253)
!20256 = !DILocation(line: 10023, column: 3, scope: !20253)
!20257 = !DILocation(line: 10024, column: 12, scope: !20258)
!20258 = distinct !DILexicalBlock(scope: !20249, file: !3, line: 10023, column: 10)
!20259 = !DILocation(line: 10024, column: 5, scope: !20258)
!20260 = !DILocation(line: 10024, column: 10, scope: !20258)
!20261 = !DILocation(line: 10026, column: 2, scope: !20242)
!20262 = !DILocation(line: 10018, column: 47, scope: !20238)
!20263 = !DILocation(line: 10018, column: 55, scope: !20238)
!20264 = !DILocation(line: 10017, column: 2, scope: !20238)
!20265 = distinct !{!20265, !20240, !20266}
!20266 = !DILocation(line: 10026, column: 2, scope: !20235)
!20267 = !DILocation(line: 10028, column: 25, scope: !20212)
!20268 = !DILocation(line: 10028, column: 35, scope: !20212)
!20269 = !DILocation(line: 10028, column: 10, scope: !20212)
!20270 = !DILocation(line: 10028, column: 3, scope: !20212)
!20271 = !DILocation(line: 10028, column: 8, scope: !20212)
!20272 = !DILocation(line: 10029, column: 6, scope: !20212)
!20273 = !DILocation(line: 10030, column: 12, scope: !20212)
!20274 = !DILocation(line: 10033, column: 16, scope: !20275)
!20275 = distinct !DILexicalBlock(scope: !20212, file: !3, line: 10033, column: 2)
!20276 = !DILocation(line: 10033, column: 7, scope: !20275)
!20277 = !DILocation(line: 10034, column: 7, scope: !20278)
!20278 = distinct !DILexicalBlock(scope: !20275, file: !3, line: 10033, column: 2)
!20279 = !DILocation(line: 10034, column: 16, scope: !20278)
!20280 = !DILocation(line: 10033, column: 2, scope: !20275)
!20281 = !DILocation(line: 10035, column: 26, scope: !20282)
!20282 = distinct !DILexicalBlock(scope: !20278, file: !3, line: 10034, column: 61)
!20283 = !DILocation(line: 10035, column: 36, scope: !20282)
!20284 = !DILocation(line: 10035, column: 11, scope: !20282)
!20285 = !DILocation(line: 10035, column: 4, scope: !20282)
!20286 = !DILocation(line: 10035, column: 9, scope: !20282)
!20287 = !DILocation(line: 10036, column: 18, scope: !20288)
!20288 = distinct !DILexicalBlock(scope: !20282, file: !3, line: 10036, column: 7)
!20289 = !DILocation(line: 10036, column: 7, scope: !20288)
!20290 = !DILocation(line: 10036, column: 7, scope: !20282)
!20291 = !DILocation(line: 10037, column: 12, scope: !20292)
!20292 = distinct !DILexicalBlock(scope: !20288, file: !3, line: 10036, column: 22)
!20293 = !DILocation(line: 10037, column: 5, scope: !20292)
!20294 = !DILocation(line: 10037, column: 10, scope: !20292)
!20295 = !DILocation(line: 10038, column: 3, scope: !20292)
!20296 = !DILocation(line: 10039, column: 2, scope: !20282)
!20297 = !DILocation(line: 10034, column: 49, scope: !20278)
!20298 = !DILocation(line: 10034, column: 57, scope: !20278)
!20299 = !DILocation(line: 10033, column: 2, scope: !20278)
!20300 = distinct !{!20300, !20280, !20301}
!20301 = !DILocation(line: 10039, column: 2, scope: !20275)
!20302 = !DILocation(line: 10040, column: 9, scope: !20212)
!20303 = !DILocation(line: 10040, column: 2, scope: !20212)
!20304 = distinct !DISubprogram(name: "AdvSet3550EEPConfig", scope: !3, file: !3, line: 9802, type: !20305, scopeLine: 9804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20305 = !DISubroutineType(types: !20306)
!20306 = !{null, !334, !6630}
!20307 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20304, file: !3, line: 9802, type: !334)
!20308 = !DILocation(line: 9802, column: 45, scope: !20304)
!20309 = !DILocalVariable(name: "cfg_buf", arg: 2, scope: !20304, file: !3, line: 9803, type: !6630)
!20310 = !DILocation(line: 9803, column: 25, scope: !20304)
!20311 = !DILocalVariable(name: "wbuf", scope: !20304, file: !3, line: 9805, type: !5989)
!20312 = !DILocation(line: 9805, column: 10, scope: !20304)
!20313 = !DILocalVariable(name: "addr", scope: !20304, file: !3, line: 9806, type: !5240)
!20314 = !DILocation(line: 9806, column: 9, scope: !20304)
!20315 = !DILocalVariable(name: "chksum", scope: !20304, file: !3, line: 9806, type: !5240)
!20316 = !DILocation(line: 9806, column: 15, scope: !20304)
!20317 = !DILocalVariable(name: "charfields", scope: !20304, file: !3, line: 9807, type: !5989)
!20318 = !DILocation(line: 9807, column: 10, scope: !20304)
!20319 = !DILocation(line: 9809, column: 19, scope: !20304)
!20320 = !DILocation(line: 9809, column: 9, scope: !20304)
!20321 = !DILocation(line: 9809, column: 7, scope: !20304)
!20322 = !DILocation(line: 9810, column: 13, scope: !20304)
!20323 = !DILocation(line: 9811, column: 9, scope: !20304)
!20324 = !DILocation(line: 9813, column: 2, scope: !20304)
!20325 = !DILocation(line: 9814, column: 16, scope: !20304)
!20326 = !DILocation(line: 9814, column: 2, scope: !20304)
!20327 = !DILocation(line: 9819, column: 12, scope: !20328)
!20328 = distinct !DILexicalBlock(scope: !20304, file: !3, line: 9819, column: 2)
!20329 = !DILocation(line: 9819, column: 7, scope: !20328)
!20330 = !DILocation(line: 9820, column: 7, scope: !20331)
!20331 = distinct !DILexicalBlock(scope: !20328, file: !3, line: 9819, column: 2)
!20332 = !DILocation(line: 9820, column: 12, scope: !20331)
!20333 = !DILocation(line: 9819, column: 2, scope: !20328)
!20334 = !DILocalVariable(name: "word", scope: !20335, file: !3, line: 9821, type: !5240)
!20335 = distinct !DILexicalBlock(scope: !20331, file: !3, line: 9820, column: 51)
!20336 = !DILocation(line: 9821, column: 10, scope: !20335)
!20337 = !DILocation(line: 9823, column: 18, scope: !20338)
!20338 = distinct !DILexicalBlock(scope: !20335, file: !3, line: 9823, column: 7)
!20339 = !DILocation(line: 9823, column: 7, scope: !20338)
!20340 = !DILocation(line: 9823, column: 7, scope: !20335)
!20341 = !DILocation(line: 9824, column: 11, scope: !20342)
!20342 = distinct !DILexicalBlock(scope: !20338, file: !3, line: 9823, column: 22)
!20343 = !DILocation(line: 9824, column: 9, scope: !20342)
!20344 = !DILocation(line: 9825, column: 3, scope: !20342)
!20345 = !DILocation(line: 9826, column: 12, scope: !20346)
!20346 = distinct !DILexicalBlock(scope: !20338, file: !3, line: 9825, column: 10)
!20347 = !DILocation(line: 9826, column: 11, scope: !20346)
!20348 = !DILocation(line: 9826, column: 9, scope: !20346)
!20349 = !DILocation(line: 9828, column: 14, scope: !20335)
!20350 = !DILocation(line: 9828, column: 13, scope: !20335)
!20351 = !DILocation(line: 9828, column: 10, scope: !20335)
!20352 = !DILocation(line: 9829, column: 3, scope: !20335)
!20353 = !DILocation(line: 9830, column: 3, scope: !20335)
!20354 = !DILocation(line: 9832, column: 17, scope: !20335)
!20355 = !DILocation(line: 9832, column: 3, scope: !20335)
!20356 = !DILocalVariable(name: "__ms", scope: !20357, file: !3, line: 9833, type: !189)
!20357 = distinct !DILexicalBlock(scope: !20335, file: !3, line: 9833, column: 3)
!20358 = !DILocation(line: 9833, column: 3, scope: !20357)
!20359 = !DILocation(line: 9833, column: 3, scope: !20360)
!20360 = distinct !DILexicalBlock(scope: !20361, file: !3, line: 9833, column: 3)
!20361 = distinct !DILexicalBlock(scope: !20362, file: !3, line: 9833, column: 3)
!20362 = distinct !DILexicalBlock(scope: !20363, file: !3, line: 9833, column: 3)
!20363 = distinct !DILexicalBlock(scope: !20357, file: !3, line: 9833, column: 3)
!20364 = distinct !{!20364, !20358, !20358}
!20365 = !DILocation(line: 9834, column: 2, scope: !20335)
!20366 = !DILocation(line: 9820, column: 39, scope: !20331)
!20367 = !DILocation(line: 9820, column: 47, scope: !20331)
!20368 = !DILocation(line: 9819, column: 2, scope: !20331)
!20369 = distinct !{!20369, !20333, !20370}
!20370 = !DILocation(line: 9834, column: 2, scope: !20328)
!20371 = !DILocation(line: 9839, column: 2, scope: !20304)
!20372 = !DILocation(line: 9840, column: 2, scope: !20304)
!20373 = !DILocation(line: 9841, column: 16, scope: !20304)
!20374 = !DILocation(line: 9841, column: 2, scope: !20304)
!20375 = !DILocation(line: 9842, column: 6, scope: !20304)
!20376 = !DILocation(line: 9843, column: 12, scope: !20304)
!20377 = !DILocation(line: 9848, column: 12, scope: !20378)
!20378 = distinct !DILexicalBlock(scope: !20304, file: !3, line: 9848, column: 2)
!20379 = !DILocation(line: 9848, column: 7, scope: !20378)
!20380 = !DILocation(line: 9849, column: 7, scope: !20381)
!20381 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 9848, column: 2)
!20382 = !DILocation(line: 9849, column: 12, scope: !20381)
!20383 = !DILocation(line: 9848, column: 2, scope: !20378)
!20384 = !DILocalVariable(name: "word", scope: !20385, file: !3, line: 9850, type: !5240)
!20385 = distinct !DILexicalBlock(scope: !20381, file: !3, line: 9849, column: 53)
!20386 = !DILocation(line: 9850, column: 10, scope: !20385)
!20387 = !DILocation(line: 9852, column: 18, scope: !20388)
!20388 = distinct !DILexicalBlock(scope: !20385, file: !3, line: 9852, column: 7)
!20389 = !DILocation(line: 9852, column: 7, scope: !20388)
!20390 = !DILocation(line: 9852, column: 7, scope: !20385)
!20391 = !DILocation(line: 9853, column: 11, scope: !20392)
!20392 = distinct !DILexicalBlock(scope: !20388, file: !3, line: 9852, column: 22)
!20393 = !DILocation(line: 9853, column: 9, scope: !20392)
!20394 = !DILocation(line: 9854, column: 3, scope: !20392)
!20395 = !DILocation(line: 9855, column: 12, scope: !20396)
!20396 = distinct !DILexicalBlock(scope: !20388, file: !3, line: 9854, column: 10)
!20397 = !DILocation(line: 9855, column: 11, scope: !20396)
!20398 = !DILocation(line: 9855, column: 9, scope: !20396)
!20399 = !DILocation(line: 9857, column: 3, scope: !20385)
!20400 = !DILocation(line: 9858, column: 3, scope: !20385)
!20401 = !DILocation(line: 9860, column: 17, scope: !20385)
!20402 = !DILocation(line: 9860, column: 3, scope: !20385)
!20403 = !DILocation(line: 9861, column: 2, scope: !20385)
!20404 = !DILocation(line: 9849, column: 41, scope: !20381)
!20405 = !DILocation(line: 9849, column: 49, scope: !20381)
!20406 = !DILocation(line: 9848, column: 2, scope: !20381)
!20407 = distinct !{!20407, !20383, !20408}
!20408 = !DILocation(line: 9861, column: 2, scope: !20378)
!20409 = !DILocation(line: 9862, column: 2, scope: !20304)
!20410 = !DILocation(line: 9863, column: 16, scope: !20304)
!20411 = !DILocation(line: 9863, column: 2, scope: !20304)
!20412 = !DILocation(line: 9864, column: 1, scope: !20304)
!20413 = distinct !DISubprogram(name: "AscSetChipScsiID", scope: !3, file: !3, line: 8622, type: !10229, scopeLine: 8623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20414 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20413, file: !3, line: 8622, type: !7)
!20415 = !DILocation(line: 8622, column: 40, scope: !20413)
!20416 = !DILocalVariable(name: "new_host_id", arg: 2, scope: !20413, file: !3, line: 8622, type: !5245)
!20417 = !DILocation(line: 8622, column: 56, scope: !20413)
!20418 = !DILocalVariable(name: "cfg_lsw", scope: !20413, file: !3, line: 8624, type: !5240)
!20419 = !DILocation(line: 8624, column: 9, scope: !20413)
!20420 = !DILocation(line: 8626, column: 6, scope: !20421)
!20421 = distinct !DILexicalBlock(scope: !20413, file: !3, line: 8626, column: 6)
!20422 = !DILocation(line: 8626, column: 36, scope: !20421)
!20423 = !DILocation(line: 8626, column: 33, scope: !20421)
!20424 = !DILocation(line: 8626, column: 6, scope: !20413)
!20425 = !DILocation(line: 8627, column: 11, scope: !20426)
!20426 = distinct !DILexicalBlock(scope: !20421, file: !3, line: 8626, column: 49)
!20427 = !DILocation(line: 8627, column: 3, scope: !20426)
!20428 = !DILocation(line: 8629, column: 12, scope: !20413)
!20429 = !DILocation(line: 8629, column: 10, scope: !20413)
!20430 = !DILocation(line: 8630, column: 10, scope: !20413)
!20431 = !DILocation(line: 8631, column: 23, scope: !20413)
!20432 = !DILocation(line: 8631, column: 35, scope: !20413)
!20433 = !DILocation(line: 8631, column: 50, scope: !20413)
!20434 = !DILocation(line: 8631, column: 13, scope: !20413)
!20435 = !DILocation(line: 8631, column: 10, scope: !20413)
!20436 = !DILocation(line: 8632, column: 2, scope: !20413)
!20437 = !DILocation(line: 8633, column: 10, scope: !20413)
!20438 = !DILocation(line: 8633, column: 9, scope: !20413)
!20439 = !DILocation(line: 8633, column: 2, scope: !20413)
!20440 = !DILocation(line: 8634, column: 1, scope: !20413)
!20441 = distinct !DISubprogram(name: "AscGetEisaChipCfg", scope: !3, file: !3, line: 8579, type: !20442, scopeLine: 8580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20442 = !DISubroutineType(types: !20443)
!20443 = !{!5240, !7}
!20444 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20441, file: !3, line: 8579, type: !7)
!20445 = !DILocation(line: 8579, column: 42, scope: !20441)
!20446 = !DILocalVariable(name: "eisa_cfg_iop", scope: !20441, file: !3, line: 8581, type: !7)
!20447 = !DILocation(line: 8581, column: 11, scope: !20441)
!20448 = !DILocation(line: 8581, column: 37, scope: !20441)
!20449 = !DILocation(line: 8581, column: 65, scope: !20441)
!20450 = !DILocation(line: 8583, column: 9, scope: !20441)
!20451 = !DILocation(line: 8583, column: 2, scope: !20441)
!20452 = distinct !DISubprogram(name: "AscISR", scope: !3, file: !3, line: 7010, type: !10729, scopeLine: 7011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20453 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !20452, file: !3, line: 7010, type: !6375)
!20454 = !DILocation(line: 7010, column: 32, scope: !20452)
!20455 = !DILocalVariable(name: "chipstat", scope: !20452, file: !3, line: 7012, type: !303)
!20456 = !DILocation(line: 7012, column: 14, scope: !20452)
!20457 = !DILocalVariable(name: "iop_base", scope: !20452, file: !3, line: 7013, type: !7)
!20458 = !DILocation(line: 7013, column: 11, scope: !20452)
!20459 = !DILocalVariable(name: "saved_ram_addr", scope: !20452, file: !3, line: 7014, type: !5240)
!20460 = !DILocation(line: 7014, column: 9, scope: !20452)
!20461 = !DILocalVariable(name: "ctrl_reg", scope: !20452, file: !3, line: 7015, type: !5245)
!20462 = !DILocation(line: 7015, column: 8, scope: !20452)
!20463 = !DILocalVariable(name: "saved_ctrl_reg", scope: !20452, file: !3, line: 7016, type: !5245)
!20464 = !DILocation(line: 7016, column: 8, scope: !20452)
!20465 = !DILocalVariable(name: "int_pending", scope: !20452, file: !3, line: 7017, type: !245)
!20466 = !DILocation(line: 7017, column: 6, scope: !20452)
!20467 = !DILocalVariable(name: "status", scope: !20452, file: !3, line: 7018, type: !245)
!20468 = !DILocation(line: 7018, column: 6, scope: !20452)
!20469 = !DILocalVariable(name: "host_flag", scope: !20452, file: !3, line: 7019, type: !5245)
!20470 = !DILocation(line: 7019, column: 8, scope: !20452)
!20471 = !DILocation(line: 7021, column: 13, scope: !20452)
!20472 = !DILocation(line: 7021, column: 22, scope: !20452)
!20473 = !DILocation(line: 7021, column: 11, scope: !20452)
!20474 = !DILocation(line: 7022, column: 14, scope: !20452)
!20475 = !DILocation(line: 7024, column: 6, scope: !20476)
!20476 = distinct !DILexicalBlock(scope: !20452, file: !3, line: 7024, column: 6)
!20477 = !DILocation(line: 7024, column: 32, scope: !20476)
!20478 = !DILocation(line: 7024, column: 6, scope: !20452)
!20479 = !DILocation(line: 7025, column: 10, scope: !20476)
!20480 = !DILocation(line: 7025, column: 3, scope: !20476)
!20481 = !DILocation(line: 7027, column: 7, scope: !20482)
!20482 = distinct !DILexicalBlock(scope: !20452, file: !3, line: 7027, column: 6)
!20483 = !DILocation(line: 7027, column: 16, scope: !20482)
!20484 = !DILocation(line: 7027, column: 27, scope: !20482)
!20485 = !DILocation(line: 7027, column: 57, scope: !20482)
!20486 = !DILocation(line: 7027, column: 6, scope: !20452)
!20487 = !DILocation(line: 7028, column: 3, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20482, file: !3, line: 7027, column: 63)
!20489 = !DILocation(line: 7030, column: 6, scope: !20490)
!20490 = distinct !DILexicalBlock(scope: !20452, file: !3, line: 7030, column: 6)
!20491 = !DILocation(line: 7030, column: 15, scope: !20490)
!20492 = !DILocation(line: 7030, column: 31, scope: !20490)
!20493 = !DILocation(line: 7030, column: 6, scope: !20452)
!20494 = !DILocation(line: 7031, column: 22, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 7030, column: 37)
!20496 = !DILocation(line: 7031, column: 3, scope: !20495)
!20497 = !DILocation(line: 7032, column: 3, scope: !20495)
!20498 = !DILocation(line: 7034, column: 6, scope: !20499)
!20499 = distinct !DILexicalBlock(scope: !20452, file: !3, line: 7034, column: 6)
!20500 = !DILocation(line: 7034, column: 15, scope: !20499)
!20501 = !DILocation(line: 7034, column: 6, scope: !20452)
!20502 = !DILocation(line: 7035, column: 22, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !20499, file: !3, line: 7034, column: 26)
!20504 = !DILocation(line: 7035, column: 3, scope: !20503)
!20505 = !DILocation(line: 7036, column: 3, scope: !20503)
!20506 = !DILocation(line: 7038, column: 2, scope: !20452)
!20507 = !DILocation(line: 7038, column: 11, scope: !20452)
!20508 = !DILocation(line: 7038, column: 21, scope: !20452)
!20509 = !DILocation(line: 7039, column: 13, scope: !20452)
!20510 = !DILocation(line: 7039, column: 11, scope: !20452)
!20511 = !DILocation(line: 7040, column: 19, scope: !20452)
!20512 = !DILocation(line: 7040, column: 28, scope: !20452)
!20513 = !DILocation(line: 7040, column: 17, scope: !20452)
!20514 = !DILocation(line: 7042, column: 13, scope: !20452)
!20515 = !DILocation(line: 7042, column: 11, scope: !20452)
!20516 = !DILocation(line: 7043, column: 6, scope: !20517)
!20517 = distinct !DILexicalBlock(scope: !20452, file: !3, line: 7043, column: 6)
!20518 = !DILocation(line: 7043, column: 15, scope: !20517)
!20519 = !DILocation(line: 7043, column: 6, scope: !20452)
!20520 = !DILocation(line: 7044, column: 9, scope: !20521)
!20521 = distinct !DILexicalBlock(scope: !20522, file: !3, line: 7044, column: 7)
!20522 = distinct !DILexicalBlock(scope: !20517, file: !3, line: 7043, column: 39)
!20523 = !DILocation(line: 7044, column: 18, scope: !20521)
!20524 = !DILocation(line: 7044, column: 27, scope: !20521)
!20525 = !DILocation(line: 7044, column: 7, scope: !20522)
!20526 = !DILocalVariable(name: "i", scope: !20527, file: !3, line: 7045, type: !245)
!20527 = distinct !DILexicalBlock(scope: !20521, file: !3, line: 7044, column: 57)
!20528 = !DILocation(line: 7045, column: 8, scope: !20527)
!20529 = !DILocation(line: 7046, column: 16, scope: !20527)
!20530 = !DILocation(line: 7047, column: 4, scope: !20527)
!20531 = !DILocation(line: 7047, column: 13, scope: !20527)
!20532 = !DILocation(line: 7047, column: 23, scope: !20527)
!20533 = !DILocation(line: 7048, column: 19, scope: !20527)
!20534 = !DILocation(line: 7049, column: 4, scope: !20527)
!20535 = !DILocation(line: 7049, column: 12, scope: !20527)
!20536 = !DILocation(line: 7049, column: 39, scope: !20527)
!20537 = !DILocation(line: 7050, column: 28, scope: !20527)
!20538 = !DILocation(line: 7050, column: 33, scope: !20527)
!20539 = !DILocation(line: 7050, column: 36, scope: !20527)
!20540 = !DILocation(line: 0, scope: !20527)
!20541 = !DILocalVariable(name: "__ms", scope: !20542, file: !3, line: 7051, type: !189)
!20542 = distinct !DILexicalBlock(scope: !20543, file: !3, line: 7051, column: 5)
!20543 = distinct !DILexicalBlock(scope: !20527, file: !3, line: 7050, column: 42)
!20544 = !DILocation(line: 7051, column: 5, scope: !20542)
!20545 = !DILocation(line: 7051, column: 5, scope: !20546)
!20546 = distinct !DILexicalBlock(scope: !20547, file: !3, line: 7051, column: 5)
!20547 = distinct !DILexicalBlock(scope: !20548, file: !3, line: 7051, column: 5)
!20548 = distinct !DILexicalBlock(scope: !20549, file: !3, line: 7051, column: 5)
!20549 = distinct !DILexicalBlock(scope: !20542, file: !3, line: 7051, column: 5)
!20550 = distinct !{!20550, !20544, !20544}
!20551 = distinct !{!20551, !20534, !20552}
!20552 = !DILocation(line: 7052, column: 4, scope: !20527)
!20553 = !DILocation(line: 7053, column: 4, scope: !20527)
!20554 = !DILocation(line: 7054, column: 4, scope: !20527)
!20555 = !DILocation(line: 7055, column: 4, scope: !20527)
!20556 = !DILocation(line: 7056, column: 4, scope: !20527)
!20557 = !DILocation(line: 7057, column: 15, scope: !20527)
!20558 = !DILocation(line: 7057, column: 13, scope: !20527)
!20559 = !DILocation(line: 7058, column: 3, scope: !20527)
!20560 = !DILocation(line: 7059, column: 2, scope: !20522)
!20561 = !DILocation(line: 7060, column: 19, scope: !20452)
!20562 = !DILocation(line: 7060, column: 17, scope: !20452)
!20563 = !DILocation(line: 7061, column: 30, scope: !20452)
!20564 = !DILocation(line: 7061, column: 14, scope: !20452)
!20565 = !DILocation(line: 7062, column: 27, scope: !20452)
!20566 = !DILocation(line: 7061, column: 12, scope: !20452)
!20567 = !DILocation(line: 7064, column: 19, scope: !20452)
!20568 = !DILocation(line: 7065, column: 13, scope: !20452)
!20569 = !DILocation(line: 7065, column: 23, scope: !20452)
!20570 = !DILocation(line: 7065, column: 5, scope: !20452)
!20571 = !DILocation(line: 7064, column: 2, scope: !20452)
!20572 = !DILocation(line: 7066, column: 7, scope: !20573)
!20573 = distinct !DILexicalBlock(scope: !20452, file: !3, line: 7066, column: 6)
!20574 = !DILocation(line: 7066, column: 16, scope: !20573)
!20575 = !DILocation(line: 7066, column: 35, scope: !20573)
!20576 = !DILocation(line: 7066, column: 39, scope: !20573)
!20577 = !DILocation(line: 7066, column: 38, scope: !20573)
!20578 = !DILocation(line: 7066, column: 6, scope: !20452)
!20579 = !DILocation(line: 7067, column: 19, scope: !20580)
!20580 = distinct !DILexicalBlock(scope: !20573, file: !3, line: 7066, column: 53)
!20581 = !DILocation(line: 7067, column: 3, scope: !20580)
!20582 = !DILocation(line: 7068, column: 15, scope: !20580)
!20583 = !DILocation(line: 7069, column: 8, scope: !20584)
!20584 = distinct !DILexicalBlock(scope: !20580, file: !3, line: 7069, column: 7)
!20585 = !DILocation(line: 7069, column: 17, scope: !20584)
!20586 = !DILocation(line: 7069, column: 31, scope: !20584)
!20587 = !DILocation(line: 7069, column: 35, scope: !20584)
!20588 = !DILocation(line: 7069, column: 44, scope: !20584)
!20589 = !DILocation(line: 7069, column: 7, scope: !20580)
!20590 = !DILocation(line: 7070, column: 21, scope: !20591)
!20591 = distinct !DILexicalBlock(scope: !20584, file: !3, line: 7069, column: 63)
!20592 = !DILocation(line: 7070, column: 4, scope: !20591)
!20593 = !DILocation(line: 7071, column: 19, scope: !20591)
!20594 = !DILocation(line: 7072, column: 3, scope: !20591)
!20595 = !DILocation(line: 7073, column: 9, scope: !20596)
!20596 = distinct !DILexicalBlock(scope: !20597, file: !3, line: 7073, column: 8)
!20597 = distinct !DILexicalBlock(scope: !20584, file: !3, line: 7072, column: 10)
!20598 = !DILocation(line: 7073, column: 18, scope: !20596)
!20599 = !DILocation(line: 7073, column: 27, scope: !20596)
!20600 = !DILocation(line: 7073, column: 51, scope: !20596)
!20601 = !DILocation(line: 7073, column: 8, scope: !20597)
!20602 = !DILocation(line: 7074, column: 5, scope: !20603)
!20603 = distinct !DILexicalBlock(scope: !20596, file: !3, line: 7073, column: 57)
!20604 = !DILocation(line: 7075, column: 19, scope: !20603)
!20605 = !DILocation(line: 7075, column: 7, scope: !20603)
!20606 = !DILocation(line: 7074, column: 21, scope: !20603)
!20607 = !DILocation(line: 7075, column: 29, scope: !20603)
!20608 = !DILocation(line: 7075, column: 37, scope: !20603)
!20609 = distinct !{!20609, !20602, !20610}
!20610 = !DILocation(line: 7076, column: 5, scope: !20603)
!20611 = !DILocation(line: 7077, column: 4, scope: !20603)
!20612 = !DILocation(line: 7078, column: 5, scope: !20613)
!20613 = distinct !DILexicalBlock(scope: !20596, file: !3, line: 7077, column: 11)
!20614 = !DILocation(line: 7080, column: 23, scope: !20615)
!20615 = distinct !DILexicalBlock(scope: !20616, file: !3, line: 7079, column: 10)
!20616 = distinct !DILexicalBlock(scope: !20613, file: !3, line: 7078, column: 8)
!20617 = !DILocation(line: 7080, column: 11, scope: !20615)
!20618 = !DILocation(line: 7079, column: 18, scope: !20615)
!20619 = !DILocation(line: 7080, column: 33, scope: !20615)
!20620 = !DILocation(line: 7079, column: 10, scope: !20616)
!20621 = !DILocation(line: 7081, column: 7, scope: !20622)
!20622 = distinct !DILexicalBlock(scope: !20615, file: !3, line: 7080, column: 39)
!20623 = !DILocation(line: 7083, column: 5, scope: !20616)
!20624 = !DILocation(line: 7083, column: 14, scope: !20613)
!20625 = !DILocation(line: 7083, column: 21, scope: !20613)
!20626 = distinct !{!20626, !20612, !20627}
!20627 = !DILocation(line: 7083, column: 28, scope: !20613)
!20628 = !DILocation(line: 7085, column: 9, scope: !20629)
!20629 = distinct !DILexicalBlock(scope: !20597, file: !3, line: 7085, column: 8)
!20630 = !DILocation(line: 7085, column: 16, scope: !20629)
!20631 = !DILocation(line: 7085, column: 24, scope: !20629)
!20632 = !DILocation(line: 7085, column: 8, scope: !20597)
!20633 = !DILocation(line: 7086, column: 17, scope: !20629)
!20634 = !DILocation(line: 7086, column: 5, scope: !20629)
!20635 = !DILocation(line: 7088, column: 2, scope: !20580)
!20636 = !DILocation(line: 7089, column: 19, scope: !20452)
!20637 = !DILocation(line: 7089, column: 47, scope: !20452)
!20638 = !DILocation(line: 7089, column: 2, scope: !20452)
!20639 = !DILocation(line: 7090, column: 2, scope: !20452)
!20640 = !DILocation(line: 7091, column: 2, scope: !20452)
!20641 = !DILocation(line: 7092, column: 2, scope: !20452)
!20642 = !DILocation(line: 7092, column: 11, scope: !20452)
!20643 = !DILocation(line: 7092, column: 21, scope: !20452)
!20644 = !DILocation(line: 7093, column: 9, scope: !20452)
!20645 = !DILocation(line: 7093, column: 2, scope: !20452)
!20646 = !DILocation(line: 7094, column: 1, scope: !20452)
!20647 = distinct !DISubprogram(name: "AscAckInterrupt", scope: !3, file: !3, line: 6234, type: !11276, scopeLine: 6235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20648 = !DILocalVariable(name: "iop_base", arg: 1, scope: !20647, file: !3, line: 6234, type: !7)
!20649 = !DILocation(line: 6234, column: 38, scope: !20647)
!20650 = !DILocalVariable(name: "host_flag", scope: !20647, file: !3, line: 6236, type: !5245)
!20651 = !DILocation(line: 6236, column: 8, scope: !20647)
!20652 = !DILocalVariable(name: "risc_flag", scope: !20647, file: !3, line: 6237, type: !5245)
!20653 = !DILocation(line: 6237, column: 8, scope: !20647)
!20654 = !DILocalVariable(name: "loop", scope: !20647, file: !3, line: 6238, type: !5240)
!20655 = !DILocation(line: 6238, column: 9, scope: !20647)
!20656 = !DILocation(line: 6240, column: 7, scope: !20647)
!20657 = !DILocation(line: 6241, column: 2, scope: !20647)
!20658 = !DILocation(line: 6242, column: 31, scope: !20659)
!20659 = distinct !DILexicalBlock(scope: !20647, file: !3, line: 6241, column: 5)
!20660 = !DILocation(line: 6242, column: 15, scope: !20659)
!20661 = !DILocation(line: 6242, column: 13, scope: !20659)
!20662 = !DILocation(line: 6243, column: 11, scope: !20663)
!20663 = distinct !DILexicalBlock(scope: !20659, file: !3, line: 6243, column: 7)
!20664 = !DILocation(line: 6243, column: 7, scope: !20663)
!20665 = !DILocation(line: 6243, column: 14, scope: !20663)
!20666 = !DILocation(line: 6243, column: 7, scope: !20659)
!20667 = !DILocation(line: 6244, column: 4, scope: !20668)
!20668 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 6243, column: 24)
!20669 = !DILocation(line: 6246, column: 2, scope: !20659)
!20670 = !DILocation(line: 6246, column: 12, scope: !20647)
!20671 = !DILocation(line: 6246, column: 22, scope: !20647)
!20672 = !DILocation(line: 6246, column: 47, scope: !20647)
!20673 = distinct !{!20673, !20657, !20674}
!20674 = !DILocation(line: 6246, column: 51, scope: !20647)
!20675 = !DILocation(line: 6248, column: 22, scope: !20647)
!20676 = !DILocation(line: 6248, column: 6, scope: !20647)
!20677 = !DILocation(line: 6249, column: 26, scope: !20647)
!20678 = !DILocation(line: 6247, column: 12, scope: !20647)
!20679 = !DILocation(line: 6250, column: 19, scope: !20647)
!20680 = !DILocation(line: 6251, column: 13, scope: !20647)
!20681 = !DILocation(line: 6251, column: 23, scope: !20647)
!20682 = !DILocation(line: 6251, column: 5, scope: !20647)
!20683 = !DILocation(line: 6250, column: 2, scope: !20647)
!20684 = !DILocation(line: 6252, column: 2, scope: !20647)
!20685 = !DILocation(line: 6253, column: 7, scope: !20647)
!20686 = !DILocation(line: 6254, column: 2, scope: !20647)
!20687 = !DILocation(line: 6254, column: 9, scope: !20647)
!20688 = !DILocation(line: 6254, column: 36, scope: !20647)
!20689 = !DILocation(line: 6255, column: 3, scope: !20690)
!20690 = distinct !DILexicalBlock(scope: !20647, file: !3, line: 6254, column: 55)
!20691 = !DILocation(line: 6256, column: 11, scope: !20692)
!20692 = distinct !DILexicalBlock(scope: !20690, file: !3, line: 6256, column: 7)
!20693 = !DILocation(line: 6256, column: 7, scope: !20692)
!20694 = !DILocation(line: 6256, column: 14, scope: !20692)
!20695 = !DILocation(line: 6256, column: 7, scope: !20690)
!20696 = !DILocation(line: 6257, column: 4, scope: !20697)
!20697 = distinct !DILexicalBlock(scope: !20692, file: !3, line: 6256, column: 19)
!20698 = distinct !{!20698, !20686, !20699}
!20699 = !DILocation(line: 6259, column: 2, scope: !20647)
!20700 = !DILocation(line: 6260, column: 19, scope: !20647)
!20701 = !DILocation(line: 6260, column: 47, scope: !20647)
!20702 = !DILocation(line: 6260, column: 2, scope: !20647)
!20703 = !DILocation(line: 6261, column: 1, scope: !20647)
!20704 = distinct !DISubprogram(name: "AscIsrChipHalted", scope: !3, file: !3, line: 6361, type: !11287, scopeLine: 6362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!20705 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !20704, file: !3, line: 6361, type: !6375)
!20706 = !DILocation(line: 6361, column: 43, scope: !20704)
!20707 = !DILocalVariable(name: "ext_msg", scope: !20704, file: !3, line: 6363, type: !9515)
!20708 = !DILocation(line: 6363, column: 10, scope: !20704)
!20709 = !DILocalVariable(name: "out_msg", scope: !20704, file: !3, line: 6364, type: !9515)
!20710 = !DILocation(line: 6364, column: 10, scope: !20704)
!20711 = !DILocalVariable(name: "halt_q_addr", scope: !20704, file: !3, line: 6365, type: !5240)
!20712 = !DILocation(line: 6365, column: 9, scope: !20704)
!20713 = !DILocalVariable(name: "sdtr_accept", scope: !20704, file: !3, line: 6366, type: !477)
!20714 = !DILocation(line: 6366, column: 7, scope: !20704)
!20715 = !DILocalVariable(name: "int_halt_code", scope: !20704, file: !3, line: 6367, type: !5240)
!20716 = !DILocation(line: 6367, column: 9, scope: !20704)
!20717 = !DILocalVariable(name: "scsi_busy", scope: !20704, file: !3, line: 6368, type: !5245)
!20718 = !DILocation(line: 6368, column: 23, scope: !20704)
!20719 = !DILocalVariable(name: "target_id", scope: !20704, file: !3, line: 6369, type: !5245)
!20720 = !DILocation(line: 6369, column: 23, scope: !20704)
!20721 = !DILocalVariable(name: "iop_base", scope: !20704, file: !3, line: 6370, type: !7)
!20722 = !DILocation(line: 6370, column: 11, scope: !20704)
!20723 = !DILocalVariable(name: "tag_code", scope: !20704, file: !3, line: 6371, type: !5245)
!20724 = !DILocation(line: 6371, column: 8, scope: !20704)
!20725 = !DILocalVariable(name: "q_status", scope: !20704, file: !3, line: 6372, type: !5245)
!20726 = !DILocation(line: 6372, column: 8, scope: !20704)
!20727 = !DILocalVariable(name: "halt_qp", scope: !20704, file: !3, line: 6373, type: !5245)
!20728 = !DILocation(line: 6373, column: 8, scope: !20704)
!20729 = !DILocalVariable(name: "sdtr_data", scope: !20704, file: !3, line: 6374, type: !5245)
!20730 = !DILocation(line: 6374, column: 8, scope: !20704)
!20731 = !DILocalVariable(name: "target_ix", scope: !20704, file: !3, line: 6375, type: !5245)
!20732 = !DILocation(line: 6375, column: 8, scope: !20704)
!20733 = !DILocalVariable(name: "q_cntl", scope: !20704, file: !3, line: 6376, type: !5245)
!20734 = !DILocation(line: 6376, column: 8, scope: !20704)
!20735 = !DILocalVariable(name: "tid_no", scope: !20704, file: !3, line: 6376, type: !5245)
!20736 = !DILocation(line: 6376, column: 16, scope: !20704)
!20737 = !DILocalVariable(name: "cur_dvc_qng", scope: !20704, file: !3, line: 6377, type: !5245)
!20738 = !DILocation(line: 6377, column: 8, scope: !20704)
!20739 = !DILocalVariable(name: "asyn_sdtr", scope: !20704, file: !3, line: 6378, type: !5245)
!20740 = !DILocation(line: 6378, column: 8, scope: !20704)
!20741 = !DILocalVariable(name: "scsi_status", scope: !20704, file: !3, line: 6379, type: !5245)
!20742 = !DILocation(line: 6379, column: 8, scope: !20704)
!20743 = !DILocalVariable(name: "boardp", scope: !20704, file: !3, line: 6380, type: !190)
!20744 = !DILocation(line: 6380, column: 20, scope: !20704)
!20745 = !DILocation(line: 6382, column: 2, scope: !20704)
!20746 = !DILocation(line: 6382, column: 2, scope: !20747)
!20747 = distinct !DILexicalBlock(scope: !20748, file: !3, line: 6382, column: 2)
!20748 = distinct !DILexicalBlock(scope: !20704, file: !3, line: 6382, column: 2)
!20749 = !DILocation(line: 6382, column: 2, scope: !20748)
!20750 = !DILocation(line: 6382, column: 2, scope: !20751)
!20751 = distinct !DILexicalBlock(scope: !20747, file: !3, line: 6382, column: 2)
!20752 = !DILocation(line: 6382, column: 2, scope: !20753)
!20753 = distinct !DILexicalBlock(scope: !20751, file: !3, line: 6382, column: 2)
!20754 = !DILocation(line: 6382, column: 2, scope: !20755)
!20755 = distinct !DILexicalBlock(scope: !20751, file: !3, line: 6382, column: 2)
!20756 = !{i32 -2140622399, i32 -2140622370, i32 -2140622324, i32 -2140622266, i32 -2140622212, i32 -2140622158, i32 -2140622103, i32 -2140622072}
!20757 = !DILocation(line: 6382, column: 2, scope: !20758)
!20758 = distinct !DILexicalBlock(scope: !20759, file: !3, line: 6382, column: 2)
!20759 = distinct !DILexicalBlock(scope: !20751, file: !3, line: 6382, column: 2)
!20760 = !{i32 -2140621625, i32 -2140621618, i32 -2140621564, i32 -2140621533, i32 -2140621503}
!20761 = !DILocation(line: 6382, column: 2, scope: !20759)
!20762 = !DILocation(line: 6383, column: 11, scope: !20704)
!20763 = !DILocation(line: 6383, column: 20, scope: !20704)
!20764 = !DILocation(line: 6383, column: 9, scope: !20704)
!20765 = !DILocation(line: 6385, column: 13, scope: !20704)
!20766 = !DILocation(line: 6385, column: 22, scope: !20704)
!20767 = !DILocation(line: 6385, column: 11, scope: !20704)
!20768 = !DILocation(line: 6386, column: 34, scope: !20704)
!20769 = !DILocation(line: 6386, column: 18, scope: !20704)
!20770 = !DILocation(line: 6386, column: 16, scope: !20704)
!20771 = !DILocation(line: 6388, column: 28, scope: !20704)
!20772 = !DILocation(line: 6388, column: 12, scope: !20704)
!20773 = !DILocation(line: 6388, column: 10, scope: !20704)
!20774 = !DILocation(line: 6389, column: 16, scope: !20704)
!20775 = !DILocation(line: 6389, column: 14, scope: !20704)
!20776 = !DILocation(line: 6390, column: 30, scope: !20704)
!20777 = !DILocation(line: 6391, column: 18, scope: !20704)
!20778 = !DILocation(line: 6391, column: 30, scope: !20704)
!20779 = !DILocation(line: 6391, column: 9, scope: !20704)
!20780 = !DILocation(line: 6390, column: 14, scope: !20704)
!20781 = !DILocation(line: 6390, column: 12, scope: !20704)
!20782 = !DILocation(line: 6393, column: 27, scope: !20704)
!20783 = !DILocation(line: 6394, column: 17, scope: !20704)
!20784 = !DILocation(line: 6394, column: 29, scope: !20704)
!20785 = !DILocation(line: 6394, column: 8, scope: !20704)
!20786 = !DILocation(line: 6393, column: 11, scope: !20704)
!20787 = !DILocation(line: 6393, column: 9, scope: !20704)
!20788 = !DILocation(line: 6395, column: 11, scope: !20704)
!20789 = !DILocation(line: 6395, column: 9, scope: !20704)
!20790 = !DILocation(line: 6396, column: 21, scope: !20704)
!20791 = !DILocation(line: 6396, column: 12, scope: !20704)
!20792 = !DILocation(line: 6397, column: 6, scope: !20793)
!20793 = distinct !DILexicalBlock(scope: !20704, file: !3, line: 6397, column: 6)
!20794 = !DILocation(line: 6397, column: 15, scope: !20793)
!20795 = !DILocation(line: 6397, column: 35, scope: !20793)
!20796 = !DILocation(line: 6397, column: 33, scope: !20793)
!20797 = !DILocation(line: 6397, column: 6, scope: !20704)
!20798 = !DILocation(line: 6398, column: 13, scope: !20799)
!20799 = distinct !DILexicalBlock(scope: !20793, file: !3, line: 6397, column: 46)
!20800 = !DILocation(line: 6399, column: 2, scope: !20799)
!20801 = !DILocation(line: 6400, column: 13, scope: !20802)
!20802 = distinct !DILexicalBlock(scope: !20793, file: !3, line: 6399, column: 9)
!20803 = !DILocation(line: 6402, column: 6, scope: !20804)
!20804 = distinct !DILexicalBlock(scope: !20704, file: !3, line: 6402, column: 6)
!20805 = !DILocation(line: 6402, column: 20, scope: !20804)
!20806 = !DILocation(line: 6402, column: 6, scope: !20704)
!20807 = !DILocation(line: 6403, column: 7, scope: !20808)
!20808 = distinct !DILexicalBlock(scope: !20809, file: !3, line: 6403, column: 7)
!20809 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 6402, column: 58)
!20810 = !DILocation(line: 6403, column: 16, scope: !20808)
!20811 = !DILocation(line: 6403, column: 36, scope: !20808)
!20812 = !DILocation(line: 6403, column: 34, scope: !20808)
!20813 = !DILocation(line: 6403, column: 7, scope: !20809)
!20814 = !DILocation(line: 6404, column: 19, scope: !20815)
!20815 = distinct !DILexicalBlock(scope: !20808, file: !3, line: 6403, column: 47)
!20816 = !DILocation(line: 6404, column: 32, scope: !20815)
!20817 = !DILocation(line: 6404, column: 4, scope: !20815)
!20818 = !DILocation(line: 6405, column: 4, scope: !20815)
!20819 = !DILocation(line: 6405, column: 12, scope: !20815)
!20820 = !DILocation(line: 6405, column: 22, scope: !20815)
!20821 = !DILocation(line: 6405, column: 30, scope: !20815)
!20822 = !DILocation(line: 6406, column: 3, scope: !20815)
!20823 = !DILocation(line: 6407, column: 20, scope: !20809)
!20824 = !DILocation(line: 6407, column: 3, scope: !20809)
!20825 = !DILocation(line: 6408, column: 3, scope: !20809)
!20826 = !DILocation(line: 6409, column: 13, scope: !20827)
!20827 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 6409, column: 13)
!20828 = !DILocation(line: 6409, column: 27, scope: !20827)
!20829 = !DILocation(line: 6409, column: 13, scope: !20804)
!20830 = !DILocation(line: 6410, column: 7, scope: !20831)
!20831 = distinct !DILexicalBlock(scope: !20832, file: !3, line: 6410, column: 7)
!20832 = distinct !DILexicalBlock(scope: !20827, file: !3, line: 6409, column: 64)
!20833 = !DILocation(line: 6410, column: 16, scope: !20831)
!20834 = !DILocation(line: 6410, column: 36, scope: !20831)
!20835 = !DILocation(line: 6410, column: 34, scope: !20831)
!20836 = !DILocation(line: 6410, column: 7, scope: !20832)
!20837 = !DILocation(line: 6411, column: 19, scope: !20838)
!20838 = distinct !DILexicalBlock(scope: !20831, file: !3, line: 6410, column: 47)
!20839 = !DILocation(line: 6411, column: 29, scope: !20838)
!20840 = !DILocation(line: 6411, column: 40, scope: !20838)
!20841 = !DILocation(line: 6411, column: 4, scope: !20838)
!20842 = !DILocation(line: 6412, column: 32, scope: !20838)
!20843 = !DILocation(line: 6412, column: 4, scope: !20838)
!20844 = !DILocation(line: 6412, column: 12, scope: !20838)
!20845 = !DILocation(line: 6412, column: 22, scope: !20838)
!20846 = !DILocation(line: 6412, column: 30, scope: !20838)
!20847 = !DILocation(line: 6413, column: 3, scope: !20838)
!20848 = !DILocation(line: 6414, column: 20, scope: !20832)
!20849 = !DILocation(line: 6414, column: 3, scope: !20832)
!20850 = !DILocation(line: 6415, column: 3, scope: !20832)
!20851 = !DILocation(line: 6416, column: 13, scope: !20852)
!20852 = distinct !DILexicalBlock(scope: !20827, file: !3, line: 6416, column: 13)
!20853 = !DILocation(line: 6416, column: 27, scope: !20852)
!20854 = !DILocation(line: 6416, column: 13, scope: !20827)
!20855 = !DILocation(line: 6417, column: 29, scope: !20856)
!20856 = distinct !DILexicalBlock(scope: !20852, file: !3, line: 6416, column: 50)
!20857 = !DILocation(line: 6419, column: 8, scope: !20856)
!20858 = !DILocation(line: 6417, column: 3, scope: !20856)
!20859 = !DILocation(line: 6422, column: 15, scope: !20860)
!20860 = distinct !DILexicalBlock(scope: !20856, file: !3, line: 6422, column: 7)
!20861 = !DILocation(line: 6422, column: 7, scope: !20860)
!20862 = !DILocation(line: 6422, column: 24, scope: !20860)
!20863 = !DILocation(line: 6422, column: 44, scope: !20860)
!20864 = !DILocation(line: 6423, column: 15, scope: !20860)
!20865 = !DILocation(line: 6423, column: 7, scope: !20860)
!20866 = !DILocation(line: 6423, column: 23, scope: !20860)
!20867 = !DILocation(line: 6423, column: 40, scope: !20860)
!20868 = !DILocation(line: 6424, column: 15, scope: !20860)
!20869 = !DILocation(line: 6424, column: 7, scope: !20860)
!20870 = !DILocation(line: 6424, column: 23, scope: !20860)
!20871 = !DILocation(line: 6422, column: 7, scope: !20856)
!20872 = !DILocation(line: 6425, column: 16, scope: !20873)
!20873 = distinct !DILexicalBlock(scope: !20860, file: !3, line: 6424, column: 39)
!20874 = !DILocation(line: 6426, column: 17, scope: !20875)
!20875 = distinct !DILexicalBlock(scope: !20873, file: !3, line: 6426, column: 8)
!20876 = !DILocation(line: 6426, column: 9, scope: !20875)
!20877 = !DILocation(line: 6426, column: 32, scope: !20875)
!20878 = !DILocation(line: 6426, column: 8, scope: !20873)
!20879 = !DILocation(line: 6428, column: 17, scope: !20880)
!20880 = distinct !DILexicalBlock(scope: !20875, file: !3, line: 6426, column: 55)
!20881 = !DILocation(line: 6429, column: 13, scope: !20880)
!20882 = !DILocation(line: 6429, column: 28, scope: !20880)
!20883 = !DILocation(line: 6430, column: 4, scope: !20880)
!20884 = !DILocation(line: 6431, column: 17, scope: !20885)
!20885 = distinct !DILexicalBlock(scope: !20873, file: !3, line: 6431, column: 8)
!20886 = !DILocation(line: 6431, column: 9, scope: !20885)
!20887 = !DILocation(line: 6432, column: 9, scope: !20885)
!20888 = !DILocation(line: 6432, column: 18, scope: !20885)
!20889 = !DILocation(line: 6432, column: 34, scope: !20885)
!20890 = !DILocation(line: 6432, column: 43, scope: !20885)
!20891 = !DILocation(line: 6431, column: 29, scope: !20885)
!20892 = !DILocation(line: 6433, column: 8, scope: !20885)
!20893 = !DILocation(line: 6433, column: 20, scope: !20885)
!20894 = !DILocation(line: 6433, column: 12, scope: !20885)
!20895 = !DILocation(line: 6434, column: 5, scope: !20885)
!20896 = !DILocation(line: 6434, column: 14, scope: !20885)
!20897 = !DILocation(line: 6434, column: 30, scope: !20885)
!20898 = !DILocation(line: 6435, column: 9, scope: !20885)
!20899 = !DILocation(line: 6433, column: 32, scope: !20885)
!20900 = !DILocation(line: 6431, column: 8, scope: !20873)
!20901 = !DILocation(line: 6436, column: 17, scope: !20902)
!20902 = distinct !DILexicalBlock(scope: !20885, file: !3, line: 6435, column: 27)
!20903 = !DILocation(line: 6438, column: 9, scope: !20902)
!20904 = !DILocation(line: 6438, column: 18, scope: !20902)
!20905 = !DILocation(line: 6438, column: 34, scope: !20902)
!20906 = !DILocation(line: 6439, column: 13, scope: !20902)
!20907 = !DILocation(line: 6437, column: 13, scope: !20902)
!20908 = !DILocation(line: 6437, column: 25, scope: !20902)
!20909 = !DILocation(line: 6440, column: 4, scope: !20902)
!20910 = !DILocation(line: 6441, column: 8, scope: !20911)
!20911 = distinct !DILexicalBlock(scope: !20873, file: !3, line: 6441, column: 8)
!20912 = !DILocation(line: 6441, column: 8, scope: !20873)
!20913 = !DILocation(line: 6443, column: 24, scope: !20914)
!20914 = distinct !DILexicalBlock(scope: !20911, file: !3, line: 6441, column: 21)
!20915 = !DILocation(line: 6443, column: 41, scope: !20914)
!20916 = !DILocation(line: 6444, column: 18, scope: !20914)
!20917 = !DILocation(line: 6443, column: 9, scope: !20914)
!20918 = !DILocation(line: 6442, column: 15, scope: !20914)
!20919 = !DILocation(line: 6445, column: 9, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20914, file: !3, line: 6445, column: 9)
!20921 = !DILocation(line: 6445, column: 19, scope: !20920)
!20922 = !DILocation(line: 6445, column: 9, scope: !20914)
!20923 = !DILocation(line: 6447, column: 13, scope: !20924)
!20924 = distinct !DILexicalBlock(scope: !20920, file: !3, line: 6445, column: 28)
!20925 = !DILocation(line: 6448, column: 29, scope: !20924)
!20926 = !DILocation(line: 6448, column: 28, scope: !20924)
!20927 = !DILocation(line: 6448, column: 6, scope: !20924)
!20928 = !DILocation(line: 6448, column: 15, scope: !20924)
!20929 = !DILocation(line: 6448, column: 25, scope: !20924)
!20930 = !DILocation(line: 6449, column: 29, scope: !20924)
!20931 = !DILocation(line: 6449, column: 28, scope: !20924)
!20932 = !DILocation(line: 6449, column: 6, scope: !20924)
!20933 = !DILocation(line: 6449, column: 15, scope: !20924)
!20934 = !DILocation(line: 6449, column: 25, scope: !20924)
!20935 = !DILocation(line: 6450, column: 21, scope: !20924)
!20936 = !DILocation(line: 6450, column: 31, scope: !20924)
!20937 = !DILocation(line: 6451, column: 14, scope: !20924)
!20938 = !DILocation(line: 6450, column: 6, scope: !20924)
!20939 = !DILocation(line: 6452, column: 34, scope: !20924)
!20940 = !DILocation(line: 6452, column: 6, scope: !20924)
!20941 = !DILocation(line: 6452, column: 14, scope: !20924)
!20942 = !DILocation(line: 6452, column: 24, scope: !20924)
!20943 = !DILocation(line: 6452, column: 32, scope: !20924)
!20944 = !DILocation(line: 6453, column: 5, scope: !20924)
!20945 = !DILocation(line: 6454, column: 4, scope: !20914)
!20946 = !DILocation(line: 6455, column: 16, scope: !20947)
!20947 = distinct !DILexicalBlock(scope: !20873, file: !3, line: 6455, column: 8)
!20948 = !DILocation(line: 6455, column: 8, scope: !20947)
!20949 = !DILocation(line: 6455, column: 31, scope: !20947)
!20950 = !DILocation(line: 6455, column: 8, scope: !20873)
!20951 = !DILocation(line: 6457, column: 12, scope: !20952)
!20952 = distinct !DILexicalBlock(scope: !20947, file: !3, line: 6455, column: 37)
!20953 = !DILocation(line: 6458, column: 28, scope: !20952)
!20954 = !DILocation(line: 6458, column: 27, scope: !20952)
!20955 = !DILocation(line: 6458, column: 5, scope: !20952)
!20956 = !DILocation(line: 6458, column: 14, scope: !20952)
!20957 = !DILocation(line: 6458, column: 24, scope: !20952)
!20958 = !DILocation(line: 6459, column: 28, scope: !20952)
!20959 = !DILocation(line: 6459, column: 27, scope: !20952)
!20960 = !DILocation(line: 6459, column: 5, scope: !20952)
!20961 = !DILocation(line: 6459, column: 14, scope: !20952)
!20962 = !DILocation(line: 6459, column: 24, scope: !20952)
!20963 = !DILocation(line: 6460, column: 20, scope: !20952)
!20964 = !DILocation(line: 6460, column: 30, scope: !20952)
!20965 = !DILocation(line: 6460, column: 41, scope: !20952)
!20966 = !DILocation(line: 6460, column: 5, scope: !20952)
!20967 = !DILocation(line: 6461, column: 4, scope: !20952)
!20968 = !DILocation(line: 6462, column: 9, scope: !20969)
!20969 = distinct !DILexicalBlock(scope: !20970, file: !3, line: 6462, column: 9)
!20970 = distinct !DILexicalBlock(scope: !20947, file: !3, line: 6461, column: 11)
!20971 = !DILocation(line: 6462, column: 21, scope: !20969)
!20972 = !DILocation(line: 6462, column: 25, scope: !20969)
!20973 = !DILocation(line: 6462, column: 32, scope: !20969)
!20974 = !DILocation(line: 6462, column: 9, scope: !20970)
!20975 = !DILocation(line: 6463, column: 13, scope: !20976)
!20976 = distinct !DILexicalBlock(scope: !20969, file: !3, line: 6462, column: 47)
!20977 = !DILocation(line: 6464, column: 28, scope: !20976)
!20978 = !DILocation(line: 6464, column: 6, scope: !20976)
!20979 = !DILocation(line: 6464, column: 15, scope: !20976)
!20980 = !DILocation(line: 6464, column: 25, scope: !20976)
!20981 = !DILocation(line: 6465, column: 28, scope: !20976)
!20982 = !DILocation(line: 6465, column: 6, scope: !20976)
!20983 = !DILocation(line: 6465, column: 15, scope: !20976)
!20984 = !DILocation(line: 6465, column: 25, scope: !20976)
!20985 = !DILocation(line: 6467, column: 11, scope: !20976)
!20986 = !DILocation(line: 6467, column: 10, scope: !20976)
!20987 = !DILocation(line: 6466, column: 6, scope: !20976)
!20988 = !DILocation(line: 6466, column: 15, scope: !20976)
!20989 = !DILocation(line: 6466, column: 33, scope: !20976)
!20990 = !DILocation(line: 6469, column: 25, scope: !20976)
!20991 = !DILocation(line: 6470, column: 19, scope: !20976)
!20992 = !DILocation(line: 6472, column: 11, scope: !20976)
!20993 = !DILocation(line: 6469, column: 10, scope: !20976)
!20994 = !DILocation(line: 6468, column: 16, scope: !20976)
!20995 = !DILocation(line: 6473, column: 21, scope: !20976)
!20996 = !DILocation(line: 6473, column: 31, scope: !20976)
!20997 = !DILocation(line: 6474, column: 14, scope: !20976)
!20998 = !DILocation(line: 6473, column: 6, scope: !20976)
!20999 = !DILocation(line: 6475, column: 34, scope: !20976)
!21000 = !DILocation(line: 6475, column: 6, scope: !20976)
!21001 = !DILocation(line: 6475, column: 14, scope: !20976)
!21002 = !DILocation(line: 6475, column: 24, scope: !20976)
!21003 = !DILocation(line: 6475, column: 32, scope: !20976)
!21004 = !DILocation(line: 6476, column: 5, scope: !20976)
!21005 = !DILocation(line: 6477, column: 13, scope: !21006)
!21006 = distinct !DILexicalBlock(scope: !20969, file: !3, line: 6476, column: 12)
!21007 = !DILocation(line: 6478, column: 20, scope: !21006)
!21008 = !DILocation(line: 6479, column: 21, scope: !21006)
!21009 = !DILocation(line: 6480, column: 21, scope: !21006)
!21010 = !DILocation(line: 6478, column: 6, scope: !21006)
!21011 = !DILocation(line: 6482, column: 11, scope: !21006)
!21012 = !DILocation(line: 6482, column: 10, scope: !21006)
!21013 = !DILocation(line: 6481, column: 6, scope: !21006)
!21014 = !DILocation(line: 6481, column: 15, scope: !21006)
!21015 = !DILocation(line: 6481, column: 33, scope: !21006)
!21016 = !DILocation(line: 6484, column: 25, scope: !21006)
!21017 = !DILocation(line: 6485, column: 19, scope: !21006)
!21018 = !DILocation(line: 6487, column: 11, scope: !21006)
!21019 = !DILocation(line: 6484, column: 10, scope: !21006)
!21020 = !DILocation(line: 6483, column: 16, scope: !21006)
!21021 = !DILocation(line: 6488, column: 21, scope: !21006)
!21022 = !DILocation(line: 6488, column: 31, scope: !21006)
!21023 = !DILocation(line: 6489, column: 14, scope: !21006)
!21024 = !DILocation(line: 6488, column: 6, scope: !21006)
!21025 = !DILocation(line: 6490, column: 34, scope: !21006)
!21026 = !DILocation(line: 6490, column: 6, scope: !21006)
!21027 = !DILocation(line: 6490, column: 14, scope: !21006)
!21028 = !DILocation(line: 6490, column: 24, scope: !21006)
!21029 = !DILocation(line: 6490, column: 32, scope: !21006)
!21030 = !DILocation(line: 6491, column: 28, scope: !21006)
!21031 = !DILocation(line: 6491, column: 6, scope: !21006)
!21032 = !DILocation(line: 6491, column: 15, scope: !21006)
!21033 = !DILocation(line: 6491, column: 25, scope: !21006)
!21034 = !DILocation(line: 6492, column: 28, scope: !21006)
!21035 = !DILocation(line: 6492, column: 6, scope: !21006)
!21036 = !DILocation(line: 6492, column: 15, scope: !21006)
!21037 = !DILocation(line: 6492, column: 25, scope: !21006)
!21038 = !DILocation(line: 6496, column: 21, scope: !20873)
!21039 = !DILocation(line: 6497, column: 16, scope: !20873)
!21040 = !DILocation(line: 6497, column: 28, scope: !20873)
!21041 = !DILocation(line: 6497, column: 7, scope: !20873)
!21042 = !DILocation(line: 6499, column: 7, scope: !20873)
!21043 = !DILocation(line: 6496, column: 4, scope: !20873)
!21044 = !DILocation(line: 6500, column: 21, scope: !20873)
!21045 = !DILocation(line: 6500, column: 4, scope: !20873)
!21046 = !DILocation(line: 6501, column: 4, scope: !20873)
!21047 = !DILocation(line: 6502, column: 22, scope: !21048)
!21048 = distinct !DILexicalBlock(scope: !20860, file: !3, line: 6502, column: 14)
!21049 = !DILocation(line: 6502, column: 14, scope: !21048)
!21050 = !DILocation(line: 6502, column: 31, scope: !21048)
!21051 = !DILocation(line: 6502, column: 51, scope: !21048)
!21052 = !DILocation(line: 6503, column: 15, scope: !21048)
!21053 = !DILocation(line: 6503, column: 7, scope: !21048)
!21054 = !DILocation(line: 6503, column: 23, scope: !21048)
!21055 = !DILocation(line: 6503, column: 40, scope: !21048)
!21056 = !DILocation(line: 6504, column: 15, scope: !21048)
!21057 = !DILocation(line: 6504, column: 7, scope: !21048)
!21058 = !DILocation(line: 6504, column: 23, scope: !21048)
!21059 = !DILocation(line: 6502, column: 14, scope: !20860)
!21060 = !DILocation(line: 6506, column: 12, scope: !21061)
!21061 = distinct !DILexicalBlock(scope: !21048, file: !3, line: 6504, column: 39)
!21062 = !DILocation(line: 6506, column: 23, scope: !21061)
!21063 = !DILocation(line: 6507, column: 28, scope: !21061)
!21064 = !DILocation(line: 6509, column: 7, scope: !21061)
!21065 = !DILocation(line: 6507, column: 4, scope: !21061)
!21066 = !DILocation(line: 6511, column: 11, scope: !21061)
!21067 = !DILocation(line: 6512, column: 21, scope: !21061)
!21068 = !DILocation(line: 6513, column: 16, scope: !21061)
!21069 = !DILocation(line: 6513, column: 28, scope: !21061)
!21070 = !DILocation(line: 6513, column: 7, scope: !21061)
!21071 = !DILocation(line: 6515, column: 7, scope: !21061)
!21072 = !DILocation(line: 6512, column: 4, scope: !21061)
!21073 = !DILocation(line: 6516, column: 21, scope: !21061)
!21074 = !DILocation(line: 6516, column: 4, scope: !21061)
!21075 = !DILocation(line: 6517, column: 4, scope: !21061)
!21076 = !DILocation(line: 6520, column: 12, scope: !21077)
!21077 = distinct !DILexicalBlock(scope: !21048, file: !3, line: 6518, column: 10)
!21078 = !DILocation(line: 6520, column: 21, scope: !21077)
!21079 = !DILocation(line: 6521, column: 28, scope: !21077)
!21080 = !DILocation(line: 6523, column: 7, scope: !21077)
!21081 = !DILocation(line: 6521, column: 4, scope: !21077)
!21082 = !DILocation(line: 6525, column: 11, scope: !21077)
!21083 = !DILocation(line: 6526, column: 21, scope: !21077)
!21084 = !DILocation(line: 6527, column: 16, scope: !21077)
!21085 = !DILocation(line: 6527, column: 28, scope: !21077)
!21086 = !DILocation(line: 6527, column: 7, scope: !21077)
!21087 = !DILocation(line: 6529, column: 7, scope: !21077)
!21088 = !DILocation(line: 6526, column: 4, scope: !21077)
!21089 = !DILocation(line: 6530, column: 21, scope: !21077)
!21090 = !DILocation(line: 6530, column: 4, scope: !21077)
!21091 = !DILocation(line: 6531, column: 4, scope: !21077)
!21092 = !DILocation(line: 6533, column: 13, scope: !21093)
!21093 = distinct !DILexicalBlock(scope: !20852, file: !3, line: 6533, column: 13)
!21094 = !DILocation(line: 6533, column: 27, scope: !21093)
!21095 = !DILocation(line: 6533, column: 13, scope: !20852)
!21096 = !DILocation(line: 6535, column: 10, scope: !21097)
!21097 = distinct !DILexicalBlock(scope: !21093, file: !3, line: 6533, column: 54)
!21098 = !DILocation(line: 6537, column: 8, scope: !21099)
!21099 = distinct !DILexicalBlock(scope: !21097, file: !3, line: 6537, column: 7)
!21100 = !DILocation(line: 6537, column: 17, scope: !21099)
!21101 = !DILocation(line: 6537, column: 29, scope: !21099)
!21102 = !DILocation(line: 6537, column: 27, scope: !21099)
!21103 = !DILocation(line: 6537, column: 40, scope: !21099)
!21104 = !DILocation(line: 6537, column: 7, scope: !21097)
!21105 = !DILocation(line: 6539, column: 27, scope: !21106)
!21106 = distinct !DILexicalBlock(scope: !21099, file: !3, line: 6537, column: 46)
!21107 = !DILocation(line: 6539, column: 26, scope: !21106)
!21108 = !DILocation(line: 6539, column: 4, scope: !21106)
!21109 = !DILocation(line: 6539, column: 13, scope: !21106)
!21110 = !DILocation(line: 6539, column: 23, scope: !21106)
!21111 = !DILocation(line: 6541, column: 16, scope: !21106)
!21112 = !DILocation(line: 6541, column: 14, scope: !21106)
!21113 = !DILocation(line: 6542, column: 11, scope: !21106)
!21114 = !DILocation(line: 6543, column: 18, scope: !21106)
!21115 = !DILocation(line: 6544, column: 11, scope: !21106)
!21116 = !DILocation(line: 6545, column: 11, scope: !21106)
!21117 = !DILocation(line: 6545, column: 28, scope: !21106)
!21118 = !DILocation(line: 6545, column: 38, scope: !21106)
!21119 = !DILocation(line: 6546, column: 21, scope: !21106)
!21120 = !DILocation(line: 6547, column: 14, scope: !21106)
!21121 = !DILocation(line: 6547, column: 29, scope: !21106)
!21122 = !DILocation(line: 6546, column: 13, scope: !21106)
!21123 = !DILocation(line: 6545, column: 44, scope: !21106)
!21124 = !DILocation(line: 6549, column: 19, scope: !21106)
!21125 = !DILocation(line: 6549, column: 29, scope: !21106)
!21126 = !DILocation(line: 6549, column: 11, scope: !21106)
!21127 = !DILocation(line: 6543, column: 4, scope: !21106)
!21128 = !DILocation(line: 6551, column: 3, scope: !21106)
!21129 = !DILocation(line: 6553, column: 20, scope: !21097)
!21130 = !DILocation(line: 6554, column: 15, scope: !21097)
!21131 = !DILocation(line: 6554, column: 27, scope: !21097)
!21132 = !DILocation(line: 6554, column: 6, scope: !21097)
!21133 = !DILocation(line: 6555, column: 35, scope: !21097)
!21134 = !DILocation(line: 6553, column: 3, scope: !21097)
!21135 = !DILocation(line: 6557, column: 30, scope: !21097)
!21136 = !DILocation(line: 6558, column: 18, scope: !21097)
!21137 = !DILocation(line: 6558, column: 30, scope: !21097)
!21138 = !DILocation(line: 6558, column: 9, scope: !21097)
!21139 = !DILocation(line: 6557, column: 14, scope: !21097)
!21140 = !DILocation(line: 6557, column: 12, scope: !21097)
!21141 = !DILocation(line: 6560, column: 12, scope: !21097)
!21142 = !DILocation(line: 6561, column: 8, scope: !21143)
!21143 = distinct !DILexicalBlock(scope: !21097, file: !3, line: 6561, column: 7)
!21144 = !DILocation(line: 6561, column: 17, scope: !21143)
!21145 = !DILocation(line: 6561, column: 37, scope: !21143)
!21146 = !DILocation(line: 6561, column: 35, scope: !21143)
!21147 = !DILocation(line: 6562, column: 7, scope: !21143)
!21148 = !DILocation(line: 6562, column: 12, scope: !21143)
!21149 = !DILocation(line: 6562, column: 21, scope: !21143)
!21150 = !DILocation(line: 6562, column: 48, scope: !21143)
!21151 = !DILocation(line: 6562, column: 46, scope: !21143)
!21152 = !DILocation(line: 6561, column: 7, scope: !21097)
!21153 = !DILocation(line: 6565, column: 13, scope: !21154)
!21154 = distinct !DILexicalBlock(scope: !21143, file: !3, line: 6563, column: 9)
!21155 = !DILocation(line: 6568, column: 3, scope: !21154)
!21156 = !DILocation(line: 6569, column: 20, scope: !21097)
!21157 = !DILocation(line: 6570, column: 15, scope: !21097)
!21158 = !DILocation(line: 6570, column: 27, scope: !21097)
!21159 = !DILocation(line: 6570, column: 6, scope: !21097)
!21160 = !DILocation(line: 6572, column: 6, scope: !21097)
!21161 = !DILocation(line: 6569, column: 3, scope: !21097)
!21162 = !DILocation(line: 6574, column: 30, scope: !21097)
!21163 = !DILocation(line: 6575, column: 18, scope: !21097)
!21164 = !DILocation(line: 6575, column: 30, scope: !21097)
!21165 = !DILocation(line: 6575, column: 9, scope: !21097)
!21166 = !DILocation(line: 6574, column: 14, scope: !21097)
!21167 = !DILocation(line: 6574, column: 12, scope: !21097)
!21168 = !DILocation(line: 6577, column: 12, scope: !21097)
!21169 = !DILocation(line: 6578, column: 20, scope: !21097)
!21170 = !DILocation(line: 6579, column: 15, scope: !21097)
!21171 = !DILocation(line: 6579, column: 27, scope: !21097)
!21172 = !DILocation(line: 6579, column: 6, scope: !21097)
!21173 = !DILocation(line: 6581, column: 6, scope: !21097)
!21174 = !DILocation(line: 6578, column: 3, scope: !21097)
!21175 = !DILocation(line: 6583, column: 31, scope: !21097)
!21176 = !DILocation(line: 6583, column: 15, scope: !21097)
!21177 = !DILocation(line: 6583, column: 13, scope: !21097)
!21178 = !DILocation(line: 6584, column: 17, scope: !21097)
!21179 = !DILocation(line: 6584, column: 16, scope: !21097)
!21180 = !DILocation(line: 6584, column: 13, scope: !21097)
!21181 = !DILocation(line: 6585, column: 20, scope: !21097)
!21182 = !DILocation(line: 6585, column: 55, scope: !21097)
!21183 = !DILocation(line: 6585, column: 3, scope: !21097)
!21184 = !DILocation(line: 6587, column: 20, scope: !21097)
!21185 = !DILocation(line: 6587, column: 3, scope: !21097)
!21186 = !DILocation(line: 6588, column: 3, scope: !21097)
!21187 = !DILocation(line: 6589, column: 13, scope: !21188)
!21188 = distinct !DILexicalBlock(scope: !21093, file: !3, line: 6589, column: 13)
!21189 = !DILocation(line: 6589, column: 27, scope: !21188)
!21190 = !DILocation(line: 6589, column: 13, scope: !21093)
!21191 = !DILocation(line: 6591, column: 29, scope: !21192)
!21192 = distinct !DILexicalBlock(scope: !21188, file: !3, line: 6589, column: 54)
!21193 = !DILocation(line: 6593, column: 8, scope: !21192)
!21194 = !DILocation(line: 6591, column: 3, scope: !21192)
!21195 = !DILocation(line: 6596, column: 16, scope: !21196)
!21196 = distinct !DILexicalBlock(scope: !21192, file: !3, line: 6596, column: 7)
!21197 = !DILocation(line: 6596, column: 8, scope: !21196)
!21198 = !DILocation(line: 6596, column: 25, scope: !21196)
!21199 = !DILocation(line: 6596, column: 46, scope: !21196)
!21200 = !DILocation(line: 6597, column: 16, scope: !21196)
!21201 = !DILocation(line: 6597, column: 8, scope: !21196)
!21202 = !DILocation(line: 6597, column: 24, scope: !21196)
!21203 = !DILocation(line: 6597, column: 40, scope: !21196)
!21204 = !DILocation(line: 6598, column: 16, scope: !21196)
!21205 = !DILocation(line: 6598, column: 8, scope: !21196)
!21206 = !DILocation(line: 6598, column: 24, scope: !21196)
!21207 = !DILocation(line: 6596, column: 7, scope: !21192)
!21208 = !DILocation(line: 6600, column: 27, scope: !21209)
!21209 = distinct !DILexicalBlock(scope: !21196, file: !3, line: 6598, column: 43)
!21210 = !DILocation(line: 6600, column: 26, scope: !21209)
!21211 = !DILocation(line: 6600, column: 4, scope: !21209)
!21212 = !DILocation(line: 6600, column: 13, scope: !21209)
!21213 = !DILocation(line: 6600, column: 23, scope: !21209)
!21214 = !DILocation(line: 6601, column: 27, scope: !21209)
!21215 = !DILocation(line: 6601, column: 26, scope: !21209)
!21216 = !DILocation(line: 6601, column: 4, scope: !21209)
!21217 = !DILocation(line: 6601, column: 13, scope: !21209)
!21218 = !DILocation(line: 6601, column: 23, scope: !21209)
!21219 = !DILocation(line: 6602, column: 19, scope: !21209)
!21220 = !DILocation(line: 6602, column: 29, scope: !21209)
!21221 = !DILocation(line: 6602, column: 40, scope: !21209)
!21222 = !DILocation(line: 6602, column: 4, scope: !21209)
!21223 = !DILocation(line: 6603, column: 32, scope: !21209)
!21224 = !DILocation(line: 6603, column: 4, scope: !21209)
!21225 = !DILocation(line: 6603, column: 12, scope: !21209)
!21226 = !DILocation(line: 6603, column: 22, scope: !21209)
!21227 = !DILocation(line: 6603, column: 30, scope: !21209)
!21228 = !DILocation(line: 6604, column: 3, scope: !21209)
!21229 = !DILocation(line: 6605, column: 10, scope: !21192)
!21230 = !DILocation(line: 6606, column: 20, scope: !21192)
!21231 = !DILocation(line: 6607, column: 15, scope: !21192)
!21232 = !DILocation(line: 6607, column: 27, scope: !21192)
!21233 = !DILocation(line: 6607, column: 6, scope: !21192)
!21234 = !DILocation(line: 6608, column: 35, scope: !21192)
!21235 = !DILocation(line: 6606, column: 3, scope: !21192)
!21236 = !DILocation(line: 6609, column: 20, scope: !21192)
!21237 = !DILocation(line: 6609, column: 3, scope: !21192)
!21238 = !DILocation(line: 6610, column: 3, scope: !21192)
!21239 = !DILocation(line: 6611, column: 13, scope: !21240)
!21240 = distinct !DILexicalBlock(scope: !21188, file: !3, line: 6611, column: 13)
!21241 = !DILocation(line: 6611, column: 27, scope: !21240)
!21242 = !DILocation(line: 6611, column: 13, scope: !21188)
!21243 = !DILocation(line: 6613, column: 33, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21240, file: !3, line: 6611, column: 54)
!21245 = !DILocation(line: 6614, column: 29, scope: !21244)
!21246 = !DILocation(line: 6614, column: 21, scope: !21244)
!21247 = !DILocation(line: 6614, column: 41, scope: !21244)
!21248 = !DILocation(line: 6614, column: 12, scope: !21244)
!21249 = !DILocation(line: 6613, column: 17, scope: !21244)
!21250 = !DILocation(line: 6613, column: 15, scope: !21244)
!21251 = !DILocation(line: 6618, column: 23, scope: !21244)
!21252 = !DILocation(line: 6620, column: 19, scope: !21244)
!21253 = !DILocation(line: 6620, column: 11, scope: !21244)
!21254 = !DILocation(line: 6619, column: 39, scope: !21244)
!21255 = !DILocation(line: 6619, column: 9, scope: !21244)
!21256 = !DILocation(line: 6618, column: 7, scope: !21244)
!21257 = !DILocation(line: 6617, column: 15, scope: !21244)
!21258 = !DILocation(line: 6621, column: 8, scope: !21259)
!21259 = distinct !DILexicalBlock(scope: !21244, file: !3, line: 6621, column: 7)
!21260 = !DILocation(line: 6621, column: 20, scope: !21259)
!21261 = !DILocation(line: 6621, column: 25, scope: !21259)
!21262 = !DILocation(line: 6621, column: 29, scope: !21259)
!21263 = !DILocation(line: 6621, column: 38, scope: !21259)
!21264 = !DILocation(line: 6621, column: 50, scope: !21259)
!21265 = !DILocation(line: 6621, column: 58, scope: !21259)
!21266 = !DILocation(line: 6621, column: 7, scope: !21244)
!21267 = !DILocation(line: 6623, column: 32, scope: !21268)
!21268 = distinct !DILexicalBlock(scope: !21259, file: !3, line: 6621, column: 64)
!21269 = !DILocation(line: 6623, column: 16, scope: !21268)
!21270 = !DILocation(line: 6623, column: 14, scope: !21268)
!21271 = !DILocation(line: 6625, column: 17, scope: !21268)
!21272 = !DILocation(line: 6625, column: 14, scope: !21268)
!21273 = !DILocation(line: 6626, column: 21, scope: !21268)
!21274 = !DILocation(line: 6627, column: 32, scope: !21268)
!21275 = !DILocation(line: 6626, column: 4, scope: !21268)
!21276 = !DILocation(line: 6628, column: 35, scope: !21268)
!21277 = !DILocation(line: 6628, column: 4, scope: !21268)
!21278 = !DILocation(line: 6628, column: 13, scope: !21268)
!21279 = !DILocation(line: 6628, column: 32, scope: !21268)
!21280 = !DILocation(line: 6630, column: 8, scope: !21281)
!21281 = distinct !DILexicalBlock(scope: !21268, file: !3, line: 6630, column: 8)
!21282 = !DILocation(line: 6630, column: 20, scope: !21281)
!21283 = !DILocation(line: 6630, column: 8, scope: !21268)
!21284 = !DILocation(line: 6631, column: 9, scope: !21285)
!21285 = distinct !DILexicalBlock(scope: !21286, file: !3, line: 6631, column: 9)
!21286 = distinct !DILexicalBlock(scope: !21281, file: !3, line: 6630, column: 47)
!21287 = !DILocation(line: 6631, column: 21, scope: !21285)
!21288 = !DILocation(line: 6631, column: 9, scope: !21286)
!21289 = !DILocation(line: 6632, column: 18, scope: !21290)
!21290 = distinct !DILexicalBlock(scope: !21285, file: !3, line: 6631, column: 43)
!21291 = !DILocation(line: 6634, column: 10, scope: !21290)
!21292 = !DILocation(line: 6633, column: 6, scope: !21290)
!21293 = !DILocation(line: 6633, column: 15, scope: !21290)
!21294 = !DILocation(line: 6633, column: 27, scope: !21290)
!21295 = !DILocation(line: 6633, column: 35, scope: !21290)
!21296 = !DILocation(line: 6636, column: 23, scope: !21290)
!21297 = !DILocation(line: 6640, column: 11, scope: !21290)
!21298 = !DILocation(line: 6639, column: 13, scope: !21290)
!21299 = !DILocation(line: 6639, column: 11, scope: !21290)
!21300 = !DILocation(line: 6637, column: 9, scope: !21290)
!21301 = !DILocation(line: 6641, column: 9, scope: !21290)
!21302 = !DILocation(line: 6636, column: 6, scope: !21290)
!21303 = !DILocation(line: 6648, column: 28, scope: !21290)
!21304 = !DILocation(line: 6648, column: 6, scope: !21290)
!21305 = !DILocation(line: 6648, column: 14, scope: !21290)
!21306 = !DILocation(line: 6648, column: 25, scope: !21290)
!21307 = !DILocation(line: 6650, column: 10, scope: !21290)
!21308 = !DILocation(line: 6649, column: 6, scope: !21290)
!21309 = !DILocation(line: 6649, column: 14, scope: !21290)
!21310 = !DILocation(line: 6649, column: 29, scope: !21290)
!21311 = !DILocation(line: 6649, column: 37, scope: !21290)
!21312 = !DILocation(line: 6651, column: 5, scope: !21290)
!21313 = !DILocation(line: 6652, column: 4, scope: !21286)
!21314 = !DILocation(line: 6653, column: 3, scope: !21268)
!21315 = !DILocation(line: 6654, column: 20, scope: !21244)
!21316 = !DILocation(line: 6654, column: 3, scope: !21244)
!21317 = !DILocation(line: 6655, column: 3, scope: !21244)
!21318 = !DILocation(line: 6657, column: 2, scope: !20704)
!21319 = !DILocation(line: 6658, column: 1, scope: !20704)
!21320 = distinct !DISubprogram(name: "AscIsrQDone", scope: !3, file: !3, line: 6850, type: !10729, scopeLine: 6851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!21321 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !21320, file: !3, line: 6850, type: !6375)
!21322 = !DILocation(line: 6850, column: 37, scope: !21320)
!21323 = !DILocalVariable(name: "next_qp", scope: !21320, file: !3, line: 6852, type: !5245)
!21324 = !DILocation(line: 6852, column: 8, scope: !21320)
!21325 = !DILocalVariable(name: "n_q_used", scope: !21320, file: !3, line: 6853, type: !5245)
!21326 = !DILocation(line: 6853, column: 8, scope: !21320)
!21327 = !DILocalVariable(name: "sg_list_qp", scope: !21320, file: !3, line: 6854, type: !5245)
!21328 = !DILocation(line: 6854, column: 8, scope: !21320)
!21329 = !DILocalVariable(name: "sg_queue_cnt", scope: !21320, file: !3, line: 6855, type: !5245)
!21330 = !DILocation(line: 6855, column: 8, scope: !21320)
!21331 = !DILocalVariable(name: "q_cnt", scope: !21320, file: !3, line: 6856, type: !5245)
!21332 = !DILocation(line: 6856, column: 8, scope: !21320)
!21333 = !DILocalVariable(name: "done_q_tail", scope: !21320, file: !3, line: 6857, type: !5245)
!21334 = !DILocation(line: 6857, column: 8, scope: !21320)
!21335 = !DILocalVariable(name: "tid_no", scope: !21320, file: !3, line: 6858, type: !5245)
!21336 = !DILocation(line: 6858, column: 8, scope: !21320)
!21337 = !DILocalVariable(name: "scsi_busy", scope: !21320, file: !3, line: 6859, type: !5245)
!21338 = !DILocation(line: 6859, column: 23, scope: !21320)
!21339 = !DILocalVariable(name: "target_id", scope: !21320, file: !3, line: 6860, type: !5245)
!21340 = !DILocation(line: 6860, column: 23, scope: !21320)
!21341 = !DILocalVariable(name: "iop_base", scope: !21320, file: !3, line: 6861, type: !7)
!21342 = !DILocation(line: 6861, column: 11, scope: !21320)
!21343 = !DILocalVariable(name: "q_addr", scope: !21320, file: !3, line: 6862, type: !5240)
!21344 = !DILocation(line: 6862, column: 9, scope: !21320)
!21345 = !DILocalVariable(name: "sg_q_addr", scope: !21320, file: !3, line: 6863, type: !5240)
!21346 = !DILocation(line: 6863, column: 9, scope: !21320)
!21347 = !DILocalVariable(name: "cur_target_qng", scope: !21320, file: !3, line: 6864, type: !5245)
!21348 = !DILocation(line: 6864, column: 8, scope: !21320)
!21349 = !DILocalVariable(name: "scsiq_buf", scope: !21320, file: !3, line: 6865, type: !5992)
!21350 = !DILocation(line: 6865, column: 17, scope: !21320)
!21351 = !DILocalVariable(name: "scsiq", scope: !21320, file: !3, line: 6866, type: !5991)
!21352 = !DILocation(line: 6866, column: 18, scope: !21320)
!21353 = !DILocalVariable(name: "false_overrun", scope: !21320, file: !3, line: 6867, type: !477)
!21354 = !DILocation(line: 6867, column: 7, scope: !21320)
!21355 = !DILocation(line: 6869, column: 13, scope: !21320)
!21356 = !DILocation(line: 6869, column: 22, scope: !21320)
!21357 = !DILocation(line: 6869, column: 11, scope: !21320)
!21358 = !DILocation(line: 6870, column: 11, scope: !21320)
!21359 = !DILocation(line: 6871, column: 8, scope: !21320)
!21360 = !DILocation(line: 6872, column: 23, scope: !21320)
!21361 = !DILocation(line: 6872, column: 16, scope: !21320)
!21362 = !DILocation(line: 6872, column: 14, scope: !21320)
!21363 = !DILocation(line: 6873, column: 11, scope: !21320)
!21364 = !DILocation(line: 6873, column: 9, scope: !21320)
!21365 = !DILocation(line: 6874, column: 28, scope: !21320)
!21366 = !DILocation(line: 6875, column: 16, scope: !21320)
!21367 = !DILocation(line: 6875, column: 23, scope: !21320)
!21368 = !DILocation(line: 6875, column: 7, scope: !21320)
!21369 = !DILocation(line: 6874, column: 12, scope: !21320)
!21370 = !DILocation(line: 6874, column: 10, scope: !21320)
!21371 = !DILocation(line: 6876, column: 6, scope: !21372)
!21372 = distinct !DILexicalBlock(scope: !21320, file: !3, line: 6876, column: 6)
!21373 = !DILocation(line: 6876, column: 14, scope: !21372)
!21374 = !DILocation(line: 6876, column: 6, scope: !21320)
!21375 = !DILocation(line: 6877, column: 3, scope: !21376)
!21376 = distinct !DILexicalBlock(scope: !21372, file: !3, line: 6876, column: 32)
!21377 = !DILocation(line: 6878, column: 12, scope: !21376)
!21378 = !DILocation(line: 6878, column: 10, scope: !21376)
!21379 = !DILocation(line: 6879, column: 40, scope: !21376)
!21380 = !DILocation(line: 6879, column: 50, scope: !21376)
!21381 = !DILocation(line: 6879, column: 58, scope: !21376)
!21382 = !DILocation(line: 6880, column: 12, scope: !21376)
!21383 = !DILocation(line: 6880, column: 21, scope: !21376)
!21384 = !DILocation(line: 6879, column: 18, scope: !21376)
!21385 = !DILocation(line: 6879, column: 16, scope: !21376)
!21386 = !DILocation(line: 6881, column: 20, scope: !21376)
!21387 = !DILocation(line: 6882, column: 15, scope: !21376)
!21388 = !DILocation(line: 6882, column: 22, scope: !21376)
!21389 = !DILocation(line: 6882, column: 6, scope: !21376)
!21390 = !DILocation(line: 6884, column: 14, scope: !21376)
!21391 = !DILocation(line: 6885, column: 7, scope: !21376)
!21392 = !DILocation(line: 6885, column: 16, scope: !21376)
!21393 = !DILocation(line: 6884, column: 6, scope: !21376)
!21394 = !DILocation(line: 6881, column: 3, scope: !21376)
!21395 = !DILocation(line: 6887, column: 12, scope: !21376)
!21396 = !DILocation(line: 6887, column: 10, scope: !21376)
!21397 = !DILocation(line: 6888, column: 15, scope: !21376)
!21398 = !DILocation(line: 6888, column: 13, scope: !21376)
!21399 = !DILocation(line: 6889, column: 8, scope: !21400)
!21400 = distinct !DILexicalBlock(scope: !21376, file: !3, line: 6889, column: 7)
!21401 = !DILocation(line: 6889, column: 15, scope: !21400)
!21402 = !DILocation(line: 6889, column: 20, scope: !21400)
!21403 = !DILocation(line: 6889, column: 34, scope: !21400)
!21404 = !DILocation(line: 6889, column: 7, scope: !21376)
!21405 = !DILocation(line: 6890, column: 16, scope: !21406)
!21406 = distinct !DILexicalBlock(scope: !21400, file: !3, line: 6889, column: 40)
!21407 = !DILocation(line: 6890, column: 14, scope: !21406)
!21408 = !DILocation(line: 6891, column: 17, scope: !21406)
!21409 = !DILocation(line: 6891, column: 15, scope: !21406)
!21410 = !DILocation(line: 6892, column: 15, scope: !21411)
!21411 = distinct !DILexicalBlock(scope: !21406, file: !3, line: 6892, column: 4)
!21412 = !DILocation(line: 6892, column: 9, scope: !21411)
!21413 = !DILocation(line: 6892, column: 20, scope: !21414)
!21414 = distinct !DILexicalBlock(scope: !21411, file: !3, line: 6892, column: 4)
!21415 = !DILocation(line: 6892, column: 28, scope: !21414)
!21416 = !DILocation(line: 6892, column: 26, scope: !21414)
!21417 = !DILocation(line: 6892, column: 4, scope: !21411)
!21418 = !DILocation(line: 6893, column: 34, scope: !21419)
!21419 = distinct !DILexicalBlock(scope: !21414, file: !3, line: 6892, column: 51)
!21420 = !DILocation(line: 6894, column: 22, scope: !21419)
!21421 = !DILocation(line: 6895, column: 15, scope: !21419)
!21422 = !DILocation(line: 6894, column: 13, scope: !21419)
!21423 = !DILocation(line: 6893, column: 18, scope: !21419)
!21424 = !DILocation(line: 6893, column: 16, scope: !21419)
!21425 = !DILocation(line: 6897, column: 17, scope: !21419)
!21426 = !DILocation(line: 6897, column: 15, scope: !21419)
!21427 = !DILocation(line: 6898, column: 9, scope: !21428)
!21428 = distinct !DILexicalBlock(scope: !21419, file: !3, line: 6898, column: 9)
!21429 = !DILocation(line: 6898, column: 20, scope: !21428)
!21430 = !DILocation(line: 6898, column: 9, scope: !21419)
!21431 = !DILocation(line: 6899, column: 25, scope: !21432)
!21432 = distinct !DILexicalBlock(scope: !21428, file: !3, line: 6898, column: 38)
!21433 = !DILocation(line: 6899, column: 6, scope: !21432)
!21434 = !DILocation(line: 6901, column: 6, scope: !21432)
!21435 = !DILocation(line: 6901, column: 13, scope: !21432)
!21436 = !DILocation(line: 6901, column: 16, scope: !21432)
!21437 = !DILocation(line: 6901, column: 26, scope: !21432)
!21438 = !DILocation(line: 6902, column: 6, scope: !21432)
!21439 = !DILocation(line: 6902, column: 13, scope: !21432)
!21440 = !DILocation(line: 6902, column: 16, scope: !21432)
!21441 = !DILocation(line: 6902, column: 26, scope: !21432)
!21442 = !DILocation(line: 6904, column: 6, scope: !21432)
!21443 = !DILocation(line: 6906, column: 22, scope: !21419)
!21444 = !DILocation(line: 6907, column: 17, scope: !21419)
!21445 = !DILocation(line: 6907, column: 27, scope: !21419)
!21446 = !DILocation(line: 6907, column: 8, scope: !21419)
!21447 = !DILocation(line: 6906, column: 5, scope: !21419)
!21448 = !DILocation(line: 6910, column: 4, scope: !21419)
!21449 = !DILocation(line: 6892, column: 47, scope: !21414)
!21450 = !DILocation(line: 6892, column: 4, scope: !21414)
!21451 = distinct !{!21451, !21417, !21452}
!21452 = !DILocation(line: 6910, column: 4, scope: !21411)
!21453 = !DILocation(line: 6911, column: 15, scope: !21406)
!21454 = !DILocation(line: 6911, column: 28, scope: !21406)
!21455 = !DILocation(line: 6911, column: 13, scope: !21406)
!21456 = !DILocation(line: 6912, column: 4, scope: !21406)
!21457 = !DILocation(line: 6913, column: 3, scope: !21406)
!21458 = !DILocation(line: 6914, column: 7, scope: !21459)
!21459 = distinct !DILexicalBlock(scope: !21376, file: !3, line: 6914, column: 7)
!21460 = !DILocation(line: 6914, column: 16, scope: !21459)
!21461 = !DILocation(line: 6914, column: 37, scope: !21459)
!21462 = !DILocation(line: 6914, column: 35, scope: !21459)
!21463 = !DILocation(line: 6914, column: 7, scope: !21376)
!21464 = !DILocation(line: 6915, column: 37, scope: !21465)
!21465 = distinct !DILexicalBlock(scope: !21459, file: !3, line: 6914, column: 48)
!21466 = !DILocation(line: 6919, column: 11, scope: !21465)
!21467 = !DILocation(line: 6919, column: 18, scope: !21465)
!21468 = !DILocation(line: 6920, column: 11, scope: !21465)
!21469 = !DILocation(line: 6918, column: 13, scope: !21465)
!21470 = !DILocation(line: 6918, column: 11, scope: !21465)
!21471 = !DILocation(line: 6916, column: 9, scope: !21465)
!21472 = !DILocation(line: 6915, column: 21, scope: !21465)
!21473 = !DILocation(line: 6915, column: 19, scope: !21465)
!21474 = !DILocation(line: 6921, column: 8, scope: !21475)
!21475 = distinct !DILexicalBlock(scope: !21465, file: !3, line: 6921, column: 8)
!21476 = !DILocation(line: 6921, column: 25, scope: !21475)
!21477 = !DILocation(line: 6921, column: 34, scope: !21475)
!21478 = !DILocation(line: 6921, column: 46, scope: !21475)
!21479 = !DILocation(line: 6921, column: 23, scope: !21475)
!21480 = !DILocation(line: 6921, column: 8, scope: !21465)
!21481 = !DILocation(line: 6922, column: 33, scope: !21482)
!21482 = distinct !DILexicalBlock(scope: !21475, file: !3, line: 6921, column: 55)
!21483 = !DILocation(line: 6922, column: 17, scope: !21482)
!21484 = !DILocation(line: 6922, column: 15, scope: !21482)
!21485 = !DILocation(line: 6924, column: 19, scope: !21482)
!21486 = !DILocation(line: 6924, column: 18, scope: !21482)
!21487 = !DILocation(line: 6924, column: 15, scope: !21482)
!21488 = !DILocation(line: 6925, column: 22, scope: !21482)
!21489 = !DILocation(line: 6927, column: 8, scope: !21482)
!21490 = !DILocation(line: 6925, column: 5, scope: !21482)
!21491 = !DILocation(line: 6928, column: 37, scope: !21482)
!21492 = !DILocation(line: 6928, column: 36, scope: !21482)
!21493 = !DILocation(line: 6928, column: 5, scope: !21482)
!21494 = !DILocation(line: 6928, column: 14, scope: !21482)
!21495 = !DILocation(line: 6928, column: 33, scope: !21482)
!21496 = !DILocation(line: 6929, column: 4, scope: !21482)
!21497 = !DILocation(line: 6930, column: 3, scope: !21465)
!21498 = !DILocation(line: 6931, column: 7, scope: !21499)
!21499 = distinct !DILexicalBlock(scope: !21376, file: !3, line: 6931, column: 7)
!21500 = !DILocation(line: 6931, column: 16, scope: !21499)
!21501 = !DILocation(line: 6931, column: 33, scope: !21499)
!21502 = !DILocation(line: 6931, column: 30, scope: !21499)
!21503 = !DILocation(line: 6931, column: 7, scope: !21376)
!21504 = !DILocation(line: 6932, column: 30, scope: !21505)
!21505 = distinct !DILexicalBlock(scope: !21499, file: !3, line: 6931, column: 43)
!21506 = !DILocation(line: 6932, column: 4, scope: !21505)
!21507 = !DILocation(line: 6932, column: 13, scope: !21505)
!21508 = !DILocation(line: 6932, column: 27, scope: !21505)
!21509 = !DILocation(line: 6933, column: 8, scope: !21510)
!21510 = distinct !DILexicalBlock(scope: !21505, file: !3, line: 6933, column: 8)
!21511 = !DILocation(line: 6933, column: 17, scope: !21510)
!21512 = !DILocation(line: 6933, column: 29, scope: !21510)
!21513 = !DILocation(line: 6933, column: 37, scope: !21510)
!21514 = !DILocation(line: 6933, column: 8, scope: !21505)
!21515 = !DILocation(line: 6934, column: 5, scope: !21516)
!21516 = distinct !DILexicalBlock(scope: !21510, file: !3, line: 6933, column: 43)
!21517 = !DILocation(line: 6934, column: 14, scope: !21516)
!21518 = !DILocation(line: 6934, column: 26, scope: !21516)
!21519 = !DILocation(line: 6934, column: 33, scope: !21516)
!21520 = !DILocation(line: 6935, column: 4, scope: !21516)
!21521 = !DILocation(line: 6936, column: 3, scope: !21505)
!21522 = !DILocation(line: 6937, column: 23, scope: !21523)
!21523 = distinct !DILexicalBlock(scope: !21499, file: !3, line: 6936, column: 10)
!21524 = !DILocation(line: 6937, column: 4, scope: !21523)
!21525 = !DILocation(line: 6938, column: 4, scope: !21523)
!21526 = !DILocation(line: 6938, column: 11, scope: !21523)
!21527 = !DILocation(line: 6938, column: 14, scope: !21523)
!21528 = !DILocation(line: 6938, column: 24, scope: !21523)
!21529 = !DILocation(line: 6939, column: 4, scope: !21523)
!21530 = !DILocation(line: 6941, column: 8, scope: !21531)
!21531 = distinct !DILexicalBlock(scope: !21376, file: !3, line: 6941, column: 7)
!21532 = !DILocation(line: 6941, column: 15, scope: !21531)
!21533 = !DILocation(line: 6941, column: 18, scope: !21531)
!21534 = !DILocation(line: 6941, column: 26, scope: !21531)
!21535 = !DILocation(line: 6941, column: 34, scope: !21531)
!21536 = !DILocation(line: 6942, column: 9, scope: !21531)
!21537 = !DILocation(line: 6942, column: 16, scope: !21531)
!21538 = !DILocation(line: 6942, column: 25, scope: !21531)
!21539 = !DILocation(line: 6942, column: 39, scope: !21531)
!21540 = !DILocation(line: 6941, column: 7, scope: !21376)
!21541 = !DILocation(line: 6943, column: 4, scope: !21542)
!21542 = distinct !DILexicalBlock(scope: !21531, file: !3, line: 6942, column: 46)
!21543 = !DILocation(line: 6944, column: 14, scope: !21544)
!21544 = distinct !DILexicalBlock(scope: !21531, file: !3, line: 6944, column: 14)
!21545 = !DILocation(line: 6944, column: 21, scope: !21544)
!21546 = !DILocation(line: 6944, column: 30, scope: !21544)
!21547 = !DILocation(line: 6944, column: 14, scope: !21531)
!21548 = !DILocation(line: 6949, column: 18, scope: !21549)
!21549 = distinct !DILexicalBlock(scope: !21544, file: !3, line: 6944, column: 42)
!21550 = !DILocation(line: 6950, column: 8, scope: !21551)
!21551 = distinct !DILexicalBlock(scope: !21549, file: !3, line: 6950, column: 8)
!21552 = !DILocation(line: 6950, column: 15, scope: !21551)
!21553 = !DILocation(line: 6950, column: 27, scope: !21551)
!21554 = !DILocation(line: 6950, column: 8, scope: !21549)
!21555 = !DILocation(line: 6951, column: 28, scope: !21556)
!21556 = distinct !DILexicalBlock(scope: !21551, file: !3, line: 6950, column: 33)
!21557 = !DILocation(line: 6951, column: 35, scope: !21556)
!21558 = !DILocation(line: 6951, column: 5, scope: !21556)
!21559 = !DILocation(line: 6951, column: 12, scope: !21556)
!21560 = !DILocation(line: 6951, column: 25, scope: !21556)
!21561 = !DILocation(line: 6952, column: 4, scope: !21556)
!21562 = !DILocation(line: 6953, column: 8, scope: !21563)
!21563 = distinct !DILexicalBlock(scope: !21549, file: !3, line: 6953, column: 8)
!21564 = !DILocation(line: 6953, column: 15, scope: !21563)
!21565 = !DILocation(line: 6953, column: 18, scope: !21563)
!21566 = !DILocation(line: 6953, column: 28, scope: !21563)
!21567 = !DILocation(line: 6953, column: 8, scope: !21549)
!21568 = !DILocation(line: 6954, column: 9, scope: !21569)
!21569 = distinct !DILexicalBlock(scope: !21570, file: !3, line: 6954, column: 9)
!21570 = distinct !DILexicalBlock(scope: !21563, file: !3, line: 6953, column: 46)
!21571 = !DILocation(line: 6954, column: 16, scope: !21569)
!21572 = !DILocation(line: 6954, column: 19, scope: !21569)
!21573 = !DILocation(line: 6954, column: 29, scope: !21569)
!21574 = !DILocation(line: 6954, column: 9, scope: !21570)
!21575 = !DILocation(line: 6956, column: 11, scope: !21576)
!21576 = distinct !DILexicalBlock(scope: !21577, file: !3, line: 6956, column: 10)
!21577 = distinct !DILexicalBlock(scope: !21569, file: !3, line: 6955, column: 32)
!21578 = !DILocation(line: 6957, column: 11, scope: !21576)
!21579 = !DILocation(line: 6957, column: 16, scope: !21576)
!21580 = !DILocation(line: 6958, column: 10, scope: !21576)
!21581 = !DILocation(line: 6956, column: 10, scope: !21577)
!21582 = !DILocation(line: 6959, column: 7, scope: !21583)
!21583 = distinct !DILexicalBlock(scope: !21576, file: !3, line: 6958, column: 16)
!21584 = !DILocation(line: 6959, column: 14, scope: !21583)
!21585 = !DILocation(line: 6959, column: 17, scope: !21583)
!21586 = !DILocation(line: 6959, column: 27, scope: !21583)
!21587 = !DILocation(line: 6961, column: 7, scope: !21583)
!21588 = !DILocation(line: 6961, column: 14, scope: !21583)
!21589 = !DILocation(line: 6961, column: 17, scope: !21583)
!21590 = !DILocation(line: 6961, column: 27, scope: !21583)
!21591 = !DILocation(line: 6963, column: 6, scope: !21583)
!21592 = !DILocation(line: 6963, column: 17, scope: !21593)
!21593 = distinct !DILexicalBlock(scope: !21576, file: !3, line: 6963, column: 17)
!21594 = !DILocation(line: 6963, column: 17, scope: !21576)
!21595 = !DILocation(line: 6964, column: 7, scope: !21596)
!21596 = distinct !DILexicalBlock(scope: !21593, file: !3, line: 6963, column: 32)
!21597 = !DILocation(line: 6964, column: 14, scope: !21596)
!21598 = !DILocation(line: 6964, column: 17, scope: !21596)
!21599 = !DILocation(line: 6964, column: 27, scope: !21596)
!21600 = !DILocation(line: 6966, column: 7, scope: !21596)
!21601 = !DILocation(line: 6966, column: 14, scope: !21596)
!21602 = !DILocation(line: 6966, column: 17, scope: !21596)
!21603 = !DILocation(line: 6966, column: 27, scope: !21596)
!21604 = !DILocation(line: 6968, column: 6, scope: !21596)
!21605 = !DILocation(line: 6969, column: 5, scope: !21577)
!21606 = !DILocation(line: 6969, column: 16, scope: !21607)
!21607 = distinct !DILexicalBlock(scope: !21569, file: !3, line: 6969, column: 16)
!21608 = !DILocation(line: 6969, column: 23, scope: !21607)
!21609 = !DILocation(line: 6969, column: 26, scope: !21607)
!21610 = !DILocation(line: 6969, column: 36, scope: !21607)
!21611 = !DILocation(line: 6969, column: 16, scope: !21569)
!21612 = !DILocation(line: 6971, column: 18, scope: !21613)
!21613 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 6970, column: 42)
!21614 = !DILocation(line: 6971, column: 6, scope: !21613)
!21615 = !DILocation(line: 6972, column: 6, scope: !21613)
!21616 = !DILocation(line: 6975, column: 6, scope: !21617)
!21617 = distinct !DILexicalBlock(scope: !21618, file: !3, line: 6975, column: 6)
!21618 = distinct !DILexicalBlock(scope: !21619, file: !3, line: 6975, column: 6)
!21619 = distinct !DILexicalBlock(scope: !21620, file: !3, line: 6975, column: 6)
!21620 = distinct !DILexicalBlock(scope: !21613, file: !3, line: 6975, column: 6)
!21621 = !DILocation(line: 6976, column: 6, scope: !21613)
!21622 = !DILocation(line: 6977, column: 6, scope: !21613)
!21623 = !DILocation(line: 6979, column: 6, scope: !21613)
!21624 = !DILocation(line: 6980, column: 6, scope: !21613)
!21625 = !DILocation(line: 6981, column: 5, scope: !21613)
!21626 = !DILocation(line: 6982, column: 4, scope: !21570)
!21627 = !DILocation(line: 6983, column: 9, scope: !21628)
!21628 = distinct !DILexicalBlock(scope: !21549, file: !3, line: 6983, column: 8)
!21629 = !DILocation(line: 6983, column: 16, scope: !21628)
!21630 = !DILocation(line: 6983, column: 21, scope: !21628)
!21631 = !DILocation(line: 6983, column: 39, scope: !21628)
!21632 = !DILocation(line: 6983, column: 8, scope: !21549)
!21633 = !DILocation(line: 6984, column: 22, scope: !21634)
!21634 = distinct !DILexicalBlock(scope: !21628, file: !3, line: 6983, column: 45)
!21635 = !DILocation(line: 6984, column: 31, scope: !21634)
!21636 = !DILocation(line: 6984, column: 5, scope: !21634)
!21637 = !DILocation(line: 6985, column: 4, scope: !21634)
!21638 = !DILocation(line: 6986, column: 26, scope: !21639)
!21639 = distinct !DILexicalBlock(scope: !21640, file: !3, line: 6986, column: 9)
!21640 = distinct !DILexicalBlock(scope: !21628, file: !3, line: 6985, column: 11)
!21641 = !DILocation(line: 6987, column: 21, scope: !21639)
!21642 = !DILocation(line: 6987, column: 28, scope: !21639)
!21643 = !DILocation(line: 6987, column: 12, scope: !21639)
!21644 = !DILocation(line: 6986, column: 10, scope: !21639)
!21645 = !DILocation(line: 6989, column: 10, scope: !21639)
!21646 = !DILocation(line: 6986, column: 9, scope: !21640)
!21647 = !DILocation(line: 6990, column: 34, scope: !21648)
!21648 = distinct !DILexicalBlock(scope: !21639, file: !3, line: 6989, column: 26)
!21649 = !DILocation(line: 6990, column: 33, scope: !21648)
!21650 = !DILocation(line: 6990, column: 6, scope: !21648)
!21651 = !DILocation(line: 6990, column: 15, scope: !21648)
!21652 = !DILocation(line: 6990, column: 30, scope: !21648)
!21653 = !DILocation(line: 6991, column: 10, scope: !21654)
!21654 = distinct !DILexicalBlock(scope: !21648, file: !3, line: 6991, column: 10)
!21655 = !DILocation(line: 6991, column: 17, scope: !21654)
!21656 = !DILocation(line: 6991, column: 20, scope: !21654)
!21657 = !DILocation(line: 6991, column: 30, scope: !21654)
!21658 = !DILocation(line: 6991, column: 10, scope: !21648)
!21659 = !DILocation(line: 6993, column: 12, scope: !21660)
!21660 = distinct !DILexicalBlock(scope: !21654, file: !3, line: 6991, column: 46)
!21661 = !DILocation(line: 6993, column: 11, scope: !21660)
!21662 = !DILocation(line: 6992, column: 7, scope: !21660)
!21663 = !DILocation(line: 6992, column: 16, scope: !21660)
!21664 = !DILocation(line: 6992, column: 28, scope: !21660)
!21665 = !DILocation(line: 6994, column: 6, scope: !21660)
!21666 = !DILocation(line: 6995, column: 5, scope: !21648)
!21667 = !DILocation(line: 6997, column: 4, scope: !21549)
!21668 = !DILocation(line: 6999, column: 23, scope: !21669)
!21669 = distinct !DILexicalBlock(scope: !21544, file: !3, line: 6998, column: 10)
!21670 = !DILocation(line: 6999, column: 4, scope: !21669)
!21671 = !DILabel(scope: !21669, name: "FATAL_ERR_QDONE", file: !3, line: 7000)
!21672 = !DILocation(line: 7000, column: 2, scope: !21669)
!21673 = !DILocation(line: 7001, column: 9, scope: !21674)
!21674 = distinct !DILexicalBlock(scope: !21669, file: !3, line: 7001, column: 8)
!21675 = !DILocation(line: 7001, column: 16, scope: !21674)
!21676 = !DILocation(line: 7001, column: 21, scope: !21674)
!21677 = !DILocation(line: 7001, column: 39, scope: !21674)
!21678 = !DILocation(line: 7001, column: 8, scope: !21669)
!21679 = !DILocation(line: 7002, column: 22, scope: !21680)
!21680 = distinct !DILexicalBlock(scope: !21674, file: !3, line: 7001, column: 45)
!21681 = !DILocation(line: 7002, column: 31, scope: !21680)
!21682 = !DILocation(line: 7002, column: 5, scope: !21680)
!21683 = !DILocation(line: 7003, column: 4, scope: !21680)
!21684 = !DILocation(line: 7004, column: 4, scope: !21669)
!21685 = !DILocation(line: 7007, column: 2, scope: !21320)
!21686 = !DILocation(line: 7008, column: 1, scope: !21320)
!21687 = distinct !DISubprogram(name: "AscSetChipSDTR", scope: !3, file: !3, line: 6355, type: !21688, scopeLine: 6356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!21688 = !DISubroutineType(types: !21689)
!21689 = !{null, !7, !5245, !5245}
!21690 = !DILocalVariable(name: "iop_base", arg: 1, scope: !21687, file: !3, line: 6355, type: !7)
!21691 = !DILocation(line: 6355, column: 37, scope: !21687)
!21692 = !DILocalVariable(name: "sdtr_data", arg: 2, scope: !21687, file: !3, line: 6355, type: !5245)
!21693 = !DILocation(line: 6355, column: 53, scope: !21687)
!21694 = !DILocalVariable(name: "tid_no", arg: 3, scope: !21687, file: !3, line: 6355, type: !5245)
!21695 = !DILocation(line: 6355, column: 70, scope: !21687)
!21696 = !DILocation(line: 6357, column: 23, scope: !21687)
!21697 = !DILocation(line: 6357, column: 33, scope: !21687)
!21698 = !DILocation(line: 6357, column: 41, scope: !21687)
!21699 = !DILocation(line: 6357, column: 2, scope: !21687)
!21700 = !DILocation(line: 6358, column: 2, scope: !21687)
!21701 = !DILocation(line: 6359, column: 1, scope: !21687)
!21702 = distinct !DISubprogram(name: "AscMemWordCopyPtrFromLram", scope: !3, file: !3, line: 3886, type: !10385, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!21703 = !DILocalVariable(name: "iop_base", arg: 1, scope: !21702, file: !3, line: 3886, type: !7)
!21704 = !DILocation(line: 3886, column: 36, scope: !21702)
!21705 = !DILocalVariable(name: "s_addr", arg: 2, scope: !21702, file: !3, line: 3887, type: !5240)
!21706 = !DILocation(line: 3887, column: 13, scope: !21702)
!21707 = !DILocalVariable(name: "d_buffer", arg: 3, scope: !21702, file: !3, line: 3887, type: !5252)
!21708 = !DILocation(line: 3887, column: 28, scope: !21702)
!21709 = !DILocalVariable(name: "words", arg: 4, scope: !21702, file: !3, line: 3887, type: !245)
!21710 = !DILocation(line: 3887, column: 42, scope: !21702)
!21711 = !DILocalVariable(name: "i", scope: !21702, file: !3, line: 3889, type: !245)
!21712 = !DILocation(line: 3889, column: 6, scope: !21702)
!21713 = !DILocalVariable(name: "word", scope: !21702, file: !3, line: 3890, type: !5240)
!21714 = !DILocation(line: 3890, column: 9, scope: !21702)
!21715 = !DILocation(line: 3892, column: 2, scope: !21702)
!21716 = !DILocation(line: 3893, column: 9, scope: !21717)
!21717 = distinct !DILexicalBlock(scope: !21702, file: !3, line: 3893, column: 2)
!21718 = !DILocation(line: 3893, column: 7, scope: !21717)
!21719 = !DILocation(line: 3893, column: 14, scope: !21720)
!21720 = distinct !DILexicalBlock(scope: !21717, file: !3, line: 3893, column: 2)
!21721 = !DILocation(line: 3893, column: 22, scope: !21720)
!21722 = !DILocation(line: 3893, column: 20, scope: !21720)
!21723 = !DILocation(line: 3893, column: 16, scope: !21720)
!21724 = !DILocation(line: 3893, column: 2, scope: !21717)
!21725 = !DILocation(line: 3894, column: 10, scope: !21726)
!21726 = distinct !DILexicalBlock(scope: !21720, file: !3, line: 3893, column: 37)
!21727 = !DILocation(line: 3894, column: 8, scope: !21726)
!21728 = !DILocation(line: 3895, column: 17, scope: !21726)
!21729 = !DILocation(line: 3895, column: 22, scope: !21726)
!21730 = !DILocation(line: 3895, column: 3, scope: !21726)
!21731 = !DILocation(line: 3895, column: 12, scope: !21726)
!21732 = !DILocation(line: 3895, column: 15, scope: !21726)
!21733 = !DILocation(line: 3896, column: 22, scope: !21726)
!21734 = !DILocation(line: 3896, column: 27, scope: !21726)
!21735 = !DILocation(line: 3896, column: 33, scope: !21726)
!21736 = !DILocation(line: 3896, column: 21, scope: !21726)
!21737 = !DILocation(line: 3896, column: 3, scope: !21726)
!21738 = !DILocation(line: 3896, column: 12, scope: !21726)
!21739 = !DILocation(line: 3896, column: 14, scope: !21726)
!21740 = !DILocation(line: 3896, column: 19, scope: !21726)
!21741 = !DILocation(line: 3897, column: 2, scope: !21726)
!21742 = !DILocation(line: 3893, column: 31, scope: !21720)
!21743 = !DILocation(line: 3893, column: 2, scope: !21720)
!21744 = distinct !{!21744, !21724, !21745}
!21745 = !DILocation(line: 3897, column: 2, scope: !21717)
!21746 = !DILocation(line: 3898, column: 1, scope: !21702)
!21747 = distinct !DISubprogram(name: "AscCalSDTRData", scope: !3, file: !3, line: 6314, type: !9497, scopeLine: 6315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!21748 = !DILocalVariable(name: "asc_dvc", arg: 1, scope: !21747, file: !3, line: 6314, type: !6375)
!21749 = !DILocation(line: 6314, column: 29, scope: !21747)
!21750 = !DILocalVariable(name: "sdtr_period", arg: 2, scope: !21747, file: !3, line: 6314, type: !5245)
!21751 = !DILocation(line: 6314, column: 44, scope: !21747)
!21752 = !DILocalVariable(name: "syn_offset", arg: 3, scope: !21747, file: !3, line: 6314, type: !5245)
!21753 = !DILocation(line: 6314, column: 63, scope: !21747)
!21754 = !DILocalVariable(name: "byte", scope: !21747, file: !3, line: 6316, type: !5245)
!21755 = !DILocation(line: 6316, column: 8, scope: !21747)
!21756 = !DILocalVariable(name: "sdtr_period_ix", scope: !21747, file: !3, line: 6317, type: !5245)
!21757 = !DILocation(line: 6317, column: 8, scope: !21747)
!21758 = !DILocation(line: 6319, column: 40, scope: !21747)
!21759 = !DILocation(line: 6319, column: 49, scope: !21747)
!21760 = !DILocation(line: 6319, column: 19, scope: !21747)
!21761 = !DILocation(line: 6319, column: 17, scope: !21747)
!21762 = !DILocation(line: 6320, column: 6, scope: !21763)
!21763 = distinct !DILexicalBlock(scope: !21747, file: !3, line: 6320, column: 6)
!21764 = !DILocation(line: 6320, column: 23, scope: !21763)
!21765 = !DILocation(line: 6320, column: 32, scope: !21763)
!21766 = !DILocation(line: 6320, column: 21, scope: !21763)
!21767 = !DILocation(line: 6320, column: 6, scope: !21747)
!21768 = !DILocation(line: 6321, column: 3, scope: !21763)
!21769 = !DILocation(line: 6322, column: 10, scope: !21747)
!21770 = !DILocation(line: 6322, column: 25, scope: !21747)
!21771 = !DILocation(line: 6322, column: 34, scope: !21747)
!21772 = !DILocation(line: 6322, column: 45, scope: !21747)
!21773 = !DILocation(line: 6322, column: 31, scope: !21747)
!21774 = !DILocation(line: 6322, column: 9, scope: !21747)
!21775 = !DILocation(line: 6322, column: 7, scope: !21747)
!21776 = !DILocation(line: 6323, column: 9, scope: !21747)
!21777 = !DILocation(line: 6323, column: 2, scope: !21747)
!21778 = !DILocation(line: 6324, column: 1, scope: !21747)
!21779 = distinct !DISubprogram(name: "_AscCopyLramScsiDoneQ", scope: !3, file: !3, line: 6689, type: !21780, scopeLine: 6692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!21780 = !DISubroutineType(types: !21781)
!21781 = !{!5245, !7, !5240, !5991, !7}
!21782 = !DILocalVariable(name: "iop_base", arg: 1, scope: !21779, file: !3, line: 6689, type: !7)
!21783 = !DILocation(line: 6689, column: 32, scope: !21779)
!21784 = !DILocalVariable(name: "q_addr", arg: 2, scope: !21779, file: !3, line: 6690, type: !5240)
!21785 = !DILocation(line: 6690, column: 16, scope: !21779)
!21786 = !DILocalVariable(name: "scsiq", arg: 3, scope: !21779, file: !3, line: 6691, type: !5991)
!21787 = !DILocation(line: 6691, column: 25, scope: !21779)
!21788 = !DILocalVariable(name: "max_dma_count", arg: 4, scope: !21779, file: !3, line: 6691, type: !7)
!21789 = !DILocation(line: 6691, column: 45, scope: !21779)
!21790 = !DILocalVariable(name: "_val", scope: !21779, file: !3, line: 6693, type: !5240)
!21791 = !DILocation(line: 6693, column: 9, scope: !21779)
!21792 = !DILocalVariable(name: "sg_queue_cnt", scope: !21779, file: !3, line: 6694, type: !5245)
!21793 = !DILocation(line: 6694, column: 8, scope: !21779)
!21794 = !DILocation(line: 6696, column: 14, scope: !21779)
!21795 = !DILocation(line: 6697, column: 7, scope: !21779)
!21796 = !DILocation(line: 6697, column: 14, scope: !21779)
!21797 = !DILocation(line: 6698, column: 16, scope: !21779)
!21798 = !DILocation(line: 6698, column: 7, scope: !21779)
!21799 = !DILocation(line: 6696, column: 2, scope: !21779)
!21800 = !DILocation(line: 6701, column: 25, scope: !21779)
!21801 = !DILocation(line: 6702, column: 20, scope: !21779)
!21802 = !DILocation(line: 6702, column: 27, scope: !21779)
!21803 = !DILocation(line: 6702, column: 11, scope: !21779)
!21804 = !DILocation(line: 6701, column: 9, scope: !21779)
!21805 = !DILocation(line: 6701, column: 7, scope: !21779)
!21806 = !DILocation(line: 6703, column: 27, scope: !21779)
!21807 = !DILocation(line: 6703, column: 20, scope: !21779)
!21808 = !DILocation(line: 6703, column: 2, scope: !21779)
!21809 = !DILocation(line: 6703, column: 9, scope: !21779)
!21810 = !DILocation(line: 6703, column: 18, scope: !21779)
!21811 = !DILocation(line: 6704, column: 24, scope: !21779)
!21812 = !DILocation(line: 6704, column: 29, scope: !21779)
!21813 = !DILocation(line: 6704, column: 16, scope: !21779)
!21814 = !DILocation(line: 6704, column: 2, scope: !21779)
!21815 = !DILocation(line: 6704, column: 9, scope: !21779)
!21816 = !DILocation(line: 6704, column: 14, scope: !21779)
!21817 = !DILocation(line: 6705, column: 25, scope: !21779)
!21818 = !DILocation(line: 6706, column: 20, scope: !21779)
!21819 = !DILocation(line: 6706, column: 27, scope: !21779)
!21820 = !DILocation(line: 6706, column: 11, scope: !21779)
!21821 = !DILocation(line: 6705, column: 9, scope: !21779)
!21822 = !DILocation(line: 6705, column: 7, scope: !21779)
!21823 = !DILocation(line: 6707, column: 23, scope: !21779)
!21824 = !DILocation(line: 6707, column: 16, scope: !21779)
!21825 = !DILocation(line: 6707, column: 2, scope: !21779)
!21826 = !DILocation(line: 6707, column: 9, scope: !21779)
!21827 = !DILocation(line: 6707, column: 14, scope: !21779)
!21828 = !DILocation(line: 6708, column: 25, scope: !21779)
!21829 = !DILocation(line: 6708, column: 30, scope: !21779)
!21830 = !DILocation(line: 6708, column: 17, scope: !21779)
!21831 = !DILocation(line: 6708, column: 15, scope: !21779)
!21832 = !DILocation(line: 6709, column: 25, scope: !21779)
!21833 = !DILocation(line: 6710, column: 20, scope: !21779)
!21834 = !DILocation(line: 6710, column: 27, scope: !21779)
!21835 = !DILocation(line: 6710, column: 11, scope: !21779)
!21836 = !DILocation(line: 6709, column: 9, scope: !21779)
!21837 = !DILocation(line: 6709, column: 7, scope: !21779)
!21838 = !DILocation(line: 6712, column: 28, scope: !21779)
!21839 = !DILocation(line: 6712, column: 21, scope: !21779)
!21840 = !DILocation(line: 6712, column: 2, scope: !21779)
!21841 = !DILocation(line: 6712, column: 9, scope: !21779)
!21842 = !DILocation(line: 6712, column: 19, scope: !21779)
!21843 = !DILocation(line: 6713, column: 31, scope: !21779)
!21844 = !DILocation(line: 6713, column: 36, scope: !21779)
!21845 = !DILocation(line: 6713, column: 23, scope: !21779)
!21846 = !DILocation(line: 6713, column: 2, scope: !21779)
!21847 = !DILocation(line: 6713, column: 9, scope: !21779)
!21848 = !DILocation(line: 6713, column: 21, scope: !21779)
!21849 = !DILocation(line: 6718, column: 47, scope: !21779)
!21850 = !DILocation(line: 6719, column: 21, scope: !21779)
!21851 = !DILocation(line: 6719, column: 28, scope: !21779)
!21852 = !DILocation(line: 6719, column: 12, scope: !21779)
!21853 = !DILocation(line: 6718, column: 31, scope: !21779)
!21854 = !DILocation(line: 6718, column: 26, scope: !21779)
!21855 = !DILocation(line: 6722, column: 11, scope: !21779)
!21856 = !DILocation(line: 6718, column: 2, scope: !21779)
!21857 = !DILocation(line: 6718, column: 9, scope: !21779)
!21858 = !DILocation(line: 6718, column: 22, scope: !21779)
!21859 = !DILocation(line: 6726, column: 41, scope: !21779)
!21860 = !DILocation(line: 6727, column: 22, scope: !21779)
!21861 = !DILocation(line: 6727, column: 29, scope: !21779)
!21862 = !DILocation(line: 6727, column: 13, scope: !21779)
!21863 = !DILocation(line: 6726, column: 25, scope: !21779)
!21864 = !DILocation(line: 6726, column: 2, scope: !21779)
!21865 = !DILocation(line: 6726, column: 9, scope: !21779)
!21866 = !DILocation(line: 6726, column: 22, scope: !21779)
!21867 = !DILocation(line: 6730, column: 25, scope: !21779)
!21868 = !DILocation(line: 6730, column: 2, scope: !21779)
!21869 = !DILocation(line: 6730, column: 9, scope: !21779)
!21870 = !DILocation(line: 6730, column: 22, scope: !21779)
!21871 = !DILocation(line: 6731, column: 9, scope: !21779)
!21872 = !DILocation(line: 6731, column: 2, scope: !21779)
!21873 = distinct !DISubprogram(name: "asc_isr_callback", scope: !3, file: !3, line: 6739, type: !21874, scopeLine: 6740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!21874 = !DISubroutineType(types: !21875)
!21875 = !{null, !6375, !5991}
!21876 = !DILocalVariable(name: "asc_dvc_varp", arg: 1, scope: !21873, file: !3, line: 6739, type: !6375)
!21877 = !DILocation(line: 6739, column: 43, scope: !21873)
!21878 = !DILocalVariable(name: "qdonep", arg: 2, scope: !21873, file: !3, line: 6739, type: !5991)
!21879 = !DILocation(line: 6739, column: 73, scope: !21873)
!21880 = !DILocalVariable(name: "boardp", scope: !21873, file: !3, line: 6741, type: !190)
!21881 = !DILocation(line: 6741, column: 20, scope: !21873)
!21882 = !DILocation(line: 6741, column: 29, scope: !21873)
!21883 = !DILocation(line: 6741, column: 43, scope: !21873)
!21884 = !DILocalVariable(name: "srb_tag", scope: !21873, file: !3, line: 6742, type: !402)
!21885 = !DILocation(line: 6742, column: 6, scope: !21873)
!21886 = !DILocalVariable(name: "scp", scope: !21873, file: !3, line: 6743, type: !4976)
!21887 = !DILocation(line: 6743, column: 20, scope: !21873)
!21888 = !DILocation(line: 6751, column: 12, scope: !21873)
!21889 = !DILocation(line: 6751, column: 20, scope: !21873)
!21890 = !DILocation(line: 6751, column: 23, scope: !21873)
!21891 = !DILocation(line: 6751, column: 31, scope: !21873)
!21892 = !DILocation(line: 6751, column: 10, scope: !21873)
!21893 = !DILocation(line: 6752, column: 27, scope: !21873)
!21894 = !DILocation(line: 6752, column: 35, scope: !21873)
!21895 = !DILocation(line: 6752, column: 42, scope: !21873)
!21896 = !DILocation(line: 6752, column: 8, scope: !21873)
!21897 = !DILocation(line: 6752, column: 6, scope: !21873)
!21898 = !DILocation(line: 6753, column: 7, scope: !21899)
!21899 = distinct !DILexicalBlock(scope: !21873, file: !3, line: 6753, column: 6)
!21900 = !DILocation(line: 6753, column: 6, scope: !21873)
!21901 = !DILocation(line: 6754, column: 3, scope: !21899)
!21902 = !DILocation(line: 6758, column: 2, scope: !21873)
!21903 = !DILocation(line: 6760, column: 2, scope: !21873)
!21904 = !DILocation(line: 6765, column: 10, scope: !21873)
!21905 = !DILocation(line: 6765, column: 18, scope: !21873)
!21906 = !DILocation(line: 6765, column: 21, scope: !21873)
!21907 = !DILocation(line: 6765, column: 2, scope: !21873)
!21908 = !DILocation(line: 6768, column: 3, scope: !21909)
!21909 = distinct !DILexicalBlock(scope: !21873, file: !3, line: 6765, column: 32)
!21910 = !DILocation(line: 6768, column: 8, scope: !21909)
!21911 = !DILocation(line: 6768, column: 15, scope: !21909)
!21912 = !DILocation(line: 6776, column: 20, scope: !21913)
!21913 = distinct !DILexicalBlock(scope: !21909, file: !3, line: 6776, column: 7)
!21914 = !DILocation(line: 6776, column: 7, scope: !21913)
!21915 = !DILocation(line: 6776, column: 25, scope: !21913)
!21916 = !DILocation(line: 6776, column: 30, scope: !21913)
!21917 = !DILocation(line: 6776, column: 33, scope: !21913)
!21918 = !DILocation(line: 6776, column: 41, scope: !21913)
!21919 = !DILocation(line: 6776, column: 54, scope: !21913)
!21920 = !DILocation(line: 6776, column: 59, scope: !21913)
!21921 = !DILocation(line: 6777, column: 7, scope: !21913)
!21922 = !DILocation(line: 6777, column: 15, scope: !21913)
!21923 = !DILocation(line: 6777, column: 44, scope: !21913)
!21924 = !DILocation(line: 6777, column: 31, scope: !21913)
!21925 = !DILocation(line: 6777, column: 28, scope: !21913)
!21926 = !DILocation(line: 6776, column: 7, scope: !21909)
!21927 = !DILocation(line: 6780, column: 19, scope: !21928)
!21928 = distinct !DILexicalBlock(scope: !21913, file: !3, line: 6777, column: 50)
!21929 = !DILocation(line: 6780, column: 24, scope: !21928)
!21930 = !DILocation(line: 6780, column: 32, scope: !21928)
!21931 = !DILocation(line: 6780, column: 4, scope: !21928)
!21932 = !DILocation(line: 6781, column: 3, scope: !21928)
!21933 = !DILocation(line: 6782, column: 3, scope: !21909)
!21934 = !DILocation(line: 6786, column: 11, scope: !21909)
!21935 = !DILocation(line: 6786, column: 19, scope: !21909)
!21936 = !DILocation(line: 6786, column: 22, scope: !21909)
!21937 = !DILocation(line: 6786, column: 3, scope: !21909)
!21938 = !DILocation(line: 6788, column: 8, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21940, file: !3, line: 6788, column: 8)
!21940 = distinct !DILexicalBlock(scope: !21909, file: !3, line: 6786, column: 33)
!21941 = !DILocation(line: 6788, column: 16, scope: !21939)
!21942 = !DILocation(line: 6788, column: 19, scope: !21939)
!21943 = !DILocation(line: 6788, column: 29, scope: !21939)
!21944 = !DILocation(line: 6788, column: 8, scope: !21940)
!21945 = !DILocation(line: 6805, column: 9, scope: !21946)
!21946 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 6788, column: 58)
!21947 = !DILocation(line: 6804, column: 45, scope: !21946)
!21948 = !DILocation(line: 6804, column: 5, scope: !21946)
!21949 = !DILocation(line: 6804, column: 10, scope: !21946)
!21950 = !DILocation(line: 6804, column: 17, scope: !21946)
!21951 = !DILocation(line: 6806, column: 4, scope: !21946)
!21952 = !DILocation(line: 6807, column: 19, scope: !21953)
!21953 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 6806, column: 11)
!21954 = !DILocation(line: 6807, column: 5, scope: !21953)
!21955 = !DILocation(line: 6807, column: 10, scope: !21953)
!21956 = !DILocation(line: 6807, column: 17, scope: !21953)
!21957 = !DILocation(line: 6809, column: 4, scope: !21940)
!21958 = !DILocation(line: 6814, column: 4, scope: !21940)
!21959 = !DILocation(line: 6814, column: 9, scope: !21940)
!21960 = !DILocation(line: 6814, column: 16, scope: !21940)
!21961 = !DILocation(line: 6815, column: 4, scope: !21940)
!21962 = !DILocation(line: 6817, column: 3, scope: !21909)
!21963 = !DILocation(line: 6822, column: 30, scope: !21909)
!21964 = !DILocation(line: 6822, column: 28, scope: !21909)
!21965 = !DILocation(line: 6824, column: 7, scope: !21909)
!21966 = !DILocation(line: 6823, column: 21, scope: !21909)
!21967 = !DILocation(line: 6821, column: 3, scope: !21909)
!21968 = !DILocation(line: 6821, column: 8, scope: !21909)
!21969 = !DILocation(line: 6821, column: 15, scope: !21909)
!21970 = !DILocation(line: 6825, column: 3, scope: !21909)
!21971 = !DILocation(line: 6830, column: 30, scope: !21909)
!21972 = !DILocation(line: 6830, column: 28, scope: !21909)
!21973 = !DILocation(line: 6832, column: 7, scope: !21909)
!21974 = !DILocation(line: 6831, column: 21, scope: !21909)
!21975 = !DILocation(line: 6829, column: 3, scope: !21909)
!21976 = !DILocation(line: 6829, column: 8, scope: !21909)
!21977 = !DILocation(line: 6829, column: 15, scope: !21909)
!21978 = !DILocation(line: 6833, column: 3, scope: !21909)
!21979 = !DILocation(line: 6841, column: 7, scope: !21980)
!21980 = distinct !DILexicalBlock(scope: !21873, file: !3, line: 6841, column: 6)
!21981 = !DILocation(line: 6841, column: 15, scope: !21980)
!21982 = !DILocation(line: 6841, column: 30, scope: !21980)
!21983 = !DILocation(line: 6841, column: 28, scope: !21980)
!21984 = !DILocation(line: 6841, column: 67, scope: !21980)
!21985 = !DILocation(line: 6841, column: 72, scope: !21980)
!21986 = !DILocation(line: 6842, column: 6, scope: !21980)
!21987 = !DILocation(line: 6842, column: 14, scope: !21980)
!21988 = !DILocation(line: 6842, column: 17, scope: !21980)
!21989 = !DILocation(line: 6842, column: 27, scope: !21980)
!21990 = !DILocation(line: 6842, column: 42, scope: !21980)
!21991 = !DILocation(line: 6843, column: 6, scope: !21980)
!21992 = !DILocation(line: 6843, column: 14, scope: !21980)
!21993 = !DILocation(line: 6843, column: 17, scope: !21980)
!21994 = !DILocation(line: 6843, column: 27, scope: !21980)
!21995 = !DILocation(line: 6841, column: 6, scope: !21873)
!21996 = !DILocation(line: 6844, column: 27, scope: !21997)
!21997 = distinct !DILexicalBlock(scope: !21980, file: !3, line: 6843, column: 46)
!21998 = !DILocation(line: 6844, column: 3, scope: !21997)
!21999 = !DILocation(line: 6844, column: 11, scope: !21997)
!22000 = !DILocation(line: 6844, column: 24, scope: !21997)
!22001 = !DILocation(line: 6845, column: 2, scope: !21997)
!22002 = !DILocation(line: 6847, column: 16, scope: !21873)
!22003 = !DILocation(line: 6847, column: 2, scope: !21873)
!22004 = !DILocation(line: 6848, column: 1, scope: !21873)
!22005 = distinct !DISubprogram(name: "DvcGetQinfo", scope: !3, file: !3, line: 6671, type: !10385, scopeLine: 6672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22006 = !DILocalVariable(name: "iop_base", arg: 1, scope: !22005, file: !3, line: 6671, type: !7)
!22007 = !DILocation(line: 6671, column: 22, scope: !22005)
!22008 = !DILocalVariable(name: "s_addr", arg: 2, scope: !22005, file: !3, line: 6671, type: !5240)
!22009 = !DILocation(line: 6671, column: 39, scope: !22005)
!22010 = !DILocalVariable(name: "inbuf", arg: 3, scope: !22005, file: !3, line: 6671, type: !5252)
!22011 = !DILocation(line: 6671, column: 54, scope: !22005)
!22012 = !DILocalVariable(name: "words", arg: 4, scope: !22005, file: !3, line: 6671, type: !245)
!22013 = !DILocation(line: 6671, column: 65, scope: !22005)
!22014 = !DILocalVariable(name: "i", scope: !22005, file: !3, line: 6673, type: !245)
!22015 = !DILocation(line: 6673, column: 6, scope: !22005)
!22016 = !DILocalVariable(name: "word", scope: !22005, file: !3, line: 6674, type: !5240)
!22017 = !DILocation(line: 6674, column: 9, scope: !22005)
!22018 = !DILocation(line: 6676, column: 2, scope: !22005)
!22019 = !DILocation(line: 6677, column: 9, scope: !22020)
!22020 = distinct !DILexicalBlock(scope: !22005, file: !3, line: 6677, column: 2)
!22021 = !DILocation(line: 6677, column: 7, scope: !22020)
!22022 = !DILocation(line: 6677, column: 14, scope: !22023)
!22023 = distinct !DILexicalBlock(scope: !22020, file: !3, line: 6677, column: 2)
!22024 = !DILocation(line: 6677, column: 22, scope: !22023)
!22025 = !DILocation(line: 6677, column: 20, scope: !22023)
!22026 = !DILocation(line: 6677, column: 16, scope: !22023)
!22027 = !DILocation(line: 6677, column: 2, scope: !22020)
!22028 = !DILocation(line: 6678, column: 7, scope: !22029)
!22029 = distinct !DILexicalBlock(scope: !22030, file: !3, line: 6678, column: 7)
!22030 = distinct !DILexicalBlock(scope: !22023, file: !3, line: 6677, column: 37)
!22031 = !DILocation(line: 6678, column: 9, scope: !22029)
!22032 = !DILocation(line: 6678, column: 7, scope: !22030)
!22033 = !DILocation(line: 6679, column: 4, scope: !22034)
!22034 = distinct !DILexicalBlock(scope: !22029, file: !3, line: 6678, column: 16)
!22035 = !DILocation(line: 6681, column: 10, scope: !22030)
!22036 = !DILocation(line: 6681, column: 8, scope: !22030)
!22037 = !DILocation(line: 6682, column: 14, scope: !22030)
!22038 = !DILocation(line: 6682, column: 19, scope: !22030)
!22039 = !DILocation(line: 6682, column: 3, scope: !22030)
!22040 = !DILocation(line: 6682, column: 9, scope: !22030)
!22041 = !DILocation(line: 6682, column: 12, scope: !22030)
!22042 = !DILocation(line: 6683, column: 19, scope: !22030)
!22043 = !DILocation(line: 6683, column: 24, scope: !22030)
!22044 = !DILocation(line: 6683, column: 30, scope: !22030)
!22045 = !DILocation(line: 6683, column: 18, scope: !22030)
!22046 = !DILocation(line: 6683, column: 3, scope: !22030)
!22047 = !DILocation(line: 6683, column: 9, scope: !22030)
!22048 = !DILocation(line: 6683, column: 11, scope: !22030)
!22049 = !DILocation(line: 6683, column: 16, scope: !22030)
!22050 = !DILocation(line: 6684, column: 2, scope: !22030)
!22051 = !DILocation(line: 6677, column: 31, scope: !22023)
!22052 = !DILocation(line: 6677, column: 2, scope: !22023)
!22053 = distinct !{!22053, !22027, !22054}
!22054 = !DILocation(line: 6684, column: 2, scope: !22020)
!22055 = !DILocation(line: 6686, column: 1, scope: !22005)
!22056 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !6068, file: !6068, line: 392, type: !22057, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22057 = !DISubroutineType(types: !22058)
!22058 = !{!334, !194, !308, !22059, !783}
!22059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!22060 = !DILocalVariable(name: "dev", arg: 1, scope: !22056, file: !6068, line: 392, type: !194)
!22061 = !DILocation(line: 392, column: 55, scope: !22056)
!22062 = !DILocalVariable(name: "size", arg: 2, scope: !22056, file: !6068, line: 392, type: !308)
!22063 = !DILocation(line: 392, column: 67, scope: !22056)
!22064 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !22056, file: !6068, line: 393, type: !22059)
!22065 = !DILocation(line: 393, column: 15, scope: !22056)
!22066 = !DILocalVariable(name: "gfp", arg: 4, scope: !22056, file: !6068, line: 393, type: !783)
!22067 = !DILocation(line: 393, column: 33, scope: !22056)
!22068 = !DILocation(line: 396, column: 25, scope: !22056)
!22069 = !DILocation(line: 396, column: 30, scope: !22056)
!22070 = !DILocation(line: 396, column: 36, scope: !22056)
!22071 = !DILocation(line: 396, column: 48, scope: !22056)
!22072 = !DILocation(line: 397, column: 5, scope: !22056)
!22073 = !DILocation(line: 397, column: 9, scope: !22056)
!22074 = !DILocation(line: 397, column: 4, scope: !22056)
!22075 = !DILocation(line: 396, column: 9, scope: !22056)
!22076 = !DILocation(line: 396, column: 2, scope: !22056)
!22077 = distinct !DISubprogram(name: "dma_free_coherent", scope: !6068, file: !6068, line: 400, type: !22078, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22078 = !DISubroutineType(types: !22079)
!22079 = !{null, !194, !308, !334, !977}
!22080 = !DILocalVariable(name: "dev", arg: 1, scope: !22077, file: !6068, line: 400, type: !194)
!22081 = !DILocation(line: 400, column: 53, scope: !22077)
!22082 = !DILocalVariable(name: "size", arg: 2, scope: !22077, file: !6068, line: 400, type: !308)
!22083 = !DILocation(line: 400, column: 65, scope: !22077)
!22084 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !22077, file: !6068, line: 401, type: !334)
!22085 = !DILocation(line: 401, column: 9, scope: !22077)
!22086 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !22077, file: !6068, line: 401, type: !977)
!22087 = !DILocation(line: 401, column: 30, scope: !22077)
!22088 = !DILocation(line: 403, column: 24, scope: !22077)
!22089 = !DILocation(line: 403, column: 29, scope: !22077)
!22090 = !DILocation(line: 403, column: 35, scope: !22077)
!22091 = !DILocation(line: 403, column: 45, scope: !22077)
!22092 = !DILocation(line: 403, column: 9, scope: !22077)
!22093 = !DILocation(line: 403, column: 2, scope: !22077)
!22094 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !114, file: !114, line: 660, type: !22095, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22095 = !DISubroutineType(types: !22096)
!22096 = !{null, !194, !334}
!22097 = !DILocalVariable(name: "dev", arg: 1, scope: !22094, file: !114, line: 660, type: !194)
!22098 = !DILocation(line: 660, column: 51, scope: !22094)
!22099 = !DILocalVariable(name: "data", arg: 2, scope: !22094, file: !114, line: 660, type: !334)
!22100 = !DILocation(line: 660, column: 62, scope: !22094)
!22101 = !DILocation(line: 662, column: 21, scope: !22094)
!22102 = !DILocation(line: 662, column: 2, scope: !22094)
!22103 = !DILocation(line: 662, column: 7, scope: !22094)
!22104 = !DILocation(line: 662, column: 19, scope: !22094)
!22105 = !DILocation(line: 663, column: 1, scope: !22094)
!22106 = distinct !DISubprogram(name: "advansys_release", scope: !3, file: !3, line: 11382, type: !5101, scopeLine: 11383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22107 = !DILocalVariable(name: "shost", arg: 1, scope: !22106, file: !3, line: 11382, type: !4796)
!22108 = !DILocation(line: 11382, column: 47, scope: !22106)
!22109 = !DILocalVariable(name: "board", scope: !22106, file: !3, line: 11384, type: !190)
!22110 = !DILocation(line: 11384, column: 20, scope: !22106)
!22111 = !DILocation(line: 11384, column: 39, scope: !22106)
!22112 = !DILocation(line: 11384, column: 28, scope: !22106)
!22113 = !DILocation(line: 11386, column: 19, scope: !22106)
!22114 = !DILocation(line: 11386, column: 2, scope: !22106)
!22115 = !DILocation(line: 11387, column: 11, scope: !22106)
!22116 = !DILocation(line: 11387, column: 18, scope: !22106)
!22117 = !DILocation(line: 11387, column: 23, scope: !22106)
!22118 = !DILocation(line: 11387, column: 2, scope: !22106)
!22119 = !DILocation(line: 11394, column: 6, scope: !22120)
!22120 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 11394, column: 6)
!22121 = !DILocation(line: 11394, column: 6, scope: !22106)
!22122 = !DILocation(line: 11395, column: 3, scope: !22123)
!22123 = distinct !DILexicalBlock(scope: !22120, file: !3, line: 11394, column: 31)
!22124 = !DILocation(line: 11398, column: 9, scope: !22123)
!22125 = !DILocation(line: 11398, column: 16, scope: !22123)
!22126 = !DILocation(line: 11398, column: 24, scope: !22123)
!22127 = !DILocation(line: 11398, column: 36, scope: !22123)
!22128 = !DILocation(line: 11398, column: 3, scope: !22123)
!22129 = !DILocation(line: 11399, column: 2, scope: !22123)
!22130 = !DILocation(line: 11400, column: 11, scope: !22131)
!22131 = distinct !DILexicalBlock(scope: !22120, file: !3, line: 11399, column: 9)
!22132 = !DILocation(line: 11400, column: 18, scope: !22131)
!22133 = !DILocation(line: 11400, column: 3, scope: !22131)
!22134 = !DILocation(line: 11401, column: 26, scope: !22131)
!22135 = !DILocation(line: 11401, column: 3, scope: !22131)
!22136 = !DILocation(line: 11403, column: 16, scope: !22106)
!22137 = !DILocation(line: 11403, column: 2, scope: !22106)
!22138 = !DILocation(line: 11405, column: 2, scope: !22106)
!22139 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !5712, file: !5712, line: 1865, type: !22140, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22140 = !DISubroutineType(types: !22141)
!22141 = !{!334, !5710}
!22142 = !DILocalVariable(name: "pdev", arg: 1, scope: !22139, file: !5712, line: 1865, type: !5710)
!22143 = !DILocation(line: 1865, column: 53, scope: !22139)
!22144 = !DILocation(line: 1867, column: 26, scope: !22139)
!22145 = !DILocation(line: 1867, column: 32, scope: !22139)
!22146 = !DILocation(line: 1867, column: 9, scope: !22139)
!22147 = !DILocation(line: 1867, column: 2, scope: !22139)
!22148 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !114, file: !114, line: 655, type: !22149, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22149 = !DISubroutineType(types: !22150)
!22150 = !{!334, !4686}
!22151 = !DILocalVariable(name: "dev", arg: 1, scope: !22148, file: !114, line: 655, type: !4686)
!22152 = !DILocation(line: 655, column: 58, scope: !22148)
!22153 = !DILocation(line: 657, column: 9, scope: !22148)
!22154 = !DILocation(line: 657, column: 14, scope: !22148)
!22155 = !DILocation(line: 657, column: 2, scope: !22148)
!22156 = distinct !DISubprogram(name: "advansys_eisa_probe", scope: !3, file: !3, line: 11600, type: !4391, scopeLine: 11601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22157 = !DILocalVariable(name: "dev", arg: 1, scope: !22156, file: !3, line: 11600, type: !194)
!22158 = !DILocation(line: 11600, column: 47, scope: !22156)
!22159 = !DILocalVariable(name: "i", scope: !22156, file: !3, line: 11602, type: !245)
!22160 = !DILocation(line: 11602, column: 6, scope: !22156)
!22161 = !DILocalVariable(name: "ioport", scope: !22156, file: !3, line: 11602, type: !245)
!22162 = !DILocation(line: 11602, column: 9, scope: !22156)
!22163 = !DILocalVariable(name: "irq", scope: !22156, file: !3, line: 11602, type: !245)
!22164 = !DILocation(line: 11602, column: 17, scope: !22156)
!22165 = !DILocalVariable(name: "err", scope: !22156, file: !3, line: 11603, type: !245)
!22166 = !DILocation(line: 11603, column: 6, scope: !22156)
!22167 = !DILocalVariable(name: "edev", scope: !22156, file: !3, line: 11604, type: !6011)
!22168 = !DILocation(line: 11604, column: 22, scope: !22156)
!22169 = !DILocalVariable(name: "__mptr", scope: !22170, file: !3, line: 11604, type: !334)
!22170 = distinct !DILexicalBlock(scope: !22156, file: !3, line: 11604, column: 29)
!22171 = !DILocation(line: 11604, column: 29, scope: !22170)
!22172 = !DILocation(line: 11604, column: 29, scope: !22173)
!22173 = distinct !DILexicalBlock(scope: !22170, file: !3, line: 11604, column: 29)
!22174 = !DILocalVariable(name: "data", scope: !22156, file: !3, line: 11605, type: !22175)
!22175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22176, size: 64)
!22176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eisa_scsi_data", file: !3, line: 11576, size: 128, elements: !22177)
!22177 = !{!22178}
!22178 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !22176, file: !3, line: 11577, baseType: !22179, size: 128)
!22179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4796, size: 128, elements: !1620)
!22180 = !DILocation(line: 11605, column: 25, scope: !22156)
!22181 = !DILocation(line: 11607, column: 6, scope: !22156)
!22182 = !DILocation(line: 11608, column: 9, scope: !22156)
!22183 = !DILocation(line: 11608, column: 7, scope: !22156)
!22184 = !DILocation(line: 11609, column: 7, scope: !22185)
!22185 = distinct !DILexicalBlock(scope: !22156, file: !3, line: 11609, column: 6)
!22186 = !DILocation(line: 11609, column: 6, scope: !22156)
!22187 = !DILocation(line: 11610, column: 3, scope: !22185)
!22188 = !DILocation(line: 11611, column: 11, scope: !22156)
!22189 = !DILocation(line: 11611, column: 17, scope: !22156)
!22190 = !DILocation(line: 11611, column: 27, scope: !22156)
!22191 = !DILocation(line: 11611, column: 9, scope: !22156)
!22192 = !DILocation(line: 11613, column: 6, scope: !22156)
!22193 = !DILocation(line: 11614, column: 9, scope: !22194)
!22194 = distinct !DILexicalBlock(scope: !22156, file: !3, line: 11614, column: 2)
!22195 = !DILocation(line: 11614, column: 7, scope: !22194)
!22196 = !DILocation(line: 11614, column: 14, scope: !22197)
!22197 = distinct !DILexicalBlock(scope: !22194, file: !3, line: 11614, column: 2)
!22198 = !DILocation(line: 11614, column: 16, scope: !22197)
!22199 = !DILocation(line: 11614, column: 2, scope: !22194)
!22200 = !DILocalVariable(name: "board", scope: !22201, file: !3, line: 11615, type: !190)
!22201 = distinct !DILexicalBlock(scope: !22197, file: !3, line: 11614, column: 42)
!22202 = !DILocation(line: 11615, column: 21, scope: !22201)
!22203 = !DILocalVariable(name: "shost", scope: !22201, file: !3, line: 11616, type: !4796)
!22204 = !DILocation(line: 11616, column: 21, scope: !22201)
!22205 = !DILocation(line: 11617, column: 8, scope: !22206)
!22206 = distinct !DILexicalBlock(scope: !22201, file: !3, line: 11617, column: 7)
!22207 = !DILocation(line: 11617, column: 7, scope: !22201)
!22208 = !DILocation(line: 11618, column: 47, scope: !22209)
!22209 = distinct !DILexicalBlock(scope: !22206, file: !3, line: 11617, column: 57)
!22210 = !DILocation(line: 11619, column: 11, scope: !22209)
!22211 = !DILocation(line: 11619, column: 18, scope: !22209)
!22212 = !DILocation(line: 11619, column: 34, scope: !22209)
!22213 = !DILocation(line: 11618, column: 4, scope: !22209)
!22214 = !DILocation(line: 11620, column: 4, scope: !22209)
!22215 = !DILocation(line: 11622, column: 25, scope: !22216)
!22216 = distinct !DILexicalBlock(scope: !22201, file: !3, line: 11622, column: 7)
!22217 = !DILocation(line: 11622, column: 8, scope: !22216)
!22218 = !DILocation(line: 11622, column: 7, scope: !22201)
!22219 = !DILocation(line: 11623, column: 4, scope: !22220)
!22220 = distinct !DILexicalBlock(scope: !22216, file: !3, line: 11622, column: 34)
!22221 = !DILocation(line: 11624, column: 4, scope: !22220)
!22222 = !DILocation(line: 11634, column: 7, scope: !22201)
!22223 = !DILocation(line: 11634, column: 14, scope: !22201)
!22224 = !DILocation(line: 11634, column: 3, scope: !22201)
!22225 = !DILocation(line: 11636, column: 8, scope: !22226)
!22226 = distinct !DILexicalBlock(scope: !22201, file: !3, line: 11636, column: 7)
!22227 = !DILocation(line: 11636, column: 7, scope: !22201)
!22228 = !DILocation(line: 11637, column: 31, scope: !22226)
!22229 = !DILocation(line: 11637, column: 10, scope: !22226)
!22230 = !DILocation(line: 11637, column: 8, scope: !22226)
!22231 = !DILocation(line: 11637, column: 4, scope: !22226)
!22232 = !DILocation(line: 11639, column: 7, scope: !22201)
!22233 = !DILocation(line: 11640, column: 11, scope: !22201)
!22234 = !DILocation(line: 11640, column: 9, scope: !22201)
!22235 = !DILocation(line: 11641, column: 8, scope: !22236)
!22236 = distinct !DILexicalBlock(scope: !22201, file: !3, line: 11641, column: 7)
!22237 = !DILocation(line: 11641, column: 7, scope: !22201)
!22238 = !DILocation(line: 11642, column: 4, scope: !22236)
!22239 = !DILocation(line: 11644, column: 22, scope: !22201)
!22240 = !DILocation(line: 11644, column: 11, scope: !22201)
!22241 = !DILocation(line: 11644, column: 9, scope: !22201)
!22242 = !DILocation(line: 11645, column: 16, scope: !22201)
!22243 = !DILocation(line: 11645, column: 3, scope: !22201)
!22244 = !DILocation(line: 11645, column: 10, scope: !22201)
!22245 = !DILocation(line: 11645, column: 14, scope: !22201)
!22246 = !DILocation(line: 11646, column: 16, scope: !22201)
!22247 = !DILocation(line: 11646, column: 3, scope: !22201)
!22248 = !DILocation(line: 11646, column: 10, scope: !22201)
!22249 = !DILocation(line: 11646, column: 14, scope: !22201)
!22250 = !DILocation(line: 11647, column: 18, scope: !22201)
!22251 = !DILocation(line: 11647, column: 3, scope: !22201)
!22252 = !DILocation(line: 11647, column: 10, scope: !22201)
!22253 = !DILocation(line: 11647, column: 16, scope: !22201)
!22254 = !DILocation(line: 11649, column: 30, scope: !22201)
!22255 = !DILocation(line: 11649, column: 37, scope: !22201)
!22256 = !DILocation(line: 11649, column: 9, scope: !22201)
!22257 = !DILocation(line: 11649, column: 7, scope: !22201)
!22258 = !DILocation(line: 11650, column: 8, scope: !22259)
!22259 = distinct !DILexicalBlock(scope: !22201, file: !3, line: 11650, column: 7)
!22260 = !DILocation(line: 11650, column: 7, scope: !22201)
!22261 = !DILocation(line: 11651, column: 20, scope: !22262)
!22262 = distinct !DILexicalBlock(scope: !22259, file: !3, line: 11650, column: 13)
!22263 = !DILocation(line: 11651, column: 4, scope: !22262)
!22264 = !DILocation(line: 11651, column: 10, scope: !22262)
!22265 = !DILocation(line: 11651, column: 15, scope: !22262)
!22266 = !DILocation(line: 11651, column: 18, scope: !22262)
!22267 = !DILocation(line: 11652, column: 4, scope: !22262)
!22268 = !DILocation(line: 11655, column: 17, scope: !22201)
!22269 = !DILocation(line: 11655, column: 3, scope: !22201)
!22270 = !DILabel(scope: !22201, name: "release_region", file: !3, line: 11656)
!22271 = !DILocation(line: 11656, column: 2, scope: !22201)
!22272 = !DILocation(line: 11657, column: 3, scope: !22201)
!22273 = !DILocation(line: 11658, column: 3, scope: !22201)
!22274 = !DILocation(line: 11614, column: 22, scope: !22197)
!22275 = !DILocation(line: 11614, column: 33, scope: !22197)
!22276 = !DILocation(line: 11614, column: 2, scope: !22197)
!22277 = distinct !{!22277, !22199, !22278}
!22278 = !DILocation(line: 11659, column: 2, scope: !22194)
!22279 = !DILocation(line: 11661, column: 6, scope: !22280)
!22280 = distinct !DILexicalBlock(scope: !22156, file: !3, line: 11661, column: 6)
!22281 = !DILocation(line: 11661, column: 6, scope: !22156)
!22282 = !DILocation(line: 11662, column: 3, scope: !22280)
!22283 = !DILocation(line: 11663, column: 18, scope: !22156)
!22284 = !DILocation(line: 11663, column: 23, scope: !22156)
!22285 = !DILocation(line: 11663, column: 2, scope: !22156)
!22286 = !DILocation(line: 11664, column: 2, scope: !22156)
!22287 = !DILabel(scope: !22156, name: "free_data", file: !3, line: 11666)
!22288 = !DILocation(line: 11666, column: 2, scope: !22156)
!22289 = !DILocation(line: 11667, column: 8, scope: !22156)
!22290 = !DILocation(line: 11667, column: 14, scope: !22156)
!22291 = !DILocation(line: 11667, column: 2, scope: !22156)
!22292 = !DILocation(line: 11668, column: 8, scope: !22156)
!22293 = !DILocation(line: 11668, column: 14, scope: !22156)
!22294 = !DILocation(line: 11668, column: 2, scope: !22156)
!22295 = !DILocation(line: 11669, column: 8, scope: !22156)
!22296 = !DILocation(line: 11669, column: 2, scope: !22156)
!22297 = !DILabel(scope: !22156, name: "fail", file: !3, line: 11670)
!22298 = !DILocation(line: 11670, column: 2, scope: !22156)
!22299 = !DILocation(line: 11671, column: 9, scope: !22156)
!22300 = !DILocation(line: 11671, column: 2, scope: !22156)
!22301 = !DILocation(line: 11672, column: 1, scope: !22156)
!22302 = distinct !DISubprogram(name: "advansys_eisa_remove", scope: !3, file: !3, line: 11674, type: !4391, scopeLine: 11675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22303 = !DILocalVariable(name: "dev", arg: 1, scope: !22302, file: !3, line: 11674, type: !194)
!22304 = !DILocation(line: 11674, column: 48, scope: !22302)
!22305 = !DILocalVariable(name: "i", scope: !22302, file: !3, line: 11676, type: !245)
!22306 = !DILocation(line: 11676, column: 6, scope: !22302)
!22307 = !DILocalVariable(name: "data", scope: !22302, file: !3, line: 11677, type: !22175)
!22308 = !DILocation(line: 11677, column: 25, scope: !22302)
!22309 = !DILocation(line: 11677, column: 48, scope: !22302)
!22310 = !DILocation(line: 11677, column: 32, scope: !22302)
!22311 = !DILocation(line: 11679, column: 9, scope: !22312)
!22312 = distinct !DILexicalBlock(scope: !22302, file: !3, line: 11679, column: 2)
!22313 = !DILocation(line: 11679, column: 7, scope: !22312)
!22314 = !DILocation(line: 11679, column: 14, scope: !22315)
!22315 = distinct !DILexicalBlock(scope: !22312, file: !3, line: 11679, column: 2)
!22316 = !DILocation(line: 11679, column: 16, scope: !22315)
!22317 = !DILocation(line: 11679, column: 2, scope: !22312)
!22318 = !DILocalVariable(name: "ioport", scope: !22319, file: !3, line: 11680, type: !245)
!22319 = distinct !DILexicalBlock(scope: !22315, file: !3, line: 11679, column: 26)
!22320 = !DILocation(line: 11680, column: 7, scope: !22319)
!22321 = !DILocalVariable(name: "shost", scope: !22319, file: !3, line: 11681, type: !4796)
!22322 = !DILocation(line: 11681, column: 21, scope: !22319)
!22323 = !DILocation(line: 11681, column: 29, scope: !22319)
!22324 = !DILocation(line: 11681, column: 35, scope: !22319)
!22325 = !DILocation(line: 11681, column: 40, scope: !22319)
!22326 = !DILocation(line: 11682, column: 8, scope: !22327)
!22327 = distinct !DILexicalBlock(scope: !22319, file: !3, line: 11682, column: 7)
!22328 = !DILocation(line: 11682, column: 7, scope: !22319)
!22329 = !DILocation(line: 11683, column: 4, scope: !22327)
!22330 = !DILocation(line: 11684, column: 12, scope: !22319)
!22331 = !DILocation(line: 11684, column: 19, scope: !22319)
!22332 = !DILocation(line: 11684, column: 10, scope: !22319)
!22333 = !DILocation(line: 11685, column: 20, scope: !22319)
!22334 = !DILocation(line: 11685, column: 3, scope: !22319)
!22335 = !DILocation(line: 11686, column: 3, scope: !22319)
!22336 = !DILocation(line: 11687, column: 2, scope: !22319)
!22337 = !DILocation(line: 11679, column: 22, scope: !22315)
!22338 = !DILocation(line: 11679, column: 2, scope: !22315)
!22339 = distinct !{!22339, !22317, !22340}
!22340 = !DILocation(line: 11687, column: 2, scope: !22312)
!22341 = !DILocation(line: 11689, column: 8, scope: !22302)
!22342 = !DILocation(line: 11689, column: 2, scope: !22302)
!22343 = !DILocation(line: 11690, column: 2, scope: !22302)
!22344 = distinct !DISubprogram(name: "advansys_eisa_irq_no", scope: !3, file: !3, line: 11591, type: !22345, scopeLine: 11592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22345 = !DISubroutineType(types: !22346)
!22346 = !{!7, !6011}
!22347 = !DILocalVariable(name: "edev", arg: 1, scope: !22344, file: !3, line: 11591, type: !6011)
!22348 = !DILocation(line: 11591, column: 62, scope: !22344)
!22349 = !DILocalVariable(name: "cfg_lsw", scope: !22344, file: !3, line: 11593, type: !303)
!22350 = !DILocation(line: 11593, column: 17, scope: !22344)
!22351 = !DILocation(line: 11593, column: 31, scope: !22344)
!22352 = !DILocation(line: 11593, column: 37, scope: !22344)
!22353 = !DILocation(line: 11593, column: 47, scope: !22344)
!22354 = !DILocation(line: 11593, column: 27, scope: !22344)
!22355 = !DILocalVariable(name: "chip_irq", scope: !22344, file: !3, line: 11594, type: !7)
!22356 = !DILocation(line: 11594, column: 15, scope: !22344)
!22357 = !DILocation(line: 11594, column: 28, scope: !22344)
!22358 = !DILocation(line: 11594, column: 36, scope: !22344)
!22359 = !DILocation(line: 11594, column: 42, scope: !22344)
!22360 = !DILocation(line: 11594, column: 50, scope: !22344)
!22361 = !DILocation(line: 11595, column: 7, scope: !22362)
!22362 = distinct !DILexicalBlock(scope: !22344, file: !3, line: 11595, column: 6)
!22363 = !DILocation(line: 11595, column: 16, scope: !22362)
!22364 = !DILocation(line: 11595, column: 23, scope: !22362)
!22365 = !DILocation(line: 11595, column: 27, scope: !22362)
!22366 = !DILocation(line: 11595, column: 36, scope: !22362)
!22367 = !DILocation(line: 11595, column: 6, scope: !22344)
!22368 = !DILocation(line: 11596, column: 3, scope: !22362)
!22369 = !DILocation(line: 11597, column: 9, scope: !22344)
!22370 = !DILocation(line: 11597, column: 2, scope: !22344)
!22371 = !DILocation(line: 11598, column: 1, scope: !22344)
!22372 = distinct !DISubprogram(name: "advansys_vlb_probe", scope: !3, file: !3, line: 11509, type: !6109, scopeLine: 11510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22373 = !DILocalVariable(name: "dev", arg: 1, scope: !22372, file: !3, line: 11509, type: !194)
!22374 = !DILocation(line: 11509, column: 46, scope: !22372)
!22375 = !DILocalVariable(name: "id", arg: 2, scope: !22372, file: !3, line: 11509, type: !7)
!22376 = !DILocation(line: 11509, column: 64, scope: !22372)
!22377 = !DILocalVariable(name: "err", scope: !22372, file: !3, line: 11511, type: !245)
!22378 = !DILocation(line: 11511, column: 6, scope: !22372)
!22379 = !DILocalVariable(name: "iop_base", scope: !22372, file: !3, line: 11512, type: !7)
!22380 = !DILocation(line: 11512, column: 11, scope: !22372)
!22381 = !DILocation(line: 11512, column: 40, scope: !22372)
!22382 = !DILocation(line: 11512, column: 22, scope: !22372)
!22383 = !DILocalVariable(name: "shost", scope: !22372, file: !3, line: 11513, type: !4796)
!22384 = !DILocation(line: 11513, column: 20, scope: !22372)
!22385 = !DILocalVariable(name: "board", scope: !22372, file: !3, line: 11514, type: !190)
!22386 = !DILocation(line: 11514, column: 20, scope: !22372)
!22387 = !DILocation(line: 11516, column: 7, scope: !22388)
!22388 = distinct !DILexicalBlock(scope: !22372, file: !3, line: 11516, column: 6)
!22389 = !DILocation(line: 11516, column: 6, scope: !22372)
!22390 = !DILocation(line: 11518, column: 3, scope: !22391)
!22391 = distinct !DILexicalBlock(scope: !22388, file: !3, line: 11516, column: 58)
!22392 = !DILocation(line: 11521, column: 24, scope: !22393)
!22393 = distinct !DILexicalBlock(scope: !22372, file: !3, line: 11521, column: 6)
!22394 = !DILocation(line: 11521, column: 7, scope: !22393)
!22395 = !DILocation(line: 11521, column: 6, scope: !22372)
!22396 = !DILocation(line: 11522, column: 3, scope: !22393)
!22397 = !DILocation(line: 11528, column: 24, scope: !22398)
!22398 = distinct !DILexicalBlock(scope: !22372, file: !3, line: 11528, column: 6)
!22399 = !DILocation(line: 11528, column: 6, scope: !22398)
!22400 = !DILocation(line: 11528, column: 45, scope: !22398)
!22401 = !DILocation(line: 11528, column: 6, scope: !22372)
!22402 = !DILocation(line: 11529, column: 3, scope: !22398)
!22403 = !DILocation(line: 11531, column: 6, scope: !22372)
!22404 = !DILocation(line: 11532, column: 10, scope: !22372)
!22405 = !DILocation(line: 11532, column: 8, scope: !22372)
!22406 = !DILocation(line: 11533, column: 7, scope: !22407)
!22407 = distinct !DILexicalBlock(scope: !22372, file: !3, line: 11533, column: 6)
!22408 = !DILocation(line: 11533, column: 6, scope: !22372)
!22409 = !DILocation(line: 11534, column: 3, scope: !22407)
!22410 = !DILocation(line: 11536, column: 21, scope: !22372)
!22411 = !DILocation(line: 11536, column: 10, scope: !22372)
!22412 = !DILocation(line: 11536, column: 8, scope: !22372)
!22413 = !DILocation(line: 11537, column: 35, scope: !22372)
!22414 = !DILocation(line: 11537, column: 15, scope: !22372)
!22415 = !DILocation(line: 11537, column: 2, scope: !22372)
!22416 = !DILocation(line: 11537, column: 9, scope: !22372)
!22417 = !DILocation(line: 11537, column: 13, scope: !22372)
!22418 = !DILocation(line: 11538, column: 15, scope: !22372)
!22419 = !DILocation(line: 11538, column: 2, scope: !22372)
!22420 = !DILocation(line: 11538, column: 9, scope: !22372)
!22421 = !DILocation(line: 11538, column: 13, scope: !22372)
!22422 = !DILocation(line: 11539, column: 17, scope: !22372)
!22423 = !DILocation(line: 11539, column: 2, scope: !22372)
!22424 = !DILocation(line: 11539, column: 9, scope: !22372)
!22425 = !DILocation(line: 11539, column: 15, scope: !22372)
!22426 = !DILocation(line: 11541, column: 29, scope: !22372)
!22427 = !DILocation(line: 11541, column: 36, scope: !22372)
!22428 = !DILocation(line: 11541, column: 8, scope: !22372)
!22429 = !DILocation(line: 11541, column: 6, scope: !22372)
!22430 = !DILocation(line: 11542, column: 6, scope: !22431)
!22431 = distinct !DILexicalBlock(scope: !22372, file: !3, line: 11542, column: 6)
!22432 = !DILocation(line: 11542, column: 6, scope: !22372)
!22433 = !DILocation(line: 11543, column: 3, scope: !22431)
!22434 = !DILocation(line: 11545, column: 18, scope: !22372)
!22435 = !DILocation(line: 11545, column: 23, scope: !22372)
!22436 = !DILocation(line: 11545, column: 2, scope: !22372)
!22437 = !DILocation(line: 11546, column: 2, scope: !22372)
!22438 = !DILabel(scope: !22372, name: "free_host", file: !3, line: 11548)
!22439 = !DILocation(line: 11548, column: 2, scope: !22372)
!22440 = !DILocation(line: 11549, column: 16, scope: !22372)
!22441 = !DILocation(line: 11549, column: 2, scope: !22372)
!22442 = !DILabel(scope: !22372, name: "release_region", file: !3, line: 11550)
!22443 = !DILocation(line: 11550, column: 2, scope: !22372)
!22444 = !DILocation(line: 11551, column: 2, scope: !22372)
!22445 = !DILocation(line: 11552, column: 2, scope: !22372)
!22446 = !DILocation(line: 11553, column: 1, scope: !22372)
!22447 = distinct !DISubprogram(name: "advansys_isa_remove", scope: !3, file: !3, line: 11472, type: !6109, scopeLine: 11473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22448 = !DILocalVariable(name: "dev", arg: 1, scope: !22447, file: !3, line: 11472, type: !194)
!22449 = !DILocation(line: 11472, column: 47, scope: !22447)
!22450 = !DILocalVariable(name: "id", arg: 2, scope: !22447, file: !3, line: 11472, type: !7)
!22451 = !DILocation(line: 11472, column: 65, scope: !22447)
!22452 = !DILocalVariable(name: "ioport", scope: !22447, file: !3, line: 11474, type: !245)
!22453 = !DILocation(line: 11474, column: 6, scope: !22447)
!22454 = !DILocation(line: 11474, column: 33, scope: !22447)
!22455 = !DILocation(line: 11474, column: 15, scope: !22447)
!22456 = !DILocation(line: 11475, column: 35, scope: !22447)
!22457 = !DILocation(line: 11475, column: 19, scope: !22447)
!22458 = !DILocation(line: 11475, column: 2, scope: !22447)
!22459 = !DILocation(line: 11476, column: 2, scope: !22447)
!22460 = !DILocation(line: 11477, column: 2, scope: !22447)
!22461 = distinct !DISubprogram(name: "advansys_vlb_irq_no", scope: !3, file: !3, line: 11500, type: !22462, scopeLine: 11501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22462 = !DISubroutineType(types: !22463)
!22463 = !{!7, !7}
!22464 = !DILocalVariable(name: "iop_base", arg: 1, scope: !22461, file: !3, line: 11500, type: !7)
!22465 = !DILocation(line: 11500, column: 50, scope: !22461)
!22466 = !DILocalVariable(name: "cfg_lsw", scope: !22461, file: !3, line: 11502, type: !303)
!22467 = !DILocation(line: 11502, column: 17, scope: !22461)
!22468 = !DILocation(line: 11502, column: 27, scope: !22461)
!22469 = !DILocalVariable(name: "chip_irq", scope: !22461, file: !3, line: 11503, type: !7)
!22470 = !DILocation(line: 11503, column: 15, scope: !22461)
!22471 = !DILocation(line: 11503, column: 28, scope: !22461)
!22472 = !DILocation(line: 11503, column: 36, scope: !22461)
!22473 = !DILocation(line: 11503, column: 42, scope: !22461)
!22474 = !DILocation(line: 11503, column: 50, scope: !22461)
!22475 = !DILocation(line: 11504, column: 7, scope: !22476)
!22476 = distinct !DILexicalBlock(scope: !22461, file: !3, line: 11504, column: 6)
!22477 = !DILocation(line: 11504, column: 16, scope: !22476)
!22478 = !DILocation(line: 11504, column: 22, scope: !22476)
!22479 = !DILocation(line: 11504, column: 26, scope: !22476)
!22480 = !DILocation(line: 11504, column: 35, scope: !22476)
!22481 = !DILocation(line: 11504, column: 42, scope: !22476)
!22482 = !DILocation(line: 11504, column: 46, scope: !22476)
!22483 = !DILocation(line: 11504, column: 55, scope: !22476)
!22484 = !DILocation(line: 11504, column: 6, scope: !22461)
!22485 = !DILocation(line: 11505, column: 3, scope: !22476)
!22486 = !DILocation(line: 11506, column: 9, scope: !22461)
!22487 = !DILocation(line: 11506, column: 2, scope: !22461)
!22488 = !DILocation(line: 11507, column: 1, scope: !22461)
!22489 = distinct !DISubprogram(name: "advansys_isa_probe", scope: !3, file: !3, line: 11431, type: !6109, scopeLine: 11432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22490 = !DILocalVariable(name: "dev", arg: 1, scope: !22489, file: !3, line: 11431, type: !194)
!22491 = !DILocation(line: 11431, column: 46, scope: !22489)
!22492 = !DILocalVariable(name: "id", arg: 2, scope: !22489, file: !3, line: 11431, type: !7)
!22493 = !DILocation(line: 11431, column: 64, scope: !22489)
!22494 = !DILocalVariable(name: "err", scope: !22489, file: !3, line: 11433, type: !245)
!22495 = !DILocation(line: 11433, column: 6, scope: !22489)
!22496 = !DILocalVariable(name: "iop_base", scope: !22489, file: !3, line: 11434, type: !7)
!22497 = !DILocation(line: 11434, column: 11, scope: !22489)
!22498 = !DILocation(line: 11434, column: 40, scope: !22489)
!22499 = !DILocation(line: 11434, column: 22, scope: !22489)
!22500 = !DILocalVariable(name: "shost", scope: !22489, file: !3, line: 11435, type: !4796)
!22501 = !DILocation(line: 11435, column: 20, scope: !22489)
!22502 = !DILocalVariable(name: "board", scope: !22489, file: !3, line: 11436, type: !190)
!22503 = !DILocation(line: 11436, column: 20, scope: !22489)
!22504 = !DILocation(line: 11438, column: 7, scope: !22505)
!22505 = distinct !DILexicalBlock(scope: !22489, file: !3, line: 11438, column: 6)
!22506 = !DILocation(line: 11438, column: 6, scope: !22489)
!22507 = !DILocation(line: 11440, column: 3, scope: !22508)
!22508 = distinct !DILexicalBlock(scope: !22505, file: !3, line: 11438, column: 58)
!22509 = !DILocation(line: 11443, column: 24, scope: !22510)
!22510 = distinct !DILexicalBlock(scope: !22489, file: !3, line: 11443, column: 6)
!22511 = !DILocation(line: 11443, column: 7, scope: !22510)
!22512 = !DILocation(line: 11443, column: 6, scope: !22489)
!22513 = !DILocation(line: 11444, column: 3, scope: !22510)
!22514 = !DILocation(line: 11445, column: 26, scope: !22515)
!22515 = distinct !DILexicalBlock(scope: !22489, file: !3, line: 11445, column: 6)
!22516 = !DILocation(line: 11445, column: 8, scope: !22515)
!22517 = !DILocation(line: 11445, column: 48, scope: !22515)
!22518 = !DILocation(line: 11445, column: 6, scope: !22489)
!22519 = !DILocation(line: 11446, column: 3, scope: !22515)
!22520 = !DILocation(line: 11448, column: 6, scope: !22489)
!22521 = !DILocation(line: 11449, column: 10, scope: !22489)
!22522 = !DILocation(line: 11449, column: 8, scope: !22489)
!22523 = !DILocation(line: 11450, column: 7, scope: !22524)
!22524 = distinct !DILexicalBlock(scope: !22489, file: !3, line: 11450, column: 6)
!22525 = !DILocation(line: 11450, column: 6, scope: !22489)
!22526 = !DILocation(line: 11451, column: 3, scope: !22524)
!22527 = !DILocation(line: 11453, column: 21, scope: !22489)
!22528 = !DILocation(line: 11453, column: 10, scope: !22489)
!22529 = !DILocation(line: 11453, column: 8, scope: !22489)
!22530 = !DILocation(line: 11454, column: 35, scope: !22489)
!22531 = !DILocation(line: 11454, column: 15, scope: !22489)
!22532 = !DILocation(line: 11454, column: 2, scope: !22489)
!22533 = !DILocation(line: 11454, column: 9, scope: !22489)
!22534 = !DILocation(line: 11454, column: 13, scope: !22489)
!22535 = !DILocation(line: 11455, column: 15, scope: !22489)
!22536 = !DILocation(line: 11455, column: 2, scope: !22489)
!22537 = !DILocation(line: 11455, column: 9, scope: !22489)
!22538 = !DILocation(line: 11455, column: 13, scope: !22489)
!22539 = !DILocation(line: 11456, column: 17, scope: !22489)
!22540 = !DILocation(line: 11456, column: 2, scope: !22489)
!22541 = !DILocation(line: 11456, column: 9, scope: !22489)
!22542 = !DILocation(line: 11456, column: 15, scope: !22489)
!22543 = !DILocation(line: 11458, column: 29, scope: !22489)
!22544 = !DILocation(line: 11458, column: 36, scope: !22489)
!22545 = !DILocation(line: 11458, column: 8, scope: !22489)
!22546 = !DILocation(line: 11458, column: 6, scope: !22489)
!22547 = !DILocation(line: 11459, column: 6, scope: !22548)
!22548 = distinct !DILexicalBlock(scope: !22489, file: !3, line: 11459, column: 6)
!22549 = !DILocation(line: 11459, column: 6, scope: !22489)
!22550 = !DILocation(line: 11460, column: 3, scope: !22548)
!22551 = !DILocation(line: 11462, column: 18, scope: !22489)
!22552 = !DILocation(line: 11462, column: 23, scope: !22489)
!22553 = !DILocation(line: 11462, column: 2, scope: !22489)
!22554 = !DILocation(line: 11463, column: 2, scope: !22489)
!22555 = !DILabel(scope: !22489, name: "free_host", file: !3, line: 11465)
!22556 = !DILocation(line: 11465, column: 2, scope: !22489)
!22557 = !DILocation(line: 11466, column: 16, scope: !22489)
!22558 = !DILocation(line: 11466, column: 2, scope: !22489)
!22559 = !DILabel(scope: !22489, name: "release_region", file: !3, line: 11467)
!22560 = !DILocation(line: 11467, column: 2, scope: !22489)
!22561 = !DILocation(line: 11468, column: 2, scope: !22489)
!22562 = !DILocation(line: 11469, column: 9, scope: !22489)
!22563 = !DILocation(line: 11469, column: 2, scope: !22489)
!22564 = !DILocation(line: 11470, column: 1, scope: !22489)
!22565 = distinct !DISubprogram(name: "advansys_isa_irq_no", scope: !3, file: !3, line: 11422, type: !22462, scopeLine: 11423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22566 = !DILocalVariable(name: "iop_base", arg: 1, scope: !22565, file: !3, line: 11422, type: !7)
!22567 = !DILocation(line: 11422, column: 50, scope: !22565)
!22568 = !DILocalVariable(name: "cfg_lsw", scope: !22565, file: !3, line: 11424, type: !303)
!22569 = !DILocation(line: 11424, column: 17, scope: !22565)
!22570 = !DILocation(line: 11424, column: 27, scope: !22565)
!22571 = !DILocalVariable(name: "chip_irq", scope: !22565, file: !3, line: 11425, type: !7)
!22572 = !DILocation(line: 11425, column: 15, scope: !22565)
!22573 = !DILocation(line: 11425, column: 28, scope: !22565)
!22574 = !DILocation(line: 11425, column: 36, scope: !22565)
!22575 = !DILocation(line: 11425, column: 42, scope: !22565)
!22576 = !DILocation(line: 11425, column: 50, scope: !22565)
!22577 = !DILocation(line: 11426, column: 6, scope: !22578)
!22578 = distinct !DILexicalBlock(scope: !22565, file: !3, line: 11426, column: 6)
!22579 = !DILocation(line: 11426, column: 15, scope: !22578)
!22580 = !DILocation(line: 11426, column: 6, scope: !22565)
!22581 = !DILocation(line: 11427, column: 12, scope: !22578)
!22582 = !DILocation(line: 11427, column: 3, scope: !22578)
!22583 = !DILocation(line: 11428, column: 9, scope: !22565)
!22584 = !DILocation(line: 11428, column: 2, scope: !22565)
!22585 = distinct !DISubprogram(name: "isa_register_driver", scope: !6105, file: !6105, line: 31, type: !22586, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22586 = !DISubroutineType(types: !22587)
!22587 = !{!245, !6153, !7}
!22588 = !DILocalVariable(name: "d", arg: 1, scope: !22585, file: !6105, line: 31, type: !6153)
!22589 = !DILocation(line: 31, column: 58, scope: !22585)
!22590 = !DILocalVariable(name: "i", arg: 2, scope: !22585, file: !6105, line: 31, type: !7)
!22591 = !DILocation(line: 31, column: 74, scope: !22585)
!22592 = !DILocation(line: 33, column: 2, scope: !22585)
!22593 = distinct !DISubprogram(name: "eisa_driver_register", scope: !6013, file: !6013, line: 74, type: !22594, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !233)
!22594 = !DISubroutineType(types: !22595)
!22595 = !{!245, !6146}
!22596 = !DILocalVariable(name: "edrv", arg: 1, scope: !22593, file: !6013, line: 74, type: !6146)
!22597 = !DILocation(line: 74, column: 61, scope: !22593)
!22598 = !DILocation(line: 74, column: 69, scope: !22593)
